; ModuleID = 'blender/source/blender/blenloader/intern/writefile.c'
source_filename = "blender/source/blender/blenloader/intern/writefile.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.Global = type { %struct.Main*, [1024 x i8], [1024 x i8], i8, i8, i8, %struct.ListBase, i8, i8, i8, i16, i16, i16, i8, i16, i32, i32, i8, i32, i32, [200 x i8] }
%struct.Main = type { %struct.Main*, %struct.Main*, [1024 x i8], i16, i16, i16, i16, i64, [16 x i8], i16, %struct.Library*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, [256 x i8], %struct.EvaluationContext*, %struct.MainLock* }
%struct.Library = type { %struct.ID, %struct.ID*, %struct.FileData*, [1024 x i8], [1024 x i8], %struct.Library*, %struct.PackedFile* }
%struct.ID = type { i8*, i8*, %struct.ID*, %struct.Library*, [66 x i8], i16, i32, i32, i32, %struct.IDProperty* }
%struct.IDProperty = type { %struct.IDProperty*, %struct.IDProperty*, i8, i8, i16, [64 x i8], i32, %struct.IDPropertyData, i32, i32 }
%struct.IDPropertyData = type { i8*, %struct.ListBase, i32, i32 }
%struct.FileData = type { %struct.ListBase, i32, i32, i32, i32, i32 (%struct.FileData*, i8*, i32)*, i8*, %struct.MemFile*, i32, %struct.gzFile_s*, [1024 x i8], i8, i32, %struct.z_stream_s, %struct.SDNA*, %struct.SDNA*, i8*, i32, i32, i32, i32, %struct.OldNewMap*, %struct.OldNewMap*, %struct.OldNewMap*, %struct.OldNewMap*, %struct.OldNewMap*, %struct.OldNewMap*, %struct.BHeadSort*, i32, %struct.ListBase*, %struct.BlendFileData**, %struct.ReportList* }
%struct.MemFile = type { %struct.ListBase, i32 }
%struct.gzFile_s = type { i32, i8*, i64 }
%struct.z_stream_s = type { i8*, i32, i64, i8*, i32, i64, i8*, %struct.internal_state*, i8* (i8*, i32, i32)*, void (i8*, i8*)*, i8*, i32, i64, i64 }
%struct.internal_state = type { i32 }
%struct.SDNA = type { i8*, i32, i32, i8**, i32, i32, i8**, i16*, i32, i16**, %struct.GHash*, i32 }
%struct.GHash = type opaque
%struct.OldNewMap = type opaque
%struct.BHeadSort = type opaque
%struct.BlendFileData = type { %struct.Main*, %struct.UserDef*, i32, i32, i32, i32, [1024 x i8], %struct.bScreen*, %struct.Scene*, i32 }
%struct.UserDef = type { i32, i32, i32, i32, i32, [768 x i8], [768 x i8], [1024 x i8], [768 x i8], [768 x i8], [768 x i8], [768 x i8], [768 x i8], [1024 x i8], [1024 x i8], i32, i16, i16, i16, i16, i16, i16, i32, i32, i32, i16, i16, i32, i32, i32, i32, i32, i32, i32, i16, i16, i16, i16, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, [64 x i8], i16, i16, i16, i16, i16, i16, i16, i16, [3 x %struct.SolidLight], i16, i16, i16, i16, i16, i16, i16, i16, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i8, i8, i8, i8, i16, i16, i16, i16, i16, i16, float, float, i32, i16, i16, float, i16, i16, i16, i16, %struct.ColorBand, [3 x float], [4 x float], i16, i8, i8, [80 x i8], [1024 x i8], i32, i32, float, float, i32, i16, i16, i16, i16, i16, i16, %struct.WalkNavigation }
%struct.SolidLight = type { i32, i32, [4 x float], [4 x float], [4 x float] }
%struct.ColorBand = type { i16, i16, i8, i8, i8, [1 x i8], [32 x %struct.CBData] }
%struct.CBData = type { float, float, float, float, float, i32 }
%struct.WalkNavigation = type { float, float, float, float, float, float, i16, [3 x i16] }
%struct.bScreen = type { %struct.ID, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.Scene*, %struct.Scene*, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, %struct.wmTimer*, i8* }
%struct.wmTimer = type opaque
%struct.Scene = type { %struct.ID, %struct.AnimData*, %struct.Object*, %struct.World*, %struct.Scene*, %struct.ListBase, %struct.Base*, %struct.Object*, [3 x float], [3 x float], [3 x float], [3 x float], i32, i32, i32, i16, i8, [1 x i8], %struct.bNodeTree*, %struct.Editing*, %struct.ToolSettings*, %struct.SceneStats*, %struct.RenderData, %struct.AudioData, %struct.ListBase, %struct.ListBase, i8*, i8*, i8*, i8*, i8*, %struct.DagForest*, i16, i16, i32, %struct.ListBase, %struct.GameFraming, %struct.GameData, %struct.UnitSettings, %struct.bGPdata*, %struct.PhysicsSettings, %struct.MovieClip*, i64, i64, %struct.ColorManagedViewSettings, %struct.ColorManagedDisplaySettings, %struct.ColorManagedColorspaceSettings, %struct.RigidBodyWorld* }
%struct.AnimData = type { %struct.bAction*, %struct.bAction*, %struct.AnimMapper*, %struct.ListBase, %struct.NlaStrip*, %struct.ListBase, %struct.ListBase, i32, i32, i16, i16, float }
%struct.bAction = type { %struct.ID, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, i32, i32, i32, i32 }
%struct.AnimMapper = type { %struct.AnimMapper*, %struct.AnimMapper*, %struct.bAction*, %struct.ListBase }
%struct.NlaStrip = type { %struct.NlaStrip*, %struct.NlaStrip*, %struct.ListBase, %struct.bAction*, %struct.AnimMapper*, %struct.ListBase, %struct.ListBase, [64 x i8], float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i16, i8*, i32, i32 }
%struct.World = type { %struct.ID, %struct.AnimData*, i16, i16, i16, i16, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i16, i16, i16, i16, i16, float, float, float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i16, float, float, float, float, i16, i16, i16, i16, float, float, float, float, float, float, float, i16, i16, i16, i16, i16, i16, float*, float*, %struct.Ipo*, [18 x %struct.MTex*], i16, i16, [2 x i16], %struct.PreviewImage*, %struct.bNodeTree* }
%struct.Ipo = type opaque
%struct.MTex = type { i16, i16, i16, i16, %struct.Object*, %struct.Tex*, [64 x i8], i8, i8, i8, i8, [3 x float], [3 x float], float, i16, i16, i16, i16, i16, i16, i8, [7 x i8], float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float }
%struct.Tex = type { %struct.ID, %struct.AnimData*, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, float, float, float, float, i32, i32, i16, i16, i16, i16, i32, i32, i32, i32, float, float, float, %struct.ImageUser, %struct.bNodeTree*, %struct.Ipo*, %struct.Image*, %struct.ColorBand*, %struct.EnvMap*, %struct.PreviewImage*, %struct.PointDensity*, %struct.VoxelData*, %struct.OceanTex*, i8, [7 x i8] }
%struct.ImageUser = type { %struct.Scene*, i32, i32, i32, i32, i8, i8, i8, i8, i16, i16, i16, i16, i32 }
%struct.Image = type { %struct.ID, [1024 x i8], %struct.MovieCache*, %struct.GPUTexture*, %struct.anim*, %struct.RenderResult*, [8 x %struct.RenderResult*], i16, i16, i16, i16, i16, i16, i32, i16, i16, i16, i16, i16, i16, i32, i32*, %struct.PackedFile*, %struct.PreviewImage*, float, i32, i16, i16, i32, i32, i8, i8, i16, [4 x float], float, float, %struct.ColorManagedColorspaceSettings, i8, [7 x i8], [8 x %struct.RenderSlot] }
%struct.MovieCache = type opaque
%struct.GPUTexture = type opaque
%struct.anim = type opaque
%struct.RenderResult = type opaque
%struct.RenderSlot = type { [64 x i8] }
%struct.EnvMap = type { %struct.Object*, %struct.Image*, [6 x %struct.ImBuf*], [4 x [4 x float]], [3 x [3 x float]], i16, i16, float, float, float, i32, i16, i16, i32, i32, i16, i16 }
%struct.ImBuf = type opaque
%struct.PointDensity = type { i16, i16, float, float, i16, i16, i32, i32, %struct.Object*, i32, i16, i16, i8*, float*, float, i16, i16, i16, [3 x i16], float, float, float, float, %struct.ColorBand*, %struct.CurveMapping* }
%struct.CurveMapping = type { i32, i32, i32, i32, %struct.rctf, %struct.rctf, [4 x %struct.CurveMap], [3 x float], [3 x float], [3 x float], [3 x float] }
%struct.rctf = type { float, float, float, float }
%struct.CurveMap = type { i16, i16, float, float, float, [2 x float], [2 x float], %struct.CurveMapPoint*, %struct.CurveMapPoint*, %struct.CurveMapPoint*, [2 x float], [2 x float] }
%struct.CurveMapPoint = type { float, float, i16, i16 }
%struct.VoxelData = type { [3 x i32], i32, i16, i16, i16, i16, i16, i16, i32, %struct.Object*, float, i32, [1024 x i8], float*, i32, i32 }
%struct.OceanTex = type { %struct.Object*, [64 x i8], i32, i32 }
%struct.PreviewImage = type { [2 x i32], [2 x i32], [2 x i16], [2 x i16], [2 x i32*], [2 x %struct.GPUTexture*] }
%struct.Base = type { %struct.Base*, %struct.Base*, i32, i32, i32, i16, i16, %struct.Object* }
%struct.Object = type { %struct.ID, %struct.AnimData*, %struct.SculptSession*, i16, i16, i32, i32, i32, [64 x i8], %struct.Object*, %struct.Object*, %struct.Object*, %struct.Object*, %struct.Object*, %struct.Ipo*, %struct.BoundBox*, %struct.bAction*, %struct.bAction*, %struct.bPose*, i8*, %struct.bGPdata*, %struct.bAnimVizSettings, %struct.bMotionPath*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, i32, i32, %struct.Material**, i8*, i32, i32, [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [4 x float], [4 x float], [3 x float], [3 x float], float, float, [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i8, i8, i32, i32, i32, i32, i32, float, float, float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i8, i8, i16, i8, i8, float, float, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, float, i16, i16, [4 x float], i32, i32, %struct.BulletSoftBody*, i8, i8, i16, [3 x float], %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.PartDeflect*, %struct.SoftBody*, %struct.Group*, i8, i8, i16, float, %struct.FluidsimSettings*, %struct.CurveCache*, %struct.DerivedMesh*, %struct.DerivedMesh*, i64, i64, i32, i32, %struct.ListBase, %struct.ListBase, %struct.ListBase*, %struct.RigidBodyOb*, %struct.RigidBodyCon*, [2 x float], %struct.ImageUser*, %struct.ListBase, %struct.LodLevel* }
%struct.SculptSession = type opaque
%struct.BoundBox = type { [8 x [3 x float]], i32, i32 }
%struct.bPose = type { %struct.ListBase, %struct.GHash*, i16, i16, i32, i32, float, [3 x float], [3 x float], %struct.ListBase, i32, i32, i8*, i8*, %struct.bAnimVizSettings, [64 x i8] }
%struct.bAnimVizSettings = type { i32, i32, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i32, i32, i32, i32 }
%struct.bMotionPath = type { %struct.bMotionPathVert*, i32, i32, i32, i32 }
%struct.bMotionPathVert = type { [3 x float], i32 }
%struct.Material = type { %struct.ID, %struct.AnimData*, i16, i16, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, %struct.VolumeSettings, %struct.GameSettings, float, float, float, float, float, float, float, i16, i16, i16, i8, i8, float, float, i16, i16, float, float, float, float, i16, i16, i32, i32, i32, i32, i16, i16, i16, i16, float, float, float, float, float, float, float, float, float, float, [64 x i8], float, float, float, i32, i8, i8, i8, i8, i16, i16, i16, i8, i8, i16, i16, float, float, [4 x float], float, float, i16, i16, %struct.ColorBand*, %struct.ColorBand*, i8, i8, i8, i8, i16, i16, float, float, [18 x %struct.MTex*], %struct.bNodeTree*, %struct.Ipo*, %struct.Group*, %struct.PreviewImage*, float, float, float, float, float, i16, i16, [3 x float], [3 x float], float, float, float, float, float, float, float, i16, i16, i32, i16, i16, [4 x float], i16, i16, i16, i16, i16, [3 x i16], %struct.TexPaintSlot*, %struct.ListBase }
%struct.VolumeSettings = type { float, float, float, float, [3 x float], [3 x float], [3 x float], float, float, float, i16, i16, i16, i16, float, float, float, float }
%struct.GameSettings = type { i32, i32, i32, i32 }
%struct.TexPaintSlot = type { %struct.Image*, i8*, i32, i32 }
%struct.BulletSoftBody = type { i32, float, float, float, i32, i32, i32, i32, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, i32, i32, float, float }
%struct.PartDeflect = type { i32, i16, i16, i16, i16, i16, i16, i16, i16, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, %struct.Tex*, %struct.RNG*, float, i32, %struct.Object* }
%struct.RNG = type opaque
%struct.SoftBody = type { i32, i32, %struct.BodyPoint*, %struct.BodySpring*, i8, i8, i16, float, [64 x i8], float, float, float, float, float, float, float, float, float, i16, [64 x i8], i16, float, float, [64 x i8], i32, i32, i32, i16, i16, %struct.SBVertex**, i32, i32, float, float, float, float, i16, i16, i16, i16, i16, i16, i16, i16, %struct.SBScratch*, float, float, %struct.PointCache*, %struct.ListBase, %struct.EffectorWeights*, [3 x float], [3 x [3 x float]], [3 x [3 x float]], i32 }
%struct.BodyPoint = type opaque
%struct.BodySpring = type opaque
%struct.SBVertex = type { [4 x float] }
%struct.SBScratch = type opaque
%struct.PointCache = type { %struct.PointCache*, %struct.PointCache*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, [64 x i8], [64 x i8], [64 x i8], [1024 x i8], i8*, %struct.ListBase, %struct.PTCacheEdit*, void (%struct.PTCacheEdit*)* }
%struct.PTCacheEdit = type { %struct.ListBase, %struct.PTCacheUndo*, %struct.PTCacheEditPoint*, %struct.PTCacheID, %struct.ParticleSystem*, %struct.ParticleData*, %struct.KDTree*, float*, i32*, %struct.ParticleCacheKey**, %struct.ListBase, i32, i32, i32, i32, [3 x i8], [3 x i8] }
%struct.PTCacheUndo = type { %struct.PTCacheUndo*, %struct.PTCacheUndo*, %struct.PTCacheEditPoint*, %struct.ParticleData*, %struct.KDTree*, float*, i32, %struct.ListBase, i32, [64 x i8] }
%struct.PTCacheEditPoint = type { %struct.PTCacheEditKey*, i32, i16 }
%struct.PTCacheEditKey = type { float*, float*, float*, float*, [3 x float], float, float, i16 }
%struct.PTCacheID = type { %struct.PTCacheID*, %struct.PTCacheID*, %struct.Scene*, %struct.Object*, i8*, i32, i32, i32, i32, i32, i32, i32, i32 (i32, i8*, i8**, i32)*, void (i32, i8*, i8**, float, float*)*, void (i32, i8*, i8**, float, float, float, float*)*, i32 (%struct.PTCacheFile*, i8*)*, i32 (%struct.PTCacheFile*, i8*)*, void (i8*, %struct.PTCacheMem*, i32)*, void (i8*, %struct.PTCacheMem*, float)*, void (i8*, %struct.PTCacheMem*, float, float, float)*, i32 (i8*, i32)*, void (i8*, i8*)*, i32 (i8*, i32)*, i32 (%struct.PTCacheFile*)*, i32 (%struct.PTCacheFile*)*, %struct.PointCache*, %struct.PointCache**, %struct.ListBase* }
%struct.PTCacheFile = type { %struct._IO_FILE*, i32, i32, i32, i32, i32, i32, %struct.PTCacheData, [8 x i8*] }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct.PTCacheData = type { i32, [3 x float], [3 x float], [4 x float], [3 x float], float, [3 x float], %struct.BoidData }
%struct.BoidData = type { float, [3 x float], i16, i16 }
%struct.PTCacheMem = type { %struct.PTCacheMem*, %struct.PTCacheMem*, i32, i32, i32, i32, [8 x i8*], [8 x i8*], %struct.ListBase }
%struct.ParticleSystem = type { %struct.ParticleSystem*, %struct.ParticleSystem*, %struct.ParticleSettings*, %struct.ParticleData*, %struct.ChildParticle*, %struct.PTCacheEdit*, void (%struct.PTCacheEdit*)*, %struct.ParticleCacheKey**, %struct.ParticleCacheKey**, %struct.ListBase, %struct.ListBase, %struct.ClothModifierData*, %struct.DerivedMesh*, %struct.DerivedMesh*, %struct.Object*, %struct.LatticeDeformData*, %struct.Object*, %struct.ListBase, [64 x i8], [4 x [4 x float]], float, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i16, i16, [3 x [64 x i8]], [12 x i16], i16, i16, i8*, %struct.PointCache*, %struct.ListBase, %struct.ListBase*, %struct.ParticleSpring*, i32, i32, %struct.KDTree*, %struct.BVHTree*, %struct.ParticleDrawData*, float, float }
%struct.ParticleSettings = type { %struct.ID, %struct.AnimData*, %struct.BoidSettings*, %struct.SPHFluidSettings*, %struct.EffectorWeights*, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, float, float, [2 x float], [2 x float], float, float, float, i16, i16, float, float, float, float, float, float, float, float, float, float, float, float, [1 x float], i32, i32, i32, i32, i16, [3 x i16], float, float, float, float, float, float, float, [3 x float], float, float, float, float, float, float, float, [3 x float], float, float, float, float, i32, i32, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, [2 x float], float, float, i32, i32, [18 x %struct.MTex*], %struct.Group*, %struct.ListBase, %struct.Group*, %struct.Object*, %struct.Object*, %struct.Ipo*, %struct.PartDeflect*, %struct.PartDeflect*, i16, [3 x i16] }
%struct.BoidSettings = type { i32, i32, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, %struct.ListBase }
%struct.SPHFluidSettings = type { float, float, float, float, float, float, float, float, float, float, float, float, float, i32, i32, i16, [3 x i16] }
%struct.ChildParticle = type { i32, i32, [4 x i32], [4 x float], [4 x float], float, float }
%struct.ClothModifierData = type { %struct.ModifierData, %struct.Scene*, %struct.Cloth*, %struct.ClothSimSettings*, %struct.ClothCollSettings*, %struct.PointCache*, %struct.ListBase }
%struct.ModifierData = type { %struct.ModifierData*, %struct.ModifierData*, i32, i32, i32, i32, [64 x i8], %struct.Scene*, i8* }
%struct.Cloth = type opaque
%struct.ClothSimSettings = type { %struct.LinkNode*, float, float, float, [3 x float], float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, i32, i32, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, [4 x i8], %struct.EffectorWeights* }
%struct.LinkNode = type { %struct.LinkNode*, i8* }
%struct.ClothCollSettings = type { %struct.LinkNode*, float, float, float, float, float, float, i32, i16, i16, %struct.Group*, i16, i16, i32 }
%struct.LatticeDeformData = type opaque
%struct.ParticleSpring = type { float, [2 x i32], i32 }
%struct.BVHTree = type opaque
%struct.ParticleDrawData = type opaque
%struct.ParticleData = type { %struct.ParticleKey, %struct.ParticleKey, %struct.HairKey*, %struct.ParticleKey*, %struct.BoidParticle*, i32, float, float, float, i32, i32, [4 x float], float, float, float, i32, i32, i16, i16 }
%struct.ParticleKey = type { [3 x float], [3 x float], [4 x float], [3 x float], float }
%struct.HairKey = type { [3 x float], float, float, i16, i16 }
%struct.BoidParticle = type { %struct.Object*, %struct.BoidData, [3 x float], [3 x float], float }
%struct.KDTree = type opaque
%struct.ParticleCacheKey = type opaque
%struct.EffectorWeights = type { %struct.Group*, [14 x float], float, i16, [3 x i16], i32 }
%struct.Group = type { %struct.ID, %struct.ListBase, i32, [3 x float] }
%struct.FluidsimSettings = type opaque
%struct.CurveCache = type { %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.Path* }
%struct.Path = type { %struct.PathPoint*, i32, float }
%struct.PathPoint = type { [4 x float], [4 x float], float, float }
%struct.DerivedMesh = type { %struct.CustomData, %struct.CustomData, %struct.CustomData, %struct.CustomData, %struct.CustomData, i32, i32, i32, i32, i32, i32, i32, %struct.LinkNode*, %struct.GPUDrawObject*, i32, float, i32, i32, %struct.Material**, i8, void (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, float)*, void (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, i32, %struct.MVert*)*, void (%struct.DerivedMesh*, i32, %struct.MEdge*)*, void (%struct.DerivedMesh*, i32, %struct.MFace*)*, %struct.MVert* (%struct.DerivedMesh*)*, %struct.MEdge* (%struct.DerivedMesh*)*, %struct.MFace* (%struct.DerivedMesh*)*, %struct.MLoop* (%struct.DerivedMesh*)*, %struct.MPoly* (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, %struct.MVert*)*, void (%struct.DerivedMesh*, %struct.MEdge*)*, void (%struct.DerivedMesh*, %struct.MFace*)*, void (%struct.DerivedMesh*, %struct.MLoop*)*, void (%struct.DerivedMesh*, %struct.MPoly*)*, %struct.MVert* (%struct.DerivedMesh*)*, %struct.MEdge* (%struct.DerivedMesh*)*, %struct.MFace* (%struct.DerivedMesh*)*, %struct.MLoop* (%struct.DerivedMesh*)*, %struct.MPoly* (%struct.DerivedMesh*)*, i8* (%struct.DerivedMesh*, i32, i32)*, i8* (%struct.DerivedMesh*, i32, i32)*, i8* (%struct.DerivedMesh*, i32, i32)*, i8* (%struct.DerivedMesh*, i32, i32)*, i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)*, %struct.CustomData* (%struct.DerivedMesh*)*, %struct.CustomData* (%struct.DerivedMesh*)*, %struct.CustomData* (%struct.DerivedMesh*)*, %struct.CustomData* (%struct.DerivedMesh*)*, %struct.CustomData* (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, i32, %struct.CustomData*, i32)*, void (%struct.DerivedMesh*, i32, %struct.CustomData*, i32)*, void (%struct.DerivedMesh*, i32, %struct.CustomData*, i32)*, i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)*, %struct.CCGElem** (%struct.DerivedMesh*)*, %struct.DMGridAdjacency* (%struct.DerivedMesh*)*, i32* (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, %struct.CCGKey*)*, %struct.DMFlagMat* (%struct.DerivedMesh*)*, i32** (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, void (i8*, i32, float*, float*, i16*)*, i8*, i32)*, void (%struct.DerivedMesh*, void (i8*, i32, float*, float*)*, i8*)*, void (%struct.DerivedMesh*, void (i8*, i32, i32, float*, float*)*, i8*, i32)*, void (%struct.DerivedMesh*, void (i8*, i32, float*, float*)*, i8*, i32)*, void (%struct.DerivedMesh*, float*, float*)*, void (%struct.DerivedMesh*, i32, float*)*, void (%struct.DerivedMesh*, [3 x float]*)*, void (%struct.DerivedMesh*, i32, float*)*, void (%struct.DerivedMesh*, i32, float*)*, %struct.MeshElemMap* (%struct.Object*, %struct.DerivedMesh*)*, %struct.PBVH* (%struct.Object*, %struct.DerivedMesh*)*, void (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, i8, i8)*, void (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, [4 x float]*, i8, i32 (i32, i8*)*)*, void (%struct.DerivedMesh*, i32 (%struct.MTFace*, i8, i32)*, i32 (i8*, i32, i32)*, i8*, i32)*, void (%struct.DerivedMesh*, i32 (i32, i8*)*)*, void (%struct.DerivedMesh*, i32 (i8*, i32)*, i32 (i32, i8*)*, i32 (i8*, i32, i32)*, i8*, i32)*, void (%struct.DerivedMesh*, i32 (i8*, i32)*, i32 (i8*, i32, i32)*, i8*, i32)*, void (%struct.DerivedMesh*, i32 (i32, i8*)*, i32 (i8*, i32)*, i8*)*, void (%struct.DerivedMesh*, i32 (i8*, i32)*, i8*)*, void (%struct.DerivedMesh*, i32 (i8*, i32)*, void (i8*, i32, float)*, i8*)*, void (%struct.DerivedMesh*, void (i8*, i32, i8*)*, i8 (i8*, i32)*, i8*)*, void (%struct.DerivedMesh*)* }
%struct.CustomData = type { %struct.CustomDataLayer*, [41 x i32], i32, i32, i32, %struct.BLI_mempool*, %struct.CustomDataExternal* }
%struct.CustomDataLayer = type { i32, i32, i32, i32, i32, i32, i32, i32, [64 x i8], i8* }
%struct.BLI_mempool = type opaque
%struct.CustomDataExternal = type { [1024 x i8] }
%struct.GPUDrawObject = type opaque
%struct.MVert = type { [3 x float], [3 x i16], i8, i8 }
%struct.MEdge = type { i32, i32, i8, i8, i16 }
%struct.MFace = type { i32, i32, i32, i32, i16, i8, i8 }
%struct.MLoop = type { i32, i32 }
%struct.MPoly = type { i32, i32, i16, i8, i8 }
%struct.CCGElem = type opaque
%struct.DMGridAdjacency = type { [4 x i32], [4 x i32] }
%struct.CCGKey = type opaque
%struct.DMFlagMat = type { i16, i8 }
%struct.MeshElemMap = type opaque
%struct.PBVH = type opaque
%struct.MTFace = type { [4 x [2 x float]], %struct.Image*, i8, i8, i16, i16, i16 }
%struct.RigidBodyOb = type { i8*, i8*, i16, i16, i32, i32, i16, i16, float, float, float, float, float, float, float, float, [4 x float], [3 x float], float }
%struct.RigidBodyCon = type { %struct.Object*, %struct.Object*, i16, i16, i32, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, i8* }
%struct.LodLevel = type { %struct.LodLevel*, %struct.LodLevel*, %struct.Object*, i32, float }
%struct.bNodeTree = type { %struct.ID, %struct.AnimData*, %struct.bNodeTreeType*, [64 x i8], %struct.StructRNA*, %struct.bGPdata*, [2 x float], %struct.ListBase, %struct.ListBase, i32, i32, i32, i32, i32, i16, i16, i32, i32, i16, i16, i32, %struct.rctf, %struct.ListBase, %struct.ListBase, %struct.bNodeInstanceHash*, %struct.bNodeInstanceKey, i32, %struct.bNodeTreeExec*, void (i8*, float)*, void (i8*, i8*)*, i32 (i8*)*, void (i8*)*, i8*, i8*, i8*, i8* }
%struct.bNodeTreeType = type { i32, [64 x i8], [64 x i8], [256 x i8], i32, void (%struct.bNodeTree*)*, void (%struct.bNodeTree*, %struct.bNode*)*, void (%struct.Scene*, i8*, void (i8*, i32, i8*)*)*, i32 (%struct.bContext*, %struct.bNodeTreeType*)*, void (%struct.bContext*, %struct.bNodeTreeType*, %struct.bNodeTree**, %struct.ID**, %struct.ID**)*, void (%struct.bNodeTree*, %struct.bNodeTree*)*, void (%struct.bNodeTree*, %struct.bNodeTree*)*, void (%struct.bNodeTree*, %struct.bNodeTree*)*, void (%struct.bNodeTree*)*, i32 (%struct.bNodeTree*, %struct.bNodeLink*)*, void (%struct.bNodeTree*, %struct.bNode*)*, %struct.ExtensionRNA }
%struct.bContext = type opaque
%struct.bNodeLink = type { %struct.bNodeLink*, %struct.bNodeLink*, %struct.bNode*, %struct.bNode*, %struct.bNodeSocket*, %struct.bNodeSocket*, i32, i32 }
%struct.bNode = type { %struct.bNode*, %struct.bNode*, %struct.bNode*, %struct.IDProperty*, %struct.bNodeType*, [64 x i8], [64 x i8], i32, i16, i16, i16, i16, i16, i16, i16, i16, [3 x float], %struct.ListBase, %struct.ListBase, %struct.bNode*, %struct.ID*, i8*, %struct.bNode*, %struct.ListBase, float, float, float, float, float, float, float, i32, [64 x i8], i16, i16, float, float, i16, i16, i8*, %struct.rctf, %struct.rctf, %struct.rctf, i16, i16, i32, %struct.uiBlock* }
%struct.bNodeType = type { i8*, i8*, i16, [64 x i8], i32, [64 x i8], [256 x i8], i32, float, float, float, float, float, float, i16, i16, i16, %struct.bNodeSocketTemplate*, %struct.bNodeSocketTemplate*, [64 x i8], void (%struct.bContext*, %struct.ARegion*, %struct.SpaceNode*, %struct.bNodeTree*, %struct.bNode*, i32)*, void (%struct.bContext*, %struct.bNodeTree*, %struct.bNode*)*, void (%struct.uiLayout*, %struct.bContext*, %struct.PointerRNA*)*, void (%struct.uiLayout*, %struct.bContext*, %struct.PointerRNA*)*, void (%struct.SpaceNode*, %struct.ImBuf*, %struct.bNode*, i32, i32)*, void (%struct.bNodeTree*, %struct.bNode*, i8*, i32)*, i32 (%struct.bNode*, i32, i32)*, i32 (%struct.bNode*, i32, i32)*, i32 (%struct.bNode*, i32, i32)*, {}*, void (%struct.bNodeTree*, %struct.bNode*, %struct.ID*)*, {}*, void (%struct.bNode*)*, void (%struct.bNodeTree*, %struct.bNode*, %struct.bNode*)*, void (%struct.bContext*, %struct.PointerRNA*)*, void (%struct.PointerRNA*)*, void (%struct.PointerRNA*, %struct.bNode*)*, i32 (%struct.bNodeType*, %struct.bNodeTree*)*, i32 (%struct.bNode*, %struct.bNodeTree*)*, {}*, i8* (%struct.bNodeExecContext*, %struct.bNode*, i32)*, void (i8*)*, void (i8*, i32, %struct.bNode*, %struct.bNodeExecData*, %struct.bNodeStack**, %struct.bNodeStack**)*, i32 (%struct.GPUMaterial*, %struct.bNode*, %struct.bNodeExecData*, %struct.GPUNodeStack*, %struct.GPUNodeStack*)*, %struct.ExtensionRNA }
%struct.bNodeSocketTemplate = type { i32, i32, [64 x i8], float, float, float, float, float, float, i32, i32, %struct.bNodeSocket*, [64 x i8] }
%struct.ARegion = type { %struct.ARegion*, %struct.ARegion*, %struct.View2D, %struct.rcti, %struct.rcti, i16, i16, i16, i16, i16, i16, float, i16, i16, i16, i16, i16, i16, i16, i16, %struct.ARegionType*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.wmTimer*, i8*, i8* }
%struct.View2D = type { %struct.rctf, %struct.rctf, %struct.rcti, %struct.rcti, %struct.rcti, [2 x float], [2 x float], float, float, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, float*, i32, i32, %struct.SmoothView2DStore*, %struct.wmTimer* }
%struct.SmoothView2DStore = type opaque
%struct.rcti = type { i32, i32, i32, i32 }
%struct.ARegionType = type opaque
%struct.SpaceNode = type { %struct.SpaceLink*, %struct.SpaceLink*, %struct.ListBase, i32, float, [8 x i16], %struct.View2D, %struct.ID*, %struct.ID*, i16, i16, float, float, float, float, float, [2 x float], %struct.ListBase, %struct.bNodeTree*, %struct.bNodeTree*, [64 x i8], i32, i32, i16, i16, i16, i16, %struct.ListBase, %struct.bGPdata* }
%struct.SpaceLink = type { %struct.SpaceLink*, %struct.SpaceLink*, %struct.ListBase, i32, float, [8 x i16] }
%struct.uiLayout = type opaque
%struct.PointerRNA = type { %struct.anon, %struct.StructRNA*, i8* }
%struct.anon = type { i8* }
%struct.bNodeExecContext = type opaque
%struct.bNodeExecData = type opaque
%struct.bNodeStack = type { [4 x float], float, float, i8*, i16, i16, i16, i16, i16, i16, [2 x i16] }
%struct.GPUMaterial = type opaque
%struct.GPUNodeStack = type opaque
%struct.uiBlock = type opaque
%struct.bNodeSocket = type { %struct.bNodeSocket*, %struct.bNodeSocket*, %struct.bNodeSocket*, %struct.IDProperty*, [64 x i8], [64 x i8], i8*, i16, i16, i16, i16, %struct.bNodeSocketType*, [64 x i8], float, float, i8*, i16, i16, i32, i8*, i32, i32, %struct.bNodeSocket*, %struct.bNodeLink*, %struct.bNodeStack }
%struct.bNodeSocketType = type { [64 x i8], void (%struct.bContext*, %struct.uiLayout*, %struct.PointerRNA*, %struct.PointerRNA*, i8*)*, void (%struct.bContext*, %struct.PointerRNA*, %struct.PointerRNA*, float*)*, void (%struct.bContext*, %struct.uiLayout*, %struct.PointerRNA*)*, void (%struct.bContext*, %struct.PointerRNA*, float*)*, void (%struct.bNodeTree*, %struct.bNodeSocket*, %struct.StructRNA*)*, void (%struct.bNodeTree*, %struct.bNodeSocket*, %struct.bNode*, %struct.bNodeSocket*, i8*)*, void (%struct.bNodeTree*, %struct.bNodeSocket*, %struct.bNode*, %struct.bNodeSocket*, i8*)*, void (%struct.bNodeTree*, %struct.bNodeSocket*, %struct.bNode*, %struct.bNodeSocket*)*, %struct.ExtensionRNA, %struct.ExtensionRNA, i32, i32 }
%struct.ExtensionRNA = type { i8*, %struct.StructRNA*, i32 (%struct.bContext*, %struct.PointerRNA*, %struct.FunctionRNA*, %struct.ParameterList*)*, void (i8*)* }
%struct.FunctionRNA = type opaque
%struct.ParameterList = type { i8*, %struct.FunctionRNA*, i32, i32, i32 }
%struct.StructRNA = type opaque
%struct.bNodeInstanceHash = type { %struct.GHash* }
%struct.bNodeInstanceKey = type { i32 }
%struct.bNodeTreeExec = type opaque
%struct.Editing = type { %struct.ListBase*, %struct.ListBase, %struct.ListBase, %struct.Sequence*, [1024 x i8], [1024 x i8], i32, i32, i32, i32, %struct.rctf }
%struct.Sequence = type { %struct.Sequence*, %struct.Sequence*, i8*, i8*, [64 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, float, float, i16, i16, i32, i32, %struct.Strip*, %struct.Ipo*, %struct.Scene*, %struct.Object*, %struct.MovieClip*, %struct.Mask*, %struct.anim*, float, float, %struct.Sequence*, %struct.Sequence*, %struct.Sequence*, %struct.ListBase, %struct.bSound*, i8*, float, float, float, float, i8*, i32, i32, i32, float, i32, i8, [3 x i8], %struct.ListBase }
%struct.Strip = type { %struct.Strip*, %struct.Strip*, i32, i32, i32, i32, %struct.StripElem*, [768 x i8], %struct.StripProxy*, %struct.StripCrop*, %struct.StripTransform*, %struct.StripColorBalance*, %struct.ColorManagedColorspaceSettings }
%struct.StripElem = type { [256 x i8], i32, i32 }
%struct.StripProxy = type { [768 x i8], [256 x i8], %struct.anim*, i16, i16, i16, i16 }
%struct.StripCrop = type { i32, i32, i32, i32 }
%struct.StripTransform = type { i32, i32 }
%struct.StripColorBalance = type { [3 x float], [3 x float], [3 x float], i32, i32 }
%struct.Mask = type { %struct.ID, %struct.AnimData*, %struct.ListBase, i32, i32, i32, i32, i32, i32 }
%struct.bSound = type { %struct.ID, [1024 x i8], %struct.PackedFile*, i8*, %struct.PackedFile*, %struct.Ipo*, float, float, float, float, float, float, i32, i32, i8*, i8*, i8* }
%struct.ToolSettings = type { %struct.VPaint*, %struct.VPaint*, %struct.Sculpt*, %struct.UvSculpt*, float, float, float, i16, i16, i8, i8, i8, i8, float, i16, i8, [5 x i8], %struct.ImagePaintSettings, %struct.ParticleEditSettings, float, float, i16, i16, i8, [1 x i8], i16, float, float, float, float, float, float, float, float, float, float, i16, i8, i8, [3 x i8], i8, %struct.Object*, i8, i8, i8, i8, i8, [8 x i8], [8 x i8], i8, i8, i8, i8, i8, i16, i16, i16, i16, i8, i8, i8, i8, i8, i8, i32, i32, i32, i32, i16, i16, i32, float, float, %struct.UnifiedPaintSettings, %struct.MeshStatVis }
%struct.VPaint = type { %struct.Paint, i16, i16, i32, i32*, %struct.MDeformVert*, i8* }
%struct.Paint = type { %struct.Brush*, %struct.Palette*, i8*, [4 x i8], i32, i32, i32 }
%struct.Brush = type { %struct.ID, %struct.BrushClone, %struct.CurveMapping*, %struct.MTex, %struct.MTex, %struct.Brush*, %struct.ImBuf*, %struct.PreviewImage*, %struct.ColorBand*, %struct.PaintCurve*, [1024 x i8], float, i16, i16, float, i32, i32, i32, float, i32, i32, i32, i32, float, float, [3 x float], float, [3 x float], i32, float, float, i32, i32, i32, i8, i8, i8, i8, float, float, float, float, float, i32, i32, i32, float, float, i32, i32, float, [3 x float], [3 x float], [2 x float], [2 x float], [2 x float], [2 x float] }
%struct.BrushClone = type { %struct.Image*, [2 x float], float, float }
%struct.PaintCurve = type { %struct.ID, %struct.PaintCurvePoint*, i32, i32 }
%struct.PaintCurvePoint = type { %struct.BezTriple, float }
%struct.BezTriple = type { [3 x [3 x float]], float, float, float, i8, i8, i8, i8, i8, i8, i8, i8, float, float, float, [4 x i8] }
%struct.Palette = type { %struct.ID, %struct.ListBase, %struct.ListBase, i32, i32 }
%struct.MDeformVert = type { %struct.MDeformWeight*, i32, i32 }
%struct.MDeformWeight = type { i32, float }
%struct.Sculpt = type { %struct.Paint, i32, [3 x i32], float, i32, float, float, %struct.Object*, i8* }
%struct.UvSculpt = type { %struct.Paint }
%struct.ImagePaintSettings = type { %struct.Paint, i16, i16, i16, i16, [2 x i16], i32, i8*, %struct.Image*, %struct.Image*, %struct.Image*, [3 x float], float }
%struct.ParticleEditSettings = type { i16, i16, i16, i16, [7 x %struct.ParticleBrushData], i8*, float, float, i32, i32, i32, i32, %struct.Scene*, %struct.Object* }
%struct.ParticleBrushData = type { i16, i16, i16, i16, i32, float }
%struct.UnifiedPaintSettings = type { i32, float, float, float, [3 x float], [3 x float], i32, [2 x float], float, i32, i32, i8, [7 x i8], float, [2 x float], i32, float, [2 x float], [2 x float], i32, %struct.ColorSpace*, float, i32 }
%struct.ColorSpace = type opaque
%struct.MeshStatVis = type { i8, [2 x i8], i8, float, float, float, float, i8, [3 x i8], float, float, float, float }
%struct.SceneStats = type opaque
%struct.RenderData = type { %struct.ImageFormatData, %struct.AviCodecData*, %struct.QuicktimeCodecData*, %struct.QuicktimeCodecSettings, %struct.FFMpegCodecData, i32, i32, i32, float, i32, i32, i32, i32, i16, i16, float, float, float, float, float, i16, i16, i16, i16, i16, i16, i32, i16, i16, i16, i16, i16, i16, i32, i32, i16, i16, i32, i32, i16, i16, i16, i16, i16, i8, i8, i32, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, %struct.rctf, %struct.rctf, %struct.rcti, %struct.ListBase, i16, i16, float, float, float, float, i32, float, float, float, float, i16, i16, i16, i16, i16, i16, float, float, i16, i16, float, float, [1024 x i8], i32, i16, i16, [768 x i8], [4 x float], [4 x float], i8, i8, i8, [5 x i8], i32, i16, i16, float, float, i16, i16, float, i16, i16, i32, i16, i16, i16, i16, float, float, %struct.Text*, i32, float, [32 x i8], %struct.BakeData, i32, i32 }
%struct.ImageFormatData = type { i8, i8, i8, i8, i8, i8, i8, i8, i16, i16, float, i8, i8, [6 x i8], %struct.ColorManagedViewSettings, %struct.ColorManagedDisplaySettings }
%struct.AviCodecData = type { i8*, i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [128 x i8] }
%struct.QuicktimeCodecData = type { i8*, i8*, i32, i32, [128 x i8] }
%struct.QuicktimeCodecSettings = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32, i32 }
%struct.FFMpegCodecData = type { i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, i32, i32, i32, %struct.IDProperty* }
%struct.Text = type { %struct.ID, i8*, i32, i32, %struct.ListBase, %struct.TextLine*, %struct.TextLine*, i32, i32, i8*, i32, i32, i8*, double }
%struct.TextLine = type { %struct.TextLine*, %struct.TextLine*, i8*, i8*, i32, i32 }
%struct.BakeData = type { %struct.ImageFormatData, [1024 x i8], i16, i16, i16, i16, float, float, [3 x i8], i8, i8, [3 x i8], [64 x i8] }
%struct.AudioData = type { i32, float, float, float, i32, i16, i16, float, float }
%struct.DagForest = type opaque
%struct.GameFraming = type { [3 x float], i8, i8, i8, i8 }
%struct.GameData = type { %struct.GameFraming, i16, i16, i16, i16, i16, i16, i16, i16, i16, [3 x i16], %struct.GameDome, i16, i16, float, %struct.RecastData, float, float, i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, float, float, float, float, float }
%struct.GameDome = type { i16, i16, i16, i16, float, float, %struct.Text* }
%struct.RecastData = type { float, float, float, float, float, float, float, float, float, float, i32, float, float, i16, i16 }
%struct.UnitSettings = type { float, i8, i8, i16 }
%struct.bGPdata = type { %struct.ID, %struct.ListBase, i32, i16, i16, i8* }
%struct.PhysicsSettings = type { [3 x float], i32, i32, i32 }
%struct.MovieClip = type { %struct.ID, %struct.AnimData*, [1024 x i8], i32, i32, [2 x i32], float, float, %struct.anim*, %struct.MovieClipCache*, %struct.bGPdata*, %struct.MovieTracking, i8*, %struct.MovieClipProxy, i32, i32, i32, i32, %struct.ColorManagedColorspaceSettings }
%struct.MovieClipCache = type opaque
%struct.MovieTracking = type { %struct.MovieTrackingSettings, %struct.MovieTrackingCamera, %struct.ListBase, %struct.ListBase, %struct.MovieTrackingReconstruction, %struct.MovieTrackingStabilization, %struct.MovieTrackingTrack*, %struct.MovieTrackingPlaneTrack*, %struct.ListBase, i32, i32, %struct.MovieTrackingStats*, %struct.MovieTrackingDopesheet }
%struct.MovieTrackingSettings = type { i32, i16, i16, float, i16, i16, i16, i16, i16, i16, float, i16, i16, i32, i32, i32, i16, i16, float, i32, i32, float, float, i32 }
%struct.MovieTrackingCamera = type { i8*, i16, i16, float, float, float, i16, i16, [2 x float], float, float, float, float, float }
%struct.MovieTrackingReconstruction = type { i32, float, i32, i32, %struct.MovieReconstructedCamera* }
%struct.MovieReconstructedCamera = type { i32, float, [4 x [4 x float]] }
%struct.MovieTrackingStabilization = type { i32, i32, i32, float, %struct.MovieTrackingTrack*, float, float, float, i32, i32, float }
%struct.MovieTrackingTrack = type { %struct.MovieTrackingTrack*, %struct.MovieTrackingTrack*, [64 x i8], [2 x float], [2 x float], [2 x float], [2 x float], [2 x float], i32, i32, %struct.MovieTrackingMarker*, [3 x float], float, i32, i32, i32, [3 x float], i16, i16, i16, i16, i32, float, %struct.bGPdata*, float, float }
%struct.MovieTrackingMarker = type { [2 x float], [4 x [2 x float]], [2 x float], [2 x float], i32, i32 }
%struct.MovieTrackingPlaneTrack = type { %struct.MovieTrackingPlaneTrack*, %struct.MovieTrackingPlaneTrack*, [64 x i8], %struct.MovieTrackingTrack**, i32, i32, %struct.MovieTrackingPlaneMarker*, i32, i32, %struct.Image*, float, i32 }
%struct.MovieTrackingPlaneMarker = type { [4 x [2 x float]], i32, i32 }
%struct.MovieTrackingStats = type { [256 x i8] }
%struct.MovieTrackingDopesheet = type { i32, i16, i16, %struct.ListBase, %struct.ListBase, i32, i32 }
%struct.MovieClipProxy = type { [768 x i8], i16, i16, i16, i16 }
%struct.ColorManagedViewSettings = type { i32, i32, [64 x i8], [64 x i8], float, float, %struct.CurveMapping*, i8* }
%struct.ColorManagedDisplaySettings = type { [64 x i8] }
%struct.ColorManagedColorspaceSettings = type { [64 x i8] }
%struct.RigidBodyWorld = type { %struct.EffectorWeights*, %struct.Group*, %struct.Object**, %struct.Group*, i32, float, %struct.PointCache*, %struct.ListBase, i32, i16, i16, i32, float, i8* }
%struct.ReportList = type { %struct.ListBase, i32, i32, i32, i32, %struct.wmTimer* }
%struct.PackedFile = type { i32, i32, i8* }
%struct.EvaluationContext = type opaque
%struct.MainLock = type opaque
%struct.ListBase = type { i8*, i8* }
%struct.WriteData = type { %struct.SDNA*, i32, i8*, %struct.MemFile*, %struct.MemFile*, i32, i32, i32, i32, %struct.WriteWrap*, i8 }
%struct.WriteWrap = type { i8 (%struct.WriteWrap*, i8*)*, i8 (%struct.WriteWrap*)*, i64 (%struct.WriteWrap*, i8*, i64)*, %union.anon }
%union.anon = type { %struct.gzFile_s* }
%struct.BHead = type { i32, i32, i8*, i32, i32 }
%struct.NodeTreeIterStore = type { %struct.bNodeTree*, %struct.Scene*, %struct.Material*, %struct.Tex*, %struct.Lamp*, %struct.World*, %struct.FreestyleLineStyle* }
%struct.Lamp = type { %struct.ID, %struct.AnimData*, i16, i16, i32, i16, i16, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, %struct.CurveMapping*, i16, i16, float, float, float, float, float, float, float, i16, i16, i16, i16, i8, i8, i16, i16, i16, i16, i16, float, float, float, float, i16, i16, i16, i16, i16, i16, float, float, float, float, float, float, float, float, float, float, float, float, float, i16, [2 x i8], %struct.Ipo*, [18 x %struct.MTex*], i16, i16, [4 x i8], %struct.PreviewImage*, %struct.bNodeTree* }
%struct.FreestyleLineStyle = type { %struct.ID, %struct.AnimData*, float, float, float, float, float, i32, float, i32, i32, i32, i32, float, float, float, float, float, i32, i16, i16, i16, i16, i16, i16, i32, i32, float, i16, i16, i16, [3 x i16], i16, i16, i16, i16, i16, i16, i32, [18 x %struct.MTex*], %struct.bNodeTree*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase }
%struct.RenderInfo = type { i32, i32, [64 x i8] }
%struct.FileGlobal = type { [4 x i8], i16, i16, i16, i16, i16, i16, %struct.bScreen*, %struct.Scene*, i32, i32, i64, [16 x i8], [1024 x i8] }
%struct.wmWindowManager = type { %struct.ID, %struct.wmWindow*, %struct.wmWindow*, %struct.ListBase, i32, i16, i16, %struct.ListBase, %struct.ListBase, %struct.ReportList, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.wmKeyConfig*, %struct.wmKeyConfig*, %struct.wmKeyConfig*, %struct.ListBase, %struct.wmTimer*, i8, [7 x i8] }
%struct.wmWindow = type { %struct.wmWindow*, %struct.wmWindow*, i8*, %struct.bScreen*, %struct.bScreen*, [64 x i8], i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i32, i16, i16, %struct.wmEvent*, %struct.wmSubWindow*, %struct.wmGesture*, i32, i32, i8*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase }
%struct.wmEvent = type opaque
%struct.wmSubWindow = type opaque
%struct.wmGesture = type opaque
%struct.wmKeyConfig = type { %struct.wmKeyConfig*, %struct.wmKeyConfig*, [64 x i8], [64 x i8], %struct.ListBase, i32, i32 }
%struct.ScrArea = type { %struct.ScrArea*, %struct.ScrArea*, %struct.ScrVert*, %struct.ScrVert*, %struct.ScrVert*, %struct.ScrVert*, %struct.bScreen*, %struct.rcti, i8, i8, i16, i16, i16, i16, i16, i16, i8, i8, %struct.SpaceType*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase }
%struct.ScrVert = type { %struct.ScrVert*, %struct.ScrVert*, %struct.ScrVert*, %struct.vec2s, i16, i16 }
%struct.vec2s = type { i16, i16 }
%struct.SpaceType = type opaque
%struct.ScrEdge = type { %struct.ScrEdge*, %struct.ScrEdge*, %struct.ScrVert*, %struct.ScrVert*, i16, i16, i32 }
%struct.Panel = type { %struct.Panel*, %struct.Panel*, %struct.PanelType*, %struct.uiLayout*, [64 x i8], [64 x i8], [64 x i8], i32, i32, i32, i32, i16, i16, i16, i16, i16, i16, i32, %struct.Panel*, i8* }
%struct.PanelType = type opaque
%struct.uiList = type { %struct.uiList*, %struct.uiList*, %struct.uiListType*, [64 x i8], i32, i32, i32, i32, i32, i32, [64 x i8], i32, i32, %struct.IDProperty*, %struct.uiListDyn* }
%struct.uiListType = type opaque
%struct.uiListDyn = type { i32, i32, i32, i32, i32, i32, i32, i32*, i32* }
%struct.uiPreview = type { %struct.uiPreview*, %struct.uiPreview*, [64 x i8], i16, [3 x i16] }
%struct.PanelCategoryStack = type { %struct.PanelCategoryStack*, %struct.PanelCategoryStack*, [64 x i8] }
%struct.View3D = type { %struct.SpaceLink*, %struct.SpaceLink*, %struct.ListBase, i32, float, [8 x i16], [4 x float], float, float, i8, [3 x i8], i32, i32, i16, i16, %struct.Object*, %struct.Object*, %struct.rctf, %struct.ListBase, %struct.BGpic*, %struct.View3D*, [64 x i8], i32, i32, i16, i16, i16, i16, i16, i16, float, float, float, float, [3 x float], [3 x float], i16, i16, i16, i8, i8, i8, i8, [2 x i8], %struct.ListBase, %struct.ListBase, %struct.ListBase, i8, i8, i8, [5 x i8], i8*, %struct.Material*, %struct.bGPdata* }
%struct.BGpic = type { %struct.BGpic*, %struct.BGpic*, %struct.Image*, %struct.ImageUser, %struct.MovieClip*, %struct.MovieClipUser, float, float, float, float, i16, i16, i16, i16 }
%struct.MovieClipUser = type { i32, i16, i16 }
%struct.SpaceIpo = type { %struct.SpaceLink*, %struct.SpaceLink*, %struct.ListBase, i32, float, [8 x i16], %struct.View2D, %struct.bDopeSheet*, %struct.ListBase, i16, i16, i32, float, i32 }
%struct.bDopeSheet = type { %struct.ID*, %struct.ListBase, %struct.Group*, [64 x i8], i32, i32, i32, i32 }
%struct.SpaceFile = type { %struct.SpaceLink*, %struct.SpaceLink*, %struct.ListBase, i32, i32, %struct.FileSelectParams*, %struct.FileList*, %struct.ListBase*, %struct.ListBase*, %struct.wmOperator*, %struct.wmTimer*, %struct.FileLayout*, i16, i16, i16, i16 }
%struct.FileSelectParams = type { [96 x i8], [1056 x i8], [256 x i8], [256 x i8], [256 x i8], [64 x i8], i32, i32, i32, i16, i16, i16, i16, i16, i16, [8 x i8] }
%struct.FileList = type opaque
%struct.wmOperator = type { %struct.wmOperator*, %struct.wmOperator*, [64 x i8], %struct.IDProperty*, %struct.wmOperatorType*, i8*, i8*, %struct.PointerRNA*, %struct.ReportList*, %struct.ListBase, %struct.wmOperator*, %struct.uiLayout*, i16, [3 x i16] }
%struct.wmOperatorType = type opaque
%struct.FileLayout = type opaque
%struct.SpaceOops = type { %struct.SpaceLink*, %struct.SpaceLink*, %struct.ListBase, i32, float, [8 x i16], %struct.View2D, %struct.ListBase, %struct.BLI_mempool*, [32 x i8], %struct.TreeStoreElem, i16, i16, i16, i16, i8* }
%struct.TreeStoreElem = type { i16, i16, i16, i16, %struct.ID* }
%struct.SpaceImage = type { %struct.SpaceLink*, %struct.SpaceLink*, %struct.ListBase, i32, i32, %struct.Image*, %struct.ImageUser, %struct.CurveMapping*, %struct.Scopes, %struct.Histogram, %struct.bGPdata*, [2 x float], float, float, float, float, float, i8, i8, i16, i16, i16, i8, i8, i8, i8, %struct.MaskSpaceInfo }
%struct.Scopes = type { i32, i32, i32, float, i32, float, float, i32, float, i32, [3 x [2 x float]], %struct.Histogram, float*, float*, float*, float*, i32, i32 }
%struct.Histogram = type { i32, i32, [256 x float], [256 x float], [256 x float], [256 x float], [256 x float], float, float, i16, i16, i32, [2 x [2 x float]] }
%struct.MaskSpaceInfo = type { %struct.Mask*, i8, i8, i8, [5 x i8] }
%struct.SpaceScript = type { %struct.SpaceLink*, %struct.SpaceLink*, %struct.ListBase, i32, float, %struct.Script*, i16, i16, i32, i8* }
%struct.Script = type { %struct.ID, i8*, i8*, i8*, i8*, i8*, i32, i32, [1024 x i8], [256 x i8] }
%struct.SpaceNla = type { %struct.SpaceLink*, %struct.SpaceLink*, %struct.ListBase, i32, float, [8 x i16], i16, i16, i32, %struct.bDopeSheet*, %struct.View2D }
%struct.bNodeTreePath = type { %struct.bNodeTreePath*, %struct.bNodeTreePath*, %struct.bNodeTree*, %struct.bNodeInstanceKey, i32, [2 x float], [64 x i8] }
%struct.SpaceConsole = type { %struct.SpaceLink*, %struct.SpaceLink*, %struct.ListBase, i32, float, [8 x i16], i32, i32, %struct.ListBase, %struct.ListBase, [256 x i8], [32 x i8], i32, i32 }
%struct.ConsoleLine = type { %struct.ConsoleLine*, %struct.ConsoleLine*, i32, i32, i8*, i32, i32 }
%struct.MovieTrackingObject = type { %struct.MovieTrackingObject*, %struct.MovieTrackingObject*, [64 x i8], i32, float, %struct.ListBase, %struct.ListBase, %struct.MovieTrackingReconstruction, i32, i32 }
%struct.MaskLayer = type { %struct.MaskLayer*, %struct.MaskLayer*, [64 x i8], %struct.ListBase, %struct.ListBase, %struct.MaskSpline*, %struct.MaskSplinePoint*, float, i8, i8, i8, [7 x i8], i8, i8 }
%struct.MaskSpline = type { %struct.MaskSpline*, %struct.MaskSpline*, i16, i8, i8, i32, %struct.MaskSplinePoint*, %struct.MaskParent, %struct.MaskSplinePoint* }
%struct.MaskParent = type { i32, i32, %struct.ID*, [64 x i8], [64 x i8], [2 x float], [4 x [2 x float]] }
%struct.MaskSplinePoint = type { %struct.BezTriple, i32, i32, %struct.MaskSplinePointUW*, %struct.MaskParent }
%struct.MaskSplinePointUW = type { float, float, i32 }
%struct.MaskLayerShape = type { %struct.MaskLayerShape*, %struct.MaskLayerShape*, float*, i32, i32, i8, [7 x i8] }
%struct.MetaStack = type { %struct.MetaStack*, %struct.MetaStack*, %struct.ListBase*, %struct.Sequence*, [2 x i32] }
%struct.TimeMarker = type { %struct.TimeMarker*, %struct.TimeMarker*, i32, [64 x i8], i32, %struct.Object* }
%struct.TransformOrientation = type { %struct.TransformOrientation*, %struct.TransformOrientation*, [64 x i8], [3 x [3 x float]], i32 }
%struct.SceneRenderLayer = type { %struct.SceneRenderLayer*, %struct.SceneRenderLayer*, [64 x i8], %struct.Material*, %struct.Group*, i32, i32, i32, i32, i32, i32, i32, float, %struct.FreestyleConfig }
%struct.FreestyleConfig = type { %struct.ListBase, i32, i32, i32, float, float, float, %struct.ListBase }
%struct.FreestyleModuleConfig = type { %struct.FreestyleModuleConfig*, %struct.FreestyleModuleConfig*, %struct.Text*, i16, [3 x i16] }
%struct.FreestyleLineSet = type { %struct.FreestyleLineSet*, %struct.FreestyleLineSet*, [64 x i8], i32, i32, i16, i16, i32, i32, i32, i32, i32, %struct.Group*, %struct.FreestyleLineStyle* }
%struct.SeqIterator = type { %struct.Sequence**, i32, i32, %struct.Sequence*, i32 }
%struct.Curve = type { %struct.ID, %struct.AnimData*, %struct.BoundBox*, %struct.ListBase, %struct.EditNurb*, %struct.Object*, %struct.Object*, %struct.Object*, %struct.Ipo*, %struct.Key*, %struct.Material**, [3 x float], [3 x float], [3 x float], i16, i16, i16, i16, float, float, i32, i16, i16, i32, float, float, float, i16, i16, i16, i16, i32, i32, [4 x i8], i16, i8, i8, float, float, float, float, float, float, float, float, float, float, i32, i32, i32, i32, i32, i8*, %struct.EditFont*, [64 x i8], %struct.VFont*, %struct.VFont*, %struct.VFont*, %struct.VFont*, %struct.TextBox*, i32, i32, %struct.CharInfo*, %struct.CharInfo, float, float, float, i8, i8, [2 x i8] }
%struct.EditNurb = type { %struct.ListBase, %struct.GHash*, i32, [4 x i8] }
%struct.Key = type { %struct.ID, %struct.AnimData*, %struct.KeyBlock*, [32 x i8], i32, i32, %struct.ListBase, %struct.Ipo*, %struct.ID*, i16, i16, i16, i16, float, i32 }
%struct.KeyBlock = type { %struct.KeyBlock*, %struct.KeyBlock*, float, float, i16, i16, i16, i16, i32, i32, i8*, [64 x i8], [64 x i8], float, float }
%struct.EditFont = type opaque
%struct.VFont = type { %struct.ID, [1024 x i8], %struct.VFontData*, %struct.PackedFile*, %struct.PackedFile* }
%struct.VFontData = type opaque
%struct.TextBox = type { float, float, float, float }
%struct.CharInfo = type { i16, i16, i8, i8, i16 }
%struct.Nurb = type { %struct.Nurb*, %struct.Nurb*, i16, i16, i16, i16, i32, i32, [2 x i16], i16, i16, i16, i16, i16, i16, float*, float*, %struct.BPoint*, %struct.BezTriple*, i16, i16, i32 }
%struct.BPoint = type { [4 x float], float, float, i16, i16, float, float }
%struct.MetaBall = type { %struct.ID, %struct.AnimData*, %struct.ListBase, %struct.ListBase, %struct.ListBase*, %struct.Ipo*, %struct.Material**, i8, i8, i16, i16, i16, [3 x float], [3 x float], [3 x float], float, float, float, %struct.MetaElem* }
%struct.MetaElem = type { %struct.MetaElem*, %struct.MetaElem*, %struct.BoundBox*, i16, i16, i16, i16, float, float, float, [4 x float], float, float, float, float, float, float, float, float*, float* }
%struct.Camera = type { %struct.ID, %struct.AnimData*, i8, i8, i16, float, float, float, float, float, float, float, float, float, float, float, %struct.Ipo*, %struct.Object*, i8, [7 x i8] }
%struct.Lattice = type { %struct.ID, %struct.AnimData*, i16, i16, i16, i16, i16, i16, i16, i16, i8, i8, i8, i8, i32, float, float, float, float, float, float, %struct.BPoint*, %struct.Ipo*, %struct.Key*, %struct.MDeformVert*, [64 x i8], %struct.EditLatt* }
%struct.EditLatt = type { %struct.Lattice*, i32, [4 x i8] }
%struct.Speaker = type { %struct.ID, %struct.AnimData*, %struct.bSound*, float, float, float, float, float, float, float, float, float, float, i16, [3 x i16] }
%struct.GroupObject = type { %struct.GroupObject*, %struct.GroupObject*, %struct.Object*, i8*, i16, [6 x i8] }
%struct.bArmature = type { %struct.ID, %struct.AnimData*, %struct.ListBase, %struct.ListBase, %struct.ListBase*, %struct.Bone*, %struct.EditBone*, i8*, i32, i32, i32, i32, i16, i16, i32, i32, i32, i16, i16, i16, i16, i32, i32, i32, i32, i32, i32 }
%struct.Bone = type { %struct.Bone*, %struct.Bone*, %struct.IDProperty*, %struct.Bone*, %struct.ListBase, [64 x i8], float, [3 x float], [3 x float], [3 x [3 x float]], i32, [3 x float], [3 x float], [4 x [4 x float]], float, float, float, float, float, float, float, float, float, float, [3 x float], i32, i16, [1 x i16] }
%struct.EditBone = type opaque
%struct.bActionGroup = type { %struct.bActionGroup*, %struct.bActionGroup*, %struct.ListBase, i32, i32, [64 x i8], %struct.ThemeWireColor }
%struct.ThemeWireColor = type { [4 x i8], [4 x i8], [4 x i8], i16, i16 }
%struct.Mesh = type { %struct.ID, %struct.AnimData*, %struct.BoundBox*, %struct.Ipo*, %struct.Key*, %struct.Material**, %struct.MSelect*, %struct.MPoly*, %struct.MTexPoly*, %struct.MLoop*, %struct.MLoopUV*, %struct.MLoopCol*, %struct.MFace*, %struct.MTFace*, %struct.TFace*, %struct.MVert*, %struct.MEdge*, %struct.MDeformVert*, %struct.MCol*, %struct.Mesh*, %struct.BMEditMesh*, %struct.CustomData, %struct.CustomData, %struct.CustomData, %struct.CustomData, %struct.CustomData, i32, i32, i32, i32, i32, i32, i32, [3 x float], [3 x float], [3 x float], i32, i16, i16, float, i32, i8, i8, i8, i8, i8, i8, i16, %struct.Multires* }
%struct.MSelect = type { i32, i32 }
%struct.MTexPoly = type { %struct.Image*, i8, i8, i16, i16, i16 }
%struct.MLoopUV = type { [2 x float], i32 }
%struct.MLoopCol = type { i8, i8, i8, i8 }
%struct.TFace = type { i8*, [4 x [2 x float]], [4 x i32], i8, i8, i16, i16, i16 }
%struct.MCol = type { i8, i8, i8, i8 }
%struct.BMEditMesh = type opaque
%struct.Multires = type { %struct.ListBase, %struct.MVert*, i8, i8, i8, i8, i8, i8, i8, i8, %struct.CustomData, %struct.CustomData, i16*, i8* }
%struct.ParticleDupliWeight = type { %struct.ParticleDupliWeight*, %struct.ParticleDupliWeight*, %struct.Object*, i16, i16, i16, i16 }
%struct.BoidState = type { %struct.BoidState*, %struct.BoidState*, %struct.ListBase, %struct.ListBase, %struct.ListBase, [32 x i8], i32, i32, i32, float, i32, i32, float, float }
%struct.PaletteColor = type { %struct.PaletteColor*, %struct.PaletteColor*, [3 x float], float }
%struct.bGPDlayer = type { %struct.bGPDlayer*, %struct.bGPDlayer*, %struct.ListBase, %struct.bGPDframe*, i32, i16, i16, [4 x float], [128 x i8] }
%struct.bGPDframe = type { %struct.bGPDframe*, %struct.bGPDframe*, %struct.ListBase, i32, i32 }
%struct.bGPDstroke = type { %struct.bGPDstroke*, %struct.bGPDstroke*, %struct.bGPDspoint*, i8*, i32, i16, i16, double }
%struct.bGPDspoint = type { float, float, float, float, float }
%struct.bTheme = type { %struct.bTheme*, %struct.bTheme*, [32 x i8], %struct.ThemeUI, %struct.ThemeSpace, %struct.ThemeSpace, %struct.ThemeSpace, %struct.ThemeSpace, %struct.ThemeSpace, %struct.ThemeSpace, %struct.ThemeSpace, %struct.ThemeSpace, %struct.ThemeSpace, %struct.ThemeSpace, %struct.ThemeSpace, %struct.ThemeSpace, %struct.ThemeSpace, %struct.ThemeSpace, %struct.ThemeSpace, %struct.ThemeSpace, %struct.ThemeSpace, [20 x %struct.ThemeWireColor], i32, i32 }
%struct.ThemeUI = type { %struct.uiWidgetColors, %struct.uiWidgetColors, %struct.uiWidgetColors, %struct.uiWidgetColors, %struct.uiWidgetColors, %struct.uiWidgetColors, %struct.uiWidgetColors, %struct.uiWidgetColors, %struct.uiWidgetColors, %struct.uiWidgetColors, %struct.uiWidgetColors, %struct.uiWidgetColors, %struct.uiWidgetColors, %struct.uiWidgetColors, %struct.uiWidgetColors, %struct.uiWidgetColors, %struct.uiWidgetColors, %struct.uiWidgetColors, %struct.uiWidgetStateColors, %struct.uiPanelColors, [4 x i8], float, i16, [3 x i16], [256 x i8], float, [4 x i8], [4 x i8], [4 x i8] }
%struct.uiWidgetColors = type { [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], i16, i16, i16, i16 }
%struct.uiWidgetStateColors = type { [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], float, float }
%struct.uiPanelColors = type { [4 x i8], [4 x i8], i16, i16, i32 }
%struct.ThemeSpace = type { [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], %struct.uiPanelColors, %struct.uiGradientColors, [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], i8, i8, i8, i8, [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], i8, [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [3 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8] }
%struct.uiGradientColors = type { [4 x i8], [4 x i8], i32, i32 }
%struct.wmKeyMap = type { %struct.wmKeyMap*, %struct.wmKeyMap*, %struct.ListBase, %struct.ListBase, [64 x i8], i16, i16, i16, i16, i32 (%struct.bContext*)*, i8* }
%struct.wmKeyMapItem = type { %struct.wmKeyMapItem*, %struct.wmKeyMapItem*, [64 x i8], %struct.IDProperty*, [64 x i8], i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, %struct.PointerRNA* }
%struct.wmKeyMapDiffItem = type { %struct.wmKeyMapDiffItem*, %struct.wmKeyMapDiffItem*, %struct.wmKeyMapItem*, %struct.wmKeyMapItem* }
%struct.bAddon = type { %struct.bAddon*, %struct.bAddon*, [64 x i8], %struct.IDProperty* }
%struct.bPathCompare = type { %struct.bPathCompare*, %struct.bPathCompare*, [768 x i8], i8, [7 x i8] }
%struct.uiStyle = type { %struct.uiStyle*, %struct.uiStyle*, [64 x i8], %struct.uiFontStyle, %struct.uiFontStyle, %struct.uiFontStyle, %struct.uiFontStyle, float, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 }
%struct.uiFontStyle = type { i16, i16, i16, [6 x i8], i16, i16, i16, i16, i16, i16, float, float }
%struct.RegionView3D = type { [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [6 x [4 x float]], [6 x [4 x float]], %struct.BoundBox*, %struct.RegionView3D*, %struct.RenderEngine*, %struct.ViewDepths*, i8*, %struct.SmoothView3DStore*, %struct.wmTimer*, [4 x [4 x float]], [4 x float], float, float, float, float, [3 x float], float, i8, i8, i8, i8, i8, [3 x i8], [2 x float], i16, i16, [4 x float], i16, i16, float, [3 x float], float, [3 x float] }
%struct.RenderEngine = type opaque
%struct.ViewDepths = type opaque
%struct.SmoothView3DStore = type opaque
%struct.TreeStore = type { i32, i32, %struct.TreeStoreElem* }
%struct.AnimOverride = type { %struct.AnimOverride*, %struct.AnimOverride*, i8*, i32, float }
%struct.FCurve = type { %struct.FCurve*, %struct.FCurve*, %struct.bActionGroup*, %struct.ChannelDriver*, %struct.ListBase, %struct.BezTriple*, %struct.FPoint*, i32, float, i16, i16, i32, i8*, i32, [3 x float], float, float }
%struct.ChannelDriver = type { %struct.ListBase, [256 x i8], i8*, float, float, i32, i32 }
%struct.FPoint = type { [2 x float], i32, i32 }
%struct.DriverVar = type { %struct.DriverVar*, %struct.DriverVar*, [64 x i8], [8 x %struct.DriverTarget], i16, i16, float }
%struct.DriverTarget = type { %struct.ID*, i8*, [32 x i8], i16, i16, i32 }
%struct.NlaTrack = type { %struct.NlaTrack*, %struct.NlaTrack*, %struct.ListBase, i32, i32, [64 x i8] }
%struct.Link = type { %struct.Link*, %struct.Link* }
%struct.FModifier = type { %struct.FModifier*, %struct.FModifier*, i8*, [64 x i8], i16, i16, float, float, float, float, float }
%struct.FModifierTypeInfo = type { i16, i16, i16, i16, [64 x i8], [64 x i8], void (%struct.FModifier*)*, void (%struct.FModifier*, %struct.FModifier*)*, void (i8*)*, void (%struct.FModifier*)*, float (%struct.FCurve*, %struct.FModifier*, float, float)*, void (%struct.FCurve*, %struct.FModifier*, float*, float)*, float (%struct.GHash*, %struct.FCurve*, %struct.FModifier*, float, float)*, void (%struct.GHash*, %struct.FCurve*, %struct.FModifier*, float*, float)* }
%struct.FMod_Generator = type { float*, i32, i32, i32, i32 }
%struct.FMod_Envelope = type { %struct.FCM_EnvelopeData*, i32, float, float, float }
%struct.FCM_EnvelopeData = type { float, float, float, i16, i16 }
%struct.FMod_Python = type { %struct.Text*, %struct.IDProperty* }
%struct.KeyingSet = type { %struct.KeyingSet*, %struct.KeyingSet*, %struct.ListBase, [64 x i8], [64 x i8], [240 x i8], [64 x i8], i16, i16, i32 }
%struct.KS_Path = type { %struct.KS_Path*, %struct.KS_Path*, %struct.ID*, [64 x i8], i32, i16, i16, i8*, i32, i16, i16 }
%struct.SequenceModifierData = type { %struct.SequenceModifierData*, %struct.SequenceModifierData*, i32, i32, [64 x i8], i32, i32, %struct.Sequence*, %struct.Mask* }
%struct.SequenceModifierTypeInfo = type { [64 x i8], [64 x i8], i32, void (%struct.SequenceModifierData*)*, void (%struct.SequenceModifierData*)*, void (%struct.SequenceModifierData*, %struct.SequenceModifierData*)*, void (%struct.SequenceModifierData*, %struct.ImBuf*, %struct.ImBuf*)* }
%struct.CurvesModifierData = type { %struct.SequenceModifierData, %struct.CurveMapping }
%struct.HueCorrectModifierData = type { %struct.SequenceModifierData, %struct.CurveMapping }
%struct.NodeShaderScript = type { i32, i32, [1024 x i8], [64 x i8], i8* }
%struct.PTCacheExtra = type { %struct.PTCacheExtra*, %struct.PTCacheExtra*, i32, i32, i8* }
%struct.bProperty = type { %struct.bProperty*, %struct.bProperty*, [64 x i8], i16, i16, i32, i8* }
%struct.bSensor = type { %struct.bSensor*, %struct.bSensor*, i16, i16, i16, i16, i16, i16, i16, i16, [64 x i8], i8*, %struct.bController**, %struct.Object*, i16, i16, i16, i16 }
%struct.bController = type { %struct.bController*, %struct.bController*, %struct.bController*, i16, i16, i16, i16, i16, i16, i16, i16, [64 x i8], i8*, %struct.bActuator**, %struct.bSensor**, i16, i16, i32 }
%struct.bActuator = type { %struct.bActuator*, %struct.bActuator*, %struct.bActuator*, i16, i16, i16, i16, [64 x i8], i8*, %struct.Object* }
%struct.bPoseChannel = type { %struct.bPoseChannel*, %struct.bPoseChannel*, %struct.IDProperty*, %struct.ListBase, [64 x i8], i16, i16, i16, i16, i8, i8, [6 x i8], %struct.Bone*, %struct.bPoseChannel*, %struct.bPoseChannel*, %struct.ListBase, %struct.ListBase, %struct.bMotionPath*, %struct.Object*, %struct.bPoseChannel*, [3 x float], [3 x float], [3 x float], [4 x float], [3 x float], float, i16, i16, [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], float, float, float, i8* }
%struct.bDeformGroup = type { %struct.bDeformGroup*, %struct.bDeformGroup*, [64 x i8], i8, [7 x i8] }
%struct.bConstraint = type { %struct.bConstraint*, %struct.bConstraint*, i8*, i16, i16, i8, i8, [64 x i8], i16, float, float, %struct.Ipo*, float, float }
%struct.bConstraintTypeInfo = type { i16, i16, [32 x i8], [32 x i8], void (%struct.bConstraint*)*, void (%struct.bConstraint*, void (%struct.bConstraint*, %struct.ID**, i8, i8*)*, i8*)*, void (%struct.bConstraint*, %struct.bConstraint*)*, void (i8*)*, i32 (%struct.bConstraint*, %struct.ListBase*)*, void (%struct.bConstraint*, %struct.ListBase*, i8)*, void (%struct.bConstraint*, %struct.bConstraintOb*, %struct.bConstraintTarget*, float)*, void (%struct.bConstraint*, %struct.bConstraintOb*, %struct.ListBase*)* }
%struct.bConstraintOb = type { %struct.Scene*, %struct.Object*, %struct.bPoseChannel*, [4 x [4 x float]], [4 x [4 x float]], i16, i16 }
%struct.bConstraintTarget = type { %struct.bConstraintTarget*, %struct.bConstraintTarget*, %struct.Object*, [64 x i8], [4 x [4 x float]], i16, i16, i16, i16 }
%struct.bPythonConstraint = type { %struct.Text*, %struct.IDProperty*, i32, i32, %struct.ListBase, %struct.Object*, [64 x i8] }
%struct.bSplineIKConstraint = type { %struct.Object*, float*, i16, i16, i16, i16 }
%struct.ParticleTarget = type { %struct.ParticleTarget*, %struct.ParticleTarget*, %struct.Object*, i32, i16, i16, float, float }
%struct.ModifierTypeInfo = type { [32 x i8], [32 x i8], i32, i32, i32, void (%struct.ModifierData*, %struct.ModifierData*)*, void (%struct.ModifierData*, %struct.Object*, %struct.DerivedMesh*, [3 x float]*, i32, i32)*, void (%struct.ModifierData*, %struct.Object*, %struct.DerivedMesh*, [3 x float]*, [3 x [3 x float]]*, i32)*, void (%struct.ModifierData*, %struct.Object*, %struct.BMEditMesh*, %struct.DerivedMesh*, [3 x float]*, i32)*, void (%struct.ModifierData*, %struct.Object*, %struct.BMEditMesh*, %struct.DerivedMesh*, [3 x float]*, [3 x [3 x float]]*, i32)*, %struct.DerivedMesh* (%struct.ModifierData*, %struct.Object*, %struct.DerivedMesh*, i32)*, %struct.DerivedMesh* (%struct.ModifierData*, %struct.Object*, %struct.BMEditMesh*, %struct.DerivedMesh*, i32)*, void (%struct.ModifierData*)*, i64 (%struct.Object*, %struct.ModifierData*)*, void (%struct.ModifierData*)*, i8 (%struct.ModifierData*, i32)*, void (%struct.ModifierData*, %struct.DagForest*, %struct.Scene*, %struct.Object*, %struct.DagNode*)*, i8 (%struct.ModifierData*)*, i8 (%struct.ModifierData*)*, void (%struct.ModifierData*, %struct.Object*, void (i8*, %struct.Object*, %struct.Object**)*, i8*)*, void (%struct.ModifierData*, %struct.Object*, void (i8*, %struct.Object*, %struct.ID**)*, i8*)*, void (%struct.ModifierData*, %struct.Object*, void (i8*, %struct.Object*, %struct.ModifierData*, i8*)*, i8*)* }
%struct.DagNode = type opaque
%struct.HookModifierData = type { %struct.ModifierData, %struct.Object*, [64 x i8], [4 x [4 x float]], [3 x float], float, i32*, i32, float, [64 x i8] }
%struct.SmokeModifierData = type { %struct.ModifierData, %struct.SmokeDomainSettings*, %struct.SmokeFlowSettings*, %struct.SmokeCollSettings*, float, i32 }
%struct.SmokeDomainSettings = type { %struct.SmokeModifierData*, %struct.FLUID_3D*, i8*, %struct.Group*, %struct.Group*, %struct.Group*, %struct.WTURBULENCE*, %struct.GPUTexture*, %struct.GPUTexture*, %struct.GPUTexture*, %struct.GPUTexture*, float*, [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x i32], [3 x float], [3 x float], [4 x [4 x float]], [4 x [4 x float]], [3 x i32], [3 x i32], [3 x i32], [3 x i32], i32, float, float, i32, i32, float, float, float, i32, i32, i32, i32, i16, i16, i32, float, [3 x i32], float, i32, i32, [2 x %struct.PointCache*], [2 x %struct.ListBase], %struct.EffectorWeights*, i32, float, float, i32, [3 x float], i32, float, float, float, float, float, [3 x float] }
%struct.FLUID_3D = type opaque
%struct.WTURBULENCE = type opaque
%struct.SmokeFlowSettings = type { %struct.SmokeModifierData*, %struct.DerivedMesh*, %struct.ParticleSystem*, %struct.Tex*, float*, i32, float, float, float, float, [3 x float], float, float, float, float, float, i32, float, float, i32, [64 x i8], i16, i16, i16, i16, i32 }
%struct.SmokeCollSettings = type { %struct.SmokeModifierData*, %struct.DerivedMesh*, float*, i32, i16, i16 }
%struct.FluidsimModifierData = type { %struct.ModifierData, %struct.FluidsimSettings*, %struct.PointCache* }
%struct.DynamicPaintModifierData = type { %struct.ModifierData, %struct.DynamicPaintCanvasSettings*, %struct.DynamicPaintBrushSettings*, i32, i32 }
%struct.DynamicPaintCanvasSettings = type { %struct.DynamicPaintModifierData*, %struct.DerivedMesh*, %struct.ListBase, i16, i16, i32, [64 x i8] }
%struct.DynamicPaintBrushSettings = type { %struct.DynamicPaintModifierData*, %struct.DerivedMesh*, %struct.ParticleSystem*, %struct.Material*, i32, i32, float, float, float, float, float, float, float, float, %struct.ColorBand*, %struct.ColorBand*, i16, i16, i16, i16, float, float, float, float }
%struct.DynamicPaintSurface = type { %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface*, %struct.DynamicPaintCanvasSettings*, %struct.PaintSurfaceData*, %struct.Group*, %struct.EffectorWeights*, %struct.PointCache*, %struct.ListBase, i32, [64 x i8], i16, i16, i16, i16, i16, i16, i16, i16, i32, i32, i32, i32, i32, i32, i32, [4 x float], %struct.Tex*, [64 x i8], i32, i32, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, i32, [64 x i8], [1024 x i8], [64 x i8], [64 x i8] }
%struct.PaintSurfaceData = type opaque
%struct.MeshDeformModifierData = type { %struct.ModifierData, %struct.Object*, [64 x i8], i16, i16, [2 x i16], %struct.MDefInfluence*, i32*, float*, i32, i32, %struct.MDefCell*, %struct.MDefInfluence*, i32*, i32, i32, [3 x float], float, [4 x [4 x float]], float*, float*, void (%struct.Scene*, %struct.MeshDeformModifierData*, float*, i32, [4 x float]*)* }
%struct.MDefCell = type { i32, i32 }
%struct.MDefInfluence = type { i32, float }
%struct.WarpModifierData = type { %struct.ModifierData, %struct.Tex*, %struct.Object*, [64 x i8], i32, i32, %struct.Object*, %struct.Object*, %struct.CurveMapping*, [64 x i8], float, float, i8, i8, [6 x i8] }
%struct.WeightVGEditModifierData = type { %struct.ModifierData, [64 x i8], i16, i16, float, %struct.CurveMapping*, float, float, float, [64 x i8], i32, %struct.Tex*, %struct.Object*, i32, [64 x i8], i32 }
%struct.LaplacianDeformModifierData = type { %struct.ModifierData, [64 x i8], i32, i32, float*, i8*, i16, [3 x i16] }
%struct.MDisps = type { i32, i32, [3 x float]*, i32* }
%struct.GridPaintMask = type { float*, i32, i32 }
%struct.BoidRule = type { %struct.BoidRule*, %struct.BoidRule*, i32, i32, [32 x i8] }
%struct.LineStyleModifier = type { %struct.LineStyleModifier*, %struct.LineStyleModifier*, [64 x i8], i32, float, i32, i32 }
%struct.LineStyleColorModifier_AlongStroke = type { %struct.LineStyleModifier, %struct.ColorBand* }
%struct.LineStyleColorModifier_DistanceFromCamera = type { %struct.LineStyleModifier, %struct.ColorBand*, float, float }
%struct.LineStyleColorModifier_DistanceFromObject = type { %struct.LineStyleModifier, %struct.Object*, %struct.ColorBand*, float, float }
%struct.LineStyleColorModifier_Material = type { %struct.LineStyleModifier, %struct.ColorBand*, i32, i32 }
%struct.LineStyleAlphaModifier_AlongStroke = type { %struct.LineStyleModifier, %struct.CurveMapping*, i32, i32 }
%struct.LineStyleAlphaModifier_DistanceFromCamera = type { %struct.LineStyleModifier, %struct.CurveMapping*, i32, float, float, i32 }
%struct.LineStyleAlphaModifier_DistanceFromObject = type { %struct.LineStyleModifier, %struct.Object*, %struct.CurveMapping*, i32, float, float, i32 }
%struct.LineStyleAlphaModifier_Material = type { %struct.LineStyleModifier, %struct.CurveMapping*, i32, i32 }
%struct.LineStyleThicknessModifier_AlongStroke = type { %struct.LineStyleModifier, %struct.CurveMapping*, i32, float, float, i32 }
%struct.LineStyleThicknessModifier_DistanceFromCamera = type { %struct.LineStyleModifier, %struct.CurveMapping*, i32, float, float, float, float, i32 }
%struct.LineStyleThicknessModifier_DistanceFromObject = type { %struct.LineStyleModifier, %struct.Object*, %struct.CurveMapping*, i32, float, float, float, float, i32 }
%struct.LineStyleThicknessModifier_Material = type { %struct.LineStyleModifier, %struct.CurveMapping*, i32, float, float, i32 }

@.str = private unnamed_addr constant [11 x i8] c"IDProperty\00", align 1
@.str.1 = private unnamed_addr constant [4 x i8] c"%s@\00", align 1
@.str.2 = private unnamed_addr constant [36 x i8] c"Cannot open file %s for writing: %s\00", align 1
@G = external dso_local global %struct.Global, align 8
@.str.3 = private unnamed_addr constant [42 x i8] c"Version backup failed (file saved with @)\00", align 1
@.str.4 = private unnamed_addr constant [43 x i8] c"Cannot change old file (file saved with @)\00", align 1
@MEM_allocN_len = external dso_local global i64 (i8*)*, align 8
@.str.5 = private unnamed_addr constant [34 x i8] c"error: can't find SDNA code <%s>\0A\00", align 1
@.str.6 = private unnamed_addr constant [4 x i8] c"wb1\00", align 1
@.str.7 = private unnamed_addr constant [16 x i8] c"BLENDER%c%c%.3d\00", align 1
@MEM_callocN = external dso_local global i8* (i64, i8*)*, align 8
@.str.8 = private unnamed_addr constant [10 x i8] c"writedata\00", align 1
@DNAstr = external dso_local constant [0 x i8], align 1
@DNAlen = external dso_local constant i32, align 4
@MEM_mallocN = external dso_local global i8* (i64, i8*)*, align 8
@.str.9 = private unnamed_addr constant [8 x i8] c"wd->buf\00", align 1
@.str.10 = private unnamed_addr constant [16 x i8] c"group node link\00", align 1
@.str.11 = private unnamed_addr constant [4 x i8] c"%4d\00", align 1
@.str.12 = private unnamed_addr constant [8 x i8] c"unknown\00", align 1
@.str.13 = private unnamed_addr constant [11 x i8] c"FileGlobal\00", align 1
@.str.14 = private unnamed_addr constant [16 x i8] c"wmWindowManager\00", align 1
@.str.15 = private unnamed_addr constant [9 x i8] c"wmWindow\00", align 1
@.str.16 = private unnamed_addr constant [7 x i8] c"Screen\00", align 1
@.str.17 = private unnamed_addr constant [8 x i8] c"ScrVert\00", align 1
@.str.18 = private unnamed_addr constant [8 x i8] c"ScrEdge\00", align 1
@.str.19 = private unnamed_addr constant [8 x i8] c"ScrArea\00", align 1
@.str.20 = private unnamed_addr constant [6 x i8] c"Panel\00", align 1
@.str.21 = private unnamed_addr constant [19 x i8] c"PanelCategoryStack\00", align 1
@.str.22 = private unnamed_addr constant [10 x i8] c"uiPreview\00", align 1
@.str.23 = private unnamed_addr constant [7 x i8] c"View3D\00", align 1
@.str.24 = private unnamed_addr constant [6 x i8] c"BGpic\00", align 1
@.str.25 = private unnamed_addr constant [9 x i8] c"SpaceIpo\00", align 1
@.str.26 = private unnamed_addr constant [11 x i8] c"bDopeSheet\00", align 1
@.str.27 = private unnamed_addr constant [10 x i8] c"SpaceButs\00", align 1
@.str.28 = private unnamed_addr constant [10 x i8] c"SpaceFile\00", align 1
@.str.29 = private unnamed_addr constant [17 x i8] c"FileSelectParams\00", align 1
@.str.30 = private unnamed_addr constant [9 x i8] c"SpaceSeq\00", align 1
@.str.31 = private unnamed_addr constant [11 x i8] c"SpaceImage\00", align 1
@.str.32 = private unnamed_addr constant [10 x i8] c"SpaceText\00", align 1
@.str.33 = private unnamed_addr constant [12 x i8] c"SpaceScript\00", align 1
@.str.34 = private unnamed_addr constant [12 x i8] c"SpaceAction\00", align 1
@.str.35 = private unnamed_addr constant [9 x i8] c"SpaceNla\00", align 1
@.str.36 = private unnamed_addr constant [10 x i8] c"SpaceTime\00", align 1
@.str.37 = private unnamed_addr constant [10 x i8] c"SpaceNode\00", align 1
@.str.38 = private unnamed_addr constant [14 x i8] c"bNodeTreePath\00", align 1
@.str.39 = private unnamed_addr constant [11 x i8] c"SpaceLogic\00", align 1
@.str.40 = private unnamed_addr constant [12 x i8] c"ConsoleLine\00", align 1
@.str.41 = private unnamed_addr constant [13 x i8] c"SpaceConsole\00", align 1
@.str.42 = private unnamed_addr constant [14 x i8] c"SpaceUserPref\00", align 1
@.str.43 = private unnamed_addr constant [10 x i8] c"SpaceClip\00", align 1
@.str.44 = private unnamed_addr constant [8 x i8] c"ARegion\00", align 1
@.str.45 = private unnamed_addr constant [13 x i8] c"RegionView3D\00", align 1
@.str.46 = private unnamed_addr constant [9 x i8] c"BoundBox\00", align 1
@.str.47 = private unnamed_addr constant [27 x i8] c"regiondata write missing!\0A\00", align 1
@.str.48 = private unnamed_addr constant [7 x i8] c"uiList\00", align 1
@.str.49 = private unnamed_addr constant [14 x i8] c"TreeStoreElem\00", align 1
@.str.50 = private unnamed_addr constant [10 x i8] c"TreeStore\00", align 1
@.str.51 = private unnamed_addr constant [10 x i8] c"SpaceOops\00", align 1
@.str.52 = private unnamed_addr constant [13 x i8] c"CurveMapping\00", align 1
@.str.53 = private unnamed_addr constant [14 x i8] c"CurveMapPoint\00", align 1
@.str.54 = private unnamed_addr constant [10 x i8] c"MovieClip\00", align 1
@.str.55 = private unnamed_addr constant [20 x i8] c"MovieTrackingObject\00", align 1
@.str.56 = private unnamed_addr constant [9 x i8] c"AnimData\00", align 1
@.str.57 = private unnamed_addr constant [13 x i8] c"AnimOverride\00", align 1
@.str.58 = private unnamed_addr constant [7 x i8] c"FCurve\00", align 1
@.str.59 = private unnamed_addr constant [10 x i8] c"BezTriple\00", align 1
@.str.60 = private unnamed_addr constant [7 x i8] c"FPoint\00", align 1
@.str.61 = private unnamed_addr constant [14 x i8] c"ChannelDriver\00", align 1
@.str.62 = private unnamed_addr constant [10 x i8] c"DriverVar\00", align 1
@.str.63 = private unnamed_addr constant [10 x i8] c"FModifier\00", align 1
@.str.64 = private unnamed_addr constant [17 x i8] c"FCM_EnvelopeData\00", align 1
@.str.65 = private unnamed_addr constant [9 x i8] c"NlaTrack\00", align 1
@.str.66 = private unnamed_addr constant [9 x i8] c"NlaStrip\00", align 1
@.str.67 = private unnamed_addr constant [19 x i8] c"MovieTrackingTrack\00", align 1
@.str.68 = private unnamed_addr constant [20 x i8] c"MovieTrackingMarker\00", align 1
@.str.69 = private unnamed_addr constant [24 x i8] c"MovieTrackingPlaneTrack\00", align 1
@.str.70 = private unnamed_addr constant [25 x i8] c"MovieTrackingPlaneMarker\00", align 1
@.str.71 = private unnamed_addr constant [25 x i8] c"MovieReconstructedCamera\00", align 1
@.str.72 = private unnamed_addr constant [5 x i8] c"Mask\00", align 1
@.str.73 = private unnamed_addr constant [10 x i8] c"MaskLayer\00", align 1
@.str.74 = private unnamed_addr constant [11 x i8] c"MaskSpline\00", align 1
@.str.75 = private unnamed_addr constant [16 x i8] c"MaskSplinePoint\00", align 1
@.str.76 = private unnamed_addr constant [18 x i8] c"MaskSplinePointUW\00", align 1
@.str.77 = private unnamed_addr constant [15 x i8] c"MaskLayerShape\00", align 1
@.str.78 = private unnamed_addr constant [6 x i8] c"Scene\00", align 1
@.str.79 = private unnamed_addr constant [5 x i8] c"Base\00", align 1
@.str.80 = private unnamed_addr constant [13 x i8] c"ToolSettings\00", align 1
@.str.81 = private unnamed_addr constant [7 x i8] c"VPaint\00", align 1
@.str.82 = private unnamed_addr constant [7 x i8] c"Sculpt\00", align 1
@.str.83 = private unnamed_addr constant [9 x i8] c"UvSculpt\00", align 1
@.str.84 = private unnamed_addr constant [8 x i8] c"Editing\00", align 1
@.str.85 = private unnamed_addr constant [9 x i8] c"Sequence\00", align 1
@.str.86 = private unnamed_addr constant [15 x i8] c"SolidColorVars\00", align 1
@.str.87 = private unnamed_addr constant [17 x i8] c"SpeedControlVars\00", align 1
@.str.88 = private unnamed_addr constant [9 x i8] c"WipeVars\00", align 1
@.str.89 = private unnamed_addr constant [9 x i8] c"GlowVars\00", align 1
@.str.90 = private unnamed_addr constant [14 x i8] c"TransformVars\00", align 1
@.str.91 = private unnamed_addr constant [17 x i8] c"GaussianBlurVars\00", align 1
@.str.92 = private unnamed_addr constant [6 x i8] c"Strip\00", align 1
@.str.93 = private unnamed_addr constant [10 x i8] c"StripCrop\00", align 1
@.str.94 = private unnamed_addr constant [15 x i8] c"StripTransform\00", align 1
@.str.95 = private unnamed_addr constant [11 x i8] c"StripProxy\00", align 1
@.str.96 = private unnamed_addr constant [10 x i8] c"StripElem\00", align 1
@.str.97 = private unnamed_addr constant [10 x i8] c"MetaStack\00", align 1
@.str.98 = private unnamed_addr constant [13 x i8] c"AviCodecData\00", align 1
@.str.99 = private unnamed_addr constant [19 x i8] c"QuicktimeCodecData\00", align 1
@.str.100 = private unnamed_addr constant [11 x i8] c"TimeMarker\00", align 1
@.str.101 = private unnamed_addr constant [21 x i8] c"TransformOrientation\00", align 1
@.str.102 = private unnamed_addr constant [17 x i8] c"SceneRenderLayer\00", align 1
@.str.103 = private unnamed_addr constant [22 x i8] c"FreestyleModuleConfig\00", align 1
@.str.104 = private unnamed_addr constant [17 x i8] c"FreestyleLineSet\00", align 1
@.str.105 = private unnamed_addr constant [10 x i8] c"bNodeTree\00", align 1
@.str.106 = private unnamed_addr constant [15 x i8] c"RigidBodyWorld\00", align 1
@.str.107 = private unnamed_addr constant [16 x i8] c"EffectorWeights\00", align 1
@.str.108 = private unnamed_addr constant [10 x i8] c"KeyingSet\00", align 1
@.str.109 = private unnamed_addr constant [8 x i8] c"KS_Path\00", align 1
@.str.110 = private unnamed_addr constant [21 x i8] c"SequenceModifierData\00", align 1
@.str.111 = private unnamed_addr constant [6 x i8] c"bNode\00", align 1
@.str.112 = private unnamed_addr constant [10 x i8] c"bNodeLink\00", align 1
@.str.113 = private unnamed_addr constant [25 x i8] c"NodeImageMultiFileSocket\00", align 1
@.str.114 = private unnamed_addr constant [15 x i8] c"NodeImageLayer\00", align 1
@.str.115 = private unnamed_addr constant [12 x i8] c"bNodeSocket\00", align 1
@.str.116 = private unnamed_addr constant [11 x i8] c"PointCache\00", align 1
@.str.117 = private unnamed_addr constant [11 x i8] c"PTCacheMem\00", align 1
@ptcache_data_struct = internal global [8 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.119, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.119, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.119, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.119, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.119, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.119, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.119, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.120, i32 0, i32 0)], align 16, !dbg !0
@ptcache_extra_struct = internal global [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.119, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.121, i32 0, i32 0)], align 16, !dbg !5630
@.str.118 = private unnamed_addr constant [13 x i8] c"PTCacheExtra\00", align 1
@.str.119 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.120 = private unnamed_addr constant [9 x i8] c"BoidData\00", align 1
@.str.121 = private unnamed_addr constant [15 x i8] c"ParticleSpring\00", align 1
@.str.122 = private unnamed_addr constant [6 x i8] c"Curve\00", align 1
@.str.123 = private unnamed_addr constant [9 x i8] c"CharInfo\00", align 1
@.str.124 = private unnamed_addr constant [8 x i8] c"TextBox\00", align 1
@.str.125 = private unnamed_addr constant [5 x i8] c"Nurb\00", align 1
@.str.126 = private unnamed_addr constant [7 x i8] c"BPoint\00", align 1
@.str.127 = private unnamed_addr constant [9 x i8] c"MetaBall\00", align 1
@.str.128 = private unnamed_addr constant [9 x i8] c"MetaElem\00", align 1
@.str.129 = private unnamed_addr constant [6 x i8] c"Image\00", align 1
@.str.130 = private unnamed_addr constant [11 x i8] c"PackedFile\00", align 1
@U = external dso_local global %struct.UserDef, align 8
@.str.131 = private unnamed_addr constant [13 x i8] c"PreviewImage\00", align 1
@.str.132 = private unnamed_addr constant [7 x i8] c"Camera\00", align 1
@.str.133 = private unnamed_addr constant [5 x i8] c"Lamp\00", align 1
@.str.134 = private unnamed_addr constant [5 x i8] c"MTex\00", align 1
@.str.135 = private unnamed_addr constant [8 x i8] c"Lattice\00", align 1
@.str.136 = private unnamed_addr constant [12 x i8] c"MDeformVert\00", align 1
@.str.137 = private unnamed_addr constant [14 x i8] c"MDeformWeight\00", align 1
@.str.138 = private unnamed_addr constant [6 x i8] c"VFont\00", align 1
@.str.139 = private unnamed_addr constant [4 x i8] c"Key\00", align 1
@.str.140 = private unnamed_addr constant [9 x i8] c"KeyBlock\00", align 1
@.str.141 = private unnamed_addr constant [6 x i8] c"World\00", align 1
@.str.142 = private unnamed_addr constant [5 x i8] c"Text\00", align 1
@.str.143 = private unnamed_addr constant [9 x i8] c"TextLine\00", align 1
@.str.144 = private unnamed_addr constant [8 x i8] c"Speaker\00", align 1
@.str.145 = private unnamed_addr constant [7 x i8] c"bSound\00", align 1
@.str.146 = private unnamed_addr constant [6 x i8] c"Group\00", align 1
@.str.147 = private unnamed_addr constant [12 x i8] c"GroupObject\00", align 1
@.str.148 = private unnamed_addr constant [10 x i8] c"bArmature\00", align 1
@.str.149 = private unnamed_addr constant [5 x i8] c"Bone\00", align 1
@.str.150 = private unnamed_addr constant [8 x i8] c"bAction\00", align 1
@.str.151 = private unnamed_addr constant [13 x i8] c"bActionGroup\00", align 1
@.str.152 = private unnamed_addr constant [7 x i8] c"Object\00", align 1
@.str.153 = private unnamed_addr constant [12 x i8] c"PartDeflect\00", align 1
@.str.154 = private unnamed_addr constant [9 x i8] c"SoftBody\00", align 1
@.str.155 = private unnamed_addr constant [15 x i8] c"BulletSoftBody\00", align 1
@.str.156 = private unnamed_addr constant [12 x i8] c"RigidBodyOb\00", align 1
@.str.157 = private unnamed_addr constant [13 x i8] c"RigidBodyCon\00", align 1
@.str.158 = private unnamed_addr constant [10 x i8] c"ImageUser\00", align 1
@.str.159 = private unnamed_addr constant [9 x i8] c"LinkData\00", align 1
@.str.160 = private unnamed_addr constant [9 x i8] c"LodLevel\00", align 1
@.str.161 = private unnamed_addr constant [10 x i8] c"bProperty\00", align 1
@.str.162 = private unnamed_addr constant [8 x i8] c"bSensor\00", align 1
@.str.163 = private unnamed_addr constant [12 x i8] c"bNearSensor\00", align 1
@.str.164 = private unnamed_addr constant [13 x i8] c"bMouseSensor\00", align 1
@.str.165 = private unnamed_addr constant [16 x i8] c"bKeyboardSensor\00", align 1
@.str.166 = private unnamed_addr constant [16 x i8] c"bPropertySensor\00", align 1
@.str.167 = private unnamed_addr constant [16 x i8] c"bArmatureSensor\00", align 1
@.str.168 = private unnamed_addr constant [16 x i8] c"bActuatorSensor\00", align 1
@.str.169 = private unnamed_addr constant [13 x i8] c"bDelaySensor\00", align 1
@.str.170 = private unnamed_addr constant [17 x i8] c"bCollisionSensor\00", align 1
@.str.171 = private unnamed_addr constant [13 x i8] c"bRadarSensor\00", align 1
@.str.172 = private unnamed_addr constant [14 x i8] c"bRandomSensor\00", align 1
@.str.173 = private unnamed_addr constant [11 x i8] c"bRaySensor\00", align 1
@.str.174 = private unnamed_addr constant [15 x i8] c"bMessageSensor\00", align 1
@.str.175 = private unnamed_addr constant [16 x i8] c"bJoystickSensor\00", align 1
@.str.176 = private unnamed_addr constant [12 x i8] c"bController\00", align 1
@.str.177 = private unnamed_addr constant [16 x i8] c"bExpressionCont\00", align 1
@.str.178 = private unnamed_addr constant [12 x i8] c"bPythonCont\00", align 1
@.str.179 = private unnamed_addr constant [10 x i8] c"bActuator\00", align 1
@.str.180 = private unnamed_addr constant [16 x i8] c"bActionActuator\00", align 1
@.str.181 = private unnamed_addr constant [15 x i8] c"bSoundActuator\00", align 1
@.str.182 = private unnamed_addr constant [16 x i8] c"bObjectActuator\00", align 1
@.str.183 = private unnamed_addr constant [13 x i8] c"bIpoActuator\00", align 1
@.str.184 = private unnamed_addr constant [18 x i8] c"bPropertyActuator\00", align 1
@.str.185 = private unnamed_addr constant [16 x i8] c"bCameraActuator\00", align 1
@.str.186 = private unnamed_addr constant [20 x i8] c"bConstraintActuator\00", align 1
@.str.187 = private unnamed_addr constant [20 x i8] c"bEditObjectActuator\00", align 1
@.str.188 = private unnamed_addr constant [15 x i8] c"bSceneActuator\00", align 1
@.str.189 = private unnamed_addr constant [15 x i8] c"bGroupActuator\00", align 1
@.str.190 = private unnamed_addr constant [16 x i8] c"bRandomActuator\00", align 1
@.str.191 = private unnamed_addr constant [17 x i8] c"bMessageActuator\00", align 1
@.str.192 = private unnamed_addr constant [14 x i8] c"bGameActuator\00", align 1
@.str.193 = private unnamed_addr constant [20 x i8] c"bVisibilityActuator\00", align 1
@.str.194 = private unnamed_addr constant [20 x i8] c"bTwoDFilterActuator\00", align 1
@.str.195 = private unnamed_addr constant [16 x i8] c"bParentActuator\00", align 1
@.str.196 = private unnamed_addr constant [15 x i8] c"bStateActuator\00", align 1
@.str.197 = private unnamed_addr constant [18 x i8] c"bArmatureActuator\00", align 1
@.str.198 = private unnamed_addr constant [18 x i8] c"bSteeringActuator\00", align 1
@.str.199 = private unnamed_addr constant [15 x i8] c"bMouseActuator\00", align 1
@.str.200 = private unnamed_addr constant [13 x i8] c"bPoseChannel\00", align 1
@.str.201 = private unnamed_addr constant [6 x i8] c"bPose\00", align 1
@.str.202 = private unnamed_addr constant [13 x i8] c"bDeformGroup\00", align 1
@.str.203 = private unnamed_addr constant [18 x i8] c"bConstraintTarget\00", align 1
@.str.204 = private unnamed_addr constant [12 x i8] c"bConstraint\00", align 1
@.str.205 = private unnamed_addr constant [12 x i8] c"bMotionPath\00", align 1
@.str.206 = private unnamed_addr constant [16 x i8] c"bMotionPathVert\00", align 1
@.str.207 = private unnamed_addr constant [15 x i8] c"ParticleSystem\00", align 1
@.str.208 = private unnamed_addr constant [13 x i8] c"ParticleData\00", align 1
@.str.209 = private unnamed_addr constant [8 x i8] c"HairKey\00", align 1
@.str.210 = private unnamed_addr constant [13 x i8] c"BoidParticle\00", align 1
@.str.211 = private unnamed_addr constant [15 x i8] c"ParticleTarget\00", align 1
@.str.212 = private unnamed_addr constant [14 x i8] c"ChildParticle\00", align 1
@.str.213 = private unnamed_addr constant [18 x i8] c"ClothModifierData\00", align 1
@.str.214 = private unnamed_addr constant [17 x i8] c"ClothSimSettings\00", align 1
@.str.215 = private unnamed_addr constant [18 x i8] c"ClothCollSettings\00", align 1
@.str.216 = private unnamed_addr constant [20 x i8] c"SmokeDomainSettings\00", align 1
@.str.217 = private unnamed_addr constant [18 x i8] c"SmokeFlowSettings\00", align 1
@.str.218 = private unnamed_addr constant [18 x i8] c"SmokeCollSettings\00", align 1
@.str.219 = private unnamed_addr constant [17 x i8] c"FluidsimSettings\00", align 1
@.str.220 = private unnamed_addr constant [27 x i8] c"DynamicPaintCanvasSettings\00", align 1
@.str.221 = private unnamed_addr constant [20 x i8] c"DynamicPaintSurface\00", align 1
@.str.222 = private unnamed_addr constant [26 x i8] c"DynamicPaintBrushSettings\00", align 1
@.str.223 = private unnamed_addr constant [10 x i8] c"ColorBand\00", align 1
@.str.224 = private unnamed_addr constant [14 x i8] c"MDefInfluence\00", align 1
@.str.225 = private unnamed_addr constant [9 x i8] c"MDefCell\00", align 1
@.str.226 = private unnamed_addr constant [9 x i8] c"Material\00", align 1
@.str.227 = private unnamed_addr constant [4 x i8] c"Tex\00", align 1
@.str.228 = private unnamed_addr constant [7 x i8] c"EnvMap\00", align 1
@.str.229 = private unnamed_addr constant [13 x i8] c"PointDensity\00", align 1
@.str.230 = private unnamed_addr constant [10 x i8] c"VoxelData\00", align 1
@.str.231 = private unnamed_addr constant [9 x i8] c"OceanTex\00", align 1
@.str.232 = private unnamed_addr constant [5 x i8] c"Mesh\00", align 1
@CD_MASK_EVERYTHING = external dso_local constant i64, align 8
@CD_MASK_MESH = external dso_local constant i64, align 8
@.str.233 = private unnamed_addr constant [16 x i8] c"CustomDataLayer\00", align 1
@.str.234 = private unnamed_addr constant [52 x i8] c"%s error: layer '%s':%d - can't be written to file\0A\00", align 1
@__func__.write_customdata = private unnamed_addr constant [17 x i8] c"write_customdata\00", align 1
@.str.235 = private unnamed_addr constant [19 x i8] c"CustomDataExternal\00", align 1
@.str.236 = private unnamed_addr constant [7 x i8] c"MDisps\00", align 1
@.str.237 = private unnamed_addr constant [14 x i8] c"GridPaintMask\00", align 1
@.str.238 = private unnamed_addr constant [17 x i8] c"ParticleSettings\00", align 1
@.str.239 = private unnamed_addr constant [20 x i8] c"ParticleDupliWeight\00", align 1
@.str.240 = private unnamed_addr constant [13 x i8] c"BoidSettings\00", align 1
@.str.241 = private unnamed_addr constant [17 x i8] c"SPHFluidSettings\00", align 1
@.str.242 = private unnamed_addr constant [10 x i8] c"BoidState\00", align 1
@.str.243 = private unnamed_addr constant [18 x i8] c"BoidRuleGoalAvoid\00", align 1
@.str.244 = private unnamed_addr constant [23 x i8] c"BoidRuleAvoidCollision\00", align 1
@.str.245 = private unnamed_addr constant [21 x i8] c"BoidRuleFollowLeader\00", align 1
@.str.246 = private unnamed_addr constant [21 x i8] c"BoidRuleAverageSpeed\00", align 1
@.str.247 = private unnamed_addr constant [14 x i8] c"BoidRuleFight\00", align 1
@.str.248 = private unnamed_addr constant [9 x i8] c"BoidRule\00", align 1
@.str.249 = private unnamed_addr constant [6 x i8] c"Brush\00", align 1
@.str.250 = private unnamed_addr constant [8 x i8] c"Palette\00", align 1
@.str.251 = private unnamed_addr constant [13 x i8] c"PaletteColor\00", align 1
@.str.252 = private unnamed_addr constant [11 x i8] c"PaintCurve\00", align 1
@.str.253 = private unnamed_addr constant [16 x i8] c"PaintCurvePoint\00", align 1
@.str.254 = private unnamed_addr constant [7 x i8] c"Script\00", align 1
@.str.255 = private unnamed_addr constant [8 x i8] c"bGPdata\00", align 1
@.str.256 = private unnamed_addr constant [10 x i8] c"bGPDlayer\00", align 1
@.str.257 = private unnamed_addr constant [10 x i8] c"bGPDframe\00", align 1
@.str.258 = private unnamed_addr constant [11 x i8] c"bGPDstroke\00", align 1
@.str.259 = private unnamed_addr constant [11 x i8] c"bGPDspoint\00", align 1
@.str.260 = private unnamed_addr constant [19 x i8] c"FreestyleLineStyle\00", align 1
@.str.261 = private unnamed_addr constant [35 x i8] c"LineStyleColorModifier_AlongStroke\00", align 1
@.str.262 = private unnamed_addr constant [42 x i8] c"LineStyleColorModifier_DistanceFromCamera\00", align 1
@.str.263 = private unnamed_addr constant [42 x i8] c"LineStyleColorModifier_DistanceFromObject\00", align 1
@.str.264 = private unnamed_addr constant [32 x i8] c"LineStyleColorModifier_Material\00", align 1
@.str.265 = private unnamed_addr constant [23 x i8] c"LineStyleColorModifier\00", align 1
@.str.266 = private unnamed_addr constant [35 x i8] c"LineStyleAlphaModifier_AlongStroke\00", align 1
@.str.267 = private unnamed_addr constant [42 x i8] c"LineStyleAlphaModifier_DistanceFromCamera\00", align 1
@.str.268 = private unnamed_addr constant [42 x i8] c"LineStyleAlphaModifier_DistanceFromObject\00", align 1
@.str.269 = private unnamed_addr constant [32 x i8] c"LineStyleAlphaModifier_Material\00", align 1
@.str.270 = private unnamed_addr constant [23 x i8] c"LineStyleAlphaModifier\00", align 1
@.str.271 = private unnamed_addr constant [39 x i8] c"LineStyleThicknessModifier_AlongStroke\00", align 1
@.str.272 = private unnamed_addr constant [46 x i8] c"LineStyleThicknessModifier_DistanceFromCamera\00", align 1
@.str.273 = private unnamed_addr constant [46 x i8] c"LineStyleThicknessModifier_DistanceFromObject\00", align 1
@.str.274 = private unnamed_addr constant [36 x i8] c"LineStyleThicknessModifier_Material\00", align 1
@.str.275 = private unnamed_addr constant [39 x i8] c"LineStyleThicknessModifier_Calligraphy\00", align 1
@.str.276 = private unnamed_addr constant [27 x i8] c"LineStyleThicknessModifier\00", align 1
@.str.277 = private unnamed_addr constant [35 x i8] c"LineStyleGeometryModifier_Sampling\00", align 1
@.str.278 = private unnamed_addr constant [38 x i8] c"LineStyleGeometryModifier_BezierCurve\00", align 1
@.str.279 = private unnamed_addr constant [44 x i8] c"LineStyleGeometryModifier_SinusDisplacement\00", align 1
@.str.280 = private unnamed_addr constant [39 x i8] c"LineStyleGeometryModifier_SpatialNoise\00", align 1
@.str.281 = private unnamed_addr constant [40 x i8] c"LineStyleGeometryModifier_PerlinNoise1D\00", align 1
@.str.282 = private unnamed_addr constant [40 x i8] c"LineStyleGeometryModifier_PerlinNoise2D\00", align 1
@.str.283 = private unnamed_addr constant [44 x i8] c"LineStyleGeometryModifier_BackboneStretcher\00", align 1
@.str.284 = private unnamed_addr constant [37 x i8] c"LineStyleGeometryModifier_TipRemover\00", align 1
@.str.285 = private unnamed_addr constant [43 x i8] c"LineStyleGeometryModifier_Polygonalization\00", align 1
@.str.286 = private unnamed_addr constant [39 x i8] c"LineStyleGeometryModifier_GuidingLines\00", align 1
@.str.287 = private unnamed_addr constant [36 x i8] c"LineStyleGeometryModifier_Blueprint\00", align 1
@.str.288 = private unnamed_addr constant [35 x i8] c"LineStyleGeometryModifier_2DOffset\00", align 1
@.str.289 = private unnamed_addr constant [38 x i8] c"LineStyleGeometryModifier_2DTransform\00", align 1
@.str.290 = private unnamed_addr constant [26 x i8] c"LineStyleGeometryModifier\00", align 1
@.str.291 = private unnamed_addr constant [8 x i8] c"Library\00", align 1
@.str.292 = private unnamed_addr constant [25 x i8] c"write packed .blend: %s\0A\00", align 1
@.str.293 = private unnamed_addr constant [3 x i8] c"ID\00", align 1
@.str.294 = private unnamed_addr constant [8 x i8] c"UserDef\00", align 1
@.str.295 = private unnamed_addr constant [7 x i8] c"bTheme\00", align 1
@.str.296 = private unnamed_addr constant [9 x i8] c"wmKeyMap\00", align 1
@.str.297 = private unnamed_addr constant [17 x i8] c"wmKeyMapDiffItem\00", align 1
@.str.298 = private unnamed_addr constant [7 x i8] c"bAddon\00", align 1
@.str.299 = private unnamed_addr constant [13 x i8] c"bPathCompare\00", align 1
@.str.300 = private unnamed_addr constant [8 x i8] c"uiStyle\00", align 1
@.str.301 = private unnamed_addr constant [13 x i8] c"wmKeyMapItem\00", align 1
@MEM_freeN = external dso_local global void (i8*)*, align 8
@.str.302 = private unnamed_addr constant [50 x i8] c"Unable to make version backup: filename too short\00", align 1
@.str.303 = private unnamed_addr constant [5 x i8] c"%s%d\00", align 1
@.str.304 = private unnamed_addr constant [30 x i8] c"Unable to make version backup\00", align 1

; Function Attrs: noinline nounwind uwtable
define dso_local void @IDP_WriteProperty_OnlyData(%struct.IDProperty* %prop, i8* %wd) #0 !dbg !5638 {
entry:
  %prop.addr = alloca %struct.IDProperty*, align 8
  %wd.addr = alloca i8*, align 8
  store %struct.IDProperty* %prop, %struct.IDProperty** %prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.IDProperty** %prop.addr, metadata !5642, metadata !DIExpression()), !dbg !5643
  store i8* %wd, i8** %wd.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %wd.addr, metadata !5644, metadata !DIExpression()), !dbg !5645
  %0 = load %struct.IDProperty*, %struct.IDProperty** %prop.addr, align 8, !dbg !5646
  %type = getelementptr inbounds %struct.IDProperty, %struct.IDProperty* %0, i32 0, i32 2, !dbg !5647
  %1 = load i8, i8* %type, align 8, !dbg !5647
  %conv = zext i8 %1 to i32, !dbg !5646
  switch i32 %conv, label %sw.epilog [
    i32 6, label %sw.bb
    i32 0, label %sw.bb1
    i32 5, label %sw.bb2
    i32 9, label %sw.bb3
  ], !dbg !5648

sw.bb:                                            ; preds = %entry
  %2 = load %struct.IDProperty*, %struct.IDProperty** %prop.addr, align 8, !dbg !5649
  %3 = load i8*, i8** %wd.addr, align 8, !dbg !5651
  call void @IDP_WriteGroup(%struct.IDProperty* %2, i8* %3), !dbg !5652
  br label %sw.epilog, !dbg !5653

sw.bb1:                                           ; preds = %entry
  %4 = load %struct.IDProperty*, %struct.IDProperty** %prop.addr, align 8, !dbg !5654
  %5 = load i8*, i8** %wd.addr, align 8, !dbg !5655
  call void @IDP_WriteString(%struct.IDProperty* %4, i8* %5), !dbg !5656
  br label %sw.epilog, !dbg !5657

sw.bb2:                                           ; preds = %entry
  %6 = load %struct.IDProperty*, %struct.IDProperty** %prop.addr, align 8, !dbg !5658
  %7 = load i8*, i8** %wd.addr, align 8, !dbg !5659
  call void @IDP_WriteArray(%struct.IDProperty* %6, i8* %7), !dbg !5660
  br label %sw.epilog, !dbg !5661

sw.bb3:                                           ; preds = %entry
  %8 = load %struct.IDProperty*, %struct.IDProperty** %prop.addr, align 8, !dbg !5662
  %9 = load i8*, i8** %wd.addr, align 8, !dbg !5663
  call void @IDP_WriteIDPArray(%struct.IDProperty* %8, i8* %9), !dbg !5664
  br label %sw.epilog, !dbg !5665

sw.epilog:                                        ; preds = %entry, %sw.bb3, %sw.bb2, %sw.bb1, %sw.bb
  ret void, !dbg !5666
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: noinline nounwind uwtable
define internal void @IDP_WriteGroup(%struct.IDProperty* %prop, i8* %wd) #0 !dbg !5667 {
entry:
  %prop.addr = alloca %struct.IDProperty*, align 8
  %wd.addr = alloca i8*, align 8
  %loop = alloca %struct.IDProperty*, align 8
  store %struct.IDProperty* %prop, %struct.IDProperty** %prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.IDProperty** %prop.addr, metadata !5668, metadata !DIExpression()), !dbg !5669
  store i8* %wd, i8** %wd.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %wd.addr, metadata !5670, metadata !DIExpression()), !dbg !5671
  call void @llvm.dbg.declare(metadata %struct.IDProperty** %loop, metadata !5672, metadata !DIExpression()), !dbg !5673
  %0 = load %struct.IDProperty*, %struct.IDProperty** %prop.addr, align 8, !dbg !5674
  %data = getelementptr inbounds %struct.IDProperty, %struct.IDProperty* %0, i32 0, i32 7, !dbg !5676
  %group = getelementptr inbounds %struct.IDPropertyData, %struct.IDPropertyData* %data, i32 0, i32 1, !dbg !5677
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %group, i32 0, i32 0, !dbg !5678
  %1 = load i8*, i8** %first, align 8, !dbg !5678
  %2 = bitcast i8* %1 to %struct.IDProperty*, !dbg !5674
  store %struct.IDProperty* %2, %struct.IDProperty** %loop, align 8, !dbg !5679
  br label %for.cond, !dbg !5680

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.IDProperty*, %struct.IDProperty** %loop, align 8, !dbg !5681
  %tobool = icmp ne %struct.IDProperty* %3, null, !dbg !5683
  br i1 %tobool, label %for.body, label %for.end, !dbg !5683

for.body:                                         ; preds = %for.cond
  %4 = load %struct.IDProperty*, %struct.IDProperty** %loop, align 8, !dbg !5684
  %5 = load i8*, i8** %wd.addr, align 8, !dbg !5686
  call void @IDP_WriteProperty(%struct.IDProperty* %4, i8* %5), !dbg !5687
  br label %for.inc, !dbg !5688

for.inc:                                          ; preds = %for.body
  %6 = load %struct.IDProperty*, %struct.IDProperty** %loop, align 8, !dbg !5689
  %next = getelementptr inbounds %struct.IDProperty, %struct.IDProperty* %6, i32 0, i32 0, !dbg !5690
  %7 = load %struct.IDProperty*, %struct.IDProperty** %next, align 8, !dbg !5690
  store %struct.IDProperty* %7, %struct.IDProperty** %loop, align 8, !dbg !5691
  br label %for.cond, !dbg !5692, !llvm.loop !5693

for.end:                                          ; preds = %for.cond
  ret void, !dbg !5695
}

; Function Attrs: noinline nounwind uwtable
define internal void @IDP_WriteString(%struct.IDProperty* %prop, i8* %wd) #0 !dbg !5696 {
entry:
  %prop.addr = alloca %struct.IDProperty*, align 8
  %wd.addr = alloca i8*, align 8
  store %struct.IDProperty* %prop, %struct.IDProperty** %prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.IDProperty** %prop.addr, metadata !5697, metadata !DIExpression()), !dbg !5698
  store i8* %wd, i8** %wd.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %wd.addr, metadata !5699, metadata !DIExpression()), !dbg !5700
  %0 = load i8*, i8** %wd.addr, align 8, !dbg !5701
  %1 = bitcast i8* %0 to %struct.WriteData*, !dbg !5701
  %2 = load %struct.IDProperty*, %struct.IDProperty** %prop.addr, align 8, !dbg !5702
  %len = getelementptr inbounds %struct.IDProperty, %struct.IDProperty* %2, i32 0, i32 8, !dbg !5703
  %3 = load i32, i32* %len, align 8, !dbg !5703
  %4 = load %struct.IDProperty*, %struct.IDProperty** %prop.addr, align 8, !dbg !5704
  %data = getelementptr inbounds %struct.IDProperty, %struct.IDProperty* %4, i32 0, i32 7, !dbg !5705
  %pointer = getelementptr inbounds %struct.IDPropertyData, %struct.IDPropertyData* %data, i32 0, i32 0, !dbg !5706
  %5 = load i8*, i8** %pointer, align 8, !dbg !5706
  call void @writedata(%struct.WriteData* %1, i32 1096040772, i32 %3, i8* %5), !dbg !5707
  ret void, !dbg !5708
}

; Function Attrs: noinline nounwind uwtable
define internal void @IDP_WriteArray(%struct.IDProperty* %prop, i8* %wd) #0 !dbg !5709 {
entry:
  %prop.addr = alloca %struct.IDProperty*, align 8
  %wd.addr = alloca i8*, align 8
  %array = alloca %struct.IDProperty**, align 8
  %a = alloca i32, align 4
  store %struct.IDProperty* %prop, %struct.IDProperty** %prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.IDProperty** %prop.addr, metadata !5710, metadata !DIExpression()), !dbg !5711
  store i8* %wd, i8** %wd.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %wd.addr, metadata !5712, metadata !DIExpression()), !dbg !5713
  %0 = load %struct.IDProperty*, %struct.IDProperty** %prop.addr, align 8, !dbg !5714
  %data = getelementptr inbounds %struct.IDProperty, %struct.IDProperty* %0, i32 0, i32 7, !dbg !5716
  %pointer = getelementptr inbounds %struct.IDPropertyData, %struct.IDPropertyData* %data, i32 0, i32 0, !dbg !5717
  %1 = load i8*, i8** %pointer, align 8, !dbg !5717
  %tobool = icmp ne i8* %1, null, !dbg !5714
  br i1 %tobool, label %if.then, label %if.end12, !dbg !5718

if.then:                                          ; preds = %entry
  %2 = load i8*, i8** %wd.addr, align 8, !dbg !5719
  %3 = bitcast i8* %2 to %struct.WriteData*, !dbg !5719
  %4 = load i64 (i8*)*, i64 (i8*)** @MEM_allocN_len, align 8, !dbg !5721
  %5 = load %struct.IDProperty*, %struct.IDProperty** %prop.addr, align 8, !dbg !5722
  %data1 = getelementptr inbounds %struct.IDProperty, %struct.IDProperty* %5, i32 0, i32 7, !dbg !5723
  %pointer2 = getelementptr inbounds %struct.IDPropertyData, %struct.IDPropertyData* %data1, i32 0, i32 0, !dbg !5724
  %6 = load i8*, i8** %pointer2, align 8, !dbg !5724
  %call = call i64 %4(i8* %6), !dbg !5721
  %conv = trunc i64 %call to i32, !dbg !5721
  %7 = load %struct.IDProperty*, %struct.IDProperty** %prop.addr, align 8, !dbg !5725
  %data3 = getelementptr inbounds %struct.IDProperty, %struct.IDProperty* %7, i32 0, i32 7, !dbg !5726
  %pointer4 = getelementptr inbounds %struct.IDPropertyData, %struct.IDPropertyData* %data3, i32 0, i32 0, !dbg !5727
  %8 = load i8*, i8** %pointer4, align 8, !dbg !5727
  call void @writedata(%struct.WriteData* %3, i32 1096040772, i32 %conv, i8* %8), !dbg !5728
  %9 = load %struct.IDProperty*, %struct.IDProperty** %prop.addr, align 8, !dbg !5729
  %subtype = getelementptr inbounds %struct.IDProperty, %struct.IDProperty* %9, i32 0, i32 3, !dbg !5731
  %10 = load i8, i8* %subtype, align 1, !dbg !5731
  %conv5 = zext i8 %10 to i32, !dbg !5729
  %cmp = icmp eq i32 %conv5, 6, !dbg !5732
  br i1 %cmp, label %if.then7, label %if.end, !dbg !5733

if.then7:                                         ; preds = %if.then
  call void @llvm.dbg.declare(metadata %struct.IDProperty*** %array, metadata !5734, metadata !DIExpression()), !dbg !5737
  %11 = load %struct.IDProperty*, %struct.IDProperty** %prop.addr, align 8, !dbg !5738
  %data8 = getelementptr inbounds %struct.IDProperty, %struct.IDProperty* %11, i32 0, i32 7, !dbg !5739
  %pointer9 = getelementptr inbounds %struct.IDPropertyData, %struct.IDPropertyData* %data8, i32 0, i32 0, !dbg !5740
  %12 = load i8*, i8** %pointer9, align 8, !dbg !5740
  %13 = bitcast i8* %12 to %struct.IDProperty**, !dbg !5738
  store %struct.IDProperty** %13, %struct.IDProperty*** %array, align 8, !dbg !5737
  call void @llvm.dbg.declare(metadata i32* %a, metadata !5741, metadata !DIExpression()), !dbg !5742
  store i32 0, i32* %a, align 4, !dbg !5743
  br label %for.cond, !dbg !5745

for.cond:                                         ; preds = %for.inc, %if.then7
  %14 = load i32, i32* %a, align 4, !dbg !5746
  %15 = load %struct.IDProperty*, %struct.IDProperty** %prop.addr, align 8, !dbg !5748
  %len = getelementptr inbounds %struct.IDProperty, %struct.IDProperty* %15, i32 0, i32 8, !dbg !5749
  %16 = load i32, i32* %len, align 8, !dbg !5749
  %cmp10 = icmp slt i32 %14, %16, !dbg !5750
  br i1 %cmp10, label %for.body, label %for.end, !dbg !5751

for.body:                                         ; preds = %for.cond
  %17 = load %struct.IDProperty**, %struct.IDProperty*** %array, align 8, !dbg !5752
  %18 = load i32, i32* %a, align 4, !dbg !5753
  %idxprom = sext i32 %18 to i64, !dbg !5752
  %arrayidx = getelementptr inbounds %struct.IDProperty*, %struct.IDProperty** %17, i64 %idxprom, !dbg !5752
  %19 = load %struct.IDProperty*, %struct.IDProperty** %arrayidx, align 8, !dbg !5752
  %20 = load i8*, i8** %wd.addr, align 8, !dbg !5754
  call void @IDP_WriteProperty(%struct.IDProperty* %19, i8* %20), !dbg !5755
  br label %for.inc, !dbg !5755

for.inc:                                          ; preds = %for.body
  %21 = load i32, i32* %a, align 4, !dbg !5756
  %inc = add nsw i32 %21, 1, !dbg !5756
  store i32 %inc, i32* %a, align 4, !dbg !5756
  br label %for.cond, !dbg !5757, !llvm.loop !5758

for.end:                                          ; preds = %for.cond
  br label %if.end, !dbg !5760

if.end:                                           ; preds = %for.end, %if.then
  br label %if.end12, !dbg !5761

if.end12:                                         ; preds = %if.end, %entry
  ret void, !dbg !5762
}

; Function Attrs: noinline nounwind uwtable
define internal void @IDP_WriteIDPArray(%struct.IDProperty* %prop, i8* %wd) #0 !dbg !5763 {
entry:
  %prop.addr = alloca %struct.IDProperty*, align 8
  %wd.addr = alloca i8*, align 8
  %array = alloca %struct.IDProperty*, align 8
  %a = alloca i32, align 4
  store %struct.IDProperty* %prop, %struct.IDProperty** %prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.IDProperty** %prop.addr, metadata !5764, metadata !DIExpression()), !dbg !5765
  store i8* %wd, i8** %wd.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %wd.addr, metadata !5766, metadata !DIExpression()), !dbg !5767
  %0 = load %struct.IDProperty*, %struct.IDProperty** %prop.addr, align 8, !dbg !5768
  %data = getelementptr inbounds %struct.IDProperty, %struct.IDProperty* %0, i32 0, i32 7, !dbg !5770
  %pointer = getelementptr inbounds %struct.IDPropertyData, %struct.IDPropertyData* %data, i32 0, i32 0, !dbg !5771
  %1 = load i8*, i8** %pointer, align 8, !dbg !5771
  %tobool = icmp ne i8* %1, null, !dbg !5768
  br i1 %tobool, label %if.then, label %if.end, !dbg !5772

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.IDProperty** %array, metadata !5773, metadata !DIExpression()), !dbg !5775
  %2 = load %struct.IDProperty*, %struct.IDProperty** %prop.addr, align 8, !dbg !5776
  %data1 = getelementptr inbounds %struct.IDProperty, %struct.IDProperty* %2, i32 0, i32 7, !dbg !5777
  %pointer2 = getelementptr inbounds %struct.IDPropertyData, %struct.IDPropertyData* %data1, i32 0, i32 0, !dbg !5778
  %3 = load i8*, i8** %pointer2, align 8, !dbg !5778
  %4 = bitcast i8* %3 to %struct.IDProperty*, !dbg !5776
  store %struct.IDProperty* %4, %struct.IDProperty** %array, align 8, !dbg !5775
  call void @llvm.dbg.declare(metadata i32* %a, metadata !5779, metadata !DIExpression()), !dbg !5780
  %5 = load i8*, i8** %wd.addr, align 8, !dbg !5781
  %6 = bitcast i8* %5 to %struct.WriteData*, !dbg !5781
  %7 = load %struct.IDProperty*, %struct.IDProperty** %prop.addr, align 8, !dbg !5782
  %len = getelementptr inbounds %struct.IDProperty, %struct.IDProperty* %7, i32 0, i32 8, !dbg !5783
  %8 = load i32, i32* %len, align 8, !dbg !5783
  %9 = load %struct.IDProperty*, %struct.IDProperty** %array, align 8, !dbg !5784
  %10 = bitcast %struct.IDProperty* %9 to i8*, !dbg !5784
  call void @writestruct(%struct.WriteData* %6, i32 1096040772, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i32 %8, i8* %10), !dbg !5785
  store i32 0, i32* %a, align 4, !dbg !5786
  br label %for.cond, !dbg !5788

for.cond:                                         ; preds = %for.inc, %if.then
  %11 = load i32, i32* %a, align 4, !dbg !5789
  %12 = load %struct.IDProperty*, %struct.IDProperty** %prop.addr, align 8, !dbg !5791
  %len3 = getelementptr inbounds %struct.IDProperty, %struct.IDProperty* %12, i32 0, i32 8, !dbg !5792
  %13 = load i32, i32* %len3, align 8, !dbg !5792
  %cmp = icmp slt i32 %11, %13, !dbg !5793
  br i1 %cmp, label %for.body, label %for.end, !dbg !5794

for.body:                                         ; preds = %for.cond
  %14 = load %struct.IDProperty*, %struct.IDProperty** %array, align 8, !dbg !5795
  %15 = load i32, i32* %a, align 4, !dbg !5796
  %idxprom = sext i32 %15 to i64, !dbg !5795
  %arrayidx = getelementptr inbounds %struct.IDProperty, %struct.IDProperty* %14, i64 %idxprom, !dbg !5795
  %16 = load i8*, i8** %wd.addr, align 8, !dbg !5797
  call void @IDP_WriteProperty_OnlyData(%struct.IDProperty* %arrayidx, i8* %16), !dbg !5798
  br label %for.inc, !dbg !5798

for.inc:                                          ; preds = %for.body
  %17 = load i32, i32* %a, align 4, !dbg !5799
  %inc = add nsw i32 %17, 1, !dbg !5799
  store i32 %inc, i32* %a, align 4, !dbg !5799
  br label %for.cond, !dbg !5800, !llvm.loop !5801

for.end:                                          ; preds = %for.cond
  br label %if.end, !dbg !5803

if.end:                                           ; preds = %for.end, %entry
  ret void, !dbg !5804
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @IDP_WriteProperty(%struct.IDProperty* %prop, i8* %wd) #0 !dbg !5805 {
entry:
  %prop.addr = alloca %struct.IDProperty*, align 8
  %wd.addr = alloca i8*, align 8
  store %struct.IDProperty* %prop, %struct.IDProperty** %prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.IDProperty** %prop.addr, metadata !5806, metadata !DIExpression()), !dbg !5807
  store i8* %wd, i8** %wd.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %wd.addr, metadata !5808, metadata !DIExpression()), !dbg !5809
  %0 = load i8*, i8** %wd.addr, align 8, !dbg !5810
  %1 = bitcast i8* %0 to %struct.WriteData*, !dbg !5810
  %2 = load %struct.IDProperty*, %struct.IDProperty** %prop.addr, align 8, !dbg !5811
  %3 = bitcast %struct.IDProperty* %2 to i8*, !dbg !5811
  call void @writestruct(%struct.WriteData* %1, i32 1096040772, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i32 1, i8* %3), !dbg !5812
  %4 = load %struct.IDProperty*, %struct.IDProperty** %prop.addr, align 8, !dbg !5813
  %5 = load i8*, i8** %wd.addr, align 8, !dbg !5814
  call void @IDP_WriteProperty_OnlyData(%struct.IDProperty* %4, i8* %5), !dbg !5815
  ret void, !dbg !5816
}

; Function Attrs: noinline nounwind uwtable
define internal void @writestruct(%struct.WriteData* %wd, i32 %filecode, i8* %structname, i32 %nr, i8* %adr) #0 !dbg !5817 {
entry:
  %wd.addr = alloca %struct.WriteData*, align 8
  %filecode.addr = alloca i32, align 4
  %structname.addr = alloca i8*, align 8
  %nr.addr = alloca i32, align 4
  %adr.addr = alloca i8*, align 8
  store %struct.WriteData* %wd, %struct.WriteData** %wd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WriteData** %wd.addr, metadata !5858, metadata !DIExpression()), !dbg !5859
  store i32 %filecode, i32* %filecode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %filecode.addr, metadata !5860, metadata !DIExpression()), !dbg !5861
  store i8* %structname, i8** %structname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %structname.addr, metadata !5862, metadata !DIExpression()), !dbg !5863
  store i32 %nr, i32* %nr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nr.addr, metadata !5864, metadata !DIExpression()), !dbg !5865
  store i8* %adr, i8** %adr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %adr.addr, metadata !5866, metadata !DIExpression()), !dbg !5867
  %0 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !5868
  %1 = load i32, i32* %filecode.addr, align 4, !dbg !5869
  %2 = load i8*, i8** %structname.addr, align 8, !dbg !5870
  %3 = load i32, i32* %nr.addr, align 4, !dbg !5871
  %4 = load i8*, i8** %adr.addr, align 8, !dbg !5872
  %5 = load i8*, i8** %adr.addr, align 8, !dbg !5873
  call void @writestruct_at_address(%struct.WriteData* %0, i32 %1, i8* %2, i32 %3, i8* %4, i8* %5), !dbg !5874
  ret void, !dbg !5875
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @BLO_write_file(%struct.Main* %mainvar, i8* %filepath, i32 %write_flags, %struct.ReportList* %reports, i32* %thumb) #0 !dbg !5876 {
entry:
  %retval = alloca i32, align 4
  %mainvar.addr = alloca %struct.Main*, align 8
  %filepath.addr = alloca i8*, align 8
  %write_flags.addr = alloca i32, align 4
  %reports.addr = alloca %struct.ReportList*, align 8
  %thumb.addr = alloca i32*, align 8
  %tempname = alloca [1025 x i8], align 16
  %err = alloca i32, align 4
  %write_user_block = alloca i32, align 4
  %ww_type = alloca i32, align 4
  %ww = alloca %struct.WriteWrap, align 8
  %path_list_backup = alloca i8*, align 8
  %path_list_flag = alloca i32, align 4
  %dir1 = alloca [1024 x i8], align 16
  %dir2 = alloca [1024 x i8], align 16
  %err_hist = alloca i8, align 1
  store %struct.Main* %mainvar, %struct.Main** %mainvar.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Main** %mainvar.addr, metadata !5885, metadata !DIExpression()), !dbg !5886
  store i8* %filepath, i8** %filepath.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %filepath.addr, metadata !5887, metadata !DIExpression()), !dbg !5888
  store i32 %write_flags, i32* %write_flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %write_flags.addr, metadata !5889, metadata !DIExpression()), !dbg !5890
  store %struct.ReportList* %reports, %struct.ReportList** %reports.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ReportList** %reports.addr, metadata !5891, metadata !DIExpression()), !dbg !5892
  store i32* %thumb, i32** %thumb.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %thumb.addr, metadata !5893, metadata !DIExpression()), !dbg !5894
  call void @llvm.dbg.declare(metadata [1025 x i8]* %tempname, metadata !5895, metadata !DIExpression()), !dbg !5899
  call void @llvm.dbg.declare(metadata i32* %err, metadata !5900, metadata !DIExpression()), !dbg !5901
  call void @llvm.dbg.declare(metadata i32* %write_user_block, metadata !5902, metadata !DIExpression()), !dbg !5903
  call void @llvm.dbg.declare(metadata i32* %ww_type, metadata !5904, metadata !DIExpression()), !dbg !5906
  call void @llvm.dbg.declare(metadata %struct.WriteWrap* %ww, metadata !5907, metadata !DIExpression()), !dbg !5908
  call void @llvm.dbg.declare(metadata i8** %path_list_backup, metadata !5909, metadata !DIExpression()), !dbg !5910
  store i8* null, i8** %path_list_backup, align 8, !dbg !5910
  call void @llvm.dbg.declare(metadata i32* %path_list_flag, metadata !5911, metadata !DIExpression()), !dbg !5912
  store i32 20, i32* %path_list_flag, align 4, !dbg !5912
  %arraydecay = getelementptr inbounds [1025 x i8], [1025 x i8]* %tempname, i64 0, i64 0, !dbg !5913
  %0 = load i8*, i8** %filepath.addr, align 8, !dbg !5914
  %call = call i64 (i8*, i64, i8*, ...) @BLI_snprintf(i8* %arraydecay, i64 1025, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i64 0, i64 0), i8* %0), !dbg !5915
  %1 = load i32, i32* %write_flags.addr, align 4, !dbg !5916
  %and = and i32 %1, 2, !dbg !5918
  %tobool = icmp ne i32 %and, 0, !dbg !5918
  br i1 %tobool, label %if.then, label %if.else, !dbg !5919

if.then:                                          ; preds = %entry
  store i32 2, i32* %ww_type, align 4, !dbg !5920
  br label %if.end, !dbg !5922

if.else:                                          ; preds = %entry
  store i32 1, i32* %ww_type, align 4, !dbg !5923
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %2 = load i32, i32* %ww_type, align 4, !dbg !5925
  call void @ww_handle_init(i32 %2, %struct.WriteWrap* %ww), !dbg !5926
  %open = getelementptr inbounds %struct.WriteWrap, %struct.WriteWrap* %ww, i32 0, i32 0, !dbg !5927
  %3 = load i8 (%struct.WriteWrap*, i8*)*, i8 (%struct.WriteWrap*, i8*)** %open, align 8, !dbg !5927
  %arraydecay1 = getelementptr inbounds [1025 x i8], [1025 x i8]* %tempname, i64 0, i64 0, !dbg !5929
  %call2 = call zeroext i8 %3(%struct.WriteWrap* %ww, i8* %arraydecay1), !dbg !5930
  %conv = zext i8 %call2 to i32, !dbg !5930
  %cmp = icmp eq i32 %conv, 0, !dbg !5931
  br i1 %cmp, label %if.then4, label %if.end8, !dbg !5932

if.then4:                                         ; preds = %if.end
  %4 = load %struct.ReportList*, %struct.ReportList** %reports.addr, align 8, !dbg !5933
  %arraydecay5 = getelementptr inbounds [1025 x i8], [1025 x i8]* %tempname, i64 0, i64 0, !dbg !5935
  %call6 = call i32* @__errno_location() #7, !dbg !5936
  %5 = load i32, i32* %call6, align 4, !dbg !5936
  %call7 = call i8* @strerror(i32 %5) #8, !dbg !5937
  call void (%struct.ReportList*, i32, i8*, ...) @BKE_reportf(%struct.ReportList* %4, i32 32, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay5, i8* %call7), !dbg !5938
  store i32 0, i32* %retval, align 4, !dbg !5939
  br label %return, !dbg !5939

if.end8:                                          ; preds = %if.end
  %6 = load i32, i32* %write_flags.addr, align 4, !dbg !5940
  %and9 = and i32 %6, 16777216, !dbg !5940
  %tobool10 = icmp ne i32 %and9, 0, !dbg !5940
  br i1 %tobool10, label %land.lhs.true, label %if.end15, !dbg !5940

land.lhs.true:                                    ; preds = %if.end8
  %7 = load i32, i32* %write_flags.addr, align 4, !dbg !5940
  %and11 = and i32 134217728, %7, !dbg !5940
  %tobool12 = icmp ne i32 %and11, 0, !dbg !5940
  br i1 %tobool12, label %if.then13, label %if.end15, !dbg !5942

if.then13:                                        ; preds = %land.lhs.true
  %8 = load %struct.Main*, %struct.Main** %mainvar.addr, align 8, !dbg !5943
  %call14 = call i8* @BKE_bpath_list_backup(%struct.Main* %8, i32 20), !dbg !5945
  store i8* %call14, i8** %path_list_backup, align 8, !dbg !5946
  br label %if.end15, !dbg !5947

if.end15:                                         ; preds = %if.then13, %land.lhs.true, %if.end8
  %9 = load i32, i32* %write_flags.addr, align 4, !dbg !5948
  %and16 = and i32 %9, 16777216, !dbg !5950
  %tobool17 = icmp ne i32 %and16, 0, !dbg !5950
  br i1 %tobool17, label %if.then18, label %if.end45, !dbg !5951

if.then18:                                        ; preds = %if.end15
  call void @llvm.dbg.declare(metadata [1024 x i8]* %dir1, metadata !5952, metadata !DIExpression()), !dbg !5954
  call void @llvm.dbg.declare(metadata [1024 x i8]* %dir2, metadata !5955, metadata !DIExpression()), !dbg !5956
  %10 = load i8*, i8** %filepath.addr, align 8, !dbg !5957
  %arraydecay19 = getelementptr inbounds [1024 x i8], [1024 x i8]* %dir1, i64 0, i64 0, !dbg !5958
  call void @BLI_split_dir_part(i8* %10, i8* %arraydecay19, i64 1024), !dbg !5959
  %11 = load %struct.Main*, %struct.Main** %mainvar.addr, align 8, !dbg !5960
  %name = getelementptr inbounds %struct.Main, %struct.Main* %11, i32 0, i32 2, !dbg !5961
  %arraydecay20 = getelementptr inbounds [1024 x i8], [1024 x i8]* %name, i64 0, i64 0, !dbg !5960
  %arraydecay21 = getelementptr inbounds [1024 x i8], [1024 x i8]* %dir2, i64 0, i64 0, !dbg !5962
  call void @BLI_split_dir_part(i8* %arraydecay20, i8* %arraydecay21, i64 1024), !dbg !5963
  %12 = load %struct.Main*, %struct.Main** %mainvar.addr, align 8, !dbg !5964
  %name22 = getelementptr inbounds %struct.Main, %struct.Main* %12, i32 0, i32 2, !dbg !5965
  %arraydecay23 = getelementptr inbounds [1024 x i8], [1024 x i8]* %name22, i64 0, i64 0, !dbg !5964
  %arraydecay24 = getelementptr inbounds [1024 x i8], [1024 x i8]* %dir1, i64 0, i64 0, !dbg !5966
  call void @BLI_cleanup_dir(i8* %arraydecay23, i8* %arraydecay24), !dbg !5967
  %13 = load %struct.Main*, %struct.Main** %mainvar.addr, align 8, !dbg !5968
  %name25 = getelementptr inbounds %struct.Main, %struct.Main* %13, i32 0, i32 2, !dbg !5969
  %arraydecay26 = getelementptr inbounds [1024 x i8], [1024 x i8]* %name25, i64 0, i64 0, !dbg !5968
  %arraydecay27 = getelementptr inbounds [1024 x i8], [1024 x i8]* %dir2, i64 0, i64 0, !dbg !5970
  call void @BLI_cleanup_dir(i8* %arraydecay26, i8* %arraydecay27), !dbg !5971
  %14 = load i8, i8* getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 3), align 8, !dbg !5972
  %conv28 = zext i8 %14 to i32, !dbg !5974
  %tobool29 = icmp ne i32 %conv28, 0, !dbg !5974
  br i1 %tobool29, label %land.lhs.true30, label %if.else38, !dbg !5975

land.lhs.true30:                                  ; preds = %if.then18
  %arraydecay31 = getelementptr inbounds [1024 x i8], [1024 x i8]* %dir1, i64 0, i64 0, !dbg !5976
  %arraydecay32 = getelementptr inbounds [1024 x i8], [1024 x i8]* %dir2, i64 0, i64 0, !dbg !5977
  %call33 = call i32 @strcmp(i8* %arraydecay31, i8* %arraydecay32) #9, !dbg !5978
  %cmp34 = icmp eq i32 %call33, 0, !dbg !5979
  br i1 %cmp34, label %if.then36, label %if.else38, !dbg !5980

if.then36:                                        ; preds = %land.lhs.true30
  %15 = load i32, i32* %write_flags.addr, align 4, !dbg !5981
  %and37 = and i32 %15, -16777217, !dbg !5981
  store i32 %and37, i32* %write_flags.addr, align 4, !dbg !5981
  br label %if.end44, !dbg !5983

if.else38:                                        ; preds = %land.lhs.true30, %if.then18
  %16 = load i8, i8* getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 3), align 8, !dbg !5984
  %tobool39 = icmp ne i8 %16, 0, !dbg !5987
  br i1 %tobool39, label %if.then40, label %if.end43, !dbg !5988

if.then40:                                        ; preds = %if.else38
  %17 = load %struct.Main*, %struct.Main** %mainvar.addr, align 8, !dbg !5989
  %18 = load %struct.Main*, %struct.Main** getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 0), align 8, !dbg !5991
  %name41 = getelementptr inbounds %struct.Main, %struct.Main* %18, i32 0, i32 2, !dbg !5992
  %arraydecay42 = getelementptr inbounds [1024 x i8], [1024 x i8]* %name41, i64 0, i64 0, !dbg !5993
  call void @BKE_bpath_absolute_convert(%struct.Main* %17, i8* %arraydecay42, %struct.ReportList* null), !dbg !5994
  br label %if.end43, !dbg !5995

if.end43:                                         ; preds = %if.then40, %if.else38
  br label %if.end44

if.end44:                                         ; preds = %if.end43, %if.then36
  br label %if.end45, !dbg !5996

if.end45:                                         ; preds = %if.end44, %if.end15
  %19 = load i32, i32* %write_flags.addr, align 4, !dbg !5997
  %and46 = and i32 %19, 512, !dbg !5998
  store i32 %and46, i32* %write_user_block, align 4, !dbg !5999
  %20 = load i32, i32* %write_flags.addr, align 4, !dbg !6000
  %and47 = and i32 %20, 16777216, !dbg !6002
  %tobool48 = icmp ne i32 %and47, 0, !dbg !6002
  br i1 %tobool48, label %if.then49, label %if.end50, !dbg !6003

if.then49:                                        ; preds = %if.end45
  %21 = load %struct.Main*, %struct.Main** %mainvar.addr, align 8, !dbg !6004
  %22 = load i8*, i8** %filepath.addr, align 8, !dbg !6005
  call void @BKE_bpath_relative_convert(%struct.Main* %21, i8* %22, %struct.ReportList* null), !dbg !6006
  br label %if.end50, !dbg !6006

if.end50:                                         ; preds = %if.then49, %if.end45
  %23 = load %struct.Main*, %struct.Main** %mainvar.addr, align 8, !dbg !6007
  %24 = load i32, i32* %write_user_block, align 4, !dbg !6008
  %25 = load i32, i32* %write_flags.addr, align 4, !dbg !6009
  %26 = load i32*, i32** %thumb.addr, align 8, !dbg !6010
  %call51 = call i32 @write_file_handle(%struct.Main* %23, %struct.WriteWrap* %ww, %struct.MemFile* null, %struct.MemFile* null, i32 %24, i32 %25, i32* %26), !dbg !6011
  store i32 %call51, i32* %err, align 4, !dbg !6012
  %close = getelementptr inbounds %struct.WriteWrap, %struct.WriteWrap* %ww, i32 0, i32 1, !dbg !6013
  %27 = load i8 (%struct.WriteWrap*)*, i8 (%struct.WriteWrap*)** %close, align 8, !dbg !6013
  %call52 = call zeroext i8 %27(%struct.WriteWrap* %ww), !dbg !6014
  %28 = load i8*, i8** %path_list_backup, align 8, !dbg !6015
  %tobool53 = icmp ne i8* %28, null, !dbg !6015
  br i1 %tobool53, label %if.then54, label %if.end55, !dbg !6017

if.then54:                                        ; preds = %if.end50
  %29 = load %struct.Main*, %struct.Main** %mainvar.addr, align 8, !dbg !6018
  %30 = load i8*, i8** %path_list_backup, align 8, !dbg !6020
  call void @BKE_bpath_list_restore(%struct.Main* %29, i32 20, i8* %30), !dbg !6021
  %31 = load i8*, i8** %path_list_backup, align 8, !dbg !6022
  call void @BKE_bpath_list_free(i8* %31), !dbg !6023
  br label %if.end55, !dbg !6024

if.end55:                                         ; preds = %if.then54, %if.end50
  %32 = load i32, i32* %err, align 4, !dbg !6025
  %tobool56 = icmp ne i32 %32, 0, !dbg !6025
  br i1 %tobool56, label %if.then57, label %if.end62, !dbg !6027

if.then57:                                        ; preds = %if.end55
  %33 = load %struct.ReportList*, %struct.ReportList** %reports.addr, align 8, !dbg !6028
  %call58 = call i32* @__errno_location() #7, !dbg !6030
  %34 = load i32, i32* %call58, align 4, !dbg !6030
  %call59 = call i8* @strerror(i32 %34) #8, !dbg !6031
  call void @BKE_report(%struct.ReportList* %33, i32 32, i8* %call59), !dbg !6032
  %arraydecay60 = getelementptr inbounds [1025 x i8], [1025 x i8]* %tempname, i64 0, i64 0, !dbg !6033
  %call61 = call i32 @remove(i8* %arraydecay60) #8, !dbg !6034
  store i32 0, i32* %retval, align 4, !dbg !6035
  br label %return, !dbg !6035

if.end62:                                         ; preds = %if.end55
  %35 = load i32, i32* %write_flags.addr, align 4, !dbg !6036
  %and63 = and i32 %35, 33554432, !dbg !6038
  %tobool64 = icmp ne i32 %and63, 0, !dbg !6038
  br i1 %tobool64, label %if.then65, label %if.end70, !dbg !6039

if.then65:                                        ; preds = %if.end62
  call void @llvm.dbg.declare(metadata i8* %err_hist, metadata !6040, metadata !DIExpression()), !dbg !6042
  %36 = load i8*, i8** %filepath.addr, align 8, !dbg !6043
  %37 = load %struct.ReportList*, %struct.ReportList** %reports.addr, align 8, !dbg !6044
  %call66 = call zeroext i8 @do_history(i8* %36, %struct.ReportList* %37), !dbg !6045
  store i8 %call66, i8* %err_hist, align 1, !dbg !6042
  %38 = load i8, i8* %err_hist, align 1, !dbg !6046
  %tobool67 = icmp ne i8 %38, 0, !dbg !6046
  br i1 %tobool67, label %if.then68, label %if.end69, !dbg !6048

if.then68:                                        ; preds = %if.then65
  %39 = load %struct.ReportList*, %struct.ReportList** %reports.addr, align 8, !dbg !6049
  call void @BKE_report(%struct.ReportList* %39, i32 32, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.3, i64 0, i64 0)), !dbg !6051
  store i32 0, i32* %retval, align 4, !dbg !6052
  br label %return, !dbg !6052

if.end69:                                         ; preds = %if.then65
  br label %if.end70, !dbg !6053

if.end70:                                         ; preds = %if.end69, %if.end62
  %arraydecay71 = getelementptr inbounds [1025 x i8], [1025 x i8]* %tempname, i64 0, i64 0, !dbg !6054
  %40 = load i8*, i8** %filepath.addr, align 8, !dbg !6056
  %call72 = call i32 @BLI_rename(i8* %arraydecay71, i8* %40), !dbg !6057
  %cmp73 = icmp ne i32 %call72, 0, !dbg !6058
  br i1 %cmp73, label %if.then75, label %if.end76, !dbg !6059

if.then75:                                        ; preds = %if.end70
  %41 = load %struct.ReportList*, %struct.ReportList** %reports.addr, align 8, !dbg !6060
  call void @BKE_report(%struct.ReportList* %41, i32 32, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.4, i64 0, i64 0)), !dbg !6062
  store i32 0, i32* %retval, align 4, !dbg !6063
  br label %return, !dbg !6063

if.end76:                                         ; preds = %if.end70
  store i32 1, i32* %retval, align 4, !dbg !6064
  br label %return, !dbg !6064

return:                                           ; preds = %if.end76, %if.then75, %if.then68, %if.then57, %if.then4
  %42 = load i32, i32* %retval, align 4, !dbg !6065
  ret i32 %42, !dbg !6065
}

declare dso_local i64 @BLI_snprintf(i8*, i64, i8*, ...) #2

; Function Attrs: noinline nounwind uwtable
define internal void @ww_handle_init(i32 %ww_type, %struct.WriteWrap* %r_ww) #0 !dbg !6066 {
entry:
  %ww_type.addr = alloca i32, align 4
  %r_ww.addr = alloca %struct.WriteWrap*, align 8
  store i32 %ww_type, i32* %ww_type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ww_type.addr, metadata !6069, metadata !DIExpression()), !dbg !6070
  store %struct.WriteWrap* %r_ww, %struct.WriteWrap** %r_ww.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WriteWrap** %r_ww.addr, metadata !6071, metadata !DIExpression()), !dbg !6072
  %0 = load %struct.WriteWrap*, %struct.WriteWrap** %r_ww.addr, align 8, !dbg !6073
  %1 = bitcast %struct.WriteWrap* %0 to i8*, !dbg !6074
  call void @llvm.memset.p0i8.i64(i8* align 8 %1, i8 0, i64 32, i1 false), !dbg !6074
  %2 = load i32, i32* %ww_type.addr, align 4, !dbg !6075
  switch i32 %2, label %sw.default [
    i32 2, label %sw.bb
  ], !dbg !6076

sw.bb:                                            ; preds = %entry
  %3 = load %struct.WriteWrap*, %struct.WriteWrap** %r_ww.addr, align 8, !dbg !6077
  %open = getelementptr inbounds %struct.WriteWrap, %struct.WriteWrap* %3, i32 0, i32 0, !dbg !6080
  store i8 (%struct.WriteWrap*, i8*)* @ww_open_zlib, i8 (%struct.WriteWrap*, i8*)** %open, align 8, !dbg !6081
  %4 = load %struct.WriteWrap*, %struct.WriteWrap** %r_ww.addr, align 8, !dbg !6082
  %close = getelementptr inbounds %struct.WriteWrap, %struct.WriteWrap* %4, i32 0, i32 1, !dbg !6083
  store i8 (%struct.WriteWrap*)* @ww_close_zlib, i8 (%struct.WriteWrap*)** %close, align 8, !dbg !6084
  %5 = load %struct.WriteWrap*, %struct.WriteWrap** %r_ww.addr, align 8, !dbg !6085
  %write = getelementptr inbounds %struct.WriteWrap, %struct.WriteWrap* %5, i32 0, i32 2, !dbg !6086
  store i64 (%struct.WriteWrap*, i8*, i64)* @ww_write_zlib, i64 (%struct.WriteWrap*, i8*, i64)** %write, align 8, !dbg !6087
  br label %sw.epilog, !dbg !6088

sw.default:                                       ; preds = %entry
  %6 = load %struct.WriteWrap*, %struct.WriteWrap** %r_ww.addr, align 8, !dbg !6089
  %open1 = getelementptr inbounds %struct.WriteWrap, %struct.WriteWrap* %6, i32 0, i32 0, !dbg !6091
  store i8 (%struct.WriteWrap*, i8*)* @ww_open_none, i8 (%struct.WriteWrap*, i8*)** %open1, align 8, !dbg !6092
  %7 = load %struct.WriteWrap*, %struct.WriteWrap** %r_ww.addr, align 8, !dbg !6093
  %close2 = getelementptr inbounds %struct.WriteWrap, %struct.WriteWrap* %7, i32 0, i32 1, !dbg !6094
  store i8 (%struct.WriteWrap*)* @ww_close_none, i8 (%struct.WriteWrap*)** %close2, align 8, !dbg !6095
  %8 = load %struct.WriteWrap*, %struct.WriteWrap** %r_ww.addr, align 8, !dbg !6096
  %write3 = getelementptr inbounds %struct.WriteWrap, %struct.WriteWrap* %8, i32 0, i32 2, !dbg !6097
  store i64 (%struct.WriteWrap*, i8*, i64)* @ww_write_none, i64 (%struct.WriteWrap*, i8*, i64)** %write3, align 8, !dbg !6098
  br label %sw.epilog, !dbg !6099

sw.epilog:                                        ; preds = %sw.default, %sw.bb
  ret void, !dbg !6100
}

declare dso_local void @BKE_reportf(%struct.ReportList*, i32, i8*, ...) #2

; Function Attrs: nounwind
declare dso_local i8* @strerror(i32) #3

; Function Attrs: nounwind readnone
declare dso_local i32* @__errno_location() #4

declare dso_local i8* @BKE_bpath_list_backup(%struct.Main*, i32) #2

declare dso_local void @BLI_split_dir_part(i8*, i8*, i64) #2

declare dso_local void @BLI_cleanup_dir(i8*, i8*) #2

; Function Attrs: nounwind readonly
declare dso_local i32 @strcmp(i8*, i8*) #5

declare dso_local void @BKE_bpath_absolute_convert(%struct.Main*, i8*, %struct.ReportList*) #2

declare dso_local void @BKE_bpath_relative_convert(%struct.Main*, i8*, %struct.ReportList*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @write_file_handle(%struct.Main* %mainvar, %struct.WriteWrap* %ww, %struct.MemFile* %compare, %struct.MemFile* %current, i32 %write_user_block, i32 %write_flags, i32* %thumb) #0 !dbg !6101 {
entry:
  %mainvar.addr = alloca %struct.Main*, align 8
  %ww.addr = alloca %struct.WriteWrap*, align 8
  %compare.addr = alloca %struct.MemFile*, align 8
  %current.addr = alloca %struct.MemFile*, align 8
  %write_user_block.addr = alloca i32, align 4
  %write_flags.addr = alloca i32, align 4
  %thumb.addr = alloca i32*, align 8
  %bhead = alloca %struct.BHead, align 8
  %mainlist = alloca %struct.ListBase, align 8
  %buf = alloca [16 x i8], align 16
  %wd = alloca %struct.WriteData*, align 8
  store %struct.Main* %mainvar, %struct.Main** %mainvar.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Main** %mainvar.addr, metadata !6104, metadata !DIExpression()), !dbg !6105
  store %struct.WriteWrap* %ww, %struct.WriteWrap** %ww.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WriteWrap** %ww.addr, metadata !6106, metadata !DIExpression()), !dbg !6107
  store %struct.MemFile* %compare, %struct.MemFile** %compare.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MemFile** %compare.addr, metadata !6108, metadata !DIExpression()), !dbg !6109
  store %struct.MemFile* %current, %struct.MemFile** %current.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MemFile** %current.addr, metadata !6110, metadata !DIExpression()), !dbg !6111
  store i32 %write_user_block, i32* %write_user_block.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %write_user_block.addr, metadata !6112, metadata !DIExpression()), !dbg !6113
  store i32 %write_flags, i32* %write_flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %write_flags.addr, metadata !6114, metadata !DIExpression()), !dbg !6115
  store i32* %thumb, i32** %thumb.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %thumb.addr, metadata !6116, metadata !DIExpression()), !dbg !6117
  call void @llvm.dbg.declare(metadata %struct.BHead* %bhead, metadata !6118, metadata !DIExpression()), !dbg !6127
  call void @llvm.dbg.declare(metadata %struct.ListBase* %mainlist, metadata !6128, metadata !DIExpression()), !dbg !6129
  call void @llvm.dbg.declare(metadata [16 x i8]* %buf, metadata !6130, metadata !DIExpression()), !dbg !6131
  call void @llvm.dbg.declare(metadata %struct.WriteData** %wd, metadata !6132, metadata !DIExpression()), !dbg !6133
  %0 = load %struct.Main*, %struct.Main** %mainvar.addr, align 8, !dbg !6134
  call void @blo_split_main(%struct.ListBase* %mainlist, %struct.Main* %0), !dbg !6135
  %1 = load %struct.WriteWrap*, %struct.WriteWrap** %ww.addr, align 8, !dbg !6136
  %2 = load %struct.MemFile*, %struct.MemFile** %compare.addr, align 8, !dbg !6137
  %3 = load %struct.MemFile*, %struct.MemFile** %current.addr, align 8, !dbg !6138
  %call = call %struct.WriteData* @bgnwrite(%struct.WriteWrap* %1, %struct.MemFile* %2, %struct.MemFile* %3), !dbg !6139
  store %struct.WriteData* %call, %struct.WriteData** %wd, align 8, !dbg !6140
  %4 = load i32, i32* %write_flags.addr, align 4, !dbg !6141
  %and = and i32 %4, 67108864, !dbg !6142
  %cmp = icmp ne i32 %and, 0, !dbg !6143
  %conv = zext i1 %cmp to i32, !dbg !6143
  %conv1 = trunc i32 %conv to i8, !dbg !6144
  %5 = load %struct.WriteData*, %struct.WriteData** %wd, align 8, !dbg !6145
  %use_mesh_compat = getelementptr inbounds %struct.WriteData, %struct.WriteData* %5, i32 0, i32 10, !dbg !6146
  store i8 %conv1, i8* %use_mesh_compat, align 8, !dbg !6147
  %6 = load %struct.MemFile*, %struct.MemFile** %current.addr, align 8, !dbg !6148
  %tobool = icmp ne %struct.MemFile* %6, null, !dbg !6148
  br i1 %tobool, label %if.end, label %if.then, !dbg !6150

if.then:                                          ; preds = %entry
  %7 = load %struct.Main*, %struct.Main** %mainvar.addr, align 8, !dbg !6151
  call void @customnodes_add_deprecated_data(%struct.Main* %7), !dbg !6153
  br label %if.end, !dbg !6154

if.end:                                           ; preds = %if.then, %entry
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %buf, i64 0, i64 0, !dbg !6155
  %call2 = call i32 (i8*, i8*, ...) @sprintf(i8* %arraydecay, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.7, i64 0, i64 0), i32 45, i32 118, i32 272) #8, !dbg !6156
  %8 = load %struct.WriteData*, %struct.WriteData** %wd, align 8, !dbg !6157
  %arraydecay3 = getelementptr inbounds [16 x i8], [16 x i8]* %buf, i64 0, i64 0, !dbg !6158
  call void @mywrite(%struct.WriteData* %8, i8* %arraydecay3, i32 12), !dbg !6159
  %9 = load %struct.WriteData*, %struct.WriteData** %wd, align 8, !dbg !6160
  %10 = load %struct.Main*, %struct.Main** %mainvar.addr, align 8, !dbg !6161
  call void @write_renderinfo(%struct.WriteData* %9, %struct.Main* %10), !dbg !6162
  %11 = load %struct.WriteData*, %struct.WriteData** %wd, align 8, !dbg !6163
  %12 = load i32*, i32** %thumb.addr, align 8, !dbg !6164
  call void @write_thumb(%struct.WriteData* %11, i32* %12), !dbg !6165
  %13 = load %struct.WriteData*, %struct.WriteData** %wd, align 8, !dbg !6166
  %14 = load i32, i32* %write_flags.addr, align 4, !dbg !6167
  %15 = load %struct.Main*, %struct.Main** %mainvar.addr, align 8, !dbg !6168
  call void @write_global(%struct.WriteData* %13, i32 %14, %struct.Main* %15), !dbg !6169
  %16 = load %struct.WriteData*, %struct.WriteData** %wd, align 8, !dbg !6170
  %17 = load %struct.Main*, %struct.Main** %mainvar.addr, align 8, !dbg !6171
  %wm = getelementptr inbounds %struct.Main, %struct.Main* %17, i32 0, i32 40, !dbg !6172
  call void @write_windowmanagers(%struct.WriteData* %16, %struct.ListBase* %wm), !dbg !6173
  %18 = load %struct.WriteData*, %struct.WriteData** %wd, align 8, !dbg !6174
  %19 = load %struct.Main*, %struct.Main** %mainvar.addr, align 8, !dbg !6175
  %screen = getelementptr inbounds %struct.Main, %struct.Main* %19, i32 0, i32 26, !dbg !6176
  call void @write_screens(%struct.WriteData* %18, %struct.ListBase* %screen), !dbg !6177
  %20 = load %struct.WriteData*, %struct.WriteData** %wd, align 8, !dbg !6178
  %21 = load %struct.Main*, %struct.Main** %mainvar.addr, align 8, !dbg !6179
  %movieclip = getelementptr inbounds %struct.Main, %struct.Main* %21, i32 0, i32 42, !dbg !6180
  call void @write_movieclips(%struct.WriteData* %20, %struct.ListBase* %movieclip), !dbg !6181
  %22 = load %struct.WriteData*, %struct.WriteData** %wd, align 8, !dbg !6182
  %23 = load %struct.Main*, %struct.Main** %mainvar.addr, align 8, !dbg !6183
  %mask = getelementptr inbounds %struct.Main, %struct.Main* %23, i32 0, i32 43, !dbg !6184
  call void @write_masks(%struct.WriteData* %22, %struct.ListBase* %mask), !dbg !6185
  %24 = load %struct.WriteData*, %struct.WriteData** %wd, align 8, !dbg !6186
  %25 = load %struct.Main*, %struct.Main** %mainvar.addr, align 8, !dbg !6187
  %scene = getelementptr inbounds %struct.Main, %struct.Main* %25, i32 0, i32 11, !dbg !6188
  call void @write_scenes(%struct.WriteData* %24, %struct.ListBase* %scene), !dbg !6189
  %26 = load %struct.WriteData*, %struct.WriteData** %wd, align 8, !dbg !6190
  %27 = load %struct.Main*, %struct.Main** %mainvar.addr, align 8, !dbg !6191
  %curve = getelementptr inbounds %struct.Main, %struct.Main* %27, i32 0, i32 15, !dbg !6192
  call void @write_curves(%struct.WriteData* %26, %struct.ListBase* %curve), !dbg !6193
  %28 = load %struct.WriteData*, %struct.WriteData** %wd, align 8, !dbg !6194
  %29 = load %struct.Main*, %struct.Main** %mainvar.addr, align 8, !dbg !6195
  %mball = getelementptr inbounds %struct.Main, %struct.Main* %29, i32 0, i32 16, !dbg !6196
  call void @write_mballs(%struct.WriteData* %28, %struct.ListBase* %mball), !dbg !6197
  %30 = load %struct.WriteData*, %struct.WriteData** %wd, align 8, !dbg !6198
  %31 = load %struct.Main*, %struct.Main** %mainvar.addr, align 8, !dbg !6199
  %image = getelementptr inbounds %struct.Main, %struct.Main* %31, i32 0, i32 19, !dbg !6200
  call void @write_images(%struct.WriteData* %30, %struct.ListBase* %image), !dbg !6201
  %32 = load %struct.WriteData*, %struct.WriteData** %wd, align 8, !dbg !6202
  %33 = load %struct.Main*, %struct.Main** %mainvar.addr, align 8, !dbg !6203
  %camera = getelementptr inbounds %struct.Main, %struct.Main* %33, i32 0, i32 22, !dbg !6204
  call void @write_cameras(%struct.WriteData* %32, %struct.ListBase* %camera), !dbg !6205
  %34 = load %struct.WriteData*, %struct.WriteData** %wd, align 8, !dbg !6206
  %35 = load %struct.Main*, %struct.Main** %mainvar.addr, align 8, !dbg !6207
  %lamp = getelementptr inbounds %struct.Main, %struct.Main* %35, i32 0, i32 21, !dbg !6208
  call void @write_lamps(%struct.WriteData* %34, %struct.ListBase* %lamp), !dbg !6209
  %36 = load %struct.WriteData*, %struct.WriteData** %wd, align 8, !dbg !6210
  %37 = load %struct.Main*, %struct.Main** %mainvar.addr, align 8, !dbg !6211
  %latt = getelementptr inbounds %struct.Main, %struct.Main* %37, i32 0, i32 20, !dbg !6212
  call void @write_lattices(%struct.WriteData* %36, %struct.ListBase* %latt), !dbg !6213
  %38 = load %struct.WriteData*, %struct.WriteData** %wd, align 8, !dbg !6214
  %39 = load %struct.Main*, %struct.Main** %mainvar.addr, align 8, !dbg !6215
  %vfont = getelementptr inbounds %struct.Main, %struct.Main* %39, i32 0, i32 28, !dbg !6216
  call void @write_vfonts(%struct.WriteData* %38, %struct.ListBase* %vfont), !dbg !6217
  %40 = load %struct.WriteData*, %struct.WriteData** %wd, align 8, !dbg !6218
  %41 = load %struct.Main*, %struct.Main** %mainvar.addr, align 8, !dbg !6219
  %key = getelementptr inbounds %struct.Main, %struct.Main* %41, i32 0, i32 24, !dbg !6220
  call void @write_keys(%struct.WriteData* %40, %struct.ListBase* %key), !dbg !6221
  %42 = load %struct.WriteData*, %struct.WriteData** %wd, align 8, !dbg !6222
  %43 = load %struct.Main*, %struct.Main** %mainvar.addr, align 8, !dbg !6223
  %world = getelementptr inbounds %struct.Main, %struct.Main* %43, i32 0, i32 25, !dbg !6224
  call void @write_worlds(%struct.WriteData* %42, %struct.ListBase* %world), !dbg !6225
  %44 = load %struct.WriteData*, %struct.WriteData** %wd, align 8, !dbg !6226
  %45 = load %struct.Main*, %struct.Main** %mainvar.addr, align 8, !dbg !6227
  %text = getelementptr inbounds %struct.Main, %struct.Main* %45, i32 0, i32 29, !dbg !6228
  call void @write_texts(%struct.WriteData* %44, %struct.ListBase* %text), !dbg !6229
  %46 = load %struct.WriteData*, %struct.WriteData** %wd, align 8, !dbg !6230
  %47 = load %struct.Main*, %struct.Main** %mainvar.addr, align 8, !dbg !6231
  %speaker = getelementptr inbounds %struct.Main, %struct.Main* %47, i32 0, i32 30, !dbg !6232
  call void @write_speakers(%struct.WriteData* %46, %struct.ListBase* %speaker), !dbg !6233
  %48 = load %struct.WriteData*, %struct.WriteData** %wd, align 8, !dbg !6234
  %49 = load %struct.Main*, %struct.Main** %mainvar.addr, align 8, !dbg !6235
  %sound = getelementptr inbounds %struct.Main, %struct.Main* %49, i32 0, i32 31, !dbg !6236
  call void @write_sounds(%struct.WriteData* %48, %struct.ListBase* %sound), !dbg !6237
  %50 = load %struct.WriteData*, %struct.WriteData** %wd, align 8, !dbg !6238
  %51 = load %struct.Main*, %struct.Main** %mainvar.addr, align 8, !dbg !6239
  %group = getelementptr inbounds %struct.Main, %struct.Main* %51, i32 0, i32 32, !dbg !6240
  call void @write_groups(%struct.WriteData* %50, %struct.ListBase* %group), !dbg !6241
  %52 = load %struct.WriteData*, %struct.WriteData** %wd, align 8, !dbg !6242
  %53 = load %struct.Main*, %struct.Main** %mainvar.addr, align 8, !dbg !6243
  %armature = getelementptr inbounds %struct.Main, %struct.Main* %53, i32 0, i32 33, !dbg !6244
  call void @write_armatures(%struct.WriteData* %52, %struct.ListBase* %armature), !dbg !6245
  %54 = load %struct.WriteData*, %struct.WriteData** %wd, align 8, !dbg !6246
  %55 = load %struct.Main*, %struct.Main** %mainvar.addr, align 8, !dbg !6247
  %action = getelementptr inbounds %struct.Main, %struct.Main* %55, i32 0, i32 34, !dbg !6248
  call void @write_actions(%struct.WriteData* %54, %struct.ListBase* %action), !dbg !6249
  %56 = load %struct.WriteData*, %struct.WriteData** %wd, align 8, !dbg !6250
  %57 = load %struct.Main*, %struct.Main** %mainvar.addr, align 8, !dbg !6251
  %object = getelementptr inbounds %struct.Main, %struct.Main* %57, i32 0, i32 13, !dbg !6252
  call void @write_objects(%struct.WriteData* %56, %struct.ListBase* %object), !dbg !6253
  %58 = load %struct.WriteData*, %struct.WriteData** %wd, align 8, !dbg !6254
  %59 = load %struct.Main*, %struct.Main** %mainvar.addr, align 8, !dbg !6255
  %mat = getelementptr inbounds %struct.Main, %struct.Main* %59, i32 0, i32 17, !dbg !6256
  call void @write_materials(%struct.WriteData* %58, %struct.ListBase* %mat), !dbg !6257
  %60 = load %struct.WriteData*, %struct.WriteData** %wd, align 8, !dbg !6258
  %61 = load %struct.Main*, %struct.Main** %mainvar.addr, align 8, !dbg !6259
  %tex = getelementptr inbounds %struct.Main, %struct.Main* %61, i32 0, i32 18, !dbg !6260
  call void @write_textures(%struct.WriteData* %60, %struct.ListBase* %tex), !dbg !6261
  %62 = load %struct.WriteData*, %struct.WriteData** %wd, align 8, !dbg !6262
  %63 = load %struct.Main*, %struct.Main** %mainvar.addr, align 8, !dbg !6263
  %mesh = getelementptr inbounds %struct.Main, %struct.Main* %63, i32 0, i32 14, !dbg !6264
  call void @write_meshes(%struct.WriteData* %62, %struct.ListBase* %mesh), !dbg !6265
  %64 = load %struct.WriteData*, %struct.WriteData** %wd, align 8, !dbg !6266
  %65 = load %struct.Main*, %struct.Main** %mainvar.addr, align 8, !dbg !6267
  %particle = getelementptr inbounds %struct.Main, %struct.Main* %65, i32 0, i32 37, !dbg !6268
  call void @write_particlesettings(%struct.WriteData* %64, %struct.ListBase* %particle), !dbg !6269
  %66 = load %struct.WriteData*, %struct.WriteData** %wd, align 8, !dbg !6270
  %67 = load %struct.Main*, %struct.Main** %mainvar.addr, align 8, !dbg !6271
  %nodetree = getelementptr inbounds %struct.Main, %struct.Main* %67, i32 0, i32 35, !dbg !6272
  call void @write_nodetrees(%struct.WriteData* %66, %struct.ListBase* %nodetree), !dbg !6273
  %68 = load %struct.WriteData*, %struct.WriteData** %wd, align 8, !dbg !6274
  %69 = load %struct.Main*, %struct.Main** %mainvar.addr, align 8, !dbg !6275
  %brush = getelementptr inbounds %struct.Main, %struct.Main* %69, i32 0, i32 36, !dbg !6276
  call void @write_brushes(%struct.WriteData* %68, %struct.ListBase* %brush), !dbg !6277
  %70 = load %struct.WriteData*, %struct.WriteData** %wd, align 8, !dbg !6278
  %71 = load %struct.Main*, %struct.Main** %mainvar.addr, align 8, !dbg !6279
  %palettes = getelementptr inbounds %struct.Main, %struct.Main* %71, i32 0, i32 38, !dbg !6280
  call void @write_palettes(%struct.WriteData* %70, %struct.ListBase* %palettes), !dbg !6281
  %72 = load %struct.WriteData*, %struct.WriteData** %wd, align 8, !dbg !6282
  %73 = load %struct.Main*, %struct.Main** %mainvar.addr, align 8, !dbg !6283
  %paintcurves = getelementptr inbounds %struct.Main, %struct.Main* %73, i32 0, i32 39, !dbg !6284
  call void @write_paintcurves(%struct.WriteData* %72, %struct.ListBase* %paintcurves), !dbg !6285
  %74 = load %struct.WriteData*, %struct.WriteData** %wd, align 8, !dbg !6286
  %75 = load %struct.Main*, %struct.Main** %mainvar.addr, align 8, !dbg !6287
  %script = getelementptr inbounds %struct.Main, %struct.Main* %75, i32 0, i32 27, !dbg !6288
  call void @write_scripts(%struct.WriteData* %74, %struct.ListBase* %script), !dbg !6289
  %76 = load %struct.WriteData*, %struct.WriteData** %wd, align 8, !dbg !6290
  %77 = load %struct.Main*, %struct.Main** %mainvar.addr, align 8, !dbg !6291
  %gpencil = getelementptr inbounds %struct.Main, %struct.Main* %77, i32 0, i32 41, !dbg !6292
  call void @write_gpencils(%struct.WriteData* %76, %struct.ListBase* %gpencil), !dbg !6293
  %78 = load %struct.WriteData*, %struct.WriteData** %wd, align 8, !dbg !6294
  %79 = load %struct.Main*, %struct.Main** %mainvar.addr, align 8, !dbg !6295
  %linestyle = getelementptr inbounds %struct.Main, %struct.Main* %79, i32 0, i32 44, !dbg !6296
  call void @write_linestyles(%struct.WriteData* %78, %struct.ListBase* %linestyle), !dbg !6297
  %80 = load %struct.WriteData*, %struct.WriteData** %wd, align 8, !dbg !6298
  %81 = load %struct.Main*, %struct.Main** %mainvar.addr, align 8, !dbg !6299
  %next = getelementptr inbounds %struct.Main, %struct.Main* %81, i32 0, i32 0, !dbg !6300
  %82 = load %struct.Main*, %struct.Main** %next, align 8, !dbg !6300
  call void @write_libraries(%struct.WriteData* %80, %struct.Main* %82), !dbg !6301
  %83 = load i32, i32* %write_user_block.addr, align 4, !dbg !6302
  %tobool4 = icmp ne i32 %83, 0, !dbg !6302
  br i1 %tobool4, label %if.then5, label %if.end6, !dbg !6304

if.then5:                                         ; preds = %if.end
  %84 = load %struct.WriteData*, %struct.WriteData** %wd, align 8, !dbg !6305
  call void @write_userdef(%struct.WriteData* %84), !dbg !6307
  br label %if.end6, !dbg !6308

if.end6:                                          ; preds = %if.then5, %if.end
  %85 = load %struct.WriteData*, %struct.WriteData** %wd, align 8, !dbg !6309
  %86 = load %struct.WriteData*, %struct.WriteData** %wd, align 8, !dbg !6310
  %sdna = getelementptr inbounds %struct.WriteData, %struct.WriteData* %86, i32 0, i32 0, !dbg !6311
  %87 = load %struct.SDNA*, %struct.SDNA** %sdna, align 8, !dbg !6311
  %datalen = getelementptr inbounds %struct.SDNA, %struct.SDNA* %87, i32 0, i32 1, !dbg !6312
  %88 = load i32, i32* %datalen, align 8, !dbg !6312
  %89 = load %struct.WriteData*, %struct.WriteData** %wd, align 8, !dbg !6313
  %sdna7 = getelementptr inbounds %struct.WriteData, %struct.WriteData* %89, i32 0, i32 0, !dbg !6314
  %90 = load %struct.SDNA*, %struct.SDNA** %sdna7, align 8, !dbg !6314
  %data = getelementptr inbounds %struct.SDNA, %struct.SDNA* %90, i32 0, i32 0, !dbg !6315
  %91 = load i8*, i8** %data, align 8, !dbg !6315
  call void @writedata(%struct.WriteData* %85, i32 826363460, i32 %88, i8* %91), !dbg !6316
  %92 = load %struct.MemFile*, %struct.MemFile** %current.addr, align 8, !dbg !6317
  %tobool8 = icmp ne %struct.MemFile* %92, null, !dbg !6317
  br i1 %tobool8, label %if.end10, label %if.then9, !dbg !6319

if.then9:                                         ; preds = %if.end6
  %93 = load %struct.Main*, %struct.Main** %mainvar.addr, align 8, !dbg !6320
  call void @customnodes_free_deprecated_data(%struct.Main* %93), !dbg !6322
  br label %if.end10, !dbg !6323

if.end10:                                         ; preds = %if.then9, %if.end6
  %94 = bitcast %struct.BHead* %bhead to i8*, !dbg !6324
  call void @llvm.memset.p0i8.i64(i8* align 8 %94, i8 0, i64 24, i1 false), !dbg !6324
  %code = getelementptr inbounds %struct.BHead, %struct.BHead* %bhead, i32 0, i32 0, !dbg !6325
  store i32 1111772741, i32* %code, align 8, !dbg !6326
  %95 = load %struct.WriteData*, %struct.WriteData** %wd, align 8, !dbg !6327
  %96 = bitcast %struct.BHead* %bhead to i8*, !dbg !6328
  call void @mywrite(%struct.WriteData* %95, i8* %96, i32 24), !dbg !6329
  call void @blo_join_main(%struct.ListBase* %mainlist), !dbg !6330
  %97 = load %struct.WriteData*, %struct.WriteData** %wd, align 8, !dbg !6331
  %call11 = call i32 @endwrite(%struct.WriteData* %97), !dbg !6332
  ret i32 %call11, !dbg !6333
}

declare dso_local void @BKE_bpath_list_restore(%struct.Main*, i32, i8*) #2

declare dso_local void @BKE_bpath_list_free(i8*) #2

declare dso_local void @BKE_report(%struct.ReportList*, i32, i8*) #2

; Function Attrs: nounwind
declare dso_local i32 @remove(i8*) #3

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @do_history(i8* %name, %struct.ReportList* %reports) #0 !dbg !6334 {
entry:
  %retval = alloca i8, align 1
  %name.addr = alloca i8*, align 8
  %reports.addr = alloca %struct.ReportList*, align 8
  %tempname1 = alloca [1024 x i8], align 16
  %tempname2 = alloca [1024 x i8], align 16
  %hisnr = alloca i32, align 4
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !6337, metadata !DIExpression()), !dbg !6338
  store %struct.ReportList* %reports, %struct.ReportList** %reports.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ReportList** %reports.addr, metadata !6339, metadata !DIExpression()), !dbg !6340
  call void @llvm.dbg.declare(metadata [1024 x i8]* %tempname1, metadata !6341, metadata !DIExpression()), !dbg !6342
  call void @llvm.dbg.declare(metadata [1024 x i8]* %tempname2, metadata !6343, metadata !DIExpression()), !dbg !6344
  call void @llvm.dbg.declare(metadata i32* %hisnr, metadata !6345, metadata !DIExpression()), !dbg !6346
  %0 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 18), align 4, !dbg !6347
  %conv = sext i16 %0 to i32, !dbg !6348
  store i32 %conv, i32* %hisnr, align 4, !dbg !6346
  %1 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 18), align 4, !dbg !6349
  %conv1 = sext i16 %1 to i32, !dbg !6351
  %cmp = icmp eq i32 %conv1, 0, !dbg !6352
  br i1 %cmp, label %if.then, label %if.end, !dbg !6353

if.then:                                          ; preds = %entry
  store i8 0, i8* %retval, align 1, !dbg !6354
  br label %return, !dbg !6354

if.end:                                           ; preds = %entry
  %2 = load i8*, i8** %name.addr, align 8, !dbg !6355
  %call = call i64 @strlen(i8* %2) #9, !dbg !6357
  %cmp3 = icmp ult i64 %call, 2, !dbg !6358
  br i1 %cmp3, label %if.then5, label %if.end6, !dbg !6359

if.then5:                                         ; preds = %if.end
  %3 = load %struct.ReportList*, %struct.ReportList** %reports.addr, align 8, !dbg !6360
  call void @BKE_report(%struct.ReportList* %3, i32 32, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.302, i64 0, i64 0)), !dbg !6362
  store i8 1, i8* %retval, align 1, !dbg !6363
  br label %return, !dbg !6363

if.end6:                                          ; preds = %if.end
  br label %while.cond, !dbg !6364

while.cond:                                       ; preds = %if.end16, %if.end6
  %4 = load i32, i32* %hisnr, align 4, !dbg !6365
  %cmp7 = icmp sgt i32 %4, 1, !dbg !6366
  br i1 %cmp7, label %while.body, label %while.end, !dbg !6364

while.body:                                       ; preds = %while.cond
  %arraydecay = getelementptr inbounds [1024 x i8], [1024 x i8]* %tempname1, i64 0, i64 0, !dbg !6367
  %5 = load i8*, i8** %name.addr, align 8, !dbg !6369
  %6 = load i32, i32* %hisnr, align 4, !dbg !6370
  %sub = sub nsw i32 %6, 1, !dbg !6371
  %call9 = call i64 (i8*, i64, i8*, ...) @BLI_snprintf(i8* %arraydecay, i64 1024, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.303, i64 0, i64 0), i8* %5, i32 %sub), !dbg !6372
  %arraydecay10 = getelementptr inbounds [1024 x i8], [1024 x i8]* %tempname2, i64 0, i64 0, !dbg !6373
  %7 = load i8*, i8** %name.addr, align 8, !dbg !6374
  %8 = load i32, i32* %hisnr, align 4, !dbg !6375
  %call11 = call i64 (i8*, i64, i8*, ...) @BLI_snprintf(i8* %arraydecay10, i64 1024, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.303, i64 0, i64 0), i8* %7, i32 %8), !dbg !6376
  %arraydecay12 = getelementptr inbounds [1024 x i8], [1024 x i8]* %tempname1, i64 0, i64 0, !dbg !6377
  %arraydecay13 = getelementptr inbounds [1024 x i8], [1024 x i8]* %tempname2, i64 0, i64 0, !dbg !6379
  %call14 = call i32 @BLI_rename(i8* %arraydecay12, i8* %arraydecay13), !dbg !6380
  %tobool = icmp ne i32 %call14, 0, !dbg !6380
  br i1 %tobool, label %if.then15, label %if.end16, !dbg !6381

if.then15:                                        ; preds = %while.body
  %9 = load %struct.ReportList*, %struct.ReportList** %reports.addr, align 8, !dbg !6382
  call void @BKE_report(%struct.ReportList* %9, i32 32, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.304, i64 0, i64 0)), !dbg !6384
  store i8 1, i8* %retval, align 1, !dbg !6385
  br label %return, !dbg !6385

if.end16:                                         ; preds = %while.body
  %10 = load i32, i32* %hisnr, align 4, !dbg !6386
  %dec = add nsw i32 %10, -1, !dbg !6386
  store i32 %dec, i32* %hisnr, align 4, !dbg !6386
  br label %while.cond, !dbg !6364, !llvm.loop !6387

while.end:                                        ; preds = %while.cond
  %arraydecay17 = getelementptr inbounds [1024 x i8], [1024 x i8]* %tempname1, i64 0, i64 0, !dbg !6389
  %11 = load i8*, i8** %name.addr, align 8, !dbg !6390
  %12 = load i32, i32* %hisnr, align 4, !dbg !6391
  %call18 = call i64 (i8*, i64, i8*, ...) @BLI_snprintf(i8* %arraydecay17, i64 1024, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.303, i64 0, i64 0), i8* %11, i32 %12), !dbg !6392
  %13 = load i8*, i8** %name.addr, align 8, !dbg !6393
  %arraydecay19 = getelementptr inbounds [1024 x i8], [1024 x i8]* %tempname1, i64 0, i64 0, !dbg !6395
  %call20 = call i32 @BLI_rename(i8* %13, i8* %arraydecay19), !dbg !6396
  %tobool21 = icmp ne i32 %call20, 0, !dbg !6396
  br i1 %tobool21, label %if.then22, label %if.end23, !dbg !6397

if.then22:                                        ; preds = %while.end
  %14 = load %struct.ReportList*, %struct.ReportList** %reports.addr, align 8, !dbg !6398
  call void @BKE_report(%struct.ReportList* %14, i32 32, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.304, i64 0, i64 0)), !dbg !6400
  store i8 1, i8* %retval, align 1, !dbg !6401
  br label %return, !dbg !6401

if.end23:                                         ; preds = %while.end
  store i8 0, i8* %retval, align 1, !dbg !6402
  br label %return, !dbg !6402

return:                                           ; preds = %if.end23, %if.then22, %if.then15, %if.then5, %if.then
  %15 = load i8, i8* %retval, align 1, !dbg !6403
  ret i8 %15, !dbg !6403
}

declare dso_local i32 @BLI_rename(i8*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @BLO_write_file_mem(%struct.Main* %mainvar, %struct.MemFile* %compare, %struct.MemFile* %current, i32 %write_flags) #0 !dbg !6404 {
entry:
  %retval = alloca i32, align 4
  %mainvar.addr = alloca %struct.Main*, align 8
  %compare.addr = alloca %struct.MemFile*, align 8
  %current.addr = alloca %struct.MemFile*, align 8
  %write_flags.addr = alloca i32, align 4
  %err = alloca i32, align 4
  store %struct.Main* %mainvar, %struct.Main** %mainvar.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Main** %mainvar.addr, metadata !6407, metadata !DIExpression()), !dbg !6408
  store %struct.MemFile* %compare, %struct.MemFile** %compare.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MemFile** %compare.addr, metadata !6409, metadata !DIExpression()), !dbg !6410
  store %struct.MemFile* %current, %struct.MemFile** %current.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MemFile** %current.addr, metadata !6411, metadata !DIExpression()), !dbg !6412
  store i32 %write_flags, i32* %write_flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %write_flags.addr, metadata !6413, metadata !DIExpression()), !dbg !6414
  call void @llvm.dbg.declare(metadata i32* %err, metadata !6415, metadata !DIExpression()), !dbg !6416
  %0 = load %struct.Main*, %struct.Main** %mainvar.addr, align 8, !dbg !6417
  %1 = load %struct.MemFile*, %struct.MemFile** %compare.addr, align 8, !dbg !6418
  %2 = load %struct.MemFile*, %struct.MemFile** %current.addr, align 8, !dbg !6419
  %3 = load i32, i32* %write_flags.addr, align 4, !dbg !6420
  %call = call i32 @write_file_handle(%struct.Main* %0, %struct.WriteWrap* null, %struct.MemFile* %1, %struct.MemFile* %2, i32 0, i32 %3, i32* null), !dbg !6421
  store i32 %call, i32* %err, align 4, !dbg !6422
  %4 = load i32, i32* %err, align 4, !dbg !6423
  %cmp = icmp eq i32 %4, 0, !dbg !6425
  br i1 %cmp, label %if.then, label %if.end, !dbg !6426

if.then:                                          ; preds = %entry
  store i32 1, i32* %retval, align 4, !dbg !6427
  br label %return, !dbg !6427

if.end:                                           ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !6428
  br label %return, !dbg !6428

return:                                           ; preds = %if.end, %if.then
  %5 = load i32, i32* %retval, align 4, !dbg !6429
  ret i32 %5, !dbg !6429
}

; Function Attrs: noinline nounwind uwtable
define internal void @writedata(%struct.WriteData* %wd, i32 %filecode, i32 %len, i8* %adr) #0 !dbg !6430 {
entry:
  %wd.addr = alloca %struct.WriteData*, align 8
  %filecode.addr = alloca i32, align 4
  %len.addr = alloca i32, align 4
  %adr.addr = alloca i8*, align 8
  %bh = alloca %struct.BHead, align 8
  store %struct.WriteData* %wd, %struct.WriteData** %wd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WriteData** %wd.addr, metadata !6435, metadata !DIExpression()), !dbg !6436
  store i32 %filecode, i32* %filecode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %filecode.addr, metadata !6437, metadata !DIExpression()), !dbg !6438
  store i32 %len, i32* %len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %len.addr, metadata !6439, metadata !DIExpression()), !dbg !6440
  store i8* %adr, i8** %adr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %adr.addr, metadata !6441, metadata !DIExpression()), !dbg !6442
  call void @llvm.dbg.declare(metadata %struct.BHead* %bh, metadata !6443, metadata !DIExpression()), !dbg !6444
  %0 = load i8*, i8** %adr.addr, align 8, !dbg !6445
  %cmp = icmp eq i8* %0, null, !dbg !6447
  br i1 %cmp, label %if.then, label %if.end, !dbg !6448

if.then:                                          ; preds = %entry
  br label %return, !dbg !6449

if.end:                                           ; preds = %entry
  %1 = load i32, i32* %len.addr, align 4, !dbg !6450
  %cmp1 = icmp eq i32 %1, 0, !dbg !6452
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !6453

if.then2:                                         ; preds = %if.end
  br label %return, !dbg !6454

if.end3:                                          ; preds = %if.end
  %2 = load i32, i32* %len.addr, align 4, !dbg !6455
  %add = add nsw i32 %2, 3, !dbg !6456
  %and = and i32 %add, -4, !dbg !6457
  store i32 %and, i32* %len.addr, align 4, !dbg !6458
  %3 = load i32, i32* %filecode.addr, align 4, !dbg !6459
  %code = getelementptr inbounds %struct.BHead, %struct.BHead* %bh, i32 0, i32 0, !dbg !6460
  store i32 %3, i32* %code, align 8, !dbg !6461
  %4 = load i8*, i8** %adr.addr, align 8, !dbg !6462
  %old = getelementptr inbounds %struct.BHead, %struct.BHead* %bh, i32 0, i32 2, !dbg !6463
  store i8* %4, i8** %old, align 8, !dbg !6464
  %nr = getelementptr inbounds %struct.BHead, %struct.BHead* %bh, i32 0, i32 4, !dbg !6465
  store i32 1, i32* %nr, align 4, !dbg !6466
  %SDNAnr = getelementptr inbounds %struct.BHead, %struct.BHead* %bh, i32 0, i32 3, !dbg !6467
  store i32 0, i32* %SDNAnr, align 8, !dbg !6468
  %5 = load i32, i32* %len.addr, align 4, !dbg !6469
  %len4 = getelementptr inbounds %struct.BHead, %struct.BHead* %bh, i32 0, i32 1, !dbg !6470
  store i32 %5, i32* %len4, align 4, !dbg !6471
  %6 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !6472
  %7 = bitcast %struct.BHead* %bh to i8*, !dbg !6473
  call void @mywrite(%struct.WriteData* %6, i8* %7, i32 24), !dbg !6474
  %8 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !6475
  %9 = load i8*, i8** %adr.addr, align 8, !dbg !6476
  %10 = load i32, i32* %len.addr, align 4, !dbg !6477
  call void @mywrite(%struct.WriteData* %8, i8* %9, i32 %10), !dbg !6478
  br label %return, !dbg !6479

return:                                           ; preds = %if.end3, %if.then2, %if.then
  ret void, !dbg !6479
}

; Function Attrs: noinline nounwind uwtable
define internal void @mywrite(%struct.WriteData* %wd, i8* %adr, i32 %len) #0 !dbg !6480 {
entry:
  %wd.addr = alloca %struct.WriteData*, align 8
  %adr.addr = alloca i8*, align 8
  %len.addr = alloca i32, align 4
  %writelen = alloca i32, align 4
  store %struct.WriteData* %wd, %struct.WriteData** %wd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WriteData** %wd.addr, metadata !6483, metadata !DIExpression()), !dbg !6484
  store i8* %adr, i8** %adr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %adr.addr, metadata !6485, metadata !DIExpression()), !dbg !6486
  store i32 %len, i32* %len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %len.addr, metadata !6487, metadata !DIExpression()), !dbg !6488
  %0 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !6489
  %error = getelementptr inbounds %struct.WriteData, %struct.WriteData* %0, i32 0, i32 7, !dbg !6491
  %1 = load i32, i32* %error, align 8, !dbg !6491
  %tobool = icmp ne i32 %1, 0, !dbg !6489
  br i1 %tobool, label %if.then, label %if.end, !dbg !6492

if.then:                                          ; preds = %entry
  br label %return, !dbg !6493

if.end:                                           ; preds = %entry
  %2 = load i8*, i8** %adr.addr, align 8, !dbg !6494
  %cmp = icmp eq i8* %2, null, !dbg !6496
  br i1 %cmp, label %if.then1, label %if.end7, !dbg !6497

if.then1:                                         ; preds = %if.end
  %3 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !6498
  %count = getelementptr inbounds %struct.WriteData, %struct.WriteData* %3, i32 0, i32 6, !dbg !6501
  %4 = load i32, i32* %count, align 4, !dbg !6501
  %tobool2 = icmp ne i32 %4, 0, !dbg !6498
  br i1 %tobool2, label %if.then3, label %if.end6, !dbg !6502

if.then3:                                         ; preds = %if.then1
  %5 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !6503
  %6 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !6505
  %buf = getelementptr inbounds %struct.WriteData, %struct.WriteData* %6, i32 0, i32 2, !dbg !6506
  %7 = load i8*, i8** %buf, align 8, !dbg !6506
  %8 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !6507
  %count4 = getelementptr inbounds %struct.WriteData, %struct.WriteData* %8, i32 0, i32 6, !dbg !6508
  %9 = load i32, i32* %count4, align 4, !dbg !6508
  call void @writedata_do_write(%struct.WriteData* %5, i8* %7, i32 %9), !dbg !6509
  %10 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !6510
  %count5 = getelementptr inbounds %struct.WriteData, %struct.WriteData* %10, i32 0, i32 6, !dbg !6511
  store i32 0, i32* %count5, align 4, !dbg !6512
  br label %if.end6, !dbg !6513

if.end6:                                          ; preds = %if.then3, %if.then1
  br label %return, !dbg !6514

if.end7:                                          ; preds = %if.end
  %11 = load i32, i32* %len.addr, align 4, !dbg !6515
  %12 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !6516
  %tot = getelementptr inbounds %struct.WriteData, %struct.WriteData* %12, i32 0, i32 5, !dbg !6517
  %13 = load i32, i32* %tot, align 8, !dbg !6518
  %add = add nsw i32 %13, %11, !dbg !6518
  store i32 %add, i32* %tot, align 8, !dbg !6518
  %14 = load i32, i32* %len.addr, align 4, !dbg !6519
  %cmp8 = icmp sgt i32 %14, 32768, !dbg !6521
  br i1 %cmp8, label %if.then9, label %if.end19, !dbg !6522

if.then9:                                         ; preds = %if.end7
  %15 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !6523
  %count10 = getelementptr inbounds %struct.WriteData, %struct.WriteData* %15, i32 0, i32 6, !dbg !6526
  %16 = load i32, i32* %count10, align 4, !dbg !6526
  %tobool11 = icmp ne i32 %16, 0, !dbg !6523
  br i1 %tobool11, label %if.then12, label %if.end16, !dbg !6527

if.then12:                                        ; preds = %if.then9
  %17 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !6528
  %18 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !6530
  %buf13 = getelementptr inbounds %struct.WriteData, %struct.WriteData* %18, i32 0, i32 2, !dbg !6531
  %19 = load i8*, i8** %buf13, align 8, !dbg !6531
  %20 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !6532
  %count14 = getelementptr inbounds %struct.WriteData, %struct.WriteData* %20, i32 0, i32 6, !dbg !6533
  %21 = load i32, i32* %count14, align 4, !dbg !6533
  call void @writedata_do_write(%struct.WriteData* %17, i8* %19, i32 %21), !dbg !6534
  %22 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !6535
  %count15 = getelementptr inbounds %struct.WriteData, %struct.WriteData* %22, i32 0, i32 6, !dbg !6536
  store i32 0, i32* %count15, align 4, !dbg !6537
  br label %if.end16, !dbg !6538

if.end16:                                         ; preds = %if.then12, %if.then9
  br label %do.body, !dbg !6539

do.body:                                          ; preds = %do.cond, %if.end16
  call void @llvm.dbg.declare(metadata i32* %writelen, metadata !6540, metadata !DIExpression()), !dbg !6542
  %23 = load i32, i32* %len.addr, align 4, !dbg !6543
  %cmp17 = icmp slt i32 %23, 32768, !dbg !6543
  br i1 %cmp17, label %cond.true, label %cond.false, !dbg !6543

cond.true:                                        ; preds = %do.body
  %24 = load i32, i32* %len.addr, align 4, !dbg !6543
  br label %cond.end, !dbg !6543

cond.false:                                       ; preds = %do.body
  br label %cond.end, !dbg !6543

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %24, %cond.true ], [ 32768, %cond.false ], !dbg !6543
  store i32 %cond, i32* %writelen, align 4, !dbg !6542
  %25 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !6544
  %26 = load i8*, i8** %adr.addr, align 8, !dbg !6545
  %27 = load i32, i32* %writelen, align 4, !dbg !6546
  call void @writedata_do_write(%struct.WriteData* %25, i8* %26, i32 %27), !dbg !6547
  %28 = load i8*, i8** %adr.addr, align 8, !dbg !6548
  %29 = load i32, i32* %writelen, align 4, !dbg !6549
  %idx.ext = sext i32 %29 to i64, !dbg !6550
  %add.ptr = getelementptr inbounds i8, i8* %28, i64 %idx.ext, !dbg !6550
  store i8* %add.ptr, i8** %adr.addr, align 8, !dbg !6551
  %30 = load i32, i32* %writelen, align 4, !dbg !6552
  %31 = load i32, i32* %len.addr, align 4, !dbg !6553
  %sub = sub nsw i32 %31, %30, !dbg !6553
  store i32 %sub, i32* %len.addr, align 4, !dbg !6553
  br label %do.cond, !dbg !6554

do.cond:                                          ; preds = %cond.end
  %32 = load i32, i32* %len.addr, align 4, !dbg !6555
  %cmp18 = icmp sgt i32 %32, 0, !dbg !6556
  br i1 %cmp18, label %do.body, label %do.end, !dbg !6554, !llvm.loop !6557

do.end:                                           ; preds = %do.cond
  br label %return, !dbg !6559

if.end19:                                         ; preds = %if.end7
  %33 = load i32, i32* %len.addr, align 4, !dbg !6560
  %34 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !6562
  %count20 = getelementptr inbounds %struct.WriteData, %struct.WriteData* %34, i32 0, i32 6, !dbg !6563
  %35 = load i32, i32* %count20, align 4, !dbg !6563
  %add21 = add nsw i32 %33, %35, !dbg !6564
  %cmp22 = icmp sgt i32 %add21, 99999, !dbg !6565
  br i1 %cmp22, label %if.then23, label %if.end27, !dbg !6566

if.then23:                                        ; preds = %if.end19
  %36 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !6567
  %37 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !6569
  %buf24 = getelementptr inbounds %struct.WriteData, %struct.WriteData* %37, i32 0, i32 2, !dbg !6570
  %38 = load i8*, i8** %buf24, align 8, !dbg !6570
  %39 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !6571
  %count25 = getelementptr inbounds %struct.WriteData, %struct.WriteData* %39, i32 0, i32 6, !dbg !6572
  %40 = load i32, i32* %count25, align 4, !dbg !6572
  call void @writedata_do_write(%struct.WriteData* %36, i8* %38, i32 %40), !dbg !6573
  %41 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !6574
  %count26 = getelementptr inbounds %struct.WriteData, %struct.WriteData* %41, i32 0, i32 6, !dbg !6575
  store i32 0, i32* %count26, align 4, !dbg !6576
  br label %if.end27, !dbg !6577

if.end27:                                         ; preds = %if.then23, %if.end19
  %42 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !6578
  %buf28 = getelementptr inbounds %struct.WriteData, %struct.WriteData* %42, i32 0, i32 2, !dbg !6579
  %43 = load i8*, i8** %buf28, align 8, !dbg !6579
  %44 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !6580
  %count29 = getelementptr inbounds %struct.WriteData, %struct.WriteData* %44, i32 0, i32 6, !dbg !6581
  %45 = load i32, i32* %count29, align 4, !dbg !6581
  %idxprom = sext i32 %45 to i64, !dbg !6578
  %arrayidx = getelementptr inbounds i8, i8* %43, i64 %idxprom, !dbg !6578
  %46 = load i8*, i8** %adr.addr, align 8, !dbg !6582
  %47 = load i32, i32* %len.addr, align 4, !dbg !6583
  %conv = sext i32 %47 to i64, !dbg !6583
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %arrayidx, i8* align 1 %46, i64 %conv, i1 false), !dbg !6584
  %48 = load i32, i32* %len.addr, align 4, !dbg !6585
  %49 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !6586
  %count30 = getelementptr inbounds %struct.WriteData, %struct.WriteData* %49, i32 0, i32 6, !dbg !6587
  %50 = load i32, i32* %count30, align 4, !dbg !6588
  %add31 = add nsw i32 %50, %48, !dbg !6588
  store i32 %add31, i32* %count30, align 4, !dbg !6588
  br label %return, !dbg !6589

return:                                           ; preds = %if.end27, %do.end, %if.end6, %if.then
  ret void, !dbg !6589
}

; Function Attrs: noinline nounwind uwtable
define internal void @writedata_do_write(%struct.WriteData* %wd, i8* %mem, i32 %memlen) #0 !dbg !6590 {
entry:
  %wd.addr = alloca %struct.WriteData*, align 8
  %mem.addr = alloca i8*, align 8
  %memlen.addr = alloca i32, align 4
  store %struct.WriteData* %wd, %struct.WriteData** %wd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WriteData** %wd.addr, metadata !6591, metadata !DIExpression()), !dbg !6592
  store i8* %mem, i8** %mem.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %mem.addr, metadata !6593, metadata !DIExpression()), !dbg !6594
  store i32 %memlen, i32* %memlen.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %memlen.addr, metadata !6595, metadata !DIExpression()), !dbg !6596
  %0 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !6597
  %cmp = icmp eq %struct.WriteData* %0, null, !dbg !6599
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !6600

lor.lhs.false:                                    ; preds = %entry
  %1 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !6601
  %error = getelementptr inbounds %struct.WriteData, %struct.WriteData* %1, i32 0, i32 7, !dbg !6602
  %2 = load i32, i32* %error, align 8, !dbg !6602
  %tobool = icmp ne i32 %2, 0, !dbg !6601
  br i1 %tobool, label %if.then, label %lor.lhs.false1, !dbg !6603

lor.lhs.false1:                                   ; preds = %lor.lhs.false
  %3 = load i8*, i8** %mem.addr, align 8, !dbg !6604
  %cmp2 = icmp eq i8* %3, null, !dbg !6605
  br i1 %cmp2, label %if.then, label %lor.lhs.false3, !dbg !6606

lor.lhs.false3:                                   ; preds = %lor.lhs.false1
  %4 = load i32, i32* %memlen.addr, align 4, !dbg !6607
  %cmp4 = icmp slt i32 %4, 1, !dbg !6608
  br i1 %cmp4, label %if.then, label %if.end, !dbg !6609

if.then:                                          ; preds = %lor.lhs.false3, %lor.lhs.false1, %lor.lhs.false, %entry
  br label %if.end19, !dbg !6610

if.end:                                           ; preds = %lor.lhs.false3
  %5 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !6611
  %error5 = getelementptr inbounds %struct.WriteData, %struct.WriteData* %5, i32 0, i32 7, !dbg !6613
  %6 = load i32, i32* %error5, align 8, !dbg !6613
  %tobool6 = icmp ne i32 %6, 0, !dbg !6611
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !6614

if.then7:                                         ; preds = %if.end
  br label %if.end19, !dbg !6615

if.end8:                                          ; preds = %if.end
  %7 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !6616
  %current = getelementptr inbounds %struct.WriteData, %struct.WriteData* %7, i32 0, i32 4, !dbg !6618
  %8 = load %struct.MemFile*, %struct.MemFile** %current, align 8, !dbg !6618
  %tobool9 = icmp ne %struct.MemFile* %8, null, !dbg !6616
  br i1 %tobool9, label %if.then10, label %if.else, !dbg !6619

if.then10:                                        ; preds = %if.end8
  %9 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !6620
  %current11 = getelementptr inbounds %struct.WriteData, %struct.WriteData* %9, i32 0, i32 4, !dbg !6622
  %10 = load %struct.MemFile*, %struct.MemFile** %current11, align 8, !dbg !6622
  %11 = load i8*, i8** %mem.addr, align 8, !dbg !6623
  %12 = load i32, i32* %memlen.addr, align 4, !dbg !6624
  call void @add_memfilechunk(%struct.MemFile* null, %struct.MemFile* %10, i8* %11, i32 %12), !dbg !6625
  br label %if.end19, !dbg !6626

if.else:                                          ; preds = %if.end8
  %13 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !6627
  %ww = getelementptr inbounds %struct.WriteData, %struct.WriteData* %13, i32 0, i32 9, !dbg !6630
  %14 = load %struct.WriteWrap*, %struct.WriteWrap** %ww, align 8, !dbg !6630
  %write = getelementptr inbounds %struct.WriteWrap, %struct.WriteWrap* %14, i32 0, i32 2, !dbg !6631
  %15 = load i64 (%struct.WriteWrap*, i8*, i64)*, i64 (%struct.WriteWrap*, i8*, i64)** %write, align 8, !dbg !6631
  %16 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !6632
  %ww12 = getelementptr inbounds %struct.WriteData, %struct.WriteData* %16, i32 0, i32 9, !dbg !6633
  %17 = load %struct.WriteWrap*, %struct.WriteWrap** %ww12, align 8, !dbg !6633
  %18 = load i8*, i8** %mem.addr, align 8, !dbg !6634
  %19 = load i32, i32* %memlen.addr, align 4, !dbg !6635
  %conv = sext i32 %19 to i64, !dbg !6635
  %call = call i64 %15(%struct.WriteWrap* %17, i8* %18, i64 %conv), !dbg !6627
  %20 = load i32, i32* %memlen.addr, align 4, !dbg !6636
  %conv13 = sext i32 %20 to i64, !dbg !6636
  %cmp14 = icmp ne i64 %call, %conv13, !dbg !6637
  br i1 %cmp14, label %if.then16, label %if.end18, !dbg !6638

if.then16:                                        ; preds = %if.else
  %21 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !6639
  %error17 = getelementptr inbounds %struct.WriteData, %struct.WriteData* %21, i32 0, i32 7, !dbg !6641
  store i32 1, i32* %error17, align 8, !dbg !6642
  br label %if.end18, !dbg !6643

if.end18:                                         ; preds = %if.then16, %if.else
  br label %if.end19

if.end19:                                         ; preds = %if.then, %if.then7, %if.end18, %if.then10
  ret void, !dbg !6644
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #6

declare dso_local void @add_memfilechunk(%struct.MemFile*, %struct.MemFile*, i8*, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal void @writestruct_at_address(%struct.WriteData* %wd, i32 %filecode, i8* %structname, i32 %nr, i8* %adr, i8* %data) #0 !dbg !6645 {
entry:
  %wd.addr = alloca %struct.WriteData*, align 8
  %filecode.addr = alloca i32, align 4
  %structname.addr = alloca i8*, align 8
  %nr.addr = alloca i32, align 4
  %adr.addr = alloca i8*, align 8
  %data.addr = alloca i8*, align 8
  %bh = alloca %struct.BHead, align 8
  %sp = alloca i16*, align 8
  store %struct.WriteData* %wd, %struct.WriteData** %wd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WriteData** %wd.addr, metadata !6648, metadata !DIExpression()), !dbg !6649
  store i32 %filecode, i32* %filecode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %filecode.addr, metadata !6650, metadata !DIExpression()), !dbg !6651
  store i8* %structname, i8** %structname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %structname.addr, metadata !6652, metadata !DIExpression()), !dbg !6653
  store i32 %nr, i32* %nr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nr.addr, metadata !6654, metadata !DIExpression()), !dbg !6655
  store i8* %adr, i8** %adr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %adr.addr, metadata !6656, metadata !DIExpression()), !dbg !6657
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !6658, metadata !DIExpression()), !dbg !6659
  call void @llvm.dbg.declare(metadata %struct.BHead* %bh, metadata !6660, metadata !DIExpression()), !dbg !6661
  call void @llvm.dbg.declare(metadata i16** %sp, metadata !6662, metadata !DIExpression()), !dbg !6663
  %0 = load i8*, i8** %adr.addr, align 8, !dbg !6664
  %cmp = icmp eq i8* %0, null, !dbg !6666
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !6667

lor.lhs.false:                                    ; preds = %entry
  %1 = load i8*, i8** %data.addr, align 8, !dbg !6668
  %cmp1 = icmp eq i8* %1, null, !dbg !6669
  br i1 %cmp1, label %if.then, label %lor.lhs.false2, !dbg !6670

lor.lhs.false2:                                   ; preds = %lor.lhs.false
  %2 = load i32, i32* %nr.addr, align 4, !dbg !6671
  %cmp3 = icmp eq i32 %2, 0, !dbg !6672
  br i1 %cmp3, label %if.then, label %if.end, !dbg !6673

if.then:                                          ; preds = %lor.lhs.false2, %lor.lhs.false, %entry
  br label %return, !dbg !6674

if.end:                                           ; preds = %lor.lhs.false2
  %3 = load i32, i32* %filecode.addr, align 4, !dbg !6675
  %code = getelementptr inbounds %struct.BHead, %struct.BHead* %bh, i32 0, i32 0, !dbg !6676
  store i32 %3, i32* %code, align 8, !dbg !6677
  %4 = load i8*, i8** %adr.addr, align 8, !dbg !6678
  %old = getelementptr inbounds %struct.BHead, %struct.BHead* %bh, i32 0, i32 2, !dbg !6679
  store i8* %4, i8** %old, align 8, !dbg !6680
  %5 = load i32, i32* %nr.addr, align 4, !dbg !6681
  %nr4 = getelementptr inbounds %struct.BHead, %struct.BHead* %bh, i32 0, i32 4, !dbg !6682
  store i32 %5, i32* %nr4, align 4, !dbg !6683
  %6 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !6684
  %sdna = getelementptr inbounds %struct.WriteData, %struct.WriteData* %6, i32 0, i32 0, !dbg !6685
  %7 = load %struct.SDNA*, %struct.SDNA** %sdna, align 8, !dbg !6685
  %8 = load i8*, i8** %structname.addr, align 8, !dbg !6686
  %call = call i32 @DNA_struct_find_nr(%struct.SDNA* %7, i8* %8), !dbg !6687
  %SDNAnr = getelementptr inbounds %struct.BHead, %struct.BHead* %bh, i32 0, i32 3, !dbg !6688
  store i32 %call, i32* %SDNAnr, align 8, !dbg !6689
  %SDNAnr5 = getelementptr inbounds %struct.BHead, %struct.BHead* %bh, i32 0, i32 3, !dbg !6690
  %9 = load i32, i32* %SDNAnr5, align 8, !dbg !6690
  %cmp6 = icmp eq i32 %9, -1, !dbg !6692
  br i1 %cmp6, label %if.then7, label %if.end9, !dbg !6693

if.then7:                                         ; preds = %if.end
  %10 = load i8*, i8** %structname.addr, align 8, !dbg !6694
  %call8 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.5, i64 0, i64 0), i8* %10), !dbg !6696
  br label %return, !dbg !6697

if.end9:                                          ; preds = %if.end
  %11 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !6698
  %sdna10 = getelementptr inbounds %struct.WriteData, %struct.WriteData* %11, i32 0, i32 0, !dbg !6699
  %12 = load %struct.SDNA*, %struct.SDNA** %sdna10, align 8, !dbg !6699
  %structs = getelementptr inbounds %struct.SDNA, %struct.SDNA* %12, i32 0, i32 9, !dbg !6700
  %13 = load i16**, i16*** %structs, align 8, !dbg !6700
  %SDNAnr11 = getelementptr inbounds %struct.BHead, %struct.BHead* %bh, i32 0, i32 3, !dbg !6701
  %14 = load i32, i32* %SDNAnr11, align 8, !dbg !6701
  %idxprom = sext i32 %14 to i64, !dbg !6698
  %arrayidx = getelementptr inbounds i16*, i16** %13, i64 %idxprom, !dbg !6698
  %15 = load i16*, i16** %arrayidx, align 8, !dbg !6698
  store i16* %15, i16** %sp, align 8, !dbg !6702
  %16 = load i32, i32* %nr.addr, align 4, !dbg !6703
  %17 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !6704
  %sdna12 = getelementptr inbounds %struct.WriteData, %struct.WriteData* %17, i32 0, i32 0, !dbg !6705
  %18 = load %struct.SDNA*, %struct.SDNA** %sdna12, align 8, !dbg !6705
  %typelens = getelementptr inbounds %struct.SDNA, %struct.SDNA* %18, i32 0, i32 7, !dbg !6706
  %19 = load i16*, i16** %typelens, align 8, !dbg !6706
  %20 = load i16*, i16** %sp, align 8, !dbg !6707
  %arrayidx13 = getelementptr inbounds i16, i16* %20, i64 0, !dbg !6707
  %21 = load i16, i16* %arrayidx13, align 2, !dbg !6707
  %idxprom14 = sext i16 %21 to i64, !dbg !6704
  %arrayidx15 = getelementptr inbounds i16, i16* %19, i64 %idxprom14, !dbg !6704
  %22 = load i16, i16* %arrayidx15, align 2, !dbg !6704
  %conv = sext i16 %22 to i32, !dbg !6704
  %mul = mul nsw i32 %16, %conv, !dbg !6708
  %len = getelementptr inbounds %struct.BHead, %struct.BHead* %bh, i32 0, i32 1, !dbg !6709
  store i32 %mul, i32* %len, align 4, !dbg !6710
  %len16 = getelementptr inbounds %struct.BHead, %struct.BHead* %bh, i32 0, i32 1, !dbg !6711
  %23 = load i32, i32* %len16, align 4, !dbg !6711
  %cmp17 = icmp eq i32 %23, 0, !dbg !6713
  br i1 %cmp17, label %if.then19, label %if.end20, !dbg !6714

if.then19:                                        ; preds = %if.end9
  br label %return, !dbg !6715

if.end20:                                         ; preds = %if.end9
  %24 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !6716
  %25 = bitcast %struct.BHead* %bh to i8*, !dbg !6717
  call void @mywrite(%struct.WriteData* %24, i8* %25, i32 24), !dbg !6718
  %26 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !6719
  %27 = load i8*, i8** %data.addr, align 8, !dbg !6720
  %len21 = getelementptr inbounds %struct.BHead, %struct.BHead* %bh, i32 0, i32 1, !dbg !6721
  %28 = load i32, i32* %len21, align 4, !dbg !6721
  call void @mywrite(%struct.WriteData* %26, i8* %27, i32 %28), !dbg !6722
  br label %return, !dbg !6723

return:                                           ; preds = %if.end20, %if.then19, %if.then7, %if.then
  ret void, !dbg !6723
}

declare dso_local i32 @DNA_struct_find_nr(%struct.SDNA*, i8*) #2

declare dso_local i32 @printf(i8*, ...) #2

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #6

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @ww_open_zlib(%struct.WriteWrap* %ww, i8* %filepath) #0 !dbg !6724 {
entry:
  %retval = alloca i8, align 1
  %ww.addr = alloca %struct.WriteWrap*, align 8
  %filepath.addr = alloca i8*, align 8
  %file = alloca %struct.gzFile_s*, align 8
  store %struct.WriteWrap* %ww, %struct.WriteWrap** %ww.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WriteWrap** %ww.addr, metadata !6725, metadata !DIExpression()), !dbg !6726
  store i8* %filepath, i8** %filepath.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %filepath.addr, metadata !6727, metadata !DIExpression()), !dbg !6728
  call void @llvm.dbg.declare(metadata %struct.gzFile_s** %file, metadata !6729, metadata !DIExpression()), !dbg !6730
  %0 = load i8*, i8** %filepath.addr, align 8, !dbg !6731
  %call = call i8* @BLI_gzopen(i8* %0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.6, i64 0, i64 0)), !dbg !6732
  %1 = bitcast i8* %call to %struct.gzFile_s*, !dbg !6732
  store %struct.gzFile_s* %1, %struct.gzFile_s** %file, align 8, !dbg !6733
  %2 = load %struct.gzFile_s*, %struct.gzFile_s** %file, align 8, !dbg !6734
  %cmp = icmp ne %struct.gzFile_s* %2, null, !dbg !6736
  br i1 %cmp, label %if.then, label %if.else, !dbg !6737

if.then:                                          ; preds = %entry
  %3 = load %struct.gzFile_s*, %struct.gzFile_s** %file, align 8, !dbg !6738
  %4 = load %struct.WriteWrap*, %struct.WriteWrap** %ww.addr, align 8, !dbg !6740
  %_user_data = getelementptr inbounds %struct.WriteWrap, %struct.WriteWrap* %4, i32 0, i32 3, !dbg !6740
  %gz_handle = bitcast %union.anon* %_user_data to %struct.gzFile_s**, !dbg !6740
  store %struct.gzFile_s* %3, %struct.gzFile_s** %gz_handle, align 8, !dbg !6741
  store i8 1, i8* %retval, align 1, !dbg !6742
  br label %return, !dbg !6742

if.else:                                          ; preds = %entry
  store i8 0, i8* %retval, align 1, !dbg !6743
  br label %return, !dbg !6743

return:                                           ; preds = %if.else, %if.then
  %5 = load i8, i8* %retval, align 1, !dbg !6745
  ret i8 %5, !dbg !6745
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @ww_close_zlib(%struct.WriteWrap* %ww) #0 !dbg !6746 {
entry:
  %ww.addr = alloca %struct.WriteWrap*, align 8
  store %struct.WriteWrap* %ww, %struct.WriteWrap** %ww.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WriteWrap** %ww.addr, metadata !6747, metadata !DIExpression()), !dbg !6748
  %0 = load %struct.WriteWrap*, %struct.WriteWrap** %ww.addr, align 8, !dbg !6749
  %_user_data = getelementptr inbounds %struct.WriteWrap, %struct.WriteWrap* %0, i32 0, i32 3, !dbg !6749
  %gz_handle = bitcast %union.anon* %_user_data to %struct.gzFile_s**, !dbg !6749
  %1 = load %struct.gzFile_s*, %struct.gzFile_s** %gz_handle, align 8, !dbg !6749
  %call = call i32 @gzclose(%struct.gzFile_s* %1), !dbg !6750
  %cmp = icmp eq i32 %call, 0, !dbg !6751
  %conv = zext i1 %cmp to i32, !dbg !6751
  %conv1 = trunc i32 %conv to i8, !dbg !6752
  ret i8 %conv1, !dbg !6753
}

; Function Attrs: noinline nounwind uwtable
define internal i64 @ww_write_zlib(%struct.WriteWrap* %ww, i8* %buf, i64 %buf_len) #0 !dbg !6754 {
entry:
  %ww.addr = alloca %struct.WriteWrap*, align 8
  %buf.addr = alloca i8*, align 8
  %buf_len.addr = alloca i64, align 8
  store %struct.WriteWrap* %ww, %struct.WriteWrap** %ww.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WriteWrap** %ww.addr, metadata !6755, metadata !DIExpression()), !dbg !6756
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !6757, metadata !DIExpression()), !dbg !6758
  store i64 %buf_len, i64* %buf_len.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %buf_len.addr, metadata !6759, metadata !DIExpression()), !dbg !6760
  %0 = load %struct.WriteWrap*, %struct.WriteWrap** %ww.addr, align 8, !dbg !6761
  %_user_data = getelementptr inbounds %struct.WriteWrap, %struct.WriteWrap* %0, i32 0, i32 3, !dbg !6761
  %gz_handle = bitcast %union.anon* %_user_data to %struct.gzFile_s**, !dbg !6761
  %1 = load %struct.gzFile_s*, %struct.gzFile_s** %gz_handle, align 8, !dbg !6761
  %2 = load i8*, i8** %buf.addr, align 8, !dbg !6762
  %3 = load i64, i64* %buf_len.addr, align 8, !dbg !6763
  %conv = trunc i64 %3 to i32, !dbg !6763
  %call = call i32 @gzwrite(%struct.gzFile_s* %1, i8* %2, i32 %conv), !dbg !6764
  %conv1 = sext i32 %call to i64, !dbg !6764
  ret i64 %conv1, !dbg !6765
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @ww_open_none(%struct.WriteWrap* %ww, i8* %filepath) #0 !dbg !6766 {
entry:
  %retval = alloca i8, align 1
  %ww.addr = alloca %struct.WriteWrap*, align 8
  %filepath.addr = alloca i8*, align 8
  %file = alloca i32, align 4
  store %struct.WriteWrap* %ww, %struct.WriteWrap** %ww.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WriteWrap** %ww.addr, metadata !6767, metadata !DIExpression()), !dbg !6768
  store i8* %filepath, i8** %filepath.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %filepath.addr, metadata !6769, metadata !DIExpression()), !dbg !6770
  call void @llvm.dbg.declare(metadata i32* %file, metadata !6771, metadata !DIExpression()), !dbg !6772
  %0 = load i8*, i8** %filepath.addr, align 8, !dbg !6773
  %call = call i32 @BLI_open(i8* %0, i32 577, i32 438), !dbg !6774
  store i32 %call, i32* %file, align 4, !dbg !6775
  %1 = load i32, i32* %file, align 4, !dbg !6776
  %cmp = icmp ne i32 %1, -1, !dbg !6778
  br i1 %cmp, label %if.then, label %if.else, !dbg !6779

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %file, align 4, !dbg !6780
  %3 = load %struct.WriteWrap*, %struct.WriteWrap** %ww.addr, align 8, !dbg !6782
  %_user_data = getelementptr inbounds %struct.WriteWrap, %struct.WriteWrap* %3, i32 0, i32 3, !dbg !6782
  %file_handle = bitcast %union.anon* %_user_data to i32*, !dbg !6782
  store i32 %2, i32* %file_handle, align 8, !dbg !6783
  store i8 1, i8* %retval, align 1, !dbg !6784
  br label %return, !dbg !6784

if.else:                                          ; preds = %entry
  store i8 0, i8* %retval, align 1, !dbg !6785
  br label %return, !dbg !6785

return:                                           ; preds = %if.else, %if.then
  %4 = load i8, i8* %retval, align 1, !dbg !6787
  ret i8 %4, !dbg !6787
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @ww_close_none(%struct.WriteWrap* %ww) #0 !dbg !6788 {
entry:
  %ww.addr = alloca %struct.WriteWrap*, align 8
  store %struct.WriteWrap* %ww, %struct.WriteWrap** %ww.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WriteWrap** %ww.addr, metadata !6789, metadata !DIExpression()), !dbg !6790
  %0 = load %struct.WriteWrap*, %struct.WriteWrap** %ww.addr, align 8, !dbg !6791
  %_user_data = getelementptr inbounds %struct.WriteWrap, %struct.WriteWrap* %0, i32 0, i32 3, !dbg !6791
  %file_handle = bitcast %union.anon* %_user_data to i32*, !dbg !6791
  %1 = load i32, i32* %file_handle, align 8, !dbg !6791
  %call = call i32 @close(i32 %1), !dbg !6792
  %cmp = icmp ne i32 %call, -1, !dbg !6793
  %conv = zext i1 %cmp to i32, !dbg !6793
  %conv1 = trunc i32 %conv to i8, !dbg !6794
  ret i8 %conv1, !dbg !6795
}

; Function Attrs: noinline nounwind uwtable
define internal i64 @ww_write_none(%struct.WriteWrap* %ww, i8* %buf, i64 %buf_len) #0 !dbg !6796 {
entry:
  %ww.addr = alloca %struct.WriteWrap*, align 8
  %buf.addr = alloca i8*, align 8
  %buf_len.addr = alloca i64, align 8
  store %struct.WriteWrap* %ww, %struct.WriteWrap** %ww.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WriteWrap** %ww.addr, metadata !6797, metadata !DIExpression()), !dbg !6798
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !6799, metadata !DIExpression()), !dbg !6800
  store i64 %buf_len, i64* %buf_len.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %buf_len.addr, metadata !6801, metadata !DIExpression()), !dbg !6802
  %0 = load %struct.WriteWrap*, %struct.WriteWrap** %ww.addr, align 8, !dbg !6803
  %_user_data = getelementptr inbounds %struct.WriteWrap, %struct.WriteWrap* %0, i32 0, i32 3, !dbg !6803
  %file_handle = bitcast %union.anon* %_user_data to i32*, !dbg !6803
  %1 = load i32, i32* %file_handle, align 8, !dbg !6803
  %2 = load i8*, i8** %buf.addr, align 8, !dbg !6804
  %3 = load i64, i64* %buf_len.addr, align 8, !dbg !6805
  %call = call i64 @write(i32 %1, i8* %2, i64 %3), !dbg !6806
  ret i64 %call, !dbg !6807
}

declare dso_local i8* @BLI_gzopen(i8*, i8*) #2

declare dso_local i32 @gzclose(%struct.gzFile_s*) #2

declare dso_local i32 @gzwrite(%struct.gzFile_s*, i8*, i32) #2

declare dso_local i32 @BLI_open(i8*, i32, i32) #2

declare dso_local i32 @close(i32) #2

declare dso_local i64 @write(i32, i8*, i64) #2

declare dso_local void @blo_split_main(%struct.ListBase*, %struct.Main*) #2

; Function Attrs: noinline nounwind uwtable
define internal %struct.WriteData* @bgnwrite(%struct.WriteWrap* %ww, %struct.MemFile* %compare, %struct.MemFile* %current) #0 !dbg !6808 {
entry:
  %retval = alloca %struct.WriteData*, align 8
  %ww.addr = alloca %struct.WriteWrap*, align 8
  %compare.addr = alloca %struct.MemFile*, align 8
  %current.addr = alloca %struct.MemFile*, align 8
  %wd = alloca %struct.WriteData*, align 8
  store %struct.WriteWrap* %ww, %struct.WriteWrap** %ww.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WriteWrap** %ww.addr, metadata !6811, metadata !DIExpression()), !dbg !6812
  store %struct.MemFile* %compare, %struct.MemFile** %compare.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MemFile** %compare.addr, metadata !6813, metadata !DIExpression()), !dbg !6814
  store %struct.MemFile* %current, %struct.MemFile** %current.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MemFile** %current.addr, metadata !6815, metadata !DIExpression()), !dbg !6816
  call void @llvm.dbg.declare(metadata %struct.WriteData** %wd, metadata !6817, metadata !DIExpression()), !dbg !6818
  %0 = load %struct.WriteWrap*, %struct.WriteWrap** %ww.addr, align 8, !dbg !6819
  %call = call %struct.WriteData* @writedata_new(%struct.WriteWrap* %0), !dbg !6820
  store %struct.WriteData* %call, %struct.WriteData** %wd, align 8, !dbg !6818
  %1 = load %struct.WriteData*, %struct.WriteData** %wd, align 8, !dbg !6821
  %cmp = icmp eq %struct.WriteData* %1, null, !dbg !6823
  br i1 %cmp, label %if.then, label %if.end, !dbg !6824

if.then:                                          ; preds = %entry
  store %struct.WriteData* null, %struct.WriteData** %retval, align 8, !dbg !6825
  br label %return, !dbg !6825

if.end:                                           ; preds = %entry
  %2 = load %struct.MemFile*, %struct.MemFile** %compare.addr, align 8, !dbg !6826
  %3 = load %struct.WriteData*, %struct.WriteData** %wd, align 8, !dbg !6827
  %compare1 = getelementptr inbounds %struct.WriteData, %struct.WriteData* %3, i32 0, i32 3, !dbg !6828
  store %struct.MemFile* %2, %struct.MemFile** %compare1, align 8, !dbg !6829
  %4 = load %struct.MemFile*, %struct.MemFile** %current.addr, align 8, !dbg !6830
  %5 = load %struct.WriteData*, %struct.WriteData** %wd, align 8, !dbg !6831
  %current2 = getelementptr inbounds %struct.WriteData, %struct.WriteData* %5, i32 0, i32 4, !dbg !6832
  store %struct.MemFile* %4, %struct.MemFile** %current2, align 8, !dbg !6833
  %6 = load %struct.MemFile*, %struct.MemFile** %compare.addr, align 8, !dbg !6834
  call void @add_memfilechunk(%struct.MemFile* %6, %struct.MemFile* null, i8* null, i32 0), !dbg !6835
  %7 = load %struct.WriteData*, %struct.WriteData** %wd, align 8, !dbg !6836
  store %struct.WriteData* %7, %struct.WriteData** %retval, align 8, !dbg !6837
  br label %return, !dbg !6837

return:                                           ; preds = %if.end, %if.then
  %8 = load %struct.WriteData*, %struct.WriteData** %retval, align 8, !dbg !6838
  ret %struct.WriteData* %8, !dbg !6838
}

; Function Attrs: noinline nounwind uwtable
define internal void @customnodes_add_deprecated_data(%struct.Main* %mainvar) #0 !dbg !6839 {
entry:
  %mainvar.addr = alloca %struct.Main*, align 8
  %_nstore = alloca %struct.NodeTreeIterStore, align 8
  %ntree = alloca %struct.bNodeTree*, align 8
  %id = alloca %struct.ID*, align 8
  %link = alloca %struct.bNodeLink*, align 8
  %last_link = alloca %struct.bNodeLink*, align 8
  %fromnode = alloca %struct.bNode*, align 8
  %tonode = alloca %struct.bNode*, align 8
  %fromsock = alloca %struct.bNodeSocket*, align 8
  %tosock = alloca %struct.bNodeSocket*, align 8
  %tlink = alloca %struct.bNodeLink*, align 8
  store %struct.Main* %mainvar, %struct.Main** %mainvar.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Main** %mainvar.addr, metadata !6842, metadata !DIExpression()), !dbg !6843
  call void @llvm.dbg.declare(metadata %struct.NodeTreeIterStore* %_nstore, metadata !6844, metadata !DIExpression()), !dbg !6992
  call void @llvm.dbg.declare(metadata %struct.bNodeTree** %ntree, metadata !6993, metadata !DIExpression()), !dbg !6992
  call void @llvm.dbg.declare(metadata %struct.ID** %id, metadata !6994, metadata !DIExpression()), !dbg !6992
  %0 = load %struct.Main*, %struct.Main** %mainvar.addr, align 8, !dbg !6992
  call void @BKE_node_tree_iter_init(%struct.NodeTreeIterStore* %_nstore, %struct.Main* %0), !dbg !6992
  br label %while.cond, !dbg !6992

while.cond:                                       ; preds = %if.end44, %if.then5, %entry
  %call = call zeroext i8 @BKE_node_tree_iter_step(%struct.NodeTreeIterStore* %_nstore, %struct.bNodeTree** %ntree, %struct.ID** %id), !dbg !6992
  %conv = zext i8 %call to i32, !dbg !6992
  %cmp = icmp eq i32 %conv, 1, !dbg !6992
  br i1 %cmp, label %while.body, label %while.end, !dbg !6992

while.body:                                       ; preds = %while.cond
  %1 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree, align 8, !dbg !6995
  %tobool = icmp ne %struct.bNodeTree* %1, null, !dbg !6995
  br i1 %tobool, label %if.then, label %if.end44, !dbg !6998

if.then:                                          ; preds = %while.body
  call void @llvm.dbg.declare(metadata %struct.bNodeLink** %link, metadata !6999, metadata !DIExpression()), !dbg !7004
  call void @llvm.dbg.declare(metadata %struct.bNodeLink** %last_link, metadata !7005, metadata !DIExpression()), !dbg !7006
  %2 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree, align 8, !dbg !7007
  %links = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %2, i32 0, i32 8, !dbg !7008
  %last = getelementptr inbounds %struct.ListBase, %struct.ListBase* %links, i32 0, i32 1, !dbg !7009
  %3 = load i8*, i8** %last, align 8, !dbg !7009
  %4 = bitcast i8* %3 to %struct.bNodeLink*, !dbg !7007
  store %struct.bNodeLink* %4, %struct.bNodeLink** %last_link, align 8, !dbg !7006
  %5 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !7010
  %6 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree, align 8, !dbg !7012
  %id2 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %6, i32 0, i32 0, !dbg !7013
  %cmp3 = icmp ne %struct.ID* %5, %id2, !dbg !7014
  br i1 %cmp3, label %if.then5, label %if.end, !dbg !7015

if.then5:                                         ; preds = %if.then
  br label %while.cond, !dbg !7016, !llvm.loop !7017

if.end:                                           ; preds = %if.then
  %7 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree, align 8, !dbg !7019
  %links6 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %7, i32 0, i32 8, !dbg !7021
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %links6, i32 0, i32 0, !dbg !7022
  %8 = load i8*, i8** %first, align 8, !dbg !7022
  %9 = bitcast i8* %8 to %struct.bNodeLink*, !dbg !7019
  store %struct.bNodeLink* %9, %struct.bNodeLink** %link, align 8, !dbg !7023
  br label %for.cond, !dbg !7024

for.cond:                                         ; preds = %for.inc, %if.end
  %10 = load %struct.bNodeLink*, %struct.bNodeLink** %link, align 8, !dbg !7025
  %tobool7 = icmp ne %struct.bNodeLink* %10, null, !dbg !7027
  br i1 %tobool7, label %for.body, label %for.end, !dbg !7027

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.bNode** %fromnode, metadata !7028, metadata !DIExpression()), !dbg !7030
  %11 = load %struct.bNodeLink*, %struct.bNodeLink** %link, align 8, !dbg !7031
  %fromnode8 = getelementptr inbounds %struct.bNodeLink, %struct.bNodeLink* %11, i32 0, i32 2, !dbg !7032
  %12 = load %struct.bNode*, %struct.bNode** %fromnode8, align 8, !dbg !7032
  store %struct.bNode* %12, %struct.bNode** %fromnode, align 8, !dbg !7030
  call void @llvm.dbg.declare(metadata %struct.bNode** %tonode, metadata !7033, metadata !DIExpression()), !dbg !7034
  %13 = load %struct.bNodeLink*, %struct.bNodeLink** %link, align 8, !dbg !7035
  %tonode9 = getelementptr inbounds %struct.bNodeLink, %struct.bNodeLink* %13, i32 0, i32 3, !dbg !7036
  %14 = load %struct.bNode*, %struct.bNode** %tonode9, align 8, !dbg !7036
  store %struct.bNode* %14, %struct.bNode** %tonode, align 8, !dbg !7034
  call void @llvm.dbg.declare(metadata %struct.bNodeSocket** %fromsock, metadata !7037, metadata !DIExpression()), !dbg !7038
  %15 = load %struct.bNodeLink*, %struct.bNodeLink** %link, align 8, !dbg !7039
  %fromsock10 = getelementptr inbounds %struct.bNodeLink, %struct.bNodeLink* %15, i32 0, i32 4, !dbg !7040
  %16 = load %struct.bNodeSocket*, %struct.bNodeSocket** %fromsock10, align 8, !dbg !7040
  store %struct.bNodeSocket* %16, %struct.bNodeSocket** %fromsock, align 8, !dbg !7038
  call void @llvm.dbg.declare(metadata %struct.bNodeSocket** %tosock, metadata !7041, metadata !DIExpression()), !dbg !7042
  %17 = load %struct.bNodeLink*, %struct.bNodeLink** %link, align 8, !dbg !7043
  %tosock11 = getelementptr inbounds %struct.bNodeLink, %struct.bNodeLink* %17, i32 0, i32 5, !dbg !7044
  %18 = load %struct.bNodeSocket*, %struct.bNodeSocket** %tosock11, align 8, !dbg !7044
  store %struct.bNodeSocket* %18, %struct.bNodeSocket** %tosock, align 8, !dbg !7042
  %19 = load %struct.bNode*, %struct.bNode** %fromnode, align 8, !dbg !7045
  %type = getelementptr inbounds %struct.bNode, %struct.bNode* %19, i32 0, i32 8, !dbg !7047
  %20 = load i16, i16* %type, align 4, !dbg !7047
  %conv12 = sext i16 %20 to i32, !dbg !7045
  %cmp13 = icmp eq i32 %conv12, 7, !dbg !7048
  br i1 %cmp13, label %if.then15, label %if.end17, !dbg !7049

if.then15:                                        ; preds = %for.body
  store %struct.bNode* null, %struct.bNode** %fromnode, align 8, !dbg !7050
  %21 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree, align 8, !dbg !7052
  %22 = load %struct.bNodeSocket*, %struct.bNodeSocket** %fromsock, align 8, !dbg !7053
  %identifier = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %22, i32 0, i32 4, !dbg !7054
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %identifier, i64 0, i64 0, !dbg !7053
  %call16 = call %struct.bNodeSocket* @ntreeFindSocketInterface(%struct.bNodeTree* %21, i32 1, i8* %arraydecay), !dbg !7055
  store %struct.bNodeSocket* %call16, %struct.bNodeSocket** %fromsock, align 8, !dbg !7056
  br label %if.end17, !dbg !7057

if.end17:                                         ; preds = %if.then15, %for.body
  %23 = load %struct.bNode*, %struct.bNode** %tonode, align 8, !dbg !7058
  %type18 = getelementptr inbounds %struct.bNode, %struct.bNode* %23, i32 0, i32 8, !dbg !7060
  %24 = load i16, i16* %type18, align 4, !dbg !7060
  %conv19 = sext i16 %24 to i32, !dbg !7058
  %cmp20 = icmp eq i32 %conv19, 8, !dbg !7061
  br i1 %cmp20, label %land.lhs.true, label %if.end27, !dbg !7062

land.lhs.true:                                    ; preds = %if.end17
  %25 = load %struct.bNode*, %struct.bNode** %tonode, align 8, !dbg !7063
  %flag = getelementptr inbounds %struct.bNode, %struct.bNode* %25, i32 0, i32 7, !dbg !7064
  %26 = load i32, i32* %flag, align 8, !dbg !7064
  %and = and i32 %26, 64, !dbg !7065
  %tobool22 = icmp ne i32 %and, 0, !dbg !7065
  br i1 %tobool22, label %if.then23, label %if.end27, !dbg !7066

if.then23:                                        ; preds = %land.lhs.true
  store %struct.bNode* null, %struct.bNode** %tonode, align 8, !dbg !7067
  %27 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree, align 8, !dbg !7069
  %28 = load %struct.bNodeSocket*, %struct.bNodeSocket** %tosock, align 8, !dbg !7070
  %identifier24 = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %28, i32 0, i32 4, !dbg !7071
  %arraydecay25 = getelementptr inbounds [64 x i8], [64 x i8]* %identifier24, i64 0, i64 0, !dbg !7070
  %call26 = call %struct.bNodeSocket* @ntreeFindSocketInterface(%struct.bNodeTree* %27, i32 2, i8* %arraydecay25), !dbg !7072
  store %struct.bNodeSocket* %call26, %struct.bNodeSocket** %tosock, align 8, !dbg !7073
  br label %if.end27, !dbg !7074

if.end27:                                         ; preds = %if.then23, %land.lhs.true, %if.end17
  %29 = load %struct.bNode*, %struct.bNode** %fromnode, align 8, !dbg !7075
  %tobool28 = icmp ne %struct.bNode* %29, null, !dbg !7075
  br i1 %tobool28, label %lor.lhs.false, label %if.then30, !dbg !7077

lor.lhs.false:                                    ; preds = %if.end27
  %30 = load %struct.bNode*, %struct.bNode** %tonode, align 8, !dbg !7078
  %tobool29 = icmp ne %struct.bNode* %30, null, !dbg !7078
  br i1 %tobool29, label %if.end39, label %if.then30, !dbg !7079

if.then30:                                        ; preds = %lor.lhs.false, %if.end27
  call void @llvm.dbg.declare(metadata %struct.bNodeLink** %tlink, metadata !7080, metadata !DIExpression()), !dbg !7082
  %31 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !7083
  %call31 = call i8* %31(i64 56, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.10, i64 0, i64 0)), !dbg !7083
  %32 = bitcast i8* %call31 to %struct.bNodeLink*, !dbg !7083
  store %struct.bNodeLink* %32, %struct.bNodeLink** %tlink, align 8, !dbg !7082
  %33 = load %struct.bNode*, %struct.bNode** %fromnode, align 8, !dbg !7084
  %34 = load %struct.bNodeLink*, %struct.bNodeLink** %tlink, align 8, !dbg !7085
  %fromnode32 = getelementptr inbounds %struct.bNodeLink, %struct.bNodeLink* %34, i32 0, i32 2, !dbg !7086
  store %struct.bNode* %33, %struct.bNode** %fromnode32, align 8, !dbg !7087
  %35 = load %struct.bNodeSocket*, %struct.bNodeSocket** %fromsock, align 8, !dbg !7088
  %36 = load %struct.bNodeLink*, %struct.bNodeLink** %tlink, align 8, !dbg !7089
  %fromsock33 = getelementptr inbounds %struct.bNodeLink, %struct.bNodeLink* %36, i32 0, i32 4, !dbg !7090
  store %struct.bNodeSocket* %35, %struct.bNodeSocket** %fromsock33, align 8, !dbg !7091
  %37 = load %struct.bNode*, %struct.bNode** %tonode, align 8, !dbg !7092
  %38 = load %struct.bNodeLink*, %struct.bNodeLink** %tlink, align 8, !dbg !7093
  %tonode34 = getelementptr inbounds %struct.bNodeLink, %struct.bNodeLink* %38, i32 0, i32 3, !dbg !7094
  store %struct.bNode* %37, %struct.bNode** %tonode34, align 8, !dbg !7095
  %39 = load %struct.bNodeSocket*, %struct.bNodeSocket** %tosock, align 8, !dbg !7096
  %40 = load %struct.bNodeLink*, %struct.bNodeLink** %tlink, align 8, !dbg !7097
  %tosock35 = getelementptr inbounds %struct.bNodeLink, %struct.bNodeLink* %40, i32 0, i32 5, !dbg !7098
  store %struct.bNodeSocket* %39, %struct.bNodeSocket** %tosock35, align 8, !dbg !7099
  %41 = load %struct.bNodeLink*, %struct.bNodeLink** %tlink, align 8, !dbg !7100
  %42 = load %struct.bNodeSocket*, %struct.bNodeSocket** %tosock, align 8, !dbg !7101
  %link36 = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %42, i32 0, i32 23, !dbg !7102
  store %struct.bNodeLink* %41, %struct.bNodeLink** %link36, align 8, !dbg !7103
  %43 = load %struct.bNodeLink*, %struct.bNodeLink** %tlink, align 8, !dbg !7104
  %flag37 = getelementptr inbounds %struct.bNodeLink, %struct.bNodeLink* %43, i32 0, i32 6, !dbg !7105
  %44 = load i32, i32* %flag37, align 8, !dbg !7106
  %or = or i32 %44, 2, !dbg !7106
  store i32 %or, i32* %flag37, align 8, !dbg !7106
  %45 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree, align 8, !dbg !7107
  %links38 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %45, i32 0, i32 8, !dbg !7108
  %46 = load %struct.bNodeLink*, %struct.bNodeLink** %tlink, align 8, !dbg !7109
  %47 = bitcast %struct.bNodeLink* %46 to i8*, !dbg !7109
  call void @BLI_addtail(%struct.ListBase* %links38, i8* %47), !dbg !7110
  br label %if.end39, !dbg !7111

if.end39:                                         ; preds = %if.then30, %lor.lhs.false
  %48 = load %struct.bNodeLink*, %struct.bNodeLink** %link, align 8, !dbg !7112
  %49 = load %struct.bNodeLink*, %struct.bNodeLink** %last_link, align 8, !dbg !7114
  %cmp40 = icmp eq %struct.bNodeLink* %48, %49, !dbg !7115
  br i1 %cmp40, label %if.then42, label %if.end43, !dbg !7116

if.then42:                                        ; preds = %if.end39
  br label %for.end, !dbg !7117

if.end43:                                         ; preds = %if.end39
  br label %for.inc, !dbg !7118

for.inc:                                          ; preds = %if.end43
  %50 = load %struct.bNodeLink*, %struct.bNodeLink** %link, align 8, !dbg !7119
  %next = getelementptr inbounds %struct.bNodeLink, %struct.bNodeLink* %50, i32 0, i32 0, !dbg !7120
  %51 = load %struct.bNodeLink*, %struct.bNodeLink** %next, align 8, !dbg !7120
  store %struct.bNodeLink* %51, %struct.bNodeLink** %link, align 8, !dbg !7121
  br label %for.cond, !dbg !7122, !llvm.loop !7123

for.end:                                          ; preds = %if.then42, %for.cond
  br label %if.end44, !dbg !7125

if.end44:                                         ; preds = %for.end, %while.body
  br label %while.cond, !dbg !6992, !llvm.loop !7017

while.end:                                        ; preds = %while.cond
  ret void, !dbg !7126
}

; Function Attrs: nounwind
declare dso_local i32 @sprintf(i8*, i8*, ...) #3

; Function Attrs: noinline nounwind uwtable
define internal void @write_renderinfo(%struct.WriteData* %wd, %struct.Main* %mainvar) #0 !dbg !7127 {
entry:
  %wd.addr = alloca %struct.WriteData*, align 8
  %mainvar.addr = alloca %struct.Main*, align 8
  %curscreen = alloca %struct.bScreen*, align 8
  %sce = alloca %struct.Scene*, align 8
  %curscene = alloca %struct.Scene*, align 8
  %data = alloca %struct.RenderInfo, align 4
  store %struct.WriteData* %wd, %struct.WriteData** %wd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WriteData** %wd.addr, metadata !7130, metadata !DIExpression()), !dbg !7131
  store %struct.Main* %mainvar, %struct.Main** %mainvar.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Main** %mainvar.addr, metadata !7132, metadata !DIExpression()), !dbg !7133
  call void @llvm.dbg.declare(metadata %struct.bScreen** %curscreen, metadata !7134, metadata !DIExpression()), !dbg !7137
  call void @llvm.dbg.declare(metadata %struct.Scene** %sce, metadata !7138, metadata !DIExpression()), !dbg !7139
  call void @llvm.dbg.declare(metadata %struct.Scene** %curscene, metadata !7140, metadata !DIExpression()), !dbg !7141
  store %struct.Scene* null, %struct.Scene** %curscene, align 8, !dbg !7141
  call void @llvm.dbg.declare(metadata %struct.RenderInfo* %data, metadata !7142, metadata !DIExpression()), !dbg !7149
  %0 = load %struct.Main*, %struct.Main** %mainvar.addr, align 8, !dbg !7150
  call void @current_screen_compat(%struct.Main* %0, %struct.bScreen** %curscreen), !dbg !7151
  %1 = load %struct.bScreen*, %struct.bScreen** %curscreen, align 8, !dbg !7152
  %tobool = icmp ne %struct.bScreen* %1, null, !dbg !7152
  br i1 %tobool, label %if.then, label %if.end, !dbg !7154

if.then:                                          ; preds = %entry
  %2 = load %struct.bScreen*, %struct.bScreen** %curscreen, align 8, !dbg !7155
  %scene = getelementptr inbounds %struct.bScreen, %struct.bScreen* %2, i32 0, i32 5, !dbg !7156
  %3 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !7156
  store %struct.Scene* %3, %struct.Scene** %curscene, align 8, !dbg !7157
  br label %if.end, !dbg !7158

if.end:                                           ; preds = %if.then, %entry
  %4 = load %struct.Main*, %struct.Main** %mainvar.addr, align 8, !dbg !7159
  %scene1 = getelementptr inbounds %struct.Main, %struct.Main* %4, i32 0, i32 11, !dbg !7161
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %scene1, i32 0, i32 0, !dbg !7162
  %5 = load i8*, i8** %first, align 8, !dbg !7162
  %6 = bitcast i8* %5 to %struct.Scene*, !dbg !7159
  store %struct.Scene* %6, %struct.Scene** %sce, align 8, !dbg !7163
  br label %for.cond, !dbg !7164

for.cond:                                         ; preds = %for.inc, %if.end
  %7 = load %struct.Scene*, %struct.Scene** %sce, align 8, !dbg !7165
  %tobool2 = icmp ne %struct.Scene* %7, null, !dbg !7167
  br i1 %tobool2, label %for.body, label %for.end, !dbg !7167

for.body:                                         ; preds = %for.cond
  %8 = load %struct.Scene*, %struct.Scene** %sce, align 8, !dbg !7168
  %id = getelementptr inbounds %struct.Scene, %struct.Scene* %8, i32 0, i32 0, !dbg !7171
  %lib = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 3, !dbg !7172
  %9 = load %struct.Library*, %struct.Library** %lib, align 8, !dbg !7172
  %cmp = icmp eq %struct.Library* %9, null, !dbg !7173
  br i1 %cmp, label %land.lhs.true, label %if.end14, !dbg !7174

land.lhs.true:                                    ; preds = %for.body
  %10 = load %struct.Scene*, %struct.Scene** %sce, align 8, !dbg !7175
  %11 = load %struct.Scene*, %struct.Scene** %curscene, align 8, !dbg !7176
  %cmp3 = icmp eq %struct.Scene* %10, %11, !dbg !7177
  br i1 %cmp3, label %if.then5, label %lor.lhs.false, !dbg !7178

lor.lhs.false:                                    ; preds = %land.lhs.true
  %12 = load %struct.Scene*, %struct.Scene** %sce, align 8, !dbg !7179
  %r = getelementptr inbounds %struct.Scene, %struct.Scene* %12, i32 0, i32 22, !dbg !7180
  %scemode = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r, i32 0, i32 46, !dbg !7181
  %13 = load i32, i32* %scemode, align 4, !dbg !7181
  %and = and i32 %13, 2, !dbg !7182
  %tobool4 = icmp ne i32 %and, 0, !dbg !7182
  br i1 %tobool4, label %if.then5, label %if.end14, !dbg !7183

if.then5:                                         ; preds = %lor.lhs.false, %land.lhs.true
  %14 = load %struct.Scene*, %struct.Scene** %sce, align 8, !dbg !7184
  %r6 = getelementptr inbounds %struct.Scene, %struct.Scene* %14, i32 0, i32 22, !dbg !7186
  %sfra = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r6, i32 0, i32 6, !dbg !7187
  %15 = load i32, i32* %sfra, align 4, !dbg !7187
  %sfra7 = getelementptr inbounds %struct.RenderInfo, %struct.RenderInfo* %data, i32 0, i32 0, !dbg !7188
  store i32 %15, i32* %sfra7, align 4, !dbg !7189
  %16 = load %struct.Scene*, %struct.Scene** %sce, align 8, !dbg !7190
  %r8 = getelementptr inbounds %struct.Scene, %struct.Scene* %16, i32 0, i32 22, !dbg !7191
  %efra = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r8, i32 0, i32 7, !dbg !7192
  %17 = load i32, i32* %efra, align 8, !dbg !7192
  %efra9 = getelementptr inbounds %struct.RenderInfo, %struct.RenderInfo* %data, i32 0, i32 1, !dbg !7193
  store i32 %17, i32* %efra9, align 4, !dbg !7194
  %scene_name = getelementptr inbounds %struct.RenderInfo, %struct.RenderInfo* %data, i32 0, i32 2, !dbg !7195
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %scene_name, i64 0, i64 0, !dbg !7196
  call void @llvm.memset.p0i8.i64(i8* align 4 %arraydecay, i8 0, i64 64, i1 false), !dbg !7196
  %scene_name10 = getelementptr inbounds %struct.RenderInfo, %struct.RenderInfo* %data, i32 0, i32 2, !dbg !7197
  %arraydecay11 = getelementptr inbounds [64 x i8], [64 x i8]* %scene_name10, i64 0, i64 0, !dbg !7198
  %18 = load %struct.Scene*, %struct.Scene** %sce, align 8, !dbg !7199
  %id12 = getelementptr inbounds %struct.Scene, %struct.Scene* %18, i32 0, i32 0, !dbg !7200
  %name = getelementptr inbounds %struct.ID, %struct.ID* %id12, i32 0, i32 4, !dbg !7201
  %arraydecay13 = getelementptr inbounds [66 x i8], [66 x i8]* %name, i64 0, i64 0, !dbg !7199
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay13, i64 2, !dbg !7202
  %call = call i8* @BLI_strncpy(i8* %arraydecay11, i8* %add.ptr, i64 64), !dbg !7203
  %19 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !7204
  %20 = bitcast %struct.RenderInfo* %data to i8*, !dbg !7205
  call void @writedata(%struct.WriteData* %19, i32 1145980242, i32 72, i8* %20), !dbg !7206
  br label %if.end14, !dbg !7207

if.end14:                                         ; preds = %if.then5, %lor.lhs.false, %for.body
  br label %for.inc, !dbg !7208

for.inc:                                          ; preds = %if.end14
  %21 = load %struct.Scene*, %struct.Scene** %sce, align 8, !dbg !7209
  %id15 = getelementptr inbounds %struct.Scene, %struct.Scene* %21, i32 0, i32 0, !dbg !7210
  %next = getelementptr inbounds %struct.ID, %struct.ID* %id15, i32 0, i32 0, !dbg !7211
  %22 = load i8*, i8** %next, align 8, !dbg !7211
  %23 = bitcast i8* %22 to %struct.Scene*, !dbg !7209
  store %struct.Scene* %23, %struct.Scene** %sce, align 8, !dbg !7212
  br label %for.cond, !dbg !7213, !llvm.loop !7214

for.end:                                          ; preds = %for.cond
  ret void, !dbg !7216
}

; Function Attrs: noinline nounwind uwtable
define internal void @write_thumb(%struct.WriteData* %wd, i32* %img) #0 !dbg !7217 {
entry:
  %wd.addr = alloca %struct.WriteData*, align 8
  %img.addr = alloca i32*, align 8
  store %struct.WriteData* %wd, %struct.WriteData** %wd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WriteData** %wd.addr, metadata !7220, metadata !DIExpression()), !dbg !7221
  store i32* %img, i32** %img.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %img.addr, metadata !7222, metadata !DIExpression()), !dbg !7223
  %0 = load i32*, i32** %img.addr, align 8, !dbg !7224
  %tobool = icmp ne i32* %0, null, !dbg !7224
  br i1 %tobool, label %if.then, label %if.end, !dbg !7226

if.then:                                          ; preds = %entry
  %1 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !7227
  %2 = load i32*, i32** %img.addr, align 8, !dbg !7228
  %arrayidx = getelementptr inbounds i32, i32* %2, i64 0, !dbg !7228
  %3 = load i32, i32* %arrayidx, align 4, !dbg !7228
  %4 = load i32*, i32** %img.addr, align 8, !dbg !7229
  %arrayidx1 = getelementptr inbounds i32, i32* %4, i64 1, !dbg !7229
  %5 = load i32, i32* %arrayidx1, align 4, !dbg !7229
  %mul = mul nsw i32 %3, %5, !dbg !7230
  %add = add nsw i32 2, %mul, !dbg !7231
  %conv = sext i32 %add to i64, !dbg !7232
  %mul2 = mul i64 %conv, 4, !dbg !7233
  %conv3 = trunc i64 %mul2 to i32, !dbg !7232
  %6 = load i32*, i32** %img.addr, align 8, !dbg !7234
  %7 = bitcast i32* %6 to i8*, !dbg !7234
  call void @writedata(%struct.WriteData* %1, i32 1414743380, i32 %conv3, i8* %7), !dbg !7235
  br label %if.end, !dbg !7235

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !7236
}

; Function Attrs: noinline nounwind uwtable
define internal void @write_global(%struct.WriteData* %wd, i32 %fileflags, %struct.Main* %mainvar) #0 !dbg !7237 {
entry:
  %wd.addr = alloca %struct.WriteData*, align 8
  %fileflags.addr = alloca i32, align 4
  %mainvar.addr = alloca %struct.Main*, align 8
  %fg = alloca %struct.FileGlobal, align 8
  %screen = alloca %struct.bScreen*, align 8
  %subvstr = alloca [8 x i8], align 1
  store %struct.WriteData* %wd, %struct.WriteData** %wd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WriteData** %wd.addr, metadata !7240, metadata !DIExpression()), !dbg !7241
  store i32 %fileflags, i32* %fileflags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fileflags.addr, metadata !7242, metadata !DIExpression()), !dbg !7243
  store %struct.Main* %mainvar, %struct.Main** %mainvar.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Main** %mainvar.addr, metadata !7244, metadata !DIExpression()), !dbg !7245
  call void @llvm.dbg.declare(metadata %struct.FileGlobal* %fg, metadata !7246, metadata !DIExpression()), !dbg !7265
  call void @llvm.dbg.declare(metadata %struct.bScreen** %screen, metadata !7266, metadata !DIExpression()), !dbg !7267
  call void @llvm.dbg.declare(metadata [8 x i8]* %subvstr, metadata !7268, metadata !DIExpression()), !dbg !7269
  %pads = getelementptr inbounds %struct.FileGlobal, %struct.FileGlobal* %fg, i32 0, i32 2, !dbg !7270
  store i16 0, i16* %pads, align 2, !dbg !7271
  %filename = getelementptr inbounds %struct.FileGlobal, %struct.FileGlobal* %fg, i32 0, i32 13, !dbg !7272
  %arraydecay = getelementptr inbounds [1024 x i8], [1024 x i8]* %filename, i64 0, i64 0, !dbg !7273
  call void @llvm.memset.p0i8.i64(i8* align 8 %arraydecay, i8 0, i64 1024, i1 false), !dbg !7273
  %build_hash = getelementptr inbounds %struct.FileGlobal, %struct.FileGlobal* %fg, i32 0, i32 12, !dbg !7274
  %arraydecay1 = getelementptr inbounds [16 x i8], [16 x i8]* %build_hash, i64 0, i64 0, !dbg !7275
  call void @llvm.memset.p0i8.i64(i8* align 8 %arraydecay1, i8 0, i64 16, i1 false), !dbg !7275
  %0 = load %struct.Main*, %struct.Main** %mainvar.addr, align 8, !dbg !7276
  call void @current_screen_compat(%struct.Main* %0, %struct.bScreen** %screen), !dbg !7277
  %1 = load %struct.bScreen*, %struct.bScreen** %screen, align 8, !dbg !7278
  %curscreen = getelementptr inbounds %struct.FileGlobal, %struct.FileGlobal* %fg, i32 0, i32 7, !dbg !7279
  store %struct.bScreen* %1, %struct.bScreen** %curscreen, align 8, !dbg !7280
  %2 = load %struct.bScreen*, %struct.bScreen** %screen, align 8, !dbg !7281
  %tobool = icmp ne %struct.bScreen* %2, null, !dbg !7281
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !7281

cond.true:                                        ; preds = %entry
  %3 = load %struct.bScreen*, %struct.bScreen** %screen, align 8, !dbg !7282
  %scene = getelementptr inbounds %struct.bScreen, %struct.bScreen* %3, i32 0, i32 5, !dbg !7283
  %4 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !7283
  br label %cond.end, !dbg !7281

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !7281

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.Scene* [ %4, %cond.true ], [ null, %cond.false ], !dbg !7281
  %curscene = getelementptr inbounds %struct.FileGlobal, %struct.FileGlobal* %fg, i32 0, i32 8, !dbg !7284
  store %struct.Scene* %cond, %struct.Scene** %curscene, align 8, !dbg !7285
  %5 = load i16, i16* getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 12), align 8, !dbg !7286
  %displaymode = getelementptr inbounds %struct.FileGlobal, %struct.FileGlobal* %fg, i32 0, i32 5, !dbg !7287
  store i16 %5, i16* %displaymode, align 4, !dbg !7288
  %6 = load i16, i16* getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 11), align 2, !dbg !7289
  %winpos = getelementptr inbounds %struct.FileGlobal, %struct.FileGlobal* %fg, i32 0, i32 6, !dbg !7290
  store i16 %6, i16* %winpos, align 2, !dbg !7291
  %7 = load i32, i32* %fileflags.addr, align 4, !dbg !7292
  %and = and i32 %7, -218104833, !dbg !7293
  %fileflags2 = getelementptr inbounds %struct.FileGlobal, %struct.FileGlobal* %fg, i32 0, i32 9, !dbg !7294
  store i32 %and, i32* %fileflags2, align 8, !dbg !7295
  %8 = load i32, i32* getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 15), align 8, !dbg !7296
  %globalf = getelementptr inbounds %struct.FileGlobal, %struct.FileGlobal* %fg, i32 0, i32 10, !dbg !7297
  store i32 %8, i32* %globalf, align 4, !dbg !7298
  %filename3 = getelementptr inbounds %struct.FileGlobal, %struct.FileGlobal* %fg, i32 0, i32 13, !dbg !7299
  %arraydecay4 = getelementptr inbounds [1024 x i8], [1024 x i8]* %filename3, i64 0, i64 0, !dbg !7300
  %9 = load %struct.Main*, %struct.Main** %mainvar.addr, align 8, !dbg !7301
  %name = getelementptr inbounds %struct.Main, %struct.Main* %9, i32 0, i32 2, !dbg !7302
  %arraydecay5 = getelementptr inbounds [1024 x i8], [1024 x i8]* %name, i64 0, i64 0, !dbg !7301
  %call = call i8* @BLI_strncpy(i8* %arraydecay4, i8* %arraydecay5, i64 1024), !dbg !7303
  %arraydecay6 = getelementptr inbounds [8 x i8], [8 x i8]* %subvstr, i64 0, i64 0, !dbg !7304
  %call7 = call i32 (i8*, i8*, ...) @sprintf(i8* %arraydecay6, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.11, i64 0, i64 0), i32 1) #8, !dbg !7305
  %subvstr8 = getelementptr inbounds %struct.FileGlobal, %struct.FileGlobal* %fg, i32 0, i32 0, !dbg !7306
  %arraydecay9 = getelementptr inbounds [4 x i8], [4 x i8]* %subvstr8, i64 0, i64 0, !dbg !7307
  %arraydecay10 = getelementptr inbounds [8 x i8], [8 x i8]* %subvstr, i64 0, i64 0, !dbg !7307
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %arraydecay9, i8* align 1 %arraydecay10, i64 4, i1 false), !dbg !7307
  %subversion = getelementptr inbounds %struct.FileGlobal, %struct.FileGlobal* %fg, i32 0, i32 1, !dbg !7308
  store i16 1, i16* %subversion, align 4, !dbg !7309
  %minversion = getelementptr inbounds %struct.FileGlobal, %struct.FileGlobal* %fg, i32 0, i32 3, !dbg !7310
  store i16 270, i16* %minversion, align 8, !dbg !7311
  %minsubversion = getelementptr inbounds %struct.FileGlobal, %struct.FileGlobal* %fg, i32 0, i32 4, !dbg !7312
  store i16 5, i16* %minsubversion, align 2, !dbg !7313
  %build_commit_timestamp = getelementptr inbounds %struct.FileGlobal, %struct.FileGlobal* %fg, i32 0, i32 11, !dbg !7314
  store i64 0, i64* %build_commit_timestamp, align 8, !dbg !7315
  %build_hash11 = getelementptr inbounds %struct.FileGlobal, %struct.FileGlobal* %fg, i32 0, i32 12, !dbg !7316
  %arraydecay12 = getelementptr inbounds [16 x i8], [16 x i8]* %build_hash11, i64 0, i64 0, !dbg !7317
  %call13 = call i8* @BLI_strncpy(i8* %arraydecay12, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.12, i64 0, i64 0), i64 16), !dbg !7318
  %10 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !7319
  %11 = bitcast %struct.FileGlobal* %fg to i8*, !dbg !7320
  call void @writestruct(%struct.WriteData* %10, i32 1112493127, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.13, i64 0, i64 0), i32 1, i8* %11), !dbg !7321
  ret void, !dbg !7322
}

; Function Attrs: noinline nounwind uwtable
define internal void @write_windowmanagers(%struct.WriteData* %wd, %struct.ListBase* %lb) #0 !dbg !7323 {
entry:
  %wd.addr = alloca %struct.WriteData*, align 8
  %lb.addr = alloca %struct.ListBase*, align 8
  %wm = alloca %struct.wmWindowManager*, align 8
  %win = alloca %struct.wmWindow*, align 8
  store %struct.WriteData* %wd, %struct.WriteData** %wd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WriteData** %wd.addr, metadata !7326, metadata !DIExpression()), !dbg !7327
  store %struct.ListBase* %lb, %struct.ListBase** %lb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %lb.addr, metadata !7328, metadata !DIExpression()), !dbg !7329
  call void @llvm.dbg.declare(metadata %struct.wmWindowManager** %wm, metadata !7330, metadata !DIExpression()), !dbg !7407
  call void @llvm.dbg.declare(metadata %struct.wmWindow** %win, metadata !7408, metadata !DIExpression()), !dbg !7411
  %0 = load %struct.ListBase*, %struct.ListBase** %lb.addr, align 8, !dbg !7412
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %0, i32 0, i32 0, !dbg !7414
  %1 = load i8*, i8** %first, align 8, !dbg !7414
  %2 = bitcast i8* %1 to %struct.wmWindowManager*, !dbg !7412
  store %struct.wmWindowManager* %2, %struct.wmWindowManager** %wm, align 8, !dbg !7415
  br label %for.cond, !dbg !7416

for.cond:                                         ; preds = %for.inc5, %entry
  %3 = load %struct.wmWindowManager*, %struct.wmWindowManager** %wm, align 8, !dbg !7417
  %tobool = icmp ne %struct.wmWindowManager* %3, null, !dbg !7419
  br i1 %tobool, label %for.body, label %for.end7, !dbg !7419

for.body:                                         ; preds = %for.cond
  %4 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !7420
  %5 = load %struct.wmWindowManager*, %struct.wmWindowManager** %wm, align 8, !dbg !7422
  %6 = bitcast %struct.wmWindowManager* %5 to i8*, !dbg !7422
  call void @writestruct(%struct.WriteData* %4, i32 19799, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.14, i64 0, i64 0), i32 1, i8* %6), !dbg !7423
  %7 = load %struct.wmWindowManager*, %struct.wmWindowManager** %wm, align 8, !dbg !7424
  %windows = getelementptr inbounds %struct.wmWindowManager, %struct.wmWindowManager* %7, i32 0, i32 3, !dbg !7426
  %first1 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %windows, i32 0, i32 0, !dbg !7427
  %8 = load i8*, i8** %first1, align 8, !dbg !7427
  %9 = bitcast i8* %8 to %struct.wmWindow*, !dbg !7424
  store %struct.wmWindow* %9, %struct.wmWindow** %win, align 8, !dbg !7428
  br label %for.cond2, !dbg !7429

for.cond2:                                        ; preds = %for.inc, %for.body
  %10 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !7430
  %tobool3 = icmp ne %struct.wmWindow* %10, null, !dbg !7432
  br i1 %tobool3, label %for.body4, label %for.end, !dbg !7432

for.body4:                                        ; preds = %for.cond2
  %11 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !7433
  %12 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !7434
  %13 = bitcast %struct.wmWindow* %12 to i8*, !dbg !7434
  call void @writestruct(%struct.WriteData* %11, i32 1096040772, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.15, i64 0, i64 0), i32 1, i8* %13), !dbg !7435
  br label %for.inc, !dbg !7435

for.inc:                                          ; preds = %for.body4
  %14 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !7436
  %next = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %14, i32 0, i32 0, !dbg !7437
  %15 = load %struct.wmWindow*, %struct.wmWindow** %next, align 8, !dbg !7437
  store %struct.wmWindow* %15, %struct.wmWindow** %win, align 8, !dbg !7438
  br label %for.cond2, !dbg !7439, !llvm.loop !7440

for.end:                                          ; preds = %for.cond2
  br label %for.inc5, !dbg !7442

for.inc5:                                         ; preds = %for.end
  %16 = load %struct.wmWindowManager*, %struct.wmWindowManager** %wm, align 8, !dbg !7443
  %id = getelementptr inbounds %struct.wmWindowManager, %struct.wmWindowManager* %16, i32 0, i32 0, !dbg !7444
  %next6 = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 0, !dbg !7445
  %17 = load i8*, i8** %next6, align 8, !dbg !7445
  %18 = bitcast i8* %17 to %struct.wmWindowManager*, !dbg !7443
  store %struct.wmWindowManager* %18, %struct.wmWindowManager** %wm, align 8, !dbg !7446
  br label %for.cond, !dbg !7447, !llvm.loop !7448

for.end7:                                         ; preds = %for.cond
  ret void, !dbg !7450
}

; Function Attrs: noinline nounwind uwtable
define internal void @write_screens(%struct.WriteData* %wd, %struct.ListBase* %scrbase) #0 !dbg !7451 {
entry:
  %wd.addr = alloca %struct.WriteData*, align 8
  %scrbase.addr = alloca %struct.ListBase*, align 8
  %sc = alloca %struct.bScreen*, align 8
  %sa = alloca %struct.ScrArea*, align 8
  %sv = alloca %struct.ScrVert*, align 8
  %se = alloca %struct.ScrEdge*, align 8
  %tmp_mem_list = alloca %struct.LinkNode*, align 8
  %sl = alloca %struct.SpaceLink*, align 8
  %pa = alloca %struct.Panel*, align 8
  %ui_list = alloca %struct.uiList*, align 8
  %ui_preview = alloca %struct.uiPreview*, align 8
  %pc_act = alloca %struct.PanelCategoryStack*, align 8
  %ar = alloca %struct.ARegion*, align 8
  %v3d = alloca %struct.View3D*, align 8
  %bgpic = alloca %struct.BGpic*, align 8
  %sipo = alloca %struct.SpaceIpo*, align 8
  %tmpGhosts = alloca %struct.ListBase, align 8
  %sfile = alloca %struct.SpaceFile*, align 8
  %so = alloca %struct.SpaceOops*, align 8
  %sima = alloca %struct.SpaceImage*, align 8
  %scr = alloca %struct.SpaceScript*, align 8
  %snla = alloca %struct.SpaceNla*, align 8
  %snode = alloca %struct.SpaceNode*, align 8
  %path = alloca %struct.bNodeTreePath*, align 8
  %con = alloca %struct.SpaceConsole*, align 8
  %cl = alloca %struct.ConsoleLine*, align 8
  store %struct.WriteData* %wd, %struct.WriteData** %wd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WriteData** %wd.addr, metadata !7452, metadata !DIExpression()), !dbg !7453
  store %struct.ListBase* %scrbase, %struct.ListBase** %scrbase.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %scrbase.addr, metadata !7454, metadata !DIExpression()), !dbg !7455
  call void @llvm.dbg.declare(metadata %struct.bScreen** %sc, metadata !7456, metadata !DIExpression()), !dbg !7457
  call void @llvm.dbg.declare(metadata %struct.ScrArea** %sa, metadata !7458, metadata !DIExpression()), !dbg !7505
  call void @llvm.dbg.declare(metadata %struct.ScrVert** %sv, metadata !7506, metadata !DIExpression()), !dbg !7507
  call void @llvm.dbg.declare(metadata %struct.ScrEdge** %se, metadata !7508, metadata !DIExpression()), !dbg !7521
  call void @llvm.dbg.declare(metadata %struct.LinkNode** %tmp_mem_list, metadata !7522, metadata !DIExpression()), !dbg !7525
  store %struct.LinkNode* null, %struct.LinkNode** %tmp_mem_list, align 8, !dbg !7525
  %0 = load %struct.ListBase*, %struct.ListBase** %scrbase.addr, align 8, !dbg !7526
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %0, i32 0, i32 0, !dbg !7527
  %1 = load i8*, i8** %first, align 8, !dbg !7527
  %2 = bitcast i8* %1 to %struct.bScreen*, !dbg !7526
  store %struct.bScreen* %2, %struct.bScreen** %sc, align 8, !dbg !7528
  br label %while.cond, !dbg !7529

while.cond:                                       ; preds = %for.end213, %entry
  %3 = load %struct.bScreen*, %struct.bScreen** %sc, align 8, !dbg !7530
  %tobool = icmp ne %struct.bScreen* %3, null, !dbg !7529
  br i1 %tobool, label %while.body, label %while.end216, !dbg !7529

while.body:                                       ; preds = %while.cond
  %4 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !7531
  %5 = load %struct.bScreen*, %struct.bScreen** %sc, align 8, !dbg !7533
  %6 = bitcast %struct.bScreen* %5 to i8*, !dbg !7533
  call void @writestruct(%struct.WriteData* %4, i32 20051, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.16, i64 0, i64 0), i32 1, i8* %6), !dbg !7534
  %7 = load %struct.bScreen*, %struct.bScreen** %sc, align 8, !dbg !7535
  %id = getelementptr inbounds %struct.bScreen, %struct.bScreen* %7, i32 0, i32 0, !dbg !7537
  %properties = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 9, !dbg !7538
  %8 = load %struct.IDProperty*, %struct.IDProperty** %properties, align 8, !dbg !7538
  %tobool1 = icmp ne %struct.IDProperty* %8, null, !dbg !7535
  br i1 %tobool1, label %if.then, label %if.end, !dbg !7539

if.then:                                          ; preds = %while.body
  %9 = load %struct.bScreen*, %struct.bScreen** %sc, align 8, !dbg !7540
  %id2 = getelementptr inbounds %struct.bScreen, %struct.bScreen* %9, i32 0, i32 0, !dbg !7541
  %properties3 = getelementptr inbounds %struct.ID, %struct.ID* %id2, i32 0, i32 9, !dbg !7542
  %10 = load %struct.IDProperty*, %struct.IDProperty** %properties3, align 8, !dbg !7542
  %11 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !7543
  %12 = bitcast %struct.WriteData* %11 to i8*, !dbg !7543
  call void @IDP_WriteProperty(%struct.IDProperty* %10, i8* %12), !dbg !7544
  br label %if.end, !dbg !7544

if.end:                                           ; preds = %if.then, %while.body
  %13 = load %struct.bScreen*, %struct.bScreen** %sc, align 8, !dbg !7545
  %vertbase = getelementptr inbounds %struct.bScreen, %struct.bScreen* %13, i32 0, i32 1, !dbg !7547
  %first4 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %vertbase, i32 0, i32 0, !dbg !7548
  %14 = load i8*, i8** %first4, align 8, !dbg !7548
  %15 = bitcast i8* %14 to %struct.ScrVert*, !dbg !7545
  store %struct.ScrVert* %15, %struct.ScrVert** %sv, align 8, !dbg !7549
  br label %for.cond, !dbg !7550

for.cond:                                         ; preds = %for.inc, %if.end
  %16 = load %struct.ScrVert*, %struct.ScrVert** %sv, align 8, !dbg !7551
  %tobool5 = icmp ne %struct.ScrVert* %16, null, !dbg !7553
  br i1 %tobool5, label %for.body, label %for.end, !dbg !7553

for.body:                                         ; preds = %for.cond
  %17 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !7554
  %18 = load %struct.ScrVert*, %struct.ScrVert** %sv, align 8, !dbg !7555
  %19 = bitcast %struct.ScrVert* %18 to i8*, !dbg !7555
  call void @writestruct(%struct.WriteData* %17, i32 1096040772, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.17, i64 0, i64 0), i32 1, i8* %19), !dbg !7556
  br label %for.inc, !dbg !7556

for.inc:                                          ; preds = %for.body
  %20 = load %struct.ScrVert*, %struct.ScrVert** %sv, align 8, !dbg !7557
  %next = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %20, i32 0, i32 0, !dbg !7558
  %21 = load %struct.ScrVert*, %struct.ScrVert** %next, align 8, !dbg !7558
  store %struct.ScrVert* %21, %struct.ScrVert** %sv, align 8, !dbg !7559
  br label %for.cond, !dbg !7560, !llvm.loop !7561

for.end:                                          ; preds = %for.cond
  %22 = load %struct.bScreen*, %struct.bScreen** %sc, align 8, !dbg !7563
  %edgebase = getelementptr inbounds %struct.bScreen, %struct.bScreen* %22, i32 0, i32 2, !dbg !7565
  %first6 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %edgebase, i32 0, i32 0, !dbg !7566
  %23 = load i8*, i8** %first6, align 8, !dbg !7566
  %24 = bitcast i8* %23 to %struct.ScrEdge*, !dbg !7563
  store %struct.ScrEdge* %24, %struct.ScrEdge** %se, align 8, !dbg !7567
  br label %for.cond7, !dbg !7568

for.cond7:                                        ; preds = %for.inc10, %for.end
  %25 = load %struct.ScrEdge*, %struct.ScrEdge** %se, align 8, !dbg !7569
  %tobool8 = icmp ne %struct.ScrEdge* %25, null, !dbg !7571
  br i1 %tobool8, label %for.body9, label %for.end12, !dbg !7571

for.body9:                                        ; preds = %for.cond7
  %26 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !7572
  %27 = load %struct.ScrEdge*, %struct.ScrEdge** %se, align 8, !dbg !7573
  %28 = bitcast %struct.ScrEdge* %27 to i8*, !dbg !7573
  call void @writestruct(%struct.WriteData* %26, i32 1096040772, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.18, i64 0, i64 0), i32 1, i8* %28), !dbg !7574
  br label %for.inc10, !dbg !7574

for.inc10:                                        ; preds = %for.body9
  %29 = load %struct.ScrEdge*, %struct.ScrEdge** %se, align 8, !dbg !7575
  %next11 = getelementptr inbounds %struct.ScrEdge, %struct.ScrEdge* %29, i32 0, i32 0, !dbg !7576
  %30 = load %struct.ScrEdge*, %struct.ScrEdge** %next11, align 8, !dbg !7576
  store %struct.ScrEdge* %30, %struct.ScrEdge** %se, align 8, !dbg !7577
  br label %for.cond7, !dbg !7578, !llvm.loop !7579

for.end12:                                        ; preds = %for.cond7
  %31 = load %struct.bScreen*, %struct.bScreen** %sc, align 8, !dbg !7581
  %areabase = getelementptr inbounds %struct.bScreen, %struct.bScreen* %31, i32 0, i32 3, !dbg !7583
  %first13 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %areabase, i32 0, i32 0, !dbg !7584
  %32 = load i8*, i8** %first13, align 8, !dbg !7584
  %33 = bitcast i8* %32 to %struct.ScrArea*, !dbg !7581
  store %struct.ScrArea* %33, %struct.ScrArea** %sa, align 8, !dbg !7585
  br label %for.cond14, !dbg !7586

for.cond14:                                       ; preds = %for.inc211, %for.end12
  %34 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !7587
  %tobool15 = icmp ne %struct.ScrArea* %34, null, !dbg !7589
  br i1 %tobool15, label %for.body16, label %for.end213, !dbg !7589

for.body16:                                       ; preds = %for.cond14
  call void @llvm.dbg.declare(metadata %struct.SpaceLink** %sl, metadata !7590, metadata !DIExpression()), !dbg !7592
  call void @llvm.dbg.declare(metadata %struct.Panel** %pa, metadata !7593, metadata !DIExpression()), !dbg !7621
  call void @llvm.dbg.declare(metadata %struct.uiList** %ui_list, metadata !7622, metadata !DIExpression()), !dbg !7658
  call void @llvm.dbg.declare(metadata %struct.uiPreview** %ui_preview, metadata !7659, metadata !DIExpression()), !dbg !7670
  call void @llvm.dbg.declare(metadata %struct.PanelCategoryStack** %pc_act, metadata !7671, metadata !DIExpression()), !dbg !7680
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar, metadata !7681, metadata !DIExpression()), !dbg !7684
  %35 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !7685
  %36 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !7686
  %37 = bitcast %struct.ScrArea* %36 to i8*, !dbg !7686
  call void @writestruct(%struct.WriteData* %35, i32 1096040772, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.19, i64 0, i64 0), i32 1, i8* %37), !dbg !7687
  %38 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !7688
  %regionbase = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %38, i32 0, i32 20, !dbg !7690
  %first17 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %regionbase, i32 0, i32 0, !dbg !7691
  %39 = load i8*, i8** %first17, align 8, !dbg !7691
  %40 = bitcast i8* %39 to %struct.ARegion*, !dbg !7688
  store %struct.ARegion* %40, %struct.ARegion** %ar, align 8, !dbg !7692
  br label %for.cond18, !dbg !7693

for.cond18:                                       ; preds = %for.inc49, %for.body16
  %41 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !7694
  %tobool19 = icmp ne %struct.ARegion* %41, null, !dbg !7696
  br i1 %tobool19, label %for.body20, label %for.end51, !dbg !7696

for.body20:                                       ; preds = %for.cond18
  %42 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !7697
  %43 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !7699
  %44 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !7700
  %spacetype = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %44, i32 0, i32 8, !dbg !7701
  %45 = load i8, i8* %spacetype, align 8, !dbg !7701
  %conv = zext i8 %45 to i32, !dbg !7700
  call void @write_region(%struct.WriteData* %42, %struct.ARegion* %43, i32 %conv), !dbg !7702
  %46 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !7703
  %panels = getelementptr inbounds %struct.ARegion, %struct.ARegion* %46, i32 0, i32 22, !dbg !7705
  %first21 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %panels, i32 0, i32 0, !dbg !7706
  %47 = load i8*, i8** %first21, align 8, !dbg !7706
  %48 = bitcast i8* %47 to %struct.Panel*, !dbg !7703
  store %struct.Panel* %48, %struct.Panel** %pa, align 8, !dbg !7707
  br label %for.cond22, !dbg !7708

for.cond22:                                       ; preds = %for.inc25, %for.body20
  %49 = load %struct.Panel*, %struct.Panel** %pa, align 8, !dbg !7709
  %tobool23 = icmp ne %struct.Panel* %49, null, !dbg !7711
  br i1 %tobool23, label %for.body24, label %for.end27, !dbg !7711

for.body24:                                       ; preds = %for.cond22
  %50 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !7712
  %51 = load %struct.Panel*, %struct.Panel** %pa, align 8, !dbg !7713
  %52 = bitcast %struct.Panel* %51 to i8*, !dbg !7713
  call void @writestruct(%struct.WriteData* %50, i32 1096040772, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.20, i64 0, i64 0), i32 1, i8* %52), !dbg !7714
  br label %for.inc25, !dbg !7714

for.inc25:                                        ; preds = %for.body24
  %53 = load %struct.Panel*, %struct.Panel** %pa, align 8, !dbg !7715
  %next26 = getelementptr inbounds %struct.Panel, %struct.Panel* %53, i32 0, i32 0, !dbg !7716
  %54 = load %struct.Panel*, %struct.Panel** %next26, align 8, !dbg !7716
  store %struct.Panel* %54, %struct.Panel** %pa, align 8, !dbg !7717
  br label %for.cond22, !dbg !7718, !llvm.loop !7719

for.end27:                                        ; preds = %for.cond22
  %55 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !7721
  %panels_category_active = getelementptr inbounds %struct.ARegion, %struct.ARegion* %55, i32 0, i32 23, !dbg !7723
  %first28 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %panels_category_active, i32 0, i32 0, !dbg !7724
  %56 = load i8*, i8** %first28, align 8, !dbg !7724
  %57 = bitcast i8* %56 to %struct.PanelCategoryStack*, !dbg !7721
  store %struct.PanelCategoryStack* %57, %struct.PanelCategoryStack** %pc_act, align 8, !dbg !7725
  br label %for.cond29, !dbg !7726

for.cond29:                                       ; preds = %for.inc32, %for.end27
  %58 = load %struct.PanelCategoryStack*, %struct.PanelCategoryStack** %pc_act, align 8, !dbg !7727
  %tobool30 = icmp ne %struct.PanelCategoryStack* %58, null, !dbg !7729
  br i1 %tobool30, label %for.body31, label %for.end34, !dbg !7729

for.body31:                                       ; preds = %for.cond29
  %59 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !7730
  %60 = load %struct.PanelCategoryStack*, %struct.PanelCategoryStack** %pc_act, align 8, !dbg !7731
  %61 = bitcast %struct.PanelCategoryStack* %60 to i8*, !dbg !7731
  call void @writestruct(%struct.WriteData* %59, i32 1096040772, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.21, i64 0, i64 0), i32 1, i8* %61), !dbg !7732
  br label %for.inc32, !dbg !7732

for.inc32:                                        ; preds = %for.body31
  %62 = load %struct.PanelCategoryStack*, %struct.PanelCategoryStack** %pc_act, align 8, !dbg !7733
  %next33 = getelementptr inbounds %struct.PanelCategoryStack, %struct.PanelCategoryStack* %62, i32 0, i32 0, !dbg !7734
  %63 = load %struct.PanelCategoryStack*, %struct.PanelCategoryStack** %next33, align 8, !dbg !7734
  store %struct.PanelCategoryStack* %63, %struct.PanelCategoryStack** %pc_act, align 8, !dbg !7735
  br label %for.cond29, !dbg !7736, !llvm.loop !7737

for.end34:                                        ; preds = %for.cond29
  %64 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !7739
  %ui_lists = getelementptr inbounds %struct.ARegion, %struct.ARegion* %64, i32 0, i32 24, !dbg !7741
  %first35 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %ui_lists, i32 0, i32 0, !dbg !7742
  %65 = load i8*, i8** %first35, align 8, !dbg !7742
  %66 = bitcast i8* %65 to %struct.uiList*, !dbg !7739
  store %struct.uiList* %66, %struct.uiList** %ui_list, align 8, !dbg !7743
  br label %for.cond36, !dbg !7744

for.cond36:                                       ; preds = %for.inc39, %for.end34
  %67 = load %struct.uiList*, %struct.uiList** %ui_list, align 8, !dbg !7745
  %tobool37 = icmp ne %struct.uiList* %67, null, !dbg !7747
  br i1 %tobool37, label %for.body38, label %for.end41, !dbg !7747

for.body38:                                       ; preds = %for.cond36
  %68 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !7748
  %69 = load %struct.uiList*, %struct.uiList** %ui_list, align 8, !dbg !7749
  call void @write_uilist(%struct.WriteData* %68, %struct.uiList* %69), !dbg !7750
  br label %for.inc39, !dbg !7750

for.inc39:                                        ; preds = %for.body38
  %70 = load %struct.uiList*, %struct.uiList** %ui_list, align 8, !dbg !7751
  %next40 = getelementptr inbounds %struct.uiList, %struct.uiList* %70, i32 0, i32 0, !dbg !7752
  %71 = load %struct.uiList*, %struct.uiList** %next40, align 8, !dbg !7752
  store %struct.uiList* %71, %struct.uiList** %ui_list, align 8, !dbg !7753
  br label %for.cond36, !dbg !7754, !llvm.loop !7755

for.end41:                                        ; preds = %for.cond36
  %72 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !7757
  %ui_previews = getelementptr inbounds %struct.ARegion, %struct.ARegion* %72, i32 0, i32 25, !dbg !7759
  %first42 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %ui_previews, i32 0, i32 0, !dbg !7760
  %73 = load i8*, i8** %first42, align 8, !dbg !7760
  %74 = bitcast i8* %73 to %struct.uiPreview*, !dbg !7757
  store %struct.uiPreview* %74, %struct.uiPreview** %ui_preview, align 8, !dbg !7761
  br label %for.cond43, !dbg !7762

for.cond43:                                       ; preds = %for.inc46, %for.end41
  %75 = load %struct.uiPreview*, %struct.uiPreview** %ui_preview, align 8, !dbg !7763
  %tobool44 = icmp ne %struct.uiPreview* %75, null, !dbg !7765
  br i1 %tobool44, label %for.body45, label %for.end48, !dbg !7765

for.body45:                                       ; preds = %for.cond43
  %76 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !7766
  %77 = load %struct.uiPreview*, %struct.uiPreview** %ui_preview, align 8, !dbg !7767
  %78 = bitcast %struct.uiPreview* %77 to i8*, !dbg !7767
  call void @writestruct(%struct.WriteData* %76, i32 1096040772, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.22, i64 0, i64 0), i32 1, i8* %78), !dbg !7768
  br label %for.inc46, !dbg !7768

for.inc46:                                        ; preds = %for.body45
  %79 = load %struct.uiPreview*, %struct.uiPreview** %ui_preview, align 8, !dbg !7769
  %next47 = getelementptr inbounds %struct.uiPreview, %struct.uiPreview* %79, i32 0, i32 0, !dbg !7770
  %80 = load %struct.uiPreview*, %struct.uiPreview** %next47, align 8, !dbg !7770
  store %struct.uiPreview* %80, %struct.uiPreview** %ui_preview, align 8, !dbg !7771
  br label %for.cond43, !dbg !7772, !llvm.loop !7773

for.end48:                                        ; preds = %for.cond43
  br label %for.inc49, !dbg !7775

for.inc49:                                        ; preds = %for.end48
  %81 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !7776
  %next50 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %81, i32 0, i32 0, !dbg !7777
  %82 = load %struct.ARegion*, %struct.ARegion** %next50, align 8, !dbg !7777
  store %struct.ARegion* %82, %struct.ARegion** %ar, align 8, !dbg !7778
  br label %for.cond18, !dbg !7779, !llvm.loop !7780

for.end51:                                        ; preds = %for.cond18
  %83 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !7782
  %spacedata = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %83, i32 0, i32 19, !dbg !7783
  %first52 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %spacedata, i32 0, i32 0, !dbg !7784
  %84 = load i8*, i8** %first52, align 8, !dbg !7784
  %85 = bitcast i8* %84 to %struct.SpaceLink*, !dbg !7782
  store %struct.SpaceLink* %85, %struct.SpaceLink** %sl, align 8, !dbg !7785
  br label %while.cond53, !dbg !7786

while.cond53:                                     ; preds = %if.end209, %for.end51
  %86 = load %struct.SpaceLink*, %struct.SpaceLink** %sl, align 8, !dbg !7787
  %tobool54 = icmp ne %struct.SpaceLink* %86, null, !dbg !7786
  br i1 %tobool54, label %while.body55, label %while.end, !dbg !7786

while.body55:                                     ; preds = %while.cond53
  %87 = load %struct.SpaceLink*, %struct.SpaceLink** %sl, align 8, !dbg !7788
  %regionbase56 = getelementptr inbounds %struct.SpaceLink, %struct.SpaceLink* %87, i32 0, i32 2, !dbg !7791
  %first57 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %regionbase56, i32 0, i32 0, !dbg !7792
  %88 = load i8*, i8** %first57, align 8, !dbg !7792
  %89 = bitcast i8* %88 to %struct.ARegion*, !dbg !7788
  store %struct.ARegion* %89, %struct.ARegion** %ar, align 8, !dbg !7793
  br label %for.cond58, !dbg !7794

for.cond58:                                       ; preds = %for.inc62, %while.body55
  %90 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !7795
  %tobool59 = icmp ne %struct.ARegion* %90, null, !dbg !7797
  br i1 %tobool59, label %for.body60, label %for.end64, !dbg !7797

for.body60:                                       ; preds = %for.cond58
  %91 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !7798
  %92 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !7799
  %93 = load %struct.SpaceLink*, %struct.SpaceLink** %sl, align 8, !dbg !7800
  %spacetype61 = getelementptr inbounds %struct.SpaceLink, %struct.SpaceLink* %93, i32 0, i32 3, !dbg !7801
  %94 = load i32, i32* %spacetype61, align 8, !dbg !7801
  call void @write_region(%struct.WriteData* %91, %struct.ARegion* %92, i32 %94), !dbg !7802
  br label %for.inc62, !dbg !7802

for.inc62:                                        ; preds = %for.body60
  %95 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !7803
  %next63 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %95, i32 0, i32 0, !dbg !7804
  %96 = load %struct.ARegion*, %struct.ARegion** %next63, align 8, !dbg !7804
  store %struct.ARegion* %96, %struct.ARegion** %ar, align 8, !dbg !7805
  br label %for.cond58, !dbg !7806, !llvm.loop !7807

for.end64:                                        ; preds = %for.cond58
  %97 = load %struct.SpaceLink*, %struct.SpaceLink** %sl, align 8, !dbg !7809
  %spacetype65 = getelementptr inbounds %struct.SpaceLink, %struct.SpaceLink* %97, i32 0, i32 3, !dbg !7811
  %98 = load i32, i32* %spacetype65, align 8, !dbg !7811
  %cmp = icmp eq i32 %98, 1, !dbg !7812
  br i1 %cmp, label %if.then67, label %if.else, !dbg !7813

if.then67:                                        ; preds = %for.end64
  call void @llvm.dbg.declare(metadata %struct.View3D** %v3d, metadata !7814, metadata !DIExpression()), !dbg !7816
  %99 = load %struct.SpaceLink*, %struct.SpaceLink** %sl, align 8, !dbg !7817
  %100 = bitcast %struct.SpaceLink* %99 to %struct.View3D*, !dbg !7818
  store %struct.View3D* %100, %struct.View3D** %v3d, align 8, !dbg !7816
  call void @llvm.dbg.declare(metadata %struct.BGpic** %bgpic, metadata !7819, metadata !DIExpression()), !dbg !7822
  %101 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !7823
  %102 = load %struct.View3D*, %struct.View3D** %v3d, align 8, !dbg !7824
  %103 = bitcast %struct.View3D* %102 to i8*, !dbg !7824
  call void @writestruct(%struct.WriteData* %101, i32 1096040772, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.23, i64 0, i64 0), i32 1, i8* %103), !dbg !7825
  %104 = load %struct.View3D*, %struct.View3D** %v3d, align 8, !dbg !7826
  %bgpicbase = getelementptr inbounds %struct.View3D, %struct.View3D* %104, i32 0, i32 18, !dbg !7828
  %first68 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %bgpicbase, i32 0, i32 0, !dbg !7829
  %105 = load i8*, i8** %first68, align 8, !dbg !7829
  %106 = bitcast i8* %105 to %struct.BGpic*, !dbg !7826
  store %struct.BGpic* %106, %struct.BGpic** %bgpic, align 8, !dbg !7830
  br label %for.cond69, !dbg !7831

for.cond69:                                       ; preds = %for.inc72, %if.then67
  %107 = load %struct.BGpic*, %struct.BGpic** %bgpic, align 8, !dbg !7832
  %tobool70 = icmp ne %struct.BGpic* %107, null, !dbg !7834
  br i1 %tobool70, label %for.body71, label %for.end74, !dbg !7834

for.body71:                                       ; preds = %for.cond69
  %108 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !7835
  %109 = load %struct.BGpic*, %struct.BGpic** %bgpic, align 8, !dbg !7836
  %110 = bitcast %struct.BGpic* %109 to i8*, !dbg !7836
  call void @writestruct(%struct.WriteData* %108, i32 1096040772, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.24, i64 0, i64 0), i32 1, i8* %110), !dbg !7837
  br label %for.inc72, !dbg !7837

for.inc72:                                        ; preds = %for.body71
  %111 = load %struct.BGpic*, %struct.BGpic** %bgpic, align 8, !dbg !7838
  %next73 = getelementptr inbounds %struct.BGpic, %struct.BGpic* %111, i32 0, i32 0, !dbg !7839
  %112 = load %struct.BGpic*, %struct.BGpic** %next73, align 8, !dbg !7839
  store %struct.BGpic* %112, %struct.BGpic** %bgpic, align 8, !dbg !7840
  br label %for.cond69, !dbg !7841, !llvm.loop !7842

for.end74:                                        ; preds = %for.cond69
  %113 = load %struct.View3D*, %struct.View3D** %v3d, align 8, !dbg !7844
  %localvd = getelementptr inbounds %struct.View3D, %struct.View3D* %113, i32 0, i32 20, !dbg !7846
  %114 = load %struct.View3D*, %struct.View3D** %localvd, align 8, !dbg !7846
  %tobool75 = icmp ne %struct.View3D* %114, null, !dbg !7844
  br i1 %tobool75, label %if.then76, label %if.end78, !dbg !7847

if.then76:                                        ; preds = %for.end74
  %115 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !7848
  %116 = load %struct.View3D*, %struct.View3D** %v3d, align 8, !dbg !7849
  %localvd77 = getelementptr inbounds %struct.View3D, %struct.View3D* %116, i32 0, i32 20, !dbg !7850
  %117 = load %struct.View3D*, %struct.View3D** %localvd77, align 8, !dbg !7850
  %118 = bitcast %struct.View3D* %117 to i8*, !dbg !7849
  call void @writestruct(%struct.WriteData* %115, i32 1096040772, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.23, i64 0, i64 0), i32 1, i8* %118), !dbg !7851
  br label %if.end78, !dbg !7851

if.end78:                                         ; preds = %if.then76, %for.end74
  br label %if.end209, !dbg !7852

if.else:                                          ; preds = %for.end64
  %119 = load %struct.SpaceLink*, %struct.SpaceLink** %sl, align 8, !dbg !7853
  %spacetype79 = getelementptr inbounds %struct.SpaceLink, %struct.SpaceLink* %119, i32 0, i32 3, !dbg !7855
  %120 = load i32, i32* %spacetype79, align 8, !dbg !7855
  %cmp80 = icmp eq i32 %120, 2, !dbg !7856
  br i1 %cmp80, label %if.then82, label %if.else91, !dbg !7857

if.then82:                                        ; preds = %if.else
  call void @llvm.dbg.declare(metadata %struct.SpaceIpo** %sipo, metadata !7858, metadata !DIExpression()), !dbg !7860
  %121 = load %struct.SpaceLink*, %struct.SpaceLink** %sl, align 8, !dbg !7861
  %122 = bitcast %struct.SpaceLink* %121 to %struct.SpaceIpo*, !dbg !7862
  store %struct.SpaceIpo* %122, %struct.SpaceIpo** %sipo, align 8, !dbg !7860
  call void @llvm.dbg.declare(metadata %struct.ListBase* %tmpGhosts, metadata !7863, metadata !DIExpression()), !dbg !7864
  %123 = load %struct.SpaceIpo*, %struct.SpaceIpo** %sipo, align 8, !dbg !7865
  %ghostCurves = getelementptr inbounds %struct.SpaceIpo, %struct.SpaceIpo* %123, i32 0, i32 8, !dbg !7866
  %124 = bitcast %struct.ListBase* %tmpGhosts to i8*, !dbg !7866
  %125 = bitcast %struct.ListBase* %ghostCurves to i8*, !dbg !7866
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %124, i8* align 8 %125, i64 16, i1 false), !dbg !7866
  %126 = load %struct.SpaceIpo*, %struct.SpaceIpo** %sipo, align 8, !dbg !7867
  %ghostCurves83 = getelementptr inbounds %struct.SpaceIpo, %struct.SpaceIpo* %126, i32 0, i32 8, !dbg !7868
  %last = getelementptr inbounds %struct.ListBase, %struct.ListBase* %ghostCurves83, i32 0, i32 1, !dbg !7869
  store i8* null, i8** %last, align 8, !dbg !7870
  %127 = load %struct.SpaceIpo*, %struct.SpaceIpo** %sipo, align 8, !dbg !7871
  %ghostCurves84 = getelementptr inbounds %struct.SpaceIpo, %struct.SpaceIpo* %127, i32 0, i32 8, !dbg !7872
  %first85 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %ghostCurves84, i32 0, i32 0, !dbg !7873
  store i8* null, i8** %first85, align 8, !dbg !7874
  %128 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !7875
  %129 = load %struct.SpaceLink*, %struct.SpaceLink** %sl, align 8, !dbg !7876
  %130 = bitcast %struct.SpaceLink* %129 to i8*, !dbg !7876
  call void @writestruct(%struct.WriteData* %128, i32 1096040772, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.25, i64 0, i64 0), i32 1, i8* %130), !dbg !7877
  %131 = load %struct.SpaceIpo*, %struct.SpaceIpo** %sipo, align 8, !dbg !7878
  %ads = getelementptr inbounds %struct.SpaceIpo, %struct.SpaceIpo* %131, i32 0, i32 7, !dbg !7880
  %132 = load %struct.bDopeSheet*, %struct.bDopeSheet** %ads, align 8, !dbg !7880
  %tobool86 = icmp ne %struct.bDopeSheet* %132, null, !dbg !7878
  br i1 %tobool86, label %if.then87, label %if.end89, !dbg !7881

if.then87:                                        ; preds = %if.then82
  %133 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !7882
  %134 = load %struct.SpaceIpo*, %struct.SpaceIpo** %sipo, align 8, !dbg !7883
  %ads88 = getelementptr inbounds %struct.SpaceIpo, %struct.SpaceIpo* %134, i32 0, i32 7, !dbg !7884
  %135 = load %struct.bDopeSheet*, %struct.bDopeSheet** %ads88, align 8, !dbg !7884
  %136 = bitcast %struct.bDopeSheet* %135 to i8*, !dbg !7883
  call void @writestruct(%struct.WriteData* %133, i32 1096040772, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.26, i64 0, i64 0), i32 1, i8* %136), !dbg !7885
  br label %if.end89, !dbg !7885

if.end89:                                         ; preds = %if.then87, %if.then82
  %137 = load %struct.SpaceIpo*, %struct.SpaceIpo** %sipo, align 8, !dbg !7886
  %ghostCurves90 = getelementptr inbounds %struct.SpaceIpo, %struct.SpaceIpo* %137, i32 0, i32 8, !dbg !7887
  %138 = bitcast %struct.ListBase* %ghostCurves90 to i8*, !dbg !7888
  %139 = bitcast %struct.ListBase* %tmpGhosts to i8*, !dbg !7888
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %138, i8* align 8 %139, i64 16, i1 false), !dbg !7888
  br label %if.end208, !dbg !7889

if.else91:                                        ; preds = %if.else
  %140 = load %struct.SpaceLink*, %struct.SpaceLink** %sl, align 8, !dbg !7890
  %spacetype92 = getelementptr inbounds %struct.SpaceLink, %struct.SpaceLink* %140, i32 0, i32 3, !dbg !7892
  %141 = load i32, i32* %spacetype92, align 8, !dbg !7892
  %cmp93 = icmp eq i32 %141, 4, !dbg !7893
  br i1 %cmp93, label %if.then95, label %if.else96, !dbg !7894

if.then95:                                        ; preds = %if.else91
  %142 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !7895
  %143 = load %struct.SpaceLink*, %struct.SpaceLink** %sl, align 8, !dbg !7897
  %144 = bitcast %struct.SpaceLink* %143 to i8*, !dbg !7897
  call void @writestruct(%struct.WriteData* %142, i32 1096040772, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.27, i64 0, i64 0), i32 1, i8* %144), !dbg !7898
  br label %if.end207, !dbg !7899

if.else96:                                        ; preds = %if.else91
  %145 = load %struct.SpaceLink*, %struct.SpaceLink** %sl, align 8, !dbg !7900
  %spacetype97 = getelementptr inbounds %struct.SpaceLink, %struct.SpaceLink* %145, i32 0, i32 3, !dbg !7902
  %146 = load i32, i32* %spacetype97, align 8, !dbg !7902
  %cmp98 = icmp eq i32 %146, 5, !dbg !7903
  br i1 %cmp98, label %if.then100, label %if.else105, !dbg !7904

if.then100:                                       ; preds = %if.else96
  call void @llvm.dbg.declare(metadata %struct.SpaceFile** %sfile, metadata !7905, metadata !DIExpression()), !dbg !7907
  %147 = load %struct.SpaceLink*, %struct.SpaceLink** %sl, align 8, !dbg !7908
  %148 = bitcast %struct.SpaceLink* %147 to %struct.SpaceFile*, !dbg !7909
  store %struct.SpaceFile* %148, %struct.SpaceFile** %sfile, align 8, !dbg !7907
  %149 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !7910
  %150 = load %struct.SpaceLink*, %struct.SpaceLink** %sl, align 8, !dbg !7911
  %151 = bitcast %struct.SpaceLink* %150 to i8*, !dbg !7911
  call void @writestruct(%struct.WriteData* %149, i32 1096040772, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.28, i64 0, i64 0), i32 1, i8* %151), !dbg !7912
  %152 = load %struct.SpaceFile*, %struct.SpaceFile** %sfile, align 8, !dbg !7913
  %params = getelementptr inbounds %struct.SpaceFile, %struct.SpaceFile* %152, i32 0, i32 5, !dbg !7915
  %153 = load %struct.FileSelectParams*, %struct.FileSelectParams** %params, align 8, !dbg !7915
  %tobool101 = icmp ne %struct.FileSelectParams* %153, null, !dbg !7913
  br i1 %tobool101, label %if.then102, label %if.end104, !dbg !7916

if.then102:                                       ; preds = %if.then100
  %154 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !7917
  %155 = load %struct.SpaceFile*, %struct.SpaceFile** %sfile, align 8, !dbg !7918
  %params103 = getelementptr inbounds %struct.SpaceFile, %struct.SpaceFile* %155, i32 0, i32 5, !dbg !7919
  %156 = load %struct.FileSelectParams*, %struct.FileSelectParams** %params103, align 8, !dbg !7919
  %157 = bitcast %struct.FileSelectParams* %156 to i8*, !dbg !7918
  call void @writestruct(%struct.WriteData* %154, i32 1096040772, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.29, i64 0, i64 0), i32 1, i8* %157), !dbg !7920
  br label %if.end104, !dbg !7920

if.end104:                                        ; preds = %if.then102, %if.then100
  br label %if.end206, !dbg !7921

if.else105:                                       ; preds = %if.else96
  %158 = load %struct.SpaceLink*, %struct.SpaceLink** %sl, align 8, !dbg !7922
  %spacetype106 = getelementptr inbounds %struct.SpaceLink, %struct.SpaceLink* %158, i32 0, i32 3, !dbg !7924
  %159 = load i32, i32* %spacetype106, align 8, !dbg !7924
  %cmp107 = icmp eq i32 %159, 8, !dbg !7925
  br i1 %cmp107, label %if.then109, label %if.else110, !dbg !7926

if.then109:                                       ; preds = %if.else105
  %160 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !7927
  %161 = load %struct.SpaceLink*, %struct.SpaceLink** %sl, align 8, !dbg !7929
  %162 = bitcast %struct.SpaceLink* %161 to i8*, !dbg !7929
  call void @writestruct(%struct.WriteData* %160, i32 1096040772, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.30, i64 0, i64 0), i32 1, i8* %162), !dbg !7930
  br label %if.end205, !dbg !7931

if.else110:                                       ; preds = %if.else105
  %163 = load %struct.SpaceLink*, %struct.SpaceLink** %sl, align 8, !dbg !7932
  %spacetype111 = getelementptr inbounds %struct.SpaceLink, %struct.SpaceLink* %163, i32 0, i32 3, !dbg !7934
  %164 = load i32, i32* %spacetype111, align 8, !dbg !7934
  %cmp112 = icmp eq i32 %164, 3, !dbg !7935
  br i1 %cmp112, label %if.then114, label %if.else115, !dbg !7936

if.then114:                                       ; preds = %if.else110
  call void @llvm.dbg.declare(metadata %struct.SpaceOops** %so, metadata !7937, metadata !DIExpression()), !dbg !7939
  %165 = load %struct.SpaceLink*, %struct.SpaceLink** %sl, align 8, !dbg !7940
  %166 = bitcast %struct.SpaceLink* %165 to %struct.SpaceOops*, !dbg !7941
  store %struct.SpaceOops* %166, %struct.SpaceOops** %so, align 8, !dbg !7939
  %167 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !7942
  %168 = load %struct.SpaceOops*, %struct.SpaceOops** %so, align 8, !dbg !7943
  call void @write_soops(%struct.WriteData* %167, %struct.SpaceOops* %168, %struct.LinkNode** %tmp_mem_list), !dbg !7944
  br label %if.end204, !dbg !7945

if.else115:                                       ; preds = %if.else110
  %169 = load %struct.SpaceLink*, %struct.SpaceLink** %sl, align 8, !dbg !7946
  %spacetype116 = getelementptr inbounds %struct.SpaceLink, %struct.SpaceLink* %169, i32 0, i32 3, !dbg !7948
  %170 = load i32, i32* %spacetype116, align 8, !dbg !7948
  %cmp117 = icmp eq i32 %170, 6, !dbg !7949
  br i1 %cmp117, label %if.then119, label %if.else124, !dbg !7950

if.then119:                                       ; preds = %if.else115
  call void @llvm.dbg.declare(metadata %struct.SpaceImage** %sima, metadata !7951, metadata !DIExpression()), !dbg !7953
  %171 = load %struct.SpaceLink*, %struct.SpaceLink** %sl, align 8, !dbg !7954
  %172 = bitcast %struct.SpaceLink* %171 to %struct.SpaceImage*, !dbg !7955
  store %struct.SpaceImage* %172, %struct.SpaceImage** %sima, align 8, !dbg !7953
  %173 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !7956
  %174 = load %struct.SpaceLink*, %struct.SpaceLink** %sl, align 8, !dbg !7957
  %175 = bitcast %struct.SpaceLink* %174 to i8*, !dbg !7957
  call void @writestruct(%struct.WriteData* %173, i32 1096040772, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.31, i64 0, i64 0), i32 1, i8* %175), !dbg !7958
  %176 = load %struct.SpaceImage*, %struct.SpaceImage** %sima, align 8, !dbg !7959
  %cumap = getelementptr inbounds %struct.SpaceImage, %struct.SpaceImage* %176, i32 0, i32 7, !dbg !7961
  %177 = load %struct.CurveMapping*, %struct.CurveMapping** %cumap, align 8, !dbg !7961
  %tobool120 = icmp ne %struct.CurveMapping* %177, null, !dbg !7959
  br i1 %tobool120, label %if.then121, label %if.end123, !dbg !7962

if.then121:                                       ; preds = %if.then119
  %178 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !7963
  %179 = load %struct.SpaceImage*, %struct.SpaceImage** %sima, align 8, !dbg !7964
  %cumap122 = getelementptr inbounds %struct.SpaceImage, %struct.SpaceImage* %179, i32 0, i32 7, !dbg !7965
  %180 = load %struct.CurveMapping*, %struct.CurveMapping** %cumap122, align 8, !dbg !7965
  call void @write_curvemapping(%struct.WriteData* %178, %struct.CurveMapping* %180), !dbg !7966
  br label %if.end123, !dbg !7966

if.end123:                                        ; preds = %if.then121, %if.then119
  br label %if.end203, !dbg !7967

if.else124:                                       ; preds = %if.else115
  %181 = load %struct.SpaceLink*, %struct.SpaceLink** %sl, align 8, !dbg !7968
  %spacetype125 = getelementptr inbounds %struct.SpaceLink, %struct.SpaceLink* %181, i32 0, i32 3, !dbg !7970
  %182 = load i32, i32* %spacetype125, align 8, !dbg !7970
  %cmp126 = icmp eq i32 %182, 9, !dbg !7971
  br i1 %cmp126, label %if.then128, label %if.else129, !dbg !7972

if.then128:                                       ; preds = %if.else124
  %183 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !7973
  %184 = load %struct.SpaceLink*, %struct.SpaceLink** %sl, align 8, !dbg !7975
  %185 = bitcast %struct.SpaceLink* %184 to i8*, !dbg !7975
  call void @writestruct(%struct.WriteData* %183, i32 1096040772, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.32, i64 0, i64 0), i32 1, i8* %185), !dbg !7976
  br label %if.end202, !dbg !7977

if.else129:                                       ; preds = %if.else124
  %186 = load %struct.SpaceLink*, %struct.SpaceLink** %sl, align 8, !dbg !7978
  %spacetype130 = getelementptr inbounds %struct.SpaceLink, %struct.SpaceLink* %186, i32 0, i32 3, !dbg !7980
  %187 = load i32, i32* %spacetype130, align 8, !dbg !7980
  %cmp131 = icmp eq i32 %187, 14, !dbg !7981
  br i1 %cmp131, label %if.then133, label %if.else134, !dbg !7982

if.then133:                                       ; preds = %if.else129
  call void @llvm.dbg.declare(metadata %struct.SpaceScript** %scr, metadata !7983, metadata !DIExpression()), !dbg !7985
  %188 = load %struct.SpaceLink*, %struct.SpaceLink** %sl, align 8, !dbg !7986
  %189 = bitcast %struct.SpaceLink* %188 to %struct.SpaceScript*, !dbg !7987
  store %struct.SpaceScript* %189, %struct.SpaceScript** %scr, align 8, !dbg !7985
  %190 = load %struct.SpaceScript*, %struct.SpaceScript** %scr, align 8, !dbg !7988
  %but_refs = getelementptr inbounds %struct.SpaceScript, %struct.SpaceScript* %190, i32 0, i32 9, !dbg !7989
  store i8* null, i8** %but_refs, align 8, !dbg !7990
  %191 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !7991
  %192 = load %struct.SpaceLink*, %struct.SpaceLink** %sl, align 8, !dbg !7992
  %193 = bitcast %struct.SpaceLink* %192 to i8*, !dbg !7992
  call void @writestruct(%struct.WriteData* %191, i32 1096040772, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.33, i64 0, i64 0), i32 1, i8* %193), !dbg !7993
  br label %if.end201, !dbg !7994

if.else134:                                       ; preds = %if.else129
  %194 = load %struct.SpaceLink*, %struct.SpaceLink** %sl, align 8, !dbg !7995
  %spacetype135 = getelementptr inbounds %struct.SpaceLink, %struct.SpaceLink* %194, i32 0, i32 3, !dbg !7997
  %195 = load i32, i32* %spacetype135, align 8, !dbg !7997
  %cmp136 = icmp eq i32 %195, 12, !dbg !7998
  br i1 %cmp136, label %if.then138, label %if.else139, !dbg !7999

if.then138:                                       ; preds = %if.else134
  %196 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !8000
  %197 = load %struct.SpaceLink*, %struct.SpaceLink** %sl, align 8, !dbg !8002
  %198 = bitcast %struct.SpaceLink* %197 to i8*, !dbg !8002
  call void @writestruct(%struct.WriteData* %196, i32 1096040772, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.34, i64 0, i64 0), i32 1, i8* %198), !dbg !8003
  br label %if.end200, !dbg !8004

if.else139:                                       ; preds = %if.else134
  %199 = load %struct.SpaceLink*, %struct.SpaceLink** %sl, align 8, !dbg !8005
  %spacetype140 = getelementptr inbounds %struct.SpaceLink, %struct.SpaceLink* %199, i32 0, i32 3, !dbg !8007
  %200 = load i32, i32* %spacetype140, align 8, !dbg !8007
  %cmp141 = icmp eq i32 %200, 13, !dbg !8008
  br i1 %cmp141, label %if.then143, label %if.else149, !dbg !8009

if.then143:                                       ; preds = %if.else139
  call void @llvm.dbg.declare(metadata %struct.SpaceNla** %snla, metadata !8010, metadata !DIExpression()), !dbg !8012
  %201 = load %struct.SpaceLink*, %struct.SpaceLink** %sl, align 8, !dbg !8013
  %202 = bitcast %struct.SpaceLink* %201 to %struct.SpaceNla*, !dbg !8014
  store %struct.SpaceNla* %202, %struct.SpaceNla** %snla, align 8, !dbg !8012
  %203 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !8015
  %204 = load %struct.SpaceNla*, %struct.SpaceNla** %snla, align 8, !dbg !8016
  %205 = bitcast %struct.SpaceNla* %204 to i8*, !dbg !8016
  call void @writestruct(%struct.WriteData* %203, i32 1096040772, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.35, i64 0, i64 0), i32 1, i8* %205), !dbg !8017
  %206 = load %struct.SpaceNla*, %struct.SpaceNla** %snla, align 8, !dbg !8018
  %ads144 = getelementptr inbounds %struct.SpaceNla, %struct.SpaceNla* %206, i32 0, i32 9, !dbg !8020
  %207 = load %struct.bDopeSheet*, %struct.bDopeSheet** %ads144, align 8, !dbg !8020
  %tobool145 = icmp ne %struct.bDopeSheet* %207, null, !dbg !8018
  br i1 %tobool145, label %if.then146, label %if.end148, !dbg !8021

if.then146:                                       ; preds = %if.then143
  %208 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !8022
  %209 = load %struct.SpaceNla*, %struct.SpaceNla** %snla, align 8, !dbg !8023
  %ads147 = getelementptr inbounds %struct.SpaceNla, %struct.SpaceNla* %209, i32 0, i32 9, !dbg !8024
  %210 = load %struct.bDopeSheet*, %struct.bDopeSheet** %ads147, align 8, !dbg !8024
  %211 = bitcast %struct.bDopeSheet* %210 to i8*, !dbg !8023
  call void @writestruct(%struct.WriteData* %208, i32 1096040772, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.26, i64 0, i64 0), i32 1, i8* %211), !dbg !8025
  br label %if.end148, !dbg !8025

if.end148:                                        ; preds = %if.then146, %if.then143
  br label %if.end199, !dbg !8026

if.else149:                                       ; preds = %if.else139
  %212 = load %struct.SpaceLink*, %struct.SpaceLink** %sl, align 8, !dbg !8027
  %spacetype150 = getelementptr inbounds %struct.SpaceLink, %struct.SpaceLink* %212, i32 0, i32 3, !dbg !8029
  %213 = load i32, i32* %spacetype150, align 8, !dbg !8029
  %cmp151 = icmp eq i32 %213, 15, !dbg !8030
  br i1 %cmp151, label %if.then153, label %if.else154, !dbg !8031

if.then153:                                       ; preds = %if.else149
  %214 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !8032
  %215 = load %struct.SpaceLink*, %struct.SpaceLink** %sl, align 8, !dbg !8034
  %216 = bitcast %struct.SpaceLink* %215 to i8*, !dbg !8034
  call void @writestruct(%struct.WriteData* %214, i32 1096040772, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.36, i64 0, i64 0), i32 1, i8* %216), !dbg !8035
  br label %if.end198, !dbg !8036

if.else154:                                       ; preds = %if.else149
  %217 = load %struct.SpaceLink*, %struct.SpaceLink** %sl, align 8, !dbg !8037
  %spacetype155 = getelementptr inbounds %struct.SpaceLink, %struct.SpaceLink* %217, i32 0, i32 3, !dbg !8039
  %218 = load i32, i32* %spacetype155, align 8, !dbg !8039
  %cmp156 = icmp eq i32 %218, 16, !dbg !8040
  br i1 %cmp156, label %if.then158, label %if.else166, !dbg !8041

if.then158:                                       ; preds = %if.else154
  call void @llvm.dbg.declare(metadata %struct.SpaceNode** %snode, metadata !8042, metadata !DIExpression()), !dbg !8044
  %219 = load %struct.SpaceLink*, %struct.SpaceLink** %sl, align 8, !dbg !8045
  %220 = bitcast %struct.SpaceLink* %219 to %struct.SpaceNode*, !dbg !8046
  store %struct.SpaceNode* %220, %struct.SpaceNode** %snode, align 8, !dbg !8044
  call void @llvm.dbg.declare(metadata %struct.bNodeTreePath** %path, metadata !8047, metadata !DIExpression()), !dbg !8060
  %221 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !8061
  %222 = load %struct.SpaceNode*, %struct.SpaceNode** %snode, align 8, !dbg !8062
  %223 = bitcast %struct.SpaceNode* %222 to i8*, !dbg !8062
  call void @writestruct(%struct.WriteData* %221, i32 1096040772, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.37, i64 0, i64 0), i32 1, i8* %223), !dbg !8063
  %224 = load %struct.SpaceNode*, %struct.SpaceNode** %snode, align 8, !dbg !8064
  %treepath = getelementptr inbounds %struct.SpaceNode, %struct.SpaceNode* %224, i32 0, i32 17, !dbg !8066
  %first159 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %treepath, i32 0, i32 0, !dbg !8067
  %225 = load i8*, i8** %first159, align 8, !dbg !8067
  %226 = bitcast i8* %225 to %struct.bNodeTreePath*, !dbg !8064
  store %struct.bNodeTreePath* %226, %struct.bNodeTreePath** %path, align 8, !dbg !8068
  br label %for.cond160, !dbg !8069

for.cond160:                                      ; preds = %for.inc163, %if.then158
  %227 = load %struct.bNodeTreePath*, %struct.bNodeTreePath** %path, align 8, !dbg !8070
  %tobool161 = icmp ne %struct.bNodeTreePath* %227, null, !dbg !8072
  br i1 %tobool161, label %for.body162, label %for.end165, !dbg !8072

for.body162:                                      ; preds = %for.cond160
  %228 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !8073
  %229 = load %struct.bNodeTreePath*, %struct.bNodeTreePath** %path, align 8, !dbg !8074
  %230 = bitcast %struct.bNodeTreePath* %229 to i8*, !dbg !8074
  call void @writestruct(%struct.WriteData* %228, i32 1096040772, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.38, i64 0, i64 0), i32 1, i8* %230), !dbg !8075
  br label %for.inc163, !dbg !8075

for.inc163:                                       ; preds = %for.body162
  %231 = load %struct.bNodeTreePath*, %struct.bNodeTreePath** %path, align 8, !dbg !8076
  %next164 = getelementptr inbounds %struct.bNodeTreePath, %struct.bNodeTreePath* %231, i32 0, i32 0, !dbg !8077
  %232 = load %struct.bNodeTreePath*, %struct.bNodeTreePath** %next164, align 8, !dbg !8077
  store %struct.bNodeTreePath* %232, %struct.bNodeTreePath** %path, align 8, !dbg !8078
  br label %for.cond160, !dbg !8079, !llvm.loop !8080

for.end165:                                       ; preds = %for.cond160
  br label %if.end197, !dbg !8082

if.else166:                                       ; preds = %if.else154
  %233 = load %struct.SpaceLink*, %struct.SpaceLink** %sl, align 8, !dbg !8083
  %spacetype167 = getelementptr inbounds %struct.SpaceLink, %struct.SpaceLink* %233, i32 0, i32 3, !dbg !8085
  %234 = load i32, i32* %spacetype167, align 8, !dbg !8085
  %cmp168 = icmp eq i32 %234, 17, !dbg !8086
  br i1 %cmp168, label %if.then170, label %if.else171, !dbg !8087

if.then170:                                       ; preds = %if.else166
  %235 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !8088
  %236 = load %struct.SpaceLink*, %struct.SpaceLink** %sl, align 8, !dbg !8090
  %237 = bitcast %struct.SpaceLink* %236 to i8*, !dbg !8090
  call void @writestruct(%struct.WriteData* %235, i32 1096040772, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.39, i64 0, i64 0), i32 1, i8* %237), !dbg !8091
  br label %if.end196, !dbg !8092

if.else171:                                       ; preds = %if.else166
  %238 = load %struct.SpaceLink*, %struct.SpaceLink** %sl, align 8, !dbg !8093
  %spacetype172 = getelementptr inbounds %struct.SpaceLink, %struct.SpaceLink* %238, i32 0, i32 3, !dbg !8095
  %239 = load i32, i32* %spacetype172, align 8, !dbg !8095
  %cmp173 = icmp eq i32 %239, 18, !dbg !8096
  br i1 %cmp173, label %if.then175, label %if.else183, !dbg !8097

if.then175:                                       ; preds = %if.else171
  call void @llvm.dbg.declare(metadata %struct.SpaceConsole** %con, metadata !8098, metadata !DIExpression()), !dbg !8100
  %240 = load %struct.SpaceLink*, %struct.SpaceLink** %sl, align 8, !dbg !8101
  %241 = bitcast %struct.SpaceLink* %240 to %struct.SpaceConsole*, !dbg !8102
  store %struct.SpaceConsole* %241, %struct.SpaceConsole** %con, align 8, !dbg !8100
  call void @llvm.dbg.declare(metadata %struct.ConsoleLine** %cl, metadata !8103, metadata !DIExpression()), !dbg !8116
  %242 = load %struct.SpaceConsole*, %struct.SpaceConsole** %con, align 8, !dbg !8117
  %history = getelementptr inbounds %struct.SpaceConsole, %struct.SpaceConsole* %242, i32 0, i32 9, !dbg !8119
  %first176 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %history, i32 0, i32 0, !dbg !8120
  %243 = load i8*, i8** %first176, align 8, !dbg !8120
  %244 = bitcast i8* %243 to %struct.ConsoleLine*, !dbg !8117
  store %struct.ConsoleLine* %244, %struct.ConsoleLine** %cl, align 8, !dbg !8121
  br label %for.cond177, !dbg !8122

for.cond177:                                      ; preds = %for.inc180, %if.then175
  %245 = load %struct.ConsoleLine*, %struct.ConsoleLine** %cl, align 8, !dbg !8123
  %tobool178 = icmp ne %struct.ConsoleLine* %245, null, !dbg !8125
  br i1 %tobool178, label %for.body179, label %for.end182, !dbg !8125

for.body179:                                      ; preds = %for.cond177
  %246 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !8126
  %247 = load %struct.ConsoleLine*, %struct.ConsoleLine** %cl, align 8, !dbg !8128
  %248 = bitcast %struct.ConsoleLine* %247 to i8*, !dbg !8128
  call void @writestruct(%struct.WriteData* %246, i32 1096040772, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.40, i64 0, i64 0), i32 1, i8* %248), !dbg !8129
  %249 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !8130
  %250 = load %struct.ConsoleLine*, %struct.ConsoleLine** %cl, align 8, !dbg !8131
  %len = getelementptr inbounds %struct.ConsoleLine, %struct.ConsoleLine* %250, i32 0, i32 3, !dbg !8132
  %251 = load i32, i32* %len, align 4, !dbg !8132
  %add = add nsw i32 %251, 1, !dbg !8133
  %252 = load %struct.ConsoleLine*, %struct.ConsoleLine** %cl, align 8, !dbg !8134
  %line = getelementptr inbounds %struct.ConsoleLine, %struct.ConsoleLine* %252, i32 0, i32 4, !dbg !8135
  %253 = load i8*, i8** %line, align 8, !dbg !8135
  call void @writedata(%struct.WriteData* %249, i32 1096040772, i32 %add, i8* %253), !dbg !8136
  br label %for.inc180, !dbg !8137

for.inc180:                                       ; preds = %for.body179
  %254 = load %struct.ConsoleLine*, %struct.ConsoleLine** %cl, align 8, !dbg !8138
  %next181 = getelementptr inbounds %struct.ConsoleLine, %struct.ConsoleLine* %254, i32 0, i32 0, !dbg !8139
  %255 = load %struct.ConsoleLine*, %struct.ConsoleLine** %next181, align 8, !dbg !8139
  store %struct.ConsoleLine* %255, %struct.ConsoleLine** %cl, align 8, !dbg !8140
  br label %for.cond177, !dbg !8141, !llvm.loop !8142

for.end182:                                       ; preds = %for.cond177
  %256 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !8144
  %257 = load %struct.SpaceLink*, %struct.SpaceLink** %sl, align 8, !dbg !8145
  %258 = bitcast %struct.SpaceLink* %257 to i8*, !dbg !8145
  call void @writestruct(%struct.WriteData* %256, i32 1096040772, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.41, i64 0, i64 0), i32 1, i8* %258), !dbg !8146
  br label %if.end195, !dbg !8147

if.else183:                                       ; preds = %if.else171
  %259 = load %struct.SpaceLink*, %struct.SpaceLink** %sl, align 8, !dbg !8148
  %spacetype184 = getelementptr inbounds %struct.SpaceLink, %struct.SpaceLink* %259, i32 0, i32 3, !dbg !8150
  %260 = load i32, i32* %spacetype184, align 8, !dbg !8150
  %cmp185 = icmp eq i32 %260, 19, !dbg !8151
  br i1 %cmp185, label %if.then187, label %if.else188, !dbg !8152

if.then187:                                       ; preds = %if.else183
  %261 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !8153
  %262 = load %struct.SpaceLink*, %struct.SpaceLink** %sl, align 8, !dbg !8155
  %263 = bitcast %struct.SpaceLink* %262 to i8*, !dbg !8155
  call void @writestruct(%struct.WriteData* %261, i32 1096040772, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.42, i64 0, i64 0), i32 1, i8* %263), !dbg !8156
  br label %if.end194, !dbg !8157

if.else188:                                       ; preds = %if.else183
  %264 = load %struct.SpaceLink*, %struct.SpaceLink** %sl, align 8, !dbg !8158
  %spacetype189 = getelementptr inbounds %struct.SpaceLink, %struct.SpaceLink* %264, i32 0, i32 3, !dbg !8160
  %265 = load i32, i32* %spacetype189, align 8, !dbg !8160
  %cmp190 = icmp eq i32 %265, 20, !dbg !8161
  br i1 %cmp190, label %if.then192, label %if.end193, !dbg !8162

if.then192:                                       ; preds = %if.else188
  %266 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !8163
  %267 = load %struct.SpaceLink*, %struct.SpaceLink** %sl, align 8, !dbg !8165
  %268 = bitcast %struct.SpaceLink* %267 to i8*, !dbg !8165
  call void @writestruct(%struct.WriteData* %266, i32 1096040772, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.43, i64 0, i64 0), i32 1, i8* %268), !dbg !8166
  br label %if.end193, !dbg !8167

if.end193:                                        ; preds = %if.then192, %if.else188
  br label %if.end194

if.end194:                                        ; preds = %if.end193, %if.then187
  br label %if.end195

if.end195:                                        ; preds = %if.end194, %for.end182
  br label %if.end196

if.end196:                                        ; preds = %if.end195, %if.then170
  br label %if.end197

if.end197:                                        ; preds = %if.end196, %for.end165
  br label %if.end198

if.end198:                                        ; preds = %if.end197, %if.then153
  br label %if.end199

if.end199:                                        ; preds = %if.end198, %if.end148
  br label %if.end200

if.end200:                                        ; preds = %if.end199, %if.then138
  br label %if.end201

if.end201:                                        ; preds = %if.end200, %if.then133
  br label %if.end202

if.end202:                                        ; preds = %if.end201, %if.then128
  br label %if.end203

if.end203:                                        ; preds = %if.end202, %if.end123
  br label %if.end204

if.end204:                                        ; preds = %if.end203, %if.then114
  br label %if.end205

if.end205:                                        ; preds = %if.end204, %if.then109
  br label %if.end206

if.end206:                                        ; preds = %if.end205, %if.end104
  br label %if.end207

if.end207:                                        ; preds = %if.end206, %if.then95
  br label %if.end208

if.end208:                                        ; preds = %if.end207, %if.end89
  br label %if.end209

if.end209:                                        ; preds = %if.end208, %if.end78
  %269 = load %struct.SpaceLink*, %struct.SpaceLink** %sl, align 8, !dbg !8168
  %next210 = getelementptr inbounds %struct.SpaceLink, %struct.SpaceLink* %269, i32 0, i32 0, !dbg !8169
  %270 = load %struct.SpaceLink*, %struct.SpaceLink** %next210, align 8, !dbg !8169
  store %struct.SpaceLink* %270, %struct.SpaceLink** %sl, align 8, !dbg !8170
  br label %while.cond53, !dbg !7786, !llvm.loop !8171

while.end:                                        ; preds = %while.cond53
  br label %for.inc211, !dbg !8173

for.inc211:                                       ; preds = %while.end
  %271 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !8174
  %next212 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %271, i32 0, i32 0, !dbg !8175
  %272 = load %struct.ScrArea*, %struct.ScrArea** %next212, align 8, !dbg !8175
  store %struct.ScrArea* %272, %struct.ScrArea** %sa, align 8, !dbg !8176
  br label %for.cond14, !dbg !8177, !llvm.loop !8178

for.end213:                                       ; preds = %for.cond14
  %273 = load %struct.bScreen*, %struct.bScreen** %sc, align 8, !dbg !8180
  %id214 = getelementptr inbounds %struct.bScreen, %struct.bScreen* %273, i32 0, i32 0, !dbg !8181
  %next215 = getelementptr inbounds %struct.ID, %struct.ID* %id214, i32 0, i32 0, !dbg !8182
  %274 = load i8*, i8** %next215, align 8, !dbg !8182
  %275 = bitcast i8* %274 to %struct.bScreen*, !dbg !8180
  store %struct.bScreen* %275, %struct.bScreen** %sc, align 8, !dbg !8183
  br label %while.cond, !dbg !7529, !llvm.loop !8184

while.end216:                                     ; preds = %while.cond
  %276 = load %struct.LinkNode*, %struct.LinkNode** %tmp_mem_list, align 8, !dbg !8186
  call void @BLI_linklist_freeN(%struct.LinkNode* %276), !dbg !8187
  %277 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !8188
  call void @mywrite(%struct.WriteData* %277, i8* null, i32 0), !dbg !8189
  ret void, !dbg !8190
}

; Function Attrs: noinline nounwind uwtable
define internal void @write_movieclips(%struct.WriteData* %wd, %struct.ListBase* %idbase) #0 !dbg !8191 {
entry:
  %wd.addr = alloca %struct.WriteData*, align 8
  %idbase.addr = alloca %struct.ListBase*, align 8
  %clip = alloca %struct.MovieClip*, align 8
  %tracking = alloca %struct.MovieTracking*, align 8
  %object = alloca %struct.MovieTrackingObject*, align 8
  store %struct.WriteData* %wd, %struct.WriteData** %wd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WriteData** %wd.addr, metadata !8192, metadata !DIExpression()), !dbg !8193
  store %struct.ListBase* %idbase, %struct.ListBase** %idbase.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %idbase.addr, metadata !8194, metadata !DIExpression()), !dbg !8195
  call void @llvm.dbg.declare(metadata %struct.MovieClip** %clip, metadata !8196, metadata !DIExpression()), !dbg !8199
  %0 = load %struct.ListBase*, %struct.ListBase** %idbase.addr, align 8, !dbg !8200
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %0, i32 0, i32 0, !dbg !8201
  %1 = load i8*, i8** %first, align 8, !dbg !8201
  %2 = bitcast i8* %1 to %struct.MovieClip*, !dbg !8200
  store %struct.MovieClip* %2, %struct.MovieClip** %clip, align 8, !dbg !8202
  br label %while.cond, !dbg !8203

while.cond:                                       ; preds = %if.end19, %entry
  %3 = load %struct.MovieClip*, %struct.MovieClip** %clip, align 8, !dbg !8204
  %tobool = icmp ne %struct.MovieClip* %3, null, !dbg !8203
  br i1 %tobool, label %while.body, label %while.end22, !dbg !8203

while.body:                                       ; preds = %while.cond
  %4 = load %struct.MovieClip*, %struct.MovieClip** %clip, align 8, !dbg !8205
  %id = getelementptr inbounds %struct.MovieClip, %struct.MovieClip* %4, i32 0, i32 0, !dbg !8208
  %us = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 6, !dbg !8209
  %5 = load i32, i32* %us, align 4, !dbg !8209
  %cmp = icmp sgt i32 %5, 0, !dbg !8210
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !8211

lor.lhs.false:                                    ; preds = %while.body
  %6 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !8212
  %current = getelementptr inbounds %struct.WriteData, %struct.WriteData* %6, i32 0, i32 4, !dbg !8213
  %7 = load %struct.MemFile*, %struct.MemFile** %current, align 8, !dbg !8213
  %tobool1 = icmp ne %struct.MemFile* %7, null, !dbg !8212
  br i1 %tobool1, label %if.then, label %if.end19, !dbg !8214

if.then:                                          ; preds = %lor.lhs.false, %while.body
  call void @llvm.dbg.declare(metadata %struct.MovieTracking** %tracking, metadata !8215, metadata !DIExpression()), !dbg !8219
  %8 = load %struct.MovieClip*, %struct.MovieClip** %clip, align 8, !dbg !8220
  %tracking2 = getelementptr inbounds %struct.MovieClip, %struct.MovieClip* %8, i32 0, i32 11, !dbg !8221
  store %struct.MovieTracking* %tracking2, %struct.MovieTracking** %tracking, align 8, !dbg !8219
  call void @llvm.dbg.declare(metadata %struct.MovieTrackingObject** %object, metadata !8222, metadata !DIExpression()), !dbg !8238
  %9 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !8239
  %10 = load %struct.MovieClip*, %struct.MovieClip** %clip, align 8, !dbg !8240
  %11 = bitcast %struct.MovieClip* %10 to i8*, !dbg !8240
  call void @writestruct(%struct.WriteData* %9, i32 17229, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.54, i64 0, i64 0), i32 1, i8* %11), !dbg !8241
  %12 = load %struct.MovieClip*, %struct.MovieClip** %clip, align 8, !dbg !8242
  %id3 = getelementptr inbounds %struct.MovieClip, %struct.MovieClip* %12, i32 0, i32 0, !dbg !8244
  %properties = getelementptr inbounds %struct.ID, %struct.ID* %id3, i32 0, i32 9, !dbg !8245
  %13 = load %struct.IDProperty*, %struct.IDProperty** %properties, align 8, !dbg !8245
  %tobool4 = icmp ne %struct.IDProperty* %13, null, !dbg !8242
  br i1 %tobool4, label %if.then5, label %if.end, !dbg !8246

if.then5:                                         ; preds = %if.then
  %14 = load %struct.MovieClip*, %struct.MovieClip** %clip, align 8, !dbg !8247
  %id6 = getelementptr inbounds %struct.MovieClip, %struct.MovieClip* %14, i32 0, i32 0, !dbg !8248
  %properties7 = getelementptr inbounds %struct.ID, %struct.ID* %id6, i32 0, i32 9, !dbg !8249
  %15 = load %struct.IDProperty*, %struct.IDProperty** %properties7, align 8, !dbg !8249
  %16 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !8250
  %17 = bitcast %struct.WriteData* %16 to i8*, !dbg !8250
  call void @IDP_WriteProperty(%struct.IDProperty* %15, i8* %17), !dbg !8251
  br label %if.end, !dbg !8251

if.end:                                           ; preds = %if.then5, %if.then
  %18 = load %struct.MovieClip*, %struct.MovieClip** %clip, align 8, !dbg !8252
  %adt = getelementptr inbounds %struct.MovieClip, %struct.MovieClip* %18, i32 0, i32 1, !dbg !8254
  %19 = load %struct.AnimData*, %struct.AnimData** %adt, align 8, !dbg !8254
  %tobool8 = icmp ne %struct.AnimData* %19, null, !dbg !8252
  br i1 %tobool8, label %if.then9, label %if.end11, !dbg !8255

if.then9:                                         ; preds = %if.end
  %20 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !8256
  %21 = load %struct.MovieClip*, %struct.MovieClip** %clip, align 8, !dbg !8257
  %adt10 = getelementptr inbounds %struct.MovieClip, %struct.MovieClip* %21, i32 0, i32 1, !dbg !8258
  %22 = load %struct.AnimData*, %struct.AnimData** %adt10, align 8, !dbg !8258
  call void @write_animdata(%struct.WriteData* %20, %struct.AnimData* %22), !dbg !8259
  br label %if.end11, !dbg !8259

if.end11:                                         ; preds = %if.then9, %if.end
  %23 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !8260
  %24 = load %struct.MovieTracking*, %struct.MovieTracking** %tracking, align 8, !dbg !8261
  %tracks = getelementptr inbounds %struct.MovieTracking, %struct.MovieTracking* %24, i32 0, i32 2, !dbg !8262
  call void @write_movieTracks(%struct.WriteData* %23, %struct.ListBase* %tracks), !dbg !8263
  %25 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !8264
  %26 = load %struct.MovieTracking*, %struct.MovieTracking** %tracking, align 8, !dbg !8265
  %plane_tracks = getelementptr inbounds %struct.MovieTracking, %struct.MovieTracking* %26, i32 0, i32 3, !dbg !8266
  call void @write_moviePlaneTracks(%struct.WriteData* %25, %struct.ListBase* %plane_tracks), !dbg !8267
  %27 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !8268
  %28 = load %struct.MovieTracking*, %struct.MovieTracking** %tracking, align 8, !dbg !8269
  %reconstruction = getelementptr inbounds %struct.MovieTracking, %struct.MovieTracking* %28, i32 0, i32 4, !dbg !8270
  call void @write_movieReconstruction(%struct.WriteData* %27, %struct.MovieTrackingReconstruction* %reconstruction), !dbg !8271
  %29 = load %struct.MovieTracking*, %struct.MovieTracking** %tracking, align 8, !dbg !8272
  %objects = getelementptr inbounds %struct.MovieTracking, %struct.MovieTracking* %29, i32 0, i32 8, !dbg !8273
  %first12 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %objects, i32 0, i32 0, !dbg !8274
  %30 = load i8*, i8** %first12, align 8, !dbg !8274
  %31 = bitcast i8* %30 to %struct.MovieTrackingObject*, !dbg !8272
  store %struct.MovieTrackingObject* %31, %struct.MovieTrackingObject** %object, align 8, !dbg !8275
  br label %while.cond13, !dbg !8276

while.cond13:                                     ; preds = %while.body15, %if.end11
  %32 = load %struct.MovieTrackingObject*, %struct.MovieTrackingObject** %object, align 8, !dbg !8277
  %tobool14 = icmp ne %struct.MovieTrackingObject* %32, null, !dbg !8276
  br i1 %tobool14, label %while.body15, label %while.end, !dbg !8276

while.body15:                                     ; preds = %while.cond13
  %33 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !8278
  %34 = load %struct.MovieTrackingObject*, %struct.MovieTrackingObject** %object, align 8, !dbg !8280
  %35 = bitcast %struct.MovieTrackingObject* %34 to i8*, !dbg !8280
  call void @writestruct(%struct.WriteData* %33, i32 1096040772, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.55, i64 0, i64 0), i32 1, i8* %35), !dbg !8281
  %36 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !8282
  %37 = load %struct.MovieTrackingObject*, %struct.MovieTrackingObject** %object, align 8, !dbg !8283
  %tracks16 = getelementptr inbounds %struct.MovieTrackingObject, %struct.MovieTrackingObject* %37, i32 0, i32 5, !dbg !8284
  call void @write_movieTracks(%struct.WriteData* %36, %struct.ListBase* %tracks16), !dbg !8285
  %38 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !8286
  %39 = load %struct.MovieTrackingObject*, %struct.MovieTrackingObject** %object, align 8, !dbg !8287
  %plane_tracks17 = getelementptr inbounds %struct.MovieTrackingObject, %struct.MovieTrackingObject* %39, i32 0, i32 6, !dbg !8288
  call void @write_moviePlaneTracks(%struct.WriteData* %38, %struct.ListBase* %plane_tracks17), !dbg !8289
  %40 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !8290
  %41 = load %struct.MovieTrackingObject*, %struct.MovieTrackingObject** %object, align 8, !dbg !8291
  %reconstruction18 = getelementptr inbounds %struct.MovieTrackingObject, %struct.MovieTrackingObject* %41, i32 0, i32 7, !dbg !8292
  call void @write_movieReconstruction(%struct.WriteData* %40, %struct.MovieTrackingReconstruction* %reconstruction18), !dbg !8293
  %42 = load %struct.MovieTrackingObject*, %struct.MovieTrackingObject** %object, align 8, !dbg !8294
  %next = getelementptr inbounds %struct.MovieTrackingObject, %struct.MovieTrackingObject* %42, i32 0, i32 0, !dbg !8295
  %43 = load %struct.MovieTrackingObject*, %struct.MovieTrackingObject** %next, align 8, !dbg !8295
  store %struct.MovieTrackingObject* %43, %struct.MovieTrackingObject** %object, align 8, !dbg !8296
  br label %while.cond13, !dbg !8276, !llvm.loop !8297

while.end:                                        ; preds = %while.cond13
  br label %if.end19, !dbg !8299

if.end19:                                         ; preds = %while.end, %lor.lhs.false
  %44 = load %struct.MovieClip*, %struct.MovieClip** %clip, align 8, !dbg !8300
  %id20 = getelementptr inbounds %struct.MovieClip, %struct.MovieClip* %44, i32 0, i32 0, !dbg !8301
  %next21 = getelementptr inbounds %struct.ID, %struct.ID* %id20, i32 0, i32 0, !dbg !8302
  %45 = load i8*, i8** %next21, align 8, !dbg !8302
  %46 = bitcast i8* %45 to %struct.MovieClip*, !dbg !8300
  store %struct.MovieClip* %46, %struct.MovieClip** %clip, align 8, !dbg !8303
  br label %while.cond, !dbg !8203, !llvm.loop !8304

while.end22:                                      ; preds = %while.cond
  %47 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !8306
  call void @mywrite(%struct.WriteData* %47, i8* null, i32 0), !dbg !8307
  ret void, !dbg !8308
}

; Function Attrs: noinline nounwind uwtable
define internal void @write_masks(%struct.WriteData* %wd, %struct.ListBase* %idbase) #0 !dbg !8309 {
entry:
  %wd.addr = alloca %struct.WriteData*, align 8
  %idbase.addr = alloca %struct.ListBase*, align 8
  %mask = alloca %struct.Mask*, align 8
  %masklay = alloca %struct.MaskLayer*, align 8
  %spline = alloca %struct.MaskSpline*, align 8
  %masklay_shape = alloca %struct.MaskLayerShape*, align 8
  %i = alloca i32, align 4
  %points_deform = alloca i8*, align 8
  %point = alloca %struct.MaskSplinePoint*, align 8
  store %struct.WriteData* %wd, %struct.WriteData** %wd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WriteData** %wd.addr, metadata !8310, metadata !DIExpression()), !dbg !8311
  store %struct.ListBase* %idbase, %struct.ListBase** %idbase.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %idbase.addr, metadata !8312, metadata !DIExpression()), !dbg !8313
  call void @llvm.dbg.declare(metadata %struct.Mask** %mask, metadata !8314, metadata !DIExpression()), !dbg !8317
  %0 = load %struct.ListBase*, %struct.ListBase** %idbase.addr, align 8, !dbg !8318
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %0, i32 0, i32 0, !dbg !8319
  %1 = load i8*, i8** %first, align 8, !dbg !8319
  %2 = bitcast i8* %1 to %struct.Mask*, !dbg !8318
  store %struct.Mask* %2, %struct.Mask** %mask, align 8, !dbg !8320
  br label %while.cond, !dbg !8321

while.cond:                                       ; preds = %if.end37, %entry
  %3 = load %struct.Mask*, %struct.Mask** %mask, align 8, !dbg !8322
  %tobool = icmp ne %struct.Mask* %3, null, !dbg !8321
  br i1 %tobool, label %while.body, label %while.end, !dbg !8321

while.body:                                       ; preds = %while.cond
  %4 = load %struct.Mask*, %struct.Mask** %mask, align 8, !dbg !8323
  %id = getelementptr inbounds %struct.Mask, %struct.Mask* %4, i32 0, i32 0, !dbg !8326
  %us = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 6, !dbg !8327
  %5 = load i32, i32* %us, align 4, !dbg !8327
  %cmp = icmp sgt i32 %5, 0, !dbg !8328
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !8329

lor.lhs.false:                                    ; preds = %while.body
  %6 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !8330
  %current = getelementptr inbounds %struct.WriteData, %struct.WriteData* %6, i32 0, i32 4, !dbg !8331
  %7 = load %struct.MemFile*, %struct.MemFile** %current, align 8, !dbg !8331
  %tobool1 = icmp ne %struct.MemFile* %7, null, !dbg !8330
  br i1 %tobool1, label %if.then, label %if.end37, !dbg !8332

if.then:                                          ; preds = %lor.lhs.false, %while.body
  call void @llvm.dbg.declare(metadata %struct.MaskLayer** %masklay, metadata !8333, metadata !DIExpression()), !dbg !8393
  %8 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !8394
  %9 = load %struct.Mask*, %struct.Mask** %mask, align 8, !dbg !8395
  %10 = bitcast %struct.Mask* %9 to i8*, !dbg !8395
  call void @writestruct(%struct.WriteData* %8, i32 21325, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.72, i64 0, i64 0), i32 1, i8* %10), !dbg !8396
  %11 = load %struct.Mask*, %struct.Mask** %mask, align 8, !dbg !8397
  %adt = getelementptr inbounds %struct.Mask, %struct.Mask* %11, i32 0, i32 1, !dbg !8399
  %12 = load %struct.AnimData*, %struct.AnimData** %adt, align 8, !dbg !8399
  %tobool2 = icmp ne %struct.AnimData* %12, null, !dbg !8397
  br i1 %tobool2, label %if.then3, label %if.end, !dbg !8400

if.then3:                                         ; preds = %if.then
  %13 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !8401
  %14 = load %struct.Mask*, %struct.Mask** %mask, align 8, !dbg !8402
  %adt4 = getelementptr inbounds %struct.Mask, %struct.Mask* %14, i32 0, i32 1, !dbg !8403
  %15 = load %struct.AnimData*, %struct.AnimData** %adt4, align 8, !dbg !8403
  call void @write_animdata(%struct.WriteData* %13, %struct.AnimData* %15), !dbg !8404
  br label %if.end, !dbg !8404

if.end:                                           ; preds = %if.then3, %if.then
  %16 = load %struct.Mask*, %struct.Mask** %mask, align 8, !dbg !8405
  %masklayers = getelementptr inbounds %struct.Mask, %struct.Mask* %16, i32 0, i32 2, !dbg !8407
  %first5 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %masklayers, i32 0, i32 0, !dbg !8408
  %17 = load i8*, i8** %first5, align 8, !dbg !8408
  %18 = bitcast i8* %17 to %struct.MaskLayer*, !dbg !8405
  store %struct.MaskLayer* %18, %struct.MaskLayer** %masklay, align 8, !dbg !8409
  br label %for.cond, !dbg !8410

for.cond:                                         ; preds = %for.inc34, %if.end
  %19 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay, align 8, !dbg !8411
  %tobool6 = icmp ne %struct.MaskLayer* %19, null, !dbg !8413
  br i1 %tobool6, label %for.body, label %for.end36, !dbg !8413

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.MaskSpline** %spline, metadata !8414, metadata !DIExpression()), !dbg !8418
  call void @llvm.dbg.declare(metadata %struct.MaskLayerShape** %masklay_shape, metadata !8419, metadata !DIExpression()), !dbg !8432
  %20 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !8433
  %21 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay, align 8, !dbg !8434
  %22 = bitcast %struct.MaskLayer* %21 to i8*, !dbg !8434
  call void @writestruct(%struct.WriteData* %20, i32 1096040772, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.73, i64 0, i64 0), i32 1, i8* %22), !dbg !8435
  %23 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay, align 8, !dbg !8436
  %splines = getelementptr inbounds %struct.MaskLayer, %struct.MaskLayer* %23, i32 0, i32 3, !dbg !8438
  %first7 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %splines, i32 0, i32 0, !dbg !8439
  %24 = load i8*, i8** %first7, align 8, !dbg !8439
  %25 = bitcast i8* %24 to %struct.MaskSpline*, !dbg !8436
  store %struct.MaskSpline* %25, %struct.MaskSpline** %spline, align 8, !dbg !8440
  br label %for.cond8, !dbg !8441

for.cond8:                                        ; preds = %for.inc23, %for.body
  %26 = load %struct.MaskSpline*, %struct.MaskSpline** %spline, align 8, !dbg !8442
  %tobool9 = icmp ne %struct.MaskSpline* %26, null, !dbg !8444
  br i1 %tobool9, label %for.body10, label %for.end24, !dbg !8444

for.body10:                                       ; preds = %for.cond8
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8445, metadata !DIExpression()), !dbg !8447
  call void @llvm.dbg.declare(metadata i8** %points_deform, metadata !8448, metadata !DIExpression()), !dbg !8449
  %27 = load %struct.MaskSpline*, %struct.MaskSpline** %spline, align 8, !dbg !8450
  %points_deform11 = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %27, i32 0, i32 8, !dbg !8451
  %28 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %points_deform11, align 8, !dbg !8451
  %29 = bitcast %struct.MaskSplinePoint* %28 to i8*, !dbg !8450
  store i8* %29, i8** %points_deform, align 8, !dbg !8449
  %30 = load %struct.MaskSpline*, %struct.MaskSpline** %spline, align 8, !dbg !8452
  %points_deform12 = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %30, i32 0, i32 8, !dbg !8453
  store %struct.MaskSplinePoint* null, %struct.MaskSplinePoint** %points_deform12, align 8, !dbg !8454
  %31 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !8455
  %32 = load %struct.MaskSpline*, %struct.MaskSpline** %spline, align 8, !dbg !8456
  %33 = bitcast %struct.MaskSpline* %32 to i8*, !dbg !8456
  call void @writestruct(%struct.WriteData* %31, i32 1096040772, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.74, i64 0, i64 0), i32 1, i8* %33), !dbg !8457
  %34 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !8458
  %35 = load %struct.MaskSpline*, %struct.MaskSpline** %spline, align 8, !dbg !8459
  %tot_point = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %35, i32 0, i32 5, !dbg !8460
  %36 = load i32, i32* %tot_point, align 4, !dbg !8460
  %37 = load %struct.MaskSpline*, %struct.MaskSpline** %spline, align 8, !dbg !8461
  %points = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %37, i32 0, i32 6, !dbg !8462
  %38 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %points, align 8, !dbg !8462
  %39 = bitcast %struct.MaskSplinePoint* %38 to i8*, !dbg !8461
  call void @writestruct(%struct.WriteData* %34, i32 1096040772, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.75, i64 0, i64 0), i32 %36, i8* %39), !dbg !8463
  %40 = load i8*, i8** %points_deform, align 8, !dbg !8464
  %41 = bitcast i8* %40 to %struct.MaskSplinePoint*, !dbg !8464
  %42 = load %struct.MaskSpline*, %struct.MaskSpline** %spline, align 8, !dbg !8465
  %points_deform13 = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %42, i32 0, i32 8, !dbg !8466
  store %struct.MaskSplinePoint* %41, %struct.MaskSplinePoint** %points_deform13, align 8, !dbg !8467
  store i32 0, i32* %i, align 4, !dbg !8468
  br label %for.cond14, !dbg !8470

for.cond14:                                       ; preds = %for.inc, %for.body10
  %43 = load i32, i32* %i, align 4, !dbg !8471
  %44 = load %struct.MaskSpline*, %struct.MaskSpline** %spline, align 8, !dbg !8473
  %tot_point15 = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %44, i32 0, i32 5, !dbg !8474
  %45 = load i32, i32* %tot_point15, align 4, !dbg !8474
  %cmp16 = icmp slt i32 %43, %45, !dbg !8475
  br i1 %cmp16, label %for.body17, label %for.end, !dbg !8476

for.body17:                                       ; preds = %for.cond14
  call void @llvm.dbg.declare(metadata %struct.MaskSplinePoint** %point, metadata !8477, metadata !DIExpression()), !dbg !8479
  %46 = load %struct.MaskSpline*, %struct.MaskSpline** %spline, align 8, !dbg !8480
  %points18 = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %46, i32 0, i32 6, !dbg !8481
  %47 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %points18, align 8, !dbg !8481
  %48 = load i32, i32* %i, align 4, !dbg !8482
  %idxprom = sext i32 %48 to i64, !dbg !8480
  %arrayidx = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %47, i64 %idxprom, !dbg !8480
  store %struct.MaskSplinePoint* %arrayidx, %struct.MaskSplinePoint** %point, align 8, !dbg !8479
  %49 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point, align 8, !dbg !8483
  %tot_uw = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %49, i32 0, i32 2, !dbg !8485
  %50 = load i32, i32* %tot_uw, align 4, !dbg !8485
  %tobool19 = icmp ne i32 %50, 0, !dbg !8483
  br i1 %tobool19, label %if.then20, label %if.end22, !dbg !8486

if.then20:                                        ; preds = %for.body17
  %51 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !8487
  %52 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point, align 8, !dbg !8488
  %tot_uw21 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %52, i32 0, i32 2, !dbg !8489
  %53 = load i32, i32* %tot_uw21, align 4, !dbg !8489
  %54 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point, align 8, !dbg !8490
  %uw = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %54, i32 0, i32 3, !dbg !8491
  %55 = load %struct.MaskSplinePointUW*, %struct.MaskSplinePointUW** %uw, align 8, !dbg !8491
  %56 = bitcast %struct.MaskSplinePointUW* %55 to i8*, !dbg !8490
  call void @writestruct(%struct.WriteData* %51, i32 1096040772, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.76, i64 0, i64 0), i32 %53, i8* %56), !dbg !8492
  br label %if.end22, !dbg !8492

if.end22:                                         ; preds = %if.then20, %for.body17
  br label %for.inc, !dbg !8493

for.inc:                                          ; preds = %if.end22
  %57 = load i32, i32* %i, align 4, !dbg !8494
  %inc = add nsw i32 %57, 1, !dbg !8494
  store i32 %inc, i32* %i, align 4, !dbg !8494
  br label %for.cond14, !dbg !8495, !llvm.loop !8496

for.end:                                          ; preds = %for.cond14
  br label %for.inc23, !dbg !8498

for.inc23:                                        ; preds = %for.end
  %58 = load %struct.MaskSpline*, %struct.MaskSpline** %spline, align 8, !dbg !8499
  %next = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %58, i32 0, i32 0, !dbg !8500
  %59 = load %struct.MaskSpline*, %struct.MaskSpline** %next, align 8, !dbg !8500
  store %struct.MaskSpline* %59, %struct.MaskSpline** %spline, align 8, !dbg !8501
  br label %for.cond8, !dbg !8502, !llvm.loop !8503

for.end24:                                        ; preds = %for.cond8
  %60 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay, align 8, !dbg !8505
  %splines_shapes = getelementptr inbounds %struct.MaskLayer, %struct.MaskLayer* %60, i32 0, i32 4, !dbg !8507
  %first25 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %splines_shapes, i32 0, i32 0, !dbg !8508
  %61 = load i8*, i8** %first25, align 8, !dbg !8508
  %62 = bitcast i8* %61 to %struct.MaskLayerShape*, !dbg !8505
  store %struct.MaskLayerShape* %62, %struct.MaskLayerShape** %masklay_shape, align 8, !dbg !8509
  br label %for.cond26, !dbg !8510

for.cond26:                                       ; preds = %for.inc31, %for.end24
  %63 = load %struct.MaskLayerShape*, %struct.MaskLayerShape** %masklay_shape, align 8, !dbg !8511
  %tobool27 = icmp ne %struct.MaskLayerShape* %63, null, !dbg !8513
  br i1 %tobool27, label %for.body28, label %for.end33, !dbg !8513

for.body28:                                       ; preds = %for.cond26
  %64 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !8514
  %65 = load %struct.MaskLayerShape*, %struct.MaskLayerShape** %masklay_shape, align 8, !dbg !8516
  %66 = bitcast %struct.MaskLayerShape* %65 to i8*, !dbg !8516
  call void @writestruct(%struct.WriteData* %64, i32 1096040772, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.77, i64 0, i64 0), i32 1, i8* %66), !dbg !8517
  %67 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !8518
  %68 = load %struct.MaskLayerShape*, %struct.MaskLayerShape** %masklay_shape, align 8, !dbg !8519
  %tot_vert = getelementptr inbounds %struct.MaskLayerShape, %struct.MaskLayerShape* %68, i32 0, i32 3, !dbg !8520
  %69 = load i32, i32* %tot_vert, align 8, !dbg !8520
  %conv = sext i32 %69 to i64, !dbg !8519
  %mul = mul i64 %conv, 4, !dbg !8521
  %mul29 = mul i64 %mul, 8, !dbg !8522
  %conv30 = trunc i64 %mul29 to i32, !dbg !8519
  %70 = load %struct.MaskLayerShape*, %struct.MaskLayerShape** %masklay_shape, align 8, !dbg !8523
  %data = getelementptr inbounds %struct.MaskLayerShape, %struct.MaskLayerShape* %70, i32 0, i32 2, !dbg !8524
  %71 = load float*, float** %data, align 8, !dbg !8524
  %72 = bitcast float* %71 to i8*, !dbg !8523
  call void @writedata(%struct.WriteData* %67, i32 1096040772, i32 %conv30, i8* %72), !dbg !8525
  br label %for.inc31, !dbg !8526

for.inc31:                                        ; preds = %for.body28
  %73 = load %struct.MaskLayerShape*, %struct.MaskLayerShape** %masklay_shape, align 8, !dbg !8527
  %next32 = getelementptr inbounds %struct.MaskLayerShape, %struct.MaskLayerShape* %73, i32 0, i32 0, !dbg !8528
  %74 = load %struct.MaskLayerShape*, %struct.MaskLayerShape** %next32, align 8, !dbg !8528
  store %struct.MaskLayerShape* %74, %struct.MaskLayerShape** %masklay_shape, align 8, !dbg !8529
  br label %for.cond26, !dbg !8530, !llvm.loop !8531

for.end33:                                        ; preds = %for.cond26
  br label %for.inc34, !dbg !8533

for.inc34:                                        ; preds = %for.end33
  %75 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay, align 8, !dbg !8534
  %next35 = getelementptr inbounds %struct.MaskLayer, %struct.MaskLayer* %75, i32 0, i32 0, !dbg !8535
  %76 = load %struct.MaskLayer*, %struct.MaskLayer** %next35, align 8, !dbg !8535
  store %struct.MaskLayer* %76, %struct.MaskLayer** %masklay, align 8, !dbg !8536
  br label %for.cond, !dbg !8537, !llvm.loop !8538

for.end36:                                        ; preds = %for.cond
  br label %if.end37, !dbg !8540

if.end37:                                         ; preds = %for.end36, %lor.lhs.false
  %77 = load %struct.Mask*, %struct.Mask** %mask, align 8, !dbg !8541
  %id38 = getelementptr inbounds %struct.Mask, %struct.Mask* %77, i32 0, i32 0, !dbg !8542
  %next39 = getelementptr inbounds %struct.ID, %struct.ID* %id38, i32 0, i32 0, !dbg !8543
  %78 = load i8*, i8** %next39, align 8, !dbg !8543
  %79 = bitcast i8* %78 to %struct.Mask*, !dbg !8541
  store %struct.Mask* %79, %struct.Mask** %mask, align 8, !dbg !8544
  br label %while.cond, !dbg !8321, !llvm.loop !8545

while.end:                                        ; preds = %while.cond
  %80 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !8547
  call void @mywrite(%struct.WriteData* %80, i8* null, i32 0), !dbg !8548
  ret void, !dbg !8549
}

; Function Attrs: noinline nounwind uwtable
define internal void @write_scenes(%struct.WriteData* %wd, %struct.ListBase* %scebase) #0 !dbg !8550 {
entry:
  %wd.addr = alloca %struct.WriteData*, align 8
  %scebase.addr = alloca %struct.ListBase*, align 8
  %sce = alloca %struct.Scene*, align 8
  %base = alloca %struct.Base*, align 8
  %ed = alloca %struct.Editing*, align 8
  %seq = alloca %struct.Sequence*, align 8
  %ms = alloca %struct.MetaStack*, align 8
  %strip = alloca %struct.Strip*, align 8
  %marker = alloca %struct.TimeMarker*, align 8
  %ts = alloca %struct.TransformOrientation*, align 8
  %srl = alloca %struct.SceneRenderLayer*, align 8
  %tos = alloca %struct.ToolSettings*, align 8
  %fmc = alloca %struct.FreestyleModuleConfig*, align 8
  %fls = alloca %struct.FreestyleLineSet*, align 8
  %iter_macro = alloca %struct.SeqIterator, align 8
  %iter_macro39 = alloca %struct.SeqIterator, align 8
  store %struct.WriteData* %wd, %struct.WriteData** %wd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WriteData** %wd.addr, metadata !8551, metadata !DIExpression()), !dbg !8552
  store %struct.ListBase* %scebase, %struct.ListBase** %scebase.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %scebase.addr, metadata !8553, metadata !DIExpression()), !dbg !8554
  call void @llvm.dbg.declare(metadata %struct.Scene** %sce, metadata !8555, metadata !DIExpression()), !dbg !8556
  call void @llvm.dbg.declare(metadata %struct.Base** %base, metadata !8557, metadata !DIExpression()), !dbg !8560
  call void @llvm.dbg.declare(metadata %struct.Editing** %ed, metadata !8561, metadata !DIExpression()), !dbg !8564
  call void @llvm.dbg.declare(metadata %struct.Sequence** %seq, metadata !8565, metadata !DIExpression()), !dbg !8566
  call void @llvm.dbg.declare(metadata %struct.MetaStack** %ms, metadata !8567, metadata !DIExpression()), !dbg !8578
  call void @llvm.dbg.declare(metadata %struct.Strip** %strip, metadata !8579, metadata !DIExpression()), !dbg !8580
  call void @llvm.dbg.declare(metadata %struct.TimeMarker** %marker, metadata !8581, metadata !DIExpression()), !dbg !8593
  call void @llvm.dbg.declare(metadata %struct.TransformOrientation** %ts, metadata !8594, metadata !DIExpression()), !dbg !8605
  call void @llvm.dbg.declare(metadata %struct.SceneRenderLayer** %srl, metadata !8606, metadata !DIExpression()), !dbg !8637
  call void @llvm.dbg.declare(metadata %struct.ToolSettings** %tos, metadata !8638, metadata !DIExpression()), !dbg !8641
  call void @llvm.dbg.declare(metadata %struct.FreestyleModuleConfig** %fmc, metadata !8642, metadata !DIExpression()), !dbg !8653
  call void @llvm.dbg.declare(metadata %struct.FreestyleLineSet** %fls, metadata !8654, metadata !DIExpression()), !dbg !8675
  %0 = load %struct.ListBase*, %struct.ListBase** %scebase.addr, align 8, !dbg !8676
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %0, i32 0, i32 0, !dbg !8677
  %1 = load i8*, i8** %first, align 8, !dbg !8677
  %2 = bitcast i8* %1 to %struct.Scene*, !dbg !8676
  store %struct.Scene* %2, %struct.Scene** %sce, align 8, !dbg !8678
  br label %while.cond, !dbg !8679

while.cond:                                       ; preds = %if.end213, %entry
  %3 = load %struct.Scene*, %struct.Scene** %sce, align 8, !dbg !8680
  %tobool = icmp ne %struct.Scene* %3, null, !dbg !8679
  br i1 %tobool, label %while.body, label %while.end216, !dbg !8679

while.body:                                       ; preds = %while.cond
  %4 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !8681
  %5 = load %struct.Scene*, %struct.Scene** %sce, align 8, !dbg !8683
  %6 = bitcast %struct.Scene* %5 to i8*, !dbg !8683
  call void @writestruct(%struct.WriteData* %4, i32 17235, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.78, i64 0, i64 0), i32 1, i8* %6), !dbg !8684
  %7 = load %struct.Scene*, %struct.Scene** %sce, align 8, !dbg !8685
  %id = getelementptr inbounds %struct.Scene, %struct.Scene* %7, i32 0, i32 0, !dbg !8687
  %properties = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 9, !dbg !8688
  %8 = load %struct.IDProperty*, %struct.IDProperty** %properties, align 8, !dbg !8688
  %tobool1 = icmp ne %struct.IDProperty* %8, null, !dbg !8685
  br i1 %tobool1, label %if.then, label %if.end, !dbg !8689

if.then:                                          ; preds = %while.body
  %9 = load %struct.Scene*, %struct.Scene** %sce, align 8, !dbg !8690
  %id2 = getelementptr inbounds %struct.Scene, %struct.Scene* %9, i32 0, i32 0, !dbg !8691
  %properties3 = getelementptr inbounds %struct.ID, %struct.ID* %id2, i32 0, i32 9, !dbg !8692
  %10 = load %struct.IDProperty*, %struct.IDProperty** %properties3, align 8, !dbg !8692
  %11 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !8693
  %12 = bitcast %struct.WriteData* %11 to i8*, !dbg !8693
  call void @IDP_WriteProperty(%struct.IDProperty* %10, i8* %12), !dbg !8694
  br label %if.end, !dbg !8694

if.end:                                           ; preds = %if.then, %while.body
  %13 = load %struct.Scene*, %struct.Scene** %sce, align 8, !dbg !8695
  %adt = getelementptr inbounds %struct.Scene, %struct.Scene* %13, i32 0, i32 1, !dbg !8697
  %14 = load %struct.AnimData*, %struct.AnimData** %adt, align 8, !dbg !8697
  %tobool4 = icmp ne %struct.AnimData* %14, null, !dbg !8695
  br i1 %tobool4, label %if.then5, label %if.end7, !dbg !8698

if.then5:                                         ; preds = %if.end
  %15 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !8699
  %16 = load %struct.Scene*, %struct.Scene** %sce, align 8, !dbg !8700
  %adt6 = getelementptr inbounds %struct.Scene, %struct.Scene* %16, i32 0, i32 1, !dbg !8701
  %17 = load %struct.AnimData*, %struct.AnimData** %adt6, align 8, !dbg !8701
  call void @write_animdata(%struct.WriteData* %15, %struct.AnimData* %17), !dbg !8702
  br label %if.end7, !dbg !8702

if.end7:                                          ; preds = %if.then5, %if.end
  %18 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !8703
  %19 = load %struct.Scene*, %struct.Scene** %sce, align 8, !dbg !8704
  %keyingsets = getelementptr inbounds %struct.Scene, %struct.Scene* %19, i32 0, i32 35, !dbg !8705
  call void @write_keyingsets(%struct.WriteData* %18, %struct.ListBase* %keyingsets), !dbg !8706
  %20 = load %struct.Scene*, %struct.Scene** %sce, align 8, !dbg !8707
  %base8 = getelementptr inbounds %struct.Scene, %struct.Scene* %20, i32 0, i32 5, !dbg !8708
  %first9 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %base8, i32 0, i32 0, !dbg !8709
  %21 = load i8*, i8** %first9, align 8, !dbg !8709
  %22 = bitcast i8* %21 to %struct.Base*, !dbg !8707
  store %struct.Base* %22, %struct.Base** %base, align 8, !dbg !8710
  br label %while.cond10, !dbg !8711

while.cond10:                                     ; preds = %while.body12, %if.end7
  %23 = load %struct.Base*, %struct.Base** %base, align 8, !dbg !8712
  %tobool11 = icmp ne %struct.Base* %23, null, !dbg !8711
  br i1 %tobool11, label %while.body12, label %while.end, !dbg !8711

while.body12:                                     ; preds = %while.cond10
  %24 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !8713
  %25 = load %struct.Base*, %struct.Base** %base, align 8, !dbg !8715
  %26 = bitcast %struct.Base* %25 to i8*, !dbg !8715
  call void @writestruct(%struct.WriteData* %24, i32 1096040772, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.79, i64 0, i64 0), i32 1, i8* %26), !dbg !8716
  %27 = load %struct.Base*, %struct.Base** %base, align 8, !dbg !8717
  %next = getelementptr inbounds %struct.Base, %struct.Base* %27, i32 0, i32 0, !dbg !8718
  %28 = load %struct.Base*, %struct.Base** %next, align 8, !dbg !8718
  store %struct.Base* %28, %struct.Base** %base, align 8, !dbg !8719
  br label %while.cond10, !dbg !8711, !llvm.loop !8720

while.end:                                        ; preds = %while.cond10
  %29 = load %struct.Scene*, %struct.Scene** %sce, align 8, !dbg !8722
  %toolsettings = getelementptr inbounds %struct.Scene, %struct.Scene* %29, i32 0, i32 20, !dbg !8723
  %30 = load %struct.ToolSettings*, %struct.ToolSettings** %toolsettings, align 8, !dbg !8723
  store %struct.ToolSettings* %30, %struct.ToolSettings** %tos, align 8, !dbg !8724
  %31 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !8725
  %32 = load %struct.ToolSettings*, %struct.ToolSettings** %tos, align 8, !dbg !8726
  %33 = bitcast %struct.ToolSettings* %32 to i8*, !dbg !8726
  call void @writestruct(%struct.WriteData* %31, i32 1096040772, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.80, i64 0, i64 0), i32 1, i8* %33), !dbg !8727
  %34 = load %struct.ToolSettings*, %struct.ToolSettings** %tos, align 8, !dbg !8728
  %vpaint = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %34, i32 0, i32 0, !dbg !8730
  %35 = load %struct.VPaint*, %struct.VPaint** %vpaint, align 8, !dbg !8730
  %tobool13 = icmp ne %struct.VPaint* %35, null, !dbg !8728
  br i1 %tobool13, label %if.then14, label %if.end16, !dbg !8731

if.then14:                                        ; preds = %while.end
  %36 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !8732
  %37 = load %struct.ToolSettings*, %struct.ToolSettings** %tos, align 8, !dbg !8734
  %vpaint15 = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %37, i32 0, i32 0, !dbg !8735
  %38 = load %struct.VPaint*, %struct.VPaint** %vpaint15, align 8, !dbg !8735
  %39 = bitcast %struct.VPaint* %38 to i8*, !dbg !8734
  call void @writestruct(%struct.WriteData* %36, i32 1096040772, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.81, i64 0, i64 0), i32 1, i8* %39), !dbg !8736
  br label %if.end16, !dbg !8737

if.end16:                                         ; preds = %if.then14, %while.end
  %40 = load %struct.ToolSettings*, %struct.ToolSettings** %tos, align 8, !dbg !8738
  %wpaint = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %40, i32 0, i32 1, !dbg !8740
  %41 = load %struct.VPaint*, %struct.VPaint** %wpaint, align 8, !dbg !8740
  %tobool17 = icmp ne %struct.VPaint* %41, null, !dbg !8738
  br i1 %tobool17, label %if.then18, label %if.end20, !dbg !8741

if.then18:                                        ; preds = %if.end16
  %42 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !8742
  %43 = load %struct.ToolSettings*, %struct.ToolSettings** %tos, align 8, !dbg !8744
  %wpaint19 = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %43, i32 0, i32 1, !dbg !8745
  %44 = load %struct.VPaint*, %struct.VPaint** %wpaint19, align 8, !dbg !8745
  %45 = bitcast %struct.VPaint* %44 to i8*, !dbg !8744
  call void @writestruct(%struct.WriteData* %42, i32 1096040772, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.81, i64 0, i64 0), i32 1, i8* %45), !dbg !8746
  br label %if.end20, !dbg !8747

if.end20:                                         ; preds = %if.then18, %if.end16
  %46 = load %struct.ToolSettings*, %struct.ToolSettings** %tos, align 8, !dbg !8748
  %sculpt = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %46, i32 0, i32 2, !dbg !8750
  %47 = load %struct.Sculpt*, %struct.Sculpt** %sculpt, align 8, !dbg !8750
  %tobool21 = icmp ne %struct.Sculpt* %47, null, !dbg !8748
  br i1 %tobool21, label %if.then22, label %if.end24, !dbg !8751

if.then22:                                        ; preds = %if.end20
  %48 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !8752
  %49 = load %struct.ToolSettings*, %struct.ToolSettings** %tos, align 8, !dbg !8754
  %sculpt23 = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %49, i32 0, i32 2, !dbg !8755
  %50 = load %struct.Sculpt*, %struct.Sculpt** %sculpt23, align 8, !dbg !8755
  %51 = bitcast %struct.Sculpt* %50 to i8*, !dbg !8754
  call void @writestruct(%struct.WriteData* %48, i32 1096040772, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.82, i64 0, i64 0), i32 1, i8* %51), !dbg !8756
  br label %if.end24, !dbg !8757

if.end24:                                         ; preds = %if.then22, %if.end20
  %52 = load %struct.ToolSettings*, %struct.ToolSettings** %tos, align 8, !dbg !8758
  %uvsculpt = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %52, i32 0, i32 3, !dbg !8760
  %53 = load %struct.UvSculpt*, %struct.UvSculpt** %uvsculpt, align 8, !dbg !8760
  %tobool25 = icmp ne %struct.UvSculpt* %53, null, !dbg !8758
  br i1 %tobool25, label %if.then26, label %if.end28, !dbg !8761

if.then26:                                        ; preds = %if.end24
  %54 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !8762
  %55 = load %struct.ToolSettings*, %struct.ToolSettings** %tos, align 8, !dbg !8764
  %uvsculpt27 = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %55, i32 0, i32 3, !dbg !8765
  %56 = load %struct.UvSculpt*, %struct.UvSculpt** %uvsculpt27, align 8, !dbg !8765
  %57 = bitcast %struct.UvSculpt* %56 to i8*, !dbg !8764
  call void @writestruct(%struct.WriteData* %54, i32 1096040772, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.83, i64 0, i64 0), i32 1, i8* %57), !dbg !8766
  br label %if.end28, !dbg !8767

if.end28:                                         ; preds = %if.then26, %if.end24
  %58 = load %struct.Scene*, %struct.Scene** %sce, align 8, !dbg !8768
  %ed29 = getelementptr inbounds %struct.Scene, %struct.Scene* %58, i32 0, i32 19, !dbg !8769
  %59 = load %struct.Editing*, %struct.Editing** %ed29, align 8, !dbg !8769
  store %struct.Editing* %59, %struct.Editing** %ed, align 8, !dbg !8770
  %60 = load %struct.Editing*, %struct.Editing** %ed, align 8, !dbg !8771
  %tobool30 = icmp ne %struct.Editing* %60, null, !dbg !8771
  br i1 %tobool30, label %if.then31, label %if.end116, !dbg !8773

if.then31:                                        ; preds = %if.end28
  %61 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !8774
  %62 = load %struct.Editing*, %struct.Editing** %ed, align 8, !dbg !8776
  %63 = bitcast %struct.Editing* %62 to i8*, !dbg !8776
  call void @writestruct(%struct.WriteData* %61, i32 1096040772, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.84, i64 0, i64 0), i32 1, i8* %63), !dbg !8777
  call void @llvm.dbg.declare(metadata %struct.SeqIterator* %iter_macro, metadata !8778, metadata !DIExpression()), !dbg !8790
  %64 = load %struct.Editing*, %struct.Editing** %ed, align 8, !dbg !8791
  call void @BKE_sequence_iterator_begin(%struct.Editing* %64, %struct.SeqIterator* %iter_macro, i8 zeroext 0), !dbg !8791
  br label %for.cond, !dbg !8791

for.cond:                                         ; preds = %for.inc, %if.then31
  %valid = getelementptr inbounds %struct.SeqIterator, %struct.SeqIterator* %iter_macro, i32 0, i32 4, !dbg !8793
  %65 = load i32, i32* %valid, align 8, !dbg !8793
  %tobool32 = icmp ne i32 %65, 0, !dbg !8791
  br i1 %tobool32, label %for.body, label %for.end, !dbg !8791

for.body:                                         ; preds = %for.cond
  %seq33 = getelementptr inbounds %struct.SeqIterator, %struct.SeqIterator* %iter_macro, i32 0, i32 3, !dbg !8795
  %66 = load %struct.Sequence*, %struct.Sequence** %seq33, align 8, !dbg !8795
  store %struct.Sequence* %66, %struct.Sequence** %seq, align 8, !dbg !8795
  %67 = load %struct.Sequence*, %struct.Sequence** %seq, align 8, !dbg !8797
  %strip34 = getelementptr inbounds %struct.Sequence, %struct.Sequence* %67, i32 0, i32 24, !dbg !8800
  %68 = load %struct.Strip*, %struct.Strip** %strip34, align 8, !dbg !8800
  %tobool35 = icmp ne %struct.Strip* %68, null, !dbg !8797
  br i1 %tobool35, label %if.then36, label %if.end38, !dbg !8801

if.then36:                                        ; preds = %for.body
  %69 = load %struct.Sequence*, %struct.Sequence** %seq, align 8, !dbg !8802
  %strip37 = getelementptr inbounds %struct.Sequence, %struct.Sequence* %69, i32 0, i32 24, !dbg !8803
  %70 = load %struct.Strip*, %struct.Strip** %strip37, align 8, !dbg !8803
  %done = getelementptr inbounds %struct.Strip, %struct.Strip* %70, i32 0, i32 3, !dbg !8804
  store i32 0, i32* %done, align 4, !dbg !8805
  br label %if.end38, !dbg !8802

if.end38:                                         ; preds = %if.then36, %for.body
  %71 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !8806
  %72 = load %struct.Sequence*, %struct.Sequence** %seq, align 8, !dbg !8807
  %73 = bitcast %struct.Sequence* %72 to i8*, !dbg !8807
  call void @writestruct(%struct.WriteData* %71, i32 1096040772, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.85, i64 0, i64 0), i32 1, i8* %73), !dbg !8808
  br label %for.inc, !dbg !8809

for.inc:                                          ; preds = %if.end38
  call void @BKE_sequence_iterator_next(%struct.SeqIterator* %iter_macro), !dbg !8793
  br label %for.cond, !dbg !8793, !llvm.loop !8810

for.end:                                          ; preds = %for.cond
  call void @BKE_sequence_iterator_end(%struct.SeqIterator* %iter_macro), !dbg !8812
  call void @llvm.dbg.declare(metadata %struct.SeqIterator* %iter_macro39, metadata !8813, metadata !DIExpression()), !dbg !8815
  %74 = load %struct.Editing*, %struct.Editing** %ed, align 8, !dbg !8816
  call void @BKE_sequence_iterator_begin(%struct.Editing* %74, %struct.SeqIterator* %iter_macro39, i8 zeroext 0), !dbg !8816
  br label %for.cond40, !dbg !8816

for.cond40:                                       ; preds = %for.inc107, %for.end
  %valid41 = getelementptr inbounds %struct.SeqIterator, %struct.SeqIterator* %iter_macro39, i32 0, i32 4, !dbg !8818
  %75 = load i32, i32* %valid41, align 8, !dbg !8818
  %tobool42 = icmp ne i32 %75, 0, !dbg !8816
  br i1 %tobool42, label %for.body43, label %for.end108, !dbg !8816

for.body43:                                       ; preds = %for.cond40
  %seq44 = getelementptr inbounds %struct.SeqIterator, %struct.SeqIterator* %iter_macro39, i32 0, i32 3, !dbg !8820
  %76 = load %struct.Sequence*, %struct.Sequence** %seq44, align 8, !dbg !8820
  store %struct.Sequence* %76, %struct.Sequence** %seq, align 8, !dbg !8820
  %77 = load %struct.Sequence*, %struct.Sequence** %seq, align 8, !dbg !8822
  %strip45 = getelementptr inbounds %struct.Sequence, %struct.Sequence* %77, i32 0, i32 24, !dbg !8825
  %78 = load %struct.Strip*, %struct.Strip** %strip45, align 8, !dbg !8825
  %tobool46 = icmp ne %struct.Strip* %78, null, !dbg !8822
  br i1 %tobool46, label %land.lhs.true, label %if.end106, !dbg !8826

land.lhs.true:                                    ; preds = %for.body43
  %79 = load %struct.Sequence*, %struct.Sequence** %seq, align 8, !dbg !8827
  %strip47 = getelementptr inbounds %struct.Sequence, %struct.Sequence* %79, i32 0, i32 24, !dbg !8828
  %80 = load %struct.Strip*, %struct.Strip** %strip47, align 8, !dbg !8828
  %done48 = getelementptr inbounds %struct.Strip, %struct.Strip* %80, i32 0, i32 3, !dbg !8829
  %81 = load i32, i32* %done48, align 4, !dbg !8829
  %cmp = icmp eq i32 %81, 0, !dbg !8830
  br i1 %cmp, label %if.then49, label %if.end106, !dbg !8831

if.then49:                                        ; preds = %land.lhs.true
  %82 = load %struct.Sequence*, %struct.Sequence** %seq, align 8, !dbg !8832
  %effectdata = getelementptr inbounds %struct.Sequence, %struct.Sequence* %82, i32 0, i32 43, !dbg !8835
  %83 = load i8*, i8** %effectdata, align 8, !dbg !8835
  %tobool50 = icmp ne i8* %83, null, !dbg !8832
  br i1 %tobool50, label %if.then51, label %if.end63, !dbg !8836

if.then51:                                        ; preds = %if.then49
  %84 = load %struct.Sequence*, %struct.Sequence** %seq, align 8, !dbg !8837
  %type = getelementptr inbounds %struct.Sequence, %struct.Sequence* %84, i32 0, i32 6, !dbg !8839
  %85 = load i32, i32* %type, align 4, !dbg !8839
  switch i32 %85, label %sw.epilog [
    i32 28, label %sw.bb
    i32 29, label %sw.bb53
    i32 25, label %sw.bb55
    i32 26, label %sw.bb57
    i32 27, label %sw.bb59
    i32 40, label %sw.bb61
  ], !dbg !8840

sw.bb:                                            ; preds = %if.then51
  %86 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !8841
  %87 = load %struct.Sequence*, %struct.Sequence** %seq, align 8, !dbg !8843
  %effectdata52 = getelementptr inbounds %struct.Sequence, %struct.Sequence* %87, i32 0, i32 43, !dbg !8844
  %88 = load i8*, i8** %effectdata52, align 8, !dbg !8844
  call void @writestruct(%struct.WriteData* %86, i32 1096040772, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.86, i64 0, i64 0), i32 1, i8* %88), !dbg !8845
  br label %sw.epilog, !dbg !8846

sw.bb53:                                          ; preds = %if.then51
  %89 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !8847
  %90 = load %struct.Sequence*, %struct.Sequence** %seq, align 8, !dbg !8848
  %effectdata54 = getelementptr inbounds %struct.Sequence, %struct.Sequence* %90, i32 0, i32 43, !dbg !8849
  %91 = load i8*, i8** %effectdata54, align 8, !dbg !8849
  call void @writestruct(%struct.WriteData* %89, i32 1096040772, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.87, i64 0, i64 0), i32 1, i8* %91), !dbg !8850
  br label %sw.epilog, !dbg !8851

sw.bb55:                                          ; preds = %if.then51
  %92 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !8852
  %93 = load %struct.Sequence*, %struct.Sequence** %seq, align 8, !dbg !8853
  %effectdata56 = getelementptr inbounds %struct.Sequence, %struct.Sequence* %93, i32 0, i32 43, !dbg !8854
  %94 = load i8*, i8** %effectdata56, align 8, !dbg !8854
  call void @writestruct(%struct.WriteData* %92, i32 1096040772, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.88, i64 0, i64 0), i32 1, i8* %94), !dbg !8855
  br label %sw.epilog, !dbg !8856

sw.bb57:                                          ; preds = %if.then51
  %95 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !8857
  %96 = load %struct.Sequence*, %struct.Sequence** %seq, align 8, !dbg !8858
  %effectdata58 = getelementptr inbounds %struct.Sequence, %struct.Sequence* %96, i32 0, i32 43, !dbg !8859
  %97 = load i8*, i8** %effectdata58, align 8, !dbg !8859
  call void @writestruct(%struct.WriteData* %95, i32 1096040772, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.89, i64 0, i64 0), i32 1, i8* %97), !dbg !8860
  br label %sw.epilog, !dbg !8861

sw.bb59:                                          ; preds = %if.then51
  %98 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !8862
  %99 = load %struct.Sequence*, %struct.Sequence** %seq, align 8, !dbg !8863
  %effectdata60 = getelementptr inbounds %struct.Sequence, %struct.Sequence* %99, i32 0, i32 43, !dbg !8864
  %100 = load i8*, i8** %effectdata60, align 8, !dbg !8864
  call void @writestruct(%struct.WriteData* %98, i32 1096040772, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.90, i64 0, i64 0), i32 1, i8* %100), !dbg !8865
  br label %sw.epilog, !dbg !8866

sw.bb61:                                          ; preds = %if.then51
  %101 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !8867
  %102 = load %struct.Sequence*, %struct.Sequence** %seq, align 8, !dbg !8868
  %effectdata62 = getelementptr inbounds %struct.Sequence, %struct.Sequence* %102, i32 0, i32 43, !dbg !8869
  %103 = load i8*, i8** %effectdata62, align 8, !dbg !8869
  call void @writestruct(%struct.WriteData* %101, i32 1096040772, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.91, i64 0, i64 0), i32 1, i8* %103), !dbg !8870
  br label %sw.epilog, !dbg !8871

sw.epilog:                                        ; preds = %if.then51, %sw.bb61, %sw.bb59, %sw.bb57, %sw.bb55, %sw.bb53, %sw.bb
  br label %if.end63, !dbg !8872

if.end63:                                         ; preds = %sw.epilog, %if.then49
  %104 = load %struct.Sequence*, %struct.Sequence** %seq, align 8, !dbg !8873
  %strip64 = getelementptr inbounds %struct.Sequence, %struct.Sequence* %104, i32 0, i32 24, !dbg !8874
  %105 = load %struct.Strip*, %struct.Strip** %strip64, align 8, !dbg !8874
  store %struct.Strip* %105, %struct.Strip** %strip, align 8, !dbg !8875
  %106 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !8876
  %107 = load %struct.Strip*, %struct.Strip** %strip, align 8, !dbg !8877
  %108 = bitcast %struct.Strip* %107 to i8*, !dbg !8877
  call void @writestruct(%struct.WriteData* %106, i32 1096040772, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.92, i64 0, i64 0), i32 1, i8* %108), !dbg !8878
  %109 = load %struct.Sequence*, %struct.Sequence** %seq, align 8, !dbg !8879
  %flag = getelementptr inbounds %struct.Sequence, %struct.Sequence* %109, i32 0, i32 5, !dbg !8881
  %110 = load i32, i32* %flag, align 8, !dbg !8881
  %and = and i32 %110, 131072, !dbg !8882
  %tobool65 = icmp ne i32 %and, 0, !dbg !8882
  br i1 %tobool65, label %land.lhs.true66, label %if.end70, !dbg !8883

land.lhs.true66:                                  ; preds = %if.end63
  %111 = load %struct.Strip*, %struct.Strip** %strip, align 8, !dbg !8884
  %crop = getelementptr inbounds %struct.Strip, %struct.Strip* %111, i32 0, i32 9, !dbg !8885
  %112 = load %struct.StripCrop*, %struct.StripCrop** %crop, align 8, !dbg !8885
  %tobool67 = icmp ne %struct.StripCrop* %112, null, !dbg !8884
  br i1 %tobool67, label %if.then68, label %if.end70, !dbg !8886

if.then68:                                        ; preds = %land.lhs.true66
  %113 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !8887
  %114 = load %struct.Strip*, %struct.Strip** %strip, align 8, !dbg !8889
  %crop69 = getelementptr inbounds %struct.Strip, %struct.Strip* %114, i32 0, i32 9, !dbg !8890
  %115 = load %struct.StripCrop*, %struct.StripCrop** %crop69, align 8, !dbg !8890
  %116 = bitcast %struct.StripCrop* %115 to i8*, !dbg !8889
  call void @writestruct(%struct.WriteData* %113, i32 1096040772, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.93, i64 0, i64 0), i32 1, i8* %116), !dbg !8891
  br label %if.end70, !dbg !8892

if.end70:                                         ; preds = %if.then68, %land.lhs.true66, %if.end63
  %117 = load %struct.Sequence*, %struct.Sequence** %seq, align 8, !dbg !8893
  %flag71 = getelementptr inbounds %struct.Sequence, %struct.Sequence* %117, i32 0, i32 5, !dbg !8895
  %118 = load i32, i32* %flag71, align 8, !dbg !8895
  %and72 = and i32 %118, 65536, !dbg !8896
  %tobool73 = icmp ne i32 %and72, 0, !dbg !8896
  br i1 %tobool73, label %land.lhs.true74, label %if.end78, !dbg !8897

land.lhs.true74:                                  ; preds = %if.end70
  %119 = load %struct.Strip*, %struct.Strip** %strip, align 8, !dbg !8898
  %transform = getelementptr inbounds %struct.Strip, %struct.Strip* %119, i32 0, i32 10, !dbg !8899
  %120 = load %struct.StripTransform*, %struct.StripTransform** %transform, align 8, !dbg !8899
  %tobool75 = icmp ne %struct.StripTransform* %120, null, !dbg !8898
  br i1 %tobool75, label %if.then76, label %if.end78, !dbg !8900

if.then76:                                        ; preds = %land.lhs.true74
  %121 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !8901
  %122 = load %struct.Strip*, %struct.Strip** %strip, align 8, !dbg !8903
  %transform77 = getelementptr inbounds %struct.Strip, %struct.Strip* %122, i32 0, i32 10, !dbg !8904
  %123 = load %struct.StripTransform*, %struct.StripTransform** %transform77, align 8, !dbg !8904
  %124 = bitcast %struct.StripTransform* %123 to i8*, !dbg !8903
  call void @writestruct(%struct.WriteData* %121, i32 1096040772, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.94, i64 0, i64 0), i32 1, i8* %124), !dbg !8905
  br label %if.end78, !dbg !8906

if.end78:                                         ; preds = %if.then76, %land.lhs.true74, %if.end70
  %125 = load %struct.Sequence*, %struct.Sequence** %seq, align 8, !dbg !8907
  %flag79 = getelementptr inbounds %struct.Sequence, %struct.Sequence* %125, i32 0, i32 5, !dbg !8909
  %126 = load i32, i32* %flag79, align 8, !dbg !8909
  %and80 = and i32 %126, 32768, !dbg !8910
  %tobool81 = icmp ne i32 %and80, 0, !dbg !8910
  br i1 %tobool81, label %land.lhs.true82, label %if.end86, !dbg !8911

land.lhs.true82:                                  ; preds = %if.end78
  %127 = load %struct.Strip*, %struct.Strip** %strip, align 8, !dbg !8912
  %proxy = getelementptr inbounds %struct.Strip, %struct.Strip* %127, i32 0, i32 8, !dbg !8913
  %128 = load %struct.StripProxy*, %struct.StripProxy** %proxy, align 8, !dbg !8913
  %tobool83 = icmp ne %struct.StripProxy* %128, null, !dbg !8912
  br i1 %tobool83, label %if.then84, label %if.end86, !dbg !8914

if.then84:                                        ; preds = %land.lhs.true82
  %129 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !8915
  %130 = load %struct.Strip*, %struct.Strip** %strip, align 8, !dbg !8917
  %proxy85 = getelementptr inbounds %struct.Strip, %struct.Strip* %130, i32 0, i32 8, !dbg !8918
  %131 = load %struct.StripProxy*, %struct.StripProxy** %proxy85, align 8, !dbg !8918
  %132 = bitcast %struct.StripProxy* %131 to i8*, !dbg !8917
  call void @writestruct(%struct.WriteData* %129, i32 1096040772, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.95, i64 0, i64 0), i32 1, i8* %132), !dbg !8919
  br label %if.end86, !dbg !8920

if.end86:                                         ; preds = %if.then84, %land.lhs.true82, %if.end78
  %133 = load %struct.Sequence*, %struct.Sequence** %seq, align 8, !dbg !8921
  %type87 = getelementptr inbounds %struct.Sequence, %struct.Sequence* %133, i32 0, i32 6, !dbg !8923
  %134 = load i32, i32* %type87, align 4, !dbg !8923
  %cmp88 = icmp eq i32 %134, 0, !dbg !8924
  br i1 %cmp88, label %if.then89, label %if.else, !dbg !8925

if.then89:                                        ; preds = %if.end86
  %135 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !8926
  %136 = load i64 (i8*)*, i64 (i8*)** @MEM_allocN_len, align 8, !dbg !8927
  %137 = load %struct.Strip*, %struct.Strip** %strip, align 8, !dbg !8928
  %stripdata = getelementptr inbounds %struct.Strip, %struct.Strip* %137, i32 0, i32 6, !dbg !8929
  %138 = load %struct.StripElem*, %struct.StripElem** %stripdata, align 8, !dbg !8929
  %139 = bitcast %struct.StripElem* %138 to i8*, !dbg !8928
  %call = call i64 %136(i8* %139), !dbg !8927
  %div = udiv i64 %call, 264, !dbg !8930
  %conv = trunc i64 %div to i32, !dbg !8927
  %140 = load %struct.Strip*, %struct.Strip** %strip, align 8, !dbg !8931
  %stripdata90 = getelementptr inbounds %struct.Strip, %struct.Strip* %140, i32 0, i32 6, !dbg !8932
  %141 = load %struct.StripElem*, %struct.StripElem** %stripdata90, align 8, !dbg !8932
  %142 = bitcast %struct.StripElem* %141 to i8*, !dbg !8931
  call void @writestruct(%struct.WriteData* %135, i32 1096040772, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.96, i64 0, i64 0), i32 %conv, i8* %142), !dbg !8933
  br label %if.end104, !dbg !8933

if.else:                                          ; preds = %if.end86
  %143 = load %struct.Sequence*, %struct.Sequence** %seq, align 8, !dbg !8934
  %type91 = getelementptr inbounds %struct.Sequence, %struct.Sequence* %143, i32 0, i32 6, !dbg !8936
  %144 = load i32, i32* %type91, align 4, !dbg !8936
  %cmp92 = icmp eq i32 %144, 3, !dbg !8937
  br i1 %cmp92, label %if.then101, label %lor.lhs.false, !dbg !8938

lor.lhs.false:                                    ; preds = %if.else
  %145 = load %struct.Sequence*, %struct.Sequence** %seq, align 8, !dbg !8939
  %type94 = getelementptr inbounds %struct.Sequence, %struct.Sequence* %145, i32 0, i32 6, !dbg !8940
  %146 = load i32, i32* %type94, align 4, !dbg !8940
  %cmp95 = icmp eq i32 %146, 4, !dbg !8941
  br i1 %cmp95, label %if.then101, label %lor.lhs.false97, !dbg !8942

lor.lhs.false97:                                  ; preds = %lor.lhs.false
  %147 = load %struct.Sequence*, %struct.Sequence** %seq, align 8, !dbg !8943
  %type98 = getelementptr inbounds %struct.Sequence, %struct.Sequence* %147, i32 0, i32 6, !dbg !8944
  %148 = load i32, i32* %type98, align 4, !dbg !8944
  %cmp99 = icmp eq i32 %148, 5, !dbg !8945
  br i1 %cmp99, label %if.then101, label %if.end103, !dbg !8946

if.then101:                                       ; preds = %lor.lhs.false97, %lor.lhs.false, %if.else
  %149 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !8947
  %150 = load %struct.Strip*, %struct.Strip** %strip, align 8, !dbg !8948
  %stripdata102 = getelementptr inbounds %struct.Strip, %struct.Strip* %150, i32 0, i32 6, !dbg !8949
  %151 = load %struct.StripElem*, %struct.StripElem** %stripdata102, align 8, !dbg !8949
  %152 = bitcast %struct.StripElem* %151 to i8*, !dbg !8948
  call void @writestruct(%struct.WriteData* %149, i32 1096040772, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.96, i64 0, i64 0), i32 1, i8* %152), !dbg !8950
  br label %if.end103, !dbg !8950

if.end103:                                        ; preds = %if.then101, %lor.lhs.false97
  br label %if.end104

if.end104:                                        ; preds = %if.end103, %if.then89
  %153 = load %struct.Strip*, %struct.Strip** %strip, align 8, !dbg !8951
  %done105 = getelementptr inbounds %struct.Strip, %struct.Strip* %153, i32 0, i32 3, !dbg !8952
  store i32 1, i32* %done105, align 4, !dbg !8953
  br label %if.end106, !dbg !8954

if.end106:                                        ; preds = %if.end104, %land.lhs.true, %for.body43
  %154 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !8955
  %155 = load %struct.Sequence*, %struct.Sequence** %seq, align 8, !dbg !8956
  %modifiers = getelementptr inbounds %struct.Sequence, %struct.Sequence* %155, i32 0, i32 51, !dbg !8957
  call void @write_sequence_modifiers(%struct.WriteData* %154, %struct.ListBase* %modifiers), !dbg !8958
  br label %for.inc107, !dbg !8959

for.inc107:                                       ; preds = %if.end106
  call void @BKE_sequence_iterator_next(%struct.SeqIterator* %iter_macro39), !dbg !8818
  br label %for.cond40, !dbg !8818, !llvm.loop !8960

for.end108:                                       ; preds = %for.cond40
  call void @BKE_sequence_iterator_end(%struct.SeqIterator* %iter_macro39), !dbg !8962
  %156 = load %struct.Editing*, %struct.Editing** %ed, align 8, !dbg !8963
  %metastack = getelementptr inbounds %struct.Editing, %struct.Editing* %156, i32 0, i32 2, !dbg !8965
  %first109 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %metastack, i32 0, i32 0, !dbg !8966
  %157 = load i8*, i8** %first109, align 8, !dbg !8966
  %158 = bitcast i8* %157 to %struct.MetaStack*, !dbg !8963
  store %struct.MetaStack* %158, %struct.MetaStack** %ms, align 8, !dbg !8967
  br label %for.cond110, !dbg !8968

for.cond110:                                      ; preds = %for.inc113, %for.end108
  %159 = load %struct.MetaStack*, %struct.MetaStack** %ms, align 8, !dbg !8969
  %tobool111 = icmp ne %struct.MetaStack* %159, null, !dbg !8971
  br i1 %tobool111, label %for.body112, label %for.end115, !dbg !8971

for.body112:                                      ; preds = %for.cond110
  %160 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !8972
  %161 = load %struct.MetaStack*, %struct.MetaStack** %ms, align 8, !dbg !8974
  %162 = bitcast %struct.MetaStack* %161 to i8*, !dbg !8974
  call void @writestruct(%struct.WriteData* %160, i32 1096040772, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.97, i64 0, i64 0), i32 1, i8* %162), !dbg !8975
  br label %for.inc113, !dbg !8976

for.inc113:                                       ; preds = %for.body112
  %163 = load %struct.MetaStack*, %struct.MetaStack** %ms, align 8, !dbg !8977
  %next114 = getelementptr inbounds %struct.MetaStack, %struct.MetaStack* %163, i32 0, i32 0, !dbg !8978
  %164 = load %struct.MetaStack*, %struct.MetaStack** %next114, align 8, !dbg !8978
  store %struct.MetaStack* %164, %struct.MetaStack** %ms, align 8, !dbg !8979
  br label %for.cond110, !dbg !8980, !llvm.loop !8981

for.end115:                                       ; preds = %for.cond110
  br label %if.end116, !dbg !8983

if.end116:                                        ; preds = %for.end115, %if.end28
  %165 = load %struct.Scene*, %struct.Scene** %sce, align 8, !dbg !8984
  %r = getelementptr inbounds %struct.Scene, %struct.Scene* %165, i32 0, i32 22, !dbg !8986
  %avicodecdata = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r, i32 0, i32 1, !dbg !8987
  %166 = load %struct.AviCodecData*, %struct.AviCodecData** %avicodecdata, align 8, !dbg !8987
  %tobool117 = icmp ne %struct.AviCodecData* %166, null, !dbg !8984
  br i1 %tobool117, label %if.then118, label %if.end141, !dbg !8988

if.then118:                                       ; preds = %if.end116
  %167 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !8989
  %168 = load %struct.Scene*, %struct.Scene** %sce, align 8, !dbg !8991
  %r119 = getelementptr inbounds %struct.Scene, %struct.Scene* %168, i32 0, i32 22, !dbg !8992
  %avicodecdata120 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r119, i32 0, i32 1, !dbg !8993
  %169 = load %struct.AviCodecData*, %struct.AviCodecData** %avicodecdata120, align 8, !dbg !8993
  %170 = bitcast %struct.AviCodecData* %169 to i8*, !dbg !8991
  call void @writestruct(%struct.WriteData* %167, i32 1096040772, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.98, i64 0, i64 0), i32 1, i8* %170), !dbg !8994
  %171 = load %struct.Scene*, %struct.Scene** %sce, align 8, !dbg !8995
  %r121 = getelementptr inbounds %struct.Scene, %struct.Scene* %171, i32 0, i32 22, !dbg !8997
  %avicodecdata122 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r121, i32 0, i32 1, !dbg !8998
  %172 = load %struct.AviCodecData*, %struct.AviCodecData** %avicodecdata122, align 8, !dbg !8998
  %lpFormat = getelementptr inbounds %struct.AviCodecData, %struct.AviCodecData* %172, i32 0, i32 0, !dbg !8999
  %173 = load i8*, i8** %lpFormat, align 8, !dbg !8999
  %tobool123 = icmp ne i8* %173, null, !dbg !8995
  br i1 %tobool123, label %if.then124, label %if.end130, !dbg !9000

if.then124:                                       ; preds = %if.then118
  %174 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !9001
  %175 = load %struct.Scene*, %struct.Scene** %sce, align 8, !dbg !9002
  %r125 = getelementptr inbounds %struct.Scene, %struct.Scene* %175, i32 0, i32 22, !dbg !9003
  %avicodecdata126 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r125, i32 0, i32 1, !dbg !9004
  %176 = load %struct.AviCodecData*, %struct.AviCodecData** %avicodecdata126, align 8, !dbg !9004
  %cbFormat = getelementptr inbounds %struct.AviCodecData, %struct.AviCodecData* %176, i32 0, i32 2, !dbg !9005
  %177 = load i32, i32* %cbFormat, align 8, !dbg !9005
  %178 = load %struct.Scene*, %struct.Scene** %sce, align 8, !dbg !9006
  %r127 = getelementptr inbounds %struct.Scene, %struct.Scene* %178, i32 0, i32 22, !dbg !9007
  %avicodecdata128 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r127, i32 0, i32 1, !dbg !9008
  %179 = load %struct.AviCodecData*, %struct.AviCodecData** %avicodecdata128, align 8, !dbg !9008
  %lpFormat129 = getelementptr inbounds %struct.AviCodecData, %struct.AviCodecData* %179, i32 0, i32 0, !dbg !9009
  %180 = load i8*, i8** %lpFormat129, align 8, !dbg !9009
  call void @writedata(%struct.WriteData* %174, i32 1096040772, i32 %177, i8* %180), !dbg !9010
  br label %if.end130, !dbg !9010

if.end130:                                        ; preds = %if.then124, %if.then118
  %181 = load %struct.Scene*, %struct.Scene** %sce, align 8, !dbg !9011
  %r131 = getelementptr inbounds %struct.Scene, %struct.Scene* %181, i32 0, i32 22, !dbg !9013
  %avicodecdata132 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r131, i32 0, i32 1, !dbg !9014
  %182 = load %struct.AviCodecData*, %struct.AviCodecData** %avicodecdata132, align 8, !dbg !9014
  %lpParms = getelementptr inbounds %struct.AviCodecData, %struct.AviCodecData* %182, i32 0, i32 1, !dbg !9015
  %183 = load i8*, i8** %lpParms, align 8, !dbg !9015
  %tobool133 = icmp ne i8* %183, null, !dbg !9011
  br i1 %tobool133, label %if.then134, label %if.end140, !dbg !9016

if.then134:                                       ; preds = %if.end130
  %184 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !9017
  %185 = load %struct.Scene*, %struct.Scene** %sce, align 8, !dbg !9018
  %r135 = getelementptr inbounds %struct.Scene, %struct.Scene* %185, i32 0, i32 22, !dbg !9019
  %avicodecdata136 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r135, i32 0, i32 1, !dbg !9020
  %186 = load %struct.AviCodecData*, %struct.AviCodecData** %avicodecdata136, align 8, !dbg !9020
  %cbParms = getelementptr inbounds %struct.AviCodecData, %struct.AviCodecData* %186, i32 0, i32 3, !dbg !9021
  %187 = load i32, i32* %cbParms, align 4, !dbg !9021
  %188 = load %struct.Scene*, %struct.Scene** %sce, align 8, !dbg !9022
  %r137 = getelementptr inbounds %struct.Scene, %struct.Scene* %188, i32 0, i32 22, !dbg !9023
  %avicodecdata138 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r137, i32 0, i32 1, !dbg !9024
  %189 = load %struct.AviCodecData*, %struct.AviCodecData** %avicodecdata138, align 8, !dbg !9024
  %lpParms139 = getelementptr inbounds %struct.AviCodecData, %struct.AviCodecData* %189, i32 0, i32 1, !dbg !9025
  %190 = load i8*, i8** %lpParms139, align 8, !dbg !9025
  call void @writedata(%struct.WriteData* %184, i32 1096040772, i32 %187, i8* %190), !dbg !9026
  br label %if.end140, !dbg !9026

if.end140:                                        ; preds = %if.then134, %if.end130
  br label %if.end141, !dbg !9027

if.end141:                                        ; preds = %if.end140, %if.end116
  %191 = load %struct.Scene*, %struct.Scene** %sce, align 8, !dbg !9028
  %r142 = getelementptr inbounds %struct.Scene, %struct.Scene* %191, i32 0, i32 22, !dbg !9030
  %qtcodecdata = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r142, i32 0, i32 2, !dbg !9031
  %192 = load %struct.QuicktimeCodecData*, %struct.QuicktimeCodecData** %qtcodecdata, align 8, !dbg !9031
  %tobool143 = icmp ne %struct.QuicktimeCodecData* %192, null, !dbg !9028
  br i1 %tobool143, label %if.then144, label %if.end157, !dbg !9032

if.then144:                                       ; preds = %if.end141
  %193 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !9033
  %194 = load %struct.Scene*, %struct.Scene** %sce, align 8, !dbg !9035
  %r145 = getelementptr inbounds %struct.Scene, %struct.Scene* %194, i32 0, i32 22, !dbg !9036
  %qtcodecdata146 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r145, i32 0, i32 2, !dbg !9037
  %195 = load %struct.QuicktimeCodecData*, %struct.QuicktimeCodecData** %qtcodecdata146, align 8, !dbg !9037
  %196 = bitcast %struct.QuicktimeCodecData* %195 to i8*, !dbg !9035
  call void @writestruct(%struct.WriteData* %193, i32 1096040772, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.99, i64 0, i64 0), i32 1, i8* %196), !dbg !9038
  %197 = load %struct.Scene*, %struct.Scene** %sce, align 8, !dbg !9039
  %r147 = getelementptr inbounds %struct.Scene, %struct.Scene* %197, i32 0, i32 22, !dbg !9041
  %qtcodecdata148 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r147, i32 0, i32 2, !dbg !9042
  %198 = load %struct.QuicktimeCodecData*, %struct.QuicktimeCodecData** %qtcodecdata148, align 8, !dbg !9042
  %cdParms = getelementptr inbounds %struct.QuicktimeCodecData, %struct.QuicktimeCodecData* %198, i32 0, i32 0, !dbg !9043
  %199 = load i8*, i8** %cdParms, align 8, !dbg !9043
  %tobool149 = icmp ne i8* %199, null, !dbg !9039
  br i1 %tobool149, label %if.then150, label %if.end156, !dbg !9044

if.then150:                                       ; preds = %if.then144
  %200 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !9045
  %201 = load %struct.Scene*, %struct.Scene** %sce, align 8, !dbg !9046
  %r151 = getelementptr inbounds %struct.Scene, %struct.Scene* %201, i32 0, i32 22, !dbg !9047
  %qtcodecdata152 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r151, i32 0, i32 2, !dbg !9048
  %202 = load %struct.QuicktimeCodecData*, %struct.QuicktimeCodecData** %qtcodecdata152, align 8, !dbg !9048
  %cdSize = getelementptr inbounds %struct.QuicktimeCodecData, %struct.QuicktimeCodecData* %202, i32 0, i32 2, !dbg !9049
  %203 = load i32, i32* %cdSize, align 8, !dbg !9049
  %204 = load %struct.Scene*, %struct.Scene** %sce, align 8, !dbg !9050
  %r153 = getelementptr inbounds %struct.Scene, %struct.Scene* %204, i32 0, i32 22, !dbg !9051
  %qtcodecdata154 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r153, i32 0, i32 2, !dbg !9052
  %205 = load %struct.QuicktimeCodecData*, %struct.QuicktimeCodecData** %qtcodecdata154, align 8, !dbg !9052
  %cdParms155 = getelementptr inbounds %struct.QuicktimeCodecData, %struct.QuicktimeCodecData* %205, i32 0, i32 0, !dbg !9053
  %206 = load i8*, i8** %cdParms155, align 8, !dbg !9053
  call void @writedata(%struct.WriteData* %200, i32 1096040772, i32 %203, i8* %206), !dbg !9054
  br label %if.end156, !dbg !9054

if.end156:                                        ; preds = %if.then150, %if.then144
  br label %if.end157, !dbg !9055

if.end157:                                        ; preds = %if.end156, %if.end141
  %207 = load %struct.Scene*, %struct.Scene** %sce, align 8, !dbg !9056
  %r158 = getelementptr inbounds %struct.Scene, %struct.Scene* %207, i32 0, i32 22, !dbg !9058
  %ffcodecdata = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r158, i32 0, i32 4, !dbg !9059
  %properties159 = getelementptr inbounds %struct.FFMpegCodecData, %struct.FFMpegCodecData* %ffcodecdata, i32 0, i32 16, !dbg !9060
  %208 = load %struct.IDProperty*, %struct.IDProperty** %properties159, align 8, !dbg !9060
  %tobool160 = icmp ne %struct.IDProperty* %208, null, !dbg !9056
  br i1 %tobool160, label %if.then161, label %if.end165, !dbg !9061

if.then161:                                       ; preds = %if.end157
  %209 = load %struct.Scene*, %struct.Scene** %sce, align 8, !dbg !9062
  %r162 = getelementptr inbounds %struct.Scene, %struct.Scene* %209, i32 0, i32 22, !dbg !9064
  %ffcodecdata163 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r162, i32 0, i32 4, !dbg !9065
  %properties164 = getelementptr inbounds %struct.FFMpegCodecData, %struct.FFMpegCodecData* %ffcodecdata163, i32 0, i32 16, !dbg !9066
  %210 = load %struct.IDProperty*, %struct.IDProperty** %properties164, align 8, !dbg !9066
  %211 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !9067
  %212 = bitcast %struct.WriteData* %211 to i8*, !dbg !9067
  call void @IDP_WriteProperty(%struct.IDProperty* %210, i8* %212), !dbg !9068
  br label %if.end165, !dbg !9069

if.end165:                                        ; preds = %if.then161, %if.end157
  %213 = load %struct.Scene*, %struct.Scene** %sce, align 8, !dbg !9070
  %markers = getelementptr inbounds %struct.Scene, %struct.Scene* %213, i32 0, i32 24, !dbg !9072
  %first166 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %markers, i32 0, i32 0, !dbg !9073
  %214 = load i8*, i8** %first166, align 8, !dbg !9073
  %215 = bitcast i8* %214 to %struct.TimeMarker*, !dbg !9070
  store %struct.TimeMarker* %215, %struct.TimeMarker** %marker, align 8, !dbg !9074
  br label %for.cond167, !dbg !9075

for.cond167:                                      ; preds = %for.inc170, %if.end165
  %216 = load %struct.TimeMarker*, %struct.TimeMarker** %marker, align 8, !dbg !9076
  %tobool168 = icmp ne %struct.TimeMarker* %216, null, !dbg !9078
  br i1 %tobool168, label %for.body169, label %for.end172, !dbg !9078

for.body169:                                      ; preds = %for.cond167
  %217 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !9079
  %218 = load %struct.TimeMarker*, %struct.TimeMarker** %marker, align 8, !dbg !9080
  %219 = bitcast %struct.TimeMarker* %218 to i8*, !dbg !9080
  call void @writestruct(%struct.WriteData* %217, i32 1096040772, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.100, i64 0, i64 0), i32 1, i8* %219), !dbg !9081
  br label %for.inc170, !dbg !9081

for.inc170:                                       ; preds = %for.body169
  %220 = load %struct.TimeMarker*, %struct.TimeMarker** %marker, align 8, !dbg !9082
  %next171 = getelementptr inbounds %struct.TimeMarker, %struct.TimeMarker* %220, i32 0, i32 0, !dbg !9083
  %221 = load %struct.TimeMarker*, %struct.TimeMarker** %next171, align 8, !dbg !9083
  store %struct.TimeMarker* %221, %struct.TimeMarker** %marker, align 8, !dbg !9084
  br label %for.cond167, !dbg !9085, !llvm.loop !9086

for.end172:                                       ; preds = %for.cond167
  %222 = load %struct.Scene*, %struct.Scene** %sce, align 8, !dbg !9088
  %transform_spaces = getelementptr inbounds %struct.Scene, %struct.Scene* %222, i32 0, i32 25, !dbg !9090
  %first173 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %transform_spaces, i32 0, i32 0, !dbg !9091
  %223 = load i8*, i8** %first173, align 8, !dbg !9091
  %224 = bitcast i8* %223 to %struct.TransformOrientation*, !dbg !9088
  store %struct.TransformOrientation* %224, %struct.TransformOrientation** %ts, align 8, !dbg !9092
  br label %for.cond174, !dbg !9093

for.cond174:                                      ; preds = %for.inc177, %for.end172
  %225 = load %struct.TransformOrientation*, %struct.TransformOrientation** %ts, align 8, !dbg !9094
  %tobool175 = icmp ne %struct.TransformOrientation* %225, null, !dbg !9096
  br i1 %tobool175, label %for.body176, label %for.end179, !dbg !9096

for.body176:                                      ; preds = %for.cond174
  %226 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !9097
  %227 = load %struct.TransformOrientation*, %struct.TransformOrientation** %ts, align 8, !dbg !9098
  %228 = bitcast %struct.TransformOrientation* %227 to i8*, !dbg !9098
  call void @writestruct(%struct.WriteData* %226, i32 1096040772, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.101, i64 0, i64 0), i32 1, i8* %228), !dbg !9099
  br label %for.inc177, !dbg !9099

for.inc177:                                       ; preds = %for.body176
  %229 = load %struct.TransformOrientation*, %struct.TransformOrientation** %ts, align 8, !dbg !9100
  %next178 = getelementptr inbounds %struct.TransformOrientation, %struct.TransformOrientation* %229, i32 0, i32 0, !dbg !9101
  %230 = load %struct.TransformOrientation*, %struct.TransformOrientation** %next178, align 8, !dbg !9101
  store %struct.TransformOrientation* %230, %struct.TransformOrientation** %ts, align 8, !dbg !9102
  br label %for.cond174, !dbg !9103, !llvm.loop !9104

for.end179:                                       ; preds = %for.cond174
  %231 = load %struct.Scene*, %struct.Scene** %sce, align 8, !dbg !9106
  %r180 = getelementptr inbounds %struct.Scene, %struct.Scene* %231, i32 0, i32 22, !dbg !9108
  %layers = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r180, i32 0, i32 60, !dbg !9109
  %first181 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %layers, i32 0, i32 0, !dbg !9110
  %232 = load i8*, i8** %first181, align 8, !dbg !9110
  %233 = bitcast i8* %232 to %struct.SceneRenderLayer*, !dbg !9106
  store %struct.SceneRenderLayer* %233, %struct.SceneRenderLayer** %srl, align 8, !dbg !9111
  br label %for.cond182, !dbg !9112

for.cond182:                                      ; preds = %for.inc200, %for.end179
  %234 = load %struct.SceneRenderLayer*, %struct.SceneRenderLayer** %srl, align 8, !dbg !9113
  %tobool183 = icmp ne %struct.SceneRenderLayer* %234, null, !dbg !9115
  br i1 %tobool183, label %for.body184, label %for.end202, !dbg !9115

for.body184:                                      ; preds = %for.cond182
  %235 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !9116
  %236 = load %struct.SceneRenderLayer*, %struct.SceneRenderLayer** %srl, align 8, !dbg !9118
  %237 = bitcast %struct.SceneRenderLayer* %236 to i8*, !dbg !9118
  call void @writestruct(%struct.WriteData* %235, i32 1096040772, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.102, i64 0, i64 0), i32 1, i8* %237), !dbg !9119
  %238 = load %struct.SceneRenderLayer*, %struct.SceneRenderLayer** %srl, align 8, !dbg !9120
  %freestyleConfig = getelementptr inbounds %struct.SceneRenderLayer, %struct.SceneRenderLayer* %238, i32 0, i32 13, !dbg !9122
  %modules = getelementptr inbounds %struct.FreestyleConfig, %struct.FreestyleConfig* %freestyleConfig, i32 0, i32 0, !dbg !9123
  %first185 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %modules, i32 0, i32 0, !dbg !9124
  %239 = load i8*, i8** %first185, align 8, !dbg !9124
  %240 = bitcast i8* %239 to %struct.FreestyleModuleConfig*, !dbg !9120
  store %struct.FreestyleModuleConfig* %240, %struct.FreestyleModuleConfig** %fmc, align 8, !dbg !9125
  br label %for.cond186, !dbg !9126

for.cond186:                                      ; preds = %for.inc189, %for.body184
  %241 = load %struct.FreestyleModuleConfig*, %struct.FreestyleModuleConfig** %fmc, align 8, !dbg !9127
  %tobool187 = icmp ne %struct.FreestyleModuleConfig* %241, null, !dbg !9129
  br i1 %tobool187, label %for.body188, label %for.end191, !dbg !9129

for.body188:                                      ; preds = %for.cond186
  %242 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !9130
  %243 = load %struct.FreestyleModuleConfig*, %struct.FreestyleModuleConfig** %fmc, align 8, !dbg !9132
  %244 = bitcast %struct.FreestyleModuleConfig* %243 to i8*, !dbg !9132
  call void @writestruct(%struct.WriteData* %242, i32 1096040772, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.103, i64 0, i64 0), i32 1, i8* %244), !dbg !9133
  br label %for.inc189, !dbg !9134

for.inc189:                                       ; preds = %for.body188
  %245 = load %struct.FreestyleModuleConfig*, %struct.FreestyleModuleConfig** %fmc, align 8, !dbg !9135
  %next190 = getelementptr inbounds %struct.FreestyleModuleConfig, %struct.FreestyleModuleConfig* %245, i32 0, i32 0, !dbg !9136
  %246 = load %struct.FreestyleModuleConfig*, %struct.FreestyleModuleConfig** %next190, align 8, !dbg !9136
  store %struct.FreestyleModuleConfig* %246, %struct.FreestyleModuleConfig** %fmc, align 8, !dbg !9137
  br label %for.cond186, !dbg !9138, !llvm.loop !9139

for.end191:                                       ; preds = %for.cond186
  %247 = load %struct.SceneRenderLayer*, %struct.SceneRenderLayer** %srl, align 8, !dbg !9141
  %freestyleConfig192 = getelementptr inbounds %struct.SceneRenderLayer, %struct.SceneRenderLayer* %247, i32 0, i32 13, !dbg !9143
  %linesets = getelementptr inbounds %struct.FreestyleConfig, %struct.FreestyleConfig* %freestyleConfig192, i32 0, i32 7, !dbg !9144
  %first193 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %linesets, i32 0, i32 0, !dbg !9145
  %248 = load i8*, i8** %first193, align 8, !dbg !9145
  %249 = bitcast i8* %248 to %struct.FreestyleLineSet*, !dbg !9141
  store %struct.FreestyleLineSet* %249, %struct.FreestyleLineSet** %fls, align 8, !dbg !9146
  br label %for.cond194, !dbg !9147

for.cond194:                                      ; preds = %for.inc197, %for.end191
  %250 = load %struct.FreestyleLineSet*, %struct.FreestyleLineSet** %fls, align 8, !dbg !9148
  %tobool195 = icmp ne %struct.FreestyleLineSet* %250, null, !dbg !9150
  br i1 %tobool195, label %for.body196, label %for.end199, !dbg !9150

for.body196:                                      ; preds = %for.cond194
  %251 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !9151
  %252 = load %struct.FreestyleLineSet*, %struct.FreestyleLineSet** %fls, align 8, !dbg !9153
  %253 = bitcast %struct.FreestyleLineSet* %252 to i8*, !dbg !9153
  call void @writestruct(%struct.WriteData* %251, i32 1096040772, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.104, i64 0, i64 0), i32 1, i8* %253), !dbg !9154
  br label %for.inc197, !dbg !9155

for.inc197:                                       ; preds = %for.body196
  %254 = load %struct.FreestyleLineSet*, %struct.FreestyleLineSet** %fls, align 8, !dbg !9156
  %next198 = getelementptr inbounds %struct.FreestyleLineSet, %struct.FreestyleLineSet* %254, i32 0, i32 0, !dbg !9157
  %255 = load %struct.FreestyleLineSet*, %struct.FreestyleLineSet** %next198, align 8, !dbg !9157
  store %struct.FreestyleLineSet* %255, %struct.FreestyleLineSet** %fls, align 8, !dbg !9158
  br label %for.cond194, !dbg !9159, !llvm.loop !9160

for.end199:                                       ; preds = %for.cond194
  br label %for.inc200, !dbg !9162

for.inc200:                                       ; preds = %for.end199
  %256 = load %struct.SceneRenderLayer*, %struct.SceneRenderLayer** %srl, align 8, !dbg !9163
  %next201 = getelementptr inbounds %struct.SceneRenderLayer, %struct.SceneRenderLayer* %256, i32 0, i32 0, !dbg !9164
  %257 = load %struct.SceneRenderLayer*, %struct.SceneRenderLayer** %next201, align 8, !dbg !9164
  store %struct.SceneRenderLayer* %257, %struct.SceneRenderLayer** %srl, align 8, !dbg !9165
  br label %for.cond182, !dbg !9166, !llvm.loop !9167

for.end202:                                       ; preds = %for.cond182
  %258 = load %struct.Scene*, %struct.Scene** %sce, align 8, !dbg !9169
  %nodetree = getelementptr inbounds %struct.Scene, %struct.Scene* %258, i32 0, i32 18, !dbg !9171
  %259 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree, align 8, !dbg !9171
  %tobool203 = icmp ne %struct.bNodeTree* %259, null, !dbg !9169
  br i1 %tobool203, label %if.then204, label %if.end207, !dbg !9172

if.then204:                                       ; preds = %for.end202
  %260 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !9173
  %261 = load %struct.Scene*, %struct.Scene** %sce, align 8, !dbg !9175
  %nodetree205 = getelementptr inbounds %struct.Scene, %struct.Scene* %261, i32 0, i32 18, !dbg !9176
  %262 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree205, align 8, !dbg !9176
  %263 = bitcast %struct.bNodeTree* %262 to i8*, !dbg !9175
  call void @writestruct(%struct.WriteData* %260, i32 1096040772, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.105, i64 0, i64 0), i32 1, i8* %263), !dbg !9177
  %264 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !9178
  %265 = load %struct.Scene*, %struct.Scene** %sce, align 8, !dbg !9179
  %nodetree206 = getelementptr inbounds %struct.Scene, %struct.Scene* %265, i32 0, i32 18, !dbg !9180
  %266 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree206, align 8, !dbg !9180
  call void @write_nodetree(%struct.WriteData* %264, %struct.bNodeTree* %266), !dbg !9181
  br label %if.end207, !dbg !9182

if.end207:                                        ; preds = %if.then204, %for.end202
  %267 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !9183
  %268 = load %struct.Scene*, %struct.Scene** %sce, align 8, !dbg !9184
  %view_settings = getelementptr inbounds %struct.Scene, %struct.Scene* %268, i32 0, i32 44, !dbg !9185
  call void @write_view_settings(%struct.WriteData* %267, %struct.ColorManagedViewSettings* %view_settings), !dbg !9186
  %269 = load %struct.Scene*, %struct.Scene** %sce, align 8, !dbg !9187
  %rigidbody_world = getelementptr inbounds %struct.Scene, %struct.Scene* %269, i32 0, i32 47, !dbg !9189
  %270 = load %struct.RigidBodyWorld*, %struct.RigidBodyWorld** %rigidbody_world, align 8, !dbg !9189
  %tobool208 = icmp ne %struct.RigidBodyWorld* %270, null, !dbg !9187
  br i1 %tobool208, label %if.then209, label %if.end213, !dbg !9190

if.then209:                                       ; preds = %if.end207
  %271 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !9191
  %272 = load %struct.Scene*, %struct.Scene** %sce, align 8, !dbg !9193
  %rigidbody_world210 = getelementptr inbounds %struct.Scene, %struct.Scene* %272, i32 0, i32 47, !dbg !9194
  %273 = load %struct.RigidBodyWorld*, %struct.RigidBodyWorld** %rigidbody_world210, align 8, !dbg !9194
  %274 = bitcast %struct.RigidBodyWorld* %273 to i8*, !dbg !9193
  call void @writestruct(%struct.WriteData* %271, i32 1096040772, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.106, i64 0, i64 0), i32 1, i8* %274), !dbg !9195
  %275 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !9196
  %276 = load %struct.Scene*, %struct.Scene** %sce, align 8, !dbg !9197
  %rigidbody_world211 = getelementptr inbounds %struct.Scene, %struct.Scene* %276, i32 0, i32 47, !dbg !9198
  %277 = load %struct.RigidBodyWorld*, %struct.RigidBodyWorld** %rigidbody_world211, align 8, !dbg !9198
  %effector_weights = getelementptr inbounds %struct.RigidBodyWorld, %struct.RigidBodyWorld* %277, i32 0, i32 0, !dbg !9199
  %278 = load %struct.EffectorWeights*, %struct.EffectorWeights** %effector_weights, align 8, !dbg !9199
  %279 = bitcast %struct.EffectorWeights* %278 to i8*, !dbg !9197
  call void @writestruct(%struct.WriteData* %275, i32 1096040772, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.107, i64 0, i64 0), i32 1, i8* %279), !dbg !9200
  %280 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !9201
  %281 = load %struct.Scene*, %struct.Scene** %sce, align 8, !dbg !9202
  %rigidbody_world212 = getelementptr inbounds %struct.Scene, %struct.Scene* %281, i32 0, i32 47, !dbg !9203
  %282 = load %struct.RigidBodyWorld*, %struct.RigidBodyWorld** %rigidbody_world212, align 8, !dbg !9203
  %ptcaches = getelementptr inbounds %struct.RigidBodyWorld, %struct.RigidBodyWorld* %282, i32 0, i32 7, !dbg !9204
  call void @write_pointcaches(%struct.WriteData* %280, %struct.ListBase* %ptcaches), !dbg !9205
  br label %if.end213, !dbg !9206

if.end213:                                        ; preds = %if.then209, %if.end207
  %283 = load %struct.Scene*, %struct.Scene** %sce, align 8, !dbg !9207
  %id214 = getelementptr inbounds %struct.Scene, %struct.Scene* %283, i32 0, i32 0, !dbg !9208
  %next215 = getelementptr inbounds %struct.ID, %struct.ID* %id214, i32 0, i32 0, !dbg !9209
  %284 = load i8*, i8** %next215, align 8, !dbg !9209
  %285 = bitcast i8* %284 to %struct.Scene*, !dbg !9207
  store %struct.Scene* %285, %struct.Scene** %sce, align 8, !dbg !9210
  br label %while.cond, !dbg !8679, !llvm.loop !9211

while.end216:                                     ; preds = %while.cond
  %286 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !9213
  call void @mywrite(%struct.WriteData* %286, i8* null, i32 0), !dbg !9214
  ret void, !dbg !9215
}

; Function Attrs: noinline nounwind uwtable
define internal void @write_curves(%struct.WriteData* %wd, %struct.ListBase* %idbase) #0 !dbg !9216 {
entry:
  %wd.addr = alloca %struct.WriteData*, align 8
  %idbase.addr = alloca %struct.ListBase*, align 8
  %cu = alloca %struct.Curve*, align 8
  %nu = alloca %struct.Nurb*, align 8
  store %struct.WriteData* %wd, %struct.WriteData** %wd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WriteData** %wd.addr, metadata !9217, metadata !DIExpression()), !dbg !9218
  store %struct.ListBase* %idbase, %struct.ListBase** %idbase.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %idbase.addr, metadata !9219, metadata !DIExpression()), !dbg !9220
  call void @llvm.dbg.declare(metadata %struct.Curve** %cu, metadata !9221, metadata !DIExpression()), !dbg !9371
  call void @llvm.dbg.declare(metadata %struct.Nurb** %nu, metadata !9372, metadata !DIExpression()), !dbg !9412
  %0 = load %struct.ListBase*, %struct.ListBase** %idbase.addr, align 8, !dbg !9413
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %0, i32 0, i32 0, !dbg !9414
  %1 = load i8*, i8** %first, align 8, !dbg !9414
  %2 = bitcast i8* %1 to %struct.Curve*, !dbg !9413
  store %struct.Curve* %2, %struct.Curve** %cu, align 8, !dbg !9415
  br label %while.cond, !dbg !9416

while.cond:                                       ; preds = %if.end71, %entry
  %3 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !9417
  %tobool = icmp ne %struct.Curve* %3, null, !dbg !9416
  br i1 %tobool, label %while.body, label %while.end74, !dbg !9416

while.body:                                       ; preds = %while.cond
  %4 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !9418
  %id = getelementptr inbounds %struct.Curve, %struct.Curve* %4, i32 0, i32 0, !dbg !9421
  %us = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 6, !dbg !9422
  %5 = load i32, i32* %us, align 4, !dbg !9422
  %cmp = icmp sgt i32 %5, 0, !dbg !9423
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !9424

lor.lhs.false:                                    ; preds = %while.body
  %6 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !9425
  %current = getelementptr inbounds %struct.WriteData, %struct.WriteData* %6, i32 0, i32 4, !dbg !9426
  %7 = load %struct.MemFile*, %struct.MemFile** %current, align 8, !dbg !9426
  %tobool1 = icmp ne %struct.MemFile* %7, null, !dbg !9425
  br i1 %tobool1, label %if.then, label %if.end71, !dbg !9427

if.then:                                          ; preds = %lor.lhs.false, %while.body
  %8 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !9428
  %9 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !9430
  %10 = bitcast %struct.Curve* %9 to i8*, !dbg !9430
  call void @writestruct(%struct.WriteData* %8, i32 21827, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.122, i64 0, i64 0), i32 1, i8* %10), !dbg !9431
  %11 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !9432
  %12 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !9433
  %totcol = getelementptr inbounds %struct.Curve, %struct.Curve* %12, i32 0, i32 22, !dbg !9434
  %13 = load i16, i16* %totcol, align 2, !dbg !9434
  %conv = sext i16 %13 to i64, !dbg !9433
  %mul = mul i64 8, %conv, !dbg !9435
  %conv2 = trunc i64 %mul to i32, !dbg !9436
  %14 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !9437
  %mat = getelementptr inbounds %struct.Curve, %struct.Curve* %14, i32 0, i32 10, !dbg !9438
  %15 = load %struct.Material**, %struct.Material*** %mat, align 8, !dbg !9438
  %16 = bitcast %struct.Material** %15 to i8*, !dbg !9437
  call void @writedata(%struct.WriteData* %11, i32 1096040772, i32 %conv2, i8* %16), !dbg !9439
  %17 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !9440
  %id3 = getelementptr inbounds %struct.Curve, %struct.Curve* %17, i32 0, i32 0, !dbg !9442
  %properties = getelementptr inbounds %struct.ID, %struct.ID* %id3, i32 0, i32 9, !dbg !9443
  %18 = load %struct.IDProperty*, %struct.IDProperty** %properties, align 8, !dbg !9443
  %tobool4 = icmp ne %struct.IDProperty* %18, null, !dbg !9440
  br i1 %tobool4, label %if.then5, label %if.end, !dbg !9444

if.then5:                                         ; preds = %if.then
  %19 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !9445
  %id6 = getelementptr inbounds %struct.Curve, %struct.Curve* %19, i32 0, i32 0, !dbg !9446
  %properties7 = getelementptr inbounds %struct.ID, %struct.ID* %id6, i32 0, i32 9, !dbg !9447
  %20 = load %struct.IDProperty*, %struct.IDProperty** %properties7, align 8, !dbg !9447
  %21 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !9448
  %22 = bitcast %struct.WriteData* %21 to i8*, !dbg !9448
  call void @IDP_WriteProperty(%struct.IDProperty* %20, i8* %22), !dbg !9449
  br label %if.end, !dbg !9449

if.end:                                           ; preds = %if.then5, %if.then
  %23 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !9450
  %adt = getelementptr inbounds %struct.Curve, %struct.Curve* %23, i32 0, i32 1, !dbg !9452
  %24 = load %struct.AnimData*, %struct.AnimData** %adt, align 8, !dbg !9452
  %tobool8 = icmp ne %struct.AnimData* %24, null, !dbg !9450
  br i1 %tobool8, label %if.then9, label %if.end11, !dbg !9453

if.then9:                                         ; preds = %if.end
  %25 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !9454
  %26 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !9455
  %adt10 = getelementptr inbounds %struct.Curve, %struct.Curve* %26, i32 0, i32 1, !dbg !9456
  %27 = load %struct.AnimData*, %struct.AnimData** %adt10, align 8, !dbg !9456
  call void @write_animdata(%struct.WriteData* %25, %struct.AnimData* %27), !dbg !9457
  br label %if.end11, !dbg !9457

if.end11:                                         ; preds = %if.then9, %if.end
  %28 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !9458
  %vfont = getelementptr inbounds %struct.Curve, %struct.Curve* %28, i32 0, i32 55, !dbg !9460
  %29 = load %struct.VFont*, %struct.VFont** %vfont, align 8, !dbg !9460
  %tobool12 = icmp ne %struct.VFont* %29, null, !dbg !9458
  br i1 %tobool12, label %if.then13, label %if.else, !dbg !9461

if.then13:                                        ; preds = %if.end11
  %30 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !9462
  %31 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !9464
  %len = getelementptr inbounds %struct.Curve, %struct.Curve* %31, i32 0, i32 51, !dbg !9465
  %32 = load i32, i32* %len, align 4, !dbg !9465
  %add = add nsw i32 %32, 1, !dbg !9466
  %33 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !9467
  %str = getelementptr inbounds %struct.Curve, %struct.Curve* %33, i32 0, i32 52, !dbg !9468
  %34 = load i8*, i8** %str, align 8, !dbg !9468
  call void @writedata(%struct.WriteData* %30, i32 1096040772, i32 %add, i8* %34), !dbg !9469
  %35 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !9470
  %36 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !9471
  %len_wchar = getelementptr inbounds %struct.Curve, %struct.Curve* %36, i32 0, i32 50, !dbg !9472
  %37 = load i32, i32* %len_wchar, align 8, !dbg !9472
  %add14 = add nsw i32 %37, 1, !dbg !9473
  %38 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !9474
  %strinfo = getelementptr inbounds %struct.Curve, %struct.Curve* %38, i32 0, i32 62, !dbg !9475
  %39 = load %struct.CharInfo*, %struct.CharInfo** %strinfo, align 8, !dbg !9475
  %40 = bitcast %struct.CharInfo* %39 to i8*, !dbg !9474
  call void @writestruct(%struct.WriteData* %35, i32 1096040772, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.123, i64 0, i64 0), i32 %add14, i8* %40), !dbg !9476
  %41 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !9477
  %42 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !9478
  %totbox = getelementptr inbounds %struct.Curve, %struct.Curve* %42, i32 0, i32 60, !dbg !9479
  %43 = load i32, i32* %totbox, align 8, !dbg !9479
  %44 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !9480
  %tb = getelementptr inbounds %struct.Curve, %struct.Curve* %44, i32 0, i32 59, !dbg !9481
  %45 = load %struct.TextBox*, %struct.TextBox** %tb, align 8, !dbg !9481
  %46 = bitcast %struct.TextBox* %45 to i8*, !dbg !9480
  call void @writestruct(%struct.WriteData* %41, i32 1096040772, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.124, i64 0, i64 0), i32 %43, i8* %46), !dbg !9482
  br label %if.end70, !dbg !9483

if.else:                                          ; preds = %if.end11
  %47 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !9484
  %nurb = getelementptr inbounds %struct.Curve, %struct.Curve* %47, i32 0, i32 3, !dbg !9486
  %first15 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %nurb, i32 0, i32 0, !dbg !9487
  %48 = load i8*, i8** %first15, align 8, !dbg !9487
  %49 = bitcast i8* %48 to %struct.Nurb*, !dbg !9484
  store %struct.Nurb* %49, %struct.Nurb** %nu, align 8, !dbg !9488
  br label %while.cond16, !dbg !9489

while.cond16:                                     ; preds = %while.body18, %if.else
  %50 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !9490
  %tobool17 = icmp ne %struct.Nurb* %50, null, !dbg !9489
  br i1 %tobool17, label %while.body18, label %while.end, !dbg !9489

while.body18:                                     ; preds = %while.cond16
  %51 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !9491
  %52 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !9493
  %53 = bitcast %struct.Nurb* %52 to i8*, !dbg !9493
  call void @writestruct(%struct.WriteData* %51, i32 1096040772, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.125, i64 0, i64 0), i32 1, i8* %53), !dbg !9494
  %54 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !9495
  %next = getelementptr inbounds %struct.Nurb, %struct.Nurb* %54, i32 0, i32 0, !dbg !9496
  %55 = load %struct.Nurb*, %struct.Nurb** %next, align 8, !dbg !9496
  store %struct.Nurb* %55, %struct.Nurb** %nu, align 8, !dbg !9497
  br label %while.cond16, !dbg !9489, !llvm.loop !9498

while.end:                                        ; preds = %while.cond16
  %56 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !9500
  %nurb19 = getelementptr inbounds %struct.Curve, %struct.Curve* %56, i32 0, i32 3, !dbg !9501
  %first20 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %nurb19, i32 0, i32 0, !dbg !9502
  %57 = load i8*, i8** %first20, align 8, !dbg !9502
  %58 = bitcast i8* %57 to %struct.Nurb*, !dbg !9500
  store %struct.Nurb* %58, %struct.Nurb** %nu, align 8, !dbg !9503
  br label %while.cond21, !dbg !9504

while.cond21:                                     ; preds = %if.end67, %while.end
  %59 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !9505
  %tobool22 = icmp ne %struct.Nurb* %59, null, !dbg !9504
  br i1 %tobool22, label %while.body23, label %while.end69, !dbg !9504

while.body23:                                     ; preds = %while.cond21
  %60 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !9506
  %type = getelementptr inbounds %struct.Nurb, %struct.Nurb* %60, i32 0, i32 2, !dbg !9509
  %61 = load i16, i16* %type, align 8, !dbg !9509
  %conv24 = sext i16 %61 to i32, !dbg !9506
  %cmp25 = icmp eq i32 %conv24, 1, !dbg !9510
  br i1 %cmp25, label %if.then27, label %if.else28, !dbg !9511

if.then27:                                        ; preds = %while.body23
  %62 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !9512
  %63 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !9513
  %pntsu = getelementptr inbounds %struct.Nurb, %struct.Nurb* %63, i32 0, i32 6, !dbg !9514
  %64 = load i32, i32* %pntsu, align 8, !dbg !9514
  %65 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !9515
  %bezt = getelementptr inbounds %struct.Nurb, %struct.Nurb* %65, i32 0, i32 18, !dbg !9516
  %66 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !9516
  %67 = bitcast %struct.BezTriple* %66 to i8*, !dbg !9515
  call void @writestruct(%struct.WriteData* %62, i32 1096040772, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.59, i64 0, i64 0), i32 %64, i8* %67), !dbg !9517
  br label %if.end67, !dbg !9517

if.else28:                                        ; preds = %while.body23
  %68 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !9518
  %69 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !9520
  %pntsu29 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %69, i32 0, i32 6, !dbg !9521
  %70 = load i32, i32* %pntsu29, align 8, !dbg !9521
  %71 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !9522
  %pntsv = getelementptr inbounds %struct.Nurb, %struct.Nurb* %71, i32 0, i32 7, !dbg !9523
  %72 = load i32, i32* %pntsv, align 4, !dbg !9523
  %mul30 = mul nsw i32 %70, %72, !dbg !9524
  %73 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !9525
  %bp = getelementptr inbounds %struct.Nurb, %struct.Nurb* %73, i32 0, i32 17, !dbg !9526
  %74 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !9526
  %75 = bitcast %struct.BPoint* %74 to i8*, !dbg !9525
  call void @writestruct(%struct.WriteData* %68, i32 1096040772, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.126, i64 0, i64 0), i32 %mul30, i8* %75), !dbg !9527
  %76 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !9528
  %knotsu = getelementptr inbounds %struct.Nurb, %struct.Nurb* %76, i32 0, i32 15, !dbg !9530
  %77 = load float*, float** %knotsu, align 8, !dbg !9530
  %tobool31 = icmp ne float* %77, null, !dbg !9528
  br i1 %tobool31, label %if.then32, label %if.end45, !dbg !9531

if.then32:                                        ; preds = %if.else28
  %78 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !9532
  %79 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !9533
  %orderu = getelementptr inbounds %struct.Nurb, %struct.Nurb* %79, i32 0, i32 11, !dbg !9533
  %80 = load i16, i16* %orderu, align 8, !dbg !9533
  %conv33 = sext i16 %80 to i32, !dbg !9533
  %81 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !9533
  %pntsu34 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %81, i32 0, i32 6, !dbg !9533
  %82 = load i32, i32* %pntsu34, align 8, !dbg !9533
  %add35 = add nsw i32 %conv33, %82, !dbg !9533
  %83 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !9533
  %flagu = getelementptr inbounds %struct.Nurb, %struct.Nurb* %83, i32 0, i32 13, !dbg !9533
  %84 = load i16, i16* %flagu, align 4, !dbg !9533
  %conv36 = sext i16 %84 to i32, !dbg !9533
  %and = and i32 %conv36, 1, !dbg !9533
  %tobool37 = icmp ne i32 %and, 0, !dbg !9533
  br i1 %tobool37, label %cond.true, label %cond.false, !dbg !9533

cond.true:                                        ; preds = %if.then32
  %85 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !9533
  %orderu38 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %85, i32 0, i32 11, !dbg !9533
  %86 = load i16, i16* %orderu38, align 8, !dbg !9533
  %conv39 = sext i16 %86 to i32, !dbg !9533
  %sub = sub nsw i32 %conv39, 1, !dbg !9533
  br label %cond.end, !dbg !9533

cond.false:                                       ; preds = %if.then32
  br label %cond.end, !dbg !9533

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %sub, %cond.true ], [ 0, %cond.false ], !dbg !9533
  %add40 = add nsw i32 %add35, %cond, !dbg !9533
  %conv41 = sext i32 %add40 to i64, !dbg !9533
  %mul42 = mul i64 %conv41, 4, !dbg !9534
  %conv43 = trunc i64 %mul42 to i32, !dbg !9533
  %87 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !9535
  %knotsu44 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %87, i32 0, i32 15, !dbg !9536
  %88 = load float*, float** %knotsu44, align 8, !dbg !9536
  %89 = bitcast float* %88 to i8*, !dbg !9535
  call void @writedata(%struct.WriteData* %78, i32 1096040772, i32 %conv43, i8* %89), !dbg !9537
  br label %if.end45, !dbg !9537

if.end45:                                         ; preds = %cond.end, %if.else28
  %90 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !9538
  %knotsv = getelementptr inbounds %struct.Nurb, %struct.Nurb* %90, i32 0, i32 16, !dbg !9540
  %91 = load float*, float** %knotsv, align 8, !dbg !9540
  %tobool46 = icmp ne float* %91, null, !dbg !9538
  br i1 %tobool46, label %if.then47, label %if.end66, !dbg !9541

if.then47:                                        ; preds = %if.end45
  %92 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !9542
  %93 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !9543
  %orderv = getelementptr inbounds %struct.Nurb, %struct.Nurb* %93, i32 0, i32 12, !dbg !9543
  %94 = load i16, i16* %orderv, align 2, !dbg !9543
  %conv48 = sext i16 %94 to i32, !dbg !9543
  %95 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !9543
  %pntsv49 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %95, i32 0, i32 7, !dbg !9543
  %96 = load i32, i32* %pntsv49, align 4, !dbg !9543
  %add50 = add nsw i32 %conv48, %96, !dbg !9543
  %97 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !9543
  %flagv = getelementptr inbounds %struct.Nurb, %struct.Nurb* %97, i32 0, i32 14, !dbg !9543
  %98 = load i16, i16* %flagv, align 2, !dbg !9543
  %conv51 = sext i16 %98 to i32, !dbg !9543
  %and52 = and i32 %conv51, 1, !dbg !9543
  %tobool53 = icmp ne i32 %and52, 0, !dbg !9543
  br i1 %tobool53, label %cond.true54, label %cond.false58, !dbg !9543

cond.true54:                                      ; preds = %if.then47
  %99 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !9543
  %orderv55 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %99, i32 0, i32 12, !dbg !9543
  %100 = load i16, i16* %orderv55, align 2, !dbg !9543
  %conv56 = sext i16 %100 to i32, !dbg !9543
  %sub57 = sub nsw i32 %conv56, 1, !dbg !9543
  br label %cond.end59, !dbg !9543

cond.false58:                                     ; preds = %if.then47
  br label %cond.end59, !dbg !9543

cond.end59:                                       ; preds = %cond.false58, %cond.true54
  %cond60 = phi i32 [ %sub57, %cond.true54 ], [ 0, %cond.false58 ], !dbg !9543
  %add61 = add nsw i32 %add50, %cond60, !dbg !9543
  %conv62 = sext i32 %add61 to i64, !dbg !9543
  %mul63 = mul i64 %conv62, 4, !dbg !9544
  %conv64 = trunc i64 %mul63 to i32, !dbg !9543
  %101 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !9545
  %knotsv65 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %101, i32 0, i32 16, !dbg !9546
  %102 = load float*, float** %knotsv65, align 8, !dbg !9546
  %103 = bitcast float* %102 to i8*, !dbg !9545
  call void @writedata(%struct.WriteData* %92, i32 1096040772, i32 %conv64, i8* %103), !dbg !9547
  br label %if.end66, !dbg !9547

if.end66:                                         ; preds = %cond.end59, %if.end45
  br label %if.end67

if.end67:                                         ; preds = %if.end66, %if.then27
  %104 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !9548
  %next68 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %104, i32 0, i32 0, !dbg !9549
  %105 = load %struct.Nurb*, %struct.Nurb** %next68, align 8, !dbg !9549
  store %struct.Nurb* %105, %struct.Nurb** %nu, align 8, !dbg !9550
  br label %while.cond21, !dbg !9504, !llvm.loop !9551

while.end69:                                      ; preds = %while.cond21
  br label %if.end70

if.end70:                                         ; preds = %while.end69, %if.then13
  br label %if.end71, !dbg !9553

if.end71:                                         ; preds = %if.end70, %lor.lhs.false
  %106 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !9554
  %id72 = getelementptr inbounds %struct.Curve, %struct.Curve* %106, i32 0, i32 0, !dbg !9555
  %next73 = getelementptr inbounds %struct.ID, %struct.ID* %id72, i32 0, i32 0, !dbg !9556
  %107 = load i8*, i8** %next73, align 8, !dbg !9556
  %108 = bitcast i8* %107 to %struct.Curve*, !dbg !9554
  store %struct.Curve* %108, %struct.Curve** %cu, align 8, !dbg !9557
  br label %while.cond, !dbg !9416, !llvm.loop !9558

while.end74:                                      ; preds = %while.cond
  %109 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !9560
  call void @mywrite(%struct.WriteData* %109, i8* null, i32 0), !dbg !9561
  ret void, !dbg !9562
}

; Function Attrs: noinline nounwind uwtable
define internal void @write_mballs(%struct.WriteData* %wd, %struct.ListBase* %idbase) #0 !dbg !9563 {
entry:
  %wd.addr = alloca %struct.WriteData*, align 8
  %idbase.addr = alloca %struct.ListBase*, align 8
  %mb = alloca %struct.MetaBall*, align 8
  %ml = alloca %struct.MetaElem*, align 8
  store %struct.WriteData* %wd, %struct.WriteData** %wd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WriteData** %wd.addr, metadata !9564, metadata !DIExpression()), !dbg !9565
  store %struct.ListBase* %idbase, %struct.ListBase** %idbase.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %idbase.addr, metadata !9566, metadata !DIExpression()), !dbg !9567
  call void @llvm.dbg.declare(metadata %struct.MetaBall** %mb, metadata !9568, metadata !DIExpression()), !dbg !9618
  call void @llvm.dbg.declare(metadata %struct.MetaElem** %ml, metadata !9619, metadata !DIExpression()), !dbg !9620
  %0 = load %struct.ListBase*, %struct.ListBase** %idbase.addr, align 8, !dbg !9621
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %0, i32 0, i32 0, !dbg !9622
  %1 = load i8*, i8** %first, align 8, !dbg !9622
  %2 = bitcast i8* %1 to %struct.MetaBall*, !dbg !9621
  store %struct.MetaBall* %2, %struct.MetaBall** %mb, align 8, !dbg !9623
  br label %while.cond, !dbg !9624

while.cond:                                       ; preds = %if.end16, %entry
  %3 = load %struct.MetaBall*, %struct.MetaBall** %mb, align 8, !dbg !9625
  %tobool = icmp ne %struct.MetaBall* %3, null, !dbg !9624
  br i1 %tobool, label %while.body, label %while.end19, !dbg !9624

while.body:                                       ; preds = %while.cond
  %4 = load %struct.MetaBall*, %struct.MetaBall** %mb, align 8, !dbg !9626
  %id = getelementptr inbounds %struct.MetaBall, %struct.MetaBall* %4, i32 0, i32 0, !dbg !9629
  %us = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 6, !dbg !9630
  %5 = load i32, i32* %us, align 4, !dbg !9630
  %cmp = icmp sgt i32 %5, 0, !dbg !9631
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !9632

lor.lhs.false:                                    ; preds = %while.body
  %6 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !9633
  %current = getelementptr inbounds %struct.WriteData, %struct.WriteData* %6, i32 0, i32 4, !dbg !9634
  %7 = load %struct.MemFile*, %struct.MemFile** %current, align 8, !dbg !9634
  %tobool1 = icmp ne %struct.MemFile* %7, null, !dbg !9633
  br i1 %tobool1, label %if.then, label %if.end16, !dbg !9635

if.then:                                          ; preds = %lor.lhs.false, %while.body
  %8 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !9636
  %9 = load %struct.MetaBall*, %struct.MetaBall** %mb, align 8, !dbg !9638
  %10 = bitcast %struct.MetaBall* %9 to i8*, !dbg !9638
  call void @writestruct(%struct.WriteData* %8, i32 16973, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.127, i64 0, i64 0), i32 1, i8* %10), !dbg !9639
  %11 = load %struct.MetaBall*, %struct.MetaBall** %mb, align 8, !dbg !9640
  %id2 = getelementptr inbounds %struct.MetaBall, %struct.MetaBall* %11, i32 0, i32 0, !dbg !9642
  %properties = getelementptr inbounds %struct.ID, %struct.ID* %id2, i32 0, i32 9, !dbg !9643
  %12 = load %struct.IDProperty*, %struct.IDProperty** %properties, align 8, !dbg !9643
  %tobool3 = icmp ne %struct.IDProperty* %12, null, !dbg !9640
  br i1 %tobool3, label %if.then4, label %if.end, !dbg !9644

if.then4:                                         ; preds = %if.then
  %13 = load %struct.MetaBall*, %struct.MetaBall** %mb, align 8, !dbg !9645
  %id5 = getelementptr inbounds %struct.MetaBall, %struct.MetaBall* %13, i32 0, i32 0, !dbg !9646
  %properties6 = getelementptr inbounds %struct.ID, %struct.ID* %id5, i32 0, i32 9, !dbg !9647
  %14 = load %struct.IDProperty*, %struct.IDProperty** %properties6, align 8, !dbg !9647
  %15 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !9648
  %16 = bitcast %struct.WriteData* %15 to i8*, !dbg !9648
  call void @IDP_WriteProperty(%struct.IDProperty* %14, i8* %16), !dbg !9649
  br label %if.end, !dbg !9649

if.end:                                           ; preds = %if.then4, %if.then
  %17 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !9650
  %18 = load %struct.MetaBall*, %struct.MetaBall** %mb, align 8, !dbg !9651
  %totcol = getelementptr inbounds %struct.MetaBall, %struct.MetaBall* %18, i32 0, i32 9, !dbg !9652
  %19 = load i16, i16* %totcol, align 2, !dbg !9652
  %conv = sext i16 %19 to i64, !dbg !9651
  %mul = mul i64 8, %conv, !dbg !9653
  %conv7 = trunc i64 %mul to i32, !dbg !9654
  %20 = load %struct.MetaBall*, %struct.MetaBall** %mb, align 8, !dbg !9655
  %mat = getelementptr inbounds %struct.MetaBall, %struct.MetaBall* %20, i32 0, i32 6, !dbg !9656
  %21 = load %struct.Material**, %struct.Material*** %mat, align 8, !dbg !9656
  %22 = bitcast %struct.Material** %21 to i8*, !dbg !9655
  call void @writedata(%struct.WriteData* %17, i32 1096040772, i32 %conv7, i8* %22), !dbg !9657
  %23 = load %struct.MetaBall*, %struct.MetaBall** %mb, align 8, !dbg !9658
  %adt = getelementptr inbounds %struct.MetaBall, %struct.MetaBall* %23, i32 0, i32 1, !dbg !9660
  %24 = load %struct.AnimData*, %struct.AnimData** %adt, align 8, !dbg !9660
  %tobool8 = icmp ne %struct.AnimData* %24, null, !dbg !9658
  br i1 %tobool8, label %if.then9, label %if.end11, !dbg !9661

if.then9:                                         ; preds = %if.end
  %25 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !9662
  %26 = load %struct.MetaBall*, %struct.MetaBall** %mb, align 8, !dbg !9663
  %adt10 = getelementptr inbounds %struct.MetaBall, %struct.MetaBall* %26, i32 0, i32 1, !dbg !9664
  %27 = load %struct.AnimData*, %struct.AnimData** %adt10, align 8, !dbg !9664
  call void @write_animdata(%struct.WriteData* %25, %struct.AnimData* %27), !dbg !9665
  br label %if.end11, !dbg !9665

if.end11:                                         ; preds = %if.then9, %if.end
  %28 = load %struct.MetaBall*, %struct.MetaBall** %mb, align 8, !dbg !9666
  %elems = getelementptr inbounds %struct.MetaBall, %struct.MetaBall* %28, i32 0, i32 2, !dbg !9667
  %first12 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %elems, i32 0, i32 0, !dbg !9668
  %29 = load i8*, i8** %first12, align 8, !dbg !9668
  %30 = bitcast i8* %29 to %struct.MetaElem*, !dbg !9666
  store %struct.MetaElem* %30, %struct.MetaElem** %ml, align 8, !dbg !9669
  br label %while.cond13, !dbg !9670

while.cond13:                                     ; preds = %while.body15, %if.end11
  %31 = load %struct.MetaElem*, %struct.MetaElem** %ml, align 8, !dbg !9671
  %tobool14 = icmp ne %struct.MetaElem* %31, null, !dbg !9670
  br i1 %tobool14, label %while.body15, label %while.end, !dbg !9670

while.body15:                                     ; preds = %while.cond13
  %32 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !9672
  %33 = load %struct.MetaElem*, %struct.MetaElem** %ml, align 8, !dbg !9674
  %34 = bitcast %struct.MetaElem* %33 to i8*, !dbg !9674
  call void @writestruct(%struct.WriteData* %32, i32 1096040772, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.128, i64 0, i64 0), i32 1, i8* %34), !dbg !9675
  %35 = load %struct.MetaElem*, %struct.MetaElem** %ml, align 8, !dbg !9676
  %next = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %35, i32 0, i32 0, !dbg !9677
  %36 = load %struct.MetaElem*, %struct.MetaElem** %next, align 8, !dbg !9677
  store %struct.MetaElem* %36, %struct.MetaElem** %ml, align 8, !dbg !9678
  br label %while.cond13, !dbg !9670, !llvm.loop !9679

while.end:                                        ; preds = %while.cond13
  br label %if.end16, !dbg !9681

if.end16:                                         ; preds = %while.end, %lor.lhs.false
  %37 = load %struct.MetaBall*, %struct.MetaBall** %mb, align 8, !dbg !9682
  %id17 = getelementptr inbounds %struct.MetaBall, %struct.MetaBall* %37, i32 0, i32 0, !dbg !9683
  %next18 = getelementptr inbounds %struct.ID, %struct.ID* %id17, i32 0, i32 0, !dbg !9684
  %38 = load i8*, i8** %next18, align 8, !dbg !9684
  %39 = bitcast i8* %38 to %struct.MetaBall*, !dbg !9682
  store %struct.MetaBall* %39, %struct.MetaBall** %mb, align 8, !dbg !9685
  br label %while.cond, !dbg !9624, !llvm.loop !9686

while.end19:                                      ; preds = %while.cond
  ret void, !dbg !9688
}

; Function Attrs: noinline nounwind uwtable
define internal void @write_images(%struct.WriteData* %wd, %struct.ListBase* %idbase) #0 !dbg !9689 {
entry:
  %wd.addr = alloca %struct.WriteData*, align 8
  %idbase.addr = alloca %struct.ListBase*, align 8
  %ima = alloca %struct.Image*, align 8
  %pf = alloca %struct.PackedFile*, align 8
  store %struct.WriteData* %wd, %struct.WriteData** %wd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WriteData** %wd.addr, metadata !9690, metadata !DIExpression()), !dbg !9691
  store %struct.ListBase* %idbase, %struct.ListBase** %idbase.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %idbase.addr, metadata !9692, metadata !DIExpression()), !dbg !9693
  call void @llvm.dbg.declare(metadata %struct.Image** %ima, metadata !9694, metadata !DIExpression()), !dbg !9697
  call void @llvm.dbg.declare(metadata %struct.PackedFile** %pf, metadata !9698, metadata !DIExpression()), !dbg !9701
  %0 = load %struct.ListBase*, %struct.ListBase** %idbase.addr, align 8, !dbg !9702
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %0, i32 0, i32 0, !dbg !9703
  %1 = load i8*, i8** %first, align 8, !dbg !9703
  %2 = bitcast i8* %1 to %struct.Image*, !dbg !9702
  store %struct.Image* %2, %struct.Image** %ima, align 8, !dbg !9704
  br label %while.cond, !dbg !9705

while.cond:                                       ; preds = %if.end11, %entry
  %3 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !9706
  %tobool = icmp ne %struct.Image* %3, null, !dbg !9705
  br i1 %tobool, label %while.body, label %while.end, !dbg !9705

while.body:                                       ; preds = %while.cond
  %4 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !9707
  %id = getelementptr inbounds %struct.Image, %struct.Image* %4, i32 0, i32 0, !dbg !9710
  %us = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 6, !dbg !9711
  %5 = load i32, i32* %us, align 4, !dbg !9711
  %cmp = icmp sgt i32 %5, 0, !dbg !9712
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !9713

lor.lhs.false:                                    ; preds = %while.body
  %6 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !9714
  %current = getelementptr inbounds %struct.WriteData, %struct.WriteData* %6, i32 0, i32 4, !dbg !9715
  %7 = load %struct.MemFile*, %struct.MemFile** %current, align 8, !dbg !9715
  %tobool1 = icmp ne %struct.MemFile* %7, null, !dbg !9714
  br i1 %tobool1, label %if.then, label %if.end11, !dbg !9716

if.then:                                          ; preds = %lor.lhs.false, %while.body
  %8 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !9717
  %9 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !9719
  %10 = bitcast %struct.Image* %9 to i8*, !dbg !9719
  call void @writestruct(%struct.WriteData* %8, i32 19785, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.129, i64 0, i64 0), i32 1, i8* %10), !dbg !9720
  %11 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !9721
  %id2 = getelementptr inbounds %struct.Image, %struct.Image* %11, i32 0, i32 0, !dbg !9723
  %properties = getelementptr inbounds %struct.ID, %struct.ID* %id2, i32 0, i32 9, !dbg !9724
  %12 = load %struct.IDProperty*, %struct.IDProperty** %properties, align 8, !dbg !9724
  %tobool3 = icmp ne %struct.IDProperty* %12, null, !dbg !9721
  br i1 %tobool3, label %if.then4, label %if.end, !dbg !9725

if.then4:                                         ; preds = %if.then
  %13 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !9726
  %id5 = getelementptr inbounds %struct.Image, %struct.Image* %13, i32 0, i32 0, !dbg !9727
  %properties6 = getelementptr inbounds %struct.ID, %struct.ID* %id5, i32 0, i32 9, !dbg !9728
  %14 = load %struct.IDProperty*, %struct.IDProperty** %properties6, align 8, !dbg !9728
  %15 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !9729
  %16 = bitcast %struct.WriteData* %15 to i8*, !dbg !9729
  call void @IDP_WriteProperty(%struct.IDProperty* %14, i8* %16), !dbg !9730
  br label %if.end, !dbg !9730

if.end:                                           ; preds = %if.then4, %if.then
  %17 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !9731
  %packedfile = getelementptr inbounds %struct.Image, %struct.Image* %17, i32 0, i32 22, !dbg !9733
  %18 = load %struct.PackedFile*, %struct.PackedFile** %packedfile, align 8, !dbg !9733
  %tobool7 = icmp ne %struct.PackedFile* %18, null, !dbg !9731
  br i1 %tobool7, label %if.then8, label %if.end10, !dbg !9734

if.then8:                                         ; preds = %if.end
  %19 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !9735
  %packedfile9 = getelementptr inbounds %struct.Image, %struct.Image* %19, i32 0, i32 22, !dbg !9737
  %20 = load %struct.PackedFile*, %struct.PackedFile** %packedfile9, align 8, !dbg !9737
  store %struct.PackedFile* %20, %struct.PackedFile** %pf, align 8, !dbg !9738
  %21 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !9739
  %22 = load %struct.PackedFile*, %struct.PackedFile** %pf, align 8, !dbg !9740
  %23 = bitcast %struct.PackedFile* %22 to i8*, !dbg !9740
  call void @writestruct(%struct.WriteData* %21, i32 1096040772, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.130, i64 0, i64 0), i32 1, i8* %23), !dbg !9741
  %24 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !9742
  %25 = load %struct.PackedFile*, %struct.PackedFile** %pf, align 8, !dbg !9743
  %size = getelementptr inbounds %struct.PackedFile, %struct.PackedFile* %25, i32 0, i32 0, !dbg !9744
  %26 = load i32, i32* %size, align 8, !dbg !9744
  %27 = load %struct.PackedFile*, %struct.PackedFile** %pf, align 8, !dbg !9745
  %data = getelementptr inbounds %struct.PackedFile, %struct.PackedFile* %27, i32 0, i32 2, !dbg !9746
  %28 = load i8*, i8** %data, align 8, !dbg !9746
  call void @writedata(%struct.WriteData* %24, i32 1096040772, i32 %26, i8* %28), !dbg !9747
  br label %if.end10, !dbg !9748

if.end10:                                         ; preds = %if.then8, %if.end
  %29 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !9749
  %30 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !9750
  %preview = getelementptr inbounds %struct.Image, %struct.Image* %30, i32 0, i32 23, !dbg !9751
  %31 = load %struct.PreviewImage*, %struct.PreviewImage** %preview, align 8, !dbg !9751
  call void @write_previews(%struct.WriteData* %29, %struct.PreviewImage* %31), !dbg !9752
  br label %if.end11, !dbg !9753

if.end11:                                         ; preds = %if.end10, %lor.lhs.false
  %32 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !9754
  %id12 = getelementptr inbounds %struct.Image, %struct.Image* %32, i32 0, i32 0, !dbg !9755
  %next = getelementptr inbounds %struct.ID, %struct.ID* %id12, i32 0, i32 0, !dbg !9756
  %33 = load i8*, i8** %next, align 8, !dbg !9756
  %34 = bitcast i8* %33 to %struct.Image*, !dbg !9754
  store %struct.Image* %34, %struct.Image** %ima, align 8, !dbg !9757
  br label %while.cond, !dbg !9705, !llvm.loop !9758

while.end:                                        ; preds = %while.cond
  %35 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !9760
  call void @mywrite(%struct.WriteData* %35, i8* null, i32 0), !dbg !9761
  ret void, !dbg !9762
}

; Function Attrs: noinline nounwind uwtable
define internal void @write_cameras(%struct.WriteData* %wd, %struct.ListBase* %idbase) #0 !dbg !9763 {
entry:
  %wd.addr = alloca %struct.WriteData*, align 8
  %idbase.addr = alloca %struct.ListBase*, align 8
  %cam = alloca %struct.Camera*, align 8
  store %struct.WriteData* %wd, %struct.WriteData** %wd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WriteData** %wd.addr, metadata !9764, metadata !DIExpression()), !dbg !9765
  store %struct.ListBase* %idbase, %struct.ListBase** %idbase.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %idbase.addr, metadata !9766, metadata !DIExpression()), !dbg !9767
  call void @llvm.dbg.declare(metadata %struct.Camera** %cam, metadata !9768, metadata !DIExpression()), !dbg !9794
  %0 = load %struct.ListBase*, %struct.ListBase** %idbase.addr, align 8, !dbg !9795
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %0, i32 0, i32 0, !dbg !9796
  %1 = load i8*, i8** %first, align 8, !dbg !9796
  %2 = bitcast i8* %1 to %struct.Camera*, !dbg !9795
  store %struct.Camera* %2, %struct.Camera** %cam, align 8, !dbg !9797
  br label %while.cond, !dbg !9798

while.cond:                                       ; preds = %if.end11, %entry
  %3 = load %struct.Camera*, %struct.Camera** %cam, align 8, !dbg !9799
  %tobool = icmp ne %struct.Camera* %3, null, !dbg !9798
  br i1 %tobool, label %while.body, label %while.end, !dbg !9798

while.body:                                       ; preds = %while.cond
  %4 = load %struct.Camera*, %struct.Camera** %cam, align 8, !dbg !9800
  %id = getelementptr inbounds %struct.Camera, %struct.Camera* %4, i32 0, i32 0, !dbg !9803
  %us = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 6, !dbg !9804
  %5 = load i32, i32* %us, align 4, !dbg !9804
  %cmp = icmp sgt i32 %5, 0, !dbg !9805
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !9806

lor.lhs.false:                                    ; preds = %while.body
  %6 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !9807
  %current = getelementptr inbounds %struct.WriteData, %struct.WriteData* %6, i32 0, i32 4, !dbg !9808
  %7 = load %struct.MemFile*, %struct.MemFile** %current, align 8, !dbg !9808
  %tobool1 = icmp ne %struct.MemFile* %7, null, !dbg !9807
  br i1 %tobool1, label %if.then, label %if.end11, !dbg !9809

if.then:                                          ; preds = %lor.lhs.false, %while.body
  %8 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !9810
  %9 = load %struct.Camera*, %struct.Camera** %cam, align 8, !dbg !9812
  %10 = bitcast %struct.Camera* %9 to i8*, !dbg !9812
  call void @writestruct(%struct.WriteData* %8, i32 16707, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.132, i64 0, i64 0), i32 1, i8* %10), !dbg !9813
  %11 = load %struct.Camera*, %struct.Camera** %cam, align 8, !dbg !9814
  %id2 = getelementptr inbounds %struct.Camera, %struct.Camera* %11, i32 0, i32 0, !dbg !9816
  %properties = getelementptr inbounds %struct.ID, %struct.ID* %id2, i32 0, i32 9, !dbg !9817
  %12 = load %struct.IDProperty*, %struct.IDProperty** %properties, align 8, !dbg !9817
  %tobool3 = icmp ne %struct.IDProperty* %12, null, !dbg !9814
  br i1 %tobool3, label %if.then4, label %if.end, !dbg !9818

if.then4:                                         ; preds = %if.then
  %13 = load %struct.Camera*, %struct.Camera** %cam, align 8, !dbg !9819
  %id5 = getelementptr inbounds %struct.Camera, %struct.Camera* %13, i32 0, i32 0, !dbg !9820
  %properties6 = getelementptr inbounds %struct.ID, %struct.ID* %id5, i32 0, i32 9, !dbg !9821
  %14 = load %struct.IDProperty*, %struct.IDProperty** %properties6, align 8, !dbg !9821
  %15 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !9822
  %16 = bitcast %struct.WriteData* %15 to i8*, !dbg !9822
  call void @IDP_WriteProperty(%struct.IDProperty* %14, i8* %16), !dbg !9823
  br label %if.end, !dbg !9823

if.end:                                           ; preds = %if.then4, %if.then
  %17 = load %struct.Camera*, %struct.Camera** %cam, align 8, !dbg !9824
  %adt = getelementptr inbounds %struct.Camera, %struct.Camera* %17, i32 0, i32 1, !dbg !9826
  %18 = load %struct.AnimData*, %struct.AnimData** %adt, align 8, !dbg !9826
  %tobool7 = icmp ne %struct.AnimData* %18, null, !dbg !9824
  br i1 %tobool7, label %if.then8, label %if.end10, !dbg !9827

if.then8:                                         ; preds = %if.end
  %19 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !9828
  %20 = load %struct.Camera*, %struct.Camera** %cam, align 8, !dbg !9829
  %adt9 = getelementptr inbounds %struct.Camera, %struct.Camera* %20, i32 0, i32 1, !dbg !9830
  %21 = load %struct.AnimData*, %struct.AnimData** %adt9, align 8, !dbg !9830
  call void @write_animdata(%struct.WriteData* %19, %struct.AnimData* %21), !dbg !9831
  br label %if.end10, !dbg !9831

if.end10:                                         ; preds = %if.then8, %if.end
  br label %if.end11, !dbg !9832

if.end11:                                         ; preds = %if.end10, %lor.lhs.false
  %22 = load %struct.Camera*, %struct.Camera** %cam, align 8, !dbg !9833
  %id12 = getelementptr inbounds %struct.Camera, %struct.Camera* %22, i32 0, i32 0, !dbg !9834
  %next = getelementptr inbounds %struct.ID, %struct.ID* %id12, i32 0, i32 0, !dbg !9835
  %23 = load i8*, i8** %next, align 8, !dbg !9835
  %24 = bitcast i8* %23 to %struct.Camera*, !dbg !9833
  store %struct.Camera* %24, %struct.Camera** %cam, align 8, !dbg !9836
  br label %while.cond, !dbg !9798, !llvm.loop !9837

while.end:                                        ; preds = %while.cond
  ret void, !dbg !9839
}

; Function Attrs: noinline nounwind uwtable
define internal void @write_lamps(%struct.WriteData* %wd, %struct.ListBase* %idbase) #0 !dbg !9840 {
entry:
  %wd.addr = alloca %struct.WriteData*, align 8
  %idbase.addr = alloca %struct.ListBase*, align 8
  %la = alloca %struct.Lamp*, align 8
  %a = alloca i32, align 4
  store %struct.WriteData* %wd, %struct.WriteData** %wd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WriteData** %wd.addr, metadata !9841, metadata !DIExpression()), !dbg !9842
  store %struct.ListBase* %idbase, %struct.ListBase** %idbase.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %idbase.addr, metadata !9843, metadata !DIExpression()), !dbg !9844
  call void @llvm.dbg.declare(metadata %struct.Lamp** %la, metadata !9845, metadata !DIExpression()), !dbg !9846
  call void @llvm.dbg.declare(metadata i32* %a, metadata !9847, metadata !DIExpression()), !dbg !9848
  %0 = load %struct.ListBase*, %struct.ListBase** %idbase.addr, align 8, !dbg !9849
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %0, i32 0, i32 0, !dbg !9850
  %1 = load i8*, i8** %first, align 8, !dbg !9850
  %2 = bitcast i8* %1 to %struct.Lamp*, !dbg !9849
  store %struct.Lamp* %2, %struct.Lamp** %la, align 8, !dbg !9851
  br label %while.cond, !dbg !9852

while.cond:                                       ; preds = %if.end27, %entry
  %3 = load %struct.Lamp*, %struct.Lamp** %la, align 8, !dbg !9853
  %tobool = icmp ne %struct.Lamp* %3, null, !dbg !9852
  br i1 %tobool, label %while.body, label %while.end, !dbg !9852

while.body:                                       ; preds = %while.cond
  %4 = load %struct.Lamp*, %struct.Lamp** %la, align 8, !dbg !9854
  %id = getelementptr inbounds %struct.Lamp, %struct.Lamp* %4, i32 0, i32 0, !dbg !9857
  %us = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 6, !dbg !9858
  %5 = load i32, i32* %us, align 4, !dbg !9858
  %cmp = icmp sgt i32 %5, 0, !dbg !9859
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !9860

lor.lhs.false:                                    ; preds = %while.body
  %6 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !9861
  %current = getelementptr inbounds %struct.WriteData, %struct.WriteData* %6, i32 0, i32 4, !dbg !9862
  %7 = load %struct.MemFile*, %struct.MemFile** %current, align 8, !dbg !9862
  %tobool1 = icmp ne %struct.MemFile* %7, null, !dbg !9861
  br i1 %tobool1, label %if.then, label %if.end27, !dbg !9863

if.then:                                          ; preds = %lor.lhs.false, %while.body
  %8 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !9864
  %9 = load %struct.Lamp*, %struct.Lamp** %la, align 8, !dbg !9866
  %10 = bitcast %struct.Lamp* %9 to i8*, !dbg !9866
  call void @writestruct(%struct.WriteData* %8, i32 16716, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.133, i64 0, i64 0), i32 1, i8* %10), !dbg !9867
  %11 = load %struct.Lamp*, %struct.Lamp** %la, align 8, !dbg !9868
  %id2 = getelementptr inbounds %struct.Lamp, %struct.Lamp* %11, i32 0, i32 0, !dbg !9870
  %properties = getelementptr inbounds %struct.ID, %struct.ID* %id2, i32 0, i32 9, !dbg !9871
  %12 = load %struct.IDProperty*, %struct.IDProperty** %properties, align 8, !dbg !9871
  %tobool3 = icmp ne %struct.IDProperty* %12, null, !dbg !9868
  br i1 %tobool3, label %if.then4, label %if.end, !dbg !9872

if.then4:                                         ; preds = %if.then
  %13 = load %struct.Lamp*, %struct.Lamp** %la, align 8, !dbg !9873
  %id5 = getelementptr inbounds %struct.Lamp, %struct.Lamp* %13, i32 0, i32 0, !dbg !9874
  %properties6 = getelementptr inbounds %struct.ID, %struct.ID* %id5, i32 0, i32 9, !dbg !9875
  %14 = load %struct.IDProperty*, %struct.IDProperty** %properties6, align 8, !dbg !9875
  %15 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !9876
  %16 = bitcast %struct.WriteData* %15 to i8*, !dbg !9876
  call void @IDP_WriteProperty(%struct.IDProperty* %14, i8* %16), !dbg !9877
  br label %if.end, !dbg !9877

if.end:                                           ; preds = %if.then4, %if.then
  %17 = load %struct.Lamp*, %struct.Lamp** %la, align 8, !dbg !9878
  %adt = getelementptr inbounds %struct.Lamp, %struct.Lamp* %17, i32 0, i32 1, !dbg !9880
  %18 = load %struct.AnimData*, %struct.AnimData** %adt, align 8, !dbg !9880
  %tobool7 = icmp ne %struct.AnimData* %18, null, !dbg !9878
  br i1 %tobool7, label %if.then8, label %if.end10, !dbg !9881

if.then8:                                         ; preds = %if.end
  %19 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !9882
  %20 = load %struct.Lamp*, %struct.Lamp** %la, align 8, !dbg !9883
  %adt9 = getelementptr inbounds %struct.Lamp, %struct.Lamp* %20, i32 0, i32 1, !dbg !9884
  %21 = load %struct.AnimData*, %struct.AnimData** %adt9, align 8, !dbg !9884
  call void @write_animdata(%struct.WriteData* %19, %struct.AnimData* %21), !dbg !9885
  br label %if.end10, !dbg !9885

if.end10:                                         ; preds = %if.then8, %if.end
  store i32 0, i32* %a, align 4, !dbg !9886
  br label %for.cond, !dbg !9888

for.cond:                                         ; preds = %for.inc, %if.end10
  %22 = load i32, i32* %a, align 4, !dbg !9889
  %cmp11 = icmp slt i32 %22, 18, !dbg !9891
  br i1 %cmp11, label %for.body, label %for.end, !dbg !9892

for.body:                                         ; preds = %for.cond
  %23 = load %struct.Lamp*, %struct.Lamp** %la, align 8, !dbg !9893
  %mtex = getelementptr inbounds %struct.Lamp, %struct.Lamp* %23, i32 0, i32 69, !dbg !9896
  %24 = load i32, i32* %a, align 4, !dbg !9897
  %idxprom = sext i32 %24 to i64, !dbg !9893
  %arrayidx = getelementptr inbounds [18 x %struct.MTex*], [18 x %struct.MTex*]* %mtex, i64 0, i64 %idxprom, !dbg !9893
  %25 = load %struct.MTex*, %struct.MTex** %arrayidx, align 8, !dbg !9893
  %tobool12 = icmp ne %struct.MTex* %25, null, !dbg !9893
  br i1 %tobool12, label %if.then13, label %if.end17, !dbg !9898

if.then13:                                        ; preds = %for.body
  %26 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !9899
  %27 = load %struct.Lamp*, %struct.Lamp** %la, align 8, !dbg !9900
  %mtex14 = getelementptr inbounds %struct.Lamp, %struct.Lamp* %27, i32 0, i32 69, !dbg !9901
  %28 = load i32, i32* %a, align 4, !dbg !9902
  %idxprom15 = sext i32 %28 to i64, !dbg !9900
  %arrayidx16 = getelementptr inbounds [18 x %struct.MTex*], [18 x %struct.MTex*]* %mtex14, i64 0, i64 %idxprom15, !dbg !9900
  %29 = load %struct.MTex*, %struct.MTex** %arrayidx16, align 8, !dbg !9900
  %30 = bitcast %struct.MTex* %29 to i8*, !dbg !9900
  call void @writestruct(%struct.WriteData* %26, i32 1096040772, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.134, i64 0, i64 0), i32 1, i8* %30), !dbg !9903
  br label %if.end17, !dbg !9903

if.end17:                                         ; preds = %if.then13, %for.body
  br label %for.inc, !dbg !9904

for.inc:                                          ; preds = %if.end17
  %31 = load i32, i32* %a, align 4, !dbg !9905
  %inc = add nsw i32 %31, 1, !dbg !9905
  store i32 %inc, i32* %a, align 4, !dbg !9905
  br label %for.cond, !dbg !9906, !llvm.loop !9907

for.end:                                          ; preds = %for.cond
  %32 = load %struct.Lamp*, %struct.Lamp** %la, align 8, !dbg !9909
  %curfalloff = getelementptr inbounds %struct.Lamp, %struct.Lamp* %32, i32 0, i32 22, !dbg !9911
  %33 = load %struct.CurveMapping*, %struct.CurveMapping** %curfalloff, align 8, !dbg !9911
  %tobool18 = icmp ne %struct.CurveMapping* %33, null, !dbg !9909
  br i1 %tobool18, label %if.then19, label %if.end21, !dbg !9912

if.then19:                                        ; preds = %for.end
  %34 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !9913
  %35 = load %struct.Lamp*, %struct.Lamp** %la, align 8, !dbg !9914
  %curfalloff20 = getelementptr inbounds %struct.Lamp, %struct.Lamp* %35, i32 0, i32 22, !dbg !9915
  %36 = load %struct.CurveMapping*, %struct.CurveMapping** %curfalloff20, align 8, !dbg !9915
  call void @write_curvemapping(%struct.WriteData* %34, %struct.CurveMapping* %36), !dbg !9916
  br label %if.end21, !dbg !9916

if.end21:                                         ; preds = %if.then19, %for.end
  %37 = load %struct.Lamp*, %struct.Lamp** %la, align 8, !dbg !9917
  %nodetree = getelementptr inbounds %struct.Lamp, %struct.Lamp* %37, i32 0, i32 74, !dbg !9919
  %38 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree, align 8, !dbg !9919
  %tobool22 = icmp ne %struct.bNodeTree* %38, null, !dbg !9917
  br i1 %tobool22, label %if.then23, label %if.end26, !dbg !9920

if.then23:                                        ; preds = %if.end21
  %39 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !9921
  %40 = load %struct.Lamp*, %struct.Lamp** %la, align 8, !dbg !9923
  %nodetree24 = getelementptr inbounds %struct.Lamp, %struct.Lamp* %40, i32 0, i32 74, !dbg !9924
  %41 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree24, align 8, !dbg !9924
  %42 = bitcast %struct.bNodeTree* %41 to i8*, !dbg !9923
  call void @writestruct(%struct.WriteData* %39, i32 1096040772, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.105, i64 0, i64 0), i32 1, i8* %42), !dbg !9925
  %43 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !9926
  %44 = load %struct.Lamp*, %struct.Lamp** %la, align 8, !dbg !9927
  %nodetree25 = getelementptr inbounds %struct.Lamp, %struct.Lamp* %44, i32 0, i32 74, !dbg !9928
  %45 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree25, align 8, !dbg !9928
  call void @write_nodetree(%struct.WriteData* %43, %struct.bNodeTree* %45), !dbg !9929
  br label %if.end26, !dbg !9930

if.end26:                                         ; preds = %if.then23, %if.end21
  %46 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !9931
  %47 = load %struct.Lamp*, %struct.Lamp** %la, align 8, !dbg !9932
  %preview = getelementptr inbounds %struct.Lamp, %struct.Lamp* %47, i32 0, i32 73, !dbg !9933
  %48 = load %struct.PreviewImage*, %struct.PreviewImage** %preview, align 8, !dbg !9933
  call void @write_previews(%struct.WriteData* %46, %struct.PreviewImage* %48), !dbg !9934
  br label %if.end27, !dbg !9935

if.end27:                                         ; preds = %if.end26, %lor.lhs.false
  %49 = load %struct.Lamp*, %struct.Lamp** %la, align 8, !dbg !9936
  %id28 = getelementptr inbounds %struct.Lamp, %struct.Lamp* %49, i32 0, i32 0, !dbg !9937
  %next = getelementptr inbounds %struct.ID, %struct.ID* %id28, i32 0, i32 0, !dbg !9938
  %50 = load i8*, i8** %next, align 8, !dbg !9938
  %51 = bitcast i8* %50 to %struct.Lamp*, !dbg !9936
  store %struct.Lamp* %51, %struct.Lamp** %la, align 8, !dbg !9939
  br label %while.cond, !dbg !9852, !llvm.loop !9940

while.end:                                        ; preds = %while.cond
  ret void, !dbg !9942
}

; Function Attrs: noinline nounwind uwtable
define internal void @write_lattices(%struct.WriteData* %wd, %struct.ListBase* %idbase) #0 !dbg !9943 {
entry:
  %wd.addr = alloca %struct.WriteData*, align 8
  %idbase.addr = alloca %struct.ListBase*, align 8
  %lt = alloca %struct.Lattice*, align 8
  store %struct.WriteData* %wd, %struct.WriteData** %wd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WriteData** %wd.addr, metadata !9944, metadata !DIExpression()), !dbg !9945
  store %struct.ListBase* %idbase, %struct.ListBase** %idbase.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %idbase.addr, metadata !9946, metadata !DIExpression()), !dbg !9947
  call void @llvm.dbg.declare(metadata %struct.Lattice** %lt, metadata !9948, metadata !DIExpression()), !dbg !9989
  %0 = load %struct.ListBase*, %struct.ListBase** %idbase.addr, align 8, !dbg !9990
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %0, i32 0, i32 0, !dbg !9991
  %1 = load i8*, i8** %first, align 8, !dbg !9991
  %2 = bitcast i8* %1 to %struct.Lattice*, !dbg !9990
  store %struct.Lattice* %2, %struct.Lattice** %lt, align 8, !dbg !9992
  br label %while.cond, !dbg !9993

while.cond:                                       ; preds = %if.end22, %entry
  %3 = load %struct.Lattice*, %struct.Lattice** %lt, align 8, !dbg !9994
  %tobool = icmp ne %struct.Lattice* %3, null, !dbg !9993
  br i1 %tobool, label %while.body, label %while.end, !dbg !9993

while.body:                                       ; preds = %while.cond
  %4 = load %struct.Lattice*, %struct.Lattice** %lt, align 8, !dbg !9995
  %id = getelementptr inbounds %struct.Lattice, %struct.Lattice* %4, i32 0, i32 0, !dbg !9998
  %us = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 6, !dbg !9999
  %5 = load i32, i32* %us, align 4, !dbg !9999
  %cmp = icmp sgt i32 %5, 0, !dbg !10000
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !10001

lor.lhs.false:                                    ; preds = %while.body
  %6 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !10002
  %current = getelementptr inbounds %struct.WriteData, %struct.WriteData* %6, i32 0, i32 4, !dbg !10003
  %7 = load %struct.MemFile*, %struct.MemFile** %current, align 8, !dbg !10003
  %tobool1 = icmp ne %struct.MemFile* %7, null, !dbg !10002
  br i1 %tobool1, label %if.then, label %if.end22, !dbg !10004

if.then:                                          ; preds = %lor.lhs.false, %while.body
  %8 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !10005
  %9 = load %struct.Lattice*, %struct.Lattice** %lt, align 8, !dbg !10007
  %10 = bitcast %struct.Lattice* %9 to i8*, !dbg !10007
  call void @writestruct(%struct.WriteData* %8, i32 21580, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.135, i64 0, i64 0), i32 1, i8* %10), !dbg !10008
  %11 = load %struct.Lattice*, %struct.Lattice** %lt, align 8, !dbg !10009
  %id2 = getelementptr inbounds %struct.Lattice, %struct.Lattice* %11, i32 0, i32 0, !dbg !10011
  %properties = getelementptr inbounds %struct.ID, %struct.ID* %id2, i32 0, i32 9, !dbg !10012
  %12 = load %struct.IDProperty*, %struct.IDProperty** %properties, align 8, !dbg !10012
  %tobool3 = icmp ne %struct.IDProperty* %12, null, !dbg !10009
  br i1 %tobool3, label %if.then4, label %if.end, !dbg !10013

if.then4:                                         ; preds = %if.then
  %13 = load %struct.Lattice*, %struct.Lattice** %lt, align 8, !dbg !10014
  %id5 = getelementptr inbounds %struct.Lattice, %struct.Lattice* %13, i32 0, i32 0, !dbg !10015
  %properties6 = getelementptr inbounds %struct.ID, %struct.ID* %id5, i32 0, i32 9, !dbg !10016
  %14 = load %struct.IDProperty*, %struct.IDProperty** %properties6, align 8, !dbg !10016
  %15 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !10017
  %16 = bitcast %struct.WriteData* %15 to i8*, !dbg !10017
  call void @IDP_WriteProperty(%struct.IDProperty* %14, i8* %16), !dbg !10018
  br label %if.end, !dbg !10018

if.end:                                           ; preds = %if.then4, %if.then
  %17 = load %struct.Lattice*, %struct.Lattice** %lt, align 8, !dbg !10019
  %adt = getelementptr inbounds %struct.Lattice, %struct.Lattice* %17, i32 0, i32 1, !dbg !10021
  %18 = load %struct.AnimData*, %struct.AnimData** %adt, align 8, !dbg !10021
  %tobool7 = icmp ne %struct.AnimData* %18, null, !dbg !10019
  br i1 %tobool7, label %if.then8, label %if.end10, !dbg !10022

if.then8:                                         ; preds = %if.end
  %19 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !10023
  %20 = load %struct.Lattice*, %struct.Lattice** %lt, align 8, !dbg !10024
  %adt9 = getelementptr inbounds %struct.Lattice, %struct.Lattice* %20, i32 0, i32 1, !dbg !10025
  %21 = load %struct.AnimData*, %struct.AnimData** %adt9, align 8, !dbg !10025
  call void @write_animdata(%struct.WriteData* %19, %struct.AnimData* %21), !dbg !10026
  br label %if.end10, !dbg !10026

if.end10:                                         ; preds = %if.then8, %if.end
  %22 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !10027
  %23 = load %struct.Lattice*, %struct.Lattice** %lt, align 8, !dbg !10028
  %pntsu = getelementptr inbounds %struct.Lattice, %struct.Lattice* %23, i32 0, i32 2, !dbg !10029
  %24 = load i16, i16* %pntsu, align 8, !dbg !10029
  %conv = sext i16 %24 to i32, !dbg !10028
  %25 = load %struct.Lattice*, %struct.Lattice** %lt, align 8, !dbg !10030
  %pntsv = getelementptr inbounds %struct.Lattice, %struct.Lattice* %25, i32 0, i32 3, !dbg !10031
  %26 = load i16, i16* %pntsv, align 2, !dbg !10031
  %conv11 = sext i16 %26 to i32, !dbg !10030
  %mul = mul nsw i32 %conv, %conv11, !dbg !10032
  %27 = load %struct.Lattice*, %struct.Lattice** %lt, align 8, !dbg !10033
  %pntsw = getelementptr inbounds %struct.Lattice, %struct.Lattice* %27, i32 0, i32 4, !dbg !10034
  %28 = load i16, i16* %pntsw, align 4, !dbg !10034
  %conv12 = sext i16 %28 to i32, !dbg !10033
  %mul13 = mul nsw i32 %mul, %conv12, !dbg !10035
  %29 = load %struct.Lattice*, %struct.Lattice** %lt, align 8, !dbg !10036
  %def = getelementptr inbounds %struct.Lattice, %struct.Lattice* %29, i32 0, i32 21, !dbg !10037
  %30 = load %struct.BPoint*, %struct.BPoint** %def, align 8, !dbg !10037
  %31 = bitcast %struct.BPoint* %30 to i8*, !dbg !10036
  call void @writestruct(%struct.WriteData* %22, i32 1096040772, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.126, i64 0, i64 0), i32 %mul13, i8* %31), !dbg !10038
  %32 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !10039
  %33 = load %struct.Lattice*, %struct.Lattice** %lt, align 8, !dbg !10040
  %pntsu14 = getelementptr inbounds %struct.Lattice, %struct.Lattice* %33, i32 0, i32 2, !dbg !10041
  %34 = load i16, i16* %pntsu14, align 8, !dbg !10041
  %conv15 = sext i16 %34 to i32, !dbg !10040
  %35 = load %struct.Lattice*, %struct.Lattice** %lt, align 8, !dbg !10042
  %pntsv16 = getelementptr inbounds %struct.Lattice, %struct.Lattice* %35, i32 0, i32 3, !dbg !10043
  %36 = load i16, i16* %pntsv16, align 2, !dbg !10043
  %conv17 = sext i16 %36 to i32, !dbg !10042
  %mul18 = mul nsw i32 %conv15, %conv17, !dbg !10044
  %37 = load %struct.Lattice*, %struct.Lattice** %lt, align 8, !dbg !10045
  %pntsw19 = getelementptr inbounds %struct.Lattice, %struct.Lattice* %37, i32 0, i32 4, !dbg !10046
  %38 = load i16, i16* %pntsw19, align 4, !dbg !10046
  %conv20 = sext i16 %38 to i32, !dbg !10045
  %mul21 = mul nsw i32 %mul18, %conv20, !dbg !10047
  %39 = load %struct.Lattice*, %struct.Lattice** %lt, align 8, !dbg !10048
  %dvert = getelementptr inbounds %struct.Lattice, %struct.Lattice* %39, i32 0, i32 24, !dbg !10049
  %40 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert, align 8, !dbg !10049
  call void @write_dverts(%struct.WriteData* %32, i32 %mul21, %struct.MDeformVert* %40), !dbg !10050
  br label %if.end22, !dbg !10051

if.end22:                                         ; preds = %if.end10, %lor.lhs.false
  %41 = load %struct.Lattice*, %struct.Lattice** %lt, align 8, !dbg !10052
  %id23 = getelementptr inbounds %struct.Lattice, %struct.Lattice* %41, i32 0, i32 0, !dbg !10053
  %next = getelementptr inbounds %struct.ID, %struct.ID* %id23, i32 0, i32 0, !dbg !10054
  %42 = load i8*, i8** %next, align 8, !dbg !10054
  %43 = bitcast i8* %42 to %struct.Lattice*, !dbg !10052
  store %struct.Lattice* %43, %struct.Lattice** %lt, align 8, !dbg !10055
  br label %while.cond, !dbg !9993, !llvm.loop !10056

while.end:                                        ; preds = %while.cond
  ret void, !dbg !10058
}

; Function Attrs: noinline nounwind uwtable
define internal void @write_vfonts(%struct.WriteData* %wd, %struct.ListBase* %idbase) #0 !dbg !10059 {
entry:
  %wd.addr = alloca %struct.WriteData*, align 8
  %idbase.addr = alloca %struct.ListBase*, align 8
  %vf = alloca %struct.VFont*, align 8
  %pf = alloca %struct.PackedFile*, align 8
  store %struct.WriteData* %wd, %struct.WriteData** %wd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WriteData** %wd.addr, metadata !10060, metadata !DIExpression()), !dbg !10061
  store %struct.ListBase* %idbase, %struct.ListBase** %idbase.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %idbase.addr, metadata !10062, metadata !DIExpression()), !dbg !10063
  call void @llvm.dbg.declare(metadata %struct.VFont** %vf, metadata !10064, metadata !DIExpression()), !dbg !10067
  call void @llvm.dbg.declare(metadata %struct.PackedFile** %pf, metadata !10068, metadata !DIExpression()), !dbg !10069
  %0 = load %struct.ListBase*, %struct.ListBase** %idbase.addr, align 8, !dbg !10070
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %0, i32 0, i32 0, !dbg !10071
  %1 = load i8*, i8** %first, align 8, !dbg !10071
  %2 = bitcast i8* %1 to %struct.VFont*, !dbg !10070
  store %struct.VFont* %2, %struct.VFont** %vf, align 8, !dbg !10072
  br label %while.cond, !dbg !10073

while.cond:                                       ; preds = %if.end11, %entry
  %3 = load %struct.VFont*, %struct.VFont** %vf, align 8, !dbg !10074
  %tobool = icmp ne %struct.VFont* %3, null, !dbg !10073
  br i1 %tobool, label %while.body, label %while.end, !dbg !10073

while.body:                                       ; preds = %while.cond
  %4 = load %struct.VFont*, %struct.VFont** %vf, align 8, !dbg !10075
  %id = getelementptr inbounds %struct.VFont, %struct.VFont* %4, i32 0, i32 0, !dbg !10078
  %us = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 6, !dbg !10079
  %5 = load i32, i32* %us, align 4, !dbg !10079
  %cmp = icmp sgt i32 %5, 0, !dbg !10080
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !10081

lor.lhs.false:                                    ; preds = %while.body
  %6 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !10082
  %current = getelementptr inbounds %struct.WriteData, %struct.WriteData* %6, i32 0, i32 4, !dbg !10083
  %7 = load %struct.MemFile*, %struct.MemFile** %current, align 8, !dbg !10083
  %tobool1 = icmp ne %struct.MemFile* %7, null, !dbg !10082
  br i1 %tobool1, label %if.then, label %if.end11, !dbg !10084

if.then:                                          ; preds = %lor.lhs.false, %while.body
  %8 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !10085
  %9 = load %struct.VFont*, %struct.VFont** %vf, align 8, !dbg !10087
  %10 = bitcast %struct.VFont* %9 to i8*, !dbg !10087
  call void @writestruct(%struct.WriteData* %8, i32 18006, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.138, i64 0, i64 0), i32 1, i8* %10), !dbg !10088
  %11 = load %struct.VFont*, %struct.VFont** %vf, align 8, !dbg !10089
  %id2 = getelementptr inbounds %struct.VFont, %struct.VFont* %11, i32 0, i32 0, !dbg !10091
  %properties = getelementptr inbounds %struct.ID, %struct.ID* %id2, i32 0, i32 9, !dbg !10092
  %12 = load %struct.IDProperty*, %struct.IDProperty** %properties, align 8, !dbg !10092
  %tobool3 = icmp ne %struct.IDProperty* %12, null, !dbg !10089
  br i1 %tobool3, label %if.then4, label %if.end, !dbg !10093

if.then4:                                         ; preds = %if.then
  %13 = load %struct.VFont*, %struct.VFont** %vf, align 8, !dbg !10094
  %id5 = getelementptr inbounds %struct.VFont, %struct.VFont* %13, i32 0, i32 0, !dbg !10095
  %properties6 = getelementptr inbounds %struct.ID, %struct.ID* %id5, i32 0, i32 9, !dbg !10096
  %14 = load %struct.IDProperty*, %struct.IDProperty** %properties6, align 8, !dbg !10096
  %15 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !10097
  %16 = bitcast %struct.WriteData* %15 to i8*, !dbg !10097
  call void @IDP_WriteProperty(%struct.IDProperty* %14, i8* %16), !dbg !10098
  br label %if.end, !dbg !10098

if.end:                                           ; preds = %if.then4, %if.then
  %17 = load %struct.VFont*, %struct.VFont** %vf, align 8, !dbg !10099
  %packedfile = getelementptr inbounds %struct.VFont, %struct.VFont* %17, i32 0, i32 3, !dbg !10101
  %18 = load %struct.PackedFile*, %struct.PackedFile** %packedfile, align 8, !dbg !10101
  %tobool7 = icmp ne %struct.PackedFile* %18, null, !dbg !10099
  br i1 %tobool7, label %if.then8, label %if.end10, !dbg !10102

if.then8:                                         ; preds = %if.end
  %19 = load %struct.VFont*, %struct.VFont** %vf, align 8, !dbg !10103
  %packedfile9 = getelementptr inbounds %struct.VFont, %struct.VFont* %19, i32 0, i32 3, !dbg !10105
  %20 = load %struct.PackedFile*, %struct.PackedFile** %packedfile9, align 8, !dbg !10105
  store %struct.PackedFile* %20, %struct.PackedFile** %pf, align 8, !dbg !10106
  %21 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !10107
  %22 = load %struct.PackedFile*, %struct.PackedFile** %pf, align 8, !dbg !10108
  %23 = bitcast %struct.PackedFile* %22 to i8*, !dbg !10108
  call void @writestruct(%struct.WriteData* %21, i32 1096040772, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.130, i64 0, i64 0), i32 1, i8* %23), !dbg !10109
  %24 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !10110
  %25 = load %struct.PackedFile*, %struct.PackedFile** %pf, align 8, !dbg !10111
  %size = getelementptr inbounds %struct.PackedFile, %struct.PackedFile* %25, i32 0, i32 0, !dbg !10112
  %26 = load i32, i32* %size, align 8, !dbg !10112
  %27 = load %struct.PackedFile*, %struct.PackedFile** %pf, align 8, !dbg !10113
  %data = getelementptr inbounds %struct.PackedFile, %struct.PackedFile* %27, i32 0, i32 2, !dbg !10114
  %28 = load i8*, i8** %data, align 8, !dbg !10114
  call void @writedata(%struct.WriteData* %24, i32 1096040772, i32 %26, i8* %28), !dbg !10115
  br label %if.end10, !dbg !10116

if.end10:                                         ; preds = %if.then8, %if.end
  br label %if.end11, !dbg !10117

if.end11:                                         ; preds = %if.end10, %lor.lhs.false
  %29 = load %struct.VFont*, %struct.VFont** %vf, align 8, !dbg !10118
  %id12 = getelementptr inbounds %struct.VFont, %struct.VFont* %29, i32 0, i32 0, !dbg !10119
  %next = getelementptr inbounds %struct.ID, %struct.ID* %id12, i32 0, i32 0, !dbg !10120
  %30 = load i8*, i8** %next, align 8, !dbg !10120
  %31 = bitcast i8* %30 to %struct.VFont*, !dbg !10118
  store %struct.VFont* %31, %struct.VFont** %vf, align 8, !dbg !10121
  br label %while.cond, !dbg !10073, !llvm.loop !10122

while.end:                                        ; preds = %while.cond
  ret void, !dbg !10124
}

; Function Attrs: noinline nounwind uwtable
define internal void @write_keys(%struct.WriteData* %wd, %struct.ListBase* %idbase) #0 !dbg !10125 {
entry:
  %wd.addr = alloca %struct.WriteData*, align 8
  %idbase.addr = alloca %struct.ListBase*, align 8
  %key = alloca %struct.Key*, align 8
  %kb = alloca %struct.KeyBlock*, align 8
  store %struct.WriteData* %wd, %struct.WriteData** %wd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WriteData** %wd.addr, metadata !10126, metadata !DIExpression()), !dbg !10127
  store %struct.ListBase* %idbase, %struct.ListBase** %idbase.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %idbase.addr, metadata !10128, metadata !DIExpression()), !dbg !10129
  call void @llvm.dbg.declare(metadata %struct.Key** %key, metadata !10130, metadata !DIExpression()), !dbg !10133
  call void @llvm.dbg.declare(metadata %struct.KeyBlock** %kb, metadata !10134, metadata !DIExpression()), !dbg !10135
  %0 = load %struct.ListBase*, %struct.ListBase** %idbase.addr, align 8, !dbg !10136
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %0, i32 0, i32 0, !dbg !10137
  %1 = load i8*, i8** %first, align 8, !dbg !10137
  %2 = bitcast i8* %1 to %struct.Key*, !dbg !10136
  store %struct.Key* %2, %struct.Key** %key, align 8, !dbg !10138
  br label %while.cond, !dbg !10139

while.cond:                                       ; preds = %if.end19, %entry
  %3 = load %struct.Key*, %struct.Key** %key, align 8, !dbg !10140
  %tobool = icmp ne %struct.Key* %3, null, !dbg !10139
  br i1 %tobool, label %while.body, label %while.end22, !dbg !10139

while.body:                                       ; preds = %while.cond
  %4 = load %struct.Key*, %struct.Key** %key, align 8, !dbg !10141
  %id = getelementptr inbounds %struct.Key, %struct.Key* %4, i32 0, i32 0, !dbg !10144
  %us = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 6, !dbg !10145
  %5 = load i32, i32* %us, align 4, !dbg !10145
  %cmp = icmp sgt i32 %5, 0, !dbg !10146
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !10147

lor.lhs.false:                                    ; preds = %while.body
  %6 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !10148
  %current = getelementptr inbounds %struct.WriteData, %struct.WriteData* %6, i32 0, i32 4, !dbg !10149
  %7 = load %struct.MemFile*, %struct.MemFile** %current, align 8, !dbg !10149
  %tobool1 = icmp ne %struct.MemFile* %7, null, !dbg !10148
  br i1 %tobool1, label %if.then, label %if.end19, !dbg !10150

if.then:                                          ; preds = %lor.lhs.false, %while.body
  %8 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !10151
  %9 = load %struct.Key*, %struct.Key** %key, align 8, !dbg !10153
  %10 = bitcast %struct.Key* %9 to i8*, !dbg !10153
  call void @writestruct(%struct.WriteData* %8, i32 17739, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.139, i64 0, i64 0), i32 1, i8* %10), !dbg !10154
  %11 = load %struct.Key*, %struct.Key** %key, align 8, !dbg !10155
  %id2 = getelementptr inbounds %struct.Key, %struct.Key* %11, i32 0, i32 0, !dbg !10157
  %properties = getelementptr inbounds %struct.ID, %struct.ID* %id2, i32 0, i32 9, !dbg !10158
  %12 = load %struct.IDProperty*, %struct.IDProperty** %properties, align 8, !dbg !10158
  %tobool3 = icmp ne %struct.IDProperty* %12, null, !dbg !10155
  br i1 %tobool3, label %if.then4, label %if.end, !dbg !10159

if.then4:                                         ; preds = %if.then
  %13 = load %struct.Key*, %struct.Key** %key, align 8, !dbg !10160
  %id5 = getelementptr inbounds %struct.Key, %struct.Key* %13, i32 0, i32 0, !dbg !10161
  %properties6 = getelementptr inbounds %struct.ID, %struct.ID* %id5, i32 0, i32 9, !dbg !10162
  %14 = load %struct.IDProperty*, %struct.IDProperty** %properties6, align 8, !dbg !10162
  %15 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !10163
  %16 = bitcast %struct.WriteData* %15 to i8*, !dbg !10163
  call void @IDP_WriteProperty(%struct.IDProperty* %14, i8* %16), !dbg !10164
  br label %if.end, !dbg !10164

if.end:                                           ; preds = %if.then4, %if.then
  %17 = load %struct.Key*, %struct.Key** %key, align 8, !dbg !10165
  %adt = getelementptr inbounds %struct.Key, %struct.Key* %17, i32 0, i32 1, !dbg !10167
  %18 = load %struct.AnimData*, %struct.AnimData** %adt, align 8, !dbg !10167
  %tobool7 = icmp ne %struct.AnimData* %18, null, !dbg !10165
  br i1 %tobool7, label %if.then8, label %if.end10, !dbg !10168

if.then8:                                         ; preds = %if.end
  %19 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !10169
  %20 = load %struct.Key*, %struct.Key** %key, align 8, !dbg !10170
  %adt9 = getelementptr inbounds %struct.Key, %struct.Key* %20, i32 0, i32 1, !dbg !10171
  %21 = load %struct.AnimData*, %struct.AnimData** %adt9, align 8, !dbg !10171
  call void @write_animdata(%struct.WriteData* %19, %struct.AnimData* %21), !dbg !10172
  br label %if.end10, !dbg !10172

if.end10:                                         ; preds = %if.then8, %if.end
  %22 = load %struct.Key*, %struct.Key** %key, align 8, !dbg !10173
  %block = getelementptr inbounds %struct.Key, %struct.Key* %22, i32 0, i32 6, !dbg !10174
  %first11 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %block, i32 0, i32 0, !dbg !10175
  %23 = load i8*, i8** %first11, align 8, !dbg !10175
  %24 = bitcast i8* %23 to %struct.KeyBlock*, !dbg !10173
  store %struct.KeyBlock* %24, %struct.KeyBlock** %kb, align 8, !dbg !10176
  br label %while.cond12, !dbg !10177

while.cond12:                                     ; preds = %if.end18, %if.end10
  %25 = load %struct.KeyBlock*, %struct.KeyBlock** %kb, align 8, !dbg !10178
  %tobool13 = icmp ne %struct.KeyBlock* %25, null, !dbg !10177
  br i1 %tobool13, label %while.body14, label %while.end, !dbg !10177

while.body14:                                     ; preds = %while.cond12
  %26 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !10179
  %27 = load %struct.KeyBlock*, %struct.KeyBlock** %kb, align 8, !dbg !10181
  %28 = bitcast %struct.KeyBlock* %27 to i8*, !dbg !10181
  call void @writestruct(%struct.WriteData* %26, i32 1096040772, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.140, i64 0, i64 0), i32 1, i8* %28), !dbg !10182
  %29 = load %struct.KeyBlock*, %struct.KeyBlock** %kb, align 8, !dbg !10183
  %data = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %29, i32 0, i32 10, !dbg !10185
  %30 = load i8*, i8** %data, align 8, !dbg !10185
  %tobool15 = icmp ne i8* %30, null, !dbg !10183
  br i1 %tobool15, label %if.then16, label %if.end18, !dbg !10186

if.then16:                                        ; preds = %while.body14
  %31 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !10187
  %32 = load %struct.KeyBlock*, %struct.KeyBlock** %kb, align 8, !dbg !10188
  %totelem = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %32, i32 0, i32 8, !dbg !10189
  %33 = load i32, i32* %totelem, align 8, !dbg !10189
  %34 = load %struct.Key*, %struct.Key** %key, align 8, !dbg !10190
  %elemsize = getelementptr inbounds %struct.Key, %struct.Key* %34, i32 0, i32 4, !dbg !10191
  %35 = load i32, i32* %elemsize, align 8, !dbg !10191
  %mul = mul nsw i32 %33, %35, !dbg !10192
  %36 = load %struct.KeyBlock*, %struct.KeyBlock** %kb, align 8, !dbg !10193
  %data17 = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %36, i32 0, i32 10, !dbg !10194
  %37 = load i8*, i8** %data17, align 8, !dbg !10194
  call void @writedata(%struct.WriteData* %31, i32 1096040772, i32 %mul, i8* %37), !dbg !10195
  br label %if.end18, !dbg !10195

if.end18:                                         ; preds = %if.then16, %while.body14
  %38 = load %struct.KeyBlock*, %struct.KeyBlock** %kb, align 8, !dbg !10196
  %next = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %38, i32 0, i32 0, !dbg !10197
  %39 = load %struct.KeyBlock*, %struct.KeyBlock** %next, align 8, !dbg !10197
  store %struct.KeyBlock* %39, %struct.KeyBlock** %kb, align 8, !dbg !10198
  br label %while.cond12, !dbg !10177, !llvm.loop !10199

while.end:                                        ; preds = %while.cond12
  br label %if.end19, !dbg !10201

if.end19:                                         ; preds = %while.end, %lor.lhs.false
  %40 = load %struct.Key*, %struct.Key** %key, align 8, !dbg !10202
  %id20 = getelementptr inbounds %struct.Key, %struct.Key* %40, i32 0, i32 0, !dbg !10203
  %next21 = getelementptr inbounds %struct.ID, %struct.ID* %id20, i32 0, i32 0, !dbg !10204
  %41 = load i8*, i8** %next21, align 8, !dbg !10204
  %42 = bitcast i8* %41 to %struct.Key*, !dbg !10202
  store %struct.Key* %42, %struct.Key** %key, align 8, !dbg !10205
  br label %while.cond, !dbg !10139, !llvm.loop !10206

while.end22:                                      ; preds = %while.cond
  %43 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !10208
  call void @mywrite(%struct.WriteData* %43, i8* null, i32 0), !dbg !10209
  ret void, !dbg !10210
}

; Function Attrs: noinline nounwind uwtable
define internal void @write_worlds(%struct.WriteData* %wd, %struct.ListBase* %idbase) #0 !dbg !10211 {
entry:
  %wd.addr = alloca %struct.WriteData*, align 8
  %idbase.addr = alloca %struct.ListBase*, align 8
  %wrld = alloca %struct.World*, align 8
  %a = alloca i32, align 4
  store %struct.WriteData* %wd, %struct.WriteData** %wd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WriteData** %wd.addr, metadata !10212, metadata !DIExpression()), !dbg !10213
  store %struct.ListBase* %idbase, %struct.ListBase** %idbase.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %idbase.addr, metadata !10214, metadata !DIExpression()), !dbg !10215
  call void @llvm.dbg.declare(metadata %struct.World** %wrld, metadata !10216, metadata !DIExpression()), !dbg !10217
  call void @llvm.dbg.declare(metadata i32* %a, metadata !10218, metadata !DIExpression()), !dbg !10219
  %0 = load %struct.ListBase*, %struct.ListBase** %idbase.addr, align 8, !dbg !10220
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %0, i32 0, i32 0, !dbg !10221
  %1 = load i8*, i8** %first, align 8, !dbg !10221
  %2 = bitcast i8* %1 to %struct.World*, !dbg !10220
  store %struct.World* %2, %struct.World** %wrld, align 8, !dbg !10222
  br label %while.cond, !dbg !10223

while.cond:                                       ; preds = %if.end23, %entry
  %3 = load %struct.World*, %struct.World** %wrld, align 8, !dbg !10224
  %tobool = icmp ne %struct.World* %3, null, !dbg !10223
  br i1 %tobool, label %while.body, label %while.end, !dbg !10223

while.body:                                       ; preds = %while.cond
  %4 = load %struct.World*, %struct.World** %wrld, align 8, !dbg !10225
  %id = getelementptr inbounds %struct.World, %struct.World* %4, i32 0, i32 0, !dbg !10228
  %us = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 6, !dbg !10229
  %5 = load i32, i32* %us, align 4, !dbg !10229
  %cmp = icmp sgt i32 %5, 0, !dbg !10230
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !10231

lor.lhs.false:                                    ; preds = %while.body
  %6 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !10232
  %current = getelementptr inbounds %struct.WriteData, %struct.WriteData* %6, i32 0, i32 4, !dbg !10233
  %7 = load %struct.MemFile*, %struct.MemFile** %current, align 8, !dbg !10233
  %tobool1 = icmp ne %struct.MemFile* %7, null, !dbg !10232
  br i1 %tobool1, label %if.then, label %if.end23, !dbg !10234

if.then:                                          ; preds = %lor.lhs.false, %while.body
  %8 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !10235
  %9 = load %struct.World*, %struct.World** %wrld, align 8, !dbg !10237
  %10 = bitcast %struct.World* %9 to i8*, !dbg !10237
  call void @writestruct(%struct.WriteData* %8, i32 20311, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.141, i64 0, i64 0), i32 1, i8* %10), !dbg !10238
  %11 = load %struct.World*, %struct.World** %wrld, align 8, !dbg !10239
  %id2 = getelementptr inbounds %struct.World, %struct.World* %11, i32 0, i32 0, !dbg !10241
  %properties = getelementptr inbounds %struct.ID, %struct.ID* %id2, i32 0, i32 9, !dbg !10242
  %12 = load %struct.IDProperty*, %struct.IDProperty** %properties, align 8, !dbg !10242
  %tobool3 = icmp ne %struct.IDProperty* %12, null, !dbg !10239
  br i1 %tobool3, label %if.then4, label %if.end, !dbg !10243

if.then4:                                         ; preds = %if.then
  %13 = load %struct.World*, %struct.World** %wrld, align 8, !dbg !10244
  %id5 = getelementptr inbounds %struct.World, %struct.World* %13, i32 0, i32 0, !dbg !10245
  %properties6 = getelementptr inbounds %struct.ID, %struct.ID* %id5, i32 0, i32 9, !dbg !10246
  %14 = load %struct.IDProperty*, %struct.IDProperty** %properties6, align 8, !dbg !10246
  %15 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !10247
  %16 = bitcast %struct.WriteData* %15 to i8*, !dbg !10247
  call void @IDP_WriteProperty(%struct.IDProperty* %14, i8* %16), !dbg !10248
  br label %if.end, !dbg !10248

if.end:                                           ; preds = %if.then4, %if.then
  %17 = load %struct.World*, %struct.World** %wrld, align 8, !dbg !10249
  %adt = getelementptr inbounds %struct.World, %struct.World* %17, i32 0, i32 1, !dbg !10251
  %18 = load %struct.AnimData*, %struct.AnimData** %adt, align 8, !dbg !10251
  %tobool7 = icmp ne %struct.AnimData* %18, null, !dbg !10249
  br i1 %tobool7, label %if.then8, label %if.end10, !dbg !10252

if.then8:                                         ; preds = %if.end
  %19 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !10253
  %20 = load %struct.World*, %struct.World** %wrld, align 8, !dbg !10254
  %adt9 = getelementptr inbounds %struct.World, %struct.World* %20, i32 0, i32 1, !dbg !10255
  %21 = load %struct.AnimData*, %struct.AnimData** %adt9, align 8, !dbg !10255
  call void @write_animdata(%struct.WriteData* %19, %struct.AnimData* %21), !dbg !10256
  br label %if.end10, !dbg !10256

if.end10:                                         ; preds = %if.then8, %if.end
  store i32 0, i32* %a, align 4, !dbg !10257
  br label %for.cond, !dbg !10259

for.cond:                                         ; preds = %for.inc, %if.end10
  %22 = load i32, i32* %a, align 4, !dbg !10260
  %cmp11 = icmp slt i32 %22, 18, !dbg !10262
  br i1 %cmp11, label %for.body, label %for.end, !dbg !10263

for.body:                                         ; preds = %for.cond
  %23 = load %struct.World*, %struct.World** %wrld, align 8, !dbg !10264
  %mtex = getelementptr inbounds %struct.World, %struct.World* %23, i32 0, i32 70, !dbg !10267
  %24 = load i32, i32* %a, align 4, !dbg !10268
  %idxprom = sext i32 %24 to i64, !dbg !10264
  %arrayidx = getelementptr inbounds [18 x %struct.MTex*], [18 x %struct.MTex*]* %mtex, i64 0, i64 %idxprom, !dbg !10264
  %25 = load %struct.MTex*, %struct.MTex** %arrayidx, align 8, !dbg !10264
  %tobool12 = icmp ne %struct.MTex* %25, null, !dbg !10264
  br i1 %tobool12, label %if.then13, label %if.end17, !dbg !10269

if.then13:                                        ; preds = %for.body
  %26 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !10270
  %27 = load %struct.World*, %struct.World** %wrld, align 8, !dbg !10271
  %mtex14 = getelementptr inbounds %struct.World, %struct.World* %27, i32 0, i32 70, !dbg !10272
  %28 = load i32, i32* %a, align 4, !dbg !10273
  %idxprom15 = sext i32 %28 to i64, !dbg !10271
  %arrayidx16 = getelementptr inbounds [18 x %struct.MTex*], [18 x %struct.MTex*]* %mtex14, i64 0, i64 %idxprom15, !dbg !10271
  %29 = load %struct.MTex*, %struct.MTex** %arrayidx16, align 8, !dbg !10271
  %30 = bitcast %struct.MTex* %29 to i8*, !dbg !10271
  call void @writestruct(%struct.WriteData* %26, i32 1096040772, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.134, i64 0, i64 0), i32 1, i8* %30), !dbg !10274
  br label %if.end17, !dbg !10274

if.end17:                                         ; preds = %if.then13, %for.body
  br label %for.inc, !dbg !10275

for.inc:                                          ; preds = %if.end17
  %31 = load i32, i32* %a, align 4, !dbg !10276
  %inc = add nsw i32 %31, 1, !dbg !10276
  store i32 %inc, i32* %a, align 4, !dbg !10276
  br label %for.cond, !dbg !10277, !llvm.loop !10278

for.end:                                          ; preds = %for.cond
  %32 = load %struct.World*, %struct.World** %wrld, align 8, !dbg !10280
  %nodetree = getelementptr inbounds %struct.World, %struct.World* %32, i32 0, i32 75, !dbg !10282
  %33 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree, align 8, !dbg !10282
  %tobool18 = icmp ne %struct.bNodeTree* %33, null, !dbg !10280
  br i1 %tobool18, label %if.then19, label %if.end22, !dbg !10283

if.then19:                                        ; preds = %for.end
  %34 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !10284
  %35 = load %struct.World*, %struct.World** %wrld, align 8, !dbg !10286
  %nodetree20 = getelementptr inbounds %struct.World, %struct.World* %35, i32 0, i32 75, !dbg !10287
  %36 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree20, align 8, !dbg !10287
  %37 = bitcast %struct.bNodeTree* %36 to i8*, !dbg !10286
  call void @writestruct(%struct.WriteData* %34, i32 1096040772, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.105, i64 0, i64 0), i32 1, i8* %37), !dbg !10288
  %38 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !10289
  %39 = load %struct.World*, %struct.World** %wrld, align 8, !dbg !10290
  %nodetree21 = getelementptr inbounds %struct.World, %struct.World* %39, i32 0, i32 75, !dbg !10291
  %40 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree21, align 8, !dbg !10291
  call void @write_nodetree(%struct.WriteData* %38, %struct.bNodeTree* %40), !dbg !10292
  br label %if.end22, !dbg !10293

if.end22:                                         ; preds = %if.then19, %for.end
  %41 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !10294
  %42 = load %struct.World*, %struct.World** %wrld, align 8, !dbg !10295
  %preview = getelementptr inbounds %struct.World, %struct.World* %42, i32 0, i32 74, !dbg !10296
  %43 = load %struct.PreviewImage*, %struct.PreviewImage** %preview, align 8, !dbg !10296
  call void @write_previews(%struct.WriteData* %41, %struct.PreviewImage* %43), !dbg !10297
  br label %if.end23, !dbg !10298

if.end23:                                         ; preds = %if.end22, %lor.lhs.false
  %44 = load %struct.World*, %struct.World** %wrld, align 8, !dbg !10299
  %id24 = getelementptr inbounds %struct.World, %struct.World* %44, i32 0, i32 0, !dbg !10300
  %next = getelementptr inbounds %struct.ID, %struct.ID* %id24, i32 0, i32 0, !dbg !10301
  %45 = load i8*, i8** %next, align 8, !dbg !10301
  %46 = bitcast i8* %45 to %struct.World*, !dbg !10299
  store %struct.World* %46, %struct.World** %wrld, align 8, !dbg !10302
  br label %while.cond, !dbg !10223, !llvm.loop !10303

while.end:                                        ; preds = %while.cond
  ret void, !dbg !10305
}

; Function Attrs: noinline nounwind uwtable
define internal void @write_texts(%struct.WriteData* %wd, %struct.ListBase* %idbase) #0 !dbg !10306 {
entry:
  %wd.addr = alloca %struct.WriteData*, align 8
  %idbase.addr = alloca %struct.ListBase*, align 8
  %text = alloca %struct.Text*, align 8
  %tmp = alloca %struct.TextLine*, align 8
  store %struct.WriteData* %wd, %struct.WriteData** %wd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WriteData** %wd.addr, metadata !10307, metadata !DIExpression()), !dbg !10308
  store %struct.ListBase* %idbase, %struct.ListBase** %idbase.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %idbase.addr, metadata !10309, metadata !DIExpression()), !dbg !10310
  call void @llvm.dbg.declare(metadata %struct.Text** %text, metadata !10311, metadata !DIExpression()), !dbg !10314
  call void @llvm.dbg.declare(metadata %struct.TextLine** %tmp, metadata !10315, metadata !DIExpression()), !dbg !10316
  %0 = load %struct.ListBase*, %struct.ListBase** %idbase.addr, align 8, !dbg !10317
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %0, i32 0, i32 0, !dbg !10318
  %1 = load i8*, i8** %first, align 8, !dbg !10318
  %2 = bitcast i8* %1 to %struct.Text*, !dbg !10317
  store %struct.Text* %2, %struct.Text** %text, align 8, !dbg !10319
  br label %while.cond, !dbg !10320

while.cond:                                       ; preds = %if.end33, %entry
  %3 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !10321
  %tobool = icmp ne %struct.Text* %3, null, !dbg !10320
  br i1 %tobool, label %while.body, label %while.end36, !dbg !10320

while.body:                                       ; preds = %while.cond
  %4 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !10322
  %flags = getelementptr inbounds %struct.Text, %struct.Text* %4, i32 0, i32 2, !dbg !10325
  %5 = load i32, i32* %flags, align 8, !dbg !10325
  %and = and i32 %5, 4, !dbg !10326
  %tobool1 = icmp ne i32 %and, 0, !dbg !10326
  br i1 %tobool1, label %land.lhs.true, label %if.end, !dbg !10327

land.lhs.true:                                    ; preds = %while.body
  %6 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !10328
  %flags2 = getelementptr inbounds %struct.Text, %struct.Text* %6, i32 0, i32 2, !dbg !10329
  %7 = load i32, i32* %flags2, align 8, !dbg !10329
  %and3 = and i32 %7, 8, !dbg !10330
  %tobool4 = icmp ne i32 %and3, 0, !dbg !10330
  br i1 %tobool4, label %if.then, label %if.end, !dbg !10331

if.then:                                          ; preds = %land.lhs.true
  %8 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !10332
  %flags5 = getelementptr inbounds %struct.Text, %struct.Text* %8, i32 0, i32 2, !dbg !10333
  %9 = load i32, i32* %flags5, align 8, !dbg !10334
  %and6 = and i32 %9, -9, !dbg !10334
  store i32 %and6, i32* %flags5, align 8, !dbg !10334
  br label %if.end, !dbg !10332

if.end:                                           ; preds = %if.then, %land.lhs.true, %while.body
  %10 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !10335
  %11 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !10336
  %12 = bitcast %struct.Text* %11 to i8*, !dbg !10336
  call void @writestruct(%struct.WriteData* %10, i32 22612, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.142, i64 0, i64 0), i32 1, i8* %12), !dbg !10337
  %13 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !10338
  %name = getelementptr inbounds %struct.Text, %struct.Text* %13, i32 0, i32 1, !dbg !10340
  %14 = load i8*, i8** %name, align 8, !dbg !10340
  %tobool7 = icmp ne i8* %14, null, !dbg !10338
  br i1 %tobool7, label %if.then8, label %if.end11, !dbg !10341

if.then8:                                         ; preds = %if.end
  %15 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !10342
  %16 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !10343
  %name9 = getelementptr inbounds %struct.Text, %struct.Text* %16, i32 0, i32 1, !dbg !10344
  %17 = load i8*, i8** %name9, align 8, !dbg !10344
  %call = call i64 @strlen(i8* %17) #9, !dbg !10345
  %add = add i64 %call, 1, !dbg !10346
  %conv = trunc i64 %add to i32, !dbg !10345
  %18 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !10347
  %name10 = getelementptr inbounds %struct.Text, %struct.Text* %18, i32 0, i32 1, !dbg !10348
  %19 = load i8*, i8** %name10, align 8, !dbg !10348
  call void @writedata(%struct.WriteData* %15, i32 1096040772, i32 %conv, i8* %19), !dbg !10349
  br label %if.end11, !dbg !10349

if.end11:                                         ; preds = %if.then8, %if.end
  %20 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !10350
  %id = getelementptr inbounds %struct.Text, %struct.Text* %20, i32 0, i32 0, !dbg !10352
  %properties = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 9, !dbg !10353
  %21 = load %struct.IDProperty*, %struct.IDProperty** %properties, align 8, !dbg !10353
  %tobool12 = icmp ne %struct.IDProperty* %21, null, !dbg !10350
  br i1 %tobool12, label %if.then13, label %if.end16, !dbg !10354

if.then13:                                        ; preds = %if.end11
  %22 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !10355
  %id14 = getelementptr inbounds %struct.Text, %struct.Text* %22, i32 0, i32 0, !dbg !10356
  %properties15 = getelementptr inbounds %struct.ID, %struct.ID* %id14, i32 0, i32 9, !dbg !10357
  %23 = load %struct.IDProperty*, %struct.IDProperty** %properties15, align 8, !dbg !10357
  %24 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !10358
  %25 = bitcast %struct.WriteData* %24 to i8*, !dbg !10358
  call void @IDP_WriteProperty(%struct.IDProperty* %23, i8* %25), !dbg !10359
  br label %if.end16, !dbg !10359

if.end16:                                         ; preds = %if.then13, %if.end11
  %26 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !10360
  %flags17 = getelementptr inbounds %struct.Text, %struct.Text* %26, i32 0, i32 2, !dbg !10362
  %27 = load i32, i32* %flags17, align 8, !dbg !10362
  %and18 = and i32 %27, 8, !dbg !10363
  %tobool19 = icmp ne i32 %and18, 0, !dbg !10363
  br i1 %tobool19, label %if.end33, label %if.then20, !dbg !10364

if.then20:                                        ; preds = %if.end16
  %28 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !10365
  %lines = getelementptr inbounds %struct.Text, %struct.Text* %28, i32 0, i32 4, !dbg !10367
  %first21 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %lines, i32 0, i32 0, !dbg !10368
  %29 = load i8*, i8** %first21, align 8, !dbg !10368
  %30 = bitcast i8* %29 to %struct.TextLine*, !dbg !10365
  store %struct.TextLine* %30, %struct.TextLine** %tmp, align 8, !dbg !10369
  br label %while.cond22, !dbg !10370

while.cond22:                                     ; preds = %while.body24, %if.then20
  %31 = load %struct.TextLine*, %struct.TextLine** %tmp, align 8, !dbg !10371
  %tobool23 = icmp ne %struct.TextLine* %31, null, !dbg !10370
  br i1 %tobool23, label %while.body24, label %while.end, !dbg !10370

while.body24:                                     ; preds = %while.cond22
  %32 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !10372
  %33 = load %struct.TextLine*, %struct.TextLine** %tmp, align 8, !dbg !10374
  %34 = bitcast %struct.TextLine* %33 to i8*, !dbg !10374
  call void @writestruct(%struct.WriteData* %32, i32 1096040772, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.143, i64 0, i64 0), i32 1, i8* %34), !dbg !10375
  %35 = load %struct.TextLine*, %struct.TextLine** %tmp, align 8, !dbg !10376
  %next = getelementptr inbounds %struct.TextLine, %struct.TextLine* %35, i32 0, i32 0, !dbg !10377
  %36 = load %struct.TextLine*, %struct.TextLine** %next, align 8, !dbg !10377
  store %struct.TextLine* %36, %struct.TextLine** %tmp, align 8, !dbg !10378
  br label %while.cond22, !dbg !10370, !llvm.loop !10379

while.end:                                        ; preds = %while.cond22
  %37 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !10381
  %lines25 = getelementptr inbounds %struct.Text, %struct.Text* %37, i32 0, i32 4, !dbg !10382
  %first26 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %lines25, i32 0, i32 0, !dbg !10383
  %38 = load i8*, i8** %first26, align 8, !dbg !10383
  %39 = bitcast i8* %38 to %struct.TextLine*, !dbg !10381
  store %struct.TextLine* %39, %struct.TextLine** %tmp, align 8, !dbg !10384
  br label %while.cond27, !dbg !10385

while.cond27:                                     ; preds = %while.body29, %while.end
  %40 = load %struct.TextLine*, %struct.TextLine** %tmp, align 8, !dbg !10386
  %tobool28 = icmp ne %struct.TextLine* %40, null, !dbg !10385
  br i1 %tobool28, label %while.body29, label %while.end32, !dbg !10385

while.body29:                                     ; preds = %while.cond27
  %41 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !10387
  %42 = load %struct.TextLine*, %struct.TextLine** %tmp, align 8, !dbg !10389
  %len = getelementptr inbounds %struct.TextLine, %struct.TextLine* %42, i32 0, i32 4, !dbg !10390
  %43 = load i32, i32* %len, align 8, !dbg !10390
  %add30 = add nsw i32 %43, 1, !dbg !10391
  %44 = load %struct.TextLine*, %struct.TextLine** %tmp, align 8, !dbg !10392
  %line = getelementptr inbounds %struct.TextLine, %struct.TextLine* %44, i32 0, i32 2, !dbg !10393
  %45 = load i8*, i8** %line, align 8, !dbg !10393
  call void @writedata(%struct.WriteData* %41, i32 1096040772, i32 %add30, i8* %45), !dbg !10394
  %46 = load %struct.TextLine*, %struct.TextLine** %tmp, align 8, !dbg !10395
  %next31 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %46, i32 0, i32 0, !dbg !10396
  %47 = load %struct.TextLine*, %struct.TextLine** %next31, align 8, !dbg !10396
  store %struct.TextLine* %47, %struct.TextLine** %tmp, align 8, !dbg !10397
  br label %while.cond27, !dbg !10385, !llvm.loop !10398

while.end32:                                      ; preds = %while.cond27
  br label %if.end33, !dbg !10400

if.end33:                                         ; preds = %while.end32, %if.end16
  %48 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !10401
  %id34 = getelementptr inbounds %struct.Text, %struct.Text* %48, i32 0, i32 0, !dbg !10402
  %next35 = getelementptr inbounds %struct.ID, %struct.ID* %id34, i32 0, i32 0, !dbg !10403
  %49 = load i8*, i8** %next35, align 8, !dbg !10403
  %50 = bitcast i8* %49 to %struct.Text*, !dbg !10401
  store %struct.Text* %50, %struct.Text** %text, align 8, !dbg !10404
  br label %while.cond, !dbg !10320, !llvm.loop !10405

while.end36:                                      ; preds = %while.cond
  %51 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !10407
  call void @mywrite(%struct.WriteData* %51, i8* null, i32 0), !dbg !10408
  ret void, !dbg !10409
}

; Function Attrs: noinline nounwind uwtable
define internal void @write_speakers(%struct.WriteData* %wd, %struct.ListBase* %idbase) #0 !dbg !10410 {
entry:
  %wd.addr = alloca %struct.WriteData*, align 8
  %idbase.addr = alloca %struct.ListBase*, align 8
  %spk = alloca %struct.Speaker*, align 8
  store %struct.WriteData* %wd, %struct.WriteData** %wd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WriteData** %wd.addr, metadata !10411, metadata !DIExpression()), !dbg !10412
  store %struct.ListBase* %idbase, %struct.ListBase** %idbase.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %idbase.addr, metadata !10413, metadata !DIExpression()), !dbg !10414
  call void @llvm.dbg.declare(metadata %struct.Speaker** %spk, metadata !10415, metadata !DIExpression()), !dbg !10436
  %0 = load %struct.ListBase*, %struct.ListBase** %idbase.addr, align 8, !dbg !10437
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %0, i32 0, i32 0, !dbg !10438
  %1 = load i8*, i8** %first, align 8, !dbg !10438
  %2 = bitcast i8* %1 to %struct.Speaker*, !dbg !10437
  store %struct.Speaker* %2, %struct.Speaker** %spk, align 8, !dbg !10439
  br label %while.cond, !dbg !10440

while.cond:                                       ; preds = %if.end11, %entry
  %3 = load %struct.Speaker*, %struct.Speaker** %spk, align 8, !dbg !10441
  %tobool = icmp ne %struct.Speaker* %3, null, !dbg !10440
  br i1 %tobool, label %while.body, label %while.end, !dbg !10440

while.body:                                       ; preds = %while.cond
  %4 = load %struct.Speaker*, %struct.Speaker** %spk, align 8, !dbg !10442
  %id = getelementptr inbounds %struct.Speaker, %struct.Speaker* %4, i32 0, i32 0, !dbg !10445
  %us = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 6, !dbg !10446
  %5 = load i32, i32* %us, align 4, !dbg !10446
  %cmp = icmp sgt i32 %5, 0, !dbg !10447
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !10448

lor.lhs.false:                                    ; preds = %while.body
  %6 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !10449
  %current = getelementptr inbounds %struct.WriteData, %struct.WriteData* %6, i32 0, i32 4, !dbg !10450
  %7 = load %struct.MemFile*, %struct.MemFile** %current, align 8, !dbg !10450
  %tobool1 = icmp ne %struct.MemFile* %7, null, !dbg !10449
  br i1 %tobool1, label %if.then, label %if.end11, !dbg !10451

if.then:                                          ; preds = %lor.lhs.false, %while.body
  %8 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !10452
  %9 = load %struct.Speaker*, %struct.Speaker** %spk, align 8, !dbg !10454
  %10 = bitcast %struct.Speaker* %9 to i8*, !dbg !10454
  call void @writestruct(%struct.WriteData* %8, i32 19283, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.144, i64 0, i64 0), i32 1, i8* %10), !dbg !10455
  %11 = load %struct.Speaker*, %struct.Speaker** %spk, align 8, !dbg !10456
  %id2 = getelementptr inbounds %struct.Speaker, %struct.Speaker* %11, i32 0, i32 0, !dbg !10458
  %properties = getelementptr inbounds %struct.ID, %struct.ID* %id2, i32 0, i32 9, !dbg !10459
  %12 = load %struct.IDProperty*, %struct.IDProperty** %properties, align 8, !dbg !10459
  %tobool3 = icmp ne %struct.IDProperty* %12, null, !dbg !10456
  br i1 %tobool3, label %if.then4, label %if.end, !dbg !10460

if.then4:                                         ; preds = %if.then
  %13 = load %struct.Speaker*, %struct.Speaker** %spk, align 8, !dbg !10461
  %id5 = getelementptr inbounds %struct.Speaker, %struct.Speaker* %13, i32 0, i32 0, !dbg !10462
  %properties6 = getelementptr inbounds %struct.ID, %struct.ID* %id5, i32 0, i32 9, !dbg !10463
  %14 = load %struct.IDProperty*, %struct.IDProperty** %properties6, align 8, !dbg !10463
  %15 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !10464
  %16 = bitcast %struct.WriteData* %15 to i8*, !dbg !10464
  call void @IDP_WriteProperty(%struct.IDProperty* %14, i8* %16), !dbg !10465
  br label %if.end, !dbg !10465

if.end:                                           ; preds = %if.then4, %if.then
  %17 = load %struct.Speaker*, %struct.Speaker** %spk, align 8, !dbg !10466
  %adt = getelementptr inbounds %struct.Speaker, %struct.Speaker* %17, i32 0, i32 1, !dbg !10468
  %18 = load %struct.AnimData*, %struct.AnimData** %adt, align 8, !dbg !10468
  %tobool7 = icmp ne %struct.AnimData* %18, null, !dbg !10466
  br i1 %tobool7, label %if.then8, label %if.end10, !dbg !10469

if.then8:                                         ; preds = %if.end
  %19 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !10470
  %20 = load %struct.Speaker*, %struct.Speaker** %spk, align 8, !dbg !10471
  %adt9 = getelementptr inbounds %struct.Speaker, %struct.Speaker* %20, i32 0, i32 1, !dbg !10472
  %21 = load %struct.AnimData*, %struct.AnimData** %adt9, align 8, !dbg !10472
  call void @write_animdata(%struct.WriteData* %19, %struct.AnimData* %21), !dbg !10473
  br label %if.end10, !dbg !10473

if.end10:                                         ; preds = %if.then8, %if.end
  br label %if.end11, !dbg !10474

if.end11:                                         ; preds = %if.end10, %lor.lhs.false
  %22 = load %struct.Speaker*, %struct.Speaker** %spk, align 8, !dbg !10475
  %id12 = getelementptr inbounds %struct.Speaker, %struct.Speaker* %22, i32 0, i32 0, !dbg !10476
  %next = getelementptr inbounds %struct.ID, %struct.ID* %id12, i32 0, i32 0, !dbg !10477
  %23 = load i8*, i8** %next, align 8, !dbg !10477
  %24 = bitcast i8* %23 to %struct.Speaker*, !dbg !10475
  store %struct.Speaker* %24, %struct.Speaker** %spk, align 8, !dbg !10478
  br label %while.cond, !dbg !10440, !llvm.loop !10479

while.end:                                        ; preds = %while.cond
  ret void, !dbg !10481
}

; Function Attrs: noinline nounwind uwtable
define internal void @write_sounds(%struct.WriteData* %wd, %struct.ListBase* %idbase) #0 !dbg !10482 {
entry:
  %wd.addr = alloca %struct.WriteData*, align 8
  %idbase.addr = alloca %struct.ListBase*, align 8
  %sound = alloca %struct.bSound*, align 8
  %pf = alloca %struct.PackedFile*, align 8
  store %struct.WriteData* %wd, %struct.WriteData** %wd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WriteData** %wd.addr, metadata !10483, metadata !DIExpression()), !dbg !10484
  store %struct.ListBase* %idbase, %struct.ListBase** %idbase.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %idbase.addr, metadata !10485, metadata !DIExpression()), !dbg !10486
  call void @llvm.dbg.declare(metadata %struct.bSound** %sound, metadata !10487, metadata !DIExpression()), !dbg !10490
  call void @llvm.dbg.declare(metadata %struct.PackedFile** %pf, metadata !10491, metadata !DIExpression()), !dbg !10492
  %0 = load %struct.ListBase*, %struct.ListBase** %idbase.addr, align 8, !dbg !10493
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %0, i32 0, i32 0, !dbg !10494
  %1 = load i8*, i8** %first, align 8, !dbg !10494
  %2 = bitcast i8* %1 to %struct.bSound*, !dbg !10493
  store %struct.bSound* %2, %struct.bSound** %sound, align 8, !dbg !10495
  br label %while.cond, !dbg !10496

while.cond:                                       ; preds = %if.end11, %entry
  %3 = load %struct.bSound*, %struct.bSound** %sound, align 8, !dbg !10497
  %tobool = icmp ne %struct.bSound* %3, null, !dbg !10496
  br i1 %tobool, label %while.body, label %while.end, !dbg !10496

while.body:                                       ; preds = %while.cond
  %4 = load %struct.bSound*, %struct.bSound** %sound, align 8, !dbg !10498
  %id = getelementptr inbounds %struct.bSound, %struct.bSound* %4, i32 0, i32 0, !dbg !10501
  %us = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 6, !dbg !10502
  %5 = load i32, i32* %us, align 4, !dbg !10502
  %cmp = icmp sgt i32 %5, 0, !dbg !10503
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !10504

lor.lhs.false:                                    ; preds = %while.body
  %6 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !10505
  %current = getelementptr inbounds %struct.WriteData, %struct.WriteData* %6, i32 0, i32 4, !dbg !10506
  %7 = load %struct.MemFile*, %struct.MemFile** %current, align 8, !dbg !10506
  %tobool1 = icmp ne %struct.MemFile* %7, null, !dbg !10505
  br i1 %tobool1, label %if.then, label %if.end11, !dbg !10507

if.then:                                          ; preds = %lor.lhs.false, %while.body
  %8 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !10508
  %9 = load %struct.bSound*, %struct.bSound** %sound, align 8, !dbg !10510
  %10 = bitcast %struct.bSound* %9 to i8*, !dbg !10510
  call void @writestruct(%struct.WriteData* %8, i32 20307, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.145, i64 0, i64 0), i32 1, i8* %10), !dbg !10511
  %11 = load %struct.bSound*, %struct.bSound** %sound, align 8, !dbg !10512
  %id2 = getelementptr inbounds %struct.bSound, %struct.bSound* %11, i32 0, i32 0, !dbg !10514
  %properties = getelementptr inbounds %struct.ID, %struct.ID* %id2, i32 0, i32 9, !dbg !10515
  %12 = load %struct.IDProperty*, %struct.IDProperty** %properties, align 8, !dbg !10515
  %tobool3 = icmp ne %struct.IDProperty* %12, null, !dbg !10512
  br i1 %tobool3, label %if.then4, label %if.end, !dbg !10516

if.then4:                                         ; preds = %if.then
  %13 = load %struct.bSound*, %struct.bSound** %sound, align 8, !dbg !10517
  %id5 = getelementptr inbounds %struct.bSound, %struct.bSound* %13, i32 0, i32 0, !dbg !10518
  %properties6 = getelementptr inbounds %struct.ID, %struct.ID* %id5, i32 0, i32 9, !dbg !10519
  %14 = load %struct.IDProperty*, %struct.IDProperty** %properties6, align 8, !dbg !10519
  %15 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !10520
  %16 = bitcast %struct.WriteData* %15 to i8*, !dbg !10520
  call void @IDP_WriteProperty(%struct.IDProperty* %14, i8* %16), !dbg !10521
  br label %if.end, !dbg !10521

if.end:                                           ; preds = %if.then4, %if.then
  %17 = load %struct.bSound*, %struct.bSound** %sound, align 8, !dbg !10522
  %packedfile = getelementptr inbounds %struct.bSound, %struct.bSound* %17, i32 0, i32 2, !dbg !10524
  %18 = load %struct.PackedFile*, %struct.PackedFile** %packedfile, align 8, !dbg !10524
  %tobool7 = icmp ne %struct.PackedFile* %18, null, !dbg !10522
  br i1 %tobool7, label %if.then8, label %if.end10, !dbg !10525

if.then8:                                         ; preds = %if.end
  %19 = load %struct.bSound*, %struct.bSound** %sound, align 8, !dbg !10526
  %packedfile9 = getelementptr inbounds %struct.bSound, %struct.bSound* %19, i32 0, i32 2, !dbg !10528
  %20 = load %struct.PackedFile*, %struct.PackedFile** %packedfile9, align 8, !dbg !10528
  store %struct.PackedFile* %20, %struct.PackedFile** %pf, align 8, !dbg !10529
  %21 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !10530
  %22 = load %struct.PackedFile*, %struct.PackedFile** %pf, align 8, !dbg !10531
  %23 = bitcast %struct.PackedFile* %22 to i8*, !dbg !10531
  call void @writestruct(%struct.WriteData* %21, i32 1096040772, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.130, i64 0, i64 0), i32 1, i8* %23), !dbg !10532
  %24 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !10533
  %25 = load %struct.PackedFile*, %struct.PackedFile** %pf, align 8, !dbg !10534
  %size = getelementptr inbounds %struct.PackedFile, %struct.PackedFile* %25, i32 0, i32 0, !dbg !10535
  %26 = load i32, i32* %size, align 8, !dbg !10535
  %27 = load %struct.PackedFile*, %struct.PackedFile** %pf, align 8, !dbg !10536
  %data = getelementptr inbounds %struct.PackedFile, %struct.PackedFile* %27, i32 0, i32 2, !dbg !10537
  %28 = load i8*, i8** %data, align 8, !dbg !10537
  call void @writedata(%struct.WriteData* %24, i32 1096040772, i32 %26, i8* %28), !dbg !10538
  br label %if.end10, !dbg !10539

if.end10:                                         ; preds = %if.then8, %if.end
  br label %if.end11, !dbg !10540

if.end11:                                         ; preds = %if.end10, %lor.lhs.false
  %29 = load %struct.bSound*, %struct.bSound** %sound, align 8, !dbg !10541
  %id12 = getelementptr inbounds %struct.bSound, %struct.bSound* %29, i32 0, i32 0, !dbg !10542
  %next = getelementptr inbounds %struct.ID, %struct.ID* %id12, i32 0, i32 0, !dbg !10543
  %30 = load i8*, i8** %next, align 8, !dbg !10543
  %31 = bitcast i8* %30 to %struct.bSound*, !dbg !10541
  store %struct.bSound* %31, %struct.bSound** %sound, align 8, !dbg !10544
  br label %while.cond, !dbg !10496, !llvm.loop !10545

while.end:                                        ; preds = %while.cond
  %32 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !10547
  call void @mywrite(%struct.WriteData* %32, i8* null, i32 0), !dbg !10548
  ret void, !dbg !10549
}

; Function Attrs: noinline nounwind uwtable
define internal void @write_groups(%struct.WriteData* %wd, %struct.ListBase* %idbase) #0 !dbg !10550 {
entry:
  %wd.addr = alloca %struct.WriteData*, align 8
  %idbase.addr = alloca %struct.ListBase*, align 8
  %group = alloca %struct.Group*, align 8
  %go = alloca %struct.GroupObject*, align 8
  store %struct.WriteData* %wd, %struct.WriteData** %wd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WriteData** %wd.addr, metadata !10551, metadata !DIExpression()), !dbg !10552
  store %struct.ListBase* %idbase, %struct.ListBase** %idbase.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %idbase.addr, metadata !10553, metadata !DIExpression()), !dbg !10554
  call void @llvm.dbg.declare(metadata %struct.Group** %group, metadata !10555, metadata !DIExpression()), !dbg !10558
  call void @llvm.dbg.declare(metadata %struct.GroupObject** %go, metadata !10559, metadata !DIExpression()), !dbg !10571
  %0 = load %struct.ListBase*, %struct.ListBase** %idbase.addr, align 8, !dbg !10572
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %0, i32 0, i32 0, !dbg !10574
  %1 = load i8*, i8** %first, align 8, !dbg !10574
  %2 = bitcast i8* %1 to %struct.Group*, !dbg !10572
  store %struct.Group* %2, %struct.Group** %group, align 8, !dbg !10575
  br label %for.cond, !dbg !10576

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.Group*, %struct.Group** %group, align 8, !dbg !10577
  %tobool = icmp ne %struct.Group* %3, null, !dbg !10579
  br i1 %tobool, label %for.body, label %for.end, !dbg !10579

for.body:                                         ; preds = %for.cond
  %4 = load %struct.Group*, %struct.Group** %group, align 8, !dbg !10580
  %id = getelementptr inbounds %struct.Group, %struct.Group* %4, i32 0, i32 0, !dbg !10583
  %us = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 6, !dbg !10584
  %5 = load i32, i32* %us, align 4, !dbg !10584
  %cmp = icmp sgt i32 %5, 0, !dbg !10585
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !10586

lor.lhs.false:                                    ; preds = %for.body
  %6 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !10587
  %current = getelementptr inbounds %struct.WriteData, %struct.WriteData* %6, i32 0, i32 4, !dbg !10588
  %7 = load %struct.MemFile*, %struct.MemFile** %current, align 8, !dbg !10588
  %tobool1 = icmp ne %struct.MemFile* %7, null, !dbg !10587
  br i1 %tobool1, label %if.then, label %if.end9, !dbg !10589

if.then:                                          ; preds = %lor.lhs.false, %for.body
  %8 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !10590
  %9 = load %struct.Group*, %struct.Group** %group, align 8, !dbg !10592
  %10 = bitcast %struct.Group* %9 to i8*, !dbg !10592
  call void @writestruct(%struct.WriteData* %8, i32 21063, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.146, i64 0, i64 0), i32 1, i8* %10), !dbg !10593
  %11 = load %struct.Group*, %struct.Group** %group, align 8, !dbg !10594
  %id2 = getelementptr inbounds %struct.Group, %struct.Group* %11, i32 0, i32 0, !dbg !10596
  %properties = getelementptr inbounds %struct.ID, %struct.ID* %id2, i32 0, i32 9, !dbg !10597
  %12 = load %struct.IDProperty*, %struct.IDProperty** %properties, align 8, !dbg !10597
  %tobool3 = icmp ne %struct.IDProperty* %12, null, !dbg !10594
  br i1 %tobool3, label %if.then4, label %if.end, !dbg !10598

if.then4:                                         ; preds = %if.then
  %13 = load %struct.Group*, %struct.Group** %group, align 8, !dbg !10599
  %id5 = getelementptr inbounds %struct.Group, %struct.Group* %13, i32 0, i32 0, !dbg !10600
  %properties6 = getelementptr inbounds %struct.ID, %struct.ID* %id5, i32 0, i32 9, !dbg !10601
  %14 = load %struct.IDProperty*, %struct.IDProperty** %properties6, align 8, !dbg !10601
  %15 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !10602
  %16 = bitcast %struct.WriteData* %15 to i8*, !dbg !10602
  call void @IDP_WriteProperty(%struct.IDProperty* %14, i8* %16), !dbg !10603
  br label %if.end, !dbg !10603

if.end:                                           ; preds = %if.then4, %if.then
  %17 = load %struct.Group*, %struct.Group** %group, align 8, !dbg !10604
  %gobject = getelementptr inbounds %struct.Group, %struct.Group* %17, i32 0, i32 1, !dbg !10605
  %first7 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %gobject, i32 0, i32 0, !dbg !10606
  %18 = load i8*, i8** %first7, align 8, !dbg !10606
  %19 = bitcast i8* %18 to %struct.GroupObject*, !dbg !10604
  store %struct.GroupObject* %19, %struct.GroupObject** %go, align 8, !dbg !10607
  br label %while.cond, !dbg !10608

while.cond:                                       ; preds = %while.body, %if.end
  %20 = load %struct.GroupObject*, %struct.GroupObject** %go, align 8, !dbg !10609
  %tobool8 = icmp ne %struct.GroupObject* %20, null, !dbg !10608
  br i1 %tobool8, label %while.body, label %while.end, !dbg !10608

while.body:                                       ; preds = %while.cond
  %21 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !10610
  %22 = load %struct.GroupObject*, %struct.GroupObject** %go, align 8, !dbg !10612
  %23 = bitcast %struct.GroupObject* %22 to i8*, !dbg !10612
  call void @writestruct(%struct.WriteData* %21, i32 1096040772, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.147, i64 0, i64 0), i32 1, i8* %23), !dbg !10613
  %24 = load %struct.GroupObject*, %struct.GroupObject** %go, align 8, !dbg !10614
  %next = getelementptr inbounds %struct.GroupObject, %struct.GroupObject* %24, i32 0, i32 0, !dbg !10615
  %25 = load %struct.GroupObject*, %struct.GroupObject** %next, align 8, !dbg !10615
  store %struct.GroupObject* %25, %struct.GroupObject** %go, align 8, !dbg !10616
  br label %while.cond, !dbg !10608, !llvm.loop !10617

while.end:                                        ; preds = %while.cond
  br label %if.end9, !dbg !10619

if.end9:                                          ; preds = %while.end, %lor.lhs.false
  br label %for.inc, !dbg !10620

for.inc:                                          ; preds = %if.end9
  %26 = load %struct.Group*, %struct.Group** %group, align 8, !dbg !10621
  %id10 = getelementptr inbounds %struct.Group, %struct.Group* %26, i32 0, i32 0, !dbg !10622
  %next11 = getelementptr inbounds %struct.ID, %struct.ID* %id10, i32 0, i32 0, !dbg !10623
  %27 = load i8*, i8** %next11, align 8, !dbg !10623
  %28 = bitcast i8* %27 to %struct.Group*, !dbg !10621
  store %struct.Group* %28, %struct.Group** %group, align 8, !dbg !10624
  br label %for.cond, !dbg !10625, !llvm.loop !10626

for.end:                                          ; preds = %for.cond
  ret void, !dbg !10628
}

; Function Attrs: noinline nounwind uwtable
define internal void @write_armatures(%struct.WriteData* %wd, %struct.ListBase* %idbase) #0 !dbg !10629 {
entry:
  %wd.addr = alloca %struct.WriteData*, align 8
  %idbase.addr = alloca %struct.ListBase*, align 8
  %arm = alloca %struct.bArmature*, align 8
  %bone = alloca %struct.Bone*, align 8
  store %struct.WriteData* %wd, %struct.WriteData** %wd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WriteData** %wd.addr, metadata !10630, metadata !DIExpression()), !dbg !10631
  store %struct.ListBase* %idbase, %struct.ListBase** %idbase.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %idbase.addr, metadata !10632, metadata !DIExpression()), !dbg !10633
  call void @llvm.dbg.declare(metadata %struct.bArmature** %arm, metadata !10634, metadata !DIExpression()), !dbg !10702
  call void @llvm.dbg.declare(metadata %struct.Bone** %bone, metadata !10703, metadata !DIExpression()), !dbg !10704
  %0 = load %struct.ListBase*, %struct.ListBase** %idbase.addr, align 8, !dbg !10705
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %0, i32 0, i32 0, !dbg !10706
  %1 = load i8*, i8** %first, align 8, !dbg !10706
  %2 = bitcast i8* %1 to %struct.bArmature*, !dbg !10705
  store %struct.bArmature* %2, %struct.bArmature** %arm, align 8, !dbg !10707
  br label %while.cond, !dbg !10708

while.cond:                                       ; preds = %if.end15, %entry
  %3 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !10709
  %tobool = icmp ne %struct.bArmature* %3, null, !dbg !10708
  br i1 %tobool, label %while.body, label %while.end18, !dbg !10708

while.body:                                       ; preds = %while.cond
  %4 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !10710
  %id = getelementptr inbounds %struct.bArmature, %struct.bArmature* %4, i32 0, i32 0, !dbg !10713
  %us = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 6, !dbg !10714
  %5 = load i32, i32* %us, align 4, !dbg !10714
  %cmp = icmp sgt i32 %5, 0, !dbg !10715
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !10716

lor.lhs.false:                                    ; preds = %while.body
  %6 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !10717
  %current = getelementptr inbounds %struct.WriteData, %struct.WriteData* %6, i32 0, i32 4, !dbg !10718
  %7 = load %struct.MemFile*, %struct.MemFile** %current, align 8, !dbg !10718
  %tobool1 = icmp ne %struct.MemFile* %7, null, !dbg !10717
  br i1 %tobool1, label %if.then, label %if.end15, !dbg !10719

if.then:                                          ; preds = %lor.lhs.false, %while.body
  %8 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !10720
  %9 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !10722
  %10 = bitcast %struct.bArmature* %9 to i8*, !dbg !10722
  call void @writestruct(%struct.WriteData* %8, i32 21057, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.148, i64 0, i64 0), i32 1, i8* %10), !dbg !10723
  %11 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !10724
  %id2 = getelementptr inbounds %struct.bArmature, %struct.bArmature* %11, i32 0, i32 0, !dbg !10726
  %properties = getelementptr inbounds %struct.ID, %struct.ID* %id2, i32 0, i32 9, !dbg !10727
  %12 = load %struct.IDProperty*, %struct.IDProperty** %properties, align 8, !dbg !10727
  %tobool3 = icmp ne %struct.IDProperty* %12, null, !dbg !10724
  br i1 %tobool3, label %if.then4, label %if.end, !dbg !10728

if.then4:                                         ; preds = %if.then
  %13 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !10729
  %id5 = getelementptr inbounds %struct.bArmature, %struct.bArmature* %13, i32 0, i32 0, !dbg !10730
  %properties6 = getelementptr inbounds %struct.ID, %struct.ID* %id5, i32 0, i32 9, !dbg !10731
  %14 = load %struct.IDProperty*, %struct.IDProperty** %properties6, align 8, !dbg !10731
  %15 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !10732
  %16 = bitcast %struct.WriteData* %15 to i8*, !dbg !10732
  call void @IDP_WriteProperty(%struct.IDProperty* %14, i8* %16), !dbg !10733
  br label %if.end, !dbg !10733

if.end:                                           ; preds = %if.then4, %if.then
  %17 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !10734
  %adt = getelementptr inbounds %struct.bArmature, %struct.bArmature* %17, i32 0, i32 1, !dbg !10736
  %18 = load %struct.AnimData*, %struct.AnimData** %adt, align 8, !dbg !10736
  %tobool7 = icmp ne %struct.AnimData* %18, null, !dbg !10734
  br i1 %tobool7, label %if.then8, label %if.end10, !dbg !10737

if.then8:                                         ; preds = %if.end
  %19 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !10738
  %20 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !10739
  %adt9 = getelementptr inbounds %struct.bArmature, %struct.bArmature* %20, i32 0, i32 1, !dbg !10740
  %21 = load %struct.AnimData*, %struct.AnimData** %adt9, align 8, !dbg !10740
  call void @write_animdata(%struct.WriteData* %19, %struct.AnimData* %21), !dbg !10741
  br label %if.end10, !dbg !10741

if.end10:                                         ; preds = %if.then8, %if.end
  %22 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !10742
  %bonebase = getelementptr inbounds %struct.bArmature, %struct.bArmature* %22, i32 0, i32 2, !dbg !10743
  %first11 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %bonebase, i32 0, i32 0, !dbg !10744
  %23 = load i8*, i8** %first11, align 8, !dbg !10744
  %24 = bitcast i8* %23 to %struct.Bone*, !dbg !10742
  store %struct.Bone* %24, %struct.Bone** %bone, align 8, !dbg !10745
  br label %while.cond12, !dbg !10746

while.cond12:                                     ; preds = %while.body14, %if.end10
  %25 = load %struct.Bone*, %struct.Bone** %bone, align 8, !dbg !10747
  %tobool13 = icmp ne %struct.Bone* %25, null, !dbg !10746
  br i1 %tobool13, label %while.body14, label %while.end, !dbg !10746

while.body14:                                     ; preds = %while.cond12
  %26 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !10748
  %27 = load %struct.Bone*, %struct.Bone** %bone, align 8, !dbg !10750
  call void @write_bone(%struct.WriteData* %26, %struct.Bone* %27), !dbg !10751
  %28 = load %struct.Bone*, %struct.Bone** %bone, align 8, !dbg !10752
  %next = getelementptr inbounds %struct.Bone, %struct.Bone* %28, i32 0, i32 0, !dbg !10753
  %29 = load %struct.Bone*, %struct.Bone** %next, align 8, !dbg !10753
  store %struct.Bone* %29, %struct.Bone** %bone, align 8, !dbg !10754
  br label %while.cond12, !dbg !10746, !llvm.loop !10755

while.end:                                        ; preds = %while.cond12
  br label %if.end15, !dbg !10757

if.end15:                                         ; preds = %while.end, %lor.lhs.false
  %30 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !10758
  %id16 = getelementptr inbounds %struct.bArmature, %struct.bArmature* %30, i32 0, i32 0, !dbg !10759
  %next17 = getelementptr inbounds %struct.ID, %struct.ID* %id16, i32 0, i32 0, !dbg !10760
  %31 = load i8*, i8** %next17, align 8, !dbg !10760
  %32 = bitcast i8* %31 to %struct.bArmature*, !dbg !10758
  store %struct.bArmature* %32, %struct.bArmature** %arm, align 8, !dbg !10761
  br label %while.cond, !dbg !10708, !llvm.loop !10762

while.end18:                                      ; preds = %while.cond
  %33 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !10764
  call void @mywrite(%struct.WriteData* %33, i8* null, i32 0), !dbg !10765
  ret void, !dbg !10766
}

; Function Attrs: noinline nounwind uwtable
define internal void @write_actions(%struct.WriteData* %wd, %struct.ListBase* %idbase) #0 !dbg !10767 {
entry:
  %wd.addr = alloca %struct.WriteData*, align 8
  %idbase.addr = alloca %struct.ListBase*, align 8
  %act = alloca %struct.bAction*, align 8
  %grp = alloca %struct.bActionGroup*, align 8
  %marker = alloca %struct.TimeMarker*, align 8
  store %struct.WriteData* %wd, %struct.WriteData** %wd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WriteData** %wd.addr, metadata !10768, metadata !DIExpression()), !dbg !10769
  store %struct.ListBase* %idbase, %struct.ListBase** %idbase.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %idbase.addr, metadata !10770, metadata !DIExpression()), !dbg !10771
  call void @llvm.dbg.declare(metadata %struct.bAction** %act, metadata !10772, metadata !DIExpression()), !dbg !10773
  call void @llvm.dbg.declare(metadata %struct.bActionGroup** %grp, metadata !10774, metadata !DIExpression()), !dbg !10795
  call void @llvm.dbg.declare(metadata %struct.TimeMarker** %marker, metadata !10796, metadata !DIExpression()), !dbg !10797
  %0 = load %struct.ListBase*, %struct.ListBase** %idbase.addr, align 8, !dbg !10798
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %0, i32 0, i32 0, !dbg !10800
  %1 = load i8*, i8** %first, align 8, !dbg !10800
  %2 = bitcast i8* %1 to %struct.bAction*, !dbg !10798
  store %struct.bAction* %2, %struct.bAction** %act, align 8, !dbg !10801
  br label %for.cond, !dbg !10802

for.cond:                                         ; preds = %for.inc19, %entry
  %3 = load %struct.bAction*, %struct.bAction** %act, align 8, !dbg !10803
  %tobool = icmp ne %struct.bAction* %3, null, !dbg !10805
  br i1 %tobool, label %for.body, label %for.end22, !dbg !10805

for.body:                                         ; preds = %for.cond
  %4 = load %struct.bAction*, %struct.bAction** %act, align 8, !dbg !10806
  %id = getelementptr inbounds %struct.bAction, %struct.bAction* %4, i32 0, i32 0, !dbg !10809
  %us = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 6, !dbg !10810
  %5 = load i32, i32* %us, align 4, !dbg !10810
  %cmp = icmp sgt i32 %5, 0, !dbg !10811
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !10812

lor.lhs.false:                                    ; preds = %for.body
  %6 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !10813
  %current = getelementptr inbounds %struct.WriteData, %struct.WriteData* %6, i32 0, i32 4, !dbg !10814
  %7 = load %struct.MemFile*, %struct.MemFile** %current, align 8, !dbg !10814
  %tobool1 = icmp ne %struct.MemFile* %7, null, !dbg !10813
  br i1 %tobool1, label %if.then, label %if.end18, !dbg !10815

if.then:                                          ; preds = %lor.lhs.false, %for.body
  %8 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !10816
  %9 = load %struct.bAction*, %struct.bAction** %act, align 8, !dbg !10818
  %10 = bitcast %struct.bAction* %9 to i8*, !dbg !10818
  call void @writestruct(%struct.WriteData* %8, i32 17217, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.150, i64 0, i64 0), i32 1, i8* %10), !dbg !10819
  %11 = load %struct.bAction*, %struct.bAction** %act, align 8, !dbg !10820
  %id2 = getelementptr inbounds %struct.bAction, %struct.bAction* %11, i32 0, i32 0, !dbg !10822
  %properties = getelementptr inbounds %struct.ID, %struct.ID* %id2, i32 0, i32 9, !dbg !10823
  %12 = load %struct.IDProperty*, %struct.IDProperty** %properties, align 8, !dbg !10823
  %tobool3 = icmp ne %struct.IDProperty* %12, null, !dbg !10820
  br i1 %tobool3, label %if.then4, label %if.end, !dbg !10824

if.then4:                                         ; preds = %if.then
  %13 = load %struct.bAction*, %struct.bAction** %act, align 8, !dbg !10825
  %id5 = getelementptr inbounds %struct.bAction, %struct.bAction* %13, i32 0, i32 0, !dbg !10826
  %properties6 = getelementptr inbounds %struct.ID, %struct.ID* %id5, i32 0, i32 9, !dbg !10827
  %14 = load %struct.IDProperty*, %struct.IDProperty** %properties6, align 8, !dbg !10827
  %15 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !10828
  %16 = bitcast %struct.WriteData* %15 to i8*, !dbg !10828
  call void @IDP_WriteProperty(%struct.IDProperty* %14, i8* %16), !dbg !10829
  br label %if.end, !dbg !10829

if.end:                                           ; preds = %if.then4, %if.then
  %17 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !10830
  %18 = load %struct.bAction*, %struct.bAction** %act, align 8, !dbg !10831
  %curves = getelementptr inbounds %struct.bAction, %struct.bAction* %18, i32 0, i32 1, !dbg !10832
  call void @write_fcurves(%struct.WriteData* %17, %struct.ListBase* %curves), !dbg !10833
  %19 = load %struct.bAction*, %struct.bAction** %act, align 8, !dbg !10834
  %groups = getelementptr inbounds %struct.bAction, %struct.bAction* %19, i32 0, i32 3, !dbg !10836
  %first7 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %groups, i32 0, i32 0, !dbg !10837
  %20 = load i8*, i8** %first7, align 8, !dbg !10837
  %21 = bitcast i8* %20 to %struct.bActionGroup*, !dbg !10834
  store %struct.bActionGroup* %21, %struct.bActionGroup** %grp, align 8, !dbg !10838
  br label %for.cond8, !dbg !10839

for.cond8:                                        ; preds = %for.inc, %if.end
  %22 = load %struct.bActionGroup*, %struct.bActionGroup** %grp, align 8, !dbg !10840
  %tobool9 = icmp ne %struct.bActionGroup* %22, null, !dbg !10842
  br i1 %tobool9, label %for.body10, label %for.end, !dbg !10842

for.body10:                                       ; preds = %for.cond8
  %23 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !10843
  %24 = load %struct.bActionGroup*, %struct.bActionGroup** %grp, align 8, !dbg !10845
  %25 = bitcast %struct.bActionGroup* %24 to i8*, !dbg !10845
  call void @writestruct(%struct.WriteData* %23, i32 1096040772, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.151, i64 0, i64 0), i32 1, i8* %25), !dbg !10846
  br label %for.inc, !dbg !10847

for.inc:                                          ; preds = %for.body10
  %26 = load %struct.bActionGroup*, %struct.bActionGroup** %grp, align 8, !dbg !10848
  %next = getelementptr inbounds %struct.bActionGroup, %struct.bActionGroup* %26, i32 0, i32 0, !dbg !10849
  %27 = load %struct.bActionGroup*, %struct.bActionGroup** %next, align 8, !dbg !10849
  store %struct.bActionGroup* %27, %struct.bActionGroup** %grp, align 8, !dbg !10850
  br label %for.cond8, !dbg !10851, !llvm.loop !10852

for.end:                                          ; preds = %for.cond8
  %28 = load %struct.bAction*, %struct.bAction** %act, align 8, !dbg !10854
  %markers = getelementptr inbounds %struct.bAction, %struct.bAction* %28, i32 0, i32 4, !dbg !10856
  %first11 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %markers, i32 0, i32 0, !dbg !10857
  %29 = load i8*, i8** %first11, align 8, !dbg !10857
  %30 = bitcast i8* %29 to %struct.TimeMarker*, !dbg !10854
  store %struct.TimeMarker* %30, %struct.TimeMarker** %marker, align 8, !dbg !10858
  br label %for.cond12, !dbg !10859

for.cond12:                                       ; preds = %for.inc15, %for.end
  %31 = load %struct.TimeMarker*, %struct.TimeMarker** %marker, align 8, !dbg !10860
  %tobool13 = icmp ne %struct.TimeMarker* %31, null, !dbg !10862
  br i1 %tobool13, label %for.body14, label %for.end17, !dbg !10862

for.body14:                                       ; preds = %for.cond12
  %32 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !10863
  %33 = load %struct.TimeMarker*, %struct.TimeMarker** %marker, align 8, !dbg !10865
  %34 = bitcast %struct.TimeMarker* %33 to i8*, !dbg !10865
  call void @writestruct(%struct.WriteData* %32, i32 1096040772, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.100, i64 0, i64 0), i32 1, i8* %34), !dbg !10866
  br label %for.inc15, !dbg !10867

for.inc15:                                        ; preds = %for.body14
  %35 = load %struct.TimeMarker*, %struct.TimeMarker** %marker, align 8, !dbg !10868
  %next16 = getelementptr inbounds %struct.TimeMarker, %struct.TimeMarker* %35, i32 0, i32 0, !dbg !10869
  %36 = load %struct.TimeMarker*, %struct.TimeMarker** %next16, align 8, !dbg !10869
  store %struct.TimeMarker* %36, %struct.TimeMarker** %marker, align 8, !dbg !10870
  br label %for.cond12, !dbg !10871, !llvm.loop !10872

for.end17:                                        ; preds = %for.cond12
  br label %if.end18, !dbg !10874

if.end18:                                         ; preds = %for.end17, %lor.lhs.false
  br label %for.inc19, !dbg !10875

for.inc19:                                        ; preds = %if.end18
  %37 = load %struct.bAction*, %struct.bAction** %act, align 8, !dbg !10876
  %id20 = getelementptr inbounds %struct.bAction, %struct.bAction* %37, i32 0, i32 0, !dbg !10877
  %next21 = getelementptr inbounds %struct.ID, %struct.ID* %id20, i32 0, i32 0, !dbg !10878
  %38 = load i8*, i8** %next21, align 8, !dbg !10878
  %39 = bitcast i8* %38 to %struct.bAction*, !dbg !10876
  store %struct.bAction* %39, %struct.bAction** %act, align 8, !dbg !10879
  br label %for.cond, !dbg !10880, !llvm.loop !10881

for.end22:                                        ; preds = %for.cond
  %40 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !10883
  call void @mywrite(%struct.WriteData* %40, i8* null, i32 0), !dbg !10884
  ret void, !dbg !10885
}

; Function Attrs: noinline nounwind uwtable
define internal void @write_objects(%struct.WriteData* %wd, %struct.ListBase* %idbase) #0 !dbg !10886 {
entry:
  %wd.addr = alloca %struct.WriteData*, align 8
  %idbase.addr = alloca %struct.ListBase*, align 8
  %ob = alloca %struct.Object*, align 8
  %arm = alloca %struct.bArmature*, align 8
  store %struct.WriteData* %wd, %struct.WriteData** %wd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WriteData** %wd.addr, metadata !10887, metadata !DIExpression()), !dbg !10888
  store %struct.ListBase* %idbase, %struct.ListBase** %idbase.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %idbase.addr, metadata !10889, metadata !DIExpression()), !dbg !10890
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !10891, metadata !DIExpression()), !dbg !10894
  %0 = load %struct.ListBase*, %struct.ListBase** %idbase.addr, align 8, !dbg !10895
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %0, i32 0, i32 0, !dbg !10896
  %1 = load i8*, i8** %first, align 8, !dbg !10896
  %2 = bitcast i8* %1 to %struct.Object*, !dbg !10895
  store %struct.Object* %2, %struct.Object** %ob, align 8, !dbg !10897
  br label %while.cond, !dbg !10898

while.cond:                                       ; preds = %if.end55, %entry
  %3 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !10899
  %tobool = icmp ne %struct.Object* %3, null, !dbg !10898
  br i1 %tobool, label %while.body, label %while.end, !dbg !10898

while.body:                                       ; preds = %while.cond
  %4 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !10900
  %id = getelementptr inbounds %struct.Object, %struct.Object* %4, i32 0, i32 0, !dbg !10903
  %us = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 6, !dbg !10904
  %5 = load i32, i32* %us, align 4, !dbg !10904
  %cmp = icmp sgt i32 %5, 0, !dbg !10905
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !10906

lor.lhs.false:                                    ; preds = %while.body
  %6 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !10907
  %current = getelementptr inbounds %struct.WriteData, %struct.WriteData* %6, i32 0, i32 4, !dbg !10908
  %7 = load %struct.MemFile*, %struct.MemFile** %current, align 8, !dbg !10908
  %tobool1 = icmp ne %struct.MemFile* %7, null, !dbg !10907
  br i1 %tobool1, label %if.then, label %if.end55, !dbg !10909

if.then:                                          ; preds = %lor.lhs.false, %while.body
  %8 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !10910
  %9 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !10912
  %10 = bitcast %struct.Object* %9 to i8*, !dbg !10912
  call void @writestruct(%struct.WriteData* %8, i32 16975, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.152, i64 0, i64 0), i32 1, i8* %10), !dbg !10913
  %11 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !10914
  %id2 = getelementptr inbounds %struct.Object, %struct.Object* %11, i32 0, i32 0, !dbg !10916
  %properties = getelementptr inbounds %struct.ID, %struct.ID* %id2, i32 0, i32 9, !dbg !10917
  %12 = load %struct.IDProperty*, %struct.IDProperty** %properties, align 8, !dbg !10917
  %tobool3 = icmp ne %struct.IDProperty* %12, null, !dbg !10914
  br i1 %tobool3, label %if.then4, label %if.end, !dbg !10918

if.then4:                                         ; preds = %if.then
  %13 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !10919
  %id5 = getelementptr inbounds %struct.Object, %struct.Object* %13, i32 0, i32 0, !dbg !10920
  %properties6 = getelementptr inbounds %struct.ID, %struct.ID* %id5, i32 0, i32 9, !dbg !10921
  %14 = load %struct.IDProperty*, %struct.IDProperty** %properties6, align 8, !dbg !10921
  %15 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !10922
  %16 = bitcast %struct.WriteData* %15 to i8*, !dbg !10922
  call void @IDP_WriteProperty(%struct.IDProperty* %14, i8* %16), !dbg !10923
  br label %if.end, !dbg !10923

if.end:                                           ; preds = %if.then4, %if.then
  %17 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !10924
  %adt = getelementptr inbounds %struct.Object, %struct.Object* %17, i32 0, i32 1, !dbg !10926
  %18 = load %struct.AnimData*, %struct.AnimData** %adt, align 8, !dbg !10926
  %tobool7 = icmp ne %struct.AnimData* %18, null, !dbg !10924
  br i1 %tobool7, label %if.then8, label %if.end10, !dbg !10927

if.then8:                                         ; preds = %if.end
  %19 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !10928
  %20 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !10929
  %adt9 = getelementptr inbounds %struct.Object, %struct.Object* %20, i32 0, i32 1, !dbg !10930
  %21 = load %struct.AnimData*, %struct.AnimData** %adt9, align 8, !dbg !10930
  call void @write_animdata(%struct.WriteData* %19, %struct.AnimData* %21), !dbg !10931
  br label %if.end10, !dbg !10931

if.end10:                                         ; preds = %if.then8, %if.end
  %22 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !10932
  %23 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !10933
  %totcol = getelementptr inbounds %struct.Object, %struct.Object* %23, i32 0, i32 31, !dbg !10934
  %24 = load i32, i32* %totcol, align 8, !dbg !10934
  %conv = sext i32 %24 to i64, !dbg !10933
  %mul = mul i64 8, %conv, !dbg !10935
  %conv11 = trunc i64 %mul to i32, !dbg !10936
  %25 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !10937
  %mat = getelementptr inbounds %struct.Object, %struct.Object* %25, i32 0, i32 29, !dbg !10938
  %26 = load %struct.Material**, %struct.Material*** %mat, align 8, !dbg !10938
  %27 = bitcast %struct.Material** %26 to i8*, !dbg !10937
  call void @writedata(%struct.WriteData* %22, i32 1096040772, i32 %conv11, i8* %27), !dbg !10939
  %28 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !10940
  %29 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !10941
  %totcol12 = getelementptr inbounds %struct.Object, %struct.Object* %29, i32 0, i32 31, !dbg !10942
  %30 = load i32, i32* %totcol12, align 8, !dbg !10942
  %conv13 = sext i32 %30 to i64, !dbg !10941
  %mul14 = mul i64 1, %conv13, !dbg !10943
  %conv15 = trunc i64 %mul14 to i32, !dbg !10944
  %31 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !10945
  %matbits = getelementptr inbounds %struct.Object, %struct.Object* %31, i32 0, i32 30, !dbg !10946
  %32 = load i8*, i8** %matbits, align 8, !dbg !10946
  call void @writedata(%struct.WriteData* %28, i32 1096040772, i32 %conv15, i8* %32), !dbg !10947
  %33 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !10948
  %34 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !10949
  %prop = getelementptr inbounds %struct.Object, %struct.Object* %34, i32 0, i32 91, !dbg !10950
  call void @write_properties(%struct.WriteData* %33, %struct.ListBase* %prop), !dbg !10951
  %35 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !10952
  %36 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !10953
  %sensors = getelementptr inbounds %struct.Object, %struct.Object* %36, i32 0, i32 92, !dbg !10954
  call void @write_sensors(%struct.WriteData* %35, %struct.ListBase* %sensors), !dbg !10955
  %37 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !10956
  %38 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !10957
  %controllers = getelementptr inbounds %struct.Object, %struct.Object* %38, i32 0, i32 93, !dbg !10958
  call void @write_controllers(%struct.WriteData* %37, %struct.ListBase* %controllers), !dbg !10959
  %39 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !10960
  %40 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !10961
  %actuators = getelementptr inbounds %struct.Object, %struct.Object* %40, i32 0, i32 94, !dbg !10962
  call void @write_actuators(%struct.WriteData* %39, %struct.ListBase* %actuators), !dbg !10963
  %41 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !10964
  %type = getelementptr inbounds %struct.Object, %struct.Object* %41, i32 0, i32 3, !dbg !10966
  %42 = load i16, i16* %type, align 8, !dbg !10966
  %conv16 = sext i16 %42 to i32, !dbg !10964
  %cmp17 = icmp eq i32 %conv16, 25, !dbg !10967
  br i1 %cmp17, label %if.then19, label %if.end29, !dbg !10968

if.then19:                                        ; preds = %if.end10
  call void @llvm.dbg.declare(metadata %struct.bArmature** %arm, metadata !10969, metadata !DIExpression()), !dbg !10971
  %43 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !10972
  %data = getelementptr inbounds %struct.Object, %struct.Object* %43, i32 0, i32 19, !dbg !10973
  %44 = load i8*, i8** %data, align 8, !dbg !10973
  %45 = bitcast i8* %44 to %struct.bArmature*, !dbg !10972
  store %struct.bArmature* %45, %struct.bArmature** %arm, align 8, !dbg !10971
  %46 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !10974
  %tobool20 = icmp ne %struct.bArmature* %46, null, !dbg !10974
  br i1 %tobool20, label %land.lhs.true, label %if.end28, !dbg !10976

land.lhs.true:                                    ; preds = %if.then19
  %47 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !10977
  %pose = getelementptr inbounds %struct.Object, %struct.Object* %47, i32 0, i32 18, !dbg !10978
  %48 = load %struct.bPose*, %struct.bPose** %pose, align 8, !dbg !10978
  %tobool21 = icmp ne %struct.bPose* %48, null, !dbg !10977
  br i1 %tobool21, label %land.lhs.true22, label %if.end28, !dbg !10979

land.lhs.true22:                                  ; preds = %land.lhs.true
  %49 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !10980
  %act_bone = getelementptr inbounds %struct.bArmature, %struct.bArmature* %49, i32 0, i32 5, !dbg !10981
  %50 = load %struct.Bone*, %struct.Bone** %act_bone, align 8, !dbg !10981
  %tobool23 = icmp ne %struct.Bone* %50, null, !dbg !10980
  br i1 %tobool23, label %if.then24, label %if.end28, !dbg !10982

if.then24:                                        ; preds = %land.lhs.true22
  %51 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !10983
  %pose25 = getelementptr inbounds %struct.Object, %struct.Object* %51, i32 0, i32 18, !dbg !10985
  %52 = load %struct.bPose*, %struct.bPose** %pose25, align 8, !dbg !10985
  %proxy_act_bone = getelementptr inbounds %struct.bPose, %struct.bPose* %52, i32 0, i32 15, !dbg !10986
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %proxy_act_bone, i64 0, i64 0, !dbg !10983
  %53 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !10987
  %act_bone26 = getelementptr inbounds %struct.bArmature, %struct.bArmature* %53, i32 0, i32 5, !dbg !10988
  %54 = load %struct.Bone*, %struct.Bone** %act_bone26, align 8, !dbg !10988
  %name = getelementptr inbounds %struct.Bone, %struct.Bone* %54, i32 0, i32 5, !dbg !10989
  %arraydecay27 = getelementptr inbounds [64 x i8], [64 x i8]* %name, i64 0, i64 0, !dbg !10987
  %call = call i8* @BLI_strncpy(i8* %arraydecay, i8* %arraydecay27, i64 64), !dbg !10990
  br label %if.end28, !dbg !10991

if.end28:                                         ; preds = %if.then24, %land.lhs.true22, %land.lhs.true, %if.then19
  br label %if.end29, !dbg !10992

if.end29:                                         ; preds = %if.end28, %if.end10
  %55 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !10993
  %56 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !10994
  %pose30 = getelementptr inbounds %struct.Object, %struct.Object* %56, i32 0, i32 18, !dbg !10995
  %57 = load %struct.bPose*, %struct.bPose** %pose30, align 8, !dbg !10995
  call void @write_pose(%struct.WriteData* %55, %struct.bPose* %57), !dbg !10996
  %58 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !10997
  %59 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !10998
  %defbase = getelementptr inbounds %struct.Object, %struct.Object* %59, i32 0, i32 25, !dbg !10999
  call void @write_defgroups(%struct.WriteData* %58, %struct.ListBase* %defbase), !dbg !11000
  %60 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !11001
  %61 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !11002
  %constraints = getelementptr inbounds %struct.Object, %struct.Object* %61, i32 0, i32 106, !dbg !11003
  call void @write_constraints(%struct.WriteData* %60, %struct.ListBase* %constraints), !dbg !11004
  %62 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !11005
  %63 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !11006
  %mpath = getelementptr inbounds %struct.Object, %struct.Object* %63, i32 0, i32 22, !dbg !11007
  %64 = load %struct.bMotionPath*, %struct.bMotionPath** %mpath, align 8, !dbg !11007
  call void @write_motionpath(%struct.WriteData* %62, %struct.bMotionPath* %64), !dbg !11008
  %65 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !11009
  %66 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !11010
  %pd = getelementptr inbounds %struct.Object, %struct.Object* %66, i32 0, i32 110, !dbg !11011
  %67 = load %struct.PartDeflect*, %struct.PartDeflect** %pd, align 8, !dbg !11011
  %68 = bitcast %struct.PartDeflect* %67 to i8*, !dbg !11010
  call void @writestruct(%struct.WriteData* %65, i32 1096040772, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.153, i64 0, i64 0), i32 1, i8* %68), !dbg !11012
  %69 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !11013
  %70 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !11014
  %soft = getelementptr inbounds %struct.Object, %struct.Object* %70, i32 0, i32 111, !dbg !11015
  %71 = load %struct.SoftBody*, %struct.SoftBody** %soft, align 8, !dbg !11015
  %72 = bitcast %struct.SoftBody* %71 to i8*, !dbg !11014
  call void @writestruct(%struct.WriteData* %69, i32 1096040772, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.154, i64 0, i64 0), i32 1, i8* %72), !dbg !11016
  %73 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !11017
  %soft31 = getelementptr inbounds %struct.Object, %struct.Object* %73, i32 0, i32 111, !dbg !11019
  %74 = load %struct.SoftBody*, %struct.SoftBody** %soft31, align 8, !dbg !11019
  %tobool32 = icmp ne %struct.SoftBody* %74, null, !dbg !11017
  br i1 %tobool32, label %if.then33, label %if.end36, !dbg !11020

if.then33:                                        ; preds = %if.end29
  %75 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !11021
  %76 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !11023
  %soft34 = getelementptr inbounds %struct.Object, %struct.Object* %76, i32 0, i32 111, !dbg !11024
  %77 = load %struct.SoftBody*, %struct.SoftBody** %soft34, align 8, !dbg !11024
  %ptcaches = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %77, i32 0, i32 48, !dbg !11025
  call void @write_pointcaches(%struct.WriteData* %75, %struct.ListBase* %ptcaches), !dbg !11026
  %78 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !11027
  %79 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !11028
  %soft35 = getelementptr inbounds %struct.Object, %struct.Object* %79, i32 0, i32 111, !dbg !11029
  %80 = load %struct.SoftBody*, %struct.SoftBody** %soft35, align 8, !dbg !11029
  %effector_weights = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %80, i32 0, i32 49, !dbg !11030
  %81 = load %struct.EffectorWeights*, %struct.EffectorWeights** %effector_weights, align 8, !dbg !11030
  %82 = bitcast %struct.EffectorWeights* %81 to i8*, !dbg !11028
  call void @writestruct(%struct.WriteData* %78, i32 1096040772, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.107, i64 0, i64 0), i32 1, i8* %82), !dbg !11031
  br label %if.end36, !dbg !11032

if.end36:                                         ; preds = %if.then33, %if.end29
  %83 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !11033
  %84 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !11034
  %bsoft = getelementptr inbounds %struct.Object, %struct.Object* %84, i32 0, i32 101, !dbg !11035
  %85 = load %struct.BulletSoftBody*, %struct.BulletSoftBody** %bsoft, align 8, !dbg !11035
  %86 = bitcast %struct.BulletSoftBody* %85 to i8*, !dbg !11034
  call void @writestruct(%struct.WriteData* %83, i32 1096040772, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.155, i64 0, i64 0), i32 1, i8* %86), !dbg !11036
  %87 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !11037
  %rigidbody_object = getelementptr inbounds %struct.Object, %struct.Object* %87, i32 0, i32 128, !dbg !11039
  %88 = load %struct.RigidBodyOb*, %struct.RigidBodyOb** %rigidbody_object, align 8, !dbg !11039
  %tobool37 = icmp ne %struct.RigidBodyOb* %88, null, !dbg !11037
  br i1 %tobool37, label %if.then38, label %if.end40, !dbg !11040

if.then38:                                        ; preds = %if.end36
  %89 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !11041
  %90 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !11043
  %rigidbody_object39 = getelementptr inbounds %struct.Object, %struct.Object* %90, i32 0, i32 128, !dbg !11044
  %91 = load %struct.RigidBodyOb*, %struct.RigidBodyOb** %rigidbody_object39, align 8, !dbg !11044
  %92 = bitcast %struct.RigidBodyOb* %91 to i8*, !dbg !11043
  call void @writestruct(%struct.WriteData* %89, i32 1096040772, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.156, i64 0, i64 0), i32 1, i8* %92), !dbg !11045
  br label %if.end40, !dbg !11046

if.end40:                                         ; preds = %if.then38, %if.end36
  %93 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !11047
  %rigidbody_constraint = getelementptr inbounds %struct.Object, %struct.Object* %93, i32 0, i32 129, !dbg !11049
  %94 = load %struct.RigidBodyCon*, %struct.RigidBodyCon** %rigidbody_constraint, align 8, !dbg !11049
  %tobool41 = icmp ne %struct.RigidBodyCon* %94, null, !dbg !11047
  br i1 %tobool41, label %if.then42, label %if.end44, !dbg !11050

if.then42:                                        ; preds = %if.end40
  %95 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !11051
  %96 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !11053
  %rigidbody_constraint43 = getelementptr inbounds %struct.Object, %struct.Object* %96, i32 0, i32 129, !dbg !11054
  %97 = load %struct.RigidBodyCon*, %struct.RigidBodyCon** %rigidbody_constraint43, align 8, !dbg !11054
  %98 = bitcast %struct.RigidBodyCon* %97 to i8*, !dbg !11053
  call void @writestruct(%struct.WriteData* %95, i32 1096040772, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.157, i64 0, i64 0), i32 1, i8* %98), !dbg !11055
  br label %if.end44, !dbg !11056

if.end44:                                         ; preds = %if.then42, %if.end40
  %99 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !11057
  %type45 = getelementptr inbounds %struct.Object, %struct.Object* %99, i32 0, i32 3, !dbg !11059
  %100 = load i16, i16* %type45, align 8, !dbg !11059
  %conv46 = sext i16 %100 to i32, !dbg !11057
  %cmp47 = icmp eq i32 %conv46, 0, !dbg !11060
  br i1 %cmp47, label %land.lhs.true49, label %if.end54, !dbg !11061

land.lhs.true49:                                  ; preds = %if.end44
  %101 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !11062
  %empty_drawtype = getelementptr inbounds %struct.Object, %struct.Object* %101, i32 0, i32 88, !dbg !11063
  %102 = load i8, i8* %empty_drawtype, align 1, !dbg !11063
  %conv50 = zext i8 %102 to i32, !dbg !11062
  %cmp51 = icmp eq i32 %conv50, 8, !dbg !11064
  br i1 %cmp51, label %if.then53, label %if.end54, !dbg !11065

if.then53:                                        ; preds = %land.lhs.true49
  %103 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !11066
  %104 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !11068
  %iuser = getelementptr inbounds %struct.Object, %struct.Object* %104, i32 0, i32 131, !dbg !11069
  %105 = load %struct.ImageUser*, %struct.ImageUser** %iuser, align 8, !dbg !11069
  %106 = bitcast %struct.ImageUser* %105 to i8*, !dbg !11068
  call void @writestruct(%struct.WriteData* %103, i32 1096040772, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.158, i64 0, i64 0), i32 1, i8* %106), !dbg !11070
  br label %if.end54, !dbg !11071

if.end54:                                         ; preds = %if.then53, %land.lhs.true49, %if.end44
  %107 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !11072
  %108 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !11073
  %particlesystem = getelementptr inbounds %struct.Object, %struct.Object* %108, i32 0, i32 109, !dbg !11074
  call void @write_particlesystems(%struct.WriteData* %107, %struct.ListBase* %particlesystem), !dbg !11075
  %109 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !11076
  %110 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !11077
  %modifiers = getelementptr inbounds %struct.Object, %struct.Object* %110, i32 0, i32 26, !dbg !11078
  call void @write_modifiers(%struct.WriteData* %109, %struct.ListBase* %modifiers), !dbg !11079
  %111 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !11080
  %112 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !11081
  %pc_ids = getelementptr inbounds %struct.Object, %struct.Object* %112, i32 0, i32 126, !dbg !11082
  call void @writelist(%struct.WriteData* %111, i32 1096040772, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.159, i64 0, i64 0), %struct.ListBase* %pc_ids), !dbg !11083
  %113 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !11084
  %114 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !11085
  %lodlevels = getelementptr inbounds %struct.Object, %struct.Object* %114, i32 0, i32 132, !dbg !11086
  call void @writelist(%struct.WriteData* %113, i32 1096040772, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.160, i64 0, i64 0), %struct.ListBase* %lodlevels), !dbg !11087
  br label %if.end55, !dbg !11088

if.end55:                                         ; preds = %if.end54, %lor.lhs.false
  %115 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !11089
  %id56 = getelementptr inbounds %struct.Object, %struct.Object* %115, i32 0, i32 0, !dbg !11090
  %next = getelementptr inbounds %struct.ID, %struct.ID* %id56, i32 0, i32 0, !dbg !11091
  %116 = load i8*, i8** %next, align 8, !dbg !11091
  %117 = bitcast i8* %116 to %struct.Object*, !dbg !11089
  store %struct.Object* %117, %struct.Object** %ob, align 8, !dbg !11092
  br label %while.cond, !dbg !10898, !llvm.loop !11093

while.end:                                        ; preds = %while.cond
  %118 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !11095
  call void @mywrite(%struct.WriteData* %118, i8* null, i32 0), !dbg !11096
  ret void, !dbg !11097
}

; Function Attrs: noinline nounwind uwtable
define internal void @write_materials(%struct.WriteData* %wd, %struct.ListBase* %idbase) #0 !dbg !11098 {
entry:
  %wd.addr = alloca %struct.WriteData*, align 8
  %idbase.addr = alloca %struct.ListBase*, align 8
  %ma = alloca %struct.Material*, align 8
  %a = alloca i32, align 4
  store %struct.WriteData* %wd, %struct.WriteData** %wd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WriteData** %wd.addr, metadata !11099, metadata !DIExpression()), !dbg !11100
  store %struct.ListBase* %idbase, %struct.ListBase** %idbase.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %idbase.addr, metadata !11101, metadata !DIExpression()), !dbg !11102
  call void @llvm.dbg.declare(metadata %struct.Material** %ma, metadata !11103, metadata !DIExpression()), !dbg !11104
  call void @llvm.dbg.declare(metadata i32* %a, metadata !11105, metadata !DIExpression()), !dbg !11106
  %0 = load %struct.ListBase*, %struct.ListBase** %idbase.addr, align 8, !dbg !11107
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %0, i32 0, i32 0, !dbg !11108
  %1 = load i8*, i8** %first, align 8, !dbg !11108
  %2 = bitcast i8* %1 to %struct.Material*, !dbg !11107
  store %struct.Material* %2, %struct.Material** %ma, align 8, !dbg !11109
  br label %while.cond, !dbg !11110

while.cond:                                       ; preds = %if.end31, %entry
  %3 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !11111
  %tobool = icmp ne %struct.Material* %3, null, !dbg !11110
  br i1 %tobool, label %while.body, label %while.end, !dbg !11110

while.body:                                       ; preds = %while.cond
  %4 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !11112
  %id = getelementptr inbounds %struct.Material, %struct.Material* %4, i32 0, i32 0, !dbg !11115
  %us = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 6, !dbg !11116
  %5 = load i32, i32* %us, align 4, !dbg !11116
  %cmp = icmp sgt i32 %5, 0, !dbg !11117
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !11118

lor.lhs.false:                                    ; preds = %while.body
  %6 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !11119
  %current = getelementptr inbounds %struct.WriteData, %struct.WriteData* %6, i32 0, i32 4, !dbg !11120
  %7 = load %struct.MemFile*, %struct.MemFile** %current, align 8, !dbg !11120
  %tobool1 = icmp ne %struct.MemFile* %7, null, !dbg !11119
  br i1 %tobool1, label %if.then, label %if.end31, !dbg !11121

if.then:                                          ; preds = %lor.lhs.false, %while.body
  %8 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !11122
  %9 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !11124
  %10 = bitcast %struct.Material* %9 to i8*, !dbg !11124
  call void @writestruct(%struct.WriteData* %8, i32 16717, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.226, i64 0, i64 0), i32 1, i8* %10), !dbg !11125
  %11 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !11126
  %id2 = getelementptr inbounds %struct.Material, %struct.Material* %11, i32 0, i32 0, !dbg !11128
  %properties = getelementptr inbounds %struct.ID, %struct.ID* %id2, i32 0, i32 9, !dbg !11129
  %12 = load %struct.IDProperty*, %struct.IDProperty** %properties, align 8, !dbg !11129
  %tobool3 = icmp ne %struct.IDProperty* %12, null, !dbg !11126
  br i1 %tobool3, label %if.then4, label %if.end, !dbg !11130

if.then4:                                         ; preds = %if.then
  %13 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !11131
  %id5 = getelementptr inbounds %struct.Material, %struct.Material* %13, i32 0, i32 0, !dbg !11132
  %properties6 = getelementptr inbounds %struct.ID, %struct.ID* %id5, i32 0, i32 9, !dbg !11133
  %14 = load %struct.IDProperty*, %struct.IDProperty** %properties6, align 8, !dbg !11133
  %15 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !11134
  %16 = bitcast %struct.WriteData* %15 to i8*, !dbg !11134
  call void @IDP_WriteProperty(%struct.IDProperty* %14, i8* %16), !dbg !11135
  br label %if.end, !dbg !11135

if.end:                                           ; preds = %if.then4, %if.then
  %17 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !11136
  %adt = getelementptr inbounds %struct.Material, %struct.Material* %17, i32 0, i32 1, !dbg !11138
  %18 = load %struct.AnimData*, %struct.AnimData** %adt, align 8, !dbg !11138
  %tobool7 = icmp ne %struct.AnimData* %18, null, !dbg !11136
  br i1 %tobool7, label %if.then8, label %if.end10, !dbg !11139

if.then8:                                         ; preds = %if.end
  %19 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !11140
  %20 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !11141
  %adt9 = getelementptr inbounds %struct.Material, %struct.Material* %20, i32 0, i32 1, !dbg !11142
  %21 = load %struct.AnimData*, %struct.AnimData** %adt9, align 8, !dbg !11142
  call void @write_animdata(%struct.WriteData* %19, %struct.AnimData* %21), !dbg !11143
  br label %if.end10, !dbg !11143

if.end10:                                         ; preds = %if.then8, %if.end
  store i32 0, i32* %a, align 4, !dbg !11144
  br label %for.cond, !dbg !11146

for.cond:                                         ; preds = %for.inc, %if.end10
  %22 = load i32, i32* %a, align 4, !dbg !11147
  %cmp11 = icmp slt i32 %22, 18, !dbg !11149
  br i1 %cmp11, label %for.body, label %for.end, !dbg !11150

for.body:                                         ; preds = %for.cond
  %23 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !11151
  %mtex = getelementptr inbounds %struct.Material, %struct.Material* %23, i32 0, i32 102, !dbg !11154
  %24 = load i32, i32* %a, align 4, !dbg !11155
  %idxprom = sext i32 %24 to i64, !dbg !11151
  %arrayidx = getelementptr inbounds [18 x %struct.MTex*], [18 x %struct.MTex*]* %mtex, i64 0, i64 %idxprom, !dbg !11151
  %25 = load %struct.MTex*, %struct.MTex** %arrayidx, align 8, !dbg !11151
  %tobool12 = icmp ne %struct.MTex* %25, null, !dbg !11151
  br i1 %tobool12, label %if.then13, label %if.end17, !dbg !11156

if.then13:                                        ; preds = %for.body
  %26 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !11157
  %27 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !11158
  %mtex14 = getelementptr inbounds %struct.Material, %struct.Material* %27, i32 0, i32 102, !dbg !11159
  %28 = load i32, i32* %a, align 4, !dbg !11160
  %idxprom15 = sext i32 %28 to i64, !dbg !11158
  %arrayidx16 = getelementptr inbounds [18 x %struct.MTex*], [18 x %struct.MTex*]* %mtex14, i64 0, i64 %idxprom15, !dbg !11158
  %29 = load %struct.MTex*, %struct.MTex** %arrayidx16, align 8, !dbg !11158
  %30 = bitcast %struct.MTex* %29 to i8*, !dbg !11158
  call void @writestruct(%struct.WriteData* %26, i32 1096040772, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.134, i64 0, i64 0), i32 1, i8* %30), !dbg !11161
  br label %if.end17, !dbg !11161

if.end17:                                         ; preds = %if.then13, %for.body
  br label %for.inc, !dbg !11162

for.inc:                                          ; preds = %if.end17
  %31 = load i32, i32* %a, align 4, !dbg !11163
  %inc = add nsw i32 %31, 1, !dbg !11163
  store i32 %inc, i32* %a, align 4, !dbg !11163
  br label %for.cond, !dbg !11164, !llvm.loop !11165

for.end:                                          ; preds = %for.cond
  %32 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !11167
  %ramp_col = getelementptr inbounds %struct.Material, %struct.Material* %32, i32 0, i32 92, !dbg !11169
  %33 = load %struct.ColorBand*, %struct.ColorBand** %ramp_col, align 8, !dbg !11169
  %tobool18 = icmp ne %struct.ColorBand* %33, null, !dbg !11167
  br i1 %tobool18, label %if.then19, label %if.end21, !dbg !11170

if.then19:                                        ; preds = %for.end
  %34 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !11171
  %35 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !11172
  %ramp_col20 = getelementptr inbounds %struct.Material, %struct.Material* %35, i32 0, i32 92, !dbg !11173
  %36 = load %struct.ColorBand*, %struct.ColorBand** %ramp_col20, align 8, !dbg !11173
  %37 = bitcast %struct.ColorBand* %36 to i8*, !dbg !11172
  call void @writestruct(%struct.WriteData* %34, i32 1096040772, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.223, i64 0, i64 0), i32 1, i8* %37), !dbg !11174
  br label %if.end21, !dbg !11174

if.end21:                                         ; preds = %if.then19, %for.end
  %38 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !11175
  %ramp_spec = getelementptr inbounds %struct.Material, %struct.Material* %38, i32 0, i32 93, !dbg !11177
  %39 = load %struct.ColorBand*, %struct.ColorBand** %ramp_spec, align 8, !dbg !11177
  %tobool22 = icmp ne %struct.ColorBand* %39, null, !dbg !11175
  br i1 %tobool22, label %if.then23, label %if.end25, !dbg !11178

if.then23:                                        ; preds = %if.end21
  %40 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !11179
  %41 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !11180
  %ramp_spec24 = getelementptr inbounds %struct.Material, %struct.Material* %41, i32 0, i32 93, !dbg !11181
  %42 = load %struct.ColorBand*, %struct.ColorBand** %ramp_spec24, align 8, !dbg !11181
  %43 = bitcast %struct.ColorBand* %42 to i8*, !dbg !11180
  call void @writestruct(%struct.WriteData* %40, i32 1096040772, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.223, i64 0, i64 0), i32 1, i8* %43), !dbg !11182
  br label %if.end25, !dbg !11182

if.end25:                                         ; preds = %if.then23, %if.end21
  %44 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !11183
  %nodetree = getelementptr inbounds %struct.Material, %struct.Material* %44, i32 0, i32 103, !dbg !11185
  %45 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree, align 8, !dbg !11185
  %tobool26 = icmp ne %struct.bNodeTree* %45, null, !dbg !11183
  br i1 %tobool26, label %if.then27, label %if.end30, !dbg !11186

if.then27:                                        ; preds = %if.end25
  %46 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !11187
  %47 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !11189
  %nodetree28 = getelementptr inbounds %struct.Material, %struct.Material* %47, i32 0, i32 103, !dbg !11190
  %48 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree28, align 8, !dbg !11190
  %49 = bitcast %struct.bNodeTree* %48 to i8*, !dbg !11189
  call void @writestruct(%struct.WriteData* %46, i32 1096040772, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.105, i64 0, i64 0), i32 1, i8* %49), !dbg !11191
  %50 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !11192
  %51 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !11193
  %nodetree29 = getelementptr inbounds %struct.Material, %struct.Material* %51, i32 0, i32 103, !dbg !11194
  %52 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree29, align 8, !dbg !11194
  call void @write_nodetree(%struct.WriteData* %50, %struct.bNodeTree* %52), !dbg !11195
  br label %if.end30, !dbg !11196

if.end30:                                         ; preds = %if.then27, %if.end25
  %53 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !11197
  %54 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !11198
  %preview = getelementptr inbounds %struct.Material, %struct.Material* %54, i32 0, i32 106, !dbg !11199
  %55 = load %struct.PreviewImage*, %struct.PreviewImage** %preview, align 8, !dbg !11199
  call void @write_previews(%struct.WriteData* %53, %struct.PreviewImage* %55), !dbg !11200
  br label %if.end31, !dbg !11201

if.end31:                                         ; preds = %if.end30, %lor.lhs.false
  %56 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !11202
  %id32 = getelementptr inbounds %struct.Material, %struct.Material* %56, i32 0, i32 0, !dbg !11203
  %next = getelementptr inbounds %struct.ID, %struct.ID* %id32, i32 0, i32 0, !dbg !11204
  %57 = load i8*, i8** %next, align 8, !dbg !11204
  %58 = bitcast i8* %57 to %struct.Material*, !dbg !11202
  store %struct.Material* %58, %struct.Material** %ma, align 8, !dbg !11205
  br label %while.cond, !dbg !11110, !llvm.loop !11206

while.end:                                        ; preds = %while.cond
  ret void, !dbg !11208
}

; Function Attrs: noinline nounwind uwtable
define internal void @write_textures(%struct.WriteData* %wd, %struct.ListBase* %idbase) #0 !dbg !11209 {
entry:
  %wd.addr = alloca %struct.WriteData*, align 8
  %idbase.addr = alloca %struct.ListBase*, align 8
  %tex = alloca %struct.Tex*, align 8
  store %struct.WriteData* %wd, %struct.WriteData** %wd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WriteData** %wd.addr, metadata !11210, metadata !DIExpression()), !dbg !11211
  store %struct.ListBase* %idbase, %struct.ListBase** %idbase.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %idbase.addr, metadata !11212, metadata !DIExpression()), !dbg !11213
  call void @llvm.dbg.declare(metadata %struct.Tex** %tex, metadata !11214, metadata !DIExpression()), !dbg !11215
  %0 = load %struct.ListBase*, %struct.ListBase** %idbase.addr, align 8, !dbg !11216
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %0, i32 0, i32 0, !dbg !11217
  %1 = load i8*, i8** %first, align 8, !dbg !11217
  %2 = bitcast i8* %1 to %struct.Tex*, !dbg !11216
  store %struct.Tex* %2, %struct.Tex** %tex, align 8, !dbg !11218
  br label %while.cond, !dbg !11219

while.cond:                                       ; preds = %if.end63, %entry
  %3 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !11220
  %tobool = icmp ne %struct.Tex* %3, null, !dbg !11219
  br i1 %tobool, label %while.body, label %while.end, !dbg !11219

while.body:                                       ; preds = %while.cond
  %4 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !11221
  %id = getelementptr inbounds %struct.Tex, %struct.Tex* %4, i32 0, i32 0, !dbg !11224
  %us = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 6, !dbg !11225
  %5 = load i32, i32* %us, align 4, !dbg !11225
  %cmp = icmp sgt i32 %5, 0, !dbg !11226
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !11227

lor.lhs.false:                                    ; preds = %while.body
  %6 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !11228
  %current = getelementptr inbounds %struct.WriteData, %struct.WriteData* %6, i32 0, i32 4, !dbg !11229
  %7 = load %struct.MemFile*, %struct.MemFile** %current, align 8, !dbg !11229
  %tobool1 = icmp ne %struct.MemFile* %7, null, !dbg !11228
  br i1 %tobool1, label %if.then, label %if.end63, !dbg !11230

if.then:                                          ; preds = %lor.lhs.false, %while.body
  %8 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !11231
  %9 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !11233
  %10 = bitcast %struct.Tex* %9 to i8*, !dbg !11233
  call void @writestruct(%struct.WriteData* %8, i32 17748, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.227, i64 0, i64 0), i32 1, i8* %10), !dbg !11234
  %11 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !11235
  %id2 = getelementptr inbounds %struct.Tex, %struct.Tex* %11, i32 0, i32 0, !dbg !11237
  %properties = getelementptr inbounds %struct.ID, %struct.ID* %id2, i32 0, i32 9, !dbg !11238
  %12 = load %struct.IDProperty*, %struct.IDProperty** %properties, align 8, !dbg !11238
  %tobool3 = icmp ne %struct.IDProperty* %12, null, !dbg !11235
  br i1 %tobool3, label %if.then4, label %if.end, !dbg !11239

if.then4:                                         ; preds = %if.then
  %13 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !11240
  %id5 = getelementptr inbounds %struct.Tex, %struct.Tex* %13, i32 0, i32 0, !dbg !11241
  %properties6 = getelementptr inbounds %struct.ID, %struct.ID* %id5, i32 0, i32 9, !dbg !11242
  %14 = load %struct.IDProperty*, %struct.IDProperty** %properties6, align 8, !dbg !11242
  %15 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !11243
  %16 = bitcast %struct.WriteData* %15 to i8*, !dbg !11243
  call void @IDP_WriteProperty(%struct.IDProperty* %14, i8* %16), !dbg !11244
  br label %if.end, !dbg !11244

if.end:                                           ; preds = %if.then4, %if.then
  %17 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !11245
  %adt = getelementptr inbounds %struct.Tex, %struct.Tex* %17, i32 0, i32 1, !dbg !11247
  %18 = load %struct.AnimData*, %struct.AnimData** %adt, align 8, !dbg !11247
  %tobool7 = icmp ne %struct.AnimData* %18, null, !dbg !11245
  br i1 %tobool7, label %if.then8, label %if.end10, !dbg !11248

if.then8:                                         ; preds = %if.end
  %19 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !11249
  %20 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !11250
  %adt9 = getelementptr inbounds %struct.Tex, %struct.Tex* %20, i32 0, i32 1, !dbg !11251
  %21 = load %struct.AnimData*, %struct.AnimData** %adt9, align 8, !dbg !11251
  call void @write_animdata(%struct.WriteData* %19, %struct.AnimData* %21), !dbg !11252
  br label %if.end10, !dbg !11252

if.end10:                                         ; preds = %if.then8, %if.end
  %22 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !11253
  %coba = getelementptr inbounds %struct.Tex, %struct.Tex* %22, i32 0, i32 55, !dbg !11255
  %23 = load %struct.ColorBand*, %struct.ColorBand** %coba, align 8, !dbg !11255
  %tobool11 = icmp ne %struct.ColorBand* %23, null, !dbg !11253
  br i1 %tobool11, label %if.then12, label %if.end14, !dbg !11256

if.then12:                                        ; preds = %if.end10
  %24 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !11257
  %25 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !11258
  %coba13 = getelementptr inbounds %struct.Tex, %struct.Tex* %25, i32 0, i32 55, !dbg !11259
  %26 = load %struct.ColorBand*, %struct.ColorBand** %coba13, align 8, !dbg !11259
  %27 = bitcast %struct.ColorBand* %26 to i8*, !dbg !11258
  call void @writestruct(%struct.WriteData* %24, i32 1096040772, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.223, i64 0, i64 0), i32 1, i8* %27), !dbg !11260
  br label %if.end14, !dbg !11260

if.end14:                                         ; preds = %if.then12, %if.end10
  %28 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !11261
  %type = getelementptr inbounds %struct.Tex, %struct.Tex* %28, i32 0, i32 32, !dbg !11263
  %29 = load i16, i16* %type, align 8, !dbg !11263
  %conv = sext i16 %29 to i32, !dbg !11261
  %cmp15 = icmp eq i32 %conv, 10, !dbg !11264
  br i1 %cmp15, label %land.lhs.true, label %if.end20, !dbg !11265

land.lhs.true:                                    ; preds = %if.end14
  %30 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !11266
  %env = getelementptr inbounds %struct.Tex, %struct.Tex* %30, i32 0, i32 56, !dbg !11267
  %31 = load %struct.EnvMap*, %struct.EnvMap** %env, align 8, !dbg !11267
  %tobool17 = icmp ne %struct.EnvMap* %31, null, !dbg !11266
  br i1 %tobool17, label %if.then18, label %if.end20, !dbg !11268

if.then18:                                        ; preds = %land.lhs.true
  %32 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !11269
  %33 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !11270
  %env19 = getelementptr inbounds %struct.Tex, %struct.Tex* %33, i32 0, i32 56, !dbg !11271
  %34 = load %struct.EnvMap*, %struct.EnvMap** %env19, align 8, !dbg !11271
  %35 = bitcast %struct.EnvMap* %34 to i8*, !dbg !11270
  call void @writestruct(%struct.WriteData* %32, i32 1096040772, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.228, i64 0, i64 0), i32 1, i8* %35), !dbg !11272
  br label %if.end20, !dbg !11272

if.end20:                                         ; preds = %if.then18, %land.lhs.true, %if.end14
  %36 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !11273
  %type21 = getelementptr inbounds %struct.Tex, %struct.Tex* %36, i32 0, i32 32, !dbg !11275
  %37 = load i16, i16* %type21, align 8, !dbg !11275
  %conv22 = sext i16 %37 to i32, !dbg !11273
  %cmp23 = icmp eq i32 %conv22, 14, !dbg !11276
  br i1 %cmp23, label %land.lhs.true25, label %if.end42, !dbg !11277

land.lhs.true25:                                  ; preds = %if.end20
  %38 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !11278
  %pd = getelementptr inbounds %struct.Tex, %struct.Tex* %38, i32 0, i32 58, !dbg !11279
  %39 = load %struct.PointDensity*, %struct.PointDensity** %pd, align 8, !dbg !11279
  %tobool26 = icmp ne %struct.PointDensity* %39, null, !dbg !11278
  br i1 %tobool26, label %if.then27, label %if.end42, !dbg !11280

if.then27:                                        ; preds = %land.lhs.true25
  %40 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !11281
  %41 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !11283
  %pd28 = getelementptr inbounds %struct.Tex, %struct.Tex* %41, i32 0, i32 58, !dbg !11284
  %42 = load %struct.PointDensity*, %struct.PointDensity** %pd28, align 8, !dbg !11284
  %43 = bitcast %struct.PointDensity* %42 to i8*, !dbg !11283
  call void @writestruct(%struct.WriteData* %40, i32 1096040772, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.229, i64 0, i64 0), i32 1, i8* %43), !dbg !11285
  %44 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !11286
  %pd29 = getelementptr inbounds %struct.Tex, %struct.Tex* %44, i32 0, i32 58, !dbg !11288
  %45 = load %struct.PointDensity*, %struct.PointDensity** %pd29, align 8, !dbg !11288
  %coba30 = getelementptr inbounds %struct.PointDensity, %struct.PointDensity* %45, i32 0, i32 23, !dbg !11289
  %46 = load %struct.ColorBand*, %struct.ColorBand** %coba30, align 8, !dbg !11289
  %tobool31 = icmp ne %struct.ColorBand* %46, null, !dbg !11286
  br i1 %tobool31, label %if.then32, label %if.end35, !dbg !11290

if.then32:                                        ; preds = %if.then27
  %47 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !11291
  %48 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !11292
  %pd33 = getelementptr inbounds %struct.Tex, %struct.Tex* %48, i32 0, i32 58, !dbg !11293
  %49 = load %struct.PointDensity*, %struct.PointDensity** %pd33, align 8, !dbg !11293
  %coba34 = getelementptr inbounds %struct.PointDensity, %struct.PointDensity* %49, i32 0, i32 23, !dbg !11294
  %50 = load %struct.ColorBand*, %struct.ColorBand** %coba34, align 8, !dbg !11294
  %51 = bitcast %struct.ColorBand* %50 to i8*, !dbg !11292
  call void @writestruct(%struct.WriteData* %47, i32 1096040772, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.223, i64 0, i64 0), i32 1, i8* %51), !dbg !11295
  br label %if.end35, !dbg !11295

if.end35:                                         ; preds = %if.then32, %if.then27
  %52 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !11296
  %pd36 = getelementptr inbounds %struct.Tex, %struct.Tex* %52, i32 0, i32 58, !dbg !11298
  %53 = load %struct.PointDensity*, %struct.PointDensity** %pd36, align 8, !dbg !11298
  %falloff_curve = getelementptr inbounds %struct.PointDensity, %struct.PointDensity* %53, i32 0, i32 24, !dbg !11299
  %54 = load %struct.CurveMapping*, %struct.CurveMapping** %falloff_curve, align 8, !dbg !11299
  %tobool37 = icmp ne %struct.CurveMapping* %54, null, !dbg !11296
  br i1 %tobool37, label %if.then38, label %if.end41, !dbg !11300

if.then38:                                        ; preds = %if.end35
  %55 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !11301
  %56 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !11302
  %pd39 = getelementptr inbounds %struct.Tex, %struct.Tex* %56, i32 0, i32 58, !dbg !11303
  %57 = load %struct.PointDensity*, %struct.PointDensity** %pd39, align 8, !dbg !11303
  %falloff_curve40 = getelementptr inbounds %struct.PointDensity, %struct.PointDensity* %57, i32 0, i32 24, !dbg !11304
  %58 = load %struct.CurveMapping*, %struct.CurveMapping** %falloff_curve40, align 8, !dbg !11304
  call void @write_curvemapping(%struct.WriteData* %55, %struct.CurveMapping* %58), !dbg !11305
  br label %if.end41, !dbg !11305

if.end41:                                         ; preds = %if.then38, %if.end35
  br label %if.end42, !dbg !11306

if.end42:                                         ; preds = %if.end41, %land.lhs.true25, %if.end20
  %59 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !11307
  %type43 = getelementptr inbounds %struct.Tex, %struct.Tex* %59, i32 0, i32 32, !dbg !11309
  %60 = load i16, i16* %type43, align 8, !dbg !11309
  %conv44 = sext i16 %60 to i32, !dbg !11307
  %cmp45 = icmp eq i32 %conv44, 15, !dbg !11310
  br i1 %cmp45, label %if.then47, label %if.end48, !dbg !11311

if.then47:                                        ; preds = %if.end42
  %61 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !11312
  %62 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !11313
  %vd = getelementptr inbounds %struct.Tex, %struct.Tex* %62, i32 0, i32 59, !dbg !11314
  %63 = load %struct.VoxelData*, %struct.VoxelData** %vd, align 8, !dbg !11314
  %64 = bitcast %struct.VoxelData* %63 to i8*, !dbg !11313
  call void @writestruct(%struct.WriteData* %61, i32 1096040772, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.230, i64 0, i64 0), i32 1, i8* %64), !dbg !11315
  br label %if.end48, !dbg !11315

if.end48:                                         ; preds = %if.then47, %if.end42
  %65 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !11316
  %type49 = getelementptr inbounds %struct.Tex, %struct.Tex* %65, i32 0, i32 32, !dbg !11318
  %66 = load i16, i16* %type49, align 8, !dbg !11318
  %conv50 = sext i16 %66 to i32, !dbg !11316
  %cmp51 = icmp eq i32 %conv50, 16, !dbg !11319
  br i1 %cmp51, label %land.lhs.true53, label %if.end57, !dbg !11320

land.lhs.true53:                                  ; preds = %if.end48
  %67 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !11321
  %ot = getelementptr inbounds %struct.Tex, %struct.Tex* %67, i32 0, i32 60, !dbg !11322
  %68 = load %struct.OceanTex*, %struct.OceanTex** %ot, align 8, !dbg !11322
  %tobool54 = icmp ne %struct.OceanTex* %68, null, !dbg !11321
  br i1 %tobool54, label %if.then55, label %if.end57, !dbg !11323

if.then55:                                        ; preds = %land.lhs.true53
  %69 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !11324
  %70 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !11325
  %ot56 = getelementptr inbounds %struct.Tex, %struct.Tex* %70, i32 0, i32 60, !dbg !11326
  %71 = load %struct.OceanTex*, %struct.OceanTex** %ot56, align 8, !dbg !11326
  %72 = bitcast %struct.OceanTex* %71 to i8*, !dbg !11325
  call void @writestruct(%struct.WriteData* %69, i32 1096040772, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.231, i64 0, i64 0), i32 1, i8* %72), !dbg !11327
  br label %if.end57, !dbg !11327

if.end57:                                         ; preds = %if.then55, %land.lhs.true53, %if.end48
  %73 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !11328
  %nodetree = getelementptr inbounds %struct.Tex, %struct.Tex* %73, i32 0, i32 52, !dbg !11330
  %74 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree, align 8, !dbg !11330
  %tobool58 = icmp ne %struct.bNodeTree* %74, null, !dbg !11328
  br i1 %tobool58, label %if.then59, label %if.end62, !dbg !11331

if.then59:                                        ; preds = %if.end57
  %75 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !11332
  %76 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !11334
  %nodetree60 = getelementptr inbounds %struct.Tex, %struct.Tex* %76, i32 0, i32 52, !dbg !11335
  %77 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree60, align 8, !dbg !11335
  %78 = bitcast %struct.bNodeTree* %77 to i8*, !dbg !11334
  call void @writestruct(%struct.WriteData* %75, i32 1096040772, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.105, i64 0, i64 0), i32 1, i8* %78), !dbg !11336
  %79 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !11337
  %80 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !11338
  %nodetree61 = getelementptr inbounds %struct.Tex, %struct.Tex* %80, i32 0, i32 52, !dbg !11339
  %81 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree61, align 8, !dbg !11339
  call void @write_nodetree(%struct.WriteData* %79, %struct.bNodeTree* %81), !dbg !11340
  br label %if.end62, !dbg !11341

if.end62:                                         ; preds = %if.then59, %if.end57
  %82 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !11342
  %83 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !11343
  %preview = getelementptr inbounds %struct.Tex, %struct.Tex* %83, i32 0, i32 57, !dbg !11344
  %84 = load %struct.PreviewImage*, %struct.PreviewImage** %preview, align 8, !dbg !11344
  call void @write_previews(%struct.WriteData* %82, %struct.PreviewImage* %84), !dbg !11345
  br label %if.end63, !dbg !11346

if.end63:                                         ; preds = %if.end62, %lor.lhs.false
  %85 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !11347
  %id64 = getelementptr inbounds %struct.Tex, %struct.Tex* %85, i32 0, i32 0, !dbg !11348
  %next = getelementptr inbounds %struct.ID, %struct.ID* %id64, i32 0, i32 0, !dbg !11349
  %86 = load i8*, i8** %next, align 8, !dbg !11349
  %87 = bitcast i8* %86 to %struct.Tex*, !dbg !11347
  store %struct.Tex* %87, %struct.Tex** %tex, align 8, !dbg !11350
  br label %while.cond, !dbg !11219, !llvm.loop !11351

while.end:                                        ; preds = %while.cond
  %88 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !11353
  call void @mywrite(%struct.WriteData* %88, i8* null, i32 0), !dbg !11354
  ret void, !dbg !11355
}

; Function Attrs: noinline nounwind uwtable
define internal void @write_meshes(%struct.WriteData* %wd, %struct.ListBase* %idbase) #0 !dbg !11356 {
entry:
  %wd.addr = alloca %struct.WriteData*, align 8
  %idbase.addr = alloca %struct.ListBase*, align 8
  %mesh = alloca %struct.Mesh*, align 8
  %save_for_old_blender = alloca i32, align 4
  %old_mesh = alloca %struct.Mesh*, align 8
  %copy_mesh = alloca %struct.Mesh, align 8
  %old_mesh26 = alloca %struct.Mesh*, align 8
  %copy_mesh27 = alloca %struct.Mesh, align 8
  store %struct.WriteData* %wd, %struct.WriteData** %wd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WriteData** %wd.addr, metadata !11357, metadata !DIExpression()), !dbg !11358
  store %struct.ListBase* %idbase, %struct.ListBase** %idbase.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %idbase.addr, metadata !11359, metadata !DIExpression()), !dbg !11360
  call void @llvm.dbg.declare(metadata %struct.Mesh** %mesh, metadata !11361, metadata !DIExpression()), !dbg !11483
  call void @llvm.dbg.declare(metadata i32* %save_for_old_blender, metadata !11484, metadata !DIExpression()), !dbg !11485
  store i32 0, i32* %save_for_old_blender, align 4, !dbg !11485
  %0 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !11486
  %use_mesh_compat = getelementptr inbounds %struct.WriteData, %struct.WriteData* %0, i32 0, i32 10, !dbg !11487
  %1 = load i8, i8* %use_mesh_compat, align 8, !dbg !11487
  %conv = zext i8 %1 to i32, !dbg !11486
  store i32 %conv, i32* %save_for_old_blender, align 4, !dbg !11488
  %2 = load %struct.ListBase*, %struct.ListBase** %idbase.addr, align 8, !dbg !11489
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %2, i32 0, i32 0, !dbg !11490
  %3 = load i8*, i8** %first, align 8, !dbg !11490
  %4 = bitcast i8* %3 to %struct.Mesh*, !dbg !11489
  store %struct.Mesh* %4, %struct.Mesh** %mesh, align 8, !dbg !11491
  br label %while.cond, !dbg !11492

while.cond:                                       ; preds = %if.end71, %entry
  %5 = load %struct.Mesh*, %struct.Mesh** %mesh, align 8, !dbg !11493
  %tobool = icmp ne %struct.Mesh* %5, null, !dbg !11492
  br i1 %tobool, label %while.body, label %while.end, !dbg !11492

while.body:                                       ; preds = %while.cond
  %6 = load %struct.Mesh*, %struct.Mesh** %mesh, align 8, !dbg !11494
  %id = getelementptr inbounds %struct.Mesh, %struct.Mesh* %6, i32 0, i32 0, !dbg !11497
  %us = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 6, !dbg !11498
  %7 = load i32, i32* %us, align 4, !dbg !11498
  %cmp = icmp sgt i32 %7, 0, !dbg !11499
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !11500

lor.lhs.false:                                    ; preds = %while.body
  %8 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !11501
  %current = getelementptr inbounds %struct.WriteData, %struct.WriteData* %8, i32 0, i32 4, !dbg !11502
  %9 = load %struct.MemFile*, %struct.MemFile** %current, align 8, !dbg !11502
  %tobool2 = icmp ne %struct.MemFile* %9, null, !dbg !11501
  br i1 %tobool2, label %if.then, label %if.end71, !dbg !11503

if.then:                                          ; preds = %lor.lhs.false, %while.body
  %10 = load i32, i32* %save_for_old_blender, align 4, !dbg !11504
  %tobool3 = icmp ne i32 %10, 0, !dbg !11504
  br i1 %tobool3, label %if.else, label %if.then4, !dbg !11507

if.then4:                                         ; preds = %if.then
  call void @llvm.dbg.declare(metadata %struct.Mesh** %old_mesh, metadata !11508, metadata !DIExpression()), !dbg !11510
  %11 = load %struct.Mesh*, %struct.Mesh** %mesh, align 8, !dbg !11511
  store %struct.Mesh* %11, %struct.Mesh** %old_mesh, align 8, !dbg !11510
  call void @llvm.dbg.declare(metadata %struct.Mesh* %copy_mesh, metadata !11512, metadata !DIExpression()), !dbg !11513
  %12 = load %struct.Mesh*, %struct.Mesh** %mesh, align 8, !dbg !11514
  %13 = bitcast %struct.Mesh* %copy_mesh to i8*, !dbg !11515
  %14 = bitcast %struct.Mesh* %12 to i8*, !dbg !11515
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %13, i8* align 8 %14, i64 1376, i1 false), !dbg !11515
  store %struct.Mesh* %copy_mesh, %struct.Mesh** %mesh, align 8, !dbg !11516
  %15 = load %struct.Mesh*, %struct.Mesh** %mesh, align 8, !dbg !11517
  %mface = getelementptr inbounds %struct.Mesh, %struct.Mesh* %15, i32 0, i32 12, !dbg !11518
  store %struct.MFace* null, %struct.MFace** %mface, align 8, !dbg !11519
  %16 = load %struct.Mesh*, %struct.Mesh** %mesh, align 8, !dbg !11520
  %totface = getelementptr inbounds %struct.Mesh, %struct.Mesh* %16, i32 0, i32 28, !dbg !11521
  store i32 0, i32* %totface, align 8, !dbg !11522
  %17 = load %struct.Mesh*, %struct.Mesh** %mesh, align 8, !dbg !11523
  %fdata = getelementptr inbounds %struct.Mesh, %struct.Mesh* %17, i32 0, i32 23, !dbg !11524
  %18 = bitcast %struct.CustomData* %fdata to i8*, !dbg !11525
  call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 200, i1 false), !dbg !11525
  %19 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !11526
  %20 = load %struct.Mesh*, %struct.Mesh** %old_mesh, align 8, !dbg !11527
  %21 = bitcast %struct.Mesh* %20 to i8*, !dbg !11527
  %22 = load %struct.Mesh*, %struct.Mesh** %mesh, align 8, !dbg !11528
  %23 = bitcast %struct.Mesh* %22 to i8*, !dbg !11528
  call void @writestruct_at_address(%struct.WriteData* %19, i32 17741, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.232, i64 0, i64 0), i32 1, i8* %21, i8* %23), !dbg !11529
  %24 = load %struct.Mesh*, %struct.Mesh** %mesh, align 8, !dbg !11530
  %id5 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %24, i32 0, i32 0, !dbg !11532
  %properties = getelementptr inbounds %struct.ID, %struct.ID* %id5, i32 0, i32 9, !dbg !11533
  %25 = load %struct.IDProperty*, %struct.IDProperty** %properties, align 8, !dbg !11533
  %tobool6 = icmp ne %struct.IDProperty* %25, null, !dbg !11530
  br i1 %tobool6, label %if.then7, label %if.end, !dbg !11534

if.then7:                                         ; preds = %if.then4
  %26 = load %struct.Mesh*, %struct.Mesh** %mesh, align 8, !dbg !11535
  %id8 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %26, i32 0, i32 0, !dbg !11536
  %properties9 = getelementptr inbounds %struct.ID, %struct.ID* %id8, i32 0, i32 9, !dbg !11537
  %27 = load %struct.IDProperty*, %struct.IDProperty** %properties9, align 8, !dbg !11537
  %28 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !11538
  %29 = bitcast %struct.WriteData* %28 to i8*, !dbg !11538
  call void @IDP_WriteProperty(%struct.IDProperty* %27, i8* %29), !dbg !11539
  br label %if.end, !dbg !11539

if.end:                                           ; preds = %if.then7, %if.then4
  %30 = load %struct.Mesh*, %struct.Mesh** %mesh, align 8, !dbg !11540
  %adt = getelementptr inbounds %struct.Mesh, %struct.Mesh* %30, i32 0, i32 1, !dbg !11542
  %31 = load %struct.AnimData*, %struct.AnimData** %adt, align 8, !dbg !11542
  %tobool10 = icmp ne %struct.AnimData* %31, null, !dbg !11540
  br i1 %tobool10, label %if.then11, label %if.end13, !dbg !11543

if.then11:                                        ; preds = %if.end
  %32 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !11544
  %33 = load %struct.Mesh*, %struct.Mesh** %mesh, align 8, !dbg !11545
  %adt12 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %33, i32 0, i32 1, !dbg !11546
  %34 = load %struct.AnimData*, %struct.AnimData** %adt12, align 8, !dbg !11546
  call void @write_animdata(%struct.WriteData* %32, %struct.AnimData* %34), !dbg !11547
  br label %if.end13, !dbg !11547

if.end13:                                         ; preds = %if.then11, %if.end
  %35 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !11548
  %36 = load %struct.Mesh*, %struct.Mesh** %mesh, align 8, !dbg !11549
  %totcol = getelementptr inbounds %struct.Mesh, %struct.Mesh* %36, i32 0, i32 47, !dbg !11550
  %37 = load i16, i16* %totcol, align 2, !dbg !11550
  %conv14 = sext i16 %37 to i64, !dbg !11549
  %mul = mul i64 8, %conv14, !dbg !11551
  %conv15 = trunc i64 %mul to i32, !dbg !11552
  %38 = load %struct.Mesh*, %struct.Mesh** %mesh, align 8, !dbg !11553
  %mat = getelementptr inbounds %struct.Mesh, %struct.Mesh* %38, i32 0, i32 5, !dbg !11554
  %39 = load %struct.Material**, %struct.Material*** %mat, align 8, !dbg !11554
  %40 = bitcast %struct.Material** %39 to i8*, !dbg !11553
  call void @writedata(%struct.WriteData* %35, i32 1096040772, i32 %conv15, i8* %40), !dbg !11555
  %41 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !11556
  %42 = load %struct.Mesh*, %struct.Mesh** %mesh, align 8, !dbg !11557
  %totselect = getelementptr inbounds %struct.Mesh, %struct.Mesh* %42, i32 0, i32 29, !dbg !11558
  %43 = load i32, i32* %totselect, align 4, !dbg !11558
  %conv16 = sext i32 %43 to i64, !dbg !11557
  %mul17 = mul i64 8, %conv16, !dbg !11559
  %conv18 = trunc i64 %mul17 to i32, !dbg !11560
  %44 = load %struct.Mesh*, %struct.Mesh** %mesh, align 8, !dbg !11561
  %mselect = getelementptr inbounds %struct.Mesh, %struct.Mesh* %44, i32 0, i32 6, !dbg !11562
  %45 = load %struct.MSelect*, %struct.MSelect** %mselect, align 8, !dbg !11562
  %46 = bitcast %struct.MSelect* %45 to i8*, !dbg !11561
  call void @writedata(%struct.WriteData* %41, i32 1096040772, i32 %conv18, i8* %46), !dbg !11563
  %47 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !11564
  %48 = load %struct.Mesh*, %struct.Mesh** %mesh, align 8, !dbg !11565
  %id19 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %48, i32 0, i32 0, !dbg !11566
  %49 = load %struct.Mesh*, %struct.Mesh** %mesh, align 8, !dbg !11567
  %totvert = getelementptr inbounds %struct.Mesh, %struct.Mesh* %49, i32 0, i32 26, !dbg !11568
  %50 = load i32, i32* %totvert, align 8, !dbg !11568
  %51 = load %struct.Mesh*, %struct.Mesh** %mesh, align 8, !dbg !11569
  %vdata = getelementptr inbounds %struct.Mesh, %struct.Mesh* %51, i32 0, i32 21, !dbg !11570
  call void @write_customdata(%struct.WriteData* %47, %struct.ID* %id19, i32 %50, %struct.CustomData* %vdata, i32 -1, i32 0), !dbg !11571
  %52 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !11572
  %53 = load %struct.Mesh*, %struct.Mesh** %mesh, align 8, !dbg !11573
  %id20 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %53, i32 0, i32 0, !dbg !11574
  %54 = load %struct.Mesh*, %struct.Mesh** %mesh, align 8, !dbg !11575
  %totedge = getelementptr inbounds %struct.Mesh, %struct.Mesh* %54, i32 0, i32 27, !dbg !11576
  %55 = load i32, i32* %totedge, align 4, !dbg !11576
  %56 = load %struct.Mesh*, %struct.Mesh** %mesh, align 8, !dbg !11577
  %edata = getelementptr inbounds %struct.Mesh, %struct.Mesh* %56, i32 0, i32 22, !dbg !11578
  call void @write_customdata(%struct.WriteData* %52, %struct.ID* %id20, i32 %55, %struct.CustomData* %edata, i32 -1, i32 0), !dbg !11579
  %57 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !11580
  %58 = load %struct.Mesh*, %struct.Mesh** %mesh, align 8, !dbg !11581
  %id21 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %58, i32 0, i32 0, !dbg !11582
  %59 = load %struct.Mesh*, %struct.Mesh** %mesh, align 8, !dbg !11583
  %totface22 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %59, i32 0, i32 28, !dbg !11584
  %60 = load i32, i32* %totface22, align 8, !dbg !11584
  %61 = load %struct.Mesh*, %struct.Mesh** %mesh, align 8, !dbg !11585
  %fdata23 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %61, i32 0, i32 23, !dbg !11586
  call void @write_customdata(%struct.WriteData* %57, %struct.ID* %id21, i32 %60, %struct.CustomData* %fdata23, i32 -1, i32 0), !dbg !11587
  %62 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !11588
  %63 = load %struct.Mesh*, %struct.Mesh** %mesh, align 8, !dbg !11589
  %id24 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %63, i32 0, i32 0, !dbg !11590
  %64 = load %struct.Mesh*, %struct.Mesh** %mesh, align 8, !dbg !11591
  %totloop = getelementptr inbounds %struct.Mesh, %struct.Mesh* %64, i32 0, i32 31, !dbg !11592
  %65 = load i32, i32* %totloop, align 4, !dbg !11592
  %66 = load %struct.Mesh*, %struct.Mesh** %mesh, align 8, !dbg !11593
  %ldata = getelementptr inbounds %struct.Mesh, %struct.Mesh* %66, i32 0, i32 25, !dbg !11594
  call void @write_customdata(%struct.WriteData* %62, %struct.ID* %id24, i32 %65, %struct.CustomData* %ldata, i32 -1, i32 0), !dbg !11595
  %67 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !11596
  %68 = load %struct.Mesh*, %struct.Mesh** %mesh, align 8, !dbg !11597
  %id25 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %68, i32 0, i32 0, !dbg !11598
  %69 = load %struct.Mesh*, %struct.Mesh** %mesh, align 8, !dbg !11599
  %totpoly = getelementptr inbounds %struct.Mesh, %struct.Mesh* %69, i32 0, i32 30, !dbg !11600
  %70 = load i32, i32* %totpoly, align 8, !dbg !11600
  %71 = load %struct.Mesh*, %struct.Mesh** %mesh, align 8, !dbg !11601
  %pdata = getelementptr inbounds %struct.Mesh, %struct.Mesh* %71, i32 0, i32 24, !dbg !11602
  call void @write_customdata(%struct.WriteData* %67, %struct.ID* %id25, i32 %70, %struct.CustomData* %pdata, i32 -1, i32 0), !dbg !11603
  %72 = load %struct.Mesh*, %struct.Mesh** %old_mesh, align 8, !dbg !11604
  store %struct.Mesh* %72, %struct.Mesh** %mesh, align 8, !dbg !11605
  br label %if.end70, !dbg !11606

if.else:                                          ; preds = %if.then
  call void @llvm.dbg.declare(metadata %struct.Mesh** %old_mesh26, metadata !11607, metadata !DIExpression()), !dbg !11609
  %73 = load %struct.Mesh*, %struct.Mesh** %mesh, align 8, !dbg !11610
  store %struct.Mesh* %73, %struct.Mesh** %old_mesh26, align 8, !dbg !11609
  call void @llvm.dbg.declare(metadata %struct.Mesh* %copy_mesh27, metadata !11611, metadata !DIExpression()), !dbg !11612
  %74 = load %struct.Mesh*, %struct.Mesh** %mesh, align 8, !dbg !11613
  %75 = bitcast %struct.Mesh* %copy_mesh27 to i8*, !dbg !11614
  %76 = bitcast %struct.Mesh* %74 to i8*, !dbg !11614
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %75, i8* align 8 %76, i64 1376, i1 false), !dbg !11614
  store %struct.Mesh* %copy_mesh27, %struct.Mesh** %mesh, align 8, !dbg !11615
  %77 = load %struct.Mesh*, %struct.Mesh** %mesh, align 8, !dbg !11616
  %mpoly = getelementptr inbounds %struct.Mesh, %struct.Mesh* %77, i32 0, i32 7, !dbg !11617
  store %struct.MPoly* null, %struct.MPoly** %mpoly, align 8, !dbg !11618
  %78 = load %struct.Mesh*, %struct.Mesh** %mesh, align 8, !dbg !11619
  %mface28 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %78, i32 0, i32 12, !dbg !11620
  store %struct.MFace* null, %struct.MFace** %mface28, align 8, !dbg !11621
  %79 = load %struct.Mesh*, %struct.Mesh** %mesh, align 8, !dbg !11622
  %totface29 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %79, i32 0, i32 28, !dbg !11623
  store i32 0, i32* %totface29, align 8, !dbg !11624
  %80 = load %struct.Mesh*, %struct.Mesh** %mesh, align 8, !dbg !11625
  %totpoly30 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %80, i32 0, i32 30, !dbg !11626
  store i32 0, i32* %totpoly30, align 8, !dbg !11627
  %81 = load %struct.Mesh*, %struct.Mesh** %mesh, align 8, !dbg !11628
  %totloop31 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %81, i32 0, i32 31, !dbg !11629
  store i32 0, i32* %totloop31, align 4, !dbg !11630
  %82 = load %struct.Mesh*, %struct.Mesh** %mesh, align 8, !dbg !11631
  %fdata32 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %82, i32 0, i32 23, !dbg !11632
  call void @CustomData_reset(%struct.CustomData* %fdata32), !dbg !11633
  %83 = load %struct.Mesh*, %struct.Mesh** %mesh, align 8, !dbg !11634
  %pdata33 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %83, i32 0, i32 24, !dbg !11635
  call void @CustomData_reset(%struct.CustomData* %pdata33), !dbg !11636
  %84 = load %struct.Mesh*, %struct.Mesh** %mesh, align 8, !dbg !11637
  %ldata34 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %84, i32 0, i32 25, !dbg !11638
  call void @CustomData_reset(%struct.CustomData* %ldata34), !dbg !11639
  %85 = load %struct.Mesh*, %struct.Mesh** %mesh, align 8, !dbg !11640
  %edit_btmesh = getelementptr inbounds %struct.Mesh, %struct.Mesh* %85, i32 0, i32 20, !dbg !11641
  store %struct.BMEditMesh* null, %struct.BMEditMesh** %edit_btmesh, align 8, !dbg !11642
  %86 = load %struct.Mesh*, %struct.Mesh** %mesh, align 8, !dbg !11643
  %fdata35 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %86, i32 0, i32 23, !dbg !11644
  %87 = load %struct.Mesh*, %struct.Mesh** %old_mesh26, align 8, !dbg !11645
  %ldata36 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %87, i32 0, i32 25, !dbg !11646
  %88 = load %struct.Mesh*, %struct.Mesh** %old_mesh26, align 8, !dbg !11647
  %pdata37 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %88, i32 0, i32 24, !dbg !11648
  %89 = load %struct.Mesh*, %struct.Mesh** %mesh, align 8, !dbg !11649
  %totface38 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %89, i32 0, i32 28, !dbg !11650
  %90 = load i32, i32* %totface38, align 8, !dbg !11650
  %91 = load %struct.Mesh*, %struct.Mesh** %old_mesh26, align 8, !dbg !11651
  %totloop39 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %91, i32 0, i32 31, !dbg !11652
  %92 = load i32, i32* %totloop39, align 4, !dbg !11652
  %93 = load %struct.Mesh*, %struct.Mesh** %old_mesh26, align 8, !dbg !11653
  %totpoly40 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %93, i32 0, i32 30, !dbg !11654
  %94 = load i32, i32* %totpoly40, align 8, !dbg !11654
  %call = call i32 @BKE_mesh_mpoly_to_mface(%struct.CustomData* %fdata35, %struct.CustomData* %ldata36, %struct.CustomData* %pdata37, i32 %90, i32 %92, i32 %94), !dbg !11655
  %95 = load %struct.Mesh*, %struct.Mesh** %mesh, align 8, !dbg !11656
  %totface41 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %95, i32 0, i32 28, !dbg !11657
  store i32 %call, i32* %totface41, align 8, !dbg !11658
  %96 = load %struct.Mesh*, %struct.Mesh** %mesh, align 8, !dbg !11659
  call void @BKE_mesh_update_customdata_pointers(%struct.Mesh* %96, i8 zeroext 0), !dbg !11660
  %97 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !11661
  %98 = load %struct.Mesh*, %struct.Mesh** %old_mesh26, align 8, !dbg !11662
  %99 = bitcast %struct.Mesh* %98 to i8*, !dbg !11662
  %100 = load %struct.Mesh*, %struct.Mesh** %mesh, align 8, !dbg !11663
  %101 = bitcast %struct.Mesh* %100 to i8*, !dbg !11663
  call void @writestruct_at_address(%struct.WriteData* %97, i32 17741, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.232, i64 0, i64 0), i32 1, i8* %99, i8* %101), !dbg !11664
  %102 = load %struct.Mesh*, %struct.Mesh** %mesh, align 8, !dbg !11665
  %id42 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %102, i32 0, i32 0, !dbg !11667
  %properties43 = getelementptr inbounds %struct.ID, %struct.ID* %id42, i32 0, i32 9, !dbg !11668
  %103 = load %struct.IDProperty*, %struct.IDProperty** %properties43, align 8, !dbg !11668
  %tobool44 = icmp ne %struct.IDProperty* %103, null, !dbg !11665
  br i1 %tobool44, label %if.then45, label %if.end48, !dbg !11669

if.then45:                                        ; preds = %if.else
  %104 = load %struct.Mesh*, %struct.Mesh** %mesh, align 8, !dbg !11670
  %id46 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %104, i32 0, i32 0, !dbg !11671
  %properties47 = getelementptr inbounds %struct.ID, %struct.ID* %id46, i32 0, i32 9, !dbg !11672
  %105 = load %struct.IDProperty*, %struct.IDProperty** %properties47, align 8, !dbg !11672
  %106 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !11673
  %107 = bitcast %struct.WriteData* %106 to i8*, !dbg !11673
  call void @IDP_WriteProperty(%struct.IDProperty* %105, i8* %107), !dbg !11674
  br label %if.end48, !dbg !11674

if.end48:                                         ; preds = %if.then45, %if.else
  %108 = load %struct.Mesh*, %struct.Mesh** %mesh, align 8, !dbg !11675
  %adt49 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %108, i32 0, i32 1, !dbg !11677
  %109 = load %struct.AnimData*, %struct.AnimData** %adt49, align 8, !dbg !11677
  %tobool50 = icmp ne %struct.AnimData* %109, null, !dbg !11675
  br i1 %tobool50, label %if.then51, label %if.end53, !dbg !11678

if.then51:                                        ; preds = %if.end48
  %110 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !11679
  %111 = load %struct.Mesh*, %struct.Mesh** %mesh, align 8, !dbg !11680
  %adt52 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %111, i32 0, i32 1, !dbg !11681
  %112 = load %struct.AnimData*, %struct.AnimData** %adt52, align 8, !dbg !11681
  call void @write_animdata(%struct.WriteData* %110, %struct.AnimData* %112), !dbg !11682
  br label %if.end53, !dbg !11682

if.end53:                                         ; preds = %if.then51, %if.end48
  %113 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !11683
  %114 = load %struct.Mesh*, %struct.Mesh** %mesh, align 8, !dbg !11684
  %totcol54 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %114, i32 0, i32 47, !dbg !11685
  %115 = load i16, i16* %totcol54, align 2, !dbg !11685
  %conv55 = sext i16 %115 to i64, !dbg !11684
  %mul56 = mul i64 8, %conv55, !dbg !11686
  %conv57 = trunc i64 %mul56 to i32, !dbg !11687
  %116 = load %struct.Mesh*, %struct.Mesh** %mesh, align 8, !dbg !11688
  %mat58 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %116, i32 0, i32 5, !dbg !11689
  %117 = load %struct.Material**, %struct.Material*** %mat58, align 8, !dbg !11689
  %118 = bitcast %struct.Material** %117 to i8*, !dbg !11688
  call void @writedata(%struct.WriteData* %113, i32 1096040772, i32 %conv57, i8* %118), !dbg !11690
  %119 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !11691
  %120 = load %struct.Mesh*, %struct.Mesh** %mesh, align 8, !dbg !11692
  %id59 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %120, i32 0, i32 0, !dbg !11693
  %121 = load %struct.Mesh*, %struct.Mesh** %mesh, align 8, !dbg !11694
  %totvert60 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %121, i32 0, i32 26, !dbg !11695
  %122 = load i32, i32* %totvert60, align 8, !dbg !11695
  %123 = load %struct.Mesh*, %struct.Mesh** %mesh, align 8, !dbg !11696
  %vdata61 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %123, i32 0, i32 21, !dbg !11697
  call void @write_customdata(%struct.WriteData* %119, %struct.ID* %id59, i32 %122, %struct.CustomData* %vdata61, i32 -1, i32 0), !dbg !11698
  %124 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !11699
  %125 = load %struct.Mesh*, %struct.Mesh** %mesh, align 8, !dbg !11700
  %id62 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %125, i32 0, i32 0, !dbg !11701
  %126 = load %struct.Mesh*, %struct.Mesh** %mesh, align 8, !dbg !11702
  %totedge63 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %126, i32 0, i32 27, !dbg !11703
  %127 = load i32, i32* %totedge63, align 4, !dbg !11703
  %128 = load %struct.Mesh*, %struct.Mesh** %mesh, align 8, !dbg !11704
  %edata64 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %128, i32 0, i32 22, !dbg !11705
  call void @write_customdata(%struct.WriteData* %124, %struct.ID* %id62, i32 %127, %struct.CustomData* %edata64, i32 -1, i32 0), !dbg !11706
  %129 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !11707
  %130 = load %struct.Mesh*, %struct.Mesh** %mesh, align 8, !dbg !11708
  %id65 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %130, i32 0, i32 0, !dbg !11709
  %131 = load %struct.Mesh*, %struct.Mesh** %mesh, align 8, !dbg !11710
  %totface66 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %131, i32 0, i32 28, !dbg !11711
  %132 = load i32, i32* %totface66, align 8, !dbg !11711
  %133 = load %struct.Mesh*, %struct.Mesh** %mesh, align 8, !dbg !11712
  %fdata67 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %133, i32 0, i32 23, !dbg !11713
  call void @write_customdata(%struct.WriteData* %129, %struct.ID* %id65, i32 %132, %struct.CustomData* %fdata67, i32 -1, i32 0), !dbg !11714
  %134 = load %struct.Mesh*, %struct.Mesh** %mesh, align 8, !dbg !11715
  %fdata68 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %134, i32 0, i32 23, !dbg !11716
  %135 = load %struct.Mesh*, %struct.Mesh** %mesh, align 8, !dbg !11717
  %totface69 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %135, i32 0, i32 28, !dbg !11718
  %136 = load i32, i32* %totface69, align 8, !dbg !11718
  call void @CustomData_free(%struct.CustomData* %fdata68, i32 %136), !dbg !11719
  %137 = load %struct.Mesh*, %struct.Mesh** %old_mesh26, align 8, !dbg !11720
  store %struct.Mesh* %137, %struct.Mesh** %mesh, align 8, !dbg !11721
  br label %if.end70

if.end70:                                         ; preds = %if.end53, %if.end13
  br label %if.end71, !dbg !11722

if.end71:                                         ; preds = %if.end70, %lor.lhs.false
  %138 = load %struct.Mesh*, %struct.Mesh** %mesh, align 8, !dbg !11723
  %id72 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %138, i32 0, i32 0, !dbg !11724
  %next = getelementptr inbounds %struct.ID, %struct.ID* %id72, i32 0, i32 0, !dbg !11725
  %139 = load i8*, i8** %next, align 8, !dbg !11725
  %140 = bitcast i8* %139 to %struct.Mesh*, !dbg !11723
  store %struct.Mesh* %140, %struct.Mesh** %mesh, align 8, !dbg !11726
  br label %while.cond, !dbg !11492, !llvm.loop !11727

while.end:                                        ; preds = %while.cond
  ret void, !dbg !11729
}

; Function Attrs: noinline nounwind uwtable
define internal void @write_particlesettings(%struct.WriteData* %wd, %struct.ListBase* %idbase) #0 !dbg !11730 {
entry:
  %wd.addr = alloca %struct.WriteData*, align 8
  %idbase.addr = alloca %struct.ListBase*, align 8
  %part = alloca %struct.ParticleSettings*, align 8
  %dw = alloca %struct.ParticleDupliWeight*, align 8
  %go = alloca %struct.GroupObject*, align 8
  %a = alloca i32, align 4
  %state = alloca %struct.BoidState*, align 8
  store %struct.WriteData* %wd, %struct.WriteData** %wd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WriteData** %wd.addr, metadata !11731, metadata !DIExpression()), !dbg !11732
  store %struct.ListBase* %idbase, %struct.ListBase** %idbase.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %idbase.addr, metadata !11733, metadata !DIExpression()), !dbg !11734
  call void @llvm.dbg.declare(metadata %struct.ParticleSettings** %part, metadata !11735, metadata !DIExpression()), !dbg !11736
  call void @llvm.dbg.declare(metadata %struct.ParticleDupliWeight** %dw, metadata !11737, metadata !DIExpression()), !dbg !11750
  call void @llvm.dbg.declare(metadata %struct.GroupObject** %go, metadata !11751, metadata !DIExpression()), !dbg !11752
  call void @llvm.dbg.declare(metadata i32* %a, metadata !11753, metadata !DIExpression()), !dbg !11754
  %0 = load %struct.ListBase*, %struct.ListBase** %idbase.addr, align 8, !dbg !11755
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %0, i32 0, i32 0, !dbg !11756
  %1 = load i8*, i8** %first, align 8, !dbg !11756
  %2 = bitcast i8* %1 to %struct.ParticleSettings*, !dbg !11755
  store %struct.ParticleSettings* %2, %struct.ParticleSettings** %part, align 8, !dbg !11757
  br label %while.cond, !dbg !11758

while.cond:                                       ; preds = %if.end61, %entry
  %3 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !11759
  %tobool = icmp ne %struct.ParticleSettings* %3, null, !dbg !11758
  br i1 %tobool, label %while.body, label %while.end64, !dbg !11758

while.body:                                       ; preds = %while.cond
  %4 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !11760
  %id = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %4, i32 0, i32 0, !dbg !11763
  %us = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 6, !dbg !11764
  %5 = load i32, i32* %us, align 4, !dbg !11764
  %cmp = icmp sgt i32 %5, 0, !dbg !11765
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !11766

lor.lhs.false:                                    ; preds = %while.body
  %6 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !11767
  %current = getelementptr inbounds %struct.WriteData, %struct.WriteData* %6, i32 0, i32 4, !dbg !11768
  %7 = load %struct.MemFile*, %struct.MemFile** %current, align 8, !dbg !11768
  %tobool1 = icmp ne %struct.MemFile* %7, null, !dbg !11767
  br i1 %tobool1, label %if.then, label %if.end61, !dbg !11769

if.then:                                          ; preds = %lor.lhs.false, %while.body
  %8 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !11770
  %9 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !11772
  %10 = bitcast %struct.ParticleSettings* %9 to i8*, !dbg !11772
  call void @writestruct(%struct.WriteData* %8, i32 16720, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.238, i64 0, i64 0), i32 1, i8* %10), !dbg !11773
  %11 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !11774
  %id2 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %11, i32 0, i32 0, !dbg !11776
  %properties = getelementptr inbounds %struct.ID, %struct.ID* %id2, i32 0, i32 9, !dbg !11777
  %12 = load %struct.IDProperty*, %struct.IDProperty** %properties, align 8, !dbg !11777
  %tobool3 = icmp ne %struct.IDProperty* %12, null, !dbg !11774
  br i1 %tobool3, label %if.then4, label %if.end, !dbg !11778

if.then4:                                         ; preds = %if.then
  %13 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !11779
  %id5 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %13, i32 0, i32 0, !dbg !11780
  %properties6 = getelementptr inbounds %struct.ID, %struct.ID* %id5, i32 0, i32 9, !dbg !11781
  %14 = load %struct.IDProperty*, %struct.IDProperty** %properties6, align 8, !dbg !11781
  %15 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !11782
  %16 = bitcast %struct.WriteData* %15 to i8*, !dbg !11782
  call void @IDP_WriteProperty(%struct.IDProperty* %14, i8* %16), !dbg !11783
  br label %if.end, !dbg !11783

if.end:                                           ; preds = %if.then4, %if.then
  %17 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !11784
  %adt = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %17, i32 0, i32 1, !dbg !11786
  %18 = load %struct.AnimData*, %struct.AnimData** %adt, align 8, !dbg !11786
  %tobool7 = icmp ne %struct.AnimData* %18, null, !dbg !11784
  br i1 %tobool7, label %if.then8, label %if.end10, !dbg !11787

if.then8:                                         ; preds = %if.end
  %19 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !11788
  %20 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !11789
  %adt9 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %20, i32 0, i32 1, !dbg !11790
  %21 = load %struct.AnimData*, %struct.AnimData** %adt9, align 8, !dbg !11790
  call void @write_animdata(%struct.WriteData* %19, %struct.AnimData* %21), !dbg !11791
  br label %if.end10, !dbg !11791

if.end10:                                         ; preds = %if.then8, %if.end
  %22 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !11792
  %23 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !11793
  %pd = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %23, i32 0, i32 128, !dbg !11794
  %24 = load %struct.PartDeflect*, %struct.PartDeflect** %pd, align 8, !dbg !11794
  %25 = bitcast %struct.PartDeflect* %24 to i8*, !dbg !11793
  call void @writestruct(%struct.WriteData* %22, i32 1096040772, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.153, i64 0, i64 0), i32 1, i8* %25), !dbg !11795
  %26 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !11796
  %27 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !11797
  %pd2 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %27, i32 0, i32 129, !dbg !11798
  %28 = load %struct.PartDeflect*, %struct.PartDeflect** %pd2, align 8, !dbg !11798
  %29 = bitcast %struct.PartDeflect* %28 to i8*, !dbg !11797
  call void @writestruct(%struct.WriteData* %26, i32 1096040772, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.153, i64 0, i64 0), i32 1, i8* %29), !dbg !11799
  %30 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !11800
  %31 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !11801
  %effector_weights = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %31, i32 0, i32 4, !dbg !11802
  %32 = load %struct.EffectorWeights*, %struct.EffectorWeights** %effector_weights, align 8, !dbg !11802
  %33 = bitcast %struct.EffectorWeights* %32 to i8*, !dbg !11801
  call void @writestruct(%struct.WriteData* %30, i32 1096040772, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.107, i64 0, i64 0), i32 1, i8* %33), !dbg !11803
  %34 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !11804
  %dupliweights = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %34, i32 0, i32 123, !dbg !11805
  %first11 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %dupliweights, i32 0, i32 0, !dbg !11806
  %35 = load i8*, i8** %first11, align 8, !dbg !11806
  %36 = bitcast i8* %35 to %struct.ParticleDupliWeight*, !dbg !11804
  store %struct.ParticleDupliWeight* %36, %struct.ParticleDupliWeight** %dw, align 8, !dbg !11807
  br label %for.cond, !dbg !11808

for.cond:                                         ; preds = %for.inc, %if.end10
  %37 = load %struct.ParticleDupliWeight*, %struct.ParticleDupliWeight** %dw, align 8, !dbg !11809
  %tobool12 = icmp ne %struct.ParticleDupliWeight* %37, null, !dbg !11812
  br i1 %tobool12, label %for.body, label %for.end, !dbg !11812

for.body:                                         ; preds = %for.cond
  %38 = load %struct.ParticleDupliWeight*, %struct.ParticleDupliWeight** %dw, align 8, !dbg !11813
  %index = getelementptr inbounds %struct.ParticleDupliWeight, %struct.ParticleDupliWeight* %38, i32 0, i32 5, !dbg !11815
  store i16 0, i16* %index, align 4, !dbg !11816
  %39 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !11817
  %dup_group = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %39, i32 0, i32 122, !dbg !11819
  %40 = load %struct.Group*, %struct.Group** %dup_group, align 8, !dbg !11819
  %tobool13 = icmp ne %struct.Group* %40, null, !dbg !11817
  br i1 %tobool13, label %if.then14, label %if.end23, !dbg !11820

if.then14:                                        ; preds = %for.body
  %41 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !11821
  %dup_group15 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %41, i32 0, i32 122, !dbg !11823
  %42 = load %struct.Group*, %struct.Group** %dup_group15, align 8, !dbg !11823
  %gobject = getelementptr inbounds %struct.Group, %struct.Group* %42, i32 0, i32 1, !dbg !11824
  %first16 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %gobject, i32 0, i32 0, !dbg !11825
  %43 = load i8*, i8** %first16, align 8, !dbg !11825
  %44 = bitcast i8* %43 to %struct.GroupObject*, !dbg !11821
  store %struct.GroupObject* %44, %struct.GroupObject** %go, align 8, !dbg !11826
  br label %while.cond17, !dbg !11827

while.cond17:                                     ; preds = %while.body21, %if.then14
  %45 = load %struct.GroupObject*, %struct.GroupObject** %go, align 8, !dbg !11828
  %tobool18 = icmp ne %struct.GroupObject* %45, null, !dbg !11828
  br i1 %tobool18, label %land.rhs, label %land.end, !dbg !11829

land.rhs:                                         ; preds = %while.cond17
  %46 = load %struct.GroupObject*, %struct.GroupObject** %go, align 8, !dbg !11830
  %ob = getelementptr inbounds %struct.GroupObject, %struct.GroupObject* %46, i32 0, i32 2, !dbg !11831
  %47 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !11831
  %48 = load %struct.ParticleDupliWeight*, %struct.ParticleDupliWeight** %dw, align 8, !dbg !11832
  %ob19 = getelementptr inbounds %struct.ParticleDupliWeight, %struct.ParticleDupliWeight* %48, i32 0, i32 2, !dbg !11833
  %49 = load %struct.Object*, %struct.Object** %ob19, align 8, !dbg !11833
  %cmp20 = icmp ne %struct.Object* %47, %49, !dbg !11834
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond17
  %50 = phi i1 [ false, %while.cond17 ], [ %cmp20, %land.rhs ], !dbg !11835
  br i1 %50, label %while.body21, label %while.end, !dbg !11827

while.body21:                                     ; preds = %land.end
  %51 = load %struct.GroupObject*, %struct.GroupObject** %go, align 8, !dbg !11836
  %next = getelementptr inbounds %struct.GroupObject, %struct.GroupObject* %51, i32 0, i32 0, !dbg !11838
  %52 = load %struct.GroupObject*, %struct.GroupObject** %next, align 8, !dbg !11838
  store %struct.GroupObject* %52, %struct.GroupObject** %go, align 8, !dbg !11839
  %53 = load %struct.ParticleDupliWeight*, %struct.ParticleDupliWeight** %dw, align 8, !dbg !11840
  %index22 = getelementptr inbounds %struct.ParticleDupliWeight, %struct.ParticleDupliWeight* %53, i32 0, i32 5, !dbg !11841
  %54 = load i16, i16* %index22, align 4, !dbg !11842
  %inc = add i16 %54, 1, !dbg !11842
  store i16 %inc, i16* %index22, align 4, !dbg !11842
  br label %while.cond17, !dbg !11827, !llvm.loop !11843

while.end:                                        ; preds = %land.end
  br label %if.end23, !dbg !11845

if.end23:                                         ; preds = %while.end, %for.body
  %55 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !11846
  %56 = load %struct.ParticleDupliWeight*, %struct.ParticleDupliWeight** %dw, align 8, !dbg !11847
  %57 = bitcast %struct.ParticleDupliWeight* %56 to i8*, !dbg !11847
  call void @writestruct(%struct.WriteData* %55, i32 1096040772, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.239, i64 0, i64 0), i32 1, i8* %57), !dbg !11848
  br label %for.inc, !dbg !11849

for.inc:                                          ; preds = %if.end23
  %58 = load %struct.ParticleDupliWeight*, %struct.ParticleDupliWeight** %dw, align 8, !dbg !11850
  %next24 = getelementptr inbounds %struct.ParticleDupliWeight, %struct.ParticleDupliWeight* %58, i32 0, i32 0, !dbg !11851
  %59 = load %struct.ParticleDupliWeight*, %struct.ParticleDupliWeight** %next24, align 8, !dbg !11851
  store %struct.ParticleDupliWeight* %59, %struct.ParticleDupliWeight** %dw, align 8, !dbg !11852
  br label %for.cond, !dbg !11853, !llvm.loop !11854

for.end:                                          ; preds = %for.cond
  %60 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !11856
  %boids = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %60, i32 0, i32 2, !dbg !11858
  %61 = load %struct.BoidSettings*, %struct.BoidSettings** %boids, align 8, !dbg !11858
  %tobool25 = icmp ne %struct.BoidSettings* %61, null, !dbg !11856
  br i1 %tobool25, label %land.lhs.true, label %if.end38, !dbg !11859

land.lhs.true:                                    ; preds = %for.end
  %62 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !11860
  %phystype = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %62, i32 0, i32 11, !dbg !11861
  %63 = load i16, i16* %phystype, align 8, !dbg !11861
  %conv = sext i16 %63 to i32, !dbg !11860
  %cmp26 = icmp eq i32 %conv, 3, !dbg !11862
  br i1 %cmp26, label %if.then28, label %if.end38, !dbg !11863

if.then28:                                        ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.BoidState** %state, metadata !11864, metadata !DIExpression()), !dbg !11885
  %64 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !11886
  %boids29 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %64, i32 0, i32 2, !dbg !11887
  %65 = load %struct.BoidSettings*, %struct.BoidSettings** %boids29, align 8, !dbg !11887
  %states = getelementptr inbounds %struct.BoidSettings, %struct.BoidSettings* %65, i32 0, i32 22, !dbg !11888
  %first30 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %states, i32 0, i32 0, !dbg !11889
  %66 = load i8*, i8** %first30, align 8, !dbg !11889
  %67 = bitcast i8* %66 to %struct.BoidState*, !dbg !11886
  store %struct.BoidState* %67, %struct.BoidState** %state, align 8, !dbg !11885
  %68 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !11890
  %69 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !11891
  %boids31 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %69, i32 0, i32 2, !dbg !11892
  %70 = load %struct.BoidSettings*, %struct.BoidSettings** %boids31, align 8, !dbg !11892
  %71 = bitcast %struct.BoidSettings* %70 to i8*, !dbg !11891
  call void @writestruct(%struct.WriteData* %68, i32 1096040772, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.240, i64 0, i64 0), i32 1, i8* %71), !dbg !11893
  br label %for.cond32, !dbg !11894

for.cond32:                                       ; preds = %for.inc35, %if.then28
  %72 = load %struct.BoidState*, %struct.BoidState** %state, align 8, !dbg !11895
  %tobool33 = icmp ne %struct.BoidState* %72, null, !dbg !11898
  br i1 %tobool33, label %for.body34, label %for.end37, !dbg !11898

for.body34:                                       ; preds = %for.cond32
  %73 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !11899
  %74 = load %struct.BoidState*, %struct.BoidState** %state, align 8, !dbg !11900
  call void @write_boid_state(%struct.WriteData* %73, %struct.BoidState* %74), !dbg !11901
  br label %for.inc35, !dbg !11901

for.inc35:                                        ; preds = %for.body34
  %75 = load %struct.BoidState*, %struct.BoidState** %state, align 8, !dbg !11902
  %next36 = getelementptr inbounds %struct.BoidState, %struct.BoidState* %75, i32 0, i32 0, !dbg !11903
  %76 = load %struct.BoidState*, %struct.BoidState** %next36, align 8, !dbg !11903
  store %struct.BoidState* %76, %struct.BoidState** %state, align 8, !dbg !11904
  br label %for.cond32, !dbg !11905, !llvm.loop !11906

for.end37:                                        ; preds = %for.cond32
  br label %if.end38, !dbg !11908

if.end38:                                         ; preds = %for.end37, %land.lhs.true, %for.end
  %77 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !11909
  %fluid = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %77, i32 0, i32 3, !dbg !11911
  %78 = load %struct.SPHFluidSettings*, %struct.SPHFluidSettings** %fluid, align 8, !dbg !11911
  %tobool39 = icmp ne %struct.SPHFluidSettings* %78, null, !dbg !11909
  br i1 %tobool39, label %land.lhs.true40, label %if.end47, !dbg !11912

land.lhs.true40:                                  ; preds = %if.end38
  %79 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !11913
  %phystype41 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %79, i32 0, i32 11, !dbg !11914
  %80 = load i16, i16* %phystype41, align 8, !dbg !11914
  %conv42 = sext i16 %80 to i32, !dbg !11913
  %cmp43 = icmp eq i32 %conv42, 4, !dbg !11915
  br i1 %cmp43, label %if.then45, label %if.end47, !dbg !11916

if.then45:                                        ; preds = %land.lhs.true40
  %81 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !11917
  %82 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !11919
  %fluid46 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %82, i32 0, i32 3, !dbg !11920
  %83 = load %struct.SPHFluidSettings*, %struct.SPHFluidSettings** %fluid46, align 8, !dbg !11920
  %84 = bitcast %struct.SPHFluidSettings* %83 to i8*, !dbg !11919
  call void @writestruct(%struct.WriteData* %81, i32 1096040772, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.241, i64 0, i64 0), i32 1, i8* %84), !dbg !11921
  br label %if.end47, !dbg !11922

if.end47:                                         ; preds = %if.then45, %land.lhs.true40, %if.end38
  store i32 0, i32* %a, align 4, !dbg !11923
  br label %for.cond48, !dbg !11925

for.cond48:                                       ; preds = %for.inc58, %if.end47
  %85 = load i32, i32* %a, align 4, !dbg !11926
  %cmp49 = icmp slt i32 %85, 18, !dbg !11928
  br i1 %cmp49, label %for.body51, label %for.end60, !dbg !11929

for.body51:                                       ; preds = %for.cond48
  %86 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !11930
  %mtex = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %86, i32 0, i32 121, !dbg !11933
  %87 = load i32, i32* %a, align 4, !dbg !11934
  %idxprom = sext i32 %87 to i64, !dbg !11930
  %arrayidx = getelementptr inbounds [18 x %struct.MTex*], [18 x %struct.MTex*]* %mtex, i64 0, i64 %idxprom, !dbg !11930
  %88 = load %struct.MTex*, %struct.MTex** %arrayidx, align 8, !dbg !11930
  %tobool52 = icmp ne %struct.MTex* %88, null, !dbg !11930
  br i1 %tobool52, label %if.then53, label %if.end57, !dbg !11935

if.then53:                                        ; preds = %for.body51
  %89 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !11936
  %90 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !11937
  %mtex54 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %90, i32 0, i32 121, !dbg !11938
  %91 = load i32, i32* %a, align 4, !dbg !11939
  %idxprom55 = sext i32 %91 to i64, !dbg !11937
  %arrayidx56 = getelementptr inbounds [18 x %struct.MTex*], [18 x %struct.MTex*]* %mtex54, i64 0, i64 %idxprom55, !dbg !11937
  %92 = load %struct.MTex*, %struct.MTex** %arrayidx56, align 8, !dbg !11937
  %93 = bitcast %struct.MTex* %92 to i8*, !dbg !11937
  call void @writestruct(%struct.WriteData* %89, i32 1096040772, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.134, i64 0, i64 0), i32 1, i8* %93), !dbg !11940
  br label %if.end57, !dbg !11940

if.end57:                                         ; preds = %if.then53, %for.body51
  br label %for.inc58, !dbg !11941

for.inc58:                                        ; preds = %if.end57
  %94 = load i32, i32* %a, align 4, !dbg !11942
  %inc59 = add nsw i32 %94, 1, !dbg !11942
  store i32 %inc59, i32* %a, align 4, !dbg !11942
  br label %for.cond48, !dbg !11943, !llvm.loop !11944

for.end60:                                        ; preds = %for.cond48
  br label %if.end61, !dbg !11946

if.end61:                                         ; preds = %for.end60, %lor.lhs.false
  %95 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !11947
  %id62 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %95, i32 0, i32 0, !dbg !11948
  %next63 = getelementptr inbounds %struct.ID, %struct.ID* %id62, i32 0, i32 0, !dbg !11949
  %96 = load i8*, i8** %next63, align 8, !dbg !11949
  %97 = bitcast i8* %96 to %struct.ParticleSettings*, !dbg !11947
  store %struct.ParticleSettings* %97, %struct.ParticleSettings** %part, align 8, !dbg !11950
  br label %while.cond, !dbg !11758, !llvm.loop !11951

while.end64:                                      ; preds = %while.cond
  ret void, !dbg !11953
}

; Function Attrs: noinline nounwind uwtable
define internal void @write_nodetrees(%struct.WriteData* %wd, %struct.ListBase* %idbase) #0 !dbg !11954 {
entry:
  %wd.addr = alloca %struct.WriteData*, align 8
  %idbase.addr = alloca %struct.ListBase*, align 8
  %ntree = alloca %struct.bNodeTree*, align 8
  store %struct.WriteData* %wd, %struct.WriteData** %wd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WriteData** %wd.addr, metadata !11955, metadata !DIExpression()), !dbg !11956
  store %struct.ListBase* %idbase, %struct.ListBase** %idbase.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %idbase.addr, metadata !11957, metadata !DIExpression()), !dbg !11958
  call void @llvm.dbg.declare(metadata %struct.bNodeTree** %ntree, metadata !11959, metadata !DIExpression()), !dbg !11960
  %0 = load %struct.ListBase*, %struct.ListBase** %idbase.addr, align 8, !dbg !11961
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %0, i32 0, i32 0, !dbg !11963
  %1 = load i8*, i8** %first, align 8, !dbg !11963
  %2 = bitcast i8* %1 to %struct.bNodeTree*, !dbg !11961
  store %struct.bNodeTree* %2, %struct.bNodeTree** %ntree, align 8, !dbg !11964
  br label %for.cond, !dbg !11965

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree, align 8, !dbg !11966
  %tobool = icmp ne %struct.bNodeTree* %3, null, !dbg !11968
  br i1 %tobool, label %for.body, label %for.end, !dbg !11968

for.body:                                         ; preds = %for.cond
  %4 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree, align 8, !dbg !11969
  %id = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %4, i32 0, i32 0, !dbg !11972
  %us = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 6, !dbg !11973
  %5 = load i32, i32* %us, align 4, !dbg !11973
  %cmp = icmp sgt i32 %5, 0, !dbg !11974
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !11975

lor.lhs.false:                                    ; preds = %for.body
  %6 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !11976
  %current = getelementptr inbounds %struct.WriteData, %struct.WriteData* %6, i32 0, i32 4, !dbg !11977
  %7 = load %struct.MemFile*, %struct.MemFile** %current, align 8, !dbg !11977
  %tobool1 = icmp ne %struct.MemFile* %7, null, !dbg !11976
  br i1 %tobool1, label %if.then, label %if.end11, !dbg !11978

if.then:                                          ; preds = %lor.lhs.false, %for.body
  %8 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !11979
  %9 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree, align 8, !dbg !11981
  %10 = bitcast %struct.bNodeTree* %9 to i8*, !dbg !11981
  call void @writestruct(%struct.WriteData* %8, i32 21582, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.105, i64 0, i64 0), i32 1, i8* %10), !dbg !11982
  %11 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !11983
  %12 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree, align 8, !dbg !11984
  call void @write_nodetree(%struct.WriteData* %11, %struct.bNodeTree* %12), !dbg !11985
  %13 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree, align 8, !dbg !11986
  %id2 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %13, i32 0, i32 0, !dbg !11988
  %properties = getelementptr inbounds %struct.ID, %struct.ID* %id2, i32 0, i32 9, !dbg !11989
  %14 = load %struct.IDProperty*, %struct.IDProperty** %properties, align 8, !dbg !11989
  %tobool3 = icmp ne %struct.IDProperty* %14, null, !dbg !11986
  br i1 %tobool3, label %if.then4, label %if.end, !dbg !11990

if.then4:                                         ; preds = %if.then
  %15 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree, align 8, !dbg !11991
  %id5 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %15, i32 0, i32 0, !dbg !11992
  %properties6 = getelementptr inbounds %struct.ID, %struct.ID* %id5, i32 0, i32 9, !dbg !11993
  %16 = load %struct.IDProperty*, %struct.IDProperty** %properties6, align 8, !dbg !11993
  %17 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !11994
  %18 = bitcast %struct.WriteData* %17 to i8*, !dbg !11994
  call void @IDP_WriteProperty(%struct.IDProperty* %16, i8* %18), !dbg !11995
  br label %if.end, !dbg !11995

if.end:                                           ; preds = %if.then4, %if.then
  %19 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree, align 8, !dbg !11996
  %adt = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %19, i32 0, i32 1, !dbg !11998
  %20 = load %struct.AnimData*, %struct.AnimData** %adt, align 8, !dbg !11998
  %tobool7 = icmp ne %struct.AnimData* %20, null, !dbg !11996
  br i1 %tobool7, label %if.then8, label %if.end10, !dbg !11999

if.then8:                                         ; preds = %if.end
  %21 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !12000
  %22 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree, align 8, !dbg !12001
  %adt9 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %22, i32 0, i32 1, !dbg !12002
  %23 = load %struct.AnimData*, %struct.AnimData** %adt9, align 8, !dbg !12002
  call void @write_animdata(%struct.WriteData* %21, %struct.AnimData* %23), !dbg !12003
  br label %if.end10, !dbg !12003

if.end10:                                         ; preds = %if.then8, %if.end
  br label %if.end11, !dbg !12004

if.end11:                                         ; preds = %if.end10, %lor.lhs.false
  br label %for.inc, !dbg !12005

for.inc:                                          ; preds = %if.end11
  %24 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree, align 8, !dbg !12006
  %id12 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %24, i32 0, i32 0, !dbg !12007
  %next = getelementptr inbounds %struct.ID, %struct.ID* %id12, i32 0, i32 0, !dbg !12008
  %25 = load i8*, i8** %next, align 8, !dbg !12008
  %26 = bitcast i8* %25 to %struct.bNodeTree*, !dbg !12006
  store %struct.bNodeTree* %26, %struct.bNodeTree** %ntree, align 8, !dbg !12009
  br label %for.cond, !dbg !12010, !llvm.loop !12011

for.end:                                          ; preds = %for.cond
  ret void, !dbg !12013
}

; Function Attrs: noinline nounwind uwtable
define internal void @write_brushes(%struct.WriteData* %wd, %struct.ListBase* %idbase) #0 !dbg !12014 {
entry:
  %wd.addr = alloca %struct.WriteData*, align 8
  %idbase.addr = alloca %struct.ListBase*, align 8
  %brush = alloca %struct.Brush*, align 8
  store %struct.WriteData* %wd, %struct.WriteData** %wd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WriteData** %wd.addr, metadata !12015, metadata !DIExpression()), !dbg !12016
  store %struct.ListBase* %idbase, %struct.ListBase** %idbase.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %idbase.addr, metadata !12017, metadata !DIExpression()), !dbg !12018
  call void @llvm.dbg.declare(metadata %struct.Brush** %brush, metadata !12019, metadata !DIExpression()), !dbg !12022
  %0 = load %struct.ListBase*, %struct.ListBase** %idbase.addr, align 8, !dbg !12023
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %0, i32 0, i32 0, !dbg !12025
  %1 = load i8*, i8** %first, align 8, !dbg !12025
  %2 = bitcast i8* %1 to %struct.Brush*, !dbg !12023
  store %struct.Brush* %2, %struct.Brush** %brush, align 8, !dbg !12026
  br label %for.cond, !dbg !12027

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !12028
  %tobool = icmp ne %struct.Brush* %3, null, !dbg !12030
  br i1 %tobool, label %for.body, label %for.end, !dbg !12030

for.body:                                         ; preds = %for.cond
  %4 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !12031
  %id = getelementptr inbounds %struct.Brush, %struct.Brush* %4, i32 0, i32 0, !dbg !12034
  %us = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 6, !dbg !12035
  %5 = load i32, i32* %us, align 4, !dbg !12035
  %cmp = icmp sgt i32 %5, 0, !dbg !12036
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !12037

lor.lhs.false:                                    ; preds = %for.body
  %6 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !12038
  %current = getelementptr inbounds %struct.WriteData, %struct.WriteData* %6, i32 0, i32 4, !dbg !12039
  %7 = load %struct.MemFile*, %struct.MemFile** %current, align 8, !dbg !12039
  %tobool1 = icmp ne %struct.MemFile* %7, null, !dbg !12038
  br i1 %tobool1, label %if.then, label %if.end15, !dbg !12040

if.then:                                          ; preds = %lor.lhs.false, %for.body
  %8 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !12041
  %9 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !12043
  %10 = bitcast %struct.Brush* %9 to i8*, !dbg !12043
  call void @writestruct(%struct.WriteData* %8, i32 21058, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.249, i64 0, i64 0), i32 1, i8* %10), !dbg !12044
  %11 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !12045
  %id2 = getelementptr inbounds %struct.Brush, %struct.Brush* %11, i32 0, i32 0, !dbg !12047
  %properties = getelementptr inbounds %struct.ID, %struct.ID* %id2, i32 0, i32 9, !dbg !12048
  %12 = load %struct.IDProperty*, %struct.IDProperty** %properties, align 8, !dbg !12048
  %tobool3 = icmp ne %struct.IDProperty* %12, null, !dbg !12045
  br i1 %tobool3, label %if.then4, label %if.end, !dbg !12049

if.then4:                                         ; preds = %if.then
  %13 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !12050
  %id5 = getelementptr inbounds %struct.Brush, %struct.Brush* %13, i32 0, i32 0, !dbg !12051
  %properties6 = getelementptr inbounds %struct.ID, %struct.ID* %id5, i32 0, i32 9, !dbg !12052
  %14 = load %struct.IDProperty*, %struct.IDProperty** %properties6, align 8, !dbg !12052
  %15 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !12053
  %16 = bitcast %struct.WriteData* %15 to i8*, !dbg !12053
  call void @IDP_WriteProperty(%struct.IDProperty* %14, i8* %16), !dbg !12054
  br label %if.end, !dbg !12054

if.end:                                           ; preds = %if.then4, %if.then
  %17 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !12055
  %curve = getelementptr inbounds %struct.Brush, %struct.Brush* %17, i32 0, i32 2, !dbg !12057
  %18 = load %struct.CurveMapping*, %struct.CurveMapping** %curve, align 8, !dbg !12057
  %tobool7 = icmp ne %struct.CurveMapping* %18, null, !dbg !12055
  br i1 %tobool7, label %if.then8, label %if.end10, !dbg !12058

if.then8:                                         ; preds = %if.end
  %19 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !12059
  %20 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !12060
  %curve9 = getelementptr inbounds %struct.Brush, %struct.Brush* %20, i32 0, i32 2, !dbg !12061
  %21 = load %struct.CurveMapping*, %struct.CurveMapping** %curve9, align 8, !dbg !12061
  call void @write_curvemapping(%struct.WriteData* %19, %struct.CurveMapping* %21), !dbg !12062
  br label %if.end10, !dbg !12062

if.end10:                                         ; preds = %if.then8, %if.end
  %22 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !12063
  %curve11 = getelementptr inbounds %struct.Brush, %struct.Brush* %22, i32 0, i32 2, !dbg !12065
  %23 = load %struct.CurveMapping*, %struct.CurveMapping** %curve11, align 8, !dbg !12065
  %tobool12 = icmp ne %struct.CurveMapping* %23, null, !dbg !12063
  br i1 %tobool12, label %if.then13, label %if.end14, !dbg !12066

if.then13:                                        ; preds = %if.end10
  %24 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !12067
  %25 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !12068
  %gradient = getelementptr inbounds %struct.Brush, %struct.Brush* %25, i32 0, i32 8, !dbg !12069
  %26 = load %struct.ColorBand*, %struct.ColorBand** %gradient, align 8, !dbg !12069
  %27 = bitcast %struct.ColorBand* %26 to i8*, !dbg !12068
  call void @writestruct(%struct.WriteData* %24, i32 1096040772, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.223, i64 0, i64 0), i32 1, i8* %27), !dbg !12070
  br label %if.end14, !dbg !12070

if.end14:                                         ; preds = %if.then13, %if.end10
  br label %if.end15, !dbg !12071

if.end15:                                         ; preds = %if.end14, %lor.lhs.false
  br label %for.inc, !dbg !12072

for.inc:                                          ; preds = %if.end15
  %28 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !12073
  %id16 = getelementptr inbounds %struct.Brush, %struct.Brush* %28, i32 0, i32 0, !dbg !12074
  %next = getelementptr inbounds %struct.ID, %struct.ID* %id16, i32 0, i32 0, !dbg !12075
  %29 = load i8*, i8** %next, align 8, !dbg !12075
  %30 = bitcast i8* %29 to %struct.Brush*, !dbg !12073
  store %struct.Brush* %30, %struct.Brush** %brush, align 8, !dbg !12076
  br label %for.cond, !dbg !12077, !llvm.loop !12078

for.end:                                          ; preds = %for.cond
  ret void, !dbg !12080
}

; Function Attrs: noinline nounwind uwtable
define internal void @write_palettes(%struct.WriteData* %wd, %struct.ListBase* %idbase) #0 !dbg !12081 {
entry:
  %wd.addr = alloca %struct.WriteData*, align 8
  %idbase.addr = alloca %struct.ListBase*, align 8
  %palette = alloca %struct.Palette*, align 8
  %color = alloca %struct.PaletteColor*, align 8
  store %struct.WriteData* %wd, %struct.WriteData** %wd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WriteData** %wd.addr, metadata !12082, metadata !DIExpression()), !dbg !12083
  store %struct.ListBase* %idbase, %struct.ListBase** %idbase.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %idbase.addr, metadata !12084, metadata !DIExpression()), !dbg !12085
  call void @llvm.dbg.declare(metadata %struct.Palette** %palette, metadata !12086, metadata !DIExpression()), !dbg !12089
  %0 = load %struct.ListBase*, %struct.ListBase** %idbase.addr, align 8, !dbg !12090
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %0, i32 0, i32 0, !dbg !12092
  %1 = load i8*, i8** %first, align 8, !dbg !12092
  %2 = bitcast i8* %1 to %struct.Palette*, !dbg !12090
  store %struct.Palette* %2, %struct.Palette** %palette, align 8, !dbg !12093
  br label %for.cond, !dbg !12094

for.cond:                                         ; preds = %for.inc12, %entry
  %3 = load %struct.Palette*, %struct.Palette** %palette, align 8, !dbg !12095
  %tobool = icmp ne %struct.Palette* %3, null, !dbg !12097
  br i1 %tobool, label %for.body, label %for.end15, !dbg !12097

for.body:                                         ; preds = %for.cond
  %4 = load %struct.Palette*, %struct.Palette** %palette, align 8, !dbg !12098
  %id = getelementptr inbounds %struct.Palette, %struct.Palette* %4, i32 0, i32 0, !dbg !12101
  %us = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 6, !dbg !12102
  %5 = load i32, i32* %us, align 4, !dbg !12102
  %cmp = icmp sgt i32 %5, 0, !dbg !12103
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !12104

lor.lhs.false:                                    ; preds = %for.body
  %6 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !12105
  %current = getelementptr inbounds %struct.WriteData, %struct.WriteData* %6, i32 0, i32 4, !dbg !12106
  %7 = load %struct.MemFile*, %struct.MemFile** %current, align 8, !dbg !12106
  %tobool1 = icmp ne %struct.MemFile* %7, null, !dbg !12105
  br i1 %tobool1, label %if.then, label %if.end11, !dbg !12107

if.then:                                          ; preds = %lor.lhs.false, %for.body
  call void @llvm.dbg.declare(metadata %struct.PaletteColor** %color, metadata !12108, metadata !DIExpression()), !dbg !12119
  %8 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !12120
  %9 = load %struct.Palette*, %struct.Palette** %palette, align 8, !dbg !12121
  %10 = bitcast %struct.Palette* %9 to i8*, !dbg !12121
  call void @writestruct(%struct.WriteData* %8, i32 19536, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.250, i64 0, i64 0), i32 1, i8* %10), !dbg !12122
  %11 = load %struct.Palette*, %struct.Palette** %palette, align 8, !dbg !12123
  %id2 = getelementptr inbounds %struct.Palette, %struct.Palette* %11, i32 0, i32 0, !dbg !12125
  %properties = getelementptr inbounds %struct.ID, %struct.ID* %id2, i32 0, i32 9, !dbg !12126
  %12 = load %struct.IDProperty*, %struct.IDProperty** %properties, align 8, !dbg !12126
  %tobool3 = icmp ne %struct.IDProperty* %12, null, !dbg !12123
  br i1 %tobool3, label %if.then4, label %if.end, !dbg !12127

if.then4:                                         ; preds = %if.then
  %13 = load %struct.Palette*, %struct.Palette** %palette, align 8, !dbg !12128
  %id5 = getelementptr inbounds %struct.Palette, %struct.Palette* %13, i32 0, i32 0, !dbg !12129
  %properties6 = getelementptr inbounds %struct.ID, %struct.ID* %id5, i32 0, i32 9, !dbg !12130
  %14 = load %struct.IDProperty*, %struct.IDProperty** %properties6, align 8, !dbg !12130
  %15 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !12131
  %16 = bitcast %struct.WriteData* %15 to i8*, !dbg !12131
  call void @IDP_WriteProperty(%struct.IDProperty* %14, i8* %16), !dbg !12132
  br label %if.end, !dbg !12132

if.end:                                           ; preds = %if.then4, %if.then
  %17 = load %struct.Palette*, %struct.Palette** %palette, align 8, !dbg !12133
  %colors = getelementptr inbounds %struct.Palette, %struct.Palette* %17, i32 0, i32 1, !dbg !12135
  %first7 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %colors, i32 0, i32 0, !dbg !12136
  %18 = load i8*, i8** %first7, align 8, !dbg !12136
  %19 = bitcast i8* %18 to %struct.PaletteColor*, !dbg !12133
  store %struct.PaletteColor* %19, %struct.PaletteColor** %color, align 8, !dbg !12137
  br label %for.cond8, !dbg !12138

for.cond8:                                        ; preds = %for.inc, %if.end
  %20 = load %struct.PaletteColor*, %struct.PaletteColor** %color, align 8, !dbg !12139
  %tobool9 = icmp ne %struct.PaletteColor* %20, null, !dbg !12141
  br i1 %tobool9, label %for.body10, label %for.end, !dbg !12141

for.body10:                                       ; preds = %for.cond8
  %21 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !12142
  %22 = load %struct.PaletteColor*, %struct.PaletteColor** %color, align 8, !dbg !12143
  %23 = bitcast %struct.PaletteColor* %22 to i8*, !dbg !12143
  call void @writestruct(%struct.WriteData* %21, i32 1096040772, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.251, i64 0, i64 0), i32 1, i8* %23), !dbg !12144
  br label %for.inc, !dbg !12144

for.inc:                                          ; preds = %for.body10
  %24 = load %struct.PaletteColor*, %struct.PaletteColor** %color, align 8, !dbg !12145
  %next = getelementptr inbounds %struct.PaletteColor, %struct.PaletteColor* %24, i32 0, i32 0, !dbg !12146
  %25 = load %struct.PaletteColor*, %struct.PaletteColor** %next, align 8, !dbg !12146
  store %struct.PaletteColor* %25, %struct.PaletteColor** %color, align 8, !dbg !12147
  br label %for.cond8, !dbg !12148, !llvm.loop !12149

for.end:                                          ; preds = %for.cond8
  br label %if.end11, !dbg !12151

if.end11:                                         ; preds = %for.end, %lor.lhs.false
  br label %for.inc12, !dbg !12152

for.inc12:                                        ; preds = %if.end11
  %26 = load %struct.Palette*, %struct.Palette** %palette, align 8, !dbg !12153
  %id13 = getelementptr inbounds %struct.Palette, %struct.Palette* %26, i32 0, i32 0, !dbg !12154
  %next14 = getelementptr inbounds %struct.ID, %struct.ID* %id13, i32 0, i32 0, !dbg !12155
  %27 = load i8*, i8** %next14, align 8, !dbg !12155
  %28 = bitcast i8* %27 to %struct.Palette*, !dbg !12153
  store %struct.Palette* %28, %struct.Palette** %palette, align 8, !dbg !12156
  br label %for.cond, !dbg !12157, !llvm.loop !12158

for.end15:                                        ; preds = %for.cond
  ret void, !dbg !12160
}

; Function Attrs: noinline nounwind uwtable
define internal void @write_paintcurves(%struct.WriteData* %wd, %struct.ListBase* %idbase) #0 !dbg !12161 {
entry:
  %wd.addr = alloca %struct.WriteData*, align 8
  %idbase.addr = alloca %struct.ListBase*, align 8
  %pc = alloca %struct.PaintCurve*, align 8
  store %struct.WriteData* %wd, %struct.WriteData** %wd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WriteData** %wd.addr, metadata !12162, metadata !DIExpression()), !dbg !12163
  store %struct.ListBase* %idbase, %struct.ListBase** %idbase.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %idbase.addr, metadata !12164, metadata !DIExpression()), !dbg !12165
  call void @llvm.dbg.declare(metadata %struct.PaintCurve** %pc, metadata !12166, metadata !DIExpression()), !dbg !12169
  %0 = load %struct.ListBase*, %struct.ListBase** %idbase.addr, align 8, !dbg !12170
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %0, i32 0, i32 0, !dbg !12172
  %1 = load i8*, i8** %first, align 8, !dbg !12172
  %2 = bitcast i8* %1 to %struct.PaintCurve*, !dbg !12170
  store %struct.PaintCurve* %2, %struct.PaintCurve** %pc, align 8, !dbg !12173
  br label %for.cond, !dbg !12174

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.PaintCurve*, %struct.PaintCurve** %pc, align 8, !dbg !12175
  %tobool = icmp ne %struct.PaintCurve* %3, null, !dbg !12177
  br i1 %tobool, label %for.body, label %for.end, !dbg !12177

for.body:                                         ; preds = %for.cond
  %4 = load %struct.PaintCurve*, %struct.PaintCurve** %pc, align 8, !dbg !12178
  %id = getelementptr inbounds %struct.PaintCurve, %struct.PaintCurve* %4, i32 0, i32 0, !dbg !12181
  %us = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 6, !dbg !12182
  %5 = load i32, i32* %us, align 4, !dbg !12182
  %cmp = icmp sgt i32 %5, 0, !dbg !12183
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !12184

lor.lhs.false:                                    ; preds = %for.body
  %6 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !12185
  %current = getelementptr inbounds %struct.WriteData, %struct.WriteData* %6, i32 0, i32 4, !dbg !12186
  %7 = load %struct.MemFile*, %struct.MemFile** %current, align 8, !dbg !12186
  %tobool1 = icmp ne %struct.MemFile* %7, null, !dbg !12185
  br i1 %tobool1, label %if.then, label %if.end7, !dbg !12187

if.then:                                          ; preds = %lor.lhs.false, %for.body
  %8 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !12188
  %9 = load %struct.PaintCurve*, %struct.PaintCurve** %pc, align 8, !dbg !12190
  %10 = bitcast %struct.PaintCurve* %9 to i8*, !dbg !12190
  call void @writestruct(%struct.WriteData* %8, i32 17232, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.252, i64 0, i64 0), i32 1, i8* %10), !dbg !12191
  %11 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !12192
  %12 = load %struct.PaintCurve*, %struct.PaintCurve** %pc, align 8, !dbg !12193
  %tot_points = getelementptr inbounds %struct.PaintCurve, %struct.PaintCurve* %12, i32 0, i32 2, !dbg !12194
  %13 = load i32, i32* %tot_points, align 8, !dbg !12194
  %14 = load %struct.PaintCurve*, %struct.PaintCurve** %pc, align 8, !dbg !12195
  %points = getelementptr inbounds %struct.PaintCurve, %struct.PaintCurve* %14, i32 0, i32 1, !dbg !12196
  %15 = load %struct.PaintCurvePoint*, %struct.PaintCurvePoint** %points, align 8, !dbg !12196
  %16 = bitcast %struct.PaintCurvePoint* %15 to i8*, !dbg !12195
  call void @writestruct(%struct.WriteData* %11, i32 1096040772, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.253, i64 0, i64 0), i32 %13, i8* %16), !dbg !12197
  %17 = load %struct.PaintCurve*, %struct.PaintCurve** %pc, align 8, !dbg !12198
  %id2 = getelementptr inbounds %struct.PaintCurve, %struct.PaintCurve* %17, i32 0, i32 0, !dbg !12200
  %properties = getelementptr inbounds %struct.ID, %struct.ID* %id2, i32 0, i32 9, !dbg !12201
  %18 = load %struct.IDProperty*, %struct.IDProperty** %properties, align 8, !dbg !12201
  %tobool3 = icmp ne %struct.IDProperty* %18, null, !dbg !12198
  br i1 %tobool3, label %if.then4, label %if.end, !dbg !12202

if.then4:                                         ; preds = %if.then
  %19 = load %struct.PaintCurve*, %struct.PaintCurve** %pc, align 8, !dbg !12203
  %id5 = getelementptr inbounds %struct.PaintCurve, %struct.PaintCurve* %19, i32 0, i32 0, !dbg !12204
  %properties6 = getelementptr inbounds %struct.ID, %struct.ID* %id5, i32 0, i32 9, !dbg !12205
  %20 = load %struct.IDProperty*, %struct.IDProperty** %properties6, align 8, !dbg !12205
  %21 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !12206
  %22 = bitcast %struct.WriteData* %21 to i8*, !dbg !12206
  call void @IDP_WriteProperty(%struct.IDProperty* %20, i8* %22), !dbg !12207
  br label %if.end, !dbg !12207

if.end:                                           ; preds = %if.then4, %if.then
  br label %if.end7, !dbg !12208

if.end7:                                          ; preds = %if.end, %lor.lhs.false
  br label %for.inc, !dbg !12209

for.inc:                                          ; preds = %if.end7
  %23 = load %struct.PaintCurve*, %struct.PaintCurve** %pc, align 8, !dbg !12210
  %id8 = getelementptr inbounds %struct.PaintCurve, %struct.PaintCurve* %23, i32 0, i32 0, !dbg !12211
  %next = getelementptr inbounds %struct.ID, %struct.ID* %id8, i32 0, i32 0, !dbg !12212
  %24 = load i8*, i8** %next, align 8, !dbg !12212
  %25 = bitcast i8* %24 to %struct.PaintCurve*, !dbg !12210
  store %struct.PaintCurve* %25, %struct.PaintCurve** %pc, align 8, !dbg !12213
  br label %for.cond, !dbg !12214, !llvm.loop !12215

for.end:                                          ; preds = %for.cond
  ret void, !dbg !12217
}

; Function Attrs: noinline nounwind uwtable
define internal void @write_scripts(%struct.WriteData* %wd, %struct.ListBase* %idbase) #0 !dbg !12218 {
entry:
  %wd.addr = alloca %struct.WriteData*, align 8
  %idbase.addr = alloca %struct.ListBase*, align 8
  %script = alloca %struct.Script*, align 8
  store %struct.WriteData* %wd, %struct.WriteData** %wd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WriteData** %wd.addr, metadata !12219, metadata !DIExpression()), !dbg !12220
  store %struct.ListBase* %idbase, %struct.ListBase** %idbase.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %idbase.addr, metadata !12221, metadata !DIExpression()), !dbg !12222
  call void @llvm.dbg.declare(metadata %struct.Script** %script, metadata !12223, metadata !DIExpression()), !dbg !12226
  %0 = load %struct.ListBase*, %struct.ListBase** %idbase.addr, align 8, !dbg !12227
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %0, i32 0, i32 0, !dbg !12229
  %1 = load i8*, i8** %first, align 8, !dbg !12229
  %2 = bitcast i8* %1 to %struct.Script*, !dbg !12227
  store %struct.Script* %2, %struct.Script** %script, align 8, !dbg !12230
  br label %for.cond, !dbg !12231

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.Script*, %struct.Script** %script, align 8, !dbg !12232
  %tobool = icmp ne %struct.Script* %3, null, !dbg !12234
  br i1 %tobool, label %for.body, label %for.end, !dbg !12234

for.body:                                         ; preds = %for.cond
  %4 = load %struct.Script*, %struct.Script** %script, align 8, !dbg !12235
  %id = getelementptr inbounds %struct.Script, %struct.Script* %4, i32 0, i32 0, !dbg !12238
  %us = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 6, !dbg !12239
  %5 = load i32, i32* %us, align 4, !dbg !12239
  %cmp = icmp sgt i32 %5, 0, !dbg !12240
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !12241

lor.lhs.false:                                    ; preds = %for.body
  %6 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !12242
  %current = getelementptr inbounds %struct.WriteData, %struct.WriteData* %6, i32 0, i32 4, !dbg !12243
  %7 = load %struct.MemFile*, %struct.MemFile** %current, align 8, !dbg !12243
  %tobool1 = icmp ne %struct.MemFile* %7, null, !dbg !12242
  br i1 %tobool1, label %if.then, label %if.end7, !dbg !12244

if.then:                                          ; preds = %lor.lhs.false, %for.body
  %8 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !12245
  %9 = load %struct.Script*, %struct.Script** %script, align 8, !dbg !12247
  %10 = bitcast %struct.Script* %9 to i8*, !dbg !12247
  call void @writestruct(%struct.WriteData* %8, i32 22864, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.254, i64 0, i64 0), i32 1, i8* %10), !dbg !12248
  %11 = load %struct.Script*, %struct.Script** %script, align 8, !dbg !12249
  %id2 = getelementptr inbounds %struct.Script, %struct.Script* %11, i32 0, i32 0, !dbg !12251
  %properties = getelementptr inbounds %struct.ID, %struct.ID* %id2, i32 0, i32 9, !dbg !12252
  %12 = load %struct.IDProperty*, %struct.IDProperty** %properties, align 8, !dbg !12252
  %tobool3 = icmp ne %struct.IDProperty* %12, null, !dbg !12249
  br i1 %tobool3, label %if.then4, label %if.end, !dbg !12253

if.then4:                                         ; preds = %if.then
  %13 = load %struct.Script*, %struct.Script** %script, align 8, !dbg !12254
  %id5 = getelementptr inbounds %struct.Script, %struct.Script* %13, i32 0, i32 0, !dbg !12255
  %properties6 = getelementptr inbounds %struct.ID, %struct.ID* %id5, i32 0, i32 9, !dbg !12256
  %14 = load %struct.IDProperty*, %struct.IDProperty** %properties6, align 8, !dbg !12256
  %15 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !12257
  %16 = bitcast %struct.WriteData* %15 to i8*, !dbg !12257
  call void @IDP_WriteProperty(%struct.IDProperty* %14, i8* %16), !dbg !12258
  br label %if.end, !dbg !12258

if.end:                                           ; preds = %if.then4, %if.then
  br label %if.end7, !dbg !12259

if.end7:                                          ; preds = %if.end, %lor.lhs.false
  br label %for.inc, !dbg !12260

for.inc:                                          ; preds = %if.end7
  %17 = load %struct.Script*, %struct.Script** %script, align 8, !dbg !12261
  %id8 = getelementptr inbounds %struct.Script, %struct.Script* %17, i32 0, i32 0, !dbg !12262
  %next = getelementptr inbounds %struct.ID, %struct.ID* %id8, i32 0, i32 0, !dbg !12263
  %18 = load i8*, i8** %next, align 8, !dbg !12263
  %19 = bitcast i8* %18 to %struct.Script*, !dbg !12261
  store %struct.Script* %19, %struct.Script** %script, align 8, !dbg !12264
  br label %for.cond, !dbg !12265, !llvm.loop !12266

for.end:                                          ; preds = %for.cond
  ret void, !dbg !12268
}

; Function Attrs: noinline nounwind uwtable
define internal void @write_gpencils(%struct.WriteData* %wd, %struct.ListBase* %lb) #0 !dbg !12269 {
entry:
  %wd.addr = alloca %struct.WriteData*, align 8
  %lb.addr = alloca %struct.ListBase*, align 8
  %gpd = alloca %struct.bGPdata*, align 8
  %gpl = alloca %struct.bGPDlayer*, align 8
  %gpf = alloca %struct.bGPDframe*, align 8
  %gps = alloca %struct.bGPDstroke*, align 8
  store %struct.WriteData* %wd, %struct.WriteData** %wd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WriteData** %wd.addr, metadata !12270, metadata !DIExpression()), !dbg !12271
  store %struct.ListBase* %lb, %struct.ListBase** %lb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %lb.addr, metadata !12272, metadata !DIExpression()), !dbg !12273
  call void @llvm.dbg.declare(metadata %struct.bGPdata** %gpd, metadata !12274, metadata !DIExpression()), !dbg !12277
  call void @llvm.dbg.declare(metadata %struct.bGPDlayer** %gpl, metadata !12278, metadata !DIExpression()), !dbg !12303
  call void @llvm.dbg.declare(metadata %struct.bGPDframe** %gpf, metadata !12304, metadata !DIExpression()), !dbg !12305
  call void @llvm.dbg.declare(metadata %struct.bGPDstroke** %gps, metadata !12306, metadata !DIExpression()), !dbg !12329
  %0 = load %struct.ListBase*, %struct.ListBase** %lb.addr, align 8, !dbg !12330
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %0, i32 0, i32 0, !dbg !12332
  %1 = load i8*, i8** %first, align 8, !dbg !12332
  %2 = bitcast i8* %1 to %struct.bGPdata*, !dbg !12330
  store %struct.bGPdata* %2, %struct.bGPdata** %gpd, align 8, !dbg !12333
  br label %for.cond, !dbg !12334

for.cond:                                         ; preds = %for.inc23, %entry
  %3 = load %struct.bGPdata*, %struct.bGPdata** %gpd, align 8, !dbg !12335
  %tobool = icmp ne %struct.bGPdata* %3, null, !dbg !12337
  br i1 %tobool, label %for.body, label %for.end26, !dbg !12337

for.body:                                         ; preds = %for.cond
  %4 = load %struct.bGPdata*, %struct.bGPdata** %gpd, align 8, !dbg !12338
  %id = getelementptr inbounds %struct.bGPdata, %struct.bGPdata* %4, i32 0, i32 0, !dbg !12341
  %us = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 6, !dbg !12342
  %5 = load i32, i32* %us, align 4, !dbg !12342
  %cmp = icmp sgt i32 %5, 0, !dbg !12343
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !12344

lor.lhs.false:                                    ; preds = %for.body
  %6 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !12345
  %current = getelementptr inbounds %struct.WriteData, %struct.WriteData* %6, i32 0, i32 4, !dbg !12346
  %7 = load %struct.MemFile*, %struct.MemFile** %current, align 8, !dbg !12346
  %tobool1 = icmp ne %struct.MemFile* %7, null, !dbg !12345
  br i1 %tobool1, label %if.then, label %if.end, !dbg !12347

if.then:                                          ; preds = %lor.lhs.false, %for.body
  %8 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !12348
  %9 = load %struct.bGPdata*, %struct.bGPdata** %gpd, align 8, !dbg !12350
  %10 = bitcast %struct.bGPdata* %9 to i8*, !dbg !12350
  call void @writestruct(%struct.WriteData* %8, i32 17479, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.255, i64 0, i64 0), i32 1, i8* %10), !dbg !12351
  %11 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !12352
  %12 = load %struct.bGPdata*, %struct.bGPdata** %gpd, align 8, !dbg !12353
  %layers = getelementptr inbounds %struct.bGPdata, %struct.bGPdata* %12, i32 0, i32 1, !dbg !12354
  call void @writelist(%struct.WriteData* %11, i32 1096040772, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.256, i64 0, i64 0), %struct.ListBase* %layers), !dbg !12355
  %13 = load %struct.bGPdata*, %struct.bGPdata** %gpd, align 8, !dbg !12356
  %layers2 = getelementptr inbounds %struct.bGPdata, %struct.bGPdata* %13, i32 0, i32 1, !dbg !12358
  %first3 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %layers2, i32 0, i32 0, !dbg !12359
  %14 = load i8*, i8** %first3, align 8, !dbg !12359
  %15 = bitcast i8* %14 to %struct.bGPDlayer*, !dbg !12356
  store %struct.bGPDlayer* %15, %struct.bGPDlayer** %gpl, align 8, !dbg !12360
  br label %for.cond4, !dbg !12361

for.cond4:                                        ; preds = %for.inc20, %if.then
  %16 = load %struct.bGPDlayer*, %struct.bGPDlayer** %gpl, align 8, !dbg !12362
  %tobool5 = icmp ne %struct.bGPDlayer* %16, null, !dbg !12364
  br i1 %tobool5, label %for.body6, label %for.end22, !dbg !12364

for.body6:                                        ; preds = %for.cond4
  %17 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !12365
  %18 = load %struct.bGPDlayer*, %struct.bGPDlayer** %gpl, align 8, !dbg !12367
  %frames = getelementptr inbounds %struct.bGPDlayer, %struct.bGPDlayer* %18, i32 0, i32 2, !dbg !12368
  call void @writelist(%struct.WriteData* %17, i32 1096040772, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.257, i64 0, i64 0), %struct.ListBase* %frames), !dbg !12369
  %19 = load %struct.bGPDlayer*, %struct.bGPDlayer** %gpl, align 8, !dbg !12370
  %frames7 = getelementptr inbounds %struct.bGPDlayer, %struct.bGPDlayer* %19, i32 0, i32 2, !dbg !12372
  %first8 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %frames7, i32 0, i32 0, !dbg !12373
  %20 = load i8*, i8** %first8, align 8, !dbg !12373
  %21 = bitcast i8* %20 to %struct.bGPDframe*, !dbg !12370
  store %struct.bGPDframe* %21, %struct.bGPDframe** %gpf, align 8, !dbg !12374
  br label %for.cond9, !dbg !12375

for.cond9:                                        ; preds = %for.inc17, %for.body6
  %22 = load %struct.bGPDframe*, %struct.bGPDframe** %gpf, align 8, !dbg !12376
  %tobool10 = icmp ne %struct.bGPDframe* %22, null, !dbg !12378
  br i1 %tobool10, label %for.body11, label %for.end19, !dbg !12378

for.body11:                                       ; preds = %for.cond9
  %23 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !12379
  %24 = load %struct.bGPDframe*, %struct.bGPDframe** %gpf, align 8, !dbg !12381
  %strokes = getelementptr inbounds %struct.bGPDframe, %struct.bGPDframe* %24, i32 0, i32 2, !dbg !12382
  call void @writelist(%struct.WriteData* %23, i32 1096040772, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.258, i64 0, i64 0), %struct.ListBase* %strokes), !dbg !12383
  %25 = load %struct.bGPDframe*, %struct.bGPDframe** %gpf, align 8, !dbg !12384
  %strokes12 = getelementptr inbounds %struct.bGPDframe, %struct.bGPDframe* %25, i32 0, i32 2, !dbg !12386
  %first13 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %strokes12, i32 0, i32 0, !dbg !12387
  %26 = load i8*, i8** %first13, align 8, !dbg !12387
  %27 = bitcast i8* %26 to %struct.bGPDstroke*, !dbg !12384
  store %struct.bGPDstroke* %27, %struct.bGPDstroke** %gps, align 8, !dbg !12388
  br label %for.cond14, !dbg !12389

for.cond14:                                       ; preds = %for.inc, %for.body11
  %28 = load %struct.bGPDstroke*, %struct.bGPDstroke** %gps, align 8, !dbg !12390
  %tobool15 = icmp ne %struct.bGPDstroke* %28, null, !dbg !12392
  br i1 %tobool15, label %for.body16, label %for.end, !dbg !12392

for.body16:                                       ; preds = %for.cond14
  %29 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !12393
  %30 = load %struct.bGPDstroke*, %struct.bGPDstroke** %gps, align 8, !dbg !12395
  %totpoints = getelementptr inbounds %struct.bGPDstroke, %struct.bGPDstroke* %30, i32 0, i32 4, !dbg !12396
  %31 = load i32, i32* %totpoints, align 8, !dbg !12396
  %32 = load %struct.bGPDstroke*, %struct.bGPDstroke** %gps, align 8, !dbg !12397
  %points = getelementptr inbounds %struct.bGPDstroke, %struct.bGPDstroke* %32, i32 0, i32 2, !dbg !12398
  %33 = load %struct.bGPDspoint*, %struct.bGPDspoint** %points, align 8, !dbg !12398
  %34 = bitcast %struct.bGPDspoint* %33 to i8*, !dbg !12397
  call void @writestruct(%struct.WriteData* %29, i32 1096040772, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.259, i64 0, i64 0), i32 %31, i8* %34), !dbg !12399
  br label %for.inc, !dbg !12400

for.inc:                                          ; preds = %for.body16
  %35 = load %struct.bGPDstroke*, %struct.bGPDstroke** %gps, align 8, !dbg !12401
  %next = getelementptr inbounds %struct.bGPDstroke, %struct.bGPDstroke* %35, i32 0, i32 0, !dbg !12402
  %36 = load %struct.bGPDstroke*, %struct.bGPDstroke** %next, align 8, !dbg !12402
  store %struct.bGPDstroke* %36, %struct.bGPDstroke** %gps, align 8, !dbg !12403
  br label %for.cond14, !dbg !12404, !llvm.loop !12405

for.end:                                          ; preds = %for.cond14
  br label %for.inc17, !dbg !12407

for.inc17:                                        ; preds = %for.end
  %37 = load %struct.bGPDframe*, %struct.bGPDframe** %gpf, align 8, !dbg !12408
  %next18 = getelementptr inbounds %struct.bGPDframe, %struct.bGPDframe* %37, i32 0, i32 0, !dbg !12409
  %38 = load %struct.bGPDframe*, %struct.bGPDframe** %next18, align 8, !dbg !12409
  store %struct.bGPDframe* %38, %struct.bGPDframe** %gpf, align 8, !dbg !12410
  br label %for.cond9, !dbg !12411, !llvm.loop !12412

for.end19:                                        ; preds = %for.cond9
  br label %for.inc20, !dbg !12414

for.inc20:                                        ; preds = %for.end19
  %39 = load %struct.bGPDlayer*, %struct.bGPDlayer** %gpl, align 8, !dbg !12415
  %next21 = getelementptr inbounds %struct.bGPDlayer, %struct.bGPDlayer* %39, i32 0, i32 0, !dbg !12416
  %40 = load %struct.bGPDlayer*, %struct.bGPDlayer** %next21, align 8, !dbg !12416
  store %struct.bGPDlayer* %40, %struct.bGPDlayer** %gpl, align 8, !dbg !12417
  br label %for.cond4, !dbg !12418, !llvm.loop !12419

for.end22:                                        ; preds = %for.cond4
  br label %if.end, !dbg !12421

if.end:                                           ; preds = %for.end22, %lor.lhs.false
  br label %for.inc23, !dbg !12422

for.inc23:                                        ; preds = %if.end
  %41 = load %struct.bGPdata*, %struct.bGPdata** %gpd, align 8, !dbg !12423
  %id24 = getelementptr inbounds %struct.bGPdata, %struct.bGPdata* %41, i32 0, i32 0, !dbg !12424
  %next25 = getelementptr inbounds %struct.ID, %struct.ID* %id24, i32 0, i32 0, !dbg !12425
  %42 = load i8*, i8** %next25, align 8, !dbg !12425
  %43 = bitcast i8* %42 to %struct.bGPdata*, !dbg !12423
  store %struct.bGPdata* %43, %struct.bGPdata** %gpd, align 8, !dbg !12426
  br label %for.cond, !dbg !12427, !llvm.loop !12428

for.end26:                                        ; preds = %for.cond
  ret void, !dbg !12430
}

; Function Attrs: noinline nounwind uwtable
define internal void @write_linestyles(%struct.WriteData* %wd, %struct.ListBase* %idbase) #0 !dbg !12431 {
entry:
  %wd.addr = alloca %struct.WriteData*, align 8
  %idbase.addr = alloca %struct.ListBase*, align 8
  %linestyle = alloca %struct.FreestyleLineStyle*, align 8
  %a = alloca i32, align 4
  store %struct.WriteData* %wd, %struct.WriteData** %wd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WriteData** %wd.addr, metadata !12432, metadata !DIExpression()), !dbg !12433
  store %struct.ListBase* %idbase, %struct.ListBase** %idbase.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %idbase.addr, metadata !12434, metadata !DIExpression()), !dbg !12435
  call void @llvm.dbg.declare(metadata %struct.FreestyleLineStyle** %linestyle, metadata !12436, metadata !DIExpression()), !dbg !12437
  call void @llvm.dbg.declare(metadata i32* %a, metadata !12438, metadata !DIExpression()), !dbg !12439
  %0 = load %struct.ListBase*, %struct.ListBase** %idbase.addr, align 8, !dbg !12440
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %0, i32 0, i32 0, !dbg !12442
  %1 = load i8*, i8** %first, align 8, !dbg !12442
  %2 = bitcast i8* %1 to %struct.FreestyleLineStyle*, !dbg !12440
  store %struct.FreestyleLineStyle* %2, %struct.FreestyleLineStyle** %linestyle, align 8, !dbg !12443
  br label %for.cond, !dbg !12444

for.cond:                                         ; preds = %for.inc26, %entry
  %3 = load %struct.FreestyleLineStyle*, %struct.FreestyleLineStyle** %linestyle, align 8, !dbg !12445
  %tobool = icmp ne %struct.FreestyleLineStyle* %3, null, !dbg !12447
  br i1 %tobool, label %for.body, label %for.end28, !dbg !12447

for.body:                                         ; preds = %for.cond
  %4 = load %struct.FreestyleLineStyle*, %struct.FreestyleLineStyle** %linestyle, align 8, !dbg !12448
  %id = getelementptr inbounds %struct.FreestyleLineStyle, %struct.FreestyleLineStyle* %4, i32 0, i32 0, !dbg !12451
  %us = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 6, !dbg !12452
  %5 = load i32, i32* %us, align 4, !dbg !12452
  %cmp = icmp sgt i32 %5, 0, !dbg !12453
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !12454

lor.lhs.false:                                    ; preds = %for.body
  %6 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !12455
  %current = getelementptr inbounds %struct.WriteData, %struct.WriteData* %6, i32 0, i32 4, !dbg !12456
  %7 = load %struct.MemFile*, %struct.MemFile** %current, align 8, !dbg !12456
  %tobool1 = icmp ne %struct.MemFile* %7, null, !dbg !12455
  br i1 %tobool1, label %if.then, label %if.end25, !dbg !12457

if.then:                                          ; preds = %lor.lhs.false, %for.body
  %8 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !12458
  %9 = load %struct.FreestyleLineStyle*, %struct.FreestyleLineStyle** %linestyle, align 8, !dbg !12460
  %10 = bitcast %struct.FreestyleLineStyle* %9 to i8*, !dbg !12460
  call void @writestruct(%struct.WriteData* %8, i32 21324, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.260, i64 0, i64 0), i32 1, i8* %10), !dbg !12461
  %11 = load %struct.FreestyleLineStyle*, %struct.FreestyleLineStyle** %linestyle, align 8, !dbg !12462
  %id2 = getelementptr inbounds %struct.FreestyleLineStyle, %struct.FreestyleLineStyle* %11, i32 0, i32 0, !dbg !12464
  %properties = getelementptr inbounds %struct.ID, %struct.ID* %id2, i32 0, i32 9, !dbg !12465
  %12 = load %struct.IDProperty*, %struct.IDProperty** %properties, align 8, !dbg !12465
  %tobool3 = icmp ne %struct.IDProperty* %12, null, !dbg !12462
  br i1 %tobool3, label %if.then4, label %if.end, !dbg !12466

if.then4:                                         ; preds = %if.then
  %13 = load %struct.FreestyleLineStyle*, %struct.FreestyleLineStyle** %linestyle, align 8, !dbg !12467
  %id5 = getelementptr inbounds %struct.FreestyleLineStyle, %struct.FreestyleLineStyle* %13, i32 0, i32 0, !dbg !12468
  %properties6 = getelementptr inbounds %struct.ID, %struct.ID* %id5, i32 0, i32 9, !dbg !12469
  %14 = load %struct.IDProperty*, %struct.IDProperty** %properties6, align 8, !dbg !12469
  %15 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !12470
  %16 = bitcast %struct.WriteData* %15 to i8*, !dbg !12470
  call void @IDP_WriteProperty(%struct.IDProperty* %14, i8* %16), !dbg !12471
  br label %if.end, !dbg !12471

if.end:                                           ; preds = %if.then4, %if.then
  %17 = load %struct.FreestyleLineStyle*, %struct.FreestyleLineStyle** %linestyle, align 8, !dbg !12472
  %adt = getelementptr inbounds %struct.FreestyleLineStyle, %struct.FreestyleLineStyle* %17, i32 0, i32 1, !dbg !12474
  %18 = load %struct.AnimData*, %struct.AnimData** %adt, align 8, !dbg !12474
  %tobool7 = icmp ne %struct.AnimData* %18, null, !dbg !12472
  br i1 %tobool7, label %if.then8, label %if.end10, !dbg !12475

if.then8:                                         ; preds = %if.end
  %19 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !12476
  %20 = load %struct.FreestyleLineStyle*, %struct.FreestyleLineStyle** %linestyle, align 8, !dbg !12477
  %adt9 = getelementptr inbounds %struct.FreestyleLineStyle, %struct.FreestyleLineStyle* %20, i32 0, i32 1, !dbg !12478
  %21 = load %struct.AnimData*, %struct.AnimData** %adt9, align 8, !dbg !12478
  call void @write_animdata(%struct.WriteData* %19, %struct.AnimData* %21), !dbg !12479
  br label %if.end10, !dbg !12479

if.end10:                                         ; preds = %if.then8, %if.end
  %22 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !12480
  %23 = load %struct.FreestyleLineStyle*, %struct.FreestyleLineStyle** %linestyle, align 8, !dbg !12481
  %color_modifiers = getelementptr inbounds %struct.FreestyleLineStyle, %struct.FreestyleLineStyle* %23, i32 0, i32 41, !dbg !12482
  call void @write_linestyle_color_modifiers(%struct.WriteData* %22, %struct.ListBase* %color_modifiers), !dbg !12483
  %24 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !12484
  %25 = load %struct.FreestyleLineStyle*, %struct.FreestyleLineStyle** %linestyle, align 8, !dbg !12485
  %alpha_modifiers = getelementptr inbounds %struct.FreestyleLineStyle, %struct.FreestyleLineStyle* %25, i32 0, i32 42, !dbg !12486
  call void @write_linestyle_alpha_modifiers(%struct.WriteData* %24, %struct.ListBase* %alpha_modifiers), !dbg !12487
  %26 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !12488
  %27 = load %struct.FreestyleLineStyle*, %struct.FreestyleLineStyle** %linestyle, align 8, !dbg !12489
  %thickness_modifiers = getelementptr inbounds %struct.FreestyleLineStyle, %struct.FreestyleLineStyle* %27, i32 0, i32 43, !dbg !12490
  call void @write_linestyle_thickness_modifiers(%struct.WriteData* %26, %struct.ListBase* %thickness_modifiers), !dbg !12491
  %28 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !12492
  %29 = load %struct.FreestyleLineStyle*, %struct.FreestyleLineStyle** %linestyle, align 8, !dbg !12493
  %geometry_modifiers = getelementptr inbounds %struct.FreestyleLineStyle, %struct.FreestyleLineStyle* %29, i32 0, i32 44, !dbg !12494
  call void @write_linestyle_geometry_modifiers(%struct.WriteData* %28, %struct.ListBase* %geometry_modifiers), !dbg !12495
  store i32 0, i32* %a, align 4, !dbg !12496
  br label %for.cond11, !dbg !12498

for.cond11:                                       ; preds = %for.inc, %if.end10
  %30 = load i32, i32* %a, align 4, !dbg !12499
  %cmp12 = icmp slt i32 %30, 18, !dbg !12501
  br i1 %cmp12, label %for.body13, label %for.end, !dbg !12502

for.body13:                                       ; preds = %for.cond11
  %31 = load %struct.FreestyleLineStyle*, %struct.FreestyleLineStyle** %linestyle, align 8, !dbg !12503
  %mtex = getelementptr inbounds %struct.FreestyleLineStyle, %struct.FreestyleLineStyle* %31, i32 0, i32 39, !dbg !12506
  %32 = load i32, i32* %a, align 4, !dbg !12507
  %idxprom = sext i32 %32 to i64, !dbg !12503
  %arrayidx = getelementptr inbounds [18 x %struct.MTex*], [18 x %struct.MTex*]* %mtex, i64 0, i64 %idxprom, !dbg !12503
  %33 = load %struct.MTex*, %struct.MTex** %arrayidx, align 8, !dbg !12503
  %tobool14 = icmp ne %struct.MTex* %33, null, !dbg !12503
  br i1 %tobool14, label %if.then15, label %if.end19, !dbg !12508

if.then15:                                        ; preds = %for.body13
  %34 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !12509
  %35 = load %struct.FreestyleLineStyle*, %struct.FreestyleLineStyle** %linestyle, align 8, !dbg !12510
  %mtex16 = getelementptr inbounds %struct.FreestyleLineStyle, %struct.FreestyleLineStyle* %35, i32 0, i32 39, !dbg !12511
  %36 = load i32, i32* %a, align 4, !dbg !12512
  %idxprom17 = sext i32 %36 to i64, !dbg !12510
  %arrayidx18 = getelementptr inbounds [18 x %struct.MTex*], [18 x %struct.MTex*]* %mtex16, i64 0, i64 %idxprom17, !dbg !12510
  %37 = load %struct.MTex*, %struct.MTex** %arrayidx18, align 8, !dbg !12510
  %38 = bitcast %struct.MTex* %37 to i8*, !dbg !12510
  call void @writestruct(%struct.WriteData* %34, i32 1096040772, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.134, i64 0, i64 0), i32 1, i8* %38), !dbg !12513
  br label %if.end19, !dbg !12513

if.end19:                                         ; preds = %if.then15, %for.body13
  br label %for.inc, !dbg !12514

for.inc:                                          ; preds = %if.end19
  %39 = load i32, i32* %a, align 4, !dbg !12515
  %inc = add nsw i32 %39, 1, !dbg !12515
  store i32 %inc, i32* %a, align 4, !dbg !12515
  br label %for.cond11, !dbg !12516, !llvm.loop !12517

for.end:                                          ; preds = %for.cond11
  %40 = load %struct.FreestyleLineStyle*, %struct.FreestyleLineStyle** %linestyle, align 8, !dbg !12519
  %nodetree = getelementptr inbounds %struct.FreestyleLineStyle, %struct.FreestyleLineStyle* %40, i32 0, i32 40, !dbg !12521
  %41 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree, align 8, !dbg !12521
  %tobool20 = icmp ne %struct.bNodeTree* %41, null, !dbg !12519
  br i1 %tobool20, label %if.then21, label %if.end24, !dbg !12522

if.then21:                                        ; preds = %for.end
  %42 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !12523
  %43 = load %struct.FreestyleLineStyle*, %struct.FreestyleLineStyle** %linestyle, align 8, !dbg !12525
  %nodetree22 = getelementptr inbounds %struct.FreestyleLineStyle, %struct.FreestyleLineStyle* %43, i32 0, i32 40, !dbg !12526
  %44 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree22, align 8, !dbg !12526
  %45 = bitcast %struct.bNodeTree* %44 to i8*, !dbg !12525
  call void @writestruct(%struct.WriteData* %42, i32 1096040772, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.105, i64 0, i64 0), i32 1, i8* %45), !dbg !12527
  %46 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !12528
  %47 = load %struct.FreestyleLineStyle*, %struct.FreestyleLineStyle** %linestyle, align 8, !dbg !12529
  %nodetree23 = getelementptr inbounds %struct.FreestyleLineStyle, %struct.FreestyleLineStyle* %47, i32 0, i32 40, !dbg !12530
  %48 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree23, align 8, !dbg !12530
  call void @write_nodetree(%struct.WriteData* %46, %struct.bNodeTree* %48), !dbg !12531
  br label %if.end24, !dbg !12532

if.end24:                                         ; preds = %if.then21, %for.end
  br label %if.end25, !dbg !12533

if.end25:                                         ; preds = %if.end24, %lor.lhs.false
  br label %for.inc26, !dbg !12534

for.inc26:                                        ; preds = %if.end25
  %49 = load %struct.FreestyleLineStyle*, %struct.FreestyleLineStyle** %linestyle, align 8, !dbg !12535
  %id27 = getelementptr inbounds %struct.FreestyleLineStyle, %struct.FreestyleLineStyle* %49, i32 0, i32 0, !dbg !12536
  %next = getelementptr inbounds %struct.ID, %struct.ID* %id27, i32 0, i32 0, !dbg !12537
  %50 = load i8*, i8** %next, align 8, !dbg !12537
  %51 = bitcast i8* %50 to %struct.FreestyleLineStyle*, !dbg !12535
  store %struct.FreestyleLineStyle* %51, %struct.FreestyleLineStyle** %linestyle, align 8, !dbg !12538
  br label %for.cond, !dbg !12539, !llvm.loop !12540

for.end28:                                        ; preds = %for.cond
  ret void, !dbg !12542
}

; Function Attrs: noinline nounwind uwtable
define internal void @write_libraries(%struct.WriteData* %wd, %struct.Main* %main) #0 !dbg !12543 {
entry:
  %wd.addr = alloca %struct.WriteData*, align 8
  %main.addr = alloca %struct.Main*, align 8
  %lbarray = alloca [35 x %struct.ListBase*], align 16
  %id = alloca %struct.ID*, align 8
  %a = alloca i32, align 4
  %tot = alloca i32, align 4
  %found_one = alloca i8, align 1
  %pf = alloca %struct.PackedFile*, align 8
  store %struct.WriteData* %wd, %struct.WriteData** %wd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WriteData** %wd.addr, metadata !12544, metadata !DIExpression()), !dbg !12545
  store %struct.Main* %main, %struct.Main** %main.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Main** %main.addr, metadata !12546, metadata !DIExpression()), !dbg !12547
  call void @llvm.dbg.declare(metadata [35 x %struct.ListBase*]* %lbarray, metadata !12548, metadata !DIExpression()), !dbg !12552
  call void @llvm.dbg.declare(metadata %struct.ID** %id, metadata !12553, metadata !DIExpression()), !dbg !12554
  call void @llvm.dbg.declare(metadata i32* %a, metadata !12555, metadata !DIExpression()), !dbg !12556
  call void @llvm.dbg.declare(metadata i32* %tot, metadata !12557, metadata !DIExpression()), !dbg !12558
  call void @llvm.dbg.declare(metadata i8* %found_one, metadata !12559, metadata !DIExpression()), !dbg !12560
  br label %for.cond, !dbg !12561

for.cond:                                         ; preds = %for.inc57, %entry
  %0 = load %struct.Main*, %struct.Main** %main.addr, align 8, !dbg !12562
  %tobool = icmp ne %struct.Main* %0, null, !dbg !12565
  br i1 %tobool, label %for.body, label %for.end59, !dbg !12565

for.body:                                         ; preds = %for.cond
  %1 = load %struct.Main*, %struct.Main** %main.addr, align 8, !dbg !12566
  %arraydecay = getelementptr inbounds [35 x %struct.ListBase*], [35 x %struct.ListBase*]* %lbarray, i64 0, i64 0, !dbg !12568
  %call = call i32 @set_listbasepointers(%struct.Main* %1, %struct.ListBase** %arraydecay), !dbg !12569
  store i32 %call, i32* %tot, align 4, !dbg !12570
  store i32 %call, i32* %a, align 4, !dbg !12571
  %2 = load %struct.Main*, %struct.Main** %main.addr, align 8, !dbg !12572
  %curlib = getelementptr inbounds %struct.Main, %struct.Main* %2, i32 0, i32 10, !dbg !12574
  %3 = load %struct.Library*, %struct.Library** %curlib, align 8, !dbg !12574
  %tobool1 = icmp ne %struct.Library* %3, null, !dbg !12572
  br i1 %tobool1, label %land.lhs.true, label %if.else, !dbg !12575

land.lhs.true:                                    ; preds = %for.body
  %4 = load %struct.Main*, %struct.Main** %main.addr, align 8, !dbg !12576
  %curlib2 = getelementptr inbounds %struct.Main, %struct.Main* %4, i32 0, i32 10, !dbg !12577
  %5 = load %struct.Library*, %struct.Library** %curlib2, align 8, !dbg !12577
  %packedfile = getelementptr inbounds %struct.Library, %struct.Library* %5, i32 0, i32 6, !dbg !12578
  %6 = load %struct.PackedFile*, %struct.PackedFile** %packedfile, align 8, !dbg !12578
  %tobool3 = icmp ne %struct.PackedFile* %6, null, !dbg !12576
  br i1 %tobool3, label %if.then, label %if.else, !dbg !12579

if.then:                                          ; preds = %land.lhs.true
  store i8 1, i8* %found_one, align 1, !dbg !12580
  br label %if.end14, !dbg !12581

if.else:                                          ; preds = %land.lhs.true, %for.body
  store i8 0, i8* %found_one, align 1, !dbg !12582
  br label %while.cond, !dbg !12584

while.cond:                                       ; preds = %if.end13, %if.else
  %7 = load i32, i32* %tot, align 4, !dbg !12585
  %dec = add nsw i32 %7, -1, !dbg !12585
  store i32 %dec, i32* %tot, align 4, !dbg !12585
  %tobool4 = icmp ne i32 %7, 0, !dbg !12584
  br i1 %tobool4, label %while.body, label %while.end, !dbg !12584

while.body:                                       ; preds = %while.cond
  %8 = load i32, i32* %tot, align 4, !dbg !12586
  %idxprom = sext i32 %8 to i64, !dbg !12589
  %arrayidx = getelementptr inbounds [35 x %struct.ListBase*], [35 x %struct.ListBase*]* %lbarray, i64 0, i64 %idxprom, !dbg !12589
  %9 = load %struct.ListBase*, %struct.ListBase** %arrayidx, align 8, !dbg !12589
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %9, i32 0, i32 0, !dbg !12590
  %10 = load i8*, i8** %first, align 8, !dbg !12590
  %11 = bitcast i8* %10 to %struct.ID*, !dbg !12589
  store %struct.ID* %11, %struct.ID** %id, align 8, !dbg !12591
  br label %for.cond5, !dbg !12592

for.cond5:                                        ; preds = %for.inc, %while.body
  %12 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !12593
  %tobool6 = icmp ne %struct.ID* %12, null, !dbg !12595
  br i1 %tobool6, label %for.body7, label %for.end, !dbg !12595

for.body7:                                        ; preds = %for.cond5
  %13 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !12596
  %us = getelementptr inbounds %struct.ID, %struct.ID* %13, i32 0, i32 6, !dbg !12599
  %14 = load i32, i32* %us, align 4, !dbg !12599
  %cmp = icmp sgt i32 %14, 0, !dbg !12600
  br i1 %cmp, label %land.lhs.true8, label %if.end, !dbg !12601

land.lhs.true8:                                   ; preds = %for.body7
  %15 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !12602
  %flag = getelementptr inbounds %struct.ID, %struct.ID* %15, i32 0, i32 5, !dbg !12603
  %16 = load i16, i16* %flag, align 2, !dbg !12603
  %conv = sext i16 %16 to i32, !dbg !12602
  %and = and i32 %conv, 1, !dbg !12604
  %tobool9 = icmp ne i32 %and, 0, !dbg !12604
  br i1 %tobool9, label %if.then10, label %if.end, !dbg !12605

if.then10:                                        ; preds = %land.lhs.true8
  store i8 1, i8* %found_one, align 1, !dbg !12606
  br label %for.end, !dbg !12608

if.end:                                           ; preds = %land.lhs.true8, %for.body7
  br label %for.inc, !dbg !12609

for.inc:                                          ; preds = %if.end
  %17 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !12610
  %next = getelementptr inbounds %struct.ID, %struct.ID* %17, i32 0, i32 0, !dbg !12611
  %18 = load i8*, i8** %next, align 8, !dbg !12611
  %19 = bitcast i8* %18 to %struct.ID*, !dbg !12610
  store %struct.ID* %19, %struct.ID** %id, align 8, !dbg !12612
  br label %for.cond5, !dbg !12613, !llvm.loop !12614

for.end:                                          ; preds = %if.then10, %for.cond5
  %20 = load i8, i8* %found_one, align 1, !dbg !12616
  %tobool11 = icmp ne i8 %20, 0, !dbg !12616
  br i1 %tobool11, label %if.then12, label %if.end13, !dbg !12618

if.then12:                                        ; preds = %for.end
  br label %while.end, !dbg !12619

if.end13:                                         ; preds = %for.end
  br label %while.cond, !dbg !12584, !llvm.loop !12620

while.end:                                        ; preds = %if.then12, %while.cond
  br label %if.end14

if.end14:                                         ; preds = %while.end, %if.then
  %21 = load i8, i8* %found_one, align 1, !dbg !12622
  %tobool15 = icmp ne i8 %21, 0, !dbg !12622
  br i1 %tobool15, label %if.then16, label %if.end56, !dbg !12624

if.then16:                                        ; preds = %if.end14
  %22 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !12625
  %23 = load %struct.Main*, %struct.Main** %main.addr, align 8, !dbg !12627
  %curlib17 = getelementptr inbounds %struct.Main, %struct.Main* %23, i32 0, i32 10, !dbg !12628
  %24 = load %struct.Library*, %struct.Library** %curlib17, align 8, !dbg !12628
  %25 = bitcast %struct.Library* %24 to i8*, !dbg !12627
  call void @writestruct(%struct.WriteData* %22, i32 18764, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.291, i64 0, i64 0), i32 1, i8* %25), !dbg !12629
  %26 = load %struct.Main*, %struct.Main** %main.addr, align 8, !dbg !12630
  %curlib18 = getelementptr inbounds %struct.Main, %struct.Main* %26, i32 0, i32 10, !dbg !12632
  %27 = load %struct.Library*, %struct.Library** %curlib18, align 8, !dbg !12632
  %packedfile19 = getelementptr inbounds %struct.Library, %struct.Library* %27, i32 0, i32 6, !dbg !12633
  %28 = load %struct.PackedFile*, %struct.PackedFile** %packedfile19, align 8, !dbg !12633
  %tobool20 = icmp ne %struct.PackedFile* %28, null, !dbg !12630
  br i1 %tobool20, label %if.then21, label %if.end31, !dbg !12634

if.then21:                                        ; preds = %if.then16
  call void @llvm.dbg.declare(metadata %struct.PackedFile** %pf, metadata !12635, metadata !DIExpression()), !dbg !12637
  %29 = load %struct.Main*, %struct.Main** %main.addr, align 8, !dbg !12638
  %curlib22 = getelementptr inbounds %struct.Main, %struct.Main* %29, i32 0, i32 10, !dbg !12639
  %30 = load %struct.Library*, %struct.Library** %curlib22, align 8, !dbg !12639
  %packedfile23 = getelementptr inbounds %struct.Library, %struct.Library* %30, i32 0, i32 6, !dbg !12640
  %31 = load %struct.PackedFile*, %struct.PackedFile** %packedfile23, align 8, !dbg !12640
  store %struct.PackedFile* %31, %struct.PackedFile** %pf, align 8, !dbg !12637
  %32 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !12641
  %33 = load %struct.PackedFile*, %struct.PackedFile** %pf, align 8, !dbg !12642
  %34 = bitcast %struct.PackedFile* %33 to i8*, !dbg !12642
  call void @writestruct(%struct.WriteData* %32, i32 1096040772, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.130, i64 0, i64 0), i32 1, i8* %34), !dbg !12643
  %35 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !12644
  %36 = load %struct.PackedFile*, %struct.PackedFile** %pf, align 8, !dbg !12645
  %size = getelementptr inbounds %struct.PackedFile, %struct.PackedFile* %36, i32 0, i32 0, !dbg !12646
  %37 = load i32, i32* %size, align 8, !dbg !12646
  %38 = load %struct.PackedFile*, %struct.PackedFile** %pf, align 8, !dbg !12647
  %data = getelementptr inbounds %struct.PackedFile, %struct.PackedFile* %38, i32 0, i32 2, !dbg !12648
  %39 = load i8*, i8** %data, align 8, !dbg !12648
  call void @writedata(%struct.WriteData* %35, i32 1096040772, i32 %37, i8* %39), !dbg !12649
  %40 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !12650
  %current = getelementptr inbounds %struct.WriteData, %struct.WriteData* %40, i32 0, i32 4, !dbg !12652
  %41 = load %struct.MemFile*, %struct.MemFile** %current, align 8, !dbg !12652
  %cmp24 = icmp eq %struct.MemFile* %41, null, !dbg !12653
  br i1 %cmp24, label %if.then26, label %if.end30, !dbg !12654

if.then26:                                        ; preds = %if.then21
  %42 = load %struct.Main*, %struct.Main** %main.addr, align 8, !dbg !12655
  %curlib27 = getelementptr inbounds %struct.Main, %struct.Main* %42, i32 0, i32 10, !dbg !12656
  %43 = load %struct.Library*, %struct.Library** %curlib27, align 8, !dbg !12656
  %name = getelementptr inbounds %struct.Library, %struct.Library* %43, i32 0, i32 3, !dbg !12657
  %arraydecay28 = getelementptr inbounds [1024 x i8], [1024 x i8]* %name, i64 0, i64 0, !dbg !12655
  %call29 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.292, i64 0, i64 0), i8* %arraydecay28), !dbg !12658
  br label %if.end30, !dbg !12658

if.end30:                                         ; preds = %if.then26, %if.then21
  br label %if.end31, !dbg !12659

if.end31:                                         ; preds = %if.end30, %if.then16
  br label %while.cond32, !dbg !12660

while.cond32:                                     ; preds = %for.end54, %if.end31
  %44 = load i32, i32* %a, align 4, !dbg !12661
  %dec33 = add nsw i32 %44, -1, !dbg !12661
  store i32 %dec33, i32* %a, align 4, !dbg !12661
  %tobool34 = icmp ne i32 %44, 0, !dbg !12660
  br i1 %tobool34, label %while.body35, label %while.end55, !dbg !12660

while.body35:                                     ; preds = %while.cond32
  %45 = load i32, i32* %a, align 4, !dbg !12662
  %idxprom36 = sext i32 %45 to i64, !dbg !12665
  %arrayidx37 = getelementptr inbounds [35 x %struct.ListBase*], [35 x %struct.ListBase*]* %lbarray, i64 0, i64 %idxprom36, !dbg !12665
  %46 = load %struct.ListBase*, %struct.ListBase** %arrayidx37, align 8, !dbg !12665
  %first38 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %46, i32 0, i32 0, !dbg !12666
  %47 = load i8*, i8** %first38, align 8, !dbg !12666
  %48 = bitcast i8* %47 to %struct.ID*, !dbg !12665
  store %struct.ID* %48, %struct.ID** %id, align 8, !dbg !12667
  br label %for.cond39, !dbg !12668

for.cond39:                                       ; preds = %for.inc52, %while.body35
  %49 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !12669
  %tobool40 = icmp ne %struct.ID* %49, null, !dbg !12671
  br i1 %tobool40, label %for.body41, label %for.end54, !dbg !12671

for.body41:                                       ; preds = %for.cond39
  %50 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !12672
  %us42 = getelementptr inbounds %struct.ID, %struct.ID* %50, i32 0, i32 6, !dbg !12675
  %51 = load i32, i32* %us42, align 4, !dbg !12675
  %cmp43 = icmp sgt i32 %51, 0, !dbg !12676
  br i1 %cmp43, label %land.lhs.true45, label %if.end51, !dbg !12677

land.lhs.true45:                                  ; preds = %for.body41
  %52 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !12678
  %flag46 = getelementptr inbounds %struct.ID, %struct.ID* %52, i32 0, i32 5, !dbg !12679
  %53 = load i16, i16* %flag46, align 2, !dbg !12679
  %conv47 = sext i16 %53 to i32, !dbg !12678
  %and48 = and i32 %conv47, 1, !dbg !12680
  %tobool49 = icmp ne i32 %and48, 0, !dbg !12680
  br i1 %tobool49, label %if.then50, label %if.end51, !dbg !12681

if.then50:                                        ; preds = %land.lhs.true45
  %54 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !12682
  %55 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !12684
  %56 = bitcast %struct.ID* %55 to i8*, !dbg !12684
  call void @writestruct(%struct.WriteData* %54, i32 17481, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.293, i64 0, i64 0), i32 1, i8* %56), !dbg !12685
  br label %if.end51, !dbg !12686

if.end51:                                         ; preds = %if.then50, %land.lhs.true45, %for.body41
  br label %for.inc52, !dbg !12687

for.inc52:                                        ; preds = %if.end51
  %57 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !12688
  %next53 = getelementptr inbounds %struct.ID, %struct.ID* %57, i32 0, i32 0, !dbg !12689
  %58 = load i8*, i8** %next53, align 8, !dbg !12689
  %59 = bitcast i8* %58 to %struct.ID*, !dbg !12688
  store %struct.ID* %59, %struct.ID** %id, align 8, !dbg !12690
  br label %for.cond39, !dbg !12691, !llvm.loop !12692

for.end54:                                        ; preds = %for.cond39
  br label %while.cond32, !dbg !12660, !llvm.loop !12694

while.end55:                                      ; preds = %while.cond32
  br label %if.end56, !dbg !12696

if.end56:                                         ; preds = %while.end55, %if.end14
  br label %for.inc57, !dbg !12697

for.inc57:                                        ; preds = %if.end56
  %60 = load %struct.Main*, %struct.Main** %main.addr, align 8, !dbg !12698
  %next58 = getelementptr inbounds %struct.Main, %struct.Main* %60, i32 0, i32 0, !dbg !12699
  %61 = load %struct.Main*, %struct.Main** %next58, align 8, !dbg !12699
  store %struct.Main* %61, %struct.Main** %main.addr, align 8, !dbg !12700
  br label %for.cond, !dbg !12701, !llvm.loop !12702

for.end59:                                        ; preds = %for.cond
  ret void, !dbg !12704
}

; Function Attrs: noinline nounwind uwtable
define internal void @write_userdef(%struct.WriteData* %wd) #0 !dbg !12705 {
entry:
  %wd.addr = alloca %struct.WriteData*, align 8
  %btheme = alloca %struct.bTheme*, align 8
  %keymap = alloca %struct.wmKeyMap*, align 8
  %kmi = alloca %struct.wmKeyMapItem*, align 8
  %kmdi = alloca %struct.wmKeyMapDiffItem*, align 8
  %bext = alloca %struct.bAddon*, align 8
  %path_cmp = alloca %struct.bPathCompare*, align 8
  %style = alloca %struct.uiStyle*, align 8
  store %struct.WriteData* %wd, %struct.WriteData** %wd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WriteData** %wd.addr, metadata !12708, metadata !DIExpression()), !dbg !12709
  call void @llvm.dbg.declare(metadata %struct.bTheme** %btheme, metadata !12710, metadata !DIExpression()), !dbg !12993
  call void @llvm.dbg.declare(metadata %struct.wmKeyMap** %keymap, metadata !12994, metadata !DIExpression()), !dbg !13014
  call void @llvm.dbg.declare(metadata %struct.wmKeyMapItem** %kmi, metadata !13015, metadata !DIExpression()), !dbg !13039
  call void @llvm.dbg.declare(metadata %struct.wmKeyMapDiffItem** %kmdi, metadata !13040, metadata !DIExpression()), !dbg !13050
  call void @llvm.dbg.declare(metadata %struct.bAddon** %bext, metadata !13051, metadata !DIExpression()), !dbg !13061
  call void @llvm.dbg.declare(metadata %struct.bPathCompare** %path_cmp, metadata !13062, metadata !DIExpression()), !dbg !13073
  call void @llvm.dbg.declare(metadata %struct.uiStyle** %style, metadata !13074, metadata !DIExpression()), !dbg !13113
  %0 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !13114
  call void @writestruct(%struct.WriteData* %0, i32 1380275029, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.294, i64 0, i64 0), i32 1, i8* bitcast (%struct.UserDef* @U to i8*)), !dbg !13115
  %1 = load i8*, i8** getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 38, i32 0), align 8, !dbg !13116
  %2 = bitcast i8* %1 to %struct.bTheme*, !dbg !13118
  store %struct.bTheme* %2, %struct.bTheme** %btheme, align 8, !dbg !13119
  br label %for.cond, !dbg !13120

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.bTheme*, %struct.bTheme** %btheme, align 8, !dbg !13121
  %tobool = icmp ne %struct.bTheme* %3, null, !dbg !13123
  br i1 %tobool, label %for.body, label %for.end, !dbg !13123

for.body:                                         ; preds = %for.cond
  %4 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !13124
  %5 = load %struct.bTheme*, %struct.bTheme** %btheme, align 8, !dbg !13125
  %6 = bitcast %struct.bTheme* %5 to i8*, !dbg !13125
  call void @writestruct(%struct.WriteData* %4, i32 1096040772, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.295, i64 0, i64 0), i32 1, i8* %6), !dbg !13126
  br label %for.inc, !dbg !13126

for.inc:                                          ; preds = %for.body
  %7 = load %struct.bTheme*, %struct.bTheme** %btheme, align 8, !dbg !13127
  %next = getelementptr inbounds %struct.bTheme, %struct.bTheme* %7, i32 0, i32 0, !dbg !13128
  %8 = load %struct.bTheme*, %struct.bTheme** %next, align 8, !dbg !13128
  store %struct.bTheme* %8, %struct.bTheme** %btheme, align 8, !dbg !13129
  br label %for.cond, !dbg !13130, !llvm.loop !13131

for.end:                                          ; preds = %for.cond
  %9 = load i8*, i8** getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 42, i32 0), align 8, !dbg !13133
  %10 = bitcast i8* %9 to %struct.wmKeyMap*, !dbg !13135
  store %struct.wmKeyMap* %10, %struct.wmKeyMap** %keymap, align 8, !dbg !13136
  br label %for.cond1, !dbg !13137

for.cond1:                                        ; preds = %for.inc23, %for.end
  %11 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !13138
  %tobool2 = icmp ne %struct.wmKeyMap* %11, null, !dbg !13140
  br i1 %tobool2, label %for.body3, label %for.end25, !dbg !13140

for.body3:                                        ; preds = %for.cond1
  %12 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !13141
  %13 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !13143
  %14 = bitcast %struct.wmKeyMap* %13 to i8*, !dbg !13143
  call void @writestruct(%struct.WriteData* %12, i32 1096040772, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.296, i64 0, i64 0), i32 1, i8* %14), !dbg !13144
  %15 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !13145
  %diff_items = getelementptr inbounds %struct.wmKeyMap, %struct.wmKeyMap* %15, i32 0, i32 3, !dbg !13147
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %diff_items, i32 0, i32 0, !dbg !13148
  %16 = load i8*, i8** %first, align 8, !dbg !13148
  %17 = bitcast i8* %16 to %struct.wmKeyMapDiffItem*, !dbg !13145
  store %struct.wmKeyMapDiffItem* %17, %struct.wmKeyMapDiffItem** %kmdi, align 8, !dbg !13149
  br label %for.cond4, !dbg !13150

for.cond4:                                        ; preds = %for.inc13, %for.body3
  %18 = load %struct.wmKeyMapDiffItem*, %struct.wmKeyMapDiffItem** %kmdi, align 8, !dbg !13151
  %tobool5 = icmp ne %struct.wmKeyMapDiffItem* %18, null, !dbg !13153
  br i1 %tobool5, label %for.body6, label %for.end15, !dbg !13153

for.body6:                                        ; preds = %for.cond4
  %19 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !13154
  %20 = load %struct.wmKeyMapDiffItem*, %struct.wmKeyMapDiffItem** %kmdi, align 8, !dbg !13156
  %21 = bitcast %struct.wmKeyMapDiffItem* %20 to i8*, !dbg !13156
  call void @writestruct(%struct.WriteData* %19, i32 1096040772, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.297, i64 0, i64 0), i32 1, i8* %21), !dbg !13157
  %22 = load %struct.wmKeyMapDiffItem*, %struct.wmKeyMapDiffItem** %kmdi, align 8, !dbg !13158
  %remove_item = getelementptr inbounds %struct.wmKeyMapDiffItem, %struct.wmKeyMapDiffItem* %22, i32 0, i32 2, !dbg !13160
  %23 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %remove_item, align 8, !dbg !13160
  %tobool7 = icmp ne %struct.wmKeyMapItem* %23, null, !dbg !13158
  br i1 %tobool7, label %if.then, label %if.end, !dbg !13161

if.then:                                          ; preds = %for.body6
  %24 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !13162
  %25 = load %struct.wmKeyMapDiffItem*, %struct.wmKeyMapDiffItem** %kmdi, align 8, !dbg !13163
  %remove_item8 = getelementptr inbounds %struct.wmKeyMapDiffItem, %struct.wmKeyMapDiffItem* %25, i32 0, i32 2, !dbg !13164
  %26 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %remove_item8, align 8, !dbg !13164
  call void @write_keymapitem(%struct.WriteData* %24, %struct.wmKeyMapItem* %26), !dbg !13165
  br label %if.end, !dbg !13165

if.end:                                           ; preds = %if.then, %for.body6
  %27 = load %struct.wmKeyMapDiffItem*, %struct.wmKeyMapDiffItem** %kmdi, align 8, !dbg !13166
  %add_item = getelementptr inbounds %struct.wmKeyMapDiffItem, %struct.wmKeyMapDiffItem* %27, i32 0, i32 3, !dbg !13168
  %28 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %add_item, align 8, !dbg !13168
  %tobool9 = icmp ne %struct.wmKeyMapItem* %28, null, !dbg !13166
  br i1 %tobool9, label %if.then10, label %if.end12, !dbg !13169

if.then10:                                        ; preds = %if.end
  %29 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !13170
  %30 = load %struct.wmKeyMapDiffItem*, %struct.wmKeyMapDiffItem** %kmdi, align 8, !dbg !13171
  %add_item11 = getelementptr inbounds %struct.wmKeyMapDiffItem, %struct.wmKeyMapDiffItem* %30, i32 0, i32 3, !dbg !13172
  %31 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %add_item11, align 8, !dbg !13172
  call void @write_keymapitem(%struct.WriteData* %29, %struct.wmKeyMapItem* %31), !dbg !13173
  br label %if.end12, !dbg !13173

if.end12:                                         ; preds = %if.then10, %if.end
  br label %for.inc13, !dbg !13174

for.inc13:                                        ; preds = %if.end12
  %32 = load %struct.wmKeyMapDiffItem*, %struct.wmKeyMapDiffItem** %kmdi, align 8, !dbg !13175
  %next14 = getelementptr inbounds %struct.wmKeyMapDiffItem, %struct.wmKeyMapDiffItem* %32, i32 0, i32 0, !dbg !13176
  %33 = load %struct.wmKeyMapDiffItem*, %struct.wmKeyMapDiffItem** %next14, align 8, !dbg !13176
  store %struct.wmKeyMapDiffItem* %33, %struct.wmKeyMapDiffItem** %kmdi, align 8, !dbg !13177
  br label %for.cond4, !dbg !13178, !llvm.loop !13179

for.end15:                                        ; preds = %for.cond4
  %34 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !13181
  %items = getelementptr inbounds %struct.wmKeyMap, %struct.wmKeyMap* %34, i32 0, i32 2, !dbg !13183
  %first16 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %items, i32 0, i32 0, !dbg !13184
  %35 = load i8*, i8** %first16, align 8, !dbg !13184
  %36 = bitcast i8* %35 to %struct.wmKeyMapItem*, !dbg !13181
  store %struct.wmKeyMapItem* %36, %struct.wmKeyMapItem** %kmi, align 8, !dbg !13185
  br label %for.cond17, !dbg !13186

for.cond17:                                       ; preds = %for.inc20, %for.end15
  %37 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !13187
  %tobool18 = icmp ne %struct.wmKeyMapItem* %37, null, !dbg !13189
  br i1 %tobool18, label %for.body19, label %for.end22, !dbg !13189

for.body19:                                       ; preds = %for.cond17
  %38 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !13190
  %39 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !13191
  call void @write_keymapitem(%struct.WriteData* %38, %struct.wmKeyMapItem* %39), !dbg !13192
  br label %for.inc20, !dbg !13192

for.inc20:                                        ; preds = %for.body19
  %40 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !13193
  %next21 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %40, i32 0, i32 0, !dbg !13194
  %41 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %next21, align 8, !dbg !13194
  store %struct.wmKeyMapItem* %41, %struct.wmKeyMapItem** %kmi, align 8, !dbg !13195
  br label %for.cond17, !dbg !13196, !llvm.loop !13197

for.end22:                                        ; preds = %for.cond17
  br label %for.inc23, !dbg !13199

for.inc23:                                        ; preds = %for.end22
  %42 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !13200
  %next24 = getelementptr inbounds %struct.wmKeyMap, %struct.wmKeyMap* %42, i32 0, i32 0, !dbg !13201
  %43 = load %struct.wmKeyMap*, %struct.wmKeyMap** %next24, align 8, !dbg !13201
  store %struct.wmKeyMap* %43, %struct.wmKeyMap** %keymap, align 8, !dbg !13202
  br label %for.cond1, !dbg !13203, !llvm.loop !13204

for.end25:                                        ; preds = %for.cond1
  %44 = load i8*, i8** getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 43, i32 0), align 8, !dbg !13206
  %45 = bitcast i8* %44 to %struct.bAddon*, !dbg !13208
  store %struct.bAddon* %45, %struct.bAddon** %bext, align 8, !dbg !13209
  br label %for.cond26, !dbg !13210

for.cond26:                                       ; preds = %for.inc33, %for.end25
  %46 = load %struct.bAddon*, %struct.bAddon** %bext, align 8, !dbg !13211
  %tobool27 = icmp ne %struct.bAddon* %46, null, !dbg !13213
  br i1 %tobool27, label %for.body28, label %for.end35, !dbg !13213

for.body28:                                       ; preds = %for.cond26
  %47 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !13214
  %48 = load %struct.bAddon*, %struct.bAddon** %bext, align 8, !dbg !13216
  %49 = bitcast %struct.bAddon* %48 to i8*, !dbg !13216
  call void @writestruct(%struct.WriteData* %47, i32 1096040772, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.298, i64 0, i64 0), i32 1, i8* %49), !dbg !13217
  %50 = load %struct.bAddon*, %struct.bAddon** %bext, align 8, !dbg !13218
  %prop = getelementptr inbounds %struct.bAddon, %struct.bAddon* %50, i32 0, i32 3, !dbg !13220
  %51 = load %struct.IDProperty*, %struct.IDProperty** %prop, align 8, !dbg !13220
  %tobool29 = icmp ne %struct.IDProperty* %51, null, !dbg !13218
  br i1 %tobool29, label %if.then30, label %if.end32, !dbg !13221

if.then30:                                        ; preds = %for.body28
  %52 = load %struct.bAddon*, %struct.bAddon** %bext, align 8, !dbg !13222
  %prop31 = getelementptr inbounds %struct.bAddon, %struct.bAddon* %52, i32 0, i32 3, !dbg !13224
  %53 = load %struct.IDProperty*, %struct.IDProperty** %prop31, align 8, !dbg !13224
  %54 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !13225
  %55 = bitcast %struct.WriteData* %54 to i8*, !dbg !13225
  call void @IDP_WriteProperty(%struct.IDProperty* %53, i8* %55), !dbg !13226
  br label %if.end32, !dbg !13227

if.end32:                                         ; preds = %if.then30, %for.body28
  br label %for.inc33, !dbg !13228

for.inc33:                                        ; preds = %if.end32
  %56 = load %struct.bAddon*, %struct.bAddon** %bext, align 8, !dbg !13229
  %next34 = getelementptr inbounds %struct.bAddon, %struct.bAddon* %56, i32 0, i32 0, !dbg !13230
  %57 = load %struct.bAddon*, %struct.bAddon** %next34, align 8, !dbg !13230
  store %struct.bAddon* %57, %struct.bAddon** %bext, align 8, !dbg !13231
  br label %for.cond26, !dbg !13232, !llvm.loop !13233

for.end35:                                        ; preds = %for.cond26
  %58 = load i8*, i8** getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 44, i32 0), align 8, !dbg !13235
  %59 = bitcast i8* %58 to %struct.bPathCompare*, !dbg !13237
  store %struct.bPathCompare* %59, %struct.bPathCompare** %path_cmp, align 8, !dbg !13238
  br label %for.cond36, !dbg !13239

for.cond36:                                       ; preds = %for.inc39, %for.end35
  %60 = load %struct.bPathCompare*, %struct.bPathCompare** %path_cmp, align 8, !dbg !13240
  %tobool37 = icmp ne %struct.bPathCompare* %60, null, !dbg !13242
  br i1 %tobool37, label %for.body38, label %for.end41, !dbg !13242

for.body38:                                       ; preds = %for.cond36
  %61 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !13243
  %62 = load %struct.bPathCompare*, %struct.bPathCompare** %path_cmp, align 8, !dbg !13245
  %63 = bitcast %struct.bPathCompare* %62 to i8*, !dbg !13245
  call void @writestruct(%struct.WriteData* %61, i32 1096040772, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.299, i64 0, i64 0), i32 1, i8* %63), !dbg !13246
  br label %for.inc39, !dbg !13247

for.inc39:                                        ; preds = %for.body38
  %64 = load %struct.bPathCompare*, %struct.bPathCompare** %path_cmp, align 8, !dbg !13248
  %next40 = getelementptr inbounds %struct.bPathCompare, %struct.bPathCompare* %64, i32 0, i32 0, !dbg !13249
  %65 = load %struct.bPathCompare*, %struct.bPathCompare** %next40, align 8, !dbg !13249
  store %struct.bPathCompare* %65, %struct.bPathCompare** %path_cmp, align 8, !dbg !13250
  br label %for.cond36, !dbg !13251, !llvm.loop !13252

for.end41:                                        ; preds = %for.cond36
  %66 = load i8*, i8** getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 40, i32 0), align 8, !dbg !13254
  %67 = bitcast i8* %66 to %struct.uiStyle*, !dbg !13256
  store %struct.uiStyle* %67, %struct.uiStyle** %style, align 8, !dbg !13257
  br label %for.cond42, !dbg !13258

for.cond42:                                       ; preds = %for.inc45, %for.end41
  %68 = load %struct.uiStyle*, %struct.uiStyle** %style, align 8, !dbg !13259
  %tobool43 = icmp ne %struct.uiStyle* %68, null, !dbg !13261
  br i1 %tobool43, label %for.body44, label %for.end47, !dbg !13261

for.body44:                                       ; preds = %for.cond42
  %69 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !13262
  %70 = load %struct.uiStyle*, %struct.uiStyle** %style, align 8, !dbg !13264
  %71 = bitcast %struct.uiStyle* %70 to i8*, !dbg !13264
  call void @writestruct(%struct.WriteData* %69, i32 1096040772, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.300, i64 0, i64 0), i32 1, i8* %71), !dbg !13265
  br label %for.inc45, !dbg !13266

for.inc45:                                        ; preds = %for.body44
  %72 = load %struct.uiStyle*, %struct.uiStyle** %style, align 8, !dbg !13267
  %next46 = getelementptr inbounds %struct.uiStyle, %struct.uiStyle* %72, i32 0, i32 0, !dbg !13268
  %73 = load %struct.uiStyle*, %struct.uiStyle** %next46, align 8, !dbg !13268
  store %struct.uiStyle* %73, %struct.uiStyle** %style, align 8, !dbg !13269
  br label %for.cond42, !dbg !13270, !llvm.loop !13271

for.end47:                                        ; preds = %for.cond42
  ret void, !dbg !13273
}

; Function Attrs: noinline nounwind uwtable
define internal void @customnodes_free_deprecated_data(%struct.Main* %mainvar) #0 !dbg !13274 {
entry:
  %mainvar.addr = alloca %struct.Main*, align 8
  %_nstore = alloca %struct.NodeTreeIterStore, align 8
  %ntree = alloca %struct.bNodeTree*, align 8
  %id = alloca %struct.ID*, align 8
  %link = alloca %struct.bNodeLink*, align 8
  %next_link = alloca %struct.bNodeLink*, align 8
  store %struct.Main* %mainvar, %struct.Main** %mainvar.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Main** %mainvar.addr, metadata !13275, metadata !DIExpression()), !dbg !13276
  call void @llvm.dbg.declare(metadata %struct.NodeTreeIterStore* %_nstore, metadata !13277, metadata !DIExpression()), !dbg !13279
  call void @llvm.dbg.declare(metadata %struct.bNodeTree** %ntree, metadata !13280, metadata !DIExpression()), !dbg !13279
  call void @llvm.dbg.declare(metadata %struct.ID** %id, metadata !13281, metadata !DIExpression()), !dbg !13279
  %0 = load %struct.Main*, %struct.Main** %mainvar.addr, align 8, !dbg !13279
  call void @BKE_node_tree_iter_init(%struct.NodeTreeIterStore* %_nstore, %struct.Main* %0), !dbg !13279
  br label %while.cond, !dbg !13279

while.cond:                                       ; preds = %if.end8, %entry
  %call = call zeroext i8 @BKE_node_tree_iter_step(%struct.NodeTreeIterStore* %_nstore, %struct.bNodeTree** %ntree, %struct.ID** %id), !dbg !13279
  %conv = zext i8 %call to i32, !dbg !13279
  %cmp = icmp eq i32 %conv, 1, !dbg !13279
  br i1 %cmp, label %while.body, label %while.end, !dbg !13279

while.body:                                       ; preds = %while.cond
  %1 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree, align 8, !dbg !13282
  %tobool = icmp ne %struct.bNodeTree* %1, null, !dbg !13282
  br i1 %tobool, label %if.then, label %if.end8, !dbg !13285

if.then:                                          ; preds = %while.body
  call void @llvm.dbg.declare(metadata %struct.bNodeLink** %link, metadata !13286, metadata !DIExpression()), !dbg !13289
  call void @llvm.dbg.declare(metadata %struct.bNodeLink** %next_link, metadata !13290, metadata !DIExpression()), !dbg !13291
  %2 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree, align 8, !dbg !13292
  %links = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %2, i32 0, i32 8, !dbg !13294
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %links, i32 0, i32 0, !dbg !13295
  %3 = load i8*, i8** %first, align 8, !dbg !13295
  %4 = bitcast i8* %3 to %struct.bNodeLink*, !dbg !13292
  store %struct.bNodeLink* %4, %struct.bNodeLink** %link, align 8, !dbg !13296
  br label %for.cond, !dbg !13297

for.cond:                                         ; preds = %for.inc, %if.then
  %5 = load %struct.bNodeLink*, %struct.bNodeLink** %link, align 8, !dbg !13298
  %tobool2 = icmp ne %struct.bNodeLink* %5, null, !dbg !13300
  br i1 %tobool2, label %for.body, label %for.end, !dbg !13300

for.body:                                         ; preds = %for.cond
  %6 = load %struct.bNodeLink*, %struct.bNodeLink** %link, align 8, !dbg !13301
  %next = getelementptr inbounds %struct.bNodeLink, %struct.bNodeLink* %6, i32 0, i32 0, !dbg !13303
  %7 = load %struct.bNodeLink*, %struct.bNodeLink** %next, align 8, !dbg !13303
  store %struct.bNodeLink* %7, %struct.bNodeLink** %next_link, align 8, !dbg !13304
  %8 = load %struct.bNodeLink*, %struct.bNodeLink** %link, align 8, !dbg !13305
  %fromnode = getelementptr inbounds %struct.bNodeLink, %struct.bNodeLink* %8, i32 0, i32 2, !dbg !13307
  %9 = load %struct.bNode*, %struct.bNode** %fromnode, align 8, !dbg !13307
  %cmp3 = icmp eq %struct.bNode* %9, null, !dbg !13308
  br i1 %cmp3, label %if.then7, label %lor.lhs.false, !dbg !13309

lor.lhs.false:                                    ; preds = %for.body
  %10 = load %struct.bNodeLink*, %struct.bNodeLink** %link, align 8, !dbg !13310
  %tonode = getelementptr inbounds %struct.bNodeLink, %struct.bNodeLink* %10, i32 0, i32 3, !dbg !13311
  %11 = load %struct.bNode*, %struct.bNode** %tonode, align 8, !dbg !13311
  %cmp5 = icmp eq %struct.bNode* %11, null, !dbg !13312
  br i1 %cmp5, label %if.then7, label %if.end, !dbg !13313

if.then7:                                         ; preds = %lor.lhs.false, %for.body
  %12 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree, align 8, !dbg !13314
  %13 = load %struct.bNodeLink*, %struct.bNodeLink** %link, align 8, !dbg !13315
  call void @nodeRemLink(%struct.bNodeTree* %12, %struct.bNodeLink* %13), !dbg !13316
  br label %if.end, !dbg !13316

if.end:                                           ; preds = %if.then7, %lor.lhs.false
  br label %for.inc, !dbg !13317

for.inc:                                          ; preds = %if.end
  %14 = load %struct.bNodeLink*, %struct.bNodeLink** %next_link, align 8, !dbg !13318
  store %struct.bNodeLink* %14, %struct.bNodeLink** %link, align 8, !dbg !13319
  br label %for.cond, !dbg !13320, !llvm.loop !13321

for.end:                                          ; preds = %for.cond
  br label %if.end8, !dbg !13323

if.end8:                                          ; preds = %for.end, %while.body
  br label %while.cond, !dbg !13279, !llvm.loop !13324

while.end:                                        ; preds = %while.cond
  ret void, !dbg !13326
}

declare dso_local void @blo_join_main(%struct.ListBase*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @endwrite(%struct.WriteData* %wd) #0 !dbg !13327 {
entry:
  %wd.addr = alloca %struct.WriteData*, align 8
  %err = alloca i32, align 4
  store %struct.WriteData* %wd, %struct.WriteData** %wd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WriteData** %wd.addr, metadata !13330, metadata !DIExpression()), !dbg !13331
  call void @llvm.dbg.declare(metadata i32* %err, metadata !13332, metadata !DIExpression()), !dbg !13333
  %0 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !13334
  %count = getelementptr inbounds %struct.WriteData, %struct.WriteData* %0, i32 0, i32 6, !dbg !13336
  %1 = load i32, i32* %count, align 4, !dbg !13336
  %tobool = icmp ne i32 %1, 0, !dbg !13334
  br i1 %tobool, label %if.then, label %if.end, !dbg !13337

if.then:                                          ; preds = %entry
  %2 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !13338
  %3 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !13340
  %buf = getelementptr inbounds %struct.WriteData, %struct.WriteData* %3, i32 0, i32 2, !dbg !13341
  %4 = load i8*, i8** %buf, align 8, !dbg !13341
  %5 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !13342
  %count1 = getelementptr inbounds %struct.WriteData, %struct.WriteData* %5, i32 0, i32 6, !dbg !13343
  %6 = load i32, i32* %count1, align 4, !dbg !13343
  call void @writedata_do_write(%struct.WriteData* %2, i8* %4, i32 %6), !dbg !13344
  %7 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !13345
  %count2 = getelementptr inbounds %struct.WriteData, %struct.WriteData* %7, i32 0, i32 6, !dbg !13346
  store i32 0, i32* %count2, align 4, !dbg !13347
  br label %if.end, !dbg !13348

if.end:                                           ; preds = %if.then, %entry
  %8 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !13349
  %error = getelementptr inbounds %struct.WriteData, %struct.WriteData* %8, i32 0, i32 7, !dbg !13350
  %9 = load i32, i32* %error, align 8, !dbg !13350
  store i32 %9, i32* %err, align 4, !dbg !13351
  %10 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !13352
  call void @writedata_free(%struct.WriteData* %10), !dbg !13353
  %11 = load i32, i32* %err, align 4, !dbg !13354
  ret i32 %11, !dbg !13355
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.WriteData* @writedata_new(%struct.WriteWrap* %ww) #0 !dbg !13356 {
entry:
  %retval = alloca %struct.WriteData*, align 8
  %ww.addr = alloca %struct.WriteWrap*, align 8
  %wd = alloca %struct.WriteData*, align 8
  %do_endian_swap = alloca i8, align 1
  store %struct.WriteWrap* %ww, %struct.WriteWrap** %ww.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WriteWrap** %ww.addr, metadata !13359, metadata !DIExpression()), !dbg !13360
  call void @llvm.dbg.declare(metadata %struct.WriteData** %wd, metadata !13361, metadata !DIExpression()), !dbg !13362
  %0 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !13363
  %call = call i8* %0(i64 72, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.8, i64 0, i64 0)), !dbg !13363
  %1 = bitcast i8* %call to %struct.WriteData*, !dbg !13363
  store %struct.WriteData* %1, %struct.WriteData** %wd, align 8, !dbg !13362
  %2 = load %struct.WriteData*, %struct.WriteData** %wd, align 8, !dbg !13364
  %cmp = icmp eq %struct.WriteData* %2, null, !dbg !13366
  br i1 %cmp, label %if.then, label %if.end, !dbg !13367

if.then:                                          ; preds = %entry
  store %struct.WriteData* null, %struct.WriteData** %retval, align 8, !dbg !13368
  br label %return, !dbg !13368

if.end:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %do_endian_swap, metadata !13369, metadata !DIExpression()), !dbg !13370
  store i8 0, i8* %do_endian_swap, align 1, !dbg !13370
  %3 = load i32, i32* @DNAlen, align 4, !dbg !13371
  %call1 = call %struct.SDNA* @DNA_sdna_from_data(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @DNAstr, i64 0, i64 0), i32 %3, i8 zeroext 0), !dbg !13372
  %4 = load %struct.WriteData*, %struct.WriteData** %wd, align 8, !dbg !13373
  %sdna = getelementptr inbounds %struct.WriteData, %struct.WriteData* %4, i32 0, i32 0, !dbg !13374
  store %struct.SDNA* %call1, %struct.SDNA** %sdna, align 8, !dbg !13375
  %5 = load %struct.WriteWrap*, %struct.WriteWrap** %ww.addr, align 8, !dbg !13376
  %6 = load %struct.WriteData*, %struct.WriteData** %wd, align 8, !dbg !13377
  %ww2 = getelementptr inbounds %struct.WriteData, %struct.WriteData* %6, i32 0, i32 9, !dbg !13378
  store %struct.WriteWrap* %5, %struct.WriteWrap** %ww2, align 8, !dbg !13379
  %7 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !13380
  %call3 = call i8* %7(i64 100000, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9, i64 0, i64 0)), !dbg !13380
  %8 = load %struct.WriteData*, %struct.WriteData** %wd, align 8, !dbg !13381
  %buf = getelementptr inbounds %struct.WriteData, %struct.WriteData* %8, i32 0, i32 2, !dbg !13382
  store i8* %call3, i8** %buf, align 8, !dbg !13383
  %9 = load %struct.WriteData*, %struct.WriteData** %wd, align 8, !dbg !13384
  store %struct.WriteData* %9, %struct.WriteData** %retval, align 8, !dbg !13385
  br label %return, !dbg !13385

return:                                           ; preds = %if.end, %if.then
  %10 = load %struct.WriteData*, %struct.WriteData** %retval, align 8, !dbg !13386
  ret %struct.WriteData* %10, !dbg !13386
}

declare dso_local %struct.SDNA* @DNA_sdna_from_data(i8*, i32, i8 zeroext) #2

declare dso_local void @BKE_node_tree_iter_init(%struct.NodeTreeIterStore*, %struct.Main*) #2

declare dso_local zeroext i8 @BKE_node_tree_iter_step(%struct.NodeTreeIterStore*, %struct.bNodeTree**, %struct.ID**) #2

declare dso_local %struct.bNodeSocket* @ntreeFindSocketInterface(%struct.bNodeTree*, i32, i8*) #2

declare dso_local void @BLI_addtail(%struct.ListBase*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @current_screen_compat(%struct.Main* %mainvar, %struct.bScreen** %screen) #0 !dbg !13387 {
entry:
  %mainvar.addr = alloca %struct.Main*, align 8
  %screen.addr = alloca %struct.bScreen**, align 8
  %wm = alloca %struct.wmWindowManager*, align 8
  %window = alloca %struct.wmWindow*, align 8
  store %struct.Main* %mainvar, %struct.Main** %mainvar.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Main** %mainvar.addr, metadata !13391, metadata !DIExpression()), !dbg !13392
  store %struct.bScreen** %screen, %struct.bScreen*** %screen.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bScreen*** %screen.addr, metadata !13393, metadata !DIExpression()), !dbg !13394
  call void @llvm.dbg.declare(metadata %struct.wmWindowManager** %wm, metadata !13395, metadata !DIExpression()), !dbg !13396
  call void @llvm.dbg.declare(metadata %struct.wmWindow** %window, metadata !13397, metadata !DIExpression()), !dbg !13398
  %0 = load %struct.Main*, %struct.Main** %mainvar.addr, align 8, !dbg !13399
  %wm1 = getelementptr inbounds %struct.Main, %struct.Main* %0, i32 0, i32 40, !dbg !13400
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %wm1, i32 0, i32 0, !dbg !13401
  %1 = load i8*, i8** %first, align 8, !dbg !13401
  %2 = bitcast i8* %1 to %struct.wmWindowManager*, !dbg !13399
  store %struct.wmWindowManager* %2, %struct.wmWindowManager** %wm, align 8, !dbg !13402
  %3 = load %struct.wmWindowManager*, %struct.wmWindowManager** %wm, align 8, !dbg !13403
  %tobool = icmp ne %struct.wmWindowManager* %3, null, !dbg !13404
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !13404

cond.true:                                        ; preds = %entry
  %4 = load %struct.wmWindowManager*, %struct.wmWindowManager** %wm, align 8, !dbg !13405
  %windows = getelementptr inbounds %struct.wmWindowManager, %struct.wmWindowManager* %4, i32 0, i32 3, !dbg !13406
  %first2 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %windows, i32 0, i32 0, !dbg !13407
  %5 = load i8*, i8** %first2, align 8, !dbg !13407
  br label %cond.end, !dbg !13404

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !13404

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %5, %cond.true ], [ null, %cond.false ], !dbg !13404
  %6 = bitcast i8* %cond to %struct.wmWindow*, !dbg !13404
  store %struct.wmWindow* %6, %struct.wmWindow** %window, align 8, !dbg !13408
  %7 = load %struct.wmWindow*, %struct.wmWindow** %window, align 8, !dbg !13409
  %tobool3 = icmp ne %struct.wmWindow* %7, null, !dbg !13410
  br i1 %tobool3, label %cond.true4, label %cond.false6, !dbg !13410

cond.true4:                                       ; preds = %cond.end
  %8 = load %struct.wmWindow*, %struct.wmWindow** %window, align 8, !dbg !13411
  %screen5 = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %8, i32 0, i32 3, !dbg !13412
  %9 = load %struct.bScreen*, %struct.bScreen** %screen5, align 8, !dbg !13412
  br label %cond.end7, !dbg !13410

cond.false6:                                      ; preds = %cond.end
  br label %cond.end7, !dbg !13410

cond.end7:                                        ; preds = %cond.false6, %cond.true4
  %cond8 = phi %struct.bScreen* [ %9, %cond.true4 ], [ null, %cond.false6 ], !dbg !13410
  %10 = load %struct.bScreen**, %struct.bScreen*** %screen.addr, align 8, !dbg !13413
  store %struct.bScreen* %cond8, %struct.bScreen** %10, align 8, !dbg !13414
  ret void, !dbg !13415
}

declare dso_local i8* @BLI_strncpy(i8*, i8*, i64) #2

; Function Attrs: noinline nounwind uwtable
define internal void @write_region(%struct.WriteData* %wd, %struct.ARegion* %ar, i32 %spacetype) #0 !dbg !13416 {
entry:
  %wd.addr = alloca %struct.WriteData*, align 8
  %ar.addr = alloca %struct.ARegion*, align 8
  %spacetype.addr = alloca i32, align 4
  %rv3d = alloca %struct.RegionView3D*, align 8
  store %struct.WriteData* %wd, %struct.WriteData** %wd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WriteData** %wd.addr, metadata !13419, metadata !DIExpression()), !dbg !13420
  store %struct.ARegion* %ar, %struct.ARegion** %ar.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar.addr, metadata !13421, metadata !DIExpression()), !dbg !13422
  store i32 %spacetype, i32* %spacetype.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %spacetype.addr, metadata !13423, metadata !DIExpression()), !dbg !13424
  %0 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !13425
  %1 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !13426
  %2 = bitcast %struct.ARegion* %1 to i8*, !dbg !13426
  call void @writestruct(%struct.WriteData* %0, i32 1096040772, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.44, i64 0, i64 0), i32 1, i8* %2), !dbg !13427
  %3 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !13428
  %regiondata = getelementptr inbounds %struct.ARegion, %struct.ARegion* %3, i32 0, i32 30, !dbg !13430
  %4 = load i8*, i8** %regiondata, align 8, !dbg !13430
  %tobool = icmp ne i8* %4, null, !dbg !13428
  br i1 %tobool, label %if.then, label %if.end13, !dbg !13431

if.then:                                          ; preds = %entry
  %5 = load i32, i32* %spacetype.addr, align 4, !dbg !13432
  switch i32 %5, label %sw.default [
    i32 1, label %sw.bb
  ], !dbg !13434

sw.bb:                                            ; preds = %if.then
  %6 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !13435
  %regiontype = getelementptr inbounds %struct.ARegion, %struct.ARegion* %6, i32 0, i32 8, !dbg !13438
  %7 = load i16, i16* %regiontype, align 2, !dbg !13438
  %conv = sext i16 %7 to i32, !dbg !13435
  %cmp = icmp eq i32 %conv, 0, !dbg !13439
  br i1 %cmp, label %if.then2, label %if.else, !dbg !13440

if.then2:                                         ; preds = %sw.bb
  call void @llvm.dbg.declare(metadata %struct.RegionView3D** %rv3d, metadata !13441, metadata !DIExpression()), !dbg !13496
  %8 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !13497
  %regiondata3 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %8, i32 0, i32 30, !dbg !13498
  %9 = load i8*, i8** %regiondata3, align 8, !dbg !13498
  %10 = bitcast i8* %9 to %struct.RegionView3D*, !dbg !13497
  store %struct.RegionView3D* %10, %struct.RegionView3D** %rv3d, align 8, !dbg !13496
  %11 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !13499
  %12 = load %struct.RegionView3D*, %struct.RegionView3D** %rv3d, align 8, !dbg !13500
  %13 = bitcast %struct.RegionView3D* %12 to i8*, !dbg !13500
  call void @writestruct(%struct.WriteData* %11, i32 1096040772, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.45, i64 0, i64 0), i32 1, i8* %13), !dbg !13501
  %14 = load %struct.RegionView3D*, %struct.RegionView3D** %rv3d, align 8, !dbg !13502
  %localvd = getelementptr inbounds %struct.RegionView3D, %struct.RegionView3D* %14, i32 0, i32 10, !dbg !13504
  %15 = load %struct.RegionView3D*, %struct.RegionView3D** %localvd, align 8, !dbg !13504
  %tobool4 = icmp ne %struct.RegionView3D* %15, null, !dbg !13502
  br i1 %tobool4, label %if.then5, label %if.end, !dbg !13505

if.then5:                                         ; preds = %if.then2
  %16 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !13506
  %17 = load %struct.RegionView3D*, %struct.RegionView3D** %rv3d, align 8, !dbg !13507
  %localvd6 = getelementptr inbounds %struct.RegionView3D, %struct.RegionView3D* %17, i32 0, i32 10, !dbg !13508
  %18 = load %struct.RegionView3D*, %struct.RegionView3D** %localvd6, align 8, !dbg !13508
  %19 = bitcast %struct.RegionView3D* %18 to i8*, !dbg !13507
  call void @writestruct(%struct.WriteData* %16, i32 1096040772, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.45, i64 0, i64 0), i32 1, i8* %19), !dbg !13509
  br label %if.end, !dbg !13509

if.end:                                           ; preds = %if.then5, %if.then2
  %20 = load %struct.RegionView3D*, %struct.RegionView3D** %rv3d, align 8, !dbg !13510
  %clipbb = getelementptr inbounds %struct.RegionView3D, %struct.RegionView3D* %20, i32 0, i32 9, !dbg !13512
  %21 = load %struct.BoundBox*, %struct.BoundBox** %clipbb, align 8, !dbg !13512
  %tobool7 = icmp ne %struct.BoundBox* %21, null, !dbg !13510
  br i1 %tobool7, label %if.then8, label %if.end10, !dbg !13513

if.then8:                                         ; preds = %if.end
  %22 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !13514
  %23 = load %struct.RegionView3D*, %struct.RegionView3D** %rv3d, align 8, !dbg !13515
  %clipbb9 = getelementptr inbounds %struct.RegionView3D, %struct.RegionView3D* %23, i32 0, i32 9, !dbg !13516
  %24 = load %struct.BoundBox*, %struct.BoundBox** %clipbb9, align 8, !dbg !13516
  %25 = bitcast %struct.BoundBox* %24 to i8*, !dbg !13515
  call void @writestruct(%struct.WriteData* %22, i32 1096040772, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.46, i64 0, i64 0), i32 1, i8* %25), !dbg !13517
  br label %if.end10, !dbg !13517

if.end10:                                         ; preds = %if.then8, %if.end
  br label %if.end11, !dbg !13518

if.else:                                          ; preds = %sw.bb
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.47, i64 0, i64 0)), !dbg !13519
  br label %if.end11

if.end11:                                         ; preds = %if.else, %if.end10
  br label %sw.epilog, !dbg !13520

sw.default:                                       ; preds = %if.then
  %call12 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.47, i64 0, i64 0)), !dbg !13521
  br label %sw.epilog, !dbg !13522

sw.epilog:                                        ; preds = %sw.default, %if.end11
  br label %if.end13, !dbg !13523

if.end13:                                         ; preds = %sw.epilog, %entry
  ret void, !dbg !13524
}

; Function Attrs: noinline nounwind uwtable
define internal void @write_uilist(%struct.WriteData* %wd, %struct.uiList* %ui_list) #0 !dbg !13525 {
entry:
  %wd.addr = alloca %struct.WriteData*, align 8
  %ui_list.addr = alloca %struct.uiList*, align 8
  store %struct.WriteData* %wd, %struct.WriteData** %wd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WriteData** %wd.addr, metadata !13528, metadata !DIExpression()), !dbg !13529
  store %struct.uiList* %ui_list, %struct.uiList** %ui_list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiList** %ui_list.addr, metadata !13530, metadata !DIExpression()), !dbg !13531
  %0 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !13532
  %1 = load %struct.uiList*, %struct.uiList** %ui_list.addr, align 8, !dbg !13533
  %2 = bitcast %struct.uiList* %1 to i8*, !dbg !13533
  call void @writestruct(%struct.WriteData* %0, i32 1096040772, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.48, i64 0, i64 0), i32 1, i8* %2), !dbg !13534
  %3 = load %struct.uiList*, %struct.uiList** %ui_list.addr, align 8, !dbg !13535
  %properties = getelementptr inbounds %struct.uiList, %struct.uiList* %3, i32 0, i32 13, !dbg !13537
  %4 = load %struct.IDProperty*, %struct.IDProperty** %properties, align 8, !dbg !13537
  %tobool = icmp ne %struct.IDProperty* %4, null, !dbg !13535
  br i1 %tobool, label %if.then, label %if.end, !dbg !13538

if.then:                                          ; preds = %entry
  %5 = load %struct.uiList*, %struct.uiList** %ui_list.addr, align 8, !dbg !13539
  %properties1 = getelementptr inbounds %struct.uiList, %struct.uiList* %5, i32 0, i32 13, !dbg !13541
  %6 = load %struct.IDProperty*, %struct.IDProperty** %properties1, align 8, !dbg !13541
  %7 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !13542
  %8 = bitcast %struct.WriteData* %7 to i8*, !dbg !13542
  call void @IDP_WriteProperty(%struct.IDProperty* %6, i8* %8), !dbg !13543
  br label %if.end, !dbg !13544

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !13545
}

; Function Attrs: noinline nounwind uwtable
define internal void @write_soops(%struct.WriteData* %wd, %struct.SpaceOops* %so, %struct.LinkNode** %tmp_mem_list) #0 !dbg !13546 {
entry:
  %wd.addr = alloca %struct.WriteData*, align 8
  %so.addr = alloca %struct.SpaceOops*, align 8
  %tmp_mem_list.addr = alloca %struct.LinkNode**, align 8
  %ts = alloca %struct.BLI_mempool*, align 8
  %elems = alloca i32, align 4
  %data = alloca %struct.TreeStoreElem*, align 8
  %ts_flat = alloca %struct.TreeStore*, align 8
  store %struct.WriteData* %wd, %struct.WriteData** %wd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WriteData** %wd.addr, metadata !13550, metadata !DIExpression()), !dbg !13551
  store %struct.SpaceOops* %so, %struct.SpaceOops** %so.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SpaceOops** %so.addr, metadata !13552, metadata !DIExpression()), !dbg !13553
  store %struct.LinkNode** %tmp_mem_list, %struct.LinkNode*** %tmp_mem_list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.LinkNode*** %tmp_mem_list.addr, metadata !13554, metadata !DIExpression()), !dbg !13555
  call void @llvm.dbg.declare(metadata %struct.BLI_mempool** %ts, metadata !13556, metadata !DIExpression()), !dbg !13557
  %0 = load %struct.SpaceOops*, %struct.SpaceOops** %so.addr, align 8, !dbg !13558
  %treestore = getelementptr inbounds %struct.SpaceOops, %struct.SpaceOops* %0, i32 0, i32 8, !dbg !13559
  %1 = load %struct.BLI_mempool*, %struct.BLI_mempool** %treestore, align 8, !dbg !13559
  store %struct.BLI_mempool* %1, %struct.BLI_mempool** %ts, align 8, !dbg !13557
  %2 = load %struct.BLI_mempool*, %struct.BLI_mempool** %ts, align 8, !dbg !13560
  %tobool = icmp ne %struct.BLI_mempool* %2, null, !dbg !13560
  br i1 %tobool, label %if.then, label %if.else10, !dbg !13562

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %elems, metadata !13563, metadata !DIExpression()), !dbg !13565
  %3 = load %struct.BLI_mempool*, %struct.BLI_mempool** %ts, align 8, !dbg !13566
  %call = call i32 @BLI_mempool_count(%struct.BLI_mempool* %3), !dbg !13567
  store i32 %call, i32* %elems, align 4, !dbg !13565
  call void @llvm.dbg.declare(metadata %struct.TreeStoreElem** %data, metadata !13568, metadata !DIExpression()), !dbg !13571
  %4 = load i32, i32* %elems, align 4, !dbg !13572
  %tobool1 = icmp ne i32 %4, 0, !dbg !13572
  br i1 %tobool1, label %cond.true, label %cond.false, !dbg !13572

cond.true:                                        ; preds = %if.then
  %5 = load %struct.BLI_mempool*, %struct.BLI_mempool** %ts, align 8, !dbg !13573
  %call2 = call i8* @BLI_mempool_as_arrayN(%struct.BLI_mempool* %5, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.49, i64 0, i64 0)), !dbg !13574
  br label %cond.end, !dbg !13572

cond.false:                                       ; preds = %if.then
  br label %cond.end, !dbg !13572

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call2, %cond.true ], [ null, %cond.false ], !dbg !13572
  %6 = bitcast i8* %cond to %struct.TreeStoreElem*, !dbg !13572
  store %struct.TreeStoreElem* %6, %struct.TreeStoreElem** %data, align 8, !dbg !13571
  %7 = load %struct.TreeStoreElem*, %struct.TreeStoreElem** %data, align 8, !dbg !13575
  %tobool3 = icmp ne %struct.TreeStoreElem* %7, null, !dbg !13575
  br i1 %tobool3, label %if.then4, label %if.else, !dbg !13577

if.then4:                                         ; preds = %cond.end
  call void @llvm.dbg.declare(metadata %struct.TreeStore** %ts_flat, metadata !13578, metadata !DIExpression()), !dbg !13587
  %8 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !13588
  %call5 = call i8* %8(i64 16, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.50, i64 0, i64 0)), !dbg !13588
  %9 = bitcast i8* %call5 to %struct.TreeStore*, !dbg !13588
  store %struct.TreeStore* %9, %struct.TreeStore** %ts_flat, align 8, !dbg !13587
  %10 = load i32, i32* %elems, align 4, !dbg !13589
  %11 = load %struct.TreeStore*, %struct.TreeStore** %ts_flat, align 8, !dbg !13590
  %usedelem = getelementptr inbounds %struct.TreeStore, %struct.TreeStore* %11, i32 0, i32 1, !dbg !13591
  store i32 %10, i32* %usedelem, align 4, !dbg !13592
  %12 = load i32, i32* %elems, align 4, !dbg !13593
  %13 = load %struct.TreeStore*, %struct.TreeStore** %ts_flat, align 8, !dbg !13594
  %totelem = getelementptr inbounds %struct.TreeStore, %struct.TreeStore* %13, i32 0, i32 0, !dbg !13595
  store i32 %12, i32* %totelem, align 8, !dbg !13596
  %14 = load %struct.TreeStoreElem*, %struct.TreeStoreElem** %data, align 8, !dbg !13597
  %15 = load %struct.TreeStore*, %struct.TreeStore** %ts_flat, align 8, !dbg !13598
  %data6 = getelementptr inbounds %struct.TreeStore, %struct.TreeStore* %15, i32 0, i32 2, !dbg !13599
  store %struct.TreeStoreElem* %14, %struct.TreeStoreElem** %data6, align 8, !dbg !13600
  %16 = load %struct.TreeStore*, %struct.TreeStore** %ts_flat, align 8, !dbg !13601
  %17 = bitcast %struct.TreeStore* %16 to %struct.BLI_mempool*, !dbg !13602
  %18 = load %struct.SpaceOops*, %struct.SpaceOops** %so.addr, align 8, !dbg !13603
  %treestore7 = getelementptr inbounds %struct.SpaceOops, %struct.SpaceOops* %18, i32 0, i32 8, !dbg !13604
  store %struct.BLI_mempool* %17, %struct.BLI_mempool** %treestore7, align 8, !dbg !13605
  %19 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !13606
  %20 = load %struct.SpaceOops*, %struct.SpaceOops** %so.addr, align 8, !dbg !13607
  %21 = bitcast %struct.SpaceOops* %20 to i8*, !dbg !13607
  call void @writestruct(%struct.WriteData* %19, i32 1096040772, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.51, i64 0, i64 0), i32 1, i8* %21), !dbg !13608
  %22 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !13609
  %23 = load %struct.TreeStore*, %struct.TreeStore** %ts_flat, align 8, !dbg !13610
  %24 = bitcast %struct.TreeStore* %23 to i8*, !dbg !13610
  call void @writestruct(%struct.WriteData* %22, i32 1096040772, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.50, i64 0, i64 0), i32 1, i8* %24), !dbg !13611
  %25 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !13612
  %26 = load i32, i32* %elems, align 4, !dbg !13613
  %27 = load %struct.TreeStoreElem*, %struct.TreeStoreElem** %data, align 8, !dbg !13614
  %28 = bitcast %struct.TreeStoreElem* %27 to i8*, !dbg !13614
  call void @writestruct(%struct.WriteData* %25, i32 1096040772, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.49, i64 0, i64 0), i32 %26, i8* %28), !dbg !13615
  %29 = load %struct.LinkNode**, %struct.LinkNode*** %tmp_mem_list.addr, align 8, !dbg !13616
  %30 = load %struct.TreeStore*, %struct.TreeStore** %ts_flat, align 8, !dbg !13617
  %31 = bitcast %struct.TreeStore* %30 to i8*, !dbg !13617
  call void @BLI_linklist_prepend(%struct.LinkNode** %29, i8* %31), !dbg !13618
  %32 = load %struct.LinkNode**, %struct.LinkNode*** %tmp_mem_list.addr, align 8, !dbg !13619
  %33 = load %struct.TreeStoreElem*, %struct.TreeStoreElem** %data, align 8, !dbg !13620
  %34 = bitcast %struct.TreeStoreElem* %33 to i8*, !dbg !13620
  call void @BLI_linklist_prepend(%struct.LinkNode** %32, i8* %34), !dbg !13621
  br label %if.end, !dbg !13622

if.else:                                          ; preds = %cond.end
  %35 = load %struct.SpaceOops*, %struct.SpaceOops** %so.addr, align 8, !dbg !13623
  %treestore8 = getelementptr inbounds %struct.SpaceOops, %struct.SpaceOops* %35, i32 0, i32 8, !dbg !13625
  store %struct.BLI_mempool* null, %struct.BLI_mempool** %treestore8, align 8, !dbg !13626
  %36 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !13627
  %37 = load %struct.SpaceOops*, %struct.SpaceOops** %so.addr, align 8, !dbg !13628
  %38 = bitcast %struct.SpaceOops* %37 to i8*, !dbg !13628
  call void @writestruct(%struct.WriteData* %36, i32 1096040772, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.51, i64 0, i64 0), i32 1, i8* %38), !dbg !13629
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then4
  %39 = load %struct.BLI_mempool*, %struct.BLI_mempool** %ts, align 8, !dbg !13630
  %40 = load %struct.SpaceOops*, %struct.SpaceOops** %so.addr, align 8, !dbg !13631
  %treestore9 = getelementptr inbounds %struct.SpaceOops, %struct.SpaceOops* %40, i32 0, i32 8, !dbg !13632
  store %struct.BLI_mempool* %39, %struct.BLI_mempool** %treestore9, align 8, !dbg !13633
  br label %if.end11, !dbg !13634

if.else10:                                        ; preds = %entry
  %41 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !13635
  %42 = load %struct.SpaceOops*, %struct.SpaceOops** %so.addr, align 8, !dbg !13637
  %43 = bitcast %struct.SpaceOops* %42 to i8*, !dbg !13637
  call void @writestruct(%struct.WriteData* %41, i32 1096040772, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.51, i64 0, i64 0), i32 1, i8* %43), !dbg !13638
  br label %if.end11

if.end11:                                         ; preds = %if.else10, %if.end
  ret void, !dbg !13639
}

; Function Attrs: noinline nounwind uwtable
define internal void @write_curvemapping(%struct.WriteData* %wd, %struct.CurveMapping* %cumap) #0 !dbg !13640 {
entry:
  %wd.addr = alloca %struct.WriteData*, align 8
  %cumap.addr = alloca %struct.CurveMapping*, align 8
  store %struct.WriteData* %wd, %struct.WriteData** %wd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WriteData** %wd.addr, metadata !13645, metadata !DIExpression()), !dbg !13646
  store %struct.CurveMapping* %cumap, %struct.CurveMapping** %cumap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CurveMapping** %cumap.addr, metadata !13647, metadata !DIExpression()), !dbg !13648
  %0 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !13649
  %1 = load %struct.CurveMapping*, %struct.CurveMapping** %cumap.addr, align 8, !dbg !13650
  %2 = bitcast %struct.CurveMapping* %1 to i8*, !dbg !13650
  call void @writestruct(%struct.WriteData* %0, i32 1096040772, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.52, i64 0, i64 0), i32 1, i8* %2), !dbg !13651
  %3 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !13652
  %4 = load %struct.CurveMapping*, %struct.CurveMapping** %cumap.addr, align 8, !dbg !13653
  call void @write_curvemapping_curves(%struct.WriteData* %3, %struct.CurveMapping* %4), !dbg !13654
  ret void, !dbg !13655
}

declare dso_local void @BLI_linklist_freeN(%struct.LinkNode*) #2

declare dso_local i32 @BLI_mempool_count(%struct.BLI_mempool*) #2

declare dso_local i8* @BLI_mempool_as_arrayN(%struct.BLI_mempool*, i8*) #2

declare dso_local void @BLI_linklist_prepend(%struct.LinkNode**, i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @write_curvemapping_curves(%struct.WriteData* %wd, %struct.CurveMapping* %cumap) #0 !dbg !13656 {
entry:
  %wd.addr = alloca %struct.WriteData*, align 8
  %cumap.addr = alloca %struct.CurveMapping*, align 8
  %a = alloca i32, align 4
  store %struct.WriteData* %wd, %struct.WriteData** %wd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WriteData** %wd.addr, metadata !13657, metadata !DIExpression()), !dbg !13658
  store %struct.CurveMapping* %cumap, %struct.CurveMapping** %cumap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CurveMapping** %cumap.addr, metadata !13659, metadata !DIExpression()), !dbg !13660
  call void @llvm.dbg.declare(metadata i32* %a, metadata !13661, metadata !DIExpression()), !dbg !13662
  store i32 0, i32* %a, align 4, !dbg !13663
  br label %for.cond, !dbg !13665

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %a, align 4, !dbg !13666
  %cmp = icmp slt i32 %0, 4, !dbg !13668
  br i1 %cmp, label %for.body, label %for.end, !dbg !13669

for.body:                                         ; preds = %for.cond
  %1 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !13670
  %2 = load %struct.CurveMapping*, %struct.CurveMapping** %cumap.addr, align 8, !dbg !13671
  %cm = getelementptr inbounds %struct.CurveMapping, %struct.CurveMapping* %2, i32 0, i32 6, !dbg !13672
  %3 = load i32, i32* %a, align 4, !dbg !13673
  %idxprom = sext i32 %3 to i64, !dbg !13671
  %arrayidx = getelementptr inbounds [4 x %struct.CurveMap], [4 x %struct.CurveMap]* %cm, i64 0, i64 %idxprom, !dbg !13671
  %totpoint = getelementptr inbounds %struct.CurveMap, %struct.CurveMap* %arrayidx, i32 0, i32 0, !dbg !13674
  %4 = load i16, i16* %totpoint, align 8, !dbg !13674
  %conv = sext i16 %4 to i32, !dbg !13671
  %5 = load %struct.CurveMapping*, %struct.CurveMapping** %cumap.addr, align 8, !dbg !13675
  %cm1 = getelementptr inbounds %struct.CurveMapping, %struct.CurveMapping* %5, i32 0, i32 6, !dbg !13676
  %6 = load i32, i32* %a, align 4, !dbg !13677
  %idxprom2 = sext i32 %6 to i64, !dbg !13675
  %arrayidx3 = getelementptr inbounds [4 x %struct.CurveMap], [4 x %struct.CurveMap]* %cm1, i64 0, i64 %idxprom2, !dbg !13675
  %curve = getelementptr inbounds %struct.CurveMap, %struct.CurveMap* %arrayidx3, i32 0, i32 7, !dbg !13678
  %7 = load %struct.CurveMapPoint*, %struct.CurveMapPoint** %curve, align 8, !dbg !13678
  %8 = bitcast %struct.CurveMapPoint* %7 to i8*, !dbg !13675
  call void @writestruct(%struct.WriteData* %1, i32 1096040772, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.53, i64 0, i64 0), i32 %conv, i8* %8), !dbg !13679
  br label %for.inc, !dbg !13679

for.inc:                                          ; preds = %for.body
  %9 = load i32, i32* %a, align 4, !dbg !13680
  %inc = add nsw i32 %9, 1, !dbg !13680
  store i32 %inc, i32* %a, align 4, !dbg !13680
  br label %for.cond, !dbg !13681, !llvm.loop !13682

for.end:                                          ; preds = %for.cond
  ret void, !dbg !13684
}

; Function Attrs: noinline nounwind uwtable
define internal void @write_animdata(%struct.WriteData* %wd, %struct.AnimData* %adt) #0 !dbg !13685 {
entry:
  %wd.addr = alloca %struct.WriteData*, align 8
  %adt.addr = alloca %struct.AnimData*, align 8
  %aor = alloca %struct.AnimOverride*, align 8
  store %struct.WriteData* %wd, %struct.WriteData** %wd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WriteData** %wd.addr, metadata !13690, metadata !DIExpression()), !dbg !13691
  store %struct.AnimData* %adt, %struct.AnimData** %adt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AnimData** %adt.addr, metadata !13692, metadata !DIExpression()), !dbg !13693
  call void @llvm.dbg.declare(metadata %struct.AnimOverride** %aor, metadata !13694, metadata !DIExpression()), !dbg !13705
  %0 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !13706
  %1 = load %struct.AnimData*, %struct.AnimData** %adt.addr, align 8, !dbg !13707
  %2 = bitcast %struct.AnimData* %1 to i8*, !dbg !13707
  call void @writestruct(%struct.WriteData* %0, i32 1096040772, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.56, i64 0, i64 0), i32 1, i8* %2), !dbg !13708
  %3 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !13709
  %4 = load %struct.AnimData*, %struct.AnimData** %adt.addr, align 8, !dbg !13710
  %drivers = getelementptr inbounds %struct.AnimData, %struct.AnimData* %4, i32 0, i32 5, !dbg !13711
  call void @write_fcurves(%struct.WriteData* %3, %struct.ListBase* %drivers), !dbg !13712
  %5 = load %struct.AnimData*, %struct.AnimData** %adt.addr, align 8, !dbg !13713
  %overrides = getelementptr inbounds %struct.AnimData, %struct.AnimData* %5, i32 0, i32 6, !dbg !13715
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %overrides, i32 0, i32 0, !dbg !13716
  %6 = load i8*, i8** %first, align 8, !dbg !13716
  %7 = bitcast i8* %6 to %struct.AnimOverride*, !dbg !13713
  store %struct.AnimOverride* %7, %struct.AnimOverride** %aor, align 8, !dbg !13717
  br label %for.cond, !dbg !13718

for.cond:                                         ; preds = %for.inc, %entry
  %8 = load %struct.AnimOverride*, %struct.AnimOverride** %aor, align 8, !dbg !13719
  %tobool = icmp ne %struct.AnimOverride* %8, null, !dbg !13721
  br i1 %tobool, label %for.body, label %for.end, !dbg !13721

for.body:                                         ; preds = %for.cond
  %9 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !13722
  %10 = load %struct.AnimOverride*, %struct.AnimOverride** %aor, align 8, !dbg !13724
  %11 = bitcast %struct.AnimOverride* %10 to i8*, !dbg !13724
  call void @writestruct(%struct.WriteData* %9, i32 1096040772, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.57, i64 0, i64 0), i32 1, i8* %11), !dbg !13725
  %12 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !13726
  %13 = load %struct.AnimOverride*, %struct.AnimOverride** %aor, align 8, !dbg !13727
  %rna_path = getelementptr inbounds %struct.AnimOverride, %struct.AnimOverride* %13, i32 0, i32 2, !dbg !13728
  %14 = load i8*, i8** %rna_path, align 8, !dbg !13728
  %call = call i64 @strlen(i8* %14) #9, !dbg !13729
  %add = add i64 %call, 1, !dbg !13730
  %conv = trunc i64 %add to i32, !dbg !13729
  %15 = load %struct.AnimOverride*, %struct.AnimOverride** %aor, align 8, !dbg !13731
  %rna_path1 = getelementptr inbounds %struct.AnimOverride, %struct.AnimOverride* %15, i32 0, i32 2, !dbg !13732
  %16 = load i8*, i8** %rna_path1, align 8, !dbg !13732
  call void @writedata(%struct.WriteData* %12, i32 1096040772, i32 %conv, i8* %16), !dbg !13733
  br label %for.inc, !dbg !13734

for.inc:                                          ; preds = %for.body
  %17 = load %struct.AnimOverride*, %struct.AnimOverride** %aor, align 8, !dbg !13735
  %next = getelementptr inbounds %struct.AnimOverride, %struct.AnimOverride* %17, i32 0, i32 0, !dbg !13736
  %18 = load %struct.AnimOverride*, %struct.AnimOverride** %next, align 8, !dbg !13736
  store %struct.AnimOverride* %18, %struct.AnimOverride** %aor, align 8, !dbg !13737
  br label %for.cond, !dbg !13738, !llvm.loop !13739

for.end:                                          ; preds = %for.cond
  %19 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !13741
  %20 = load %struct.AnimData*, %struct.AnimData** %adt.addr, align 8, !dbg !13742
  %nla_tracks = getelementptr inbounds %struct.AnimData, %struct.AnimData* %20, i32 0, i32 3, !dbg !13743
  call void @write_nladata(%struct.WriteData* %19, %struct.ListBase* %nla_tracks), !dbg !13744
  ret void, !dbg !13745
}

; Function Attrs: noinline nounwind uwtable
define internal void @write_movieTracks(%struct.WriteData* %wd, %struct.ListBase* %tracks) #0 !dbg !13746 {
entry:
  %wd.addr = alloca %struct.WriteData*, align 8
  %tracks.addr = alloca %struct.ListBase*, align 8
  %track = alloca %struct.MovieTrackingTrack*, align 8
  store %struct.WriteData* %wd, %struct.WriteData** %wd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WriteData** %wd.addr, metadata !13747, metadata !DIExpression()), !dbg !13748
  store %struct.ListBase* %tracks, %struct.ListBase** %tracks.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %tracks.addr, metadata !13749, metadata !DIExpression()), !dbg !13750
  call void @llvm.dbg.declare(metadata %struct.MovieTrackingTrack** %track, metadata !13751, metadata !DIExpression()), !dbg !13752
  %0 = load %struct.ListBase*, %struct.ListBase** %tracks.addr, align 8, !dbg !13753
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %0, i32 0, i32 0, !dbg !13754
  %1 = load i8*, i8** %first, align 8, !dbg !13754
  %2 = bitcast i8* %1 to %struct.MovieTrackingTrack*, !dbg !13753
  store %struct.MovieTrackingTrack* %2, %struct.MovieTrackingTrack** %track, align 8, !dbg !13755
  br label %while.cond, !dbg !13756

while.cond:                                       ; preds = %if.end, %entry
  %3 = load %struct.MovieTrackingTrack*, %struct.MovieTrackingTrack** %track, align 8, !dbg !13757
  %tobool = icmp ne %struct.MovieTrackingTrack* %3, null, !dbg !13756
  br i1 %tobool, label %while.body, label %while.end, !dbg !13756

while.body:                                       ; preds = %while.cond
  %4 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !13758
  %5 = load %struct.MovieTrackingTrack*, %struct.MovieTrackingTrack** %track, align 8, !dbg !13760
  %6 = bitcast %struct.MovieTrackingTrack* %5 to i8*, !dbg !13760
  call void @writestruct(%struct.WriteData* %4, i32 1096040772, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.67, i64 0, i64 0), i32 1, i8* %6), !dbg !13761
  %7 = load %struct.MovieTrackingTrack*, %struct.MovieTrackingTrack** %track, align 8, !dbg !13762
  %markers = getelementptr inbounds %struct.MovieTrackingTrack, %struct.MovieTrackingTrack* %7, i32 0, i32 10, !dbg !13764
  %8 = load %struct.MovieTrackingMarker*, %struct.MovieTrackingMarker** %markers, align 8, !dbg !13764
  %tobool1 = icmp ne %struct.MovieTrackingMarker* %8, null, !dbg !13762
  br i1 %tobool1, label %if.then, label %if.end, !dbg !13765

if.then:                                          ; preds = %while.body
  %9 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !13766
  %10 = load %struct.MovieTrackingTrack*, %struct.MovieTrackingTrack** %track, align 8, !dbg !13767
  %markersnr = getelementptr inbounds %struct.MovieTrackingTrack, %struct.MovieTrackingTrack* %10, i32 0, i32 8, !dbg !13768
  %11 = load i32, i32* %markersnr, align 8, !dbg !13768
  %12 = load %struct.MovieTrackingTrack*, %struct.MovieTrackingTrack** %track, align 8, !dbg !13769
  %markers2 = getelementptr inbounds %struct.MovieTrackingTrack, %struct.MovieTrackingTrack* %12, i32 0, i32 10, !dbg !13770
  %13 = load %struct.MovieTrackingMarker*, %struct.MovieTrackingMarker** %markers2, align 8, !dbg !13770
  %14 = bitcast %struct.MovieTrackingMarker* %13 to i8*, !dbg !13769
  call void @writestruct(%struct.WriteData* %9, i32 1096040772, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.68, i64 0, i64 0), i32 %11, i8* %14), !dbg !13771
  br label %if.end, !dbg !13771

if.end:                                           ; preds = %if.then, %while.body
  %15 = load %struct.MovieTrackingTrack*, %struct.MovieTrackingTrack** %track, align 8, !dbg !13772
  %next = getelementptr inbounds %struct.MovieTrackingTrack, %struct.MovieTrackingTrack* %15, i32 0, i32 0, !dbg !13773
  %16 = load %struct.MovieTrackingTrack*, %struct.MovieTrackingTrack** %next, align 8, !dbg !13773
  store %struct.MovieTrackingTrack* %16, %struct.MovieTrackingTrack** %track, align 8, !dbg !13774
  br label %while.cond, !dbg !13756, !llvm.loop !13775

while.end:                                        ; preds = %while.cond
  ret void, !dbg !13777
}

; Function Attrs: noinline nounwind uwtable
define internal void @write_moviePlaneTracks(%struct.WriteData* %wd, %struct.ListBase* %plane_tracks_base) #0 !dbg !13778 {
entry:
  %wd.addr = alloca %struct.WriteData*, align 8
  %plane_tracks_base.addr = alloca %struct.ListBase*, align 8
  %plane_track = alloca %struct.MovieTrackingPlaneTrack*, align 8
  store %struct.WriteData* %wd, %struct.WriteData** %wd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WriteData** %wd.addr, metadata !13779, metadata !DIExpression()), !dbg !13780
  store %struct.ListBase* %plane_tracks_base, %struct.ListBase** %plane_tracks_base.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %plane_tracks_base.addr, metadata !13781, metadata !DIExpression()), !dbg !13782
  call void @llvm.dbg.declare(metadata %struct.MovieTrackingPlaneTrack** %plane_track, metadata !13783, metadata !DIExpression()), !dbg !13784
  %0 = load %struct.ListBase*, %struct.ListBase** %plane_tracks_base.addr, align 8, !dbg !13785
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %0, i32 0, i32 0, !dbg !13787
  %1 = load i8*, i8** %first, align 8, !dbg !13787
  %2 = bitcast i8* %1 to %struct.MovieTrackingPlaneTrack*, !dbg !13785
  store %struct.MovieTrackingPlaneTrack* %2, %struct.MovieTrackingPlaneTrack** %plane_track, align 8, !dbg !13788
  br label %for.cond, !dbg !13789

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.MovieTrackingPlaneTrack*, %struct.MovieTrackingPlaneTrack** %plane_track, align 8, !dbg !13790
  %tobool = icmp ne %struct.MovieTrackingPlaneTrack* %3, null, !dbg !13792
  br i1 %tobool, label %for.body, label %for.end, !dbg !13792

for.body:                                         ; preds = %for.cond
  %4 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !13793
  %5 = load %struct.MovieTrackingPlaneTrack*, %struct.MovieTrackingPlaneTrack** %plane_track, align 8, !dbg !13795
  %6 = bitcast %struct.MovieTrackingPlaneTrack* %5 to i8*, !dbg !13795
  call void @writestruct(%struct.WriteData* %4, i32 1096040772, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.69, i64 0, i64 0), i32 1, i8* %6), !dbg !13796
  %7 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !13797
  %8 = load %struct.MovieTrackingPlaneTrack*, %struct.MovieTrackingPlaneTrack** %plane_track, align 8, !dbg !13798
  %point_tracksnr = getelementptr inbounds %struct.MovieTrackingPlaneTrack, %struct.MovieTrackingPlaneTrack* %8, i32 0, i32 4, !dbg !13799
  %9 = load i32, i32* %point_tracksnr, align 8, !dbg !13799
  %conv = sext i32 %9 to i64, !dbg !13798
  %mul = mul i64 8, %conv, !dbg !13800
  %conv1 = trunc i64 %mul to i32, !dbg !13801
  %10 = load %struct.MovieTrackingPlaneTrack*, %struct.MovieTrackingPlaneTrack** %plane_track, align 8, !dbg !13802
  %point_tracks = getelementptr inbounds %struct.MovieTrackingPlaneTrack, %struct.MovieTrackingPlaneTrack* %10, i32 0, i32 3, !dbg !13803
  %11 = load %struct.MovieTrackingTrack**, %struct.MovieTrackingTrack*** %point_tracks, align 8, !dbg !13803
  %12 = bitcast %struct.MovieTrackingTrack** %11 to i8*, !dbg !13802
  call void @writedata(%struct.WriteData* %7, i32 1096040772, i32 %conv1, i8* %12), !dbg !13804
  %13 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !13805
  %14 = load %struct.MovieTrackingPlaneTrack*, %struct.MovieTrackingPlaneTrack** %plane_track, align 8, !dbg !13806
  %markersnr = getelementptr inbounds %struct.MovieTrackingPlaneTrack, %struct.MovieTrackingPlaneTrack* %14, i32 0, i32 7, !dbg !13807
  %15 = load i32, i32* %markersnr, align 8, !dbg !13807
  %16 = load %struct.MovieTrackingPlaneTrack*, %struct.MovieTrackingPlaneTrack** %plane_track, align 8, !dbg !13808
  %markers = getelementptr inbounds %struct.MovieTrackingPlaneTrack, %struct.MovieTrackingPlaneTrack* %16, i32 0, i32 6, !dbg !13809
  %17 = load %struct.MovieTrackingPlaneMarker*, %struct.MovieTrackingPlaneMarker** %markers, align 8, !dbg !13809
  %18 = bitcast %struct.MovieTrackingPlaneMarker* %17 to i8*, !dbg !13808
  call void @writestruct(%struct.WriteData* %13, i32 1096040772, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.70, i64 0, i64 0), i32 %15, i8* %18), !dbg !13810
  br label %for.inc, !dbg !13811

for.inc:                                          ; preds = %for.body
  %19 = load %struct.MovieTrackingPlaneTrack*, %struct.MovieTrackingPlaneTrack** %plane_track, align 8, !dbg !13812
  %next = getelementptr inbounds %struct.MovieTrackingPlaneTrack, %struct.MovieTrackingPlaneTrack* %19, i32 0, i32 0, !dbg !13813
  %20 = load %struct.MovieTrackingPlaneTrack*, %struct.MovieTrackingPlaneTrack** %next, align 8, !dbg !13813
  store %struct.MovieTrackingPlaneTrack* %20, %struct.MovieTrackingPlaneTrack** %plane_track, align 8, !dbg !13814
  br label %for.cond, !dbg !13815, !llvm.loop !13816

for.end:                                          ; preds = %for.cond
  ret void, !dbg !13818
}

; Function Attrs: noinline nounwind uwtable
define internal void @write_movieReconstruction(%struct.WriteData* %wd, %struct.MovieTrackingReconstruction* %reconstruction) #0 !dbg !13819 {
entry:
  %wd.addr = alloca %struct.WriteData*, align 8
  %reconstruction.addr = alloca %struct.MovieTrackingReconstruction*, align 8
  store %struct.WriteData* %wd, %struct.WriteData** %wd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WriteData** %wd.addr, metadata !13823, metadata !DIExpression()), !dbg !13824
  store %struct.MovieTrackingReconstruction* %reconstruction, %struct.MovieTrackingReconstruction** %reconstruction.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MovieTrackingReconstruction** %reconstruction.addr, metadata !13825, metadata !DIExpression()), !dbg !13826
  %0 = load %struct.MovieTrackingReconstruction*, %struct.MovieTrackingReconstruction** %reconstruction.addr, align 8, !dbg !13827
  %camnr = getelementptr inbounds %struct.MovieTrackingReconstruction, %struct.MovieTrackingReconstruction* %0, i32 0, i32 3, !dbg !13829
  %1 = load i32, i32* %camnr, align 4, !dbg !13829
  %tobool = icmp ne i32 %1, 0, !dbg !13827
  br i1 %tobool, label %if.then, label %if.end, !dbg !13830

if.then:                                          ; preds = %entry
  %2 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !13831
  %3 = load %struct.MovieTrackingReconstruction*, %struct.MovieTrackingReconstruction** %reconstruction.addr, align 8, !dbg !13832
  %camnr1 = getelementptr inbounds %struct.MovieTrackingReconstruction, %struct.MovieTrackingReconstruction* %3, i32 0, i32 3, !dbg !13833
  %4 = load i32, i32* %camnr1, align 4, !dbg !13833
  %5 = load %struct.MovieTrackingReconstruction*, %struct.MovieTrackingReconstruction** %reconstruction.addr, align 8, !dbg !13834
  %cameras = getelementptr inbounds %struct.MovieTrackingReconstruction, %struct.MovieTrackingReconstruction* %5, i32 0, i32 4, !dbg !13835
  %6 = load %struct.MovieReconstructedCamera*, %struct.MovieReconstructedCamera** %cameras, align 8, !dbg !13835
  %7 = bitcast %struct.MovieReconstructedCamera* %6 to i8*, !dbg !13834
  call void @writestruct(%struct.WriteData* %2, i32 1096040772, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.71, i64 0, i64 0), i32 %4, i8* %7), !dbg !13836
  br label %if.end, !dbg !13836

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !13837
}

; Function Attrs: noinline nounwind uwtable
define internal void @write_fcurves(%struct.WriteData* %wd, %struct.ListBase* %fcurves) #0 !dbg !13838 {
entry:
  %wd.addr = alloca %struct.WriteData*, align 8
  %fcurves.addr = alloca %struct.ListBase*, align 8
  %fcu = alloca %struct.FCurve*, align 8
  %driver15 = alloca %struct.ChannelDriver*, align 8
  %dvar = alloca %struct.DriverVar*, align 8
  %dtar = alloca %struct.DriverTarget*, align 8
  %tarIndex = alloca i32, align 4
  store %struct.WriteData* %wd, %struct.WriteData** %wd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WriteData** %wd.addr, metadata !13839, metadata !DIExpression()), !dbg !13840
  store %struct.ListBase* %fcurves, %struct.ListBase** %fcurves.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %fcurves.addr, metadata !13841, metadata !DIExpression()), !dbg !13842
  call void @llvm.dbg.declare(metadata %struct.FCurve** %fcu, metadata !13843, metadata !DIExpression()), !dbg !13884
  %0 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !13885
  %1 = load %struct.ListBase*, %struct.ListBase** %fcurves.addr, align 8, !dbg !13886
  call void @writelist(%struct.WriteData* %0, i32 1096040772, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.58, i64 0, i64 0), %struct.ListBase* %1), !dbg !13887
  %2 = load %struct.ListBase*, %struct.ListBase** %fcurves.addr, align 8, !dbg !13888
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %2, i32 0, i32 0, !dbg !13890
  %3 = load i8*, i8** %first, align 8, !dbg !13890
  %4 = bitcast i8* %3 to %struct.FCurve*, !dbg !13888
  store %struct.FCurve* %4, %struct.FCurve** %fcu, align 8, !dbg !13891
  br label %for.cond, !dbg !13892

for.cond:                                         ; preds = %for.inc38, %entry
  %5 = load %struct.FCurve*, %struct.FCurve** %fcu, align 8, !dbg !13893
  %tobool = icmp ne %struct.FCurve* %5, null, !dbg !13895
  br i1 %tobool, label %for.body, label %for.end40, !dbg !13895

for.body:                                         ; preds = %for.cond
  %6 = load %struct.FCurve*, %struct.FCurve** %fcu, align 8, !dbg !13896
  %bezt = getelementptr inbounds %struct.FCurve, %struct.FCurve* %6, i32 0, i32 5, !dbg !13899
  %7 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !13899
  %tobool1 = icmp ne %struct.BezTriple* %7, null, !dbg !13896
  br i1 %tobool1, label %if.then, label %if.end, !dbg !13900

if.then:                                          ; preds = %for.body
  %8 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !13901
  %9 = load %struct.FCurve*, %struct.FCurve** %fcu, align 8, !dbg !13902
  %totvert = getelementptr inbounds %struct.FCurve, %struct.FCurve* %9, i32 0, i32 7, !dbg !13903
  %10 = load i32, i32* %totvert, align 8, !dbg !13903
  %11 = load %struct.FCurve*, %struct.FCurve** %fcu, align 8, !dbg !13904
  %bezt2 = getelementptr inbounds %struct.FCurve, %struct.FCurve* %11, i32 0, i32 5, !dbg !13905
  %12 = load %struct.BezTriple*, %struct.BezTriple** %bezt2, align 8, !dbg !13905
  %13 = bitcast %struct.BezTriple* %12 to i8*, !dbg !13904
  call void @writestruct(%struct.WriteData* %8, i32 1096040772, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.59, i64 0, i64 0), i32 %10, i8* %13), !dbg !13906
  br label %if.end, !dbg !13906

if.end:                                           ; preds = %if.then, %for.body
  %14 = load %struct.FCurve*, %struct.FCurve** %fcu, align 8, !dbg !13907
  %fpt = getelementptr inbounds %struct.FCurve, %struct.FCurve* %14, i32 0, i32 6, !dbg !13909
  %15 = load %struct.FPoint*, %struct.FPoint** %fpt, align 8, !dbg !13909
  %tobool3 = icmp ne %struct.FPoint* %15, null, !dbg !13907
  br i1 %tobool3, label %if.then4, label %if.end7, !dbg !13910

if.then4:                                         ; preds = %if.end
  %16 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !13911
  %17 = load %struct.FCurve*, %struct.FCurve** %fcu, align 8, !dbg !13912
  %totvert5 = getelementptr inbounds %struct.FCurve, %struct.FCurve* %17, i32 0, i32 7, !dbg !13913
  %18 = load i32, i32* %totvert5, align 8, !dbg !13913
  %19 = load %struct.FCurve*, %struct.FCurve** %fcu, align 8, !dbg !13914
  %fpt6 = getelementptr inbounds %struct.FCurve, %struct.FCurve* %19, i32 0, i32 6, !dbg !13915
  %20 = load %struct.FPoint*, %struct.FPoint** %fpt6, align 8, !dbg !13915
  %21 = bitcast %struct.FPoint* %20 to i8*, !dbg !13914
  call void @writestruct(%struct.WriteData* %16, i32 1096040772, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.60, i64 0, i64 0), i32 %18, i8* %21), !dbg !13916
  br label %if.end7, !dbg !13916

if.end7:                                          ; preds = %if.then4, %if.end
  %22 = load %struct.FCurve*, %struct.FCurve** %fcu, align 8, !dbg !13917
  %rna_path = getelementptr inbounds %struct.FCurve, %struct.FCurve* %22, i32 0, i32 12, !dbg !13919
  %23 = load i8*, i8** %rna_path, align 8, !dbg !13919
  %tobool8 = icmp ne i8* %23, null, !dbg !13917
  br i1 %tobool8, label %if.then9, label %if.end12, !dbg !13920

if.then9:                                         ; preds = %if.end7
  %24 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !13921
  %25 = load %struct.FCurve*, %struct.FCurve** %fcu, align 8, !dbg !13922
  %rna_path10 = getelementptr inbounds %struct.FCurve, %struct.FCurve* %25, i32 0, i32 12, !dbg !13923
  %26 = load i8*, i8** %rna_path10, align 8, !dbg !13923
  %call = call i64 @strlen(i8* %26) #9, !dbg !13924
  %add = add i64 %call, 1, !dbg !13925
  %conv = trunc i64 %add to i32, !dbg !13924
  %27 = load %struct.FCurve*, %struct.FCurve** %fcu, align 8, !dbg !13926
  %rna_path11 = getelementptr inbounds %struct.FCurve, %struct.FCurve* %27, i32 0, i32 12, !dbg !13927
  %28 = load i8*, i8** %rna_path11, align 8, !dbg !13927
  call void @writedata(%struct.WriteData* %24, i32 1096040772, i32 %conv, i8* %28), !dbg !13928
  br label %if.end12, !dbg !13928

if.end12:                                         ; preds = %if.then9, %if.end7
  %29 = load %struct.FCurve*, %struct.FCurve** %fcu, align 8, !dbg !13929
  %driver = getelementptr inbounds %struct.FCurve, %struct.FCurve* %29, i32 0, i32 3, !dbg !13931
  %30 = load %struct.ChannelDriver*, %struct.ChannelDriver** %driver, align 8, !dbg !13931
  %tobool13 = icmp ne %struct.ChannelDriver* %30, null, !dbg !13929
  br i1 %tobool13, label %if.then14, label %if.end37, !dbg !13932

if.then14:                                        ; preds = %if.end12
  call void @llvm.dbg.declare(metadata %struct.ChannelDriver** %driver15, metadata !13933, metadata !DIExpression()), !dbg !13935
  %31 = load %struct.FCurve*, %struct.FCurve** %fcu, align 8, !dbg !13936
  %driver16 = getelementptr inbounds %struct.FCurve, %struct.FCurve* %31, i32 0, i32 3, !dbg !13937
  %32 = load %struct.ChannelDriver*, %struct.ChannelDriver** %driver16, align 8, !dbg !13937
  store %struct.ChannelDriver* %32, %struct.ChannelDriver** %driver15, align 8, !dbg !13935
  call void @llvm.dbg.declare(metadata %struct.DriverVar** %dvar, metadata !13938, metadata !DIExpression()), !dbg !13961
  %33 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !13962
  %34 = load %struct.ChannelDriver*, %struct.ChannelDriver** %driver15, align 8, !dbg !13963
  %35 = bitcast %struct.ChannelDriver* %34 to i8*, !dbg !13963
  call void @writestruct(%struct.WriteData* %33, i32 1096040772, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.61, i64 0, i64 0), i32 1, i8* %35), !dbg !13964
  %36 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !13965
  %37 = load %struct.ChannelDriver*, %struct.ChannelDriver** %driver15, align 8, !dbg !13966
  %variables = getelementptr inbounds %struct.ChannelDriver, %struct.ChannelDriver* %37, i32 0, i32 0, !dbg !13967
  call void @writelist(%struct.WriteData* %36, i32 1096040772, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.62, i64 0, i64 0), %struct.ListBase* %variables), !dbg !13968
  %38 = load %struct.ChannelDriver*, %struct.ChannelDriver** %driver15, align 8, !dbg !13969
  %variables17 = getelementptr inbounds %struct.ChannelDriver, %struct.ChannelDriver* %38, i32 0, i32 0, !dbg !13971
  %first18 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %variables17, i32 0, i32 0, !dbg !13972
  %39 = load i8*, i8** %first18, align 8, !dbg !13972
  %40 = bitcast i8* %39 to %struct.DriverVar*, !dbg !13969
  store %struct.DriverVar* %40, %struct.DriverVar** %dvar, align 8, !dbg !13973
  br label %for.cond19, !dbg !13974

for.cond19:                                       ; preds = %for.inc35, %if.then14
  %41 = load %struct.DriverVar*, %struct.DriverVar** %dvar, align 8, !dbg !13975
  %tobool20 = icmp ne %struct.DriverVar* %41, null, !dbg !13977
  br i1 %tobool20, label %for.body21, label %for.end36, !dbg !13977

for.body21:                                       ; preds = %for.cond19
  call void @llvm.dbg.declare(metadata %struct.DriverTarget** %dtar, metadata !13978, metadata !DIExpression()), !dbg !13982
  %42 = load %struct.DriverVar*, %struct.DriverVar** %dvar, align 8, !dbg !13982
  %targets = getelementptr inbounds %struct.DriverVar, %struct.DriverVar* %42, i32 0, i32 3, !dbg !13982
  %arrayidx = getelementptr inbounds [8 x %struct.DriverTarget], [8 x %struct.DriverTarget]* %targets, i64 0, i64 0, !dbg !13982
  store %struct.DriverTarget* %arrayidx, %struct.DriverTarget** %dtar, align 8, !dbg !13982
  call void @llvm.dbg.declare(metadata i32* %tarIndex, metadata !13983, metadata !DIExpression()), !dbg !13982
  store i32 0, i32* %tarIndex, align 4, !dbg !13982
  br label %for.cond22, !dbg !13982

for.cond22:                                       ; preds = %for.inc, %for.body21
  %43 = load i32, i32* %tarIndex, align 4, !dbg !13984
  %44 = load %struct.DriverVar*, %struct.DriverVar** %dvar, align 8, !dbg !13984
  %num_targets = getelementptr inbounds %struct.DriverVar, %struct.DriverVar* %44, i32 0, i32 4, !dbg !13984
  %45 = load i16, i16* %num_targets, align 8, !dbg !13984
  %conv23 = sext i16 %45 to i32, !dbg !13984
  %cmp = icmp slt i32 %43, %conv23, !dbg !13984
  br i1 %cmp, label %for.body25, label %for.end, !dbg !13987

for.body25:                                       ; preds = %for.cond22
  %46 = load %struct.DriverTarget*, %struct.DriverTarget** %dtar, align 8, !dbg !13988
  %rna_path26 = getelementptr inbounds %struct.DriverTarget, %struct.DriverTarget* %46, i32 0, i32 1, !dbg !13991
  %47 = load i8*, i8** %rna_path26, align 8, !dbg !13991
  %tobool27 = icmp ne i8* %47, null, !dbg !13988
  br i1 %tobool27, label %if.then28, label %if.end34, !dbg !13992

if.then28:                                        ; preds = %for.body25
  %48 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !13993
  %49 = load %struct.DriverTarget*, %struct.DriverTarget** %dtar, align 8, !dbg !13994
  %rna_path29 = getelementptr inbounds %struct.DriverTarget, %struct.DriverTarget* %49, i32 0, i32 1, !dbg !13995
  %50 = load i8*, i8** %rna_path29, align 8, !dbg !13995
  %call30 = call i64 @strlen(i8* %50) #9, !dbg !13996
  %add31 = add i64 %call30, 1, !dbg !13997
  %conv32 = trunc i64 %add31 to i32, !dbg !13996
  %51 = load %struct.DriverTarget*, %struct.DriverTarget** %dtar, align 8, !dbg !13998
  %rna_path33 = getelementptr inbounds %struct.DriverTarget, %struct.DriverTarget* %51, i32 0, i32 1, !dbg !13999
  %52 = load i8*, i8** %rna_path33, align 8, !dbg !13999
  call void @writedata(%struct.WriteData* %48, i32 1096040772, i32 %conv32, i8* %52), !dbg !14000
  br label %if.end34, !dbg !14000

if.end34:                                         ; preds = %if.then28, %for.body25
  br label %for.inc, !dbg !14001

for.inc:                                          ; preds = %if.end34
  %53 = load i32, i32* %tarIndex, align 4, !dbg !13984
  %inc = add nsw i32 %53, 1, !dbg !13984
  store i32 %inc, i32* %tarIndex, align 4, !dbg !13984
  %54 = load %struct.DriverTarget*, %struct.DriverTarget** %dtar, align 8, !dbg !13984
  %incdec.ptr = getelementptr inbounds %struct.DriverTarget, %struct.DriverTarget* %54, i32 1, !dbg !13984
  store %struct.DriverTarget* %incdec.ptr, %struct.DriverTarget** %dtar, align 8, !dbg !13984
  br label %for.cond22, !dbg !13984, !llvm.loop !14002

for.end:                                          ; preds = %for.cond22
  br label %for.inc35, !dbg !14004

for.inc35:                                        ; preds = %for.end
  %55 = load %struct.DriverVar*, %struct.DriverVar** %dvar, align 8, !dbg !14005
  %next = getelementptr inbounds %struct.DriverVar, %struct.DriverVar* %55, i32 0, i32 0, !dbg !14006
  %56 = load %struct.DriverVar*, %struct.DriverVar** %next, align 8, !dbg !14006
  store %struct.DriverVar* %56, %struct.DriverVar** %dvar, align 8, !dbg !14007
  br label %for.cond19, !dbg !14008, !llvm.loop !14009

for.end36:                                        ; preds = %for.cond19
  br label %if.end37, !dbg !14011

if.end37:                                         ; preds = %for.end36, %if.end12
  %57 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !14012
  %58 = load %struct.FCurve*, %struct.FCurve** %fcu, align 8, !dbg !14013
  %modifiers = getelementptr inbounds %struct.FCurve, %struct.FCurve* %58, i32 0, i32 4, !dbg !14014
  call void @write_fmodifiers(%struct.WriteData* %57, %struct.ListBase* %modifiers), !dbg !14015
  br label %for.inc38, !dbg !14016

for.inc38:                                        ; preds = %if.end37
  %59 = load %struct.FCurve*, %struct.FCurve** %fcu, align 8, !dbg !14017
  %next39 = getelementptr inbounds %struct.FCurve, %struct.FCurve* %59, i32 0, i32 0, !dbg !14018
  %60 = load %struct.FCurve*, %struct.FCurve** %next39, align 8, !dbg !14018
  store %struct.FCurve* %60, %struct.FCurve** %fcu, align 8, !dbg !14019
  br label %for.cond, !dbg !14020, !llvm.loop !14021

for.end40:                                        ; preds = %for.cond
  ret void, !dbg !14023
}

; Function Attrs: nounwind readonly
declare dso_local i64 @strlen(i8*) #5

; Function Attrs: noinline nounwind uwtable
define internal void @write_nladata(%struct.WriteData* %wd, %struct.ListBase* %nlabase) #0 !dbg !14024 {
entry:
  %wd.addr = alloca %struct.WriteData*, align 8
  %nlabase.addr = alloca %struct.ListBase*, align 8
  %nlt = alloca %struct.NlaTrack*, align 8
  store %struct.WriteData* %wd, %struct.WriteData** %wd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WriteData** %wd.addr, metadata !14025, metadata !DIExpression()), !dbg !14026
  store %struct.ListBase* %nlabase, %struct.ListBase** %nlabase.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %nlabase.addr, metadata !14027, metadata !DIExpression()), !dbg !14028
  call void @llvm.dbg.declare(metadata %struct.NlaTrack** %nlt, metadata !14029, metadata !DIExpression()), !dbg !14041
  %0 = load %struct.ListBase*, %struct.ListBase** %nlabase.addr, align 8, !dbg !14042
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %0, i32 0, i32 0, !dbg !14044
  %1 = load i8*, i8** %first, align 8, !dbg !14044
  %2 = bitcast i8* %1 to %struct.NlaTrack*, !dbg !14042
  store %struct.NlaTrack* %2, %struct.NlaTrack** %nlt, align 8, !dbg !14045
  br label %for.cond, !dbg !14046

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.NlaTrack*, %struct.NlaTrack** %nlt, align 8, !dbg !14047
  %tobool = icmp ne %struct.NlaTrack* %3, null, !dbg !14049
  br i1 %tobool, label %for.body, label %for.end, !dbg !14049

for.body:                                         ; preds = %for.cond
  %4 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !14050
  %5 = load %struct.NlaTrack*, %struct.NlaTrack** %nlt, align 8, !dbg !14052
  %6 = bitcast %struct.NlaTrack* %5 to i8*, !dbg !14052
  call void @writestruct(%struct.WriteData* %4, i32 1096040772, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.65, i64 0, i64 0), i32 1, i8* %6), !dbg !14053
  %7 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !14054
  %8 = load %struct.NlaTrack*, %struct.NlaTrack** %nlt, align 8, !dbg !14055
  %strips = getelementptr inbounds %struct.NlaTrack, %struct.NlaTrack* %8, i32 0, i32 2, !dbg !14056
  call void @write_nlastrips(%struct.WriteData* %7, %struct.ListBase* %strips), !dbg !14057
  br label %for.inc, !dbg !14058

for.inc:                                          ; preds = %for.body
  %9 = load %struct.NlaTrack*, %struct.NlaTrack** %nlt, align 8, !dbg !14059
  %next = getelementptr inbounds %struct.NlaTrack, %struct.NlaTrack* %9, i32 0, i32 0, !dbg !14060
  %10 = load %struct.NlaTrack*, %struct.NlaTrack** %next, align 8, !dbg !14060
  store %struct.NlaTrack* %10, %struct.NlaTrack** %nlt, align 8, !dbg !14061
  br label %for.cond, !dbg !14062, !llvm.loop !14063

for.end:                                          ; preds = %for.cond
  ret void, !dbg !14065
}

; Function Attrs: noinline nounwind uwtable
define internal void @writelist(%struct.WriteData* %wd, i32 %filecode, i8* %structname, %struct.ListBase* %lb) #0 !dbg !14066 {
entry:
  %wd.addr = alloca %struct.WriteData*, align 8
  %filecode.addr = alloca i32, align 4
  %structname.addr = alloca i8*, align 8
  %lb.addr = alloca %struct.ListBase*, align 8
  %link = alloca %struct.Link*, align 8
  store %struct.WriteData* %wd, %struct.WriteData** %wd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WriteData** %wd.addr, metadata !14069, metadata !DIExpression()), !dbg !14070
  store i32 %filecode, i32* %filecode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %filecode.addr, metadata !14071, metadata !DIExpression()), !dbg !14072
  store i8* %structname, i8** %structname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %structname.addr, metadata !14073, metadata !DIExpression()), !dbg !14074
  store %struct.ListBase* %lb, %struct.ListBase** %lb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %lb.addr, metadata !14075, metadata !DIExpression()), !dbg !14076
  call void @llvm.dbg.declare(metadata %struct.Link** %link, metadata !14077, metadata !DIExpression()), !dbg !14085
  %0 = load %struct.ListBase*, %struct.ListBase** %lb.addr, align 8, !dbg !14086
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %0, i32 0, i32 0, !dbg !14087
  %1 = load i8*, i8** %first, align 8, !dbg !14087
  %2 = bitcast i8* %1 to %struct.Link*, !dbg !14086
  store %struct.Link* %2, %struct.Link** %link, align 8, !dbg !14085
  br label %while.cond, !dbg !14088

while.cond:                                       ; preds = %while.body, %entry
  %3 = load %struct.Link*, %struct.Link** %link, align 8, !dbg !14089
  %tobool = icmp ne %struct.Link* %3, null, !dbg !14088
  br i1 %tobool, label %while.body, label %while.end, !dbg !14088

while.body:                                       ; preds = %while.cond
  %4 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !14090
  %5 = load i32, i32* %filecode.addr, align 4, !dbg !14092
  %6 = load i8*, i8** %structname.addr, align 8, !dbg !14093
  %7 = load %struct.Link*, %struct.Link** %link, align 8, !dbg !14094
  %8 = bitcast %struct.Link* %7 to i8*, !dbg !14094
  call void @writestruct(%struct.WriteData* %4, i32 %5, i8* %6, i32 1, i8* %8), !dbg !14095
  %9 = load %struct.Link*, %struct.Link** %link, align 8, !dbg !14096
  %next = getelementptr inbounds %struct.Link, %struct.Link* %9, i32 0, i32 0, !dbg !14097
  %10 = load %struct.Link*, %struct.Link** %next, align 8, !dbg !14097
  store %struct.Link* %10, %struct.Link** %link, align 8, !dbg !14098
  br label %while.cond, !dbg !14088, !llvm.loop !14099

while.end:                                        ; preds = %while.cond
  ret void, !dbg !14101
}

; Function Attrs: noinline nounwind uwtable
define internal void @write_fmodifiers(%struct.WriteData* %wd, %struct.ListBase* %fmodifiers) #0 !dbg !14102 {
entry:
  %wd.addr = alloca %struct.WriteData*, align 8
  %fmodifiers.addr = alloca %struct.ListBase*, align 8
  %fcm = alloca %struct.FModifier*, align 8
  %fmi = alloca %struct.FModifierTypeInfo*, align 8
  %data4 = alloca %struct.FMod_Generator*, align 8
  %data12 = alloca %struct.FMod_Envelope*, align 8
  %data20 = alloca %struct.FMod_Python*, align 8
  store %struct.WriteData* %wd, %struct.WriteData** %wd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WriteData** %wd.addr, metadata !14103, metadata !DIExpression()), !dbg !14104
  store %struct.ListBase* %fmodifiers, %struct.ListBase** %fmodifiers.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %fmodifiers.addr, metadata !14105, metadata !DIExpression()), !dbg !14106
  call void @llvm.dbg.declare(metadata %struct.FModifier** %fcm, metadata !14107, metadata !DIExpression()), !dbg !14124
  %0 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !14125
  %1 = load %struct.ListBase*, %struct.ListBase** %fmodifiers.addr, align 8, !dbg !14126
  call void @writelist(%struct.WriteData* %0, i32 1096040772, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.63, i64 0, i64 0), %struct.ListBase* %1), !dbg !14127
  %2 = load %struct.ListBase*, %struct.ListBase** %fmodifiers.addr, align 8, !dbg !14128
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %2, i32 0, i32 0, !dbg !14130
  %3 = load i8*, i8** %first, align 8, !dbg !14130
  %4 = bitcast i8* %3 to %struct.FModifier*, !dbg !14128
  store %struct.FModifier* %4, %struct.FModifier** %fcm, align 8, !dbg !14131
  br label %for.cond, !dbg !14132

for.cond:                                         ; preds = %for.inc, %entry
  %5 = load %struct.FModifier*, %struct.FModifier** %fcm, align 8, !dbg !14133
  %tobool = icmp ne %struct.FModifier* %5, null, !dbg !14135
  br i1 %tobool, label %for.body, label %for.end, !dbg !14135

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.FModifierTypeInfo** %fmi, metadata !14136, metadata !DIExpression()), !dbg !14177
  %6 = load %struct.FModifier*, %struct.FModifier** %fcm, align 8, !dbg !14178
  %call = call %struct.FModifierTypeInfo* @fmodifier_get_typeinfo(%struct.FModifier* %6), !dbg !14179
  store %struct.FModifierTypeInfo* %call, %struct.FModifierTypeInfo** %fmi, align 8, !dbg !14177
  %7 = load %struct.FModifierTypeInfo*, %struct.FModifierTypeInfo** %fmi, align 8, !dbg !14180
  %tobool1 = icmp ne %struct.FModifierTypeInfo* %7, null, !dbg !14180
  br i1 %tobool1, label %land.lhs.true, label %if.end22, !dbg !14182

land.lhs.true:                                    ; preds = %for.body
  %8 = load %struct.FModifier*, %struct.FModifier** %fcm, align 8, !dbg !14183
  %data = getelementptr inbounds %struct.FModifier, %struct.FModifier* %8, i32 0, i32 2, !dbg !14184
  %9 = load i8*, i8** %data, align 8, !dbg !14184
  %tobool2 = icmp ne i8* %9, null, !dbg !14183
  br i1 %tobool2, label %if.then, label %if.end22, !dbg !14185

if.then:                                          ; preds = %land.lhs.true
  %10 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !14186
  %11 = load %struct.FModifierTypeInfo*, %struct.FModifierTypeInfo** %fmi, align 8, !dbg !14188
  %structName = getelementptr inbounds %struct.FModifierTypeInfo, %struct.FModifierTypeInfo* %11, i32 0, i32 5, !dbg !14189
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %structName, i64 0, i64 0, !dbg !14188
  %12 = load %struct.FModifier*, %struct.FModifier** %fcm, align 8, !dbg !14190
  %data3 = getelementptr inbounds %struct.FModifier, %struct.FModifier* %12, i32 0, i32 2, !dbg !14191
  %13 = load i8*, i8** %data3, align 8, !dbg !14191
  call void @writestruct(%struct.WriteData* %10, i32 1096040772, i8* %arraydecay, i32 1, i8* %13), !dbg !14192
  %14 = load %struct.FModifier*, %struct.FModifier** %fcm, align 8, !dbg !14193
  %type = getelementptr inbounds %struct.FModifier, %struct.FModifier* %14, i32 0, i32 4, !dbg !14194
  %15 = load i16, i16* %type, align 8, !dbg !14194
  %conv = sext i16 %15 to i32, !dbg !14193
  switch i32 %conv, label %sw.epilog [
    i32 1, label %sw.bb
    i32 3, label %sw.bb11
    i32 7, label %sw.bb19
  ], !dbg !14195

sw.bb:                                            ; preds = %if.then
  call void @llvm.dbg.declare(metadata %struct.FMod_Generator** %data4, metadata !14196, metadata !DIExpression()), !dbg !14199
  %16 = load %struct.FModifier*, %struct.FModifier** %fcm, align 8, !dbg !14200
  %data5 = getelementptr inbounds %struct.FModifier, %struct.FModifier* %16, i32 0, i32 2, !dbg !14201
  %17 = load i8*, i8** %data5, align 8, !dbg !14201
  %18 = bitcast i8* %17 to %struct.FMod_Generator*, !dbg !14202
  store %struct.FMod_Generator* %18, %struct.FMod_Generator** %data4, align 8, !dbg !14199
  %19 = load %struct.FMod_Generator*, %struct.FMod_Generator** %data4, align 8, !dbg !14203
  %coefficients = getelementptr inbounds %struct.FMod_Generator, %struct.FMod_Generator* %19, i32 0, i32 0, !dbg !14205
  %20 = load float*, float** %coefficients, align 8, !dbg !14205
  %tobool6 = icmp ne float* %20, null, !dbg !14203
  br i1 %tobool6, label %if.then7, label %if.end, !dbg !14206

if.then7:                                         ; preds = %sw.bb
  %21 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !14207
  %22 = load %struct.FMod_Generator*, %struct.FMod_Generator** %data4, align 8, !dbg !14208
  %arraysize = getelementptr inbounds %struct.FMod_Generator, %struct.FMod_Generator* %22, i32 0, i32 1, !dbg !14209
  %23 = load i32, i32* %arraysize, align 8, !dbg !14209
  %conv8 = zext i32 %23 to i64, !dbg !14210
  %mul = mul i64 4, %conv8, !dbg !14211
  %conv9 = trunc i64 %mul to i32, !dbg !14212
  %24 = load %struct.FMod_Generator*, %struct.FMod_Generator** %data4, align 8, !dbg !14213
  %coefficients10 = getelementptr inbounds %struct.FMod_Generator, %struct.FMod_Generator* %24, i32 0, i32 0, !dbg !14214
  %25 = load float*, float** %coefficients10, align 8, !dbg !14214
  %26 = bitcast float* %25 to i8*, !dbg !14213
  call void @writedata(%struct.WriteData* %21, i32 1096040772, i32 %conv9, i8* %26), !dbg !14215
  br label %if.end, !dbg !14215

if.end:                                           ; preds = %if.then7, %sw.bb
  br label %sw.epilog, !dbg !14216

sw.bb11:                                          ; preds = %if.then
  call void @llvm.dbg.declare(metadata %struct.FMod_Envelope** %data12, metadata !14217, metadata !DIExpression()), !dbg !14219
  %27 = load %struct.FModifier*, %struct.FModifier** %fcm, align 8, !dbg !14220
  %data13 = getelementptr inbounds %struct.FModifier, %struct.FModifier* %27, i32 0, i32 2, !dbg !14221
  %28 = load i8*, i8** %data13, align 8, !dbg !14221
  %29 = bitcast i8* %28 to %struct.FMod_Envelope*, !dbg !14222
  store %struct.FMod_Envelope* %29, %struct.FMod_Envelope** %data12, align 8, !dbg !14219
  %30 = load %struct.FMod_Envelope*, %struct.FMod_Envelope** %data12, align 8, !dbg !14223
  %data14 = getelementptr inbounds %struct.FMod_Envelope, %struct.FMod_Envelope* %30, i32 0, i32 0, !dbg !14225
  %31 = load %struct.FCM_EnvelopeData*, %struct.FCM_EnvelopeData** %data14, align 8, !dbg !14225
  %tobool15 = icmp ne %struct.FCM_EnvelopeData* %31, null, !dbg !14223
  br i1 %tobool15, label %if.then16, label %if.end18, !dbg !14226

if.then16:                                        ; preds = %sw.bb11
  %32 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !14227
  %33 = load %struct.FMod_Envelope*, %struct.FMod_Envelope** %data12, align 8, !dbg !14228
  %totvert = getelementptr inbounds %struct.FMod_Envelope, %struct.FMod_Envelope* %33, i32 0, i32 1, !dbg !14229
  %34 = load i32, i32* %totvert, align 8, !dbg !14229
  %35 = load %struct.FMod_Envelope*, %struct.FMod_Envelope** %data12, align 8, !dbg !14230
  %data17 = getelementptr inbounds %struct.FMod_Envelope, %struct.FMod_Envelope* %35, i32 0, i32 0, !dbg !14231
  %36 = load %struct.FCM_EnvelopeData*, %struct.FCM_EnvelopeData** %data17, align 8, !dbg !14231
  %37 = bitcast %struct.FCM_EnvelopeData* %36 to i8*, !dbg !14230
  call void @writestruct(%struct.WriteData* %32, i32 1096040772, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.64, i64 0, i64 0), i32 %34, i8* %37), !dbg !14232
  br label %if.end18, !dbg !14232

if.end18:                                         ; preds = %if.then16, %sw.bb11
  br label %sw.epilog, !dbg !14233

sw.bb19:                                          ; preds = %if.then
  call void @llvm.dbg.declare(metadata %struct.FMod_Python** %data20, metadata !14234, metadata !DIExpression()), !dbg !14236
  %38 = load %struct.FModifier*, %struct.FModifier** %fcm, align 8, !dbg !14237
  %data21 = getelementptr inbounds %struct.FModifier, %struct.FModifier* %38, i32 0, i32 2, !dbg !14238
  %39 = load i8*, i8** %data21, align 8, !dbg !14238
  %40 = bitcast i8* %39 to %struct.FMod_Python*, !dbg !14239
  store %struct.FMod_Python* %40, %struct.FMod_Python** %data20, align 8, !dbg !14236
  %41 = load %struct.FMod_Python*, %struct.FMod_Python** %data20, align 8, !dbg !14240
  %prop = getelementptr inbounds %struct.FMod_Python, %struct.FMod_Python* %41, i32 0, i32 1, !dbg !14241
  %42 = load %struct.IDProperty*, %struct.IDProperty** %prop, align 8, !dbg !14241
  %43 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !14242
  %44 = bitcast %struct.WriteData* %43 to i8*, !dbg !14242
  call void @IDP_WriteProperty(%struct.IDProperty* %42, i8* %44), !dbg !14243
  br label %sw.epilog, !dbg !14244

sw.epilog:                                        ; preds = %if.then, %sw.bb19, %if.end18, %if.end
  br label %if.end22, !dbg !14245

if.end22:                                         ; preds = %sw.epilog, %land.lhs.true, %for.body
  br label %for.inc, !dbg !14246

for.inc:                                          ; preds = %if.end22
  %45 = load %struct.FModifier*, %struct.FModifier** %fcm, align 8, !dbg !14247
  %next = getelementptr inbounds %struct.FModifier, %struct.FModifier* %45, i32 0, i32 0, !dbg !14248
  %46 = load %struct.FModifier*, %struct.FModifier** %next, align 8, !dbg !14248
  store %struct.FModifier* %46, %struct.FModifier** %fcm, align 8, !dbg !14249
  br label %for.cond, !dbg !14250, !llvm.loop !14251

for.end:                                          ; preds = %for.cond
  ret void, !dbg !14253
}

declare dso_local %struct.FModifierTypeInfo* @fmodifier_get_typeinfo(%struct.FModifier*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @write_nlastrips(%struct.WriteData* %wd, %struct.ListBase* %strips) #0 !dbg !14254 {
entry:
  %wd.addr = alloca %struct.WriteData*, align 8
  %strips.addr = alloca %struct.ListBase*, align 8
  %strip = alloca %struct.NlaStrip*, align 8
  store %struct.WriteData* %wd, %struct.WriteData** %wd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WriteData** %wd.addr, metadata !14255, metadata !DIExpression()), !dbg !14256
  store %struct.ListBase* %strips, %struct.ListBase** %strips.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %strips.addr, metadata !14257, metadata !DIExpression()), !dbg !14258
  call void @llvm.dbg.declare(metadata %struct.NlaStrip** %strip, metadata !14259, metadata !DIExpression()), !dbg !14260
  %0 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !14261
  %1 = load %struct.ListBase*, %struct.ListBase** %strips.addr, align 8, !dbg !14262
  call void @writelist(%struct.WriteData* %0, i32 1096040772, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.66, i64 0, i64 0), %struct.ListBase* %1), !dbg !14263
  %2 = load %struct.ListBase*, %struct.ListBase** %strips.addr, align 8, !dbg !14264
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %2, i32 0, i32 0, !dbg !14266
  %3 = load i8*, i8** %first, align 8, !dbg !14266
  %4 = bitcast i8* %3 to %struct.NlaStrip*, !dbg !14264
  store %struct.NlaStrip* %4, %struct.NlaStrip** %strip, align 8, !dbg !14267
  br label %for.cond, !dbg !14268

for.cond:                                         ; preds = %for.inc, %entry
  %5 = load %struct.NlaStrip*, %struct.NlaStrip** %strip, align 8, !dbg !14269
  %tobool = icmp ne %struct.NlaStrip* %5, null, !dbg !14271
  br i1 %tobool, label %for.body, label %for.end, !dbg !14271

for.body:                                         ; preds = %for.cond
  %6 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !14272
  %7 = load %struct.NlaStrip*, %struct.NlaStrip** %strip, align 8, !dbg !14274
  %fcurves = getelementptr inbounds %struct.NlaStrip, %struct.NlaStrip* %7, i32 0, i32 5, !dbg !14275
  call void @write_fcurves(%struct.WriteData* %6, %struct.ListBase* %fcurves), !dbg !14276
  %8 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !14277
  %9 = load %struct.NlaStrip*, %struct.NlaStrip** %strip, align 8, !dbg !14278
  %modifiers = getelementptr inbounds %struct.NlaStrip, %struct.NlaStrip* %9, i32 0, i32 6, !dbg !14279
  call void @write_fmodifiers(%struct.WriteData* %8, %struct.ListBase* %modifiers), !dbg !14280
  %10 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !14281
  %11 = load %struct.NlaStrip*, %struct.NlaStrip** %strip, align 8, !dbg !14282
  %strips1 = getelementptr inbounds %struct.NlaStrip, %struct.NlaStrip* %11, i32 0, i32 2, !dbg !14283
  call void @write_nlastrips(%struct.WriteData* %10, %struct.ListBase* %strips1), !dbg !14284
  br label %for.inc, !dbg !14285

for.inc:                                          ; preds = %for.body
  %12 = load %struct.NlaStrip*, %struct.NlaStrip** %strip, align 8, !dbg !14286
  %next = getelementptr inbounds %struct.NlaStrip, %struct.NlaStrip* %12, i32 0, i32 0, !dbg !14287
  %13 = load %struct.NlaStrip*, %struct.NlaStrip** %next, align 8, !dbg !14287
  store %struct.NlaStrip* %13, %struct.NlaStrip** %strip, align 8, !dbg !14288
  br label %for.cond, !dbg !14289, !llvm.loop !14290

for.end:                                          ; preds = %for.cond
  ret void, !dbg !14292
}

; Function Attrs: noinline nounwind uwtable
define internal void @write_keyingsets(%struct.WriteData* %wd, %struct.ListBase* %list) #0 !dbg !14293 {
entry:
  %wd.addr = alloca %struct.WriteData*, align 8
  %list.addr = alloca %struct.ListBase*, align 8
  %ks = alloca %struct.KeyingSet*, align 8
  %ksp = alloca %struct.KS_Path*, align 8
  store %struct.WriteData* %wd, %struct.WriteData** %wd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WriteData** %wd.addr, metadata !14294, metadata !DIExpression()), !dbg !14295
  store %struct.ListBase* %list, %struct.ListBase** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %list.addr, metadata !14296, metadata !DIExpression()), !dbg !14297
  call void @llvm.dbg.declare(metadata %struct.KeyingSet** %ks, metadata !14298, metadata !DIExpression()), !dbg !14317
  call void @llvm.dbg.declare(metadata %struct.KS_Path** %ksp, metadata !14318, metadata !DIExpression()), !dbg !14335
  %0 = load %struct.ListBase*, %struct.ListBase** %list.addr, align 8, !dbg !14336
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %0, i32 0, i32 0, !dbg !14338
  %1 = load i8*, i8** %first, align 8, !dbg !14338
  %2 = bitcast i8* %1 to %struct.KeyingSet*, !dbg !14336
  store %struct.KeyingSet* %2, %struct.KeyingSet** %ks, align 8, !dbg !14339
  br label %for.cond, !dbg !14340

for.cond:                                         ; preds = %for.inc8, %entry
  %3 = load %struct.KeyingSet*, %struct.KeyingSet** %ks, align 8, !dbg !14341
  %tobool = icmp ne %struct.KeyingSet* %3, null, !dbg !14343
  br i1 %tobool, label %for.body, label %for.end10, !dbg !14343

for.body:                                         ; preds = %for.cond
  %4 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !14344
  %5 = load %struct.KeyingSet*, %struct.KeyingSet** %ks, align 8, !dbg !14346
  %6 = bitcast %struct.KeyingSet* %5 to i8*, !dbg !14346
  call void @writestruct(%struct.WriteData* %4, i32 1096040772, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.108, i64 0, i64 0), i32 1, i8* %6), !dbg !14347
  %7 = load %struct.KeyingSet*, %struct.KeyingSet** %ks, align 8, !dbg !14348
  %paths = getelementptr inbounds %struct.KeyingSet, %struct.KeyingSet* %7, i32 0, i32 2, !dbg !14350
  %first1 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %paths, i32 0, i32 0, !dbg !14351
  %8 = load i8*, i8** %first1, align 8, !dbg !14351
  %9 = bitcast i8* %8 to %struct.KS_Path*, !dbg !14348
  store %struct.KS_Path* %9, %struct.KS_Path** %ksp, align 8, !dbg !14352
  br label %for.cond2, !dbg !14353

for.cond2:                                        ; preds = %for.inc, %for.body
  %10 = load %struct.KS_Path*, %struct.KS_Path** %ksp, align 8, !dbg !14354
  %tobool3 = icmp ne %struct.KS_Path* %10, null, !dbg !14356
  br i1 %tobool3, label %for.body4, label %for.end, !dbg !14356

for.body4:                                        ; preds = %for.cond2
  %11 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !14357
  %12 = load %struct.KS_Path*, %struct.KS_Path** %ksp, align 8, !dbg !14359
  %13 = bitcast %struct.KS_Path* %12 to i8*, !dbg !14359
  call void @writestruct(%struct.WriteData* %11, i32 1096040772, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.109, i64 0, i64 0), i32 1, i8* %13), !dbg !14360
  %14 = load %struct.KS_Path*, %struct.KS_Path** %ksp, align 8, !dbg !14361
  %rna_path = getelementptr inbounds %struct.KS_Path, %struct.KS_Path* %14, i32 0, i32 7, !dbg !14363
  %15 = load i8*, i8** %rna_path, align 8, !dbg !14363
  %tobool5 = icmp ne i8* %15, null, !dbg !14361
  br i1 %tobool5, label %if.then, label %if.end, !dbg !14364

if.then:                                          ; preds = %for.body4
  %16 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !14365
  %17 = load %struct.KS_Path*, %struct.KS_Path** %ksp, align 8, !dbg !14366
  %rna_path6 = getelementptr inbounds %struct.KS_Path, %struct.KS_Path* %17, i32 0, i32 7, !dbg !14367
  %18 = load i8*, i8** %rna_path6, align 8, !dbg !14367
  %call = call i64 @strlen(i8* %18) #9, !dbg !14368
  %add = add i64 %call, 1, !dbg !14369
  %conv = trunc i64 %add to i32, !dbg !14368
  %19 = load %struct.KS_Path*, %struct.KS_Path** %ksp, align 8, !dbg !14370
  %rna_path7 = getelementptr inbounds %struct.KS_Path, %struct.KS_Path* %19, i32 0, i32 7, !dbg !14371
  %20 = load i8*, i8** %rna_path7, align 8, !dbg !14371
  call void @writedata(%struct.WriteData* %16, i32 1096040772, i32 %conv, i8* %20), !dbg !14372
  br label %if.end, !dbg !14372

if.end:                                           ; preds = %if.then, %for.body4
  br label %for.inc, !dbg !14373

for.inc:                                          ; preds = %if.end
  %21 = load %struct.KS_Path*, %struct.KS_Path** %ksp, align 8, !dbg !14374
  %next = getelementptr inbounds %struct.KS_Path, %struct.KS_Path* %21, i32 0, i32 0, !dbg !14375
  %22 = load %struct.KS_Path*, %struct.KS_Path** %next, align 8, !dbg !14375
  store %struct.KS_Path* %22, %struct.KS_Path** %ksp, align 8, !dbg !14376
  br label %for.cond2, !dbg !14377, !llvm.loop !14378

for.end:                                          ; preds = %for.cond2
  br label %for.inc8, !dbg !14380

for.inc8:                                         ; preds = %for.end
  %23 = load %struct.KeyingSet*, %struct.KeyingSet** %ks, align 8, !dbg !14381
  %next9 = getelementptr inbounds %struct.KeyingSet, %struct.KeyingSet* %23, i32 0, i32 0, !dbg !14382
  %24 = load %struct.KeyingSet*, %struct.KeyingSet** %next9, align 8, !dbg !14382
  store %struct.KeyingSet* %24, %struct.KeyingSet** %ks, align 8, !dbg !14383
  br label %for.cond, !dbg !14384, !llvm.loop !14385

for.end10:                                        ; preds = %for.cond
  ret void, !dbg !14387
}

declare dso_local void @BKE_sequence_iterator_begin(%struct.Editing*, %struct.SeqIterator*, i8 zeroext) #2

declare dso_local void @BKE_sequence_iterator_next(%struct.SeqIterator*) #2

declare dso_local void @BKE_sequence_iterator_end(%struct.SeqIterator*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @write_sequence_modifiers(%struct.WriteData* %wd, %struct.ListBase* %modbase) #0 !dbg !14388 {
entry:
  %wd.addr = alloca %struct.WriteData*, align 8
  %modbase.addr = alloca %struct.ListBase*, align 8
  %smd = alloca %struct.SequenceModifierData*, align 8
  %smti = alloca %struct.SequenceModifierTypeInfo*, align 8
  %cmd = alloca %struct.CurvesModifierData*, align 8
  %hcmd = alloca %struct.HueCorrectModifierData*, align 8
  store %struct.WriteData* %wd, %struct.WriteData** %wd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WriteData** %wd.addr, metadata !14389, metadata !DIExpression()), !dbg !14390
  store %struct.ListBase* %modbase, %struct.ListBase** %modbase.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %modbase.addr, metadata !14391, metadata !DIExpression()), !dbg !14392
  call void @llvm.dbg.declare(metadata %struct.SequenceModifierData** %smd, metadata !14393, metadata !DIExpression()), !dbg !14395
  %0 = load %struct.ListBase*, %struct.ListBase** %modbase.addr, align 8, !dbg !14396
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %0, i32 0, i32 0, !dbg !14398
  %1 = load i8*, i8** %first, align 8, !dbg !14398
  %2 = bitcast i8* %1 to %struct.SequenceModifierData*, !dbg !14396
  store %struct.SequenceModifierData* %2, %struct.SequenceModifierData** %smd, align 8, !dbg !14399
  br label %for.cond, !dbg !14400

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.SequenceModifierData*, %struct.SequenceModifierData** %smd, align 8, !dbg !14401
  %tobool = icmp ne %struct.SequenceModifierData* %3, null, !dbg !14403
  br i1 %tobool, label %for.body, label %for.end, !dbg !14403

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.SequenceModifierTypeInfo** %smti, metadata !14404, metadata !DIExpression()), !dbg !14426
  %4 = load %struct.SequenceModifierData*, %struct.SequenceModifierData** %smd, align 8, !dbg !14427
  %type = getelementptr inbounds %struct.SequenceModifierData, %struct.SequenceModifierData* %4, i32 0, i32 2, !dbg !14428
  %5 = load i32, i32* %type, align 8, !dbg !14428
  %call = call %struct.SequenceModifierTypeInfo* @BKE_sequence_modifier_type_info_get(i32 %5), !dbg !14429
  store %struct.SequenceModifierTypeInfo* %call, %struct.SequenceModifierTypeInfo** %smti, align 8, !dbg !14426
  %6 = load %struct.SequenceModifierTypeInfo*, %struct.SequenceModifierTypeInfo** %smti, align 8, !dbg !14430
  %tobool1 = icmp ne %struct.SequenceModifierTypeInfo* %6, null, !dbg !14430
  br i1 %tobool1, label %if.then, label %if.else9, !dbg !14432

if.then:                                          ; preds = %for.body
  %7 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !14433
  %8 = load %struct.SequenceModifierTypeInfo*, %struct.SequenceModifierTypeInfo** %smti, align 8, !dbg !14435
  %struct_name = getelementptr inbounds %struct.SequenceModifierTypeInfo, %struct.SequenceModifierTypeInfo* %8, i32 0, i32 1, !dbg !14436
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %struct_name, i64 0, i64 0, !dbg !14435
  %9 = load %struct.SequenceModifierData*, %struct.SequenceModifierData** %smd, align 8, !dbg !14437
  %10 = bitcast %struct.SequenceModifierData* %9 to i8*, !dbg !14437
  call void @writestruct(%struct.WriteData* %7, i32 1096040772, i8* %arraydecay, i32 1, i8* %10), !dbg !14438
  %11 = load %struct.SequenceModifierData*, %struct.SequenceModifierData** %smd, align 8, !dbg !14439
  %type2 = getelementptr inbounds %struct.SequenceModifierData, %struct.SequenceModifierData* %11, i32 0, i32 2, !dbg !14441
  %12 = load i32, i32* %type2, align 8, !dbg !14441
  %cmp = icmp eq i32 %12, 2, !dbg !14442
  br i1 %cmp, label %if.then3, label %if.else, !dbg !14443

if.then3:                                         ; preds = %if.then
  call void @llvm.dbg.declare(metadata %struct.CurvesModifierData** %cmd, metadata !14444, metadata !DIExpression()), !dbg !14446
  %13 = load %struct.SequenceModifierData*, %struct.SequenceModifierData** %smd, align 8, !dbg !14447
  %14 = bitcast %struct.SequenceModifierData* %13 to %struct.CurvesModifierData*, !dbg !14448
  store %struct.CurvesModifierData* %14, %struct.CurvesModifierData** %cmd, align 8, !dbg !14446
  %15 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !14449
  %16 = load %struct.CurvesModifierData*, %struct.CurvesModifierData** %cmd, align 8, !dbg !14450
  %curve_mapping = getelementptr inbounds %struct.CurvesModifierData, %struct.CurvesModifierData* %16, i32 0, i32 1, !dbg !14451
  call void @write_curvemapping(%struct.WriteData* %15, %struct.CurveMapping* %curve_mapping), !dbg !14452
  br label %if.end8, !dbg !14453

if.else:                                          ; preds = %if.then
  %17 = load %struct.SequenceModifierData*, %struct.SequenceModifierData** %smd, align 8, !dbg !14454
  %type4 = getelementptr inbounds %struct.SequenceModifierData, %struct.SequenceModifierData* %17, i32 0, i32 2, !dbg !14456
  %18 = load i32, i32* %type4, align 8, !dbg !14456
  %cmp5 = icmp eq i32 %18, 3, !dbg !14457
  br i1 %cmp5, label %if.then6, label %if.end, !dbg !14458

if.then6:                                         ; preds = %if.else
  call void @llvm.dbg.declare(metadata %struct.HueCorrectModifierData** %hcmd, metadata !14459, metadata !DIExpression()), !dbg !14461
  %19 = load %struct.SequenceModifierData*, %struct.SequenceModifierData** %smd, align 8, !dbg !14462
  %20 = bitcast %struct.SequenceModifierData* %19 to %struct.HueCorrectModifierData*, !dbg !14463
  store %struct.HueCorrectModifierData* %20, %struct.HueCorrectModifierData** %hcmd, align 8, !dbg !14461
  %21 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !14464
  %22 = load %struct.HueCorrectModifierData*, %struct.HueCorrectModifierData** %hcmd, align 8, !dbg !14465
  %curve_mapping7 = getelementptr inbounds %struct.HueCorrectModifierData, %struct.HueCorrectModifierData* %22, i32 0, i32 1, !dbg !14466
  call void @write_curvemapping(%struct.WriteData* %21, %struct.CurveMapping* %curve_mapping7), !dbg !14467
  br label %if.end, !dbg !14468

if.end:                                           ; preds = %if.then6, %if.else
  br label %if.end8

if.end8:                                          ; preds = %if.end, %if.then3
  br label %if.end10, !dbg !14469

if.else9:                                         ; preds = %for.body
  %23 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !14470
  %24 = load %struct.SequenceModifierData*, %struct.SequenceModifierData** %smd, align 8, !dbg !14472
  %25 = bitcast %struct.SequenceModifierData* %24 to i8*, !dbg !14472
  call void @writestruct(%struct.WriteData* %23, i32 1096040772, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.110, i64 0, i64 0), i32 1, i8* %25), !dbg !14473
  br label %if.end10

if.end10:                                         ; preds = %if.else9, %if.end8
  br label %for.inc, !dbg !14474

for.inc:                                          ; preds = %if.end10
  %26 = load %struct.SequenceModifierData*, %struct.SequenceModifierData** %smd, align 8, !dbg !14475
  %next = getelementptr inbounds %struct.SequenceModifierData, %struct.SequenceModifierData* %26, i32 0, i32 0, !dbg !14476
  %27 = load %struct.SequenceModifierData*, %struct.SequenceModifierData** %next, align 8, !dbg !14476
  store %struct.SequenceModifierData* %27, %struct.SequenceModifierData** %smd, align 8, !dbg !14477
  br label %for.cond, !dbg !14478, !llvm.loop !14479

for.end:                                          ; preds = %for.cond
  ret void, !dbg !14481
}

; Function Attrs: noinline nounwind uwtable
define internal void @write_nodetree(%struct.WriteData* %wd, %struct.bNodeTree* %ntree) #0 !dbg !14482 {
entry:
  %wd.addr = alloca %struct.WriteData*, align 8
  %ntree.addr = alloca %struct.bNodeTree*, align 8
  %node = alloca %struct.bNode*, align 8
  %sock = alloca %struct.bNodeSocket*, align 8
  %link = alloca %struct.bNodeLink*, align 8
  %nss = alloca %struct.NodeShaderScript*, align 8
  store %struct.WriteData* %wd, %struct.WriteData** %wd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WriteData** %wd.addr, metadata !14485, metadata !DIExpression()), !dbg !14486
  store %struct.bNodeTree* %ntree, %struct.bNodeTree** %ntree.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeTree** %ntree.addr, metadata !14487, metadata !DIExpression()), !dbg !14488
  call void @llvm.dbg.declare(metadata %struct.bNode** %node, metadata !14489, metadata !DIExpression()), !dbg !14490
  call void @llvm.dbg.declare(metadata %struct.bNodeSocket** %sock, metadata !14491, metadata !DIExpression()), !dbg !14492
  call void @llvm.dbg.declare(metadata %struct.bNodeLink** %link, metadata !14493, metadata !DIExpression()), !dbg !14494
  %0 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !14495
  %adt = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %0, i32 0, i32 1, !dbg !14497
  %1 = load %struct.AnimData*, %struct.AnimData** %adt, align 8, !dbg !14497
  %tobool = icmp ne %struct.AnimData* %1, null, !dbg !14495
  br i1 %tobool, label %if.then, label %if.end, !dbg !14498

if.then:                                          ; preds = %entry
  %2 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !14499
  %3 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !14500
  %adt1 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %3, i32 0, i32 1, !dbg !14501
  %4 = load %struct.AnimData*, %struct.AnimData** %adt1, align 8, !dbg !14501
  call void @write_animdata(%struct.WriteData* %2, %struct.AnimData* %4), !dbg !14502
  br label %if.end, !dbg !14502

if.end:                                           ; preds = %if.then, %entry
  %5 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !14503
  %nodes = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %5, i32 0, i32 7, !dbg !14505
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %nodes, i32 0, i32 0, !dbg !14506
  %6 = load i8*, i8** %first, align 8, !dbg !14506
  %7 = bitcast i8* %6 to %struct.bNode*, !dbg !14503
  store %struct.bNode* %7, %struct.bNode** %node, align 8, !dbg !14507
  br label %for.cond, !dbg !14508

for.cond:                                         ; preds = %for.inc146, %if.end
  %8 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !14509
  %tobool2 = icmp ne %struct.bNode* %8, null, !dbg !14511
  br i1 %tobool2, label %for.body, label %for.end148, !dbg !14511

for.body:                                         ; preds = %for.cond
  %9 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !14512
  %10 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !14514
  %11 = bitcast %struct.bNode* %10 to i8*, !dbg !14514
  call void @writestruct(%struct.WriteData* %9, i32 1096040772, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.111, i64 0, i64 0), i32 1, i8* %11), !dbg !14515
  %12 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !14516
  %prop = getelementptr inbounds %struct.bNode, %struct.bNode* %12, i32 0, i32 3, !dbg !14518
  %13 = load %struct.IDProperty*, %struct.IDProperty** %prop, align 8, !dbg !14518
  %tobool3 = icmp ne %struct.IDProperty* %13, null, !dbg !14516
  br i1 %tobool3, label %if.then4, label %if.end6, !dbg !14519

if.then4:                                         ; preds = %for.body
  %14 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !14520
  %prop5 = getelementptr inbounds %struct.bNode, %struct.bNode* %14, i32 0, i32 3, !dbg !14521
  %15 = load %struct.IDProperty*, %struct.IDProperty** %prop5, align 8, !dbg !14521
  %16 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !14522
  %17 = bitcast %struct.WriteData* %16 to i8*, !dbg !14522
  call void @IDP_WriteProperty(%struct.IDProperty* %15, i8* %17), !dbg !14523
  br label %if.end6, !dbg !14523

if.end6:                                          ; preds = %if.then4, %for.body
  %18 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !14524
  %inputs = getelementptr inbounds %struct.bNode, %struct.bNode* %18, i32 0, i32 17, !dbg !14526
  %first7 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %inputs, i32 0, i32 0, !dbg !14527
  %19 = load i8*, i8** %first7, align 8, !dbg !14527
  %20 = bitcast i8* %19 to %struct.bNodeSocket*, !dbg !14524
  store %struct.bNodeSocket* %20, %struct.bNodeSocket** %sock, align 8, !dbg !14528
  br label %for.cond8, !dbg !14529

for.cond8:                                        ; preds = %for.inc, %if.end6
  %21 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !14530
  %tobool9 = icmp ne %struct.bNodeSocket* %21, null, !dbg !14532
  br i1 %tobool9, label %for.body10, label %for.end, !dbg !14532

for.body10:                                       ; preds = %for.cond8
  %22 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !14533
  %23 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !14534
  %24 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !14535
  %25 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !14536
  call void @write_node_socket(%struct.WriteData* %22, %struct.bNodeTree* %23, %struct.bNode* %24, %struct.bNodeSocket* %25), !dbg !14537
  br label %for.inc, !dbg !14537

for.inc:                                          ; preds = %for.body10
  %26 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !14538
  %next = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %26, i32 0, i32 0, !dbg !14539
  %27 = load %struct.bNodeSocket*, %struct.bNodeSocket** %next, align 8, !dbg !14539
  store %struct.bNodeSocket* %27, %struct.bNodeSocket** %sock, align 8, !dbg !14540
  br label %for.cond8, !dbg !14541, !llvm.loop !14542

for.end:                                          ; preds = %for.cond8
  %28 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !14544
  %outputs = getelementptr inbounds %struct.bNode, %struct.bNode* %28, i32 0, i32 18, !dbg !14546
  %first11 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %outputs, i32 0, i32 0, !dbg !14547
  %29 = load i8*, i8** %first11, align 8, !dbg !14547
  %30 = bitcast i8* %29 to %struct.bNodeSocket*, !dbg !14544
  store %struct.bNodeSocket* %30, %struct.bNodeSocket** %sock, align 8, !dbg !14548
  br label %for.cond12, !dbg !14549

for.cond12:                                       ; preds = %for.inc15, %for.end
  %31 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !14550
  %tobool13 = icmp ne %struct.bNodeSocket* %31, null, !dbg !14552
  br i1 %tobool13, label %for.body14, label %for.end17, !dbg !14552

for.body14:                                       ; preds = %for.cond12
  %32 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !14553
  %33 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !14554
  %34 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !14555
  %35 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !14556
  call void @write_node_socket(%struct.WriteData* %32, %struct.bNodeTree* %33, %struct.bNode* %34, %struct.bNodeSocket* %35), !dbg !14557
  br label %for.inc15, !dbg !14557

for.inc15:                                        ; preds = %for.body14
  %36 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !14558
  %next16 = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %36, i32 0, i32 0, !dbg !14559
  %37 = load %struct.bNodeSocket*, %struct.bNodeSocket** %next16, align 8, !dbg !14559
  store %struct.bNodeSocket* %37, %struct.bNodeSocket** %sock, align 8, !dbg !14560
  br label %for.cond12, !dbg !14561, !llvm.loop !14562

for.end17:                                        ; preds = %for.cond12
  %38 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !14564
  %internal_links = getelementptr inbounds %struct.bNode, %struct.bNode* %38, i32 0, i32 23, !dbg !14566
  %first18 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %internal_links, i32 0, i32 0, !dbg !14567
  %39 = load i8*, i8** %first18, align 8, !dbg !14567
  %40 = bitcast i8* %39 to %struct.bNodeLink*, !dbg !14564
  store %struct.bNodeLink* %40, %struct.bNodeLink** %link, align 8, !dbg !14568
  br label %for.cond19, !dbg !14569

for.cond19:                                       ; preds = %for.inc22, %for.end17
  %41 = load %struct.bNodeLink*, %struct.bNodeLink** %link, align 8, !dbg !14570
  %tobool20 = icmp ne %struct.bNodeLink* %41, null, !dbg !14572
  br i1 %tobool20, label %for.body21, label %for.end24, !dbg !14572

for.body21:                                       ; preds = %for.cond19
  %42 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !14573
  %43 = load %struct.bNodeLink*, %struct.bNodeLink** %link, align 8, !dbg !14574
  %44 = bitcast %struct.bNodeLink* %43 to i8*, !dbg !14574
  call void @writestruct(%struct.WriteData* %42, i32 1096040772, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.112, i64 0, i64 0), i32 1, i8* %44), !dbg !14575
  br label %for.inc22, !dbg !14575

for.inc22:                                        ; preds = %for.body21
  %45 = load %struct.bNodeLink*, %struct.bNodeLink** %link, align 8, !dbg !14576
  %next23 = getelementptr inbounds %struct.bNodeLink, %struct.bNodeLink* %45, i32 0, i32 0, !dbg !14577
  %46 = load %struct.bNodeLink*, %struct.bNodeLink** %next23, align 8, !dbg !14577
  store %struct.bNodeLink* %46, %struct.bNodeLink** %link, align 8, !dbg !14578
  br label %for.cond19, !dbg !14579, !llvm.loop !14580

for.end24:                                        ; preds = %for.cond19
  %47 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !14582
  %storage = getelementptr inbounds %struct.bNode, %struct.bNode* %47, i32 0, i32 21, !dbg !14584
  %48 = load i8*, i8** %storage, align 8, !dbg !14584
  %tobool25 = icmp ne i8* %48, null, !dbg !14582
  br i1 %tobool25, label %if.then26, label %if.end115, !dbg !14585

if.then26:                                        ; preds = %for.end24
  %49 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !14586
  %type = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %49, i32 0, i32 9, !dbg !14589
  %50 = load i32, i32* %type, align 8, !dbg !14589
  %cmp = icmp eq i32 %50, 0, !dbg !14590
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !14591

land.lhs.true:                                    ; preds = %if.then26
  %51 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !14592
  %type27 = getelementptr inbounds %struct.bNode, %struct.bNode* %51, i32 0, i32 8, !dbg !14593
  %52 = load i16, i16* %type27, align 4, !dbg !14593
  %conv = sext i16 %52 to i32, !dbg !14592
  %cmp28 = icmp eq i32 %conv, 110, !dbg !14594
  br i1 %cmp28, label %if.then34, label %lor.lhs.false, !dbg !14595

lor.lhs.false:                                    ; preds = %land.lhs.true
  %53 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !14596
  %type30 = getelementptr inbounds %struct.bNode, %struct.bNode* %53, i32 0, i32 8, !dbg !14597
  %54 = load i16, i16* %type30, align 4, !dbg !14597
  %conv31 = sext i16 %54 to i32, !dbg !14596
  %cmp32 = icmp eq i32 %conv31, 111, !dbg !14598
  br i1 %cmp32, label %if.then34, label %if.else, !dbg !14599

if.then34:                                        ; preds = %lor.lhs.false, %land.lhs.true
  %55 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !14600
  %56 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !14601
  %storage35 = getelementptr inbounds %struct.bNode, %struct.bNode* %56, i32 0, i32 21, !dbg !14602
  %57 = load i8*, i8** %storage35, align 8, !dbg !14602
  %58 = bitcast i8* %57 to %struct.CurveMapping*, !dbg !14601
  call void @write_curvemapping(%struct.WriteData* %55, %struct.CurveMapping* %58), !dbg !14603
  br label %if.end114, !dbg !14603

if.else:                                          ; preds = %lor.lhs.false, %if.then26
  %59 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !14604
  %type36 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %59, i32 0, i32 9, !dbg !14606
  %60 = load i32, i32* %type36, align 8, !dbg !14606
  %cmp37 = icmp eq i32 %60, 0, !dbg !14607
  br i1 %cmp37, label %land.lhs.true39, label %if.else53, !dbg !14608

land.lhs.true39:                                  ; preds = %if.else
  %61 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !14609
  %type40 = getelementptr inbounds %struct.bNode, %struct.bNode* %61, i32 0, i32 8, !dbg !14610
  %62 = load i16, i16* %type40, align 4, !dbg !14610
  %conv41 = sext i16 %62 to i32, !dbg !14609
  %cmp42 = icmp eq i32 %conv41, 171, !dbg !14611
  br i1 %cmp42, label %if.then44, label %if.else53, !dbg !14612

if.then44:                                        ; preds = %land.lhs.true39
  call void @llvm.dbg.declare(metadata %struct.NodeShaderScript** %nss, metadata !14613, metadata !DIExpression()), !dbg !14615
  %63 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !14616
  %storage45 = getelementptr inbounds %struct.bNode, %struct.bNode* %63, i32 0, i32 21, !dbg !14617
  %64 = load i8*, i8** %storage45, align 8, !dbg !14617
  %65 = bitcast i8* %64 to %struct.NodeShaderScript*, !dbg !14618
  store %struct.NodeShaderScript* %65, %struct.NodeShaderScript** %nss, align 8, !dbg !14615
  %66 = load %struct.NodeShaderScript*, %struct.NodeShaderScript** %nss, align 8, !dbg !14619
  %bytecode = getelementptr inbounds %struct.NodeShaderScript, %struct.NodeShaderScript* %66, i32 0, i32 4, !dbg !14621
  %67 = load i8*, i8** %bytecode, align 8, !dbg !14621
  %tobool46 = icmp ne i8* %67, null, !dbg !14619
  br i1 %tobool46, label %if.then47, label %if.end51, !dbg !14622

if.then47:                                        ; preds = %if.then44
  %68 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !14623
  %69 = load %struct.NodeShaderScript*, %struct.NodeShaderScript** %nss, align 8, !dbg !14624
  %bytecode48 = getelementptr inbounds %struct.NodeShaderScript, %struct.NodeShaderScript* %69, i32 0, i32 4, !dbg !14625
  %70 = load i8*, i8** %bytecode48, align 8, !dbg !14625
  %call = call i64 @strlen(i8* %70) #9, !dbg !14626
  %add = add i64 %call, 1, !dbg !14627
  %conv49 = trunc i64 %add to i32, !dbg !14626
  %71 = load %struct.NodeShaderScript*, %struct.NodeShaderScript** %nss, align 8, !dbg !14628
  %bytecode50 = getelementptr inbounds %struct.NodeShaderScript, %struct.NodeShaderScript* %71, i32 0, i32 4, !dbg !14629
  %72 = load i8*, i8** %bytecode50, align 8, !dbg !14629
  call void @writedata(%struct.WriteData* %68, i32 1096040772, i32 %conv49, i8* %72), !dbg !14630
  br label %if.end51, !dbg !14630

if.end51:                                         ; preds = %if.then47, %if.then44
  %73 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !14631
  %74 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !14632
  %typeinfo = getelementptr inbounds %struct.bNode, %struct.bNode* %74, i32 0, i32 4, !dbg !14633
  %75 = load %struct.bNodeType*, %struct.bNodeType** %typeinfo, align 8, !dbg !14633
  %storagename = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %75, i32 0, i32 19, !dbg !14634
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %storagename, i64 0, i64 0, !dbg !14632
  %76 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !14635
  %storage52 = getelementptr inbounds %struct.bNode, %struct.bNode* %76, i32 0, i32 21, !dbg !14636
  %77 = load i8*, i8** %storage52, align 8, !dbg !14636
  call void @writestruct(%struct.WriteData* %73, i32 1096040772, i8* %arraydecay, i32 1, i8* %77), !dbg !14637
  br label %if.end113, !dbg !14638

if.else53:                                        ; preds = %land.lhs.true39, %if.else
  %78 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !14639
  %type54 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %78, i32 0, i32 9, !dbg !14641
  %79 = load i32, i32* %type54, align 8, !dbg !14641
  %cmp55 = icmp eq i32 %79, 1, !dbg !14642
  br i1 %cmp55, label %land.lhs.true57, label %if.else79, !dbg !14643

land.lhs.true57:                                  ; preds = %if.else53
  %80 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !14644
  %type58 = getelementptr inbounds %struct.bNode, %struct.bNode* %80, i32 0, i32 8, !dbg !14644
  %81 = load i16, i16* %type58, align 4, !dbg !14644
  %conv59 = sext i16 %81 to i32, !dbg !14644
  %cmp60 = icmp eq i32 %conv59, 214, !dbg !14644
  br i1 %cmp60, label %if.then77, label %lor.lhs.false62, !dbg !14644

lor.lhs.false62:                                  ; preds = %land.lhs.true57
  %82 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !14644
  %type63 = getelementptr inbounds %struct.bNode, %struct.bNode* %82, i32 0, i32 8, !dbg !14644
  %83 = load i16, i16* %type63, align 4, !dbg !14644
  %conv64 = sext i16 %83 to i32, !dbg !14644
  %cmp65 = icmp eq i32 %conv64, 208, !dbg !14644
  br i1 %cmp65, label %if.then77, label %lor.lhs.false67, !dbg !14644

lor.lhs.false67:                                  ; preds = %lor.lhs.false62
  %84 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !14644
  %type68 = getelementptr inbounds %struct.bNode, %struct.bNode* %84, i32 0, i32 8, !dbg !14644
  %85 = load i16, i16* %type68, align 4, !dbg !14644
  %conv69 = sext i16 %85 to i32, !dbg !14644
  %cmp70 = icmp eq i32 %conv69, 209, !dbg !14644
  br i1 %cmp70, label %if.then77, label %lor.lhs.false72, !dbg !14644

lor.lhs.false72:                                  ; preds = %lor.lhs.false67
  %86 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !14644
  %type73 = getelementptr inbounds %struct.bNode, %struct.bNode* %86, i32 0, i32 8, !dbg !14644
  %87 = load i16, i16* %type73, align 4, !dbg !14644
  %conv74 = sext i16 %87 to i32, !dbg !14644
  %cmp75 = icmp eq i32 %conv74, 261, !dbg !14644
  br i1 %cmp75, label %if.then77, label %if.else79, !dbg !14645

if.then77:                                        ; preds = %lor.lhs.false72, %lor.lhs.false67, %lor.lhs.false62, %land.lhs.true57
  %88 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !14646
  %89 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !14647
  %storage78 = getelementptr inbounds %struct.bNode, %struct.bNode* %89, i32 0, i32 21, !dbg !14648
  %90 = load i8*, i8** %storage78, align 8, !dbg !14648
  %91 = bitcast i8* %90 to %struct.CurveMapping*, !dbg !14647
  call void @write_curvemapping(%struct.WriteData* %88, %struct.CurveMapping* %91), !dbg !14649
  br label %if.end112, !dbg !14649

if.else79:                                        ; preds = %lor.lhs.false72, %if.else53
  %92 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !14650
  %type80 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %92, i32 0, i32 9, !dbg !14652
  %93 = load i32, i32* %type80, align 8, !dbg !14652
  %cmp81 = icmp eq i32 %93, 2, !dbg !14653
  br i1 %cmp81, label %land.lhs.true83, label %if.else95, !dbg !14654

land.lhs.true83:                                  ; preds = %if.else79
  %94 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !14655
  %type84 = getelementptr inbounds %struct.bNode, %struct.bNode* %94, i32 0, i32 8, !dbg !14656
  %95 = load i16, i16* %type84, align 4, !dbg !14656
  %conv85 = sext i16 %95 to i32, !dbg !14655
  %cmp86 = icmp eq i32 %conv85, 410, !dbg !14657
  br i1 %cmp86, label %if.then93, label %lor.lhs.false88, !dbg !14658

lor.lhs.false88:                                  ; preds = %land.lhs.true83
  %96 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !14659
  %type89 = getelementptr inbounds %struct.bNode, %struct.bNode* %96, i32 0, i32 8, !dbg !14660
  %97 = load i16, i16* %type89, align 4, !dbg !14660
  %conv90 = sext i16 %97 to i32, !dbg !14659
  %cmp91 = icmp eq i32 %conv90, 413, !dbg !14661
  br i1 %cmp91, label %if.then93, label %if.else95, !dbg !14662

if.then93:                                        ; preds = %lor.lhs.false88, %land.lhs.true83
  %98 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !14663
  %99 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !14664
  %storage94 = getelementptr inbounds %struct.bNode, %struct.bNode* %99, i32 0, i32 21, !dbg !14665
  %100 = load i8*, i8** %storage94, align 8, !dbg !14665
  %101 = bitcast i8* %100 to %struct.CurveMapping*, !dbg !14664
  call void @write_curvemapping(%struct.WriteData* %98, %struct.CurveMapping* %101), !dbg !14666
  br label %if.end111, !dbg !14666

if.else95:                                        ; preds = %lor.lhs.false88, %if.else79
  %102 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !14667
  %type96 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %102, i32 0, i32 9, !dbg !14669
  %103 = load i32, i32* %type96, align 8, !dbg !14669
  %cmp97 = icmp eq i32 %103, 1, !dbg !14670
  br i1 %cmp97, label %land.lhs.true99, label %if.else105, !dbg !14671

land.lhs.true99:                                  ; preds = %if.else95
  %104 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !14672
  %type100 = getelementptr inbounds %struct.bNode, %struct.bNode* %104, i32 0, i32 8, !dbg !14673
  %105 = load i16, i16* %type100, align 4, !dbg !14673
  %conv101 = sext i16 %105 to i32, !dbg !14672
  %cmp102 = icmp eq i32 %conv101, 265, !dbg !14674
  br i1 %cmp102, label %if.then104, label %if.else105, !dbg !14675

if.then104:                                       ; preds = %land.lhs.true99
  br label %if.end110, !dbg !14676

if.else105:                                       ; preds = %land.lhs.true99, %if.else95
  %106 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !14678
  %107 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !14679
  %typeinfo106 = getelementptr inbounds %struct.bNode, %struct.bNode* %107, i32 0, i32 4, !dbg !14680
  %108 = load %struct.bNodeType*, %struct.bNodeType** %typeinfo106, align 8, !dbg !14680
  %storagename107 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %108, i32 0, i32 19, !dbg !14681
  %arraydecay108 = getelementptr inbounds [64 x i8], [64 x i8]* %storagename107, i64 0, i64 0, !dbg !14679
  %109 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !14682
  %storage109 = getelementptr inbounds %struct.bNode, %struct.bNode* %109, i32 0, i32 21, !dbg !14683
  %110 = load i8*, i8** %storage109, align 8, !dbg !14683
  call void @writestruct(%struct.WriteData* %106, i32 1096040772, i8* %arraydecay108, i32 1, i8* %110), !dbg !14684
  br label %if.end110

if.end110:                                        ; preds = %if.else105, %if.then104
  br label %if.end111

if.end111:                                        ; preds = %if.end110, %if.then93
  br label %if.end112

if.end112:                                        ; preds = %if.end111, %if.then77
  br label %if.end113

if.end113:                                        ; preds = %if.end112, %if.end51
  br label %if.end114

if.end114:                                        ; preds = %if.end113, %if.then34
  br label %if.end115, !dbg !14685

if.end115:                                        ; preds = %if.end114, %for.end24
  %111 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !14686
  %type116 = getelementptr inbounds %struct.bNode, %struct.bNode* %111, i32 0, i32 8, !dbg !14688
  %112 = load i16, i16* %type116, align 4, !dbg !14688
  %conv117 = sext i16 %112 to i32, !dbg !14686
  %cmp118 = icmp eq i32 %conv117, 223, !dbg !14689
  br i1 %cmp118, label %if.then120, label %if.end130, !dbg !14690

if.then120:                                       ; preds = %if.end115
  %113 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !14691
  %inputs121 = getelementptr inbounds %struct.bNode, %struct.bNode* %113, i32 0, i32 17, !dbg !14694
  %first122 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %inputs121, i32 0, i32 0, !dbg !14695
  %114 = load i8*, i8** %first122, align 8, !dbg !14695
  %115 = bitcast i8* %114 to %struct.bNodeSocket*, !dbg !14691
  store %struct.bNodeSocket* %115, %struct.bNodeSocket** %sock, align 8, !dbg !14696
  br label %for.cond123, !dbg !14697

for.cond123:                                      ; preds = %for.inc127, %if.then120
  %116 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !14698
  %tobool124 = icmp ne %struct.bNodeSocket* %116, null, !dbg !14700
  br i1 %tobool124, label %for.body125, label %for.end129, !dbg !14700

for.body125:                                      ; preds = %for.cond123
  %117 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !14701
  %118 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !14702
  %storage126 = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %118, i32 0, i32 6, !dbg !14703
  %119 = load i8*, i8** %storage126, align 8, !dbg !14703
  call void @writestruct(%struct.WriteData* %117, i32 1096040772, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.113, i64 0, i64 0), i32 1, i8* %119), !dbg !14704
  br label %for.inc127, !dbg !14704

for.inc127:                                       ; preds = %for.body125
  %120 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !14705
  %next128 = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %120, i32 0, i32 0, !dbg !14706
  %121 = load %struct.bNodeSocket*, %struct.bNodeSocket** %next128, align 8, !dbg !14706
  store %struct.bNodeSocket* %121, %struct.bNodeSocket** %sock, align 8, !dbg !14707
  br label %for.cond123, !dbg !14708, !llvm.loop !14709

for.end129:                                       ; preds = %for.cond123
  br label %if.end130, !dbg !14711

if.end130:                                        ; preds = %for.end129, %if.end115
  %122 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !14712
  %type131 = getelementptr inbounds %struct.bNode, %struct.bNode* %122, i32 0, i32 8, !dbg !14714
  %123 = load i16, i16* %type131, align 4, !dbg !14714
  %conv132 = sext i16 %123 to i32, !dbg !14712
  %cmp133 = icmp eq i32 %conv132, 220, !dbg !14715
  br i1 %cmp133, label %if.then135, label %if.end145, !dbg !14716

if.then135:                                       ; preds = %if.end130
  %124 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !14717
  %outputs136 = getelementptr inbounds %struct.bNode, %struct.bNode* %124, i32 0, i32 18, !dbg !14720
  %first137 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %outputs136, i32 0, i32 0, !dbg !14721
  %125 = load i8*, i8** %first137, align 8, !dbg !14721
  %126 = bitcast i8* %125 to %struct.bNodeSocket*, !dbg !14717
  store %struct.bNodeSocket* %126, %struct.bNodeSocket** %sock, align 8, !dbg !14722
  br label %for.cond138, !dbg !14723

for.cond138:                                      ; preds = %for.inc142, %if.then135
  %127 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !14724
  %tobool139 = icmp ne %struct.bNodeSocket* %127, null, !dbg !14726
  br i1 %tobool139, label %for.body140, label %for.end144, !dbg !14726

for.body140:                                      ; preds = %for.cond138
  %128 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !14727
  %129 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !14728
  %storage141 = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %129, i32 0, i32 6, !dbg !14729
  %130 = load i8*, i8** %storage141, align 8, !dbg !14729
  call void @writestruct(%struct.WriteData* %128, i32 1096040772, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.114, i64 0, i64 0), i32 1, i8* %130), !dbg !14730
  br label %for.inc142, !dbg !14730

for.inc142:                                       ; preds = %for.body140
  %131 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !14731
  %next143 = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %131, i32 0, i32 0, !dbg !14732
  %132 = load %struct.bNodeSocket*, %struct.bNodeSocket** %next143, align 8, !dbg !14732
  store %struct.bNodeSocket* %132, %struct.bNodeSocket** %sock, align 8, !dbg !14733
  br label %for.cond138, !dbg !14734, !llvm.loop !14735

for.end144:                                       ; preds = %for.cond138
  br label %if.end145, !dbg !14737

if.end145:                                        ; preds = %for.end144, %if.end130
  br label %for.inc146, !dbg !14738

for.inc146:                                       ; preds = %if.end145
  %133 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !14739
  %next147 = getelementptr inbounds %struct.bNode, %struct.bNode* %133, i32 0, i32 0, !dbg !14740
  %134 = load %struct.bNode*, %struct.bNode** %next147, align 8, !dbg !14740
  store %struct.bNode* %134, %struct.bNode** %node, align 8, !dbg !14741
  br label %for.cond, !dbg !14742, !llvm.loop !14743

for.end148:                                       ; preds = %for.cond
  %135 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !14745
  %links = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %135, i32 0, i32 8, !dbg !14747
  %first149 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %links, i32 0, i32 0, !dbg !14748
  %136 = load i8*, i8** %first149, align 8, !dbg !14748
  %137 = bitcast i8* %136 to %struct.bNodeLink*, !dbg !14745
  store %struct.bNodeLink* %137, %struct.bNodeLink** %link, align 8, !dbg !14749
  br label %for.cond150, !dbg !14750

for.cond150:                                      ; preds = %for.inc153, %for.end148
  %138 = load %struct.bNodeLink*, %struct.bNodeLink** %link, align 8, !dbg !14751
  %tobool151 = icmp ne %struct.bNodeLink* %138, null, !dbg !14753
  br i1 %tobool151, label %for.body152, label %for.end155, !dbg !14753

for.body152:                                      ; preds = %for.cond150
  %139 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !14754
  %140 = load %struct.bNodeLink*, %struct.bNodeLink** %link, align 8, !dbg !14755
  %141 = bitcast %struct.bNodeLink* %140 to i8*, !dbg !14755
  call void @writestruct(%struct.WriteData* %139, i32 1096040772, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.112, i64 0, i64 0), i32 1, i8* %141), !dbg !14756
  br label %for.inc153, !dbg !14756

for.inc153:                                       ; preds = %for.body152
  %142 = load %struct.bNodeLink*, %struct.bNodeLink** %link, align 8, !dbg !14757
  %next154 = getelementptr inbounds %struct.bNodeLink, %struct.bNodeLink* %142, i32 0, i32 0, !dbg !14758
  %143 = load %struct.bNodeLink*, %struct.bNodeLink** %next154, align 8, !dbg !14758
  store %struct.bNodeLink* %143, %struct.bNodeLink** %link, align 8, !dbg !14759
  br label %for.cond150, !dbg !14760, !llvm.loop !14761

for.end155:                                       ; preds = %for.cond150
  %144 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !14763
  %inputs156 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %144, i32 0, i32 22, !dbg !14765
  %first157 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %inputs156, i32 0, i32 0, !dbg !14766
  %145 = load i8*, i8** %first157, align 8, !dbg !14766
  %146 = bitcast i8* %145 to %struct.bNodeSocket*, !dbg !14763
  store %struct.bNodeSocket* %146, %struct.bNodeSocket** %sock, align 8, !dbg !14767
  br label %for.cond158, !dbg !14768

for.cond158:                                      ; preds = %for.inc161, %for.end155
  %147 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !14769
  %tobool159 = icmp ne %struct.bNodeSocket* %147, null, !dbg !14771
  br i1 %tobool159, label %for.body160, label %for.end163, !dbg !14771

for.body160:                                      ; preds = %for.cond158
  %148 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !14772
  %149 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !14773
  %150 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !14774
  call void @write_node_socket_interface(%struct.WriteData* %148, %struct.bNodeTree* %149, %struct.bNodeSocket* %150), !dbg !14775
  br label %for.inc161, !dbg !14775

for.inc161:                                       ; preds = %for.body160
  %151 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !14776
  %next162 = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %151, i32 0, i32 0, !dbg !14777
  %152 = load %struct.bNodeSocket*, %struct.bNodeSocket** %next162, align 8, !dbg !14777
  store %struct.bNodeSocket* %152, %struct.bNodeSocket** %sock, align 8, !dbg !14778
  br label %for.cond158, !dbg !14779, !llvm.loop !14780

for.end163:                                       ; preds = %for.cond158
  %153 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !14782
  %outputs164 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %153, i32 0, i32 23, !dbg !14784
  %first165 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %outputs164, i32 0, i32 0, !dbg !14785
  %154 = load i8*, i8** %first165, align 8, !dbg !14785
  %155 = bitcast i8* %154 to %struct.bNodeSocket*, !dbg !14782
  store %struct.bNodeSocket* %155, %struct.bNodeSocket** %sock, align 8, !dbg !14786
  br label %for.cond166, !dbg !14787

for.cond166:                                      ; preds = %for.inc169, %for.end163
  %156 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !14788
  %tobool167 = icmp ne %struct.bNodeSocket* %156, null, !dbg !14790
  br i1 %tobool167, label %for.body168, label %for.end171, !dbg !14790

for.body168:                                      ; preds = %for.cond166
  %157 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !14791
  %158 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !14792
  %159 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !14793
  call void @write_node_socket_interface(%struct.WriteData* %157, %struct.bNodeTree* %158, %struct.bNodeSocket* %159), !dbg !14794
  br label %for.inc169, !dbg !14794

for.inc169:                                       ; preds = %for.body168
  %160 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !14795
  %next170 = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %160, i32 0, i32 0, !dbg !14796
  %161 = load %struct.bNodeSocket*, %struct.bNodeSocket** %next170, align 8, !dbg !14796
  store %struct.bNodeSocket* %161, %struct.bNodeSocket** %sock, align 8, !dbg !14797
  br label %for.cond166, !dbg !14798, !llvm.loop !14799

for.end171:                                       ; preds = %for.cond166
  ret void, !dbg !14801
}

; Function Attrs: noinline nounwind uwtable
define internal void @write_view_settings(%struct.WriteData* %wd, %struct.ColorManagedViewSettings* %view_settings) #0 !dbg !14802 {
entry:
  %wd.addr = alloca %struct.WriteData*, align 8
  %view_settings.addr = alloca %struct.ColorManagedViewSettings*, align 8
  store %struct.WriteData* %wd, %struct.WriteData** %wd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WriteData** %wd.addr, metadata !14806, metadata !DIExpression()), !dbg !14807
  store %struct.ColorManagedViewSettings* %view_settings, %struct.ColorManagedViewSettings** %view_settings.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ColorManagedViewSettings** %view_settings.addr, metadata !14808, metadata !DIExpression()), !dbg !14809
  %0 = load %struct.ColorManagedViewSettings*, %struct.ColorManagedViewSettings** %view_settings.addr, align 8, !dbg !14810
  %curve_mapping = getelementptr inbounds %struct.ColorManagedViewSettings, %struct.ColorManagedViewSettings* %0, i32 0, i32 6, !dbg !14812
  %1 = load %struct.CurveMapping*, %struct.CurveMapping** %curve_mapping, align 8, !dbg !14812
  %tobool = icmp ne %struct.CurveMapping* %1, null, !dbg !14810
  br i1 %tobool, label %if.then, label %if.end, !dbg !14813

if.then:                                          ; preds = %entry
  %2 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !14814
  %3 = load %struct.ColorManagedViewSettings*, %struct.ColorManagedViewSettings** %view_settings.addr, align 8, !dbg !14816
  %curve_mapping1 = getelementptr inbounds %struct.ColorManagedViewSettings, %struct.ColorManagedViewSettings* %3, i32 0, i32 6, !dbg !14817
  %4 = load %struct.CurveMapping*, %struct.CurveMapping** %curve_mapping1, align 8, !dbg !14817
  call void @write_curvemapping(%struct.WriteData* %2, %struct.CurveMapping* %4), !dbg !14818
  br label %if.end, !dbg !14819

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !14820
}

; Function Attrs: noinline nounwind uwtable
define internal void @write_pointcaches(%struct.WriteData* %wd, %struct.ListBase* %ptcaches) #0 !dbg !14821 {
entry:
  %wd.addr = alloca %struct.WriteData*, align 8
  %ptcaches.addr = alloca %struct.ListBase*, align 8
  %cache = alloca %struct.PointCache*, align 8
  %i = alloca i32, align 4
  %pm = alloca %struct.PTCacheMem*, align 8
  %extra = alloca %struct.PTCacheExtra*, align 8
  store %struct.WriteData* %wd, %struct.WriteData** %wd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WriteData** %wd.addr, metadata !14822, metadata !DIExpression()), !dbg !14823
  store %struct.ListBase* %ptcaches, %struct.ListBase** %ptcaches.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %ptcaches.addr, metadata !14824, metadata !DIExpression()), !dbg !14825
  call void @llvm.dbg.declare(metadata %struct.PointCache** %cache, metadata !14826, metadata !DIExpression()), !dbg !14829
  %0 = load %struct.ListBase*, %struct.ListBase** %ptcaches.addr, align 8, !dbg !14830
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %0, i32 0, i32 0, !dbg !14831
  %1 = load i8*, i8** %first, align 8, !dbg !14831
  %2 = bitcast i8* %1 to %struct.PointCache*, !dbg !14830
  store %struct.PointCache* %2, %struct.PointCache** %cache, align 8, !dbg !14829
  call void @llvm.dbg.declare(metadata i32* %i, metadata !14832, metadata !DIExpression()), !dbg !14833
  br label %for.cond, !dbg !14834

for.cond:                                         ; preds = %for.inc53, %entry
  %3 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !14835
  %tobool = icmp ne %struct.PointCache* %3, null, !dbg !14838
  br i1 %tobool, label %for.body, label %for.end55, !dbg !14838

for.body:                                         ; preds = %for.cond
  %4 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !14839
  %5 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !14841
  %6 = bitcast %struct.PointCache* %5 to i8*, !dbg !14841
  call void @writestruct(%struct.WriteData* %4, i32 1096040772, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.116, i64 0, i64 0), i32 1, i8* %6), !dbg !14842
  %7 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !14843
  %flag = getelementptr inbounds %struct.PointCache, %struct.PointCache* %7, i32 0, i32 2, !dbg !14845
  %8 = load i32, i32* %flag, align 8, !dbg !14845
  %and = and i32 %8, 64, !dbg !14846
  %cmp = icmp eq i32 %and, 0, !dbg !14847
  br i1 %cmp, label %if.then, label %if.end52, !dbg !14848

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata %struct.PTCacheMem** %pm, metadata !14849, metadata !DIExpression()), !dbg !14853
  %9 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !14854
  %mem_cache = getelementptr inbounds %struct.PointCache, %struct.PointCache* %9, i32 0, i32 20, !dbg !14855
  %first1 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %mem_cache, i32 0, i32 0, !dbg !14856
  %10 = load i8*, i8** %first1, align 8, !dbg !14856
  %11 = bitcast i8* %10 to %struct.PTCacheMem*, !dbg !14854
  store %struct.PTCacheMem* %11, %struct.PTCacheMem** %pm, align 8, !dbg !14853
  br label %for.cond2, !dbg !14857

for.cond2:                                        ; preds = %for.inc49, %if.then
  %12 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm, align 8, !dbg !14858
  %tobool3 = icmp ne %struct.PTCacheMem* %12, null, !dbg !14861
  br i1 %tobool3, label %for.body4, label %for.end51, !dbg !14861

for.body4:                                        ; preds = %for.cond2
  call void @llvm.dbg.declare(metadata %struct.PTCacheExtra** %extra, metadata !14862, metadata !DIExpression()), !dbg !14874
  %13 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm, align 8, !dbg !14875
  %extradata = getelementptr inbounds %struct.PTCacheMem, %struct.PTCacheMem* %13, i32 0, i32 8, !dbg !14876
  %first5 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %extradata, i32 0, i32 0, !dbg !14877
  %14 = load i8*, i8** %first5, align 8, !dbg !14877
  %15 = bitcast i8* %14 to %struct.PTCacheExtra*, !dbg !14875
  store %struct.PTCacheExtra* %15, %struct.PTCacheExtra** %extra, align 8, !dbg !14874
  %16 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !14878
  %17 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm, align 8, !dbg !14879
  %18 = bitcast %struct.PTCacheMem* %17 to i8*, !dbg !14879
  call void @writestruct(%struct.WriteData* %16, i32 1096040772, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.117, i64 0, i64 0), i32 1, i8* %18), !dbg !14880
  store i32 0, i32* %i, align 4, !dbg !14881
  br label %for.cond6, !dbg !14883

for.cond6:                                        ; preds = %for.inc, %for.body4
  %19 = load i32, i32* %i, align 4, !dbg !14884
  %cmp7 = icmp slt i32 %19, 8, !dbg !14886
  br i1 %cmp7, label %for.body8, label %for.end, !dbg !14887

for.body8:                                        ; preds = %for.cond6
  %20 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm, align 8, !dbg !14888
  %data = getelementptr inbounds %struct.PTCacheMem, %struct.PTCacheMem* %20, i32 0, i32 6, !dbg !14891
  %21 = load i32, i32* %i, align 4, !dbg !14892
  %idxprom = sext i32 %21 to i64, !dbg !14888
  %arrayidx = getelementptr inbounds [8 x i8*], [8 x i8*]* %data, i64 0, i64 %idxprom, !dbg !14888
  %22 = load i8*, i8** %arrayidx, align 8, !dbg !14888
  %tobool9 = icmp ne i8* %22, null, !dbg !14888
  br i1 %tobool9, label %land.lhs.true, label %if.end31, !dbg !14893

land.lhs.true:                                    ; preds = %for.body8
  %23 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm, align 8, !dbg !14894
  %data_types = getelementptr inbounds %struct.PTCacheMem, %struct.PTCacheMem* %23, i32 0, i32 4, !dbg !14895
  %24 = load i32, i32* %data_types, align 8, !dbg !14895
  %25 = load i32, i32* %i, align 4, !dbg !14896
  %shl = shl i32 1, %25, !dbg !14897
  %and10 = and i32 %24, %shl, !dbg !14898
  %tobool11 = icmp ne i32 %and10, 0, !dbg !14898
  br i1 %tobool11, label %if.then12, label %if.end31, !dbg !14899

if.then12:                                        ; preds = %land.lhs.true
  %26 = load i32, i32* %i, align 4, !dbg !14900
  %idxprom13 = sext i32 %26 to i64, !dbg !14903
  %arrayidx14 = getelementptr inbounds [8 x i8*], [8 x i8*]* @ptcache_data_struct, i64 0, i64 %idxprom13, !dbg !14903
  %27 = load i8*, i8** %arrayidx14, align 8, !dbg !14903
  %arrayidx15 = getelementptr inbounds i8, i8* %27, i64 0, !dbg !14903
  %28 = load i8, i8* %arrayidx15, align 1, !dbg !14903
  %conv = zext i8 %28 to i32, !dbg !14903
  %cmp16 = icmp eq i32 %conv, 0, !dbg !14904
  br i1 %cmp16, label %if.then18, label %if.else, !dbg !14905

if.then18:                                        ; preds = %if.then12
  %29 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !14906
  %30 = load i64 (i8*)*, i64 (i8*)** @MEM_allocN_len, align 8, !dbg !14907
  %31 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm, align 8, !dbg !14908
  %data19 = getelementptr inbounds %struct.PTCacheMem, %struct.PTCacheMem* %31, i32 0, i32 6, !dbg !14909
  %32 = load i32, i32* %i, align 4, !dbg !14910
  %idxprom20 = sext i32 %32 to i64, !dbg !14908
  %arrayidx21 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data19, i64 0, i64 %idxprom20, !dbg !14908
  %33 = load i8*, i8** %arrayidx21, align 8, !dbg !14908
  %call = call i64 %30(i8* %33), !dbg !14907
  %conv22 = trunc i64 %call to i32, !dbg !14907
  %34 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm, align 8, !dbg !14911
  %data23 = getelementptr inbounds %struct.PTCacheMem, %struct.PTCacheMem* %34, i32 0, i32 6, !dbg !14912
  %35 = load i32, i32* %i, align 4, !dbg !14913
  %idxprom24 = sext i32 %35 to i64, !dbg !14911
  %arrayidx25 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data23, i64 0, i64 %idxprom24, !dbg !14911
  %36 = load i8*, i8** %arrayidx25, align 8, !dbg !14911
  call void @writedata(%struct.WriteData* %29, i32 1096040772, i32 %conv22, i8* %36), !dbg !14914
  br label %if.end, !dbg !14914

if.else:                                          ; preds = %if.then12
  %37 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !14915
  %38 = load i32, i32* %i, align 4, !dbg !14916
  %idxprom26 = sext i32 %38 to i64, !dbg !14917
  %arrayidx27 = getelementptr inbounds [8 x i8*], [8 x i8*]* @ptcache_data_struct, i64 0, i64 %idxprom26, !dbg !14917
  %39 = load i8*, i8** %arrayidx27, align 8, !dbg !14917
  %40 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm, align 8, !dbg !14918
  %totpoint = getelementptr inbounds %struct.PTCacheMem, %struct.PTCacheMem* %40, i32 0, i32 3, !dbg !14919
  %41 = load i32, i32* %totpoint, align 4, !dbg !14919
  %42 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm, align 8, !dbg !14920
  %data28 = getelementptr inbounds %struct.PTCacheMem, %struct.PTCacheMem* %42, i32 0, i32 6, !dbg !14921
  %43 = load i32, i32* %i, align 4, !dbg !14922
  %idxprom29 = sext i32 %43 to i64, !dbg !14920
  %arrayidx30 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data28, i64 0, i64 %idxprom29, !dbg !14920
  %44 = load i8*, i8** %arrayidx30, align 8, !dbg !14920
  call void @writestruct(%struct.WriteData* %37, i32 1096040772, i8* %39, i32 %41, i8* %44), !dbg !14923
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then18
  br label %if.end31, !dbg !14924

if.end31:                                         ; preds = %if.end, %land.lhs.true, %for.body8
  br label %for.inc, !dbg !14925

for.inc:                                          ; preds = %if.end31
  %45 = load i32, i32* %i, align 4, !dbg !14926
  %inc = add nsw i32 %45, 1, !dbg !14926
  store i32 %inc, i32* %i, align 4, !dbg !14926
  br label %for.cond6, !dbg !14927, !llvm.loop !14928

for.end:                                          ; preds = %for.cond6
  br label %for.cond32, !dbg !14930

for.cond32:                                       ; preds = %for.inc47, %for.end
  %46 = load %struct.PTCacheExtra*, %struct.PTCacheExtra** %extra, align 8, !dbg !14931
  %tobool33 = icmp ne %struct.PTCacheExtra* %46, null, !dbg !14934
  br i1 %tobool33, label %for.body34, label %for.end48, !dbg !14934

for.body34:                                       ; preds = %for.cond32
  %47 = load %struct.PTCacheExtra*, %struct.PTCacheExtra** %extra, align 8, !dbg !14935
  %type = getelementptr inbounds %struct.PTCacheExtra, %struct.PTCacheExtra* %47, i32 0, i32 2, !dbg !14938
  %48 = load i32, i32* %type, align 8, !dbg !14938
  %idxprom35 = zext i32 %48 to i64, !dbg !14939
  %arrayidx36 = getelementptr inbounds [2 x i8*], [2 x i8*]* @ptcache_extra_struct, i64 0, i64 %idxprom35, !dbg !14939
  %49 = load i8*, i8** %arrayidx36, align 8, !dbg !14939
  %arrayidx37 = getelementptr inbounds i8, i8* %49, i64 0, !dbg !14939
  %50 = load i8, i8* %arrayidx37, align 1, !dbg !14939
  %conv38 = zext i8 %50 to i32, !dbg !14939
  %cmp39 = icmp eq i32 %conv38, 0, !dbg !14940
  br i1 %cmp39, label %if.then41, label %if.end42, !dbg !14941

if.then41:                                        ; preds = %for.body34
  br label %for.inc47, !dbg !14942

if.end42:                                         ; preds = %for.body34
  %51 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !14943
  %52 = load %struct.PTCacheExtra*, %struct.PTCacheExtra** %extra, align 8, !dbg !14944
  %53 = bitcast %struct.PTCacheExtra* %52 to i8*, !dbg !14944
  call void @writestruct(%struct.WriteData* %51, i32 1096040772, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.118, i64 0, i64 0), i32 1, i8* %53), !dbg !14945
  %54 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !14946
  %55 = load %struct.PTCacheExtra*, %struct.PTCacheExtra** %extra, align 8, !dbg !14947
  %type43 = getelementptr inbounds %struct.PTCacheExtra, %struct.PTCacheExtra* %55, i32 0, i32 2, !dbg !14948
  %56 = load i32, i32* %type43, align 8, !dbg !14948
  %idxprom44 = zext i32 %56 to i64, !dbg !14949
  %arrayidx45 = getelementptr inbounds [2 x i8*], [2 x i8*]* @ptcache_extra_struct, i64 0, i64 %idxprom44, !dbg !14949
  %57 = load i8*, i8** %arrayidx45, align 8, !dbg !14949
  %58 = load %struct.PTCacheExtra*, %struct.PTCacheExtra** %extra, align 8, !dbg !14950
  %totdata = getelementptr inbounds %struct.PTCacheExtra, %struct.PTCacheExtra* %58, i32 0, i32 3, !dbg !14951
  %59 = load i32, i32* %totdata, align 4, !dbg !14951
  %60 = load %struct.PTCacheExtra*, %struct.PTCacheExtra** %extra, align 8, !dbg !14952
  %data46 = getelementptr inbounds %struct.PTCacheExtra, %struct.PTCacheExtra* %60, i32 0, i32 4, !dbg !14953
  %61 = load i8*, i8** %data46, align 8, !dbg !14953
  call void @writestruct(%struct.WriteData* %54, i32 1096040772, i8* %57, i32 %59, i8* %61), !dbg !14954
  br label %for.inc47, !dbg !14955

for.inc47:                                        ; preds = %if.end42, %if.then41
  %62 = load %struct.PTCacheExtra*, %struct.PTCacheExtra** %extra, align 8, !dbg !14956
  %next = getelementptr inbounds %struct.PTCacheExtra, %struct.PTCacheExtra* %62, i32 0, i32 0, !dbg !14957
  %63 = load %struct.PTCacheExtra*, %struct.PTCacheExtra** %next, align 8, !dbg !14957
  store %struct.PTCacheExtra* %63, %struct.PTCacheExtra** %extra, align 8, !dbg !14958
  br label %for.cond32, !dbg !14959, !llvm.loop !14960

for.end48:                                        ; preds = %for.cond32
  br label %for.inc49, !dbg !14962

for.inc49:                                        ; preds = %for.end48
  %64 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm, align 8, !dbg !14963
  %next50 = getelementptr inbounds %struct.PTCacheMem, %struct.PTCacheMem* %64, i32 0, i32 0, !dbg !14964
  %65 = load %struct.PTCacheMem*, %struct.PTCacheMem** %next50, align 8, !dbg !14964
  store %struct.PTCacheMem* %65, %struct.PTCacheMem** %pm, align 8, !dbg !14965
  br label %for.cond2, !dbg !14966, !llvm.loop !14967

for.end51:                                        ; preds = %for.cond2
  br label %if.end52, !dbg !14969

if.end52:                                         ; preds = %for.end51, %for.body
  br label %for.inc53, !dbg !14970

for.inc53:                                        ; preds = %if.end52
  %66 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !14971
  %next54 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %66, i32 0, i32 0, !dbg !14972
  %67 = load %struct.PointCache*, %struct.PointCache** %next54, align 8, !dbg !14972
  store %struct.PointCache* %67, %struct.PointCache** %cache, align 8, !dbg !14973
  br label %for.cond, !dbg !14974, !llvm.loop !14975

for.end55:                                        ; preds = %for.cond
  ret void, !dbg !14977
}

declare dso_local %struct.SequenceModifierTypeInfo* @BKE_sequence_modifier_type_info_get(i32) #2

; Function Attrs: noinline nounwind uwtable
define internal void @write_node_socket(%struct.WriteData* %wd, %struct.bNodeTree* %UNUSED_ntree, %struct.bNode* %node, %struct.bNodeSocket* %sock) #0 !dbg !14978 {
entry:
  %wd.addr = alloca %struct.WriteData*, align 8
  %UNUSED_ntree.addr = alloca %struct.bNodeTree*, align 8
  %node.addr = alloca %struct.bNode*, align 8
  %sock.addr = alloca %struct.bNodeSocket*, align 8
  %ngroup = alloca %struct.bNodeTree*, align 8
  store %struct.WriteData* %wd, %struct.WriteData** %wd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WriteData** %wd.addr, metadata !14981, metadata !DIExpression()), !dbg !14982
  store %struct.bNodeTree* %UNUSED_ntree, %struct.bNodeTree** %UNUSED_ntree.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeTree** %UNUSED_ntree.addr, metadata !14983, metadata !DIExpression()), !dbg !14984
  store %struct.bNode* %node, %struct.bNode** %node.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNode** %node.addr, metadata !14985, metadata !DIExpression()), !dbg !14986
  store %struct.bNodeSocket* %sock, %struct.bNodeSocket** %sock.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeSocket** %sock.addr, metadata !14987, metadata !DIExpression()), !dbg !14988
  %0 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock.addr, align 8, !dbg !14989
  %stack_type = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %0, i32 0, i32 17, !dbg !14990
  store i16 1, i16* %stack_type, align 2, !dbg !14991
  %1 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !14992
  %type = getelementptr inbounds %struct.bNode, %struct.bNode* %1, i32 0, i32 8, !dbg !14994
  %2 = load i16, i16* %type, align 4, !dbg !14994
  %conv = sext i16 %2 to i32, !dbg !14992
  %cmp = icmp eq i32 %conv, 2, !dbg !14995
  br i1 %cmp, label %if.then, label %if.end6, !dbg !14996

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.bNodeTree** %ngroup, metadata !14997, metadata !DIExpression()), !dbg !14999
  %3 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !15000
  %id = getelementptr inbounds %struct.bNode, %struct.bNode* %3, i32 0, i32 20, !dbg !15001
  %4 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !15001
  %5 = bitcast %struct.ID* %4 to %struct.bNodeTree*, !dbg !15002
  store %struct.bNodeTree* %5, %struct.bNodeTree** %ngroup, align 8, !dbg !14999
  %6 = load %struct.bNodeTree*, %struct.bNodeTree** %ngroup, align 8, !dbg !15003
  %tobool = icmp ne %struct.bNodeTree* %6, null, !dbg !15003
  br i1 %tobool, label %if.then2, label %if.end, !dbg !15005

if.then2:                                         ; preds = %if.then
  %7 = load %struct.bNodeTree*, %struct.bNodeTree** %ngroup, align 8, !dbg !15006
  %8 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock.addr, align 8, !dbg !15008
  %in_out = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %8, i32 0, i32 10, !dbg !15009
  %9 = load i16, i16* %in_out, align 2, !dbg !15009
  %conv3 = sext i16 %9 to i32, !dbg !15008
  %10 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock.addr, align 8, !dbg !15010
  %identifier = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %10, i32 0, i32 4, !dbg !15011
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %identifier, i64 0, i64 0, !dbg !15010
  %call = call %struct.bNodeSocket* @ntreeFindSocketInterface(%struct.bNodeTree* %7, i32 %conv3, i8* %arraydecay), !dbg !15012
  %11 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock.addr, align 8, !dbg !15013
  %groupsock = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %11, i32 0, i32 22, !dbg !15014
  store %struct.bNodeSocket* %call, %struct.bNodeSocket** %groupsock, align 8, !dbg !15015
  %12 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock.addr, align 8, !dbg !15016
  %groupsock4 = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %12, i32 0, i32 22, !dbg !15017
  %13 = load %struct.bNodeSocket*, %struct.bNodeSocket** %groupsock4, align 8, !dbg !15017
  %own_index = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %13, i32 0, i32 20, !dbg !15018
  %14 = load i32, i32* %own_index, align 8, !dbg !15018
  %15 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock.addr, align 8, !dbg !15019
  %own_index5 = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %15, i32 0, i32 20, !dbg !15020
  store i32 %14, i32* %own_index5, align 8, !dbg !15021
  br label %if.end, !dbg !15022

if.end:                                           ; preds = %if.then2, %if.then
  br label %if.end6, !dbg !15023

if.end6:                                          ; preds = %if.end, %entry
  %16 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !15024
  %17 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock.addr, align 8, !dbg !15025
  %18 = bitcast %struct.bNodeSocket* %17 to i8*, !dbg !15025
  call void @writestruct(%struct.WriteData* %16, i32 1096040772, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.115, i64 0, i64 0), i32 1, i8* %18), !dbg !15026
  %19 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock.addr, align 8, !dbg !15027
  %prop = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %19, i32 0, i32 3, !dbg !15029
  %20 = load %struct.IDProperty*, %struct.IDProperty** %prop, align 8, !dbg !15029
  %tobool7 = icmp ne %struct.IDProperty* %20, null, !dbg !15027
  br i1 %tobool7, label %if.then8, label %if.end10, !dbg !15030

if.then8:                                         ; preds = %if.end6
  %21 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock.addr, align 8, !dbg !15031
  %prop9 = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %21, i32 0, i32 3, !dbg !15032
  %22 = load %struct.IDProperty*, %struct.IDProperty** %prop9, align 8, !dbg !15032
  %23 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !15033
  %24 = bitcast %struct.WriteData* %23 to i8*, !dbg !15033
  call void @IDP_WriteProperty(%struct.IDProperty* %22, i8* %24), !dbg !15034
  br label %if.end10, !dbg !15034

if.end10:                                         ; preds = %if.then8, %if.end6
  %25 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock.addr, align 8, !dbg !15035
  %default_value = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %25, i32 0, i32 15, !dbg !15037
  %26 = load i8*, i8** %default_value, align 8, !dbg !15037
  %tobool11 = icmp ne i8* %26, null, !dbg !15035
  br i1 %tobool11, label %if.then12, label %if.end17, !dbg !15038

if.then12:                                        ; preds = %if.end10
  %27 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !15039
  %28 = load i64 (i8*)*, i64 (i8*)** @MEM_allocN_len, align 8, !dbg !15040
  %29 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock.addr, align 8, !dbg !15041
  %default_value13 = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %29, i32 0, i32 15, !dbg !15042
  %30 = load i8*, i8** %default_value13, align 8, !dbg !15042
  %call14 = call i64 %28(i8* %30), !dbg !15040
  %conv15 = trunc i64 %call14 to i32, !dbg !15040
  %31 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock.addr, align 8, !dbg !15043
  %default_value16 = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %31, i32 0, i32 15, !dbg !15044
  %32 = load i8*, i8** %default_value16, align 8, !dbg !15044
  call void @writedata(%struct.WriteData* %27, i32 1096040772, i32 %conv15, i8* %32), !dbg !15045
  br label %if.end17, !dbg !15045

if.end17:                                         ; preds = %if.then12, %if.end10
  ret void, !dbg !15046
}

; Function Attrs: noinline nounwind uwtable
define internal void @write_node_socket_interface(%struct.WriteData* %wd, %struct.bNodeTree* %UNUSED_ntree, %struct.bNodeSocket* %sock) #0 !dbg !15047 {
entry:
  %wd.addr = alloca %struct.WriteData*, align 8
  %UNUSED_ntree.addr = alloca %struct.bNodeTree*, align 8
  %sock.addr = alloca %struct.bNodeSocket*, align 8
  store %struct.WriteData* %wd, %struct.WriteData** %wd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WriteData** %wd.addr, metadata !15050, metadata !DIExpression()), !dbg !15051
  store %struct.bNodeTree* %UNUSED_ntree, %struct.bNodeTree** %UNUSED_ntree.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeTree** %UNUSED_ntree.addr, metadata !15052, metadata !DIExpression()), !dbg !15053
  store %struct.bNodeSocket* %sock, %struct.bNodeSocket** %sock.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeSocket** %sock.addr, metadata !15054, metadata !DIExpression()), !dbg !15055
  %0 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock.addr, align 8, !dbg !15056
  %stack_type = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %0, i32 0, i32 17, !dbg !15057
  store i16 1, i16* %stack_type, align 2, !dbg !15058
  %1 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock.addr, align 8, !dbg !15059
  %default_value = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %1, i32 0, i32 15, !dbg !15061
  %2 = load i8*, i8** %default_value, align 8, !dbg !15061
  %cmp = icmp eq i8* %2, null, !dbg !15062
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !15063

land.lhs.true:                                    ; preds = %entry
  %3 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock.addr, align 8, !dbg !15064
  %typeinfo = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %3, i32 0, i32 11, !dbg !15065
  %4 = load %struct.bNodeSocketType*, %struct.bNodeSocketType** %typeinfo, align 8, !dbg !15065
  %tobool = icmp ne %struct.bNodeSocketType* %4, null, !dbg !15064
  br i1 %tobool, label %if.then, label %if.end, !dbg !15066

if.then:                                          ; preds = %land.lhs.true
  %5 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock.addr, align 8, !dbg !15067
  call void @node_socket_init_default_value(%struct.bNodeSocket* %5), !dbg !15069
  br label %if.end, !dbg !15070

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %6 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !15071
  %7 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock.addr, align 8, !dbg !15072
  %8 = bitcast %struct.bNodeSocket* %7 to i8*, !dbg !15072
  call void @writestruct(%struct.WriteData* %6, i32 1096040772, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.115, i64 0, i64 0), i32 1, i8* %8), !dbg !15073
  %9 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock.addr, align 8, !dbg !15074
  %prop = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %9, i32 0, i32 3, !dbg !15076
  %10 = load %struct.IDProperty*, %struct.IDProperty** %prop, align 8, !dbg !15076
  %tobool1 = icmp ne %struct.IDProperty* %10, null, !dbg !15074
  br i1 %tobool1, label %if.then2, label %if.end4, !dbg !15077

if.then2:                                         ; preds = %if.end
  %11 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock.addr, align 8, !dbg !15078
  %prop3 = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %11, i32 0, i32 3, !dbg !15079
  %12 = load %struct.IDProperty*, %struct.IDProperty** %prop3, align 8, !dbg !15079
  %13 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !15080
  %14 = bitcast %struct.WriteData* %13 to i8*, !dbg !15080
  call void @IDP_WriteProperty(%struct.IDProperty* %12, i8* %14), !dbg !15081
  br label %if.end4, !dbg !15081

if.end4:                                          ; preds = %if.then2, %if.end
  %15 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock.addr, align 8, !dbg !15082
  %default_value5 = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %15, i32 0, i32 15, !dbg !15084
  %16 = load i8*, i8** %default_value5, align 8, !dbg !15084
  %tobool6 = icmp ne i8* %16, null, !dbg !15082
  br i1 %tobool6, label %if.then7, label %if.end10, !dbg !15085

if.then7:                                         ; preds = %if.end4
  %17 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !15086
  %18 = load i64 (i8*)*, i64 (i8*)** @MEM_allocN_len, align 8, !dbg !15087
  %19 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock.addr, align 8, !dbg !15088
  %default_value8 = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %19, i32 0, i32 15, !dbg !15089
  %20 = load i8*, i8** %default_value8, align 8, !dbg !15089
  %call = call i64 %18(i8* %20), !dbg !15087
  %conv = trunc i64 %call to i32, !dbg !15087
  %21 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock.addr, align 8, !dbg !15090
  %default_value9 = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %21, i32 0, i32 15, !dbg !15091
  %22 = load i8*, i8** %default_value9, align 8, !dbg !15091
  call void @writedata(%struct.WriteData* %17, i32 1096040772, i32 %conv, i8* %22), !dbg !15092
  br label %if.end10, !dbg !15092

if.end10:                                         ; preds = %if.then7, %if.end4
  ret void, !dbg !15093
}

declare dso_local void @node_socket_init_default_value(%struct.bNodeSocket*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @write_previews(%struct.WriteData* %wd, %struct.PreviewImage* %prv) #0 !dbg !15094 {
entry:
  %wd.addr = alloca %struct.WriteData*, align 8
  %prv.addr = alloca %struct.PreviewImage*, align 8
  %w = alloca i16, align 2
  %h = alloca i16, align 2
  %rect = alloca i32*, align 8
  store %struct.WriteData* %wd, %struct.WriteData** %wd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WriteData** %wd.addr, metadata !15097, metadata !DIExpression()), !dbg !15098
  store %struct.PreviewImage* %prv, %struct.PreviewImage** %prv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PreviewImage** %prv.addr, metadata !15099, metadata !DIExpression()), !dbg !15100
  %0 = load %struct.PreviewImage*, %struct.PreviewImage** %prv.addr, align 8, !dbg !15101
  %tobool = icmp ne %struct.PreviewImage* %0, null, !dbg !15101
  br i1 %tobool, label %if.then, label %if.end56, !dbg !15103

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i16* %w, metadata !15104, metadata !DIExpression()), !dbg !15106
  %1 = load %struct.PreviewImage*, %struct.PreviewImage** %prv.addr, align 8, !dbg !15107
  %w1 = getelementptr inbounds %struct.PreviewImage, %struct.PreviewImage* %1, i32 0, i32 0, !dbg !15108
  %arrayidx = getelementptr inbounds [2 x i32], [2 x i32]* %w1, i64 0, i64 1, !dbg !15107
  %2 = load i32, i32* %arrayidx, align 4, !dbg !15107
  %conv = trunc i32 %2 to i16, !dbg !15107
  store i16 %conv, i16* %w, align 2, !dbg !15106
  call void @llvm.dbg.declare(metadata i16* %h, metadata !15109, metadata !DIExpression()), !dbg !15110
  %3 = load %struct.PreviewImage*, %struct.PreviewImage** %prv.addr, align 8, !dbg !15111
  %h2 = getelementptr inbounds %struct.PreviewImage, %struct.PreviewImage* %3, i32 0, i32 1, !dbg !15112
  %arrayidx3 = getelementptr inbounds [2 x i32], [2 x i32]* %h2, i64 0, i64 1, !dbg !15111
  %4 = load i32, i32* %arrayidx3, align 4, !dbg !15111
  %conv4 = trunc i32 %4 to i16, !dbg !15111
  store i16 %conv4, i16* %h, align 2, !dbg !15110
  call void @llvm.dbg.declare(metadata i32** %rect, metadata !15113, metadata !DIExpression()), !dbg !15114
  %5 = load %struct.PreviewImage*, %struct.PreviewImage** %prv.addr, align 8, !dbg !15115
  %rect5 = getelementptr inbounds %struct.PreviewImage, %struct.PreviewImage* %5, i32 0, i32 4, !dbg !15116
  %arrayidx6 = getelementptr inbounds [2 x i32*], [2 x i32*]* %rect5, i64 0, i64 1, !dbg !15115
  %6 = load i32*, i32** %arrayidx6, align 8, !dbg !15115
  store i32* %6, i32** %rect, align 8, !dbg !15114
  %7 = load i32, i32* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 2), align 8, !dbg !15117
  %and = and i32 %7, 65536, !dbg !15119
  %tobool7 = icmp ne i32 %and, 0, !dbg !15119
  br i1 %tobool7, label %if.end, label %if.then8, !dbg !15120

if.then8:                                         ; preds = %if.then
  %8 = load %struct.PreviewImage*, %struct.PreviewImage** %prv.addr, align 8, !dbg !15121
  %w9 = getelementptr inbounds %struct.PreviewImage, %struct.PreviewImage* %8, i32 0, i32 0, !dbg !15123
  %arrayidx10 = getelementptr inbounds [2 x i32], [2 x i32]* %w9, i64 0, i64 1, !dbg !15121
  store i32 0, i32* %arrayidx10, align 4, !dbg !15124
  %9 = load %struct.PreviewImage*, %struct.PreviewImage** %prv.addr, align 8, !dbg !15125
  %h11 = getelementptr inbounds %struct.PreviewImage, %struct.PreviewImage* %9, i32 0, i32 1, !dbg !15126
  %arrayidx12 = getelementptr inbounds [2 x i32], [2 x i32]* %h11, i64 0, i64 1, !dbg !15125
  store i32 0, i32* %arrayidx12, align 4, !dbg !15127
  %10 = load %struct.PreviewImage*, %struct.PreviewImage** %prv.addr, align 8, !dbg !15128
  %rect13 = getelementptr inbounds %struct.PreviewImage, %struct.PreviewImage* %10, i32 0, i32 4, !dbg !15129
  %arrayidx14 = getelementptr inbounds [2 x i32*], [2 x i32*]* %rect13, i64 0, i64 1, !dbg !15128
  store i32* null, i32** %arrayidx14, align 8, !dbg !15130
  br label %if.end, !dbg !15131

if.end:                                           ; preds = %if.then8, %if.then
  %11 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !15132
  %12 = load %struct.PreviewImage*, %struct.PreviewImage** %prv.addr, align 8, !dbg !15133
  %13 = bitcast %struct.PreviewImage* %12 to i8*, !dbg !15133
  call void @writestruct(%struct.WriteData* %11, i32 1096040772, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.131, i64 0, i64 0), i32 1, i8* %13), !dbg !15134
  %14 = load %struct.PreviewImage*, %struct.PreviewImage** %prv.addr, align 8, !dbg !15135
  %rect15 = getelementptr inbounds %struct.PreviewImage, %struct.PreviewImage* %14, i32 0, i32 4, !dbg !15137
  %arrayidx16 = getelementptr inbounds [2 x i32*], [2 x i32*]* %rect15, i64 0, i64 0, !dbg !15135
  %15 = load i32*, i32** %arrayidx16, align 8, !dbg !15135
  %tobool17 = icmp ne i32* %15, null, !dbg !15135
  br i1 %tobool17, label %if.then18, label %if.end28, !dbg !15138

if.then18:                                        ; preds = %if.end
  %16 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !15139
  %17 = load %struct.PreviewImage*, %struct.PreviewImage** %prv.addr, align 8, !dbg !15140
  %w19 = getelementptr inbounds %struct.PreviewImage, %struct.PreviewImage* %17, i32 0, i32 0, !dbg !15141
  %arrayidx20 = getelementptr inbounds [2 x i32], [2 x i32]* %w19, i64 0, i64 0, !dbg !15140
  %18 = load i32, i32* %arrayidx20, align 8, !dbg !15140
  %19 = load %struct.PreviewImage*, %struct.PreviewImage** %prv.addr, align 8, !dbg !15142
  %h21 = getelementptr inbounds %struct.PreviewImage, %struct.PreviewImage* %19, i32 0, i32 1, !dbg !15143
  %arrayidx22 = getelementptr inbounds [2 x i32], [2 x i32]* %h21, i64 0, i64 0, !dbg !15142
  %20 = load i32, i32* %arrayidx22, align 8, !dbg !15142
  %mul = mul i32 %18, %20, !dbg !15144
  %conv23 = zext i32 %mul to i64, !dbg !15140
  %mul24 = mul i64 %conv23, 4, !dbg !15145
  %conv25 = trunc i64 %mul24 to i32, !dbg !15140
  %21 = load %struct.PreviewImage*, %struct.PreviewImage** %prv.addr, align 8, !dbg !15146
  %rect26 = getelementptr inbounds %struct.PreviewImage, %struct.PreviewImage* %21, i32 0, i32 4, !dbg !15147
  %arrayidx27 = getelementptr inbounds [2 x i32*], [2 x i32*]* %rect26, i64 0, i64 0, !dbg !15146
  %22 = load i32*, i32** %arrayidx27, align 8, !dbg !15146
  %23 = bitcast i32* %22 to i8*, !dbg !15146
  call void @writedata(%struct.WriteData* %16, i32 1096040772, i32 %conv25, i8* %23), !dbg !15148
  br label %if.end28, !dbg !15148

if.end28:                                         ; preds = %if.then18, %if.end
  %24 = load %struct.PreviewImage*, %struct.PreviewImage** %prv.addr, align 8, !dbg !15149
  %rect29 = getelementptr inbounds %struct.PreviewImage, %struct.PreviewImage* %24, i32 0, i32 4, !dbg !15151
  %arrayidx30 = getelementptr inbounds [2 x i32*], [2 x i32*]* %rect29, i64 0, i64 1, !dbg !15149
  %25 = load i32*, i32** %arrayidx30, align 8, !dbg !15149
  %tobool31 = icmp ne i32* %25, null, !dbg !15149
  br i1 %tobool31, label %if.then32, label %if.end43, !dbg !15152

if.then32:                                        ; preds = %if.end28
  %26 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !15153
  %27 = load %struct.PreviewImage*, %struct.PreviewImage** %prv.addr, align 8, !dbg !15154
  %w33 = getelementptr inbounds %struct.PreviewImage, %struct.PreviewImage* %27, i32 0, i32 0, !dbg !15155
  %arrayidx34 = getelementptr inbounds [2 x i32], [2 x i32]* %w33, i64 0, i64 1, !dbg !15154
  %28 = load i32, i32* %arrayidx34, align 4, !dbg !15154
  %29 = load %struct.PreviewImage*, %struct.PreviewImage** %prv.addr, align 8, !dbg !15156
  %h35 = getelementptr inbounds %struct.PreviewImage, %struct.PreviewImage* %29, i32 0, i32 1, !dbg !15157
  %arrayidx36 = getelementptr inbounds [2 x i32], [2 x i32]* %h35, i64 0, i64 1, !dbg !15156
  %30 = load i32, i32* %arrayidx36, align 4, !dbg !15156
  %mul37 = mul i32 %28, %30, !dbg !15158
  %conv38 = zext i32 %mul37 to i64, !dbg !15154
  %mul39 = mul i64 %conv38, 4, !dbg !15159
  %conv40 = trunc i64 %mul39 to i32, !dbg !15154
  %31 = load %struct.PreviewImage*, %struct.PreviewImage** %prv.addr, align 8, !dbg !15160
  %rect41 = getelementptr inbounds %struct.PreviewImage, %struct.PreviewImage* %31, i32 0, i32 4, !dbg !15161
  %arrayidx42 = getelementptr inbounds [2 x i32*], [2 x i32*]* %rect41, i64 0, i64 1, !dbg !15160
  %32 = load i32*, i32** %arrayidx42, align 8, !dbg !15160
  %33 = bitcast i32* %32 to i8*, !dbg !15160
  call void @writedata(%struct.WriteData* %26, i32 1096040772, i32 %conv40, i8* %33), !dbg !15162
  br label %if.end43, !dbg !15162

if.end43:                                         ; preds = %if.then32, %if.end28
  %34 = load i32, i32* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 2), align 8, !dbg !15163
  %and44 = and i32 %34, 65536, !dbg !15165
  %tobool45 = icmp ne i32 %and44, 0, !dbg !15165
  br i1 %tobool45, label %if.end55, label %if.then46, !dbg !15166

if.then46:                                        ; preds = %if.end43
  %35 = load i16, i16* %w, align 2, !dbg !15167
  %conv47 = sext i16 %35 to i32, !dbg !15167
  %36 = load %struct.PreviewImage*, %struct.PreviewImage** %prv.addr, align 8, !dbg !15169
  %w48 = getelementptr inbounds %struct.PreviewImage, %struct.PreviewImage* %36, i32 0, i32 0, !dbg !15170
  %arrayidx49 = getelementptr inbounds [2 x i32], [2 x i32]* %w48, i64 0, i64 1, !dbg !15169
  store i32 %conv47, i32* %arrayidx49, align 4, !dbg !15171
  %37 = load i16, i16* %h, align 2, !dbg !15172
  %conv50 = sext i16 %37 to i32, !dbg !15172
  %38 = load %struct.PreviewImage*, %struct.PreviewImage** %prv.addr, align 8, !dbg !15173
  %h51 = getelementptr inbounds %struct.PreviewImage, %struct.PreviewImage* %38, i32 0, i32 1, !dbg !15174
  %arrayidx52 = getelementptr inbounds [2 x i32], [2 x i32]* %h51, i64 0, i64 1, !dbg !15173
  store i32 %conv50, i32* %arrayidx52, align 4, !dbg !15175
  %39 = load i32*, i32** %rect, align 8, !dbg !15176
  %40 = load %struct.PreviewImage*, %struct.PreviewImage** %prv.addr, align 8, !dbg !15177
  %rect53 = getelementptr inbounds %struct.PreviewImage, %struct.PreviewImage* %40, i32 0, i32 4, !dbg !15178
  %arrayidx54 = getelementptr inbounds [2 x i32*], [2 x i32*]* %rect53, i64 0, i64 1, !dbg !15177
  store i32* %39, i32** %arrayidx54, align 8, !dbg !15179
  br label %if.end55, !dbg !15180

if.end55:                                         ; preds = %if.then46, %if.end43
  br label %if.end56, !dbg !15181

if.end56:                                         ; preds = %if.end55, %entry
  ret void, !dbg !15182
}

; Function Attrs: noinline nounwind uwtable
define internal void @write_dverts(%struct.WriteData* %wd, i32 %count, %struct.MDeformVert* %dvlist) #0 !dbg !15183 {
entry:
  %wd.addr = alloca %struct.WriteData*, align 8
  %count.addr = alloca i32, align 4
  %dvlist.addr = alloca %struct.MDeformVert*, align 8
  %i = alloca i32, align 4
  store %struct.WriteData* %wd, %struct.WriteData** %wd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WriteData** %wd.addr, metadata !15188, metadata !DIExpression()), !dbg !15189
  store i32 %count, i32* %count.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %count.addr, metadata !15190, metadata !DIExpression()), !dbg !15191
  store %struct.MDeformVert* %dvlist, %struct.MDeformVert** %dvlist.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MDeformVert** %dvlist.addr, metadata !15192, metadata !DIExpression()), !dbg !15193
  %0 = load %struct.MDeformVert*, %struct.MDeformVert** %dvlist.addr, align 8, !dbg !15194
  %tobool = icmp ne %struct.MDeformVert* %0, null, !dbg !15194
  br i1 %tobool, label %if.then, label %if.end8, !dbg !15196

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %i, metadata !15197, metadata !DIExpression()), !dbg !15199
  %1 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !15200
  %2 = load i32, i32* %count.addr, align 4, !dbg !15201
  %3 = load %struct.MDeformVert*, %struct.MDeformVert** %dvlist.addr, align 8, !dbg !15202
  %4 = bitcast %struct.MDeformVert* %3 to i8*, !dbg !15202
  call void @writestruct(%struct.WriteData* %1, i32 1096040772, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.136, i64 0, i64 0), i32 %2, i8* %4), !dbg !15203
  store i32 0, i32* %i, align 4, !dbg !15204
  br label %for.cond, !dbg !15206

for.cond:                                         ; preds = %for.inc, %if.then
  %5 = load i32, i32* %i, align 4, !dbg !15207
  %6 = load i32, i32* %count.addr, align 4, !dbg !15209
  %cmp = icmp slt i32 %5, %6, !dbg !15210
  br i1 %cmp, label %for.body, label %for.end, !dbg !15211

for.body:                                         ; preds = %for.cond
  %7 = load %struct.MDeformVert*, %struct.MDeformVert** %dvlist.addr, align 8, !dbg !15212
  %8 = load i32, i32* %i, align 4, !dbg !15215
  %idxprom = sext i32 %8 to i64, !dbg !15212
  %arrayidx = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %7, i64 %idxprom, !dbg !15212
  %dw = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %arrayidx, i32 0, i32 0, !dbg !15216
  %9 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !15216
  %tobool1 = icmp ne %struct.MDeformWeight* %9, null, !dbg !15212
  br i1 %tobool1, label %if.then2, label %if.end, !dbg !15217

if.then2:                                         ; preds = %for.body
  %10 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !15218
  %11 = load %struct.MDeformVert*, %struct.MDeformVert** %dvlist.addr, align 8, !dbg !15219
  %12 = load i32, i32* %i, align 4, !dbg !15220
  %idxprom3 = sext i32 %12 to i64, !dbg !15219
  %arrayidx4 = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %11, i64 %idxprom3, !dbg !15219
  %totweight = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %arrayidx4, i32 0, i32 1, !dbg !15221
  %13 = load i32, i32* %totweight, align 8, !dbg !15221
  %14 = load %struct.MDeformVert*, %struct.MDeformVert** %dvlist.addr, align 8, !dbg !15222
  %15 = load i32, i32* %i, align 4, !dbg !15223
  %idxprom5 = sext i32 %15 to i64, !dbg !15222
  %arrayidx6 = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %14, i64 %idxprom5, !dbg !15222
  %dw7 = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %arrayidx6, i32 0, i32 0, !dbg !15224
  %16 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw7, align 8, !dbg !15224
  %17 = bitcast %struct.MDeformWeight* %16 to i8*, !dbg !15222
  call void @writestruct(%struct.WriteData* %10, i32 1096040772, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.137, i64 0, i64 0), i32 %13, i8* %17), !dbg !15225
  br label %if.end, !dbg !15225

if.end:                                           ; preds = %if.then2, %for.body
  br label %for.inc, !dbg !15226

for.inc:                                          ; preds = %if.end
  %18 = load i32, i32* %i, align 4, !dbg !15227
  %inc = add nsw i32 %18, 1, !dbg !15227
  store i32 %inc, i32* %i, align 4, !dbg !15227
  br label %for.cond, !dbg !15228, !llvm.loop !15229

for.end:                                          ; preds = %for.cond
  br label %if.end8, !dbg !15231

if.end8:                                          ; preds = %for.end, %entry
  ret void, !dbg !15232
}

; Function Attrs: noinline nounwind uwtable
define internal void @write_bone(%struct.WriteData* %wd, %struct.Bone* %bone) #0 !dbg !15233 {
entry:
  %wd.addr = alloca %struct.WriteData*, align 8
  %bone.addr = alloca %struct.Bone*, align 8
  %cbone = alloca %struct.Bone*, align 8
  store %struct.WriteData* %wd, %struct.WriteData** %wd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WriteData** %wd.addr, metadata !15236, metadata !DIExpression()), !dbg !15237
  store %struct.Bone* %bone, %struct.Bone** %bone.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Bone** %bone.addr, metadata !15238, metadata !DIExpression()), !dbg !15239
  call void @llvm.dbg.declare(metadata %struct.Bone** %cbone, metadata !15240, metadata !DIExpression()), !dbg !15241
  %0 = load %struct.Bone*, %struct.Bone** %bone.addr, align 8, !dbg !15242
  %size = getelementptr inbounds %struct.Bone, %struct.Bone* %0, i32 0, i32 24, !dbg !15243
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 2, !dbg !15242
  store float 1.000000e+00, float* %arrayidx, align 4, !dbg !15244
  %1 = load %struct.Bone*, %struct.Bone** %bone.addr, align 8, !dbg !15245
  %size1 = getelementptr inbounds %struct.Bone, %struct.Bone* %1, i32 0, i32 24, !dbg !15246
  %arrayidx2 = getelementptr inbounds [3 x float], [3 x float]* %size1, i64 0, i64 1, !dbg !15245
  store float 1.000000e+00, float* %arrayidx2, align 4, !dbg !15247
  %2 = load %struct.Bone*, %struct.Bone** %bone.addr, align 8, !dbg !15248
  %size3 = getelementptr inbounds %struct.Bone, %struct.Bone* %2, i32 0, i32 24, !dbg !15249
  %arrayidx4 = getelementptr inbounds [3 x float], [3 x float]* %size3, i64 0, i64 0, !dbg !15248
  store float 1.000000e+00, float* %arrayidx4, align 4, !dbg !15250
  %3 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !15251
  %4 = load %struct.Bone*, %struct.Bone** %bone.addr, align 8, !dbg !15252
  %5 = bitcast %struct.Bone* %4 to i8*, !dbg !15252
  call void @writestruct(%struct.WriteData* %3, i32 1096040772, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.149, i64 0, i64 0), i32 1, i8* %5), !dbg !15253
  %6 = load %struct.Bone*, %struct.Bone** %bone.addr, align 8, !dbg !15254
  %prop = getelementptr inbounds %struct.Bone, %struct.Bone* %6, i32 0, i32 2, !dbg !15256
  %7 = load %struct.IDProperty*, %struct.IDProperty** %prop, align 8, !dbg !15256
  %tobool = icmp ne %struct.IDProperty* %7, null, !dbg !15254
  br i1 %tobool, label %if.then, label %if.end, !dbg !15257

if.then:                                          ; preds = %entry
  %8 = load %struct.Bone*, %struct.Bone** %bone.addr, align 8, !dbg !15258
  %prop5 = getelementptr inbounds %struct.Bone, %struct.Bone* %8, i32 0, i32 2, !dbg !15259
  %9 = load %struct.IDProperty*, %struct.IDProperty** %prop5, align 8, !dbg !15259
  %10 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !15260
  %11 = bitcast %struct.WriteData* %10 to i8*, !dbg !15260
  call void @IDP_WriteProperty(%struct.IDProperty* %9, i8* %11), !dbg !15261
  br label %if.end, !dbg !15261

if.end:                                           ; preds = %if.then, %entry
  %12 = load %struct.Bone*, %struct.Bone** %bone.addr, align 8, !dbg !15262
  %childbase = getelementptr inbounds %struct.Bone, %struct.Bone* %12, i32 0, i32 4, !dbg !15263
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %childbase, i32 0, i32 0, !dbg !15264
  %13 = load i8*, i8** %first, align 8, !dbg !15264
  %14 = bitcast i8* %13 to %struct.Bone*, !dbg !15262
  store %struct.Bone* %14, %struct.Bone** %cbone, align 8, !dbg !15265
  br label %while.cond, !dbg !15266

while.cond:                                       ; preds = %while.body, %if.end
  %15 = load %struct.Bone*, %struct.Bone** %cbone, align 8, !dbg !15267
  %tobool6 = icmp ne %struct.Bone* %15, null, !dbg !15266
  br i1 %tobool6, label %while.body, label %while.end, !dbg !15266

while.body:                                       ; preds = %while.cond
  %16 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !15268
  %17 = load %struct.Bone*, %struct.Bone** %cbone, align 8, !dbg !15270
  call void @write_bone(%struct.WriteData* %16, %struct.Bone* %17), !dbg !15271
  %18 = load %struct.Bone*, %struct.Bone** %cbone, align 8, !dbg !15272
  %next = getelementptr inbounds %struct.Bone, %struct.Bone* %18, i32 0, i32 0, !dbg !15273
  %19 = load %struct.Bone*, %struct.Bone** %next, align 8, !dbg !15273
  store %struct.Bone* %19, %struct.Bone** %cbone, align 8, !dbg !15274
  br label %while.cond, !dbg !15266, !llvm.loop !15275

while.end:                                        ; preds = %while.cond
  ret void, !dbg !15277
}

; Function Attrs: noinline nounwind uwtable
define internal void @write_properties(%struct.WriteData* %wd, %struct.ListBase* %lb) #0 !dbg !15278 {
entry:
  %wd.addr = alloca %struct.WriteData*, align 8
  %lb.addr = alloca %struct.ListBase*, align 8
  %prop = alloca %struct.bProperty*, align 8
  store %struct.WriteData* %wd, %struct.WriteData** %wd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WriteData** %wd.addr, metadata !15279, metadata !DIExpression()), !dbg !15280
  store %struct.ListBase* %lb, %struct.ListBase** %lb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %lb.addr, metadata !15281, metadata !DIExpression()), !dbg !15282
  call void @llvm.dbg.declare(metadata %struct.bProperty** %prop, metadata !15283, metadata !DIExpression()), !dbg !15297
  %0 = load %struct.ListBase*, %struct.ListBase** %lb.addr, align 8, !dbg !15298
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %0, i32 0, i32 0, !dbg !15299
  %1 = load i8*, i8** %first, align 8, !dbg !15299
  %2 = bitcast i8* %1 to %struct.bProperty*, !dbg !15298
  store %struct.bProperty* %2, %struct.bProperty** %prop, align 8, !dbg !15300
  br label %while.cond, !dbg !15301

while.cond:                                       ; preds = %if.end, %entry
  %3 = load %struct.bProperty*, %struct.bProperty** %prop, align 8, !dbg !15302
  %tobool = icmp ne %struct.bProperty* %3, null, !dbg !15301
  br i1 %tobool, label %while.body, label %while.end, !dbg !15301

while.body:                                       ; preds = %while.cond
  %4 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !15303
  %5 = load %struct.bProperty*, %struct.bProperty** %prop, align 8, !dbg !15305
  %6 = bitcast %struct.bProperty* %5 to i8*, !dbg !15305
  call void @writestruct(%struct.WriteData* %4, i32 1096040772, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.161, i64 0, i64 0), i32 1, i8* %6), !dbg !15306
  %7 = load %struct.bProperty*, %struct.bProperty** %prop, align 8, !dbg !15307
  %poin = getelementptr inbounds %struct.bProperty, %struct.bProperty* %7, i32 0, i32 6, !dbg !15309
  %8 = load i8*, i8** %poin, align 8, !dbg !15309
  %tobool1 = icmp ne i8* %8, null, !dbg !15307
  br i1 %tobool1, label %land.lhs.true, label %if.end, !dbg !15310

land.lhs.true:                                    ; preds = %while.body
  %9 = load %struct.bProperty*, %struct.bProperty** %prop, align 8, !dbg !15311
  %poin2 = getelementptr inbounds %struct.bProperty, %struct.bProperty* %9, i32 0, i32 6, !dbg !15312
  %10 = load i8*, i8** %poin2, align 8, !dbg !15312
  %11 = load %struct.bProperty*, %struct.bProperty** %prop, align 8, !dbg !15313
  %data = getelementptr inbounds %struct.bProperty, %struct.bProperty* %11, i32 0, i32 5, !dbg !15314
  %12 = bitcast i32* %data to i8*, !dbg !15315
  %cmp = icmp ne i8* %10, %12, !dbg !15316
  br i1 %cmp, label %if.then, label %if.end, !dbg !15317

if.then:                                          ; preds = %land.lhs.true
  %13 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !15318
  %14 = load i64 (i8*)*, i64 (i8*)** @MEM_allocN_len, align 8, !dbg !15319
  %15 = load %struct.bProperty*, %struct.bProperty** %prop, align 8, !dbg !15320
  %poin3 = getelementptr inbounds %struct.bProperty, %struct.bProperty* %15, i32 0, i32 6, !dbg !15321
  %16 = load i8*, i8** %poin3, align 8, !dbg !15321
  %call = call i64 %14(i8* %16), !dbg !15319
  %conv = trunc i64 %call to i32, !dbg !15319
  %17 = load %struct.bProperty*, %struct.bProperty** %prop, align 8, !dbg !15322
  %poin4 = getelementptr inbounds %struct.bProperty, %struct.bProperty* %17, i32 0, i32 6, !dbg !15323
  %18 = load i8*, i8** %poin4, align 8, !dbg !15323
  call void @writedata(%struct.WriteData* %13, i32 1096040772, i32 %conv, i8* %18), !dbg !15324
  br label %if.end, !dbg !15324

if.end:                                           ; preds = %if.then, %land.lhs.true, %while.body
  %19 = load %struct.bProperty*, %struct.bProperty** %prop, align 8, !dbg !15325
  %next = getelementptr inbounds %struct.bProperty, %struct.bProperty* %19, i32 0, i32 0, !dbg !15326
  %20 = load %struct.bProperty*, %struct.bProperty** %next, align 8, !dbg !15326
  store %struct.bProperty* %20, %struct.bProperty** %prop, align 8, !dbg !15327
  br label %while.cond, !dbg !15301, !llvm.loop !15328

while.end:                                        ; preds = %while.cond
  ret void, !dbg !15330
}

; Function Attrs: noinline nounwind uwtable
define internal void @write_sensors(%struct.WriteData* %wd, %struct.ListBase* %lb) #0 !dbg !15331 {
entry:
  %wd.addr = alloca %struct.WriteData*, align 8
  %lb.addr = alloca %struct.ListBase*, align 8
  %sens = alloca %struct.bSensor*, align 8
  store %struct.WriteData* %wd, %struct.WriteData** %wd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WriteData** %wd.addr, metadata !15332, metadata !DIExpression()), !dbg !15333
  store %struct.ListBase* %lb, %struct.ListBase** %lb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %lb.addr, metadata !15334, metadata !DIExpression()), !dbg !15335
  call void @llvm.dbg.declare(metadata %struct.bSensor** %sens, metadata !15336, metadata !DIExpression()), !dbg !15400
  %0 = load %struct.ListBase*, %struct.ListBase** %lb.addr, align 8, !dbg !15401
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %0, i32 0, i32 0, !dbg !15402
  %1 = load i8*, i8** %first, align 8, !dbg !15402
  %2 = bitcast i8* %1 to %struct.bSensor*, !dbg !15401
  store %struct.bSensor* %2, %struct.bSensor** %sens, align 8, !dbg !15403
  br label %while.cond, !dbg !15404

while.cond:                                       ; preds = %sw.epilog, %entry
  %3 = load %struct.bSensor*, %struct.bSensor** %sens, align 8, !dbg !15405
  %tobool = icmp ne %struct.bSensor* %3, null, !dbg !15404
  br i1 %tobool, label %while.body, label %while.end, !dbg !15404

while.body:                                       ; preds = %while.cond
  %4 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !15406
  %5 = load %struct.bSensor*, %struct.bSensor** %sens, align 8, !dbg !15408
  %6 = bitcast %struct.bSensor* %5 to i8*, !dbg !15408
  call void @writestruct(%struct.WriteData* %4, i32 1096040772, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.162, i64 0, i64 0), i32 1, i8* %6), !dbg !15409
  %7 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !15410
  %8 = load %struct.bSensor*, %struct.bSensor** %sens, align 8, !dbg !15411
  %totlinks = getelementptr inbounds %struct.bSensor, %struct.bSensor* %8, i32 0, i32 7, !dbg !15412
  %9 = load i16, i16* %totlinks, align 2, !dbg !15412
  %conv = sext i16 %9 to i64, !dbg !15411
  %mul = mul i64 8, %conv, !dbg !15413
  %conv1 = trunc i64 %mul to i32, !dbg !15414
  %10 = load %struct.bSensor*, %struct.bSensor** %sens, align 8, !dbg !15415
  %links = getelementptr inbounds %struct.bSensor, %struct.bSensor* %10, i32 0, i32 12, !dbg !15416
  %11 = load %struct.bController**, %struct.bController*** %links, align 8, !dbg !15416
  %12 = bitcast %struct.bController** %11 to i8*, !dbg !15415
  call void @writedata(%struct.WriteData* %7, i32 1096040772, i32 %conv1, i8* %12), !dbg !15417
  %13 = load %struct.bSensor*, %struct.bSensor** %sens, align 8, !dbg !15418
  %type = getelementptr inbounds %struct.bSensor, %struct.bSensor* %13, i32 0, i32 2, !dbg !15419
  %14 = load i16, i16* %type, align 8, !dbg !15419
  %conv2 = sext i16 %14 to i32, !dbg !15418
  switch i32 %conv2, label %sw.default [
    i32 2, label %sw.bb
    i32 5, label %sw.bb3
    i32 3, label %sw.bb5
    i32 4, label %sw.bb7
    i32 14, label %sw.bb9
    i32 12, label %sw.bb11
    i32 13, label %sw.bb13
    i32 6, label %sw.bb15
    i32 7, label %sw.bb17
    i32 8, label %sw.bb19
    i32 9, label %sw.bb21
    i32 10, label %sw.bb23
    i32 11, label %sw.bb25
  ], !dbg !15420

sw.bb:                                            ; preds = %while.body
  %15 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !15421
  %16 = load %struct.bSensor*, %struct.bSensor** %sens, align 8, !dbg !15423
  %data = getelementptr inbounds %struct.bSensor, %struct.bSensor* %16, i32 0, i32 11, !dbg !15424
  %17 = load i8*, i8** %data, align 8, !dbg !15424
  call void @writestruct(%struct.WriteData* %15, i32 1096040772, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.163, i64 0, i64 0), i32 1, i8* %17), !dbg !15425
  br label %sw.epilog, !dbg !15426

sw.bb3:                                           ; preds = %while.body
  %18 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !15427
  %19 = load %struct.bSensor*, %struct.bSensor** %sens, align 8, !dbg !15428
  %data4 = getelementptr inbounds %struct.bSensor, %struct.bSensor* %19, i32 0, i32 11, !dbg !15429
  %20 = load i8*, i8** %data4, align 8, !dbg !15429
  call void @writestruct(%struct.WriteData* %18, i32 1096040772, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.164, i64 0, i64 0), i32 1, i8* %20), !dbg !15430
  br label %sw.epilog, !dbg !15431

sw.bb5:                                           ; preds = %while.body
  %21 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !15432
  %22 = load %struct.bSensor*, %struct.bSensor** %sens, align 8, !dbg !15433
  %data6 = getelementptr inbounds %struct.bSensor, %struct.bSensor* %22, i32 0, i32 11, !dbg !15434
  %23 = load i8*, i8** %data6, align 8, !dbg !15434
  call void @writestruct(%struct.WriteData* %21, i32 1096040772, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.165, i64 0, i64 0), i32 1, i8* %23), !dbg !15435
  br label %sw.epilog, !dbg !15436

sw.bb7:                                           ; preds = %while.body
  %24 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !15437
  %25 = load %struct.bSensor*, %struct.bSensor** %sens, align 8, !dbg !15438
  %data8 = getelementptr inbounds %struct.bSensor, %struct.bSensor* %25, i32 0, i32 11, !dbg !15439
  %26 = load i8*, i8** %data8, align 8, !dbg !15439
  call void @writestruct(%struct.WriteData* %24, i32 1096040772, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.166, i64 0, i64 0), i32 1, i8* %26), !dbg !15440
  br label %sw.epilog, !dbg !15441

sw.bb9:                                           ; preds = %while.body
  %27 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !15442
  %28 = load %struct.bSensor*, %struct.bSensor** %sens, align 8, !dbg !15443
  %data10 = getelementptr inbounds %struct.bSensor, %struct.bSensor* %28, i32 0, i32 11, !dbg !15444
  %29 = load i8*, i8** %data10, align 8, !dbg !15444
  call void @writestruct(%struct.WriteData* %27, i32 1096040772, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.167, i64 0, i64 0), i32 1, i8* %29), !dbg !15445
  br label %sw.epilog, !dbg !15446

sw.bb11:                                          ; preds = %while.body
  %30 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !15447
  %31 = load %struct.bSensor*, %struct.bSensor** %sens, align 8, !dbg !15448
  %data12 = getelementptr inbounds %struct.bSensor, %struct.bSensor* %31, i32 0, i32 11, !dbg !15449
  %32 = load i8*, i8** %data12, align 8, !dbg !15449
  call void @writestruct(%struct.WriteData* %30, i32 1096040772, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.168, i64 0, i64 0), i32 1, i8* %32), !dbg !15450
  br label %sw.epilog, !dbg !15451

sw.bb13:                                          ; preds = %while.body
  %33 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !15452
  %34 = load %struct.bSensor*, %struct.bSensor** %sens, align 8, !dbg !15453
  %data14 = getelementptr inbounds %struct.bSensor, %struct.bSensor* %34, i32 0, i32 11, !dbg !15454
  %35 = load i8*, i8** %data14, align 8, !dbg !15454
  call void @writestruct(%struct.WriteData* %33, i32 1096040772, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.169, i64 0, i64 0), i32 1, i8* %35), !dbg !15455
  br label %sw.epilog, !dbg !15456

sw.bb15:                                          ; preds = %while.body
  %36 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !15457
  %37 = load %struct.bSensor*, %struct.bSensor** %sens, align 8, !dbg !15458
  %data16 = getelementptr inbounds %struct.bSensor, %struct.bSensor* %37, i32 0, i32 11, !dbg !15459
  %38 = load i8*, i8** %data16, align 8, !dbg !15459
  call void @writestruct(%struct.WriteData* %36, i32 1096040772, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.170, i64 0, i64 0), i32 1, i8* %38), !dbg !15460
  br label %sw.epilog, !dbg !15461

sw.bb17:                                          ; preds = %while.body
  %39 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !15462
  %40 = load %struct.bSensor*, %struct.bSensor** %sens, align 8, !dbg !15463
  %data18 = getelementptr inbounds %struct.bSensor, %struct.bSensor* %40, i32 0, i32 11, !dbg !15464
  %41 = load i8*, i8** %data18, align 8, !dbg !15464
  call void @writestruct(%struct.WriteData* %39, i32 1096040772, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.171, i64 0, i64 0), i32 1, i8* %41), !dbg !15465
  br label %sw.epilog, !dbg !15466

sw.bb19:                                          ; preds = %while.body
  %42 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !15467
  %43 = load %struct.bSensor*, %struct.bSensor** %sens, align 8, !dbg !15468
  %data20 = getelementptr inbounds %struct.bSensor, %struct.bSensor* %43, i32 0, i32 11, !dbg !15469
  %44 = load i8*, i8** %data20, align 8, !dbg !15469
  call void @writestruct(%struct.WriteData* %42, i32 1096040772, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.172, i64 0, i64 0), i32 1, i8* %44), !dbg !15470
  br label %sw.epilog, !dbg !15471

sw.bb21:                                          ; preds = %while.body
  %45 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !15472
  %46 = load %struct.bSensor*, %struct.bSensor** %sens, align 8, !dbg !15473
  %data22 = getelementptr inbounds %struct.bSensor, %struct.bSensor* %46, i32 0, i32 11, !dbg !15474
  %47 = load i8*, i8** %data22, align 8, !dbg !15474
  call void @writestruct(%struct.WriteData* %45, i32 1096040772, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.173, i64 0, i64 0), i32 1, i8* %47), !dbg !15475
  br label %sw.epilog, !dbg !15476

sw.bb23:                                          ; preds = %while.body
  %48 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !15477
  %49 = load %struct.bSensor*, %struct.bSensor** %sens, align 8, !dbg !15478
  %data24 = getelementptr inbounds %struct.bSensor, %struct.bSensor* %49, i32 0, i32 11, !dbg !15479
  %50 = load i8*, i8** %data24, align 8, !dbg !15479
  call void @writestruct(%struct.WriteData* %48, i32 1096040772, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.174, i64 0, i64 0), i32 1, i8* %50), !dbg !15480
  br label %sw.epilog, !dbg !15481

sw.bb25:                                          ; preds = %while.body
  %51 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !15482
  %52 = load %struct.bSensor*, %struct.bSensor** %sens, align 8, !dbg !15483
  %data26 = getelementptr inbounds %struct.bSensor, %struct.bSensor* %52, i32 0, i32 11, !dbg !15484
  %53 = load i8*, i8** %data26, align 8, !dbg !15484
  call void @writestruct(%struct.WriteData* %51, i32 1096040772, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.175, i64 0, i64 0), i32 1, i8* %53), !dbg !15485
  br label %sw.epilog, !dbg !15486

sw.default:                                       ; preds = %while.body
  br label %sw.epilog, !dbg !15487

sw.epilog:                                        ; preds = %sw.default, %sw.bb25, %sw.bb23, %sw.bb21, %sw.bb19, %sw.bb17, %sw.bb15, %sw.bb13, %sw.bb11, %sw.bb9, %sw.bb7, %sw.bb5, %sw.bb3, %sw.bb
  %54 = load %struct.bSensor*, %struct.bSensor** %sens, align 8, !dbg !15488
  %next = getelementptr inbounds %struct.bSensor, %struct.bSensor* %54, i32 0, i32 0, !dbg !15489
  %55 = load %struct.bSensor*, %struct.bSensor** %next, align 8, !dbg !15489
  store %struct.bSensor* %55, %struct.bSensor** %sens, align 8, !dbg !15490
  br label %while.cond, !dbg !15404, !llvm.loop !15491

while.end:                                        ; preds = %while.cond
  ret void, !dbg !15493
}

; Function Attrs: noinline nounwind uwtable
define internal void @write_controllers(%struct.WriteData* %wd, %struct.ListBase* %lb) #0 !dbg !15494 {
entry:
  %wd.addr = alloca %struct.WriteData*, align 8
  %lb.addr = alloca %struct.ListBase*, align 8
  %cont = alloca %struct.bController*, align 8
  store %struct.WriteData* %wd, %struct.WriteData** %wd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WriteData** %wd.addr, metadata !15495, metadata !DIExpression()), !dbg !15496
  store %struct.ListBase* %lb, %struct.ListBase** %lb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %lb.addr, metadata !15497, metadata !DIExpression()), !dbg !15498
  call void @llvm.dbg.declare(metadata %struct.bController** %cont, metadata !15499, metadata !DIExpression()), !dbg !15502
  %0 = load %struct.ListBase*, %struct.ListBase** %lb.addr, align 8, !dbg !15503
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %0, i32 0, i32 0, !dbg !15504
  %1 = load i8*, i8** %first, align 8, !dbg !15504
  %2 = bitcast i8* %1 to %struct.bController*, !dbg !15503
  store %struct.bController* %2, %struct.bController** %cont, align 8, !dbg !15505
  br label %while.cond, !dbg !15506

while.cond:                                       ; preds = %sw.epilog, %entry
  %3 = load %struct.bController*, %struct.bController** %cont, align 8, !dbg !15507
  %tobool = icmp ne %struct.bController* %3, null, !dbg !15506
  br i1 %tobool, label %while.body, label %while.end, !dbg !15506

while.body:                                       ; preds = %while.cond
  %4 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !15508
  %5 = load %struct.bController*, %struct.bController** %cont, align 8, !dbg !15510
  %6 = bitcast %struct.bController* %5 to i8*, !dbg !15510
  call void @writestruct(%struct.WriteData* %4, i32 1096040772, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.176, i64 0, i64 0), i32 1, i8* %6), !dbg !15511
  %7 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !15512
  %8 = load %struct.bController*, %struct.bController** %cont, align 8, !dbg !15513
  %totlinks = getelementptr inbounds %struct.bController, %struct.bController* %8, i32 0, i32 6, !dbg !15514
  %9 = load i16, i16* %totlinks, align 2, !dbg !15514
  %conv = sext i16 %9 to i64, !dbg !15513
  %mul = mul i64 8, %conv, !dbg !15515
  %conv1 = trunc i64 %mul to i32, !dbg !15516
  %10 = load %struct.bController*, %struct.bController** %cont, align 8, !dbg !15517
  %links = getelementptr inbounds %struct.bController, %struct.bController* %10, i32 0, i32 13, !dbg !15518
  %11 = load %struct.bActuator**, %struct.bActuator*** %links, align 8, !dbg !15518
  %12 = bitcast %struct.bActuator** %11 to i8*, !dbg !15517
  call void @writedata(%struct.WriteData* %7, i32 1096040772, i32 %conv1, i8* %12), !dbg !15519
  %13 = load %struct.bController*, %struct.bController** %cont, align 8, !dbg !15520
  %type = getelementptr inbounds %struct.bController, %struct.bController* %13, i32 0, i32 3, !dbg !15521
  %14 = load i16, i16* %type, align 8, !dbg !15521
  %conv2 = sext i16 %14 to i32, !dbg !15520
  switch i32 %conv2, label %sw.default [
    i32 2, label %sw.bb
    i32 3, label %sw.bb3
  ], !dbg !15522

sw.bb:                                            ; preds = %while.body
  %15 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !15523
  %16 = load %struct.bController*, %struct.bController** %cont, align 8, !dbg !15525
  %data = getelementptr inbounds %struct.bController, %struct.bController* %16, i32 0, i32 12, !dbg !15526
  %17 = load i8*, i8** %data, align 8, !dbg !15526
  call void @writestruct(%struct.WriteData* %15, i32 1096040772, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.177, i64 0, i64 0), i32 1, i8* %17), !dbg !15527
  br label %sw.epilog, !dbg !15528

sw.bb3:                                           ; preds = %while.body
  %18 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !15529
  %19 = load %struct.bController*, %struct.bController** %cont, align 8, !dbg !15530
  %data4 = getelementptr inbounds %struct.bController, %struct.bController* %19, i32 0, i32 12, !dbg !15531
  %20 = load i8*, i8** %data4, align 8, !dbg !15531
  call void @writestruct(%struct.WriteData* %18, i32 1096040772, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.178, i64 0, i64 0), i32 1, i8* %20), !dbg !15532
  br label %sw.epilog, !dbg !15533

sw.default:                                       ; preds = %while.body
  br label %sw.epilog, !dbg !15534

sw.epilog:                                        ; preds = %sw.default, %sw.bb3, %sw.bb
  %21 = load %struct.bController*, %struct.bController** %cont, align 8, !dbg !15535
  %next = getelementptr inbounds %struct.bController, %struct.bController* %21, i32 0, i32 0, !dbg !15536
  %22 = load %struct.bController*, %struct.bController** %next, align 8, !dbg !15536
  store %struct.bController* %22, %struct.bController** %cont, align 8, !dbg !15537
  br label %while.cond, !dbg !15506, !llvm.loop !15538

while.end:                                        ; preds = %while.cond
  ret void, !dbg !15540
}

; Function Attrs: noinline nounwind uwtable
define internal void @write_actuators(%struct.WriteData* %wd, %struct.ListBase* %lb) #0 !dbg !15541 {
entry:
  %wd.addr = alloca %struct.WriteData*, align 8
  %lb.addr = alloca %struct.ListBase*, align 8
  %act = alloca %struct.bActuator*, align 8
  store %struct.WriteData* %wd, %struct.WriteData** %wd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WriteData** %wd.addr, metadata !15542, metadata !DIExpression()), !dbg !15543
  store %struct.ListBase* %lb, %struct.ListBase** %lb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %lb.addr, metadata !15544, metadata !DIExpression()), !dbg !15545
  call void @llvm.dbg.declare(metadata %struct.bActuator** %act, metadata !15546, metadata !DIExpression()), !dbg !15549
  %0 = load %struct.ListBase*, %struct.ListBase** %lb.addr, align 8, !dbg !15550
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %0, i32 0, i32 0, !dbg !15551
  %1 = load i8*, i8** %first, align 8, !dbg !15551
  %2 = bitcast i8* %1 to %struct.bActuator*, !dbg !15550
  store %struct.bActuator* %2, %struct.bActuator** %act, align 8, !dbg !15552
  br label %while.cond, !dbg !15553

while.cond:                                       ; preds = %sw.epilog, %entry
  %3 = load %struct.bActuator*, %struct.bActuator** %act, align 8, !dbg !15554
  %tobool = icmp ne %struct.bActuator* %3, null, !dbg !15553
  br i1 %tobool, label %while.body, label %while.end, !dbg !15553

while.body:                                       ; preds = %while.cond
  %4 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !15555
  %5 = load %struct.bActuator*, %struct.bActuator** %act, align 8, !dbg !15557
  %6 = bitcast %struct.bActuator* %5 to i8*, !dbg !15557
  call void @writestruct(%struct.WriteData* %4, i32 1096040772, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.179, i64 0, i64 0), i32 1, i8* %6), !dbg !15558
  %7 = load %struct.bActuator*, %struct.bActuator** %act, align 8, !dbg !15559
  %type = getelementptr inbounds %struct.bActuator, %struct.bActuator* %7, i32 0, i32 3, !dbg !15560
  %8 = load i16, i16* %type, align 8, !dbg !15560
  %conv = sext i16 %8 to i32, !dbg !15559
  switch i32 %conv, label %sw.default [
    i32 15, label %sw.bb
    i32 21, label %sw.bb
    i32 5, label %sw.bb1
    i32 0, label %sw.bb3
    i32 1, label %sw.bb5
    i32 6, label %sw.bb7
    i32 3, label %sw.bb9
    i32 9, label %sw.bb11
    i32 10, label %sw.bb13
    i32 11, label %sw.bb15
    i32 12, label %sw.bb17
    i32 13, label %sw.bb19
    i32 14, label %sw.bb21
    i32 17, label %sw.bb23
    i32 18, label %sw.bb25
    i32 19, label %sw.bb27
    i32 20, label %sw.bb29
    i32 22, label %sw.bb31
    i32 23, label %sw.bb33
    i32 24, label %sw.bb35
    i32 25, label %sw.bb37
  ], !dbg !15561

sw.bb:                                            ; preds = %while.body, %while.body
  %9 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !15562
  %10 = load %struct.bActuator*, %struct.bActuator** %act, align 8, !dbg !15564
  %data = getelementptr inbounds %struct.bActuator, %struct.bActuator* %10, i32 0, i32 8, !dbg !15565
  %11 = load i8*, i8** %data, align 8, !dbg !15565
  call void @writestruct(%struct.WriteData* %9, i32 1096040772, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.180, i64 0, i64 0), i32 1, i8* %11), !dbg !15566
  br label %sw.epilog, !dbg !15567

sw.bb1:                                           ; preds = %while.body
  %12 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !15568
  %13 = load %struct.bActuator*, %struct.bActuator** %act, align 8, !dbg !15569
  %data2 = getelementptr inbounds %struct.bActuator, %struct.bActuator* %13, i32 0, i32 8, !dbg !15570
  %14 = load i8*, i8** %data2, align 8, !dbg !15570
  call void @writestruct(%struct.WriteData* %12, i32 1096040772, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.181, i64 0, i64 0), i32 1, i8* %14), !dbg !15571
  br label %sw.epilog, !dbg !15572

sw.bb3:                                           ; preds = %while.body
  %15 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !15573
  %16 = load %struct.bActuator*, %struct.bActuator** %act, align 8, !dbg !15574
  %data4 = getelementptr inbounds %struct.bActuator, %struct.bActuator* %16, i32 0, i32 8, !dbg !15575
  %17 = load i8*, i8** %data4, align 8, !dbg !15575
  call void @writestruct(%struct.WriteData* %15, i32 1096040772, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.182, i64 0, i64 0), i32 1, i8* %17), !dbg !15576
  br label %sw.epilog, !dbg !15577

sw.bb5:                                           ; preds = %while.body
  %18 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !15578
  %19 = load %struct.bActuator*, %struct.bActuator** %act, align 8, !dbg !15579
  %data6 = getelementptr inbounds %struct.bActuator, %struct.bActuator* %19, i32 0, i32 8, !dbg !15580
  %20 = load i8*, i8** %data6, align 8, !dbg !15580
  call void @writestruct(%struct.WriteData* %18, i32 1096040772, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.183, i64 0, i64 0), i32 1, i8* %20), !dbg !15581
  br label %sw.epilog, !dbg !15582

sw.bb7:                                           ; preds = %while.body
  %21 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !15583
  %22 = load %struct.bActuator*, %struct.bActuator** %act, align 8, !dbg !15584
  %data8 = getelementptr inbounds %struct.bActuator, %struct.bActuator* %22, i32 0, i32 8, !dbg !15585
  %23 = load i8*, i8** %data8, align 8, !dbg !15585
  call void @writestruct(%struct.WriteData* %21, i32 1096040772, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.184, i64 0, i64 0), i32 1, i8* %23), !dbg !15586
  br label %sw.epilog, !dbg !15587

sw.bb9:                                           ; preds = %while.body
  %24 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !15588
  %25 = load %struct.bActuator*, %struct.bActuator** %act, align 8, !dbg !15589
  %data10 = getelementptr inbounds %struct.bActuator, %struct.bActuator* %25, i32 0, i32 8, !dbg !15590
  %26 = load i8*, i8** %data10, align 8, !dbg !15590
  call void @writestruct(%struct.WriteData* %24, i32 1096040772, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.185, i64 0, i64 0), i32 1, i8* %26), !dbg !15591
  br label %sw.epilog, !dbg !15592

sw.bb11:                                          ; preds = %while.body
  %27 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !15593
  %28 = load %struct.bActuator*, %struct.bActuator** %act, align 8, !dbg !15594
  %data12 = getelementptr inbounds %struct.bActuator, %struct.bActuator* %28, i32 0, i32 8, !dbg !15595
  %29 = load i8*, i8** %data12, align 8, !dbg !15595
  call void @writestruct(%struct.WriteData* %27, i32 1096040772, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.186, i64 0, i64 0), i32 1, i8* %29), !dbg !15596
  br label %sw.epilog, !dbg !15597

sw.bb13:                                          ; preds = %while.body
  %30 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !15598
  %31 = load %struct.bActuator*, %struct.bActuator** %act, align 8, !dbg !15599
  %data14 = getelementptr inbounds %struct.bActuator, %struct.bActuator* %31, i32 0, i32 8, !dbg !15600
  %32 = load i8*, i8** %data14, align 8, !dbg !15600
  call void @writestruct(%struct.WriteData* %30, i32 1096040772, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.187, i64 0, i64 0), i32 1, i8* %32), !dbg !15601
  br label %sw.epilog, !dbg !15602

sw.bb15:                                          ; preds = %while.body
  %33 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !15603
  %34 = load %struct.bActuator*, %struct.bActuator** %act, align 8, !dbg !15604
  %data16 = getelementptr inbounds %struct.bActuator, %struct.bActuator* %34, i32 0, i32 8, !dbg !15605
  %35 = load i8*, i8** %data16, align 8, !dbg !15605
  call void @writestruct(%struct.WriteData* %33, i32 1096040772, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.188, i64 0, i64 0), i32 1, i8* %35), !dbg !15606
  br label %sw.epilog, !dbg !15607

sw.bb17:                                          ; preds = %while.body
  %36 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !15608
  %37 = load %struct.bActuator*, %struct.bActuator** %act, align 8, !dbg !15609
  %data18 = getelementptr inbounds %struct.bActuator, %struct.bActuator* %37, i32 0, i32 8, !dbg !15610
  %38 = load i8*, i8** %data18, align 8, !dbg !15610
  call void @writestruct(%struct.WriteData* %36, i32 1096040772, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.189, i64 0, i64 0), i32 1, i8* %38), !dbg !15611
  br label %sw.epilog, !dbg !15612

sw.bb19:                                          ; preds = %while.body
  %39 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !15613
  %40 = load %struct.bActuator*, %struct.bActuator** %act, align 8, !dbg !15614
  %data20 = getelementptr inbounds %struct.bActuator, %struct.bActuator* %40, i32 0, i32 8, !dbg !15615
  %41 = load i8*, i8** %data20, align 8, !dbg !15615
  call void @writestruct(%struct.WriteData* %39, i32 1096040772, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.190, i64 0, i64 0), i32 1, i8* %41), !dbg !15616
  br label %sw.epilog, !dbg !15617

sw.bb21:                                          ; preds = %while.body
  %42 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !15618
  %43 = load %struct.bActuator*, %struct.bActuator** %act, align 8, !dbg !15619
  %data22 = getelementptr inbounds %struct.bActuator, %struct.bActuator* %43, i32 0, i32 8, !dbg !15620
  %44 = load i8*, i8** %data22, align 8, !dbg !15620
  call void @writestruct(%struct.WriteData* %42, i32 1096040772, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.191, i64 0, i64 0), i32 1, i8* %44), !dbg !15621
  br label %sw.epilog, !dbg !15622

sw.bb23:                                          ; preds = %while.body
  %45 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !15623
  %46 = load %struct.bActuator*, %struct.bActuator** %act, align 8, !dbg !15624
  %data24 = getelementptr inbounds %struct.bActuator, %struct.bActuator* %46, i32 0, i32 8, !dbg !15625
  %47 = load i8*, i8** %data24, align 8, !dbg !15625
  call void @writestruct(%struct.WriteData* %45, i32 1096040772, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.192, i64 0, i64 0), i32 1, i8* %47), !dbg !15626
  br label %sw.epilog, !dbg !15627

sw.bb25:                                          ; preds = %while.body
  %48 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !15628
  %49 = load %struct.bActuator*, %struct.bActuator** %act, align 8, !dbg !15629
  %data26 = getelementptr inbounds %struct.bActuator, %struct.bActuator* %49, i32 0, i32 8, !dbg !15630
  %50 = load i8*, i8** %data26, align 8, !dbg !15630
  call void @writestruct(%struct.WriteData* %48, i32 1096040772, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.193, i64 0, i64 0), i32 1, i8* %50), !dbg !15631
  br label %sw.epilog, !dbg !15632

sw.bb27:                                          ; preds = %while.body
  %51 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !15633
  %52 = load %struct.bActuator*, %struct.bActuator** %act, align 8, !dbg !15634
  %data28 = getelementptr inbounds %struct.bActuator, %struct.bActuator* %52, i32 0, i32 8, !dbg !15635
  %53 = load i8*, i8** %data28, align 8, !dbg !15635
  call void @writestruct(%struct.WriteData* %51, i32 1096040772, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.194, i64 0, i64 0), i32 1, i8* %53), !dbg !15636
  br label %sw.epilog, !dbg !15637

sw.bb29:                                          ; preds = %while.body
  %54 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !15638
  %55 = load %struct.bActuator*, %struct.bActuator** %act, align 8, !dbg !15639
  %data30 = getelementptr inbounds %struct.bActuator, %struct.bActuator* %55, i32 0, i32 8, !dbg !15640
  %56 = load i8*, i8** %data30, align 8, !dbg !15640
  call void @writestruct(%struct.WriteData* %54, i32 1096040772, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.195, i64 0, i64 0), i32 1, i8* %56), !dbg !15641
  br label %sw.epilog, !dbg !15642

sw.bb31:                                          ; preds = %while.body
  %57 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !15643
  %58 = load %struct.bActuator*, %struct.bActuator** %act, align 8, !dbg !15644
  %data32 = getelementptr inbounds %struct.bActuator, %struct.bActuator* %58, i32 0, i32 8, !dbg !15645
  %59 = load i8*, i8** %data32, align 8, !dbg !15645
  call void @writestruct(%struct.WriteData* %57, i32 1096040772, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.196, i64 0, i64 0), i32 1, i8* %59), !dbg !15646
  br label %sw.epilog, !dbg !15647

sw.bb33:                                          ; preds = %while.body
  %60 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !15648
  %61 = load %struct.bActuator*, %struct.bActuator** %act, align 8, !dbg !15649
  %data34 = getelementptr inbounds %struct.bActuator, %struct.bActuator* %61, i32 0, i32 8, !dbg !15650
  %62 = load i8*, i8** %data34, align 8, !dbg !15650
  call void @writestruct(%struct.WriteData* %60, i32 1096040772, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.197, i64 0, i64 0), i32 1, i8* %62), !dbg !15651
  br label %sw.epilog, !dbg !15652

sw.bb35:                                          ; preds = %while.body
  %63 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !15653
  %64 = load %struct.bActuator*, %struct.bActuator** %act, align 8, !dbg !15654
  %data36 = getelementptr inbounds %struct.bActuator, %struct.bActuator* %64, i32 0, i32 8, !dbg !15655
  %65 = load i8*, i8** %data36, align 8, !dbg !15655
  call void @writestruct(%struct.WriteData* %63, i32 1096040772, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.198, i64 0, i64 0), i32 1, i8* %65), !dbg !15656
  br label %sw.epilog, !dbg !15657

sw.bb37:                                          ; preds = %while.body
  %66 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !15658
  %67 = load %struct.bActuator*, %struct.bActuator** %act, align 8, !dbg !15659
  %data38 = getelementptr inbounds %struct.bActuator, %struct.bActuator* %67, i32 0, i32 8, !dbg !15660
  %68 = load i8*, i8** %data38, align 8, !dbg !15660
  call void @writestruct(%struct.WriteData* %66, i32 1096040772, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.199, i64 0, i64 0), i32 1, i8* %68), !dbg !15661
  br label %sw.epilog, !dbg !15662

sw.default:                                       ; preds = %while.body
  br label %sw.epilog, !dbg !15663

sw.epilog:                                        ; preds = %sw.default, %sw.bb37, %sw.bb35, %sw.bb33, %sw.bb31, %sw.bb29, %sw.bb27, %sw.bb25, %sw.bb23, %sw.bb21, %sw.bb19, %sw.bb17, %sw.bb15, %sw.bb13, %sw.bb11, %sw.bb9, %sw.bb7, %sw.bb5, %sw.bb3, %sw.bb1, %sw.bb
  %69 = load %struct.bActuator*, %struct.bActuator** %act, align 8, !dbg !15664
  %next = getelementptr inbounds %struct.bActuator, %struct.bActuator* %69, i32 0, i32 0, !dbg !15665
  %70 = load %struct.bActuator*, %struct.bActuator** %next, align 8, !dbg !15665
  store %struct.bActuator* %70, %struct.bActuator** %act, align 8, !dbg !15666
  br label %while.cond, !dbg !15553, !llvm.loop !15667

while.end:                                        ; preds = %while.cond
  ret void, !dbg !15669
}

; Function Attrs: noinline nounwind uwtable
define internal void @write_pose(%struct.WriteData* %wd, %struct.bPose* %pose) #0 !dbg !15670 {
entry:
  %wd.addr = alloca %struct.WriteData*, align 8
  %pose.addr = alloca %struct.bPose*, align 8
  %chan = alloca %struct.bPoseChannel*, align 8
  %grp = alloca %struct.bActionGroup*, align 8
  %structname = alloca i8*, align 8
  store %struct.WriteData* %wd, %struct.WriteData** %wd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WriteData** %wd.addr, metadata !15675, metadata !DIExpression()), !dbg !15676
  store %struct.bPose* %pose, %struct.bPose** %pose.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bPose** %pose.addr, metadata !15677, metadata !DIExpression()), !dbg !15678
  call void @llvm.dbg.declare(metadata %struct.bPoseChannel** %chan, metadata !15679, metadata !DIExpression()), !dbg !15725
  call void @llvm.dbg.declare(metadata %struct.bActionGroup** %grp, metadata !15726, metadata !DIExpression()), !dbg !15727
  %0 = load %struct.bPose*, %struct.bPose** %pose.addr, align 8, !dbg !15728
  %tobool = icmp ne %struct.bPose* %0, null, !dbg !15728
  br i1 %tobool, label %if.end, label %if.then, !dbg !15730

if.then:                                          ; preds = %entry
  br label %return, !dbg !15731

if.end:                                           ; preds = %entry
  %1 = load %struct.bPose*, %struct.bPose** %pose.addr, align 8, !dbg !15732
  %chanbase = getelementptr inbounds %struct.bPose, %struct.bPose* %1, i32 0, i32 0, !dbg !15734
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %chanbase, i32 0, i32 0, !dbg !15735
  %2 = load i8*, i8** %first, align 8, !dbg !15735
  %3 = bitcast i8* %2 to %struct.bPoseChannel*, !dbg !15732
  store %struct.bPoseChannel* %3, %struct.bPoseChannel** %chan, align 8, !dbg !15736
  br label %for.cond, !dbg !15737

for.cond:                                         ; preds = %for.inc, %if.end
  %4 = load %struct.bPoseChannel*, %struct.bPoseChannel** %chan, align 8, !dbg !15738
  %tobool1 = icmp ne %struct.bPoseChannel* %4, null, !dbg !15740
  br i1 %tobool1, label %for.body, label %for.end, !dbg !15740

for.body:                                         ; preds = %for.cond
  %5 = load %struct.bPoseChannel*, %struct.bPoseChannel** %chan, align 8, !dbg !15741
  %prop = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %5, i32 0, i32 2, !dbg !15744
  %6 = load %struct.IDProperty*, %struct.IDProperty** %prop, align 8, !dbg !15744
  %tobool2 = icmp ne %struct.IDProperty* %6, null, !dbg !15741
  br i1 %tobool2, label %if.then3, label %if.end5, !dbg !15745

if.then3:                                         ; preds = %for.body
  %7 = load %struct.bPoseChannel*, %struct.bPoseChannel** %chan, align 8, !dbg !15746
  %prop4 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %7, i32 0, i32 2, !dbg !15747
  %8 = load %struct.IDProperty*, %struct.IDProperty** %prop4, align 8, !dbg !15747
  %9 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !15748
  %10 = bitcast %struct.WriteData* %9 to i8*, !dbg !15748
  call void @IDP_WriteProperty(%struct.IDProperty* %8, i8* %10), !dbg !15749
  br label %if.end5, !dbg !15749

if.end5:                                          ; preds = %if.then3, %for.body
  %11 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !15750
  %12 = load %struct.bPoseChannel*, %struct.bPoseChannel** %chan, align 8, !dbg !15751
  %constraints = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %12, i32 0, i32 3, !dbg !15752
  call void @write_constraints(%struct.WriteData* %11, %struct.ListBase* %constraints), !dbg !15753
  %13 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !15754
  %14 = load %struct.bPoseChannel*, %struct.bPoseChannel** %chan, align 8, !dbg !15755
  %mpath = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %14, i32 0, i32 17, !dbg !15756
  %15 = load %struct.bMotionPath*, %struct.bMotionPath** %mpath, align 8, !dbg !15756
  call void @write_motionpath(%struct.WriteData* %13, %struct.bMotionPath* %15), !dbg !15757
  %16 = load %struct.bPoseChannel*, %struct.bPoseChannel** %chan, align 8, !dbg !15758
  %bone = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %16, i32 0, i32 12, !dbg !15760
  %17 = load %struct.Bone*, %struct.Bone** %bone, align 8, !dbg !15760
  %tobool6 = icmp ne %struct.Bone* %17, null, !dbg !15758
  br i1 %tobool6, label %if.then7, label %if.end9, !dbg !15761

if.then7:                                         ; preds = %if.end5
  %18 = load %struct.bPoseChannel*, %struct.bPoseChannel** %chan, align 8, !dbg !15762
  %bone8 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %18, i32 0, i32 12, !dbg !15763
  %19 = load %struct.Bone*, %struct.Bone** %bone8, align 8, !dbg !15763
  %flag = getelementptr inbounds %struct.Bone, %struct.Bone* %19, i32 0, i32 10, !dbg !15764
  %20 = load i32, i32* %flag, align 8, !dbg !15764
  %and = and i32 %20, 1, !dbg !15765
  %conv = trunc i32 %and to i8, !dbg !15762
  %21 = load %struct.bPoseChannel*, %struct.bPoseChannel** %chan, align 8, !dbg !15766
  %selectflag = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %21, i32 0, i32 10, !dbg !15767
  store i8 %conv, i8* %selectflag, align 1, !dbg !15768
  br label %if.end9, !dbg !15766

if.end9:                                          ; preds = %if.then7, %if.end5
  %22 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !15769
  %23 = load %struct.bPoseChannel*, %struct.bPoseChannel** %chan, align 8, !dbg !15770
  %24 = bitcast %struct.bPoseChannel* %23 to i8*, !dbg !15770
  call void @writestruct(%struct.WriteData* %22, i32 1096040772, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.200, i64 0, i64 0), i32 1, i8* %24), !dbg !15771
  br label %for.inc, !dbg !15772

for.inc:                                          ; preds = %if.end9
  %25 = load %struct.bPoseChannel*, %struct.bPoseChannel** %chan, align 8, !dbg !15773
  %next = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %25, i32 0, i32 0, !dbg !15774
  %26 = load %struct.bPoseChannel*, %struct.bPoseChannel** %next, align 8, !dbg !15774
  store %struct.bPoseChannel* %26, %struct.bPoseChannel** %chan, align 8, !dbg !15775
  br label %for.cond, !dbg !15776, !llvm.loop !15777

for.end:                                          ; preds = %for.cond
  %27 = load %struct.bPose*, %struct.bPose** %pose.addr, align 8, !dbg !15779
  %agroups = getelementptr inbounds %struct.bPose, %struct.bPose* %27, i32 0, i32 9, !dbg !15781
  %first10 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %agroups, i32 0, i32 0, !dbg !15782
  %28 = load i8*, i8** %first10, align 8, !dbg !15782
  %29 = bitcast i8* %28 to %struct.bActionGroup*, !dbg !15779
  store %struct.bActionGroup* %29, %struct.bActionGroup** %grp, align 8, !dbg !15783
  br label %for.cond11, !dbg !15784

for.cond11:                                       ; preds = %for.inc14, %for.end
  %30 = load %struct.bActionGroup*, %struct.bActionGroup** %grp, align 8, !dbg !15785
  %tobool12 = icmp ne %struct.bActionGroup* %30, null, !dbg !15787
  br i1 %tobool12, label %for.body13, label %for.end16, !dbg !15787

for.body13:                                       ; preds = %for.cond11
  %31 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !15788
  %32 = load %struct.bActionGroup*, %struct.bActionGroup** %grp, align 8, !dbg !15789
  %33 = bitcast %struct.bActionGroup* %32 to i8*, !dbg !15789
  call void @writestruct(%struct.WriteData* %31, i32 1096040772, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.151, i64 0, i64 0), i32 1, i8* %33), !dbg !15790
  br label %for.inc14, !dbg !15790

for.inc14:                                        ; preds = %for.body13
  %34 = load %struct.bActionGroup*, %struct.bActionGroup** %grp, align 8, !dbg !15791
  %next15 = getelementptr inbounds %struct.bActionGroup, %struct.bActionGroup* %34, i32 0, i32 0, !dbg !15792
  %35 = load %struct.bActionGroup*, %struct.bActionGroup** %next15, align 8, !dbg !15792
  store %struct.bActionGroup* %35, %struct.bActionGroup** %grp, align 8, !dbg !15793
  br label %for.cond11, !dbg !15794, !llvm.loop !15795

for.end16:                                        ; preds = %for.cond11
  %36 = load %struct.bPose*, %struct.bPose** %pose.addr, align 8, !dbg !15797
  %ikparam = getelementptr inbounds %struct.bPose, %struct.bPose* %36, i32 0, i32 13, !dbg !15799
  %37 = load i8*, i8** %ikparam, align 8, !dbg !15799
  %tobool17 = icmp ne i8* %37, null, !dbg !15797
  br i1 %tobool17, label %if.then18, label %if.end23, !dbg !15800

if.then18:                                        ; preds = %for.end16
  call void @llvm.dbg.declare(metadata i8** %structname, metadata !15801, metadata !DIExpression()), !dbg !15803
  %38 = load %struct.bPose*, %struct.bPose** %pose.addr, align 8, !dbg !15804
  %call = call i8* @BKE_pose_ikparam_get_name(%struct.bPose* %38), !dbg !15805
  store i8* %call, i8** %structname, align 8, !dbg !15803
  %39 = load i8*, i8** %structname, align 8, !dbg !15806
  %tobool19 = icmp ne i8* %39, null, !dbg !15806
  br i1 %tobool19, label %if.then20, label %if.end22, !dbg !15808

if.then20:                                        ; preds = %if.then18
  %40 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !15809
  %41 = load i8*, i8** %structname, align 8, !dbg !15810
  %42 = load %struct.bPose*, %struct.bPose** %pose.addr, align 8, !dbg !15811
  %ikparam21 = getelementptr inbounds %struct.bPose, %struct.bPose* %42, i32 0, i32 13, !dbg !15812
  %43 = load i8*, i8** %ikparam21, align 8, !dbg !15812
  call void @writestruct(%struct.WriteData* %40, i32 1096040772, i8* %41, i32 1, i8* %43), !dbg !15813
  br label %if.end22, !dbg !15813

if.end22:                                         ; preds = %if.then20, %if.then18
  br label %if.end23, !dbg !15814

if.end23:                                         ; preds = %if.end22, %for.end16
  %44 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !15815
  %45 = load %struct.bPose*, %struct.bPose** %pose.addr, align 8, !dbg !15816
  %46 = bitcast %struct.bPose* %45 to i8*, !dbg !15816
  call void @writestruct(%struct.WriteData* %44, i32 1096040772, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.201, i64 0, i64 0), i32 1, i8* %46), !dbg !15817
  br label %return, !dbg !15818

return:                                           ; preds = %if.end23, %if.then
  ret void, !dbg !15818
}

; Function Attrs: noinline nounwind uwtable
define internal void @write_defgroups(%struct.WriteData* %wd, %struct.ListBase* %defbase) #0 !dbg !15819 {
entry:
  %wd.addr = alloca %struct.WriteData*, align 8
  %defbase.addr = alloca %struct.ListBase*, align 8
  %defgroup = alloca %struct.bDeformGroup*, align 8
  store %struct.WriteData* %wd, %struct.WriteData** %wd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WriteData** %wd.addr, metadata !15820, metadata !DIExpression()), !dbg !15821
  store %struct.ListBase* %defbase, %struct.ListBase** %defbase.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %defbase.addr, metadata !15822, metadata !DIExpression()), !dbg !15823
  call void @llvm.dbg.declare(metadata %struct.bDeformGroup** %defgroup, metadata !15824, metadata !DIExpression()), !dbg !15835
  %0 = load %struct.ListBase*, %struct.ListBase** %defbase.addr, align 8, !dbg !15836
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %0, i32 0, i32 0, !dbg !15838
  %1 = load i8*, i8** %first, align 8, !dbg !15838
  %2 = bitcast i8* %1 to %struct.bDeformGroup*, !dbg !15836
  store %struct.bDeformGroup* %2, %struct.bDeformGroup** %defgroup, align 8, !dbg !15839
  br label %for.cond, !dbg !15840

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.bDeformGroup*, %struct.bDeformGroup** %defgroup, align 8, !dbg !15841
  %tobool = icmp ne %struct.bDeformGroup* %3, null, !dbg !15843
  br i1 %tobool, label %for.body, label %for.end, !dbg !15843

for.body:                                         ; preds = %for.cond
  %4 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !15844
  %5 = load %struct.bDeformGroup*, %struct.bDeformGroup** %defgroup, align 8, !dbg !15845
  %6 = bitcast %struct.bDeformGroup* %5 to i8*, !dbg !15845
  call void @writestruct(%struct.WriteData* %4, i32 1096040772, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.202, i64 0, i64 0), i32 1, i8* %6), !dbg !15846
  br label %for.inc, !dbg !15846

for.inc:                                          ; preds = %for.body
  %7 = load %struct.bDeformGroup*, %struct.bDeformGroup** %defgroup, align 8, !dbg !15847
  %next = getelementptr inbounds %struct.bDeformGroup, %struct.bDeformGroup* %7, i32 0, i32 0, !dbg !15848
  %8 = load %struct.bDeformGroup*, %struct.bDeformGroup** %next, align 8, !dbg !15848
  store %struct.bDeformGroup* %8, %struct.bDeformGroup** %defgroup, align 8, !dbg !15849
  br label %for.cond, !dbg !15850, !llvm.loop !15851

for.end:                                          ; preds = %for.cond
  ret void, !dbg !15853
}

; Function Attrs: noinline nounwind uwtable
define internal void @write_constraints(%struct.WriteData* %wd, %struct.ListBase* %conlist) #0 !dbg !15854 {
entry:
  %wd.addr = alloca %struct.WriteData*, align 8
  %conlist.addr = alloca %struct.ListBase*, align 8
  %con = alloca %struct.bConstraint*, align 8
  %cti = alloca %struct.bConstraintTypeInfo*, align 8
  %data4 = alloca %struct.bPythonConstraint*, align 8
  %ct = alloca %struct.bConstraintTarget*, align 8
  %data11 = alloca %struct.bSplineIKConstraint*, align 8
  store %struct.WriteData* %wd, %struct.WriteData** %wd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WriteData** %wd.addr, metadata !15855, metadata !DIExpression()), !dbg !15856
  store %struct.ListBase* %conlist, %struct.ListBase** %conlist.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %conlist.addr, metadata !15857, metadata !DIExpression()), !dbg !15858
  call void @llvm.dbg.declare(metadata %struct.bConstraint** %con, metadata !15859, metadata !DIExpression()), !dbg !15879
  %0 = load %struct.ListBase*, %struct.ListBase** %conlist.addr, align 8, !dbg !15880
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %0, i32 0, i32 0, !dbg !15882
  %1 = load i8*, i8** %first, align 8, !dbg !15882
  %2 = bitcast i8* %1 to %struct.bConstraint*, !dbg !15880
  store %struct.bConstraint* %2, %struct.bConstraint** %con, align 8, !dbg !15883
  br label %for.cond, !dbg !15884

for.cond:                                         ; preds = %for.inc15, %entry
  %3 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !15885
  %tobool = icmp ne %struct.bConstraint* %3, null, !dbg !15887
  br i1 %tobool, label %for.body, label %for.end17, !dbg !15887

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.bConstraintTypeInfo** %cti, metadata !15888, metadata !DIExpression()), !dbg !15954
  %4 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !15955
  %call = call %struct.bConstraintTypeInfo* @BKE_constraint_typeinfo_get(%struct.bConstraint* %4), !dbg !15956
  store %struct.bConstraintTypeInfo* %call, %struct.bConstraintTypeInfo** %cti, align 8, !dbg !15954
  %5 = load %struct.bConstraintTypeInfo*, %struct.bConstraintTypeInfo** %cti, align 8, !dbg !15957
  %tobool1 = icmp ne %struct.bConstraintTypeInfo* %5, null, !dbg !15957
  br i1 %tobool1, label %land.lhs.true, label %if.end, !dbg !15959

land.lhs.true:                                    ; preds = %for.body
  %6 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !15960
  %data = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %6, i32 0, i32 2, !dbg !15961
  %7 = load i8*, i8** %data, align 8, !dbg !15961
  %tobool2 = icmp ne i8* %7, null, !dbg !15960
  br i1 %tobool2, label %if.then, label %if.end, !dbg !15962

if.then:                                          ; preds = %land.lhs.true
  %8 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !15963
  %9 = load %struct.bConstraintTypeInfo*, %struct.bConstraintTypeInfo** %cti, align 8, !dbg !15965
  %structName = getelementptr inbounds %struct.bConstraintTypeInfo, %struct.bConstraintTypeInfo* %9, i32 0, i32 3, !dbg !15966
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %structName, i64 0, i64 0, !dbg !15965
  %10 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !15967
  %data3 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %10, i32 0, i32 2, !dbg !15968
  %11 = load i8*, i8** %data3, align 8, !dbg !15968
  call void @writestruct(%struct.WriteData* %8, i32 1096040772, i8* %arraydecay, i32 1, i8* %11), !dbg !15969
  %12 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !15970
  %type = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %12, i32 0, i32 3, !dbg !15971
  %13 = load i16, i16* %type, align 8, !dbg !15971
  %conv = sext i16 %13 to i32, !dbg !15970
  switch i32 %conv, label %sw.epilog [
    i32 11, label %sw.bb
    i32 22, label %sw.bb10
  ], !dbg !15972

sw.bb:                                            ; preds = %if.then
  call void @llvm.dbg.declare(metadata %struct.bPythonConstraint** %data4, metadata !15973, metadata !DIExpression()), !dbg !15976
  %14 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !15977
  %data5 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %14, i32 0, i32 2, !dbg !15978
  %15 = load i8*, i8** %data5, align 8, !dbg !15978
  %16 = bitcast i8* %15 to %struct.bPythonConstraint*, !dbg !15979
  store %struct.bPythonConstraint* %16, %struct.bPythonConstraint** %data4, align 8, !dbg !15976
  call void @llvm.dbg.declare(metadata %struct.bConstraintTarget** %ct, metadata !15980, metadata !DIExpression()), !dbg !15983
  %17 = load %struct.bPythonConstraint*, %struct.bPythonConstraint** %data4, align 8, !dbg !15984
  %targets = getelementptr inbounds %struct.bPythonConstraint, %struct.bPythonConstraint* %17, i32 0, i32 4, !dbg !15986
  %first6 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %targets, i32 0, i32 0, !dbg !15987
  %18 = load i8*, i8** %first6, align 8, !dbg !15987
  %19 = bitcast i8* %18 to %struct.bConstraintTarget*, !dbg !15984
  store %struct.bConstraintTarget* %19, %struct.bConstraintTarget** %ct, align 8, !dbg !15988
  br label %for.cond7, !dbg !15989

for.cond7:                                        ; preds = %for.inc, %sw.bb
  %20 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !15990
  %tobool8 = icmp ne %struct.bConstraintTarget* %20, null, !dbg !15992
  br i1 %tobool8, label %for.body9, label %for.end, !dbg !15992

for.body9:                                        ; preds = %for.cond7
  %21 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !15993
  %22 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !15994
  %23 = bitcast %struct.bConstraintTarget* %22 to i8*, !dbg !15994
  call void @writestruct(%struct.WriteData* %21, i32 1096040772, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.203, i64 0, i64 0), i32 1, i8* %23), !dbg !15995
  br label %for.inc, !dbg !15995

for.inc:                                          ; preds = %for.body9
  %24 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !15996
  %next = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %24, i32 0, i32 0, !dbg !15997
  %25 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %next, align 8, !dbg !15997
  store %struct.bConstraintTarget* %25, %struct.bConstraintTarget** %ct, align 8, !dbg !15998
  br label %for.cond7, !dbg !15999, !llvm.loop !16000

for.end:                                          ; preds = %for.cond7
  %26 = load %struct.bPythonConstraint*, %struct.bPythonConstraint** %data4, align 8, !dbg !16002
  %prop = getelementptr inbounds %struct.bPythonConstraint, %struct.bPythonConstraint* %26, i32 0, i32 1, !dbg !16003
  %27 = load %struct.IDProperty*, %struct.IDProperty** %prop, align 8, !dbg !16003
  %28 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !16004
  %29 = bitcast %struct.WriteData* %28 to i8*, !dbg !16004
  call void @IDP_WriteProperty(%struct.IDProperty* %27, i8* %29), !dbg !16005
  br label %sw.epilog, !dbg !16006

sw.bb10:                                          ; preds = %if.then
  call void @llvm.dbg.declare(metadata %struct.bSplineIKConstraint** %data11, metadata !16007, metadata !DIExpression()), !dbg !16009
  %30 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !16010
  %data12 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %30, i32 0, i32 2, !dbg !16011
  %31 = load i8*, i8** %data12, align 8, !dbg !16011
  %32 = bitcast i8* %31 to %struct.bSplineIKConstraint*, !dbg !16012
  store %struct.bSplineIKConstraint* %32, %struct.bSplineIKConstraint** %data11, align 8, !dbg !16009
  %33 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !16013
  %34 = load %struct.bSplineIKConstraint*, %struct.bSplineIKConstraint** %data11, align 8, !dbg !16014
  %numpoints = getelementptr inbounds %struct.bSplineIKConstraint, %struct.bSplineIKConstraint* %34, i32 0, i32 2, !dbg !16015
  %35 = load i16, i16* %numpoints, align 8, !dbg !16015
  %conv13 = sext i16 %35 to i64, !dbg !16016
  %mul = mul i64 4, %conv13, !dbg !16017
  %conv14 = trunc i64 %mul to i32, !dbg !16018
  %36 = load %struct.bSplineIKConstraint*, %struct.bSplineIKConstraint** %data11, align 8, !dbg !16019
  %points = getelementptr inbounds %struct.bSplineIKConstraint, %struct.bSplineIKConstraint* %36, i32 0, i32 1, !dbg !16020
  %37 = load float*, float** %points, align 8, !dbg !16020
  %38 = bitcast float* %37 to i8*, !dbg !16019
  call void @writedata(%struct.WriteData* %33, i32 1096040772, i32 %conv14, i8* %38), !dbg !16021
  br label %sw.epilog, !dbg !16022

sw.epilog:                                        ; preds = %if.then, %sw.bb10, %for.end
  br label %if.end, !dbg !16023

if.end:                                           ; preds = %sw.epilog, %land.lhs.true, %for.body
  %39 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !16024
  %40 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !16025
  %41 = bitcast %struct.bConstraint* %40 to i8*, !dbg !16025
  call void @writestruct(%struct.WriteData* %39, i32 1096040772, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.204, i64 0, i64 0), i32 1, i8* %41), !dbg !16026
  br label %for.inc15, !dbg !16027

for.inc15:                                        ; preds = %if.end
  %42 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !16028
  %next16 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %42, i32 0, i32 0, !dbg !16029
  %43 = load %struct.bConstraint*, %struct.bConstraint** %next16, align 8, !dbg !16029
  store %struct.bConstraint* %43, %struct.bConstraint** %con, align 8, !dbg !16030
  br label %for.cond, !dbg !16031, !llvm.loop !16032

for.end17:                                        ; preds = %for.cond
  ret void, !dbg !16034
}

; Function Attrs: noinline nounwind uwtable
define internal void @write_motionpath(%struct.WriteData* %wd, %struct.bMotionPath* %mpath) #0 !dbg !16035 {
entry:
  %wd.addr = alloca %struct.WriteData*, align 8
  %mpath.addr = alloca %struct.bMotionPath*, align 8
  store %struct.WriteData* %wd, %struct.WriteData** %wd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WriteData** %wd.addr, metadata !16038, metadata !DIExpression()), !dbg !16039
  store %struct.bMotionPath* %mpath, %struct.bMotionPath** %mpath.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bMotionPath** %mpath.addr, metadata !16040, metadata !DIExpression()), !dbg !16041
  %0 = load %struct.bMotionPath*, %struct.bMotionPath** %mpath.addr, align 8, !dbg !16042
  %cmp = icmp eq %struct.bMotionPath* %0, null, !dbg !16044
  br i1 %cmp, label %if.then, label %if.end, !dbg !16045

if.then:                                          ; preds = %entry
  br label %return, !dbg !16046

if.end:                                           ; preds = %entry
  %1 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !16047
  %2 = load %struct.bMotionPath*, %struct.bMotionPath** %mpath.addr, align 8, !dbg !16048
  %3 = bitcast %struct.bMotionPath* %2 to i8*, !dbg !16048
  call void @writestruct(%struct.WriteData* %1, i32 1096040772, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.205, i64 0, i64 0), i32 1, i8* %3), !dbg !16049
  %4 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !16050
  %5 = load %struct.bMotionPath*, %struct.bMotionPath** %mpath.addr, align 8, !dbg !16051
  %length = getelementptr inbounds %struct.bMotionPath, %struct.bMotionPath* %5, i32 0, i32 1, !dbg !16052
  %6 = load i32, i32* %length, align 8, !dbg !16052
  %7 = load %struct.bMotionPath*, %struct.bMotionPath** %mpath.addr, align 8, !dbg !16053
  %points = getelementptr inbounds %struct.bMotionPath, %struct.bMotionPath* %7, i32 0, i32 0, !dbg !16054
  %8 = load %struct.bMotionPathVert*, %struct.bMotionPathVert** %points, align 8, !dbg !16054
  %9 = bitcast %struct.bMotionPathVert* %8 to i8*, !dbg !16053
  call void @writestruct(%struct.WriteData* %4, i32 1096040772, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.206, i64 0, i64 0), i32 %6, i8* %9), !dbg !16055
  br label %return, !dbg !16056

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !16056
}

; Function Attrs: noinline nounwind uwtable
define internal void @write_particlesystems(%struct.WriteData* %wd, %struct.ListBase* %particles) #0 !dbg !16057 {
entry:
  %wd.addr = alloca %struct.WriteData*, align 8
  %particles.addr = alloca %struct.ListBase*, align 8
  %psys = alloca %struct.ParticleSystem*, align 8
  %pt = alloca %struct.ParticleTarget*, align 8
  %a = alloca i32, align 4
  %pa = alloca %struct.ParticleData*, align 8
  store %struct.WriteData* %wd, %struct.WriteData** %wd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WriteData** %wd.addr, metadata !16058, metadata !DIExpression()), !dbg !16059
  store %struct.ListBase* %particles, %struct.ListBase** %particles.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %particles.addr, metadata !16060, metadata !DIExpression()), !dbg !16061
  call void @llvm.dbg.declare(metadata %struct.ParticleSystem** %psys, metadata !16062, metadata !DIExpression()), !dbg !16065
  %0 = load %struct.ListBase*, %struct.ListBase** %particles.addr, align 8, !dbg !16066
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %0, i32 0, i32 0, !dbg !16067
  %1 = load i8*, i8** %first, align 8, !dbg !16067
  %2 = bitcast i8* %1 to %struct.ParticleSystem*, !dbg !16066
  store %struct.ParticleSystem* %2, %struct.ParticleSystem** %psys, align 8, !dbg !16065
  call void @llvm.dbg.declare(metadata %struct.ParticleTarget** %pt, metadata !16068, metadata !DIExpression()), !dbg !16082
  call void @llvm.dbg.declare(metadata i32* %a, metadata !16083, metadata !DIExpression()), !dbg !16084
  br label %for.cond, !dbg !16085

for.cond:                                         ; preds = %for.inc52, %entry
  %3 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !16086
  %tobool = icmp ne %struct.ParticleSystem* %3, null, !dbg !16089
  br i1 %tobool, label %for.body, label %for.end54, !dbg !16089

for.body:                                         ; preds = %for.cond
  %4 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !16090
  %5 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !16092
  %6 = bitcast %struct.ParticleSystem* %5 to i8*, !dbg !16092
  call void @writestruct(%struct.WriteData* %4, i32 1096040772, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.207, i64 0, i64 0), i32 1, i8* %6), !dbg !16093
  %7 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !16094
  %particles1 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %7, i32 0, i32 3, !dbg !16096
  %8 = load %struct.ParticleData*, %struct.ParticleData** %particles1, align 8, !dbg !16096
  %tobool2 = icmp ne %struct.ParticleData* %8, null, !dbg !16094
  br i1 %tobool2, label %if.then, label %if.end35, !dbg !16097

if.then:                                          ; preds = %for.body
  %9 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !16098
  %10 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !16100
  %totpart = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %10, i32 0, i32 26, !dbg !16101
  %11 = load i32, i32* %totpart, align 8, !dbg !16101
  %12 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !16102
  %particles3 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %12, i32 0, i32 3, !dbg !16103
  %13 = load %struct.ParticleData*, %struct.ParticleData** %particles3, align 8, !dbg !16103
  %14 = bitcast %struct.ParticleData* %13 to i8*, !dbg !16102
  call void @writestruct(%struct.WriteData* %9, i32 1096040772, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.208, i64 0, i64 0), i32 %11, i8* %14), !dbg !16104
  %15 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !16105
  %particles4 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %15, i32 0, i32 3, !dbg !16107
  %16 = load %struct.ParticleData*, %struct.ParticleData** %particles4, align 8, !dbg !16107
  %hair = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %16, i32 0, i32 2, !dbg !16108
  %17 = load %struct.HairKey*, %struct.HairKey** %hair, align 8, !dbg !16108
  %tobool5 = icmp ne %struct.HairKey* %17, null, !dbg !16105
  br i1 %tobool5, label %if.then6, label %if.end, !dbg !16109

if.then6:                                         ; preds = %if.then
  call void @llvm.dbg.declare(metadata %struct.ParticleData** %pa, metadata !16110, metadata !DIExpression()), !dbg !16112
  %18 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !16113
  %particles7 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %18, i32 0, i32 3, !dbg !16114
  %19 = load %struct.ParticleData*, %struct.ParticleData** %particles7, align 8, !dbg !16114
  store %struct.ParticleData* %19, %struct.ParticleData** %pa, align 8, !dbg !16112
  store i32 0, i32* %a, align 4, !dbg !16115
  br label %for.cond8, !dbg !16117

for.cond8:                                        ; preds = %for.inc, %if.then6
  %20 = load i32, i32* %a, align 4, !dbg !16118
  %21 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !16120
  %totpart9 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %21, i32 0, i32 26, !dbg !16121
  %22 = load i32, i32* %totpart9, align 8, !dbg !16121
  %cmp = icmp slt i32 %20, %22, !dbg !16122
  br i1 %cmp, label %for.body10, label %for.end, !dbg !16123

for.body10:                                       ; preds = %for.cond8
  %23 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !16124
  %24 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !16125
  %totkey = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %24, i32 0, i32 5, !dbg !16126
  %25 = load i32, i32* %totkey, align 8, !dbg !16126
  %26 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !16127
  %hair11 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %26, i32 0, i32 2, !dbg !16128
  %27 = load %struct.HairKey*, %struct.HairKey** %hair11, align 8, !dbg !16128
  %28 = bitcast %struct.HairKey* %27 to i8*, !dbg !16127
  call void @writestruct(%struct.WriteData* %23, i32 1096040772, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.209, i64 0, i64 0), i32 %25, i8* %28), !dbg !16129
  br label %for.inc, !dbg !16129

for.inc:                                          ; preds = %for.body10
  %29 = load i32, i32* %a, align 4, !dbg !16130
  %inc = add nsw i32 %29, 1, !dbg !16130
  store i32 %inc, i32* %a, align 4, !dbg !16130
  %30 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !16131
  %incdec.ptr = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %30, i32 1, !dbg !16131
  store %struct.ParticleData* %incdec.ptr, %struct.ParticleData** %pa, align 8, !dbg !16131
  br label %for.cond8, !dbg !16132, !llvm.loop !16133

for.end:                                          ; preds = %for.cond8
  br label %if.end, !dbg !16135

if.end:                                           ; preds = %for.end, %if.then
  %31 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !16136
  %particles12 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %31, i32 0, i32 3, !dbg !16138
  %32 = load %struct.ParticleData*, %struct.ParticleData** %particles12, align 8, !dbg !16138
  %boid = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %32, i32 0, i32 4, !dbg !16139
  %33 = load %struct.BoidParticle*, %struct.BoidParticle** %boid, align 8, !dbg !16139
  %tobool13 = icmp ne %struct.BoidParticle* %33, null, !dbg !16136
  br i1 %tobool13, label %land.lhs.true, label %if.end20, !dbg !16140

land.lhs.true:                                    ; preds = %if.end
  %34 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !16141
  %part = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %34, i32 0, i32 2, !dbg !16142
  %35 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !16142
  %phystype = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %35, i32 0, i32 11, !dbg !16143
  %36 = load i16, i16* %phystype, align 8, !dbg !16143
  %conv = sext i16 %36 to i32, !dbg !16141
  %cmp14 = icmp eq i32 %conv, 3, !dbg !16144
  br i1 %cmp14, label %if.then16, label %if.end20, !dbg !16145

if.then16:                                        ; preds = %land.lhs.true
  %37 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !16146
  %38 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !16147
  %totpart17 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %38, i32 0, i32 26, !dbg !16148
  %39 = load i32, i32* %totpart17, align 8, !dbg !16148
  %40 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !16149
  %particles18 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %40, i32 0, i32 3, !dbg !16150
  %41 = load %struct.ParticleData*, %struct.ParticleData** %particles18, align 8, !dbg !16150
  %boid19 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %41, i32 0, i32 4, !dbg !16151
  %42 = load %struct.BoidParticle*, %struct.BoidParticle** %boid19, align 8, !dbg !16151
  %43 = bitcast %struct.BoidParticle* %42 to i8*, !dbg !16149
  call void @writestruct(%struct.WriteData* %37, i32 1096040772, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.210, i64 0, i64 0), i32 %39, i8* %43), !dbg !16152
  br label %if.end20, !dbg !16152

if.end20:                                         ; preds = %if.then16, %land.lhs.true, %if.end
  %44 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !16153
  %part21 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %44, i32 0, i32 2, !dbg !16155
  %45 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part21, align 8, !dbg !16155
  %fluid = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %45, i32 0, i32 3, !dbg !16156
  %46 = load %struct.SPHFluidSettings*, %struct.SPHFluidSettings** %fluid, align 8, !dbg !16156
  %tobool22 = icmp ne %struct.SPHFluidSettings* %46, null, !dbg !16153
  br i1 %tobool22, label %land.lhs.true23, label %if.end34, !dbg !16157

land.lhs.true23:                                  ; preds = %if.end20
  %47 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !16158
  %part24 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %47, i32 0, i32 2, !dbg !16159
  %48 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part24, align 8, !dbg !16159
  %phystype25 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %48, i32 0, i32 11, !dbg !16160
  %49 = load i16, i16* %phystype25, align 8, !dbg !16160
  %conv26 = sext i16 %49 to i32, !dbg !16158
  %cmp27 = icmp eq i32 %conv26, 4, !dbg !16161
  br i1 %cmp27, label %land.lhs.true29, label %if.end34, !dbg !16162

land.lhs.true29:                                  ; preds = %land.lhs.true23
  %50 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !16163
  %part30 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %50, i32 0, i32 2, !dbg !16164
  %51 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part30, align 8, !dbg !16164
  %fluid31 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %51, i32 0, i32 3, !dbg !16165
  %52 = load %struct.SPHFluidSettings*, %struct.SPHFluidSettings** %fluid31, align 8, !dbg !16165
  %flag = getelementptr inbounds %struct.SPHFluidSettings, %struct.SPHFluidSettings* %52, i32 0, i32 13, !dbg !16166
  %53 = load i32, i32* %flag, align 4, !dbg !16166
  %and = and i32 %53, 1, !dbg !16167
  %tobool32 = icmp ne i32 %and, 0, !dbg !16167
  br i1 %tobool32, label %if.then33, label %if.end34, !dbg !16168

if.then33:                                        ; preds = %land.lhs.true29
  %54 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !16169
  %55 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !16170
  %tot_fluidsprings = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %55, i32 0, i32 44, !dbg !16171
  %56 = load i32, i32* %tot_fluidsprings, align 8, !dbg !16171
  %57 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !16172
  %fluid_springs = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %57, i32 0, i32 43, !dbg !16173
  %58 = load %struct.ParticleSpring*, %struct.ParticleSpring** %fluid_springs, align 8, !dbg !16173
  %59 = bitcast %struct.ParticleSpring* %58 to i8*, !dbg !16172
  call void @writestruct(%struct.WriteData* %54, i32 1096040772, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.121, i64 0, i64 0), i32 %56, i8* %59), !dbg !16174
  br label %if.end34, !dbg !16174

if.end34:                                         ; preds = %if.then33, %land.lhs.true29, %land.lhs.true23, %if.end20
  br label %if.end35, !dbg !16175

if.end35:                                         ; preds = %if.end34, %for.body
  %60 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !16176
  %targets = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %60, i32 0, i32 17, !dbg !16177
  %first36 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %targets, i32 0, i32 0, !dbg !16178
  %61 = load i8*, i8** %first36, align 8, !dbg !16178
  %62 = bitcast i8* %61 to %struct.ParticleTarget*, !dbg !16176
  store %struct.ParticleTarget* %62, %struct.ParticleTarget** %pt, align 8, !dbg !16179
  br label %for.cond37, !dbg !16180

for.cond37:                                       ; preds = %for.inc40, %if.end35
  %63 = load %struct.ParticleTarget*, %struct.ParticleTarget** %pt, align 8, !dbg !16181
  %tobool38 = icmp ne %struct.ParticleTarget* %63, null, !dbg !16184
  br i1 %tobool38, label %for.body39, label %for.end41, !dbg !16184

for.body39:                                       ; preds = %for.cond37
  %64 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !16185
  %65 = load %struct.ParticleTarget*, %struct.ParticleTarget** %pt, align 8, !dbg !16186
  %66 = bitcast %struct.ParticleTarget* %65 to i8*, !dbg !16186
  call void @writestruct(%struct.WriteData* %64, i32 1096040772, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.211, i64 0, i64 0), i32 1, i8* %66), !dbg !16187
  br label %for.inc40, !dbg !16187

for.inc40:                                        ; preds = %for.body39
  %67 = load %struct.ParticleTarget*, %struct.ParticleTarget** %pt, align 8, !dbg !16188
  %next = getelementptr inbounds %struct.ParticleTarget, %struct.ParticleTarget* %67, i32 0, i32 0, !dbg !16189
  %68 = load %struct.ParticleTarget*, %struct.ParticleTarget** %next, align 8, !dbg !16189
  store %struct.ParticleTarget* %68, %struct.ParticleTarget** %pt, align 8, !dbg !16190
  br label %for.cond37, !dbg !16191, !llvm.loop !16192

for.end41:                                        ; preds = %for.cond37
  %69 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !16194
  %child = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %69, i32 0, i32 4, !dbg !16196
  %70 = load %struct.ChildParticle*, %struct.ChildParticle** %child, align 8, !dbg !16196
  %tobool42 = icmp ne %struct.ChildParticle* %70, null, !dbg !16194
  br i1 %tobool42, label %if.then43, label %if.end45, !dbg !16197

if.then43:                                        ; preds = %for.end41
  %71 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !16198
  %72 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !16199
  %totchild = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %72, i32 0, i32 28, !dbg !16200
  %73 = load i32, i32* %totchild, align 8, !dbg !16200
  %74 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !16201
  %child44 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %74, i32 0, i32 4, !dbg !16202
  %75 = load %struct.ChildParticle*, %struct.ChildParticle** %child44, align 8, !dbg !16202
  %76 = bitcast %struct.ChildParticle* %75 to i8*, !dbg !16201
  call void @writestruct(%struct.WriteData* %71, i32 1096040772, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.212, i64 0, i64 0), i32 %73, i8* %76), !dbg !16203
  br label %if.end45, !dbg !16203

if.end45:                                         ; preds = %if.then43, %for.end41
  %77 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !16204
  %clmd = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %77, i32 0, i32 11, !dbg !16206
  %78 = load %struct.ClothModifierData*, %struct.ClothModifierData** %clmd, align 8, !dbg !16206
  %tobool46 = icmp ne %struct.ClothModifierData* %78, null, !dbg !16204
  br i1 %tobool46, label %if.then47, label %if.end51, !dbg !16207

if.then47:                                        ; preds = %if.end45
  %79 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !16208
  %80 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !16210
  %clmd48 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %80, i32 0, i32 11, !dbg !16211
  %81 = load %struct.ClothModifierData*, %struct.ClothModifierData** %clmd48, align 8, !dbg !16211
  %82 = bitcast %struct.ClothModifierData* %81 to i8*, !dbg !16210
  call void @writestruct(%struct.WriteData* %79, i32 1096040772, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.213, i64 0, i64 0), i32 1, i8* %82), !dbg !16212
  %83 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !16213
  %84 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !16214
  %clmd49 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %84, i32 0, i32 11, !dbg !16215
  %85 = load %struct.ClothModifierData*, %struct.ClothModifierData** %clmd49, align 8, !dbg !16215
  %sim_parms = getelementptr inbounds %struct.ClothModifierData, %struct.ClothModifierData* %85, i32 0, i32 3, !dbg !16216
  %86 = load %struct.ClothSimSettings*, %struct.ClothSimSettings** %sim_parms, align 8, !dbg !16216
  %87 = bitcast %struct.ClothSimSettings* %86 to i8*, !dbg !16214
  call void @writestruct(%struct.WriteData* %83, i32 1096040772, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.214, i64 0, i64 0), i32 1, i8* %87), !dbg !16217
  %88 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !16218
  %89 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !16219
  %clmd50 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %89, i32 0, i32 11, !dbg !16220
  %90 = load %struct.ClothModifierData*, %struct.ClothModifierData** %clmd50, align 8, !dbg !16220
  %coll_parms = getelementptr inbounds %struct.ClothModifierData, %struct.ClothModifierData* %90, i32 0, i32 4, !dbg !16221
  %91 = load %struct.ClothCollSettings*, %struct.ClothCollSettings** %coll_parms, align 8, !dbg !16221
  %92 = bitcast %struct.ClothCollSettings* %91 to i8*, !dbg !16219
  call void @writestruct(%struct.WriteData* %88, i32 1096040772, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.215, i64 0, i64 0), i32 1, i8* %92), !dbg !16222
  br label %if.end51, !dbg !16223

if.end51:                                         ; preds = %if.then47, %if.end45
  %93 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !16224
  %94 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !16225
  %ptcaches = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %94, i32 0, i32 41, !dbg !16226
  call void @write_pointcaches(%struct.WriteData* %93, %struct.ListBase* %ptcaches), !dbg !16227
  br label %for.inc52, !dbg !16228

for.inc52:                                        ; preds = %if.end51
  %95 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !16229
  %next53 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %95, i32 0, i32 0, !dbg !16230
  %96 = load %struct.ParticleSystem*, %struct.ParticleSystem** %next53, align 8, !dbg !16230
  store %struct.ParticleSystem* %96, %struct.ParticleSystem** %psys, align 8, !dbg !16231
  br label %for.cond, !dbg !16232, !llvm.loop !16233

for.end54:                                        ; preds = %for.cond
  ret void, !dbg !16235
}

; Function Attrs: noinline nounwind uwtable
define internal void @write_modifiers(%struct.WriteData* %wd, %struct.ListBase* %modbase) #0 !dbg !16236 {
entry:
  %wd.addr = alloca %struct.WriteData*, align 8
  %modbase.addr = alloca %struct.ListBase*, align 8
  %md = alloca %struct.ModifierData*, align 8
  %mti = alloca %struct.ModifierTypeInfo*, align 8
  %hmd = alloca %struct.HookModifierData*, align 8
  %clmd = alloca %struct.ClothModifierData*, align 8
  %smd = alloca %struct.SmokeModifierData*, align 8
  %fluidmd = alloca %struct.FluidsimModifierData*, align 8
  %pmd = alloca %struct.DynamicPaintModifierData*, align 8
  %surface = alloca %struct.DynamicPaintSurface*, align 8
  %mmd = alloca %struct.MeshDeformModifierData*, align 8
  %size = alloca i32, align 4
  %tmd = alloca %struct.WarpModifierData*, align 8
  %wmd = alloca %struct.WeightVGEditModifierData*, align 8
  %lmd = alloca %struct.LaplacianDeformModifierData*, align 8
  store %struct.WriteData* %wd, %struct.WriteData** %wd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WriteData** %wd.addr, metadata !16237, metadata !DIExpression()), !dbg !16238
  store %struct.ListBase* %modbase, %struct.ListBase** %modbase.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %modbase.addr, metadata !16239, metadata !DIExpression()), !dbg !16240
  call void @llvm.dbg.declare(metadata %struct.ModifierData** %md, metadata !16241, metadata !DIExpression()), !dbg !16243
  %0 = load %struct.ListBase*, %struct.ListBase** %modbase.addr, align 8, !dbg !16244
  %cmp = icmp eq %struct.ListBase* %0, null, !dbg !16246
  br i1 %cmp, label %if.then, label %if.end, !dbg !16247

if.then:                                          ; preds = %entry
  br label %for.end165, !dbg !16248

if.end:                                           ; preds = %entry
  %1 = load %struct.ListBase*, %struct.ListBase** %modbase.addr, align 8, !dbg !16249
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %1, i32 0, i32 0, !dbg !16251
  %2 = load i8*, i8** %first, align 8, !dbg !16251
  %3 = bitcast i8* %2 to %struct.ModifierData*, !dbg !16249
  store %struct.ModifierData* %3, %struct.ModifierData** %md, align 8, !dbg !16252
  br label %for.cond, !dbg !16253

for.cond:                                         ; preds = %for.inc163, %if.end
  %4 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !16254
  %tobool = icmp ne %struct.ModifierData* %4, null, !dbg !16256
  br i1 %tobool, label %for.body, label %for.end165, !dbg !16256

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.ModifierTypeInfo** %mti, metadata !16257, metadata !DIExpression()), !dbg !16350
  %5 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !16351
  %type = getelementptr inbounds %struct.ModifierData, %struct.ModifierData* %5, i32 0, i32 2, !dbg !16352
  %6 = load i32, i32* %type, align 8, !dbg !16352
  %call = call %struct.ModifierTypeInfo* @modifierType_getInfo(i32 %6), !dbg !16353
  store %struct.ModifierTypeInfo* %call, %struct.ModifierTypeInfo** %mti, align 8, !dbg !16350
  %7 = load %struct.ModifierTypeInfo*, %struct.ModifierTypeInfo** %mti, align 8, !dbg !16354
  %cmp1 = icmp eq %struct.ModifierTypeInfo* %7, null, !dbg !16356
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !16357

if.then2:                                         ; preds = %for.body
  br label %for.end165, !dbg !16358

if.end3:                                          ; preds = %for.body
  %8 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !16359
  %9 = load %struct.ModifierTypeInfo*, %struct.ModifierTypeInfo** %mti, align 8, !dbg !16360
  %structName = getelementptr inbounds %struct.ModifierTypeInfo, %struct.ModifierTypeInfo* %9, i32 0, i32 1, !dbg !16361
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %structName, i64 0, i64 0, !dbg !16360
  %10 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !16362
  %11 = bitcast %struct.ModifierData* %10 to i8*, !dbg !16362
  call void @writestruct(%struct.WriteData* %8, i32 1096040772, i8* %arraydecay, i32 1, i8* %11), !dbg !16363
  %12 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !16364
  %type4 = getelementptr inbounds %struct.ModifierData, %struct.ModifierData* %12, i32 0, i32 2, !dbg !16366
  %13 = load i32, i32* %type4, align 8, !dbg !16366
  %cmp5 = icmp eq i32 %13, 9, !dbg !16367
  br i1 %cmp5, label %if.then6, label %if.else, !dbg !16368

if.then6:                                         ; preds = %if.end3
  call void @llvm.dbg.declare(metadata %struct.HookModifierData** %hmd, metadata !16369, metadata !DIExpression()), !dbg !16371
  %14 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !16372
  %15 = bitcast %struct.ModifierData* %14 to %struct.HookModifierData*, !dbg !16373
  store %struct.HookModifierData* %15, %struct.HookModifierData** %hmd, align 8, !dbg !16371
  %16 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !16374
  %17 = load %struct.HookModifierData*, %struct.HookModifierData** %hmd, align 8, !dbg !16375
  %totindex = getelementptr inbounds %struct.HookModifierData, %struct.HookModifierData* %17, i32 0, i32 7, !dbg !16376
  %18 = load i32, i32* %totindex, align 8, !dbg !16376
  %conv = sext i32 %18 to i64, !dbg !16375
  %mul = mul i64 4, %conv, !dbg !16377
  %conv7 = trunc i64 %mul to i32, !dbg !16378
  %19 = load %struct.HookModifierData*, %struct.HookModifierData** %hmd, align 8, !dbg !16379
  %indexar = getelementptr inbounds %struct.HookModifierData, %struct.HookModifierData* %19, i32 0, i32 6, !dbg !16380
  %20 = load i32*, i32** %indexar, align 8, !dbg !16380
  %21 = bitcast i32* %20 to i8*, !dbg !16379
  call void @writedata(%struct.WriteData* %16, i32 1096040772, i32 %conv7, i8* %21), !dbg !16381
  br label %if.end162, !dbg !16382

if.else:                                          ; preds = %if.end3
  %22 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !16383
  %type8 = getelementptr inbounds %struct.ModifierData, %struct.ModifierData* %22, i32 0, i32 2, !dbg !16385
  %23 = load i32, i32* %type8, align 8, !dbg !16385
  %cmp9 = icmp eq i32 %23, 22, !dbg !16386
  br i1 %cmp9, label %if.then11, label %if.else13, !dbg !16387

if.then11:                                        ; preds = %if.else
  call void @llvm.dbg.declare(metadata %struct.ClothModifierData** %clmd, metadata !16388, metadata !DIExpression()), !dbg !16390
  %24 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !16391
  %25 = bitcast %struct.ModifierData* %24 to %struct.ClothModifierData*, !dbg !16392
  store %struct.ClothModifierData* %25, %struct.ClothModifierData** %clmd, align 8, !dbg !16390
  %26 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !16393
  %27 = load %struct.ClothModifierData*, %struct.ClothModifierData** %clmd, align 8, !dbg !16394
  %sim_parms = getelementptr inbounds %struct.ClothModifierData, %struct.ClothModifierData* %27, i32 0, i32 3, !dbg !16395
  %28 = load %struct.ClothSimSettings*, %struct.ClothSimSettings** %sim_parms, align 8, !dbg !16395
  %29 = bitcast %struct.ClothSimSettings* %28 to i8*, !dbg !16394
  call void @writestruct(%struct.WriteData* %26, i32 1096040772, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.214, i64 0, i64 0), i32 1, i8* %29), !dbg !16396
  %30 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !16397
  %31 = load %struct.ClothModifierData*, %struct.ClothModifierData** %clmd, align 8, !dbg !16398
  %coll_parms = getelementptr inbounds %struct.ClothModifierData, %struct.ClothModifierData* %31, i32 0, i32 4, !dbg !16399
  %32 = load %struct.ClothCollSettings*, %struct.ClothCollSettings** %coll_parms, align 8, !dbg !16399
  %33 = bitcast %struct.ClothCollSettings* %32 to i8*, !dbg !16398
  call void @writestruct(%struct.WriteData* %30, i32 1096040772, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.215, i64 0, i64 0), i32 1, i8* %33), !dbg !16400
  %34 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !16401
  %35 = load %struct.ClothModifierData*, %struct.ClothModifierData** %clmd, align 8, !dbg !16402
  %sim_parms12 = getelementptr inbounds %struct.ClothModifierData, %struct.ClothModifierData* %35, i32 0, i32 3, !dbg !16403
  %36 = load %struct.ClothSimSettings*, %struct.ClothSimSettings** %sim_parms12, align 8, !dbg !16403
  %effector_weights = getelementptr inbounds %struct.ClothSimSettings, %struct.ClothSimSettings* %36, i32 0, i32 41, !dbg !16404
  %37 = load %struct.EffectorWeights*, %struct.EffectorWeights** %effector_weights, align 8, !dbg !16404
  %38 = bitcast %struct.EffectorWeights* %37 to i8*, !dbg !16402
  call void @writestruct(%struct.WriteData* %34, i32 1096040772, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.107, i64 0, i64 0), i32 1, i8* %38), !dbg !16405
  %39 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !16406
  %40 = load %struct.ClothModifierData*, %struct.ClothModifierData** %clmd, align 8, !dbg !16407
  %ptcaches = getelementptr inbounds %struct.ClothModifierData, %struct.ClothModifierData* %40, i32 0, i32 6, !dbg !16408
  call void @write_pointcaches(%struct.WriteData* %39, %struct.ListBase* %ptcaches), !dbg !16409
  br label %if.end161, !dbg !16410

if.else13:                                        ; preds = %if.else
  %41 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !16411
  %type14 = getelementptr inbounds %struct.ModifierData, %struct.ModifierData* %41, i32 0, i32 2, !dbg !16413
  %42 = load i32, i32* %type14, align 8, !dbg !16413
  %cmp15 = icmp eq i32 %42, 31, !dbg !16414
  br i1 %cmp15, label %if.then17, label %if.else67, !dbg !16415

if.then17:                                        ; preds = %if.else13
  call void @llvm.dbg.declare(metadata %struct.SmokeModifierData** %smd, metadata !16416, metadata !DIExpression()), !dbg !16418
  %43 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !16419
  %44 = bitcast %struct.ModifierData* %43 to %struct.SmokeModifierData*, !dbg !16420
  store %struct.SmokeModifierData* %44, %struct.SmokeModifierData** %smd, align 8, !dbg !16418
  %45 = load %struct.SmokeModifierData*, %struct.SmokeModifierData** %smd, align 8, !dbg !16421
  %type18 = getelementptr inbounds %struct.SmokeModifierData, %struct.SmokeModifierData* %45, i32 0, i32 5, !dbg !16423
  %46 = load i32, i32* %type18, align 4, !dbg !16423
  %and = and i32 %46, 1, !dbg !16424
  %tobool19 = icmp ne i32 %and, 0, !dbg !16424
  br i1 %tobool19, label %if.then20, label %if.else54, !dbg !16425

if.then20:                                        ; preds = %if.then17
  %47 = load %struct.SmokeModifierData*, %struct.SmokeModifierData** %smd, align 8, !dbg !16426
  %domain = getelementptr inbounds %struct.SmokeModifierData, %struct.SmokeModifierData* %47, i32 0, i32 1, !dbg !16429
  %48 = load %struct.SmokeDomainSettings*, %struct.SmokeDomainSettings** %domain, align 8, !dbg !16429
  %tobool21 = icmp ne %struct.SmokeDomainSettings* %48, null, !dbg !16426
  br i1 %tobool21, label %if.then22, label %if.end40, !dbg !16430

if.then22:                                        ; preds = %if.then20
  %49 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !16431
  %50 = load %struct.SmokeModifierData*, %struct.SmokeModifierData** %smd, align 8, !dbg !16433
  %domain23 = getelementptr inbounds %struct.SmokeModifierData, %struct.SmokeModifierData* %50, i32 0, i32 1, !dbg !16434
  %51 = load %struct.SmokeDomainSettings*, %struct.SmokeDomainSettings** %domain23, align 8, !dbg !16434
  %ptcaches24 = getelementptr inbounds %struct.SmokeDomainSettings, %struct.SmokeDomainSettings* %51, i32 0, i32 48, !dbg !16435
  %arrayidx = getelementptr inbounds [2 x %struct.ListBase], [2 x %struct.ListBase]* %ptcaches24, i64 0, i64 0, !dbg !16433
  call void @write_pointcaches(%struct.WriteData* %49, %struct.ListBase* %arrayidx), !dbg !16436
  %52 = load %struct.SmokeModifierData*, %struct.SmokeModifierData** %smd, align 8, !dbg !16437
  %domain25 = getelementptr inbounds %struct.SmokeModifierData, %struct.SmokeModifierData* %52, i32 0, i32 1, !dbg !16438
  %53 = load %struct.SmokeDomainSettings*, %struct.SmokeDomainSettings** %domain25, align 8, !dbg !16438
  %ptcaches26 = getelementptr inbounds %struct.SmokeDomainSettings, %struct.SmokeDomainSettings* %53, i32 0, i32 48, !dbg !16439
  %arrayidx27 = getelementptr inbounds [2 x %struct.ListBase], [2 x %struct.ListBase]* %ptcaches26, i64 0, i64 1, !dbg !16437
  %call28 = call %struct.PointCache* @BKE_ptcache_add(%struct.ListBase* %arrayidx27), !dbg !16440
  %54 = load %struct.SmokeModifierData*, %struct.SmokeModifierData** %smd, align 8, !dbg !16441
  %domain29 = getelementptr inbounds %struct.SmokeModifierData, %struct.SmokeModifierData* %54, i32 0, i32 1, !dbg !16442
  %55 = load %struct.SmokeDomainSettings*, %struct.SmokeDomainSettings** %domain29, align 8, !dbg !16442
  %point_cache = getelementptr inbounds %struct.SmokeDomainSettings, %struct.SmokeDomainSettings* %55, i32 0, i32 47, !dbg !16443
  %arrayidx30 = getelementptr inbounds [2 x %struct.PointCache*], [2 x %struct.PointCache*]* %point_cache, i64 0, i64 1, !dbg !16441
  store %struct.PointCache* %call28, %struct.PointCache** %arrayidx30, align 8, !dbg !16444
  %56 = load %struct.SmokeModifierData*, %struct.SmokeModifierData** %smd, align 8, !dbg !16445
  %domain31 = getelementptr inbounds %struct.SmokeModifierData, %struct.SmokeModifierData* %56, i32 0, i32 1, !dbg !16446
  %57 = load %struct.SmokeDomainSettings*, %struct.SmokeDomainSettings** %domain31, align 8, !dbg !16446
  %point_cache32 = getelementptr inbounds %struct.SmokeDomainSettings, %struct.SmokeDomainSettings* %57, i32 0, i32 47, !dbg !16447
  %arrayidx33 = getelementptr inbounds [2 x %struct.PointCache*], [2 x %struct.PointCache*]* %point_cache32, i64 0, i64 1, !dbg !16445
  %58 = load %struct.PointCache*, %struct.PointCache** %arrayidx33, align 8, !dbg !16445
  %flag = getelementptr inbounds %struct.PointCache, %struct.PointCache* %58, i32 0, i32 2, !dbg !16448
  %59 = load i32, i32* %flag, align 8, !dbg !16449
  %or = or i32 %59, 4160, !dbg !16449
  store i32 %or, i32* %flag, align 8, !dbg !16449
  %60 = load %struct.SmokeModifierData*, %struct.SmokeModifierData** %smd, align 8, !dbg !16450
  %domain34 = getelementptr inbounds %struct.SmokeModifierData, %struct.SmokeModifierData* %60, i32 0, i32 1, !dbg !16451
  %61 = load %struct.SmokeDomainSettings*, %struct.SmokeDomainSettings** %domain34, align 8, !dbg !16451
  %point_cache35 = getelementptr inbounds %struct.SmokeDomainSettings, %struct.SmokeDomainSettings* %61, i32 0, i32 47, !dbg !16452
  %arrayidx36 = getelementptr inbounds [2 x %struct.PointCache*], [2 x %struct.PointCache*]* %point_cache35, i64 0, i64 1, !dbg !16450
  %62 = load %struct.PointCache*, %struct.PointCache** %arrayidx36, align 8, !dbg !16450
  %step = getelementptr inbounds %struct.PointCache, %struct.PointCache* %62, i32 0, i32 3, !dbg !16453
  store i32 1, i32* %step, align 4, !dbg !16454
  %63 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !16455
  %64 = load %struct.SmokeModifierData*, %struct.SmokeModifierData** %smd, align 8, !dbg !16456
  %domain37 = getelementptr inbounds %struct.SmokeModifierData, %struct.SmokeModifierData* %64, i32 0, i32 1, !dbg !16457
  %65 = load %struct.SmokeDomainSettings*, %struct.SmokeDomainSettings** %domain37, align 8, !dbg !16457
  %ptcaches38 = getelementptr inbounds %struct.SmokeDomainSettings, %struct.SmokeDomainSettings* %65, i32 0, i32 48, !dbg !16458
  %arrayidx39 = getelementptr inbounds [2 x %struct.ListBase], [2 x %struct.ListBase]* %ptcaches38, i64 0, i64 1, !dbg !16456
  call void @write_pointcaches(%struct.WriteData* %63, %struct.ListBase* %arrayidx39), !dbg !16459
  br label %if.end40, !dbg !16460

if.end40:                                         ; preds = %if.then22, %if.then20
  %66 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !16461
  %67 = load %struct.SmokeModifierData*, %struct.SmokeModifierData** %smd, align 8, !dbg !16462
  %domain41 = getelementptr inbounds %struct.SmokeModifierData, %struct.SmokeModifierData* %67, i32 0, i32 1, !dbg !16463
  %68 = load %struct.SmokeDomainSettings*, %struct.SmokeDomainSettings** %domain41, align 8, !dbg !16463
  %69 = bitcast %struct.SmokeDomainSettings* %68 to i8*, !dbg !16462
  call void @writestruct(%struct.WriteData* %66, i32 1096040772, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.216, i64 0, i64 0), i32 1, i8* %69), !dbg !16464
  %70 = load %struct.SmokeModifierData*, %struct.SmokeModifierData** %smd, align 8, !dbg !16465
  %domain42 = getelementptr inbounds %struct.SmokeModifierData, %struct.SmokeModifierData* %70, i32 0, i32 1, !dbg !16467
  %71 = load %struct.SmokeDomainSettings*, %struct.SmokeDomainSettings** %domain42, align 8, !dbg !16467
  %tobool43 = icmp ne %struct.SmokeDomainSettings* %71, null, !dbg !16465
  br i1 %tobool43, label %if.then44, label %if.end53, !dbg !16468

if.then44:                                        ; preds = %if.end40
  %72 = load %struct.SmokeModifierData*, %struct.SmokeModifierData** %smd, align 8, !dbg !16469
  %domain45 = getelementptr inbounds %struct.SmokeModifierData, %struct.SmokeModifierData* %72, i32 0, i32 1, !dbg !16471
  %73 = load %struct.SmokeDomainSettings*, %struct.SmokeDomainSettings** %domain45, align 8, !dbg !16471
  %ptcaches46 = getelementptr inbounds %struct.SmokeDomainSettings, %struct.SmokeDomainSettings* %73, i32 0, i32 48, !dbg !16472
  %arrayidx47 = getelementptr inbounds [2 x %struct.ListBase], [2 x %struct.ListBase]* %ptcaches46, i64 0, i64 1, !dbg !16469
  call void @BKE_ptcache_free_list(%struct.ListBase* %arrayidx47), !dbg !16473
  %74 = load %struct.SmokeModifierData*, %struct.SmokeModifierData** %smd, align 8, !dbg !16474
  %domain48 = getelementptr inbounds %struct.SmokeModifierData, %struct.SmokeModifierData* %74, i32 0, i32 1, !dbg !16475
  %75 = load %struct.SmokeDomainSettings*, %struct.SmokeDomainSettings** %domain48, align 8, !dbg !16475
  %point_cache49 = getelementptr inbounds %struct.SmokeDomainSettings, %struct.SmokeDomainSettings* %75, i32 0, i32 47, !dbg !16476
  %arrayidx50 = getelementptr inbounds [2 x %struct.PointCache*], [2 x %struct.PointCache*]* %point_cache49, i64 0, i64 1, !dbg !16474
  store %struct.PointCache* null, %struct.PointCache** %arrayidx50, align 8, !dbg !16477
  %76 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !16478
  %77 = load %struct.SmokeModifierData*, %struct.SmokeModifierData** %smd, align 8, !dbg !16479
  %domain51 = getelementptr inbounds %struct.SmokeModifierData, %struct.SmokeModifierData* %77, i32 0, i32 1, !dbg !16480
  %78 = load %struct.SmokeDomainSettings*, %struct.SmokeDomainSettings** %domain51, align 8, !dbg !16480
  %effector_weights52 = getelementptr inbounds %struct.SmokeDomainSettings, %struct.SmokeDomainSettings* %78, i32 0, i32 49, !dbg !16481
  %79 = load %struct.EffectorWeights*, %struct.EffectorWeights** %effector_weights52, align 8, !dbg !16481
  %80 = bitcast %struct.EffectorWeights* %79 to i8*, !dbg !16479
  call void @writestruct(%struct.WriteData* %76, i32 1096040772, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.107, i64 0, i64 0), i32 1, i8* %80), !dbg !16482
  br label %if.end53, !dbg !16483

if.end53:                                         ; preds = %if.then44, %if.end40
  br label %if.end66, !dbg !16484

if.else54:                                        ; preds = %if.then17
  %81 = load %struct.SmokeModifierData*, %struct.SmokeModifierData** %smd, align 8, !dbg !16485
  %type55 = getelementptr inbounds %struct.SmokeModifierData, %struct.SmokeModifierData* %81, i32 0, i32 5, !dbg !16487
  %82 = load i32, i32* %type55, align 4, !dbg !16487
  %and56 = and i32 %82, 2, !dbg !16488
  %tobool57 = icmp ne i32 %and56, 0, !dbg !16488
  br i1 %tobool57, label %if.then58, label %if.else59, !dbg !16489

if.then58:                                        ; preds = %if.else54
  %83 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !16490
  %84 = load %struct.SmokeModifierData*, %struct.SmokeModifierData** %smd, align 8, !dbg !16491
  %flow = getelementptr inbounds %struct.SmokeModifierData, %struct.SmokeModifierData* %84, i32 0, i32 2, !dbg !16492
  %85 = load %struct.SmokeFlowSettings*, %struct.SmokeFlowSettings** %flow, align 8, !dbg !16492
  %86 = bitcast %struct.SmokeFlowSettings* %85 to i8*, !dbg !16491
  call void @writestruct(%struct.WriteData* %83, i32 1096040772, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.217, i64 0, i64 0), i32 1, i8* %86), !dbg !16493
  br label %if.end65, !dbg !16493

if.else59:                                        ; preds = %if.else54
  %87 = load %struct.SmokeModifierData*, %struct.SmokeModifierData** %smd, align 8, !dbg !16494
  %type60 = getelementptr inbounds %struct.SmokeModifierData, %struct.SmokeModifierData* %87, i32 0, i32 5, !dbg !16496
  %88 = load i32, i32* %type60, align 4, !dbg !16496
  %and61 = and i32 %88, 4, !dbg !16497
  %tobool62 = icmp ne i32 %and61, 0, !dbg !16497
  br i1 %tobool62, label %if.then63, label %if.end64, !dbg !16498

if.then63:                                        ; preds = %if.else59
  %89 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !16499
  %90 = load %struct.SmokeModifierData*, %struct.SmokeModifierData** %smd, align 8, !dbg !16500
  %coll = getelementptr inbounds %struct.SmokeModifierData, %struct.SmokeModifierData* %90, i32 0, i32 3, !dbg !16501
  %91 = load %struct.SmokeCollSettings*, %struct.SmokeCollSettings** %coll, align 8, !dbg !16501
  %92 = bitcast %struct.SmokeCollSettings* %91 to i8*, !dbg !16500
  call void @writestruct(%struct.WriteData* %89, i32 1096040772, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.218, i64 0, i64 0), i32 1, i8* %92), !dbg !16502
  br label %if.end64, !dbg !16502

if.end64:                                         ; preds = %if.then63, %if.else59
  br label %if.end65

if.end65:                                         ; preds = %if.end64, %if.then58
  br label %if.end66

if.end66:                                         ; preds = %if.end65, %if.end53
  br label %if.end160, !dbg !16503

if.else67:                                        ; preds = %if.else13
  %93 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !16504
  %type68 = getelementptr inbounds %struct.ModifierData, %struct.ModifierData* %93, i32 0, i32 2, !dbg !16506
  %94 = load i32, i32* %type68, align 8, !dbg !16506
  %cmp69 = icmp eq i32 %94, 26, !dbg !16507
  br i1 %cmp69, label %if.then71, label %if.else72, !dbg !16508

if.then71:                                        ; preds = %if.else67
  call void @llvm.dbg.declare(metadata %struct.FluidsimModifierData** %fluidmd, metadata !16509, metadata !DIExpression()), !dbg !16511
  %95 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !16512
  %96 = bitcast %struct.ModifierData* %95 to %struct.FluidsimModifierData*, !dbg !16513
  store %struct.FluidsimModifierData* %96, %struct.FluidsimModifierData** %fluidmd, align 8, !dbg !16511
  %97 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !16514
  %98 = load %struct.FluidsimModifierData*, %struct.FluidsimModifierData** %fluidmd, align 8, !dbg !16515
  %fss = getelementptr inbounds %struct.FluidsimModifierData, %struct.FluidsimModifierData* %98, i32 0, i32 1, !dbg !16516
  %99 = load %struct.FluidsimSettings*, %struct.FluidsimSettings** %fss, align 8, !dbg !16516
  %100 = bitcast %struct.FluidsimSettings* %99 to i8*, !dbg !16515
  call void @writestruct(%struct.WriteData* %97, i32 1096040772, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.219, i64 0, i64 0), i32 1, i8* %100), !dbg !16517
  br label %if.end159, !dbg !16518

if.else72:                                        ; preds = %if.else67
  %101 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !16519
  %type73 = getelementptr inbounds %struct.ModifierData, %struct.ModifierData* %101, i32 0, i32 2, !dbg !16521
  %102 = load i32, i32* %type73, align 8, !dbg !16521
  %cmp74 = icmp eq i32 %102, 40, !dbg !16522
  br i1 %cmp74, label %if.then76, label %if.else103, !dbg !16523

if.then76:                                        ; preds = %if.else72
  call void @llvm.dbg.declare(metadata %struct.DynamicPaintModifierData** %pmd, metadata !16524, metadata !DIExpression()), !dbg !16526
  %103 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !16527
  %104 = bitcast %struct.ModifierData* %103 to %struct.DynamicPaintModifierData*, !dbg !16528
  store %struct.DynamicPaintModifierData* %104, %struct.DynamicPaintModifierData** %pmd, align 8, !dbg !16526
  %105 = load %struct.DynamicPaintModifierData*, %struct.DynamicPaintModifierData** %pmd, align 8, !dbg !16529
  %canvas = getelementptr inbounds %struct.DynamicPaintModifierData, %struct.DynamicPaintModifierData* %105, i32 0, i32 1, !dbg !16531
  %106 = load %struct.DynamicPaintCanvasSettings*, %struct.DynamicPaintCanvasSettings** %canvas, align 8, !dbg !16531
  %tobool77 = icmp ne %struct.DynamicPaintCanvasSettings* %106, null, !dbg !16529
  br i1 %tobool77, label %if.then78, label %if.end96, !dbg !16532

if.then78:                                        ; preds = %if.then76
  call void @llvm.dbg.declare(metadata %struct.DynamicPaintSurface** %surface, metadata !16533, metadata !DIExpression()), !dbg !16592
  %107 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !16593
  %108 = load %struct.DynamicPaintModifierData*, %struct.DynamicPaintModifierData** %pmd, align 8, !dbg !16594
  %canvas79 = getelementptr inbounds %struct.DynamicPaintModifierData, %struct.DynamicPaintModifierData* %108, i32 0, i32 1, !dbg !16595
  %109 = load %struct.DynamicPaintCanvasSettings*, %struct.DynamicPaintCanvasSettings** %canvas79, align 8, !dbg !16595
  %110 = bitcast %struct.DynamicPaintCanvasSettings* %109 to i8*, !dbg !16594
  call void @writestruct(%struct.WriteData* %107, i32 1096040772, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.220, i64 0, i64 0), i32 1, i8* %110), !dbg !16596
  %111 = load %struct.DynamicPaintModifierData*, %struct.DynamicPaintModifierData** %pmd, align 8, !dbg !16597
  %canvas80 = getelementptr inbounds %struct.DynamicPaintModifierData, %struct.DynamicPaintModifierData* %111, i32 0, i32 1, !dbg !16599
  %112 = load %struct.DynamicPaintCanvasSettings*, %struct.DynamicPaintCanvasSettings** %canvas80, align 8, !dbg !16599
  %surfaces = getelementptr inbounds %struct.DynamicPaintCanvasSettings, %struct.DynamicPaintCanvasSettings* %112, i32 0, i32 2, !dbg !16600
  %first81 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %surfaces, i32 0, i32 0, !dbg !16601
  %113 = load i8*, i8** %first81, align 8, !dbg !16601
  %114 = bitcast i8* %113 to %struct.DynamicPaintSurface*, !dbg !16597
  store %struct.DynamicPaintSurface* %114, %struct.DynamicPaintSurface** %surface, align 8, !dbg !16602
  br label %for.cond82, !dbg !16603

for.cond82:                                       ; preds = %for.inc, %if.then78
  %115 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !16604
  %tobool83 = icmp ne %struct.DynamicPaintSurface* %115, null, !dbg !16606
  br i1 %tobool83, label %for.body84, label %for.end, !dbg !16606

for.body84:                                       ; preds = %for.cond82
  %116 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !16607
  %117 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !16608
  %118 = bitcast %struct.DynamicPaintSurface* %117 to i8*, !dbg !16608
  call void @writestruct(%struct.WriteData* %116, i32 1096040772, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.221, i64 0, i64 0), i32 1, i8* %118), !dbg !16609
  br label %for.inc, !dbg !16609

for.inc:                                          ; preds = %for.body84
  %119 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !16610
  %next = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %119, i32 0, i32 0, !dbg !16611
  %120 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %next, align 8, !dbg !16611
  store %struct.DynamicPaintSurface* %120, %struct.DynamicPaintSurface** %surface, align 8, !dbg !16612
  br label %for.cond82, !dbg !16613, !llvm.loop !16614

for.end:                                          ; preds = %for.cond82
  %121 = load %struct.DynamicPaintModifierData*, %struct.DynamicPaintModifierData** %pmd, align 8, !dbg !16616
  %canvas85 = getelementptr inbounds %struct.DynamicPaintModifierData, %struct.DynamicPaintModifierData* %121, i32 0, i32 1, !dbg !16618
  %122 = load %struct.DynamicPaintCanvasSettings*, %struct.DynamicPaintCanvasSettings** %canvas85, align 8, !dbg !16618
  %surfaces86 = getelementptr inbounds %struct.DynamicPaintCanvasSettings, %struct.DynamicPaintCanvasSettings* %122, i32 0, i32 2, !dbg !16619
  %first87 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %surfaces86, i32 0, i32 0, !dbg !16620
  %123 = load i8*, i8** %first87, align 8, !dbg !16620
  %124 = bitcast i8* %123 to %struct.DynamicPaintSurface*, !dbg !16616
  store %struct.DynamicPaintSurface* %124, %struct.DynamicPaintSurface** %surface, align 8, !dbg !16621
  br label %for.cond88, !dbg !16622

for.cond88:                                       ; preds = %for.inc93, %for.end
  %125 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !16623
  %tobool89 = icmp ne %struct.DynamicPaintSurface* %125, null, !dbg !16625
  br i1 %tobool89, label %for.body90, label %for.end95, !dbg !16625

for.body90:                                       ; preds = %for.cond88
  %126 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !16626
  %127 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !16628
  %ptcaches91 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %127, i32 0, i32 7, !dbg !16629
  call void @write_pointcaches(%struct.WriteData* %126, %struct.ListBase* %ptcaches91), !dbg !16630
  %128 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !16631
  %129 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !16632
  %effector_weights92 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %129, i32 0, i32 5, !dbg !16633
  %130 = load %struct.EffectorWeights*, %struct.EffectorWeights** %effector_weights92, align 8, !dbg !16633
  %131 = bitcast %struct.EffectorWeights* %130 to i8*, !dbg !16632
  call void @writestruct(%struct.WriteData* %128, i32 1096040772, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.107, i64 0, i64 0), i32 1, i8* %131), !dbg !16634
  br label %for.inc93, !dbg !16635

for.inc93:                                        ; preds = %for.body90
  %132 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !16636
  %next94 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %132, i32 0, i32 0, !dbg !16637
  %133 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %next94, align 8, !dbg !16637
  store %struct.DynamicPaintSurface* %133, %struct.DynamicPaintSurface** %surface, align 8, !dbg !16638
  br label %for.cond88, !dbg !16639, !llvm.loop !16640

for.end95:                                        ; preds = %for.cond88
  br label %if.end96, !dbg !16642

if.end96:                                         ; preds = %for.end95, %if.then76
  %134 = load %struct.DynamicPaintModifierData*, %struct.DynamicPaintModifierData** %pmd, align 8, !dbg !16643
  %brush = getelementptr inbounds %struct.DynamicPaintModifierData, %struct.DynamicPaintModifierData* %134, i32 0, i32 2, !dbg !16645
  %135 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush, align 8, !dbg !16645
  %tobool97 = icmp ne %struct.DynamicPaintBrushSettings* %135, null, !dbg !16643
  br i1 %tobool97, label %if.then98, label %if.end102, !dbg !16646

if.then98:                                        ; preds = %if.end96
  %136 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !16647
  %137 = load %struct.DynamicPaintModifierData*, %struct.DynamicPaintModifierData** %pmd, align 8, !dbg !16649
  %brush99 = getelementptr inbounds %struct.DynamicPaintModifierData, %struct.DynamicPaintModifierData* %137, i32 0, i32 2, !dbg !16650
  %138 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush99, align 8, !dbg !16650
  %139 = bitcast %struct.DynamicPaintBrushSettings* %138 to i8*, !dbg !16649
  call void @writestruct(%struct.WriteData* %136, i32 1096040772, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.222, i64 0, i64 0), i32 1, i8* %139), !dbg !16651
  %140 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !16652
  %141 = load %struct.DynamicPaintModifierData*, %struct.DynamicPaintModifierData** %pmd, align 8, !dbg !16653
  %brush100 = getelementptr inbounds %struct.DynamicPaintModifierData, %struct.DynamicPaintModifierData* %141, i32 0, i32 2, !dbg !16654
  %142 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush100, align 8, !dbg !16654
  %paint_ramp = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %142, i32 0, i32 14, !dbg !16655
  %143 = load %struct.ColorBand*, %struct.ColorBand** %paint_ramp, align 8, !dbg !16655
  %144 = bitcast %struct.ColorBand* %143 to i8*, !dbg !16653
  call void @writestruct(%struct.WriteData* %140, i32 1096040772, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.223, i64 0, i64 0), i32 1, i8* %144), !dbg !16656
  %145 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !16657
  %146 = load %struct.DynamicPaintModifierData*, %struct.DynamicPaintModifierData** %pmd, align 8, !dbg !16658
  %brush101 = getelementptr inbounds %struct.DynamicPaintModifierData, %struct.DynamicPaintModifierData* %146, i32 0, i32 2, !dbg !16659
  %147 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush101, align 8, !dbg !16659
  %vel_ramp = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %147, i32 0, i32 15, !dbg !16660
  %148 = load %struct.ColorBand*, %struct.ColorBand** %vel_ramp, align 8, !dbg !16660
  %149 = bitcast %struct.ColorBand* %148 to i8*, !dbg !16658
  call void @writestruct(%struct.WriteData* %145, i32 1096040772, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.223, i64 0, i64 0), i32 1, i8* %149), !dbg !16661
  br label %if.end102, !dbg !16662

if.end102:                                        ; preds = %if.then98, %if.end96
  br label %if.end158, !dbg !16663

if.else103:                                       ; preds = %if.else72
  %150 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !16664
  %type104 = getelementptr inbounds %struct.ModifierData, %struct.ModifierData* %150, i32 0, i32 2, !dbg !16666
  %151 = load i32, i32* %type104, align 8, !dbg !16666
  %cmp105 = icmp eq i32 %151, 23, !dbg !16667
  br i1 %cmp105, label %if.then107, label %if.else108, !dbg !16668

if.then107:                                       ; preds = %if.else103
  br label %if.end157, !dbg !16669

if.else108:                                       ; preds = %if.else103
  %152 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !16671
  %type109 = getelementptr inbounds %struct.ModifierData, %struct.ModifierData* %152, i32 0, i32 2, !dbg !16673
  %153 = load i32, i32* %type109, align 8, !dbg !16673
  %cmp110 = icmp eq i32 %153, 18, !dbg !16674
  br i1 %cmp110, label %if.then112, label %if.else126, !dbg !16675

if.then112:                                       ; preds = %if.else108
  call void @llvm.dbg.declare(metadata %struct.MeshDeformModifierData** %mmd, metadata !16676, metadata !DIExpression()), !dbg !16678
  %154 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !16679
  %155 = bitcast %struct.ModifierData* %154 to %struct.MeshDeformModifierData*, !dbg !16680
  store %struct.MeshDeformModifierData* %155, %struct.MeshDeformModifierData** %mmd, align 8, !dbg !16678
  call void @llvm.dbg.declare(metadata i32* %size, metadata !16681, metadata !DIExpression()), !dbg !16682
  %156 = load %struct.MeshDeformModifierData*, %struct.MeshDeformModifierData** %mmd, align 8, !dbg !16683
  %dyngridsize = getelementptr inbounds %struct.MeshDeformModifierData, %struct.MeshDeformModifierData* %156, i32 0, i32 14, !dbg !16684
  %157 = load i32, i32* %dyngridsize, align 8, !dbg !16684
  store i32 %157, i32* %size, align 4, !dbg !16682
  %158 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !16685
  %159 = load %struct.MeshDeformModifierData*, %struct.MeshDeformModifierData** %mmd, align 8, !dbg !16686
  %totinfluence = getelementptr inbounds %struct.MeshDeformModifierData, %struct.MeshDeformModifierData* %159, i32 0, i32 15, !dbg !16687
  %160 = load i32, i32* %totinfluence, align 4, !dbg !16687
  %161 = load %struct.MeshDeformModifierData*, %struct.MeshDeformModifierData** %mmd, align 8, !dbg !16688
  %bindinfluences = getelementptr inbounds %struct.MeshDeformModifierData, %struct.MeshDeformModifierData* %161, i32 0, i32 6, !dbg !16689
  %162 = load %struct.MDefInfluence*, %struct.MDefInfluence** %bindinfluences, align 8, !dbg !16689
  %163 = bitcast %struct.MDefInfluence* %162 to i8*, !dbg !16688
  call void @writestruct(%struct.WriteData* %158, i32 1096040772, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.224, i64 0, i64 0), i32 %160, i8* %163), !dbg !16690
  %164 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !16691
  %165 = load %struct.MeshDeformModifierData*, %struct.MeshDeformModifierData** %mmd, align 8, !dbg !16692
  %totvert = getelementptr inbounds %struct.MeshDeformModifierData, %struct.MeshDeformModifierData* %165, i32 0, i32 9, !dbg !16693
  %166 = load i32, i32* %totvert, align 8, !dbg !16693
  %add = add nsw i32 %166, 1, !dbg !16694
  %conv113 = sext i32 %add to i64, !dbg !16695
  %mul114 = mul i64 4, %conv113, !dbg !16696
  %conv115 = trunc i64 %mul114 to i32, !dbg !16697
  %167 = load %struct.MeshDeformModifierData*, %struct.MeshDeformModifierData** %mmd, align 8, !dbg !16698
  %bindoffsets = getelementptr inbounds %struct.MeshDeformModifierData, %struct.MeshDeformModifierData* %167, i32 0, i32 7, !dbg !16699
  %168 = load i32*, i32** %bindoffsets, align 8, !dbg !16699
  %169 = bitcast i32* %168 to i8*, !dbg !16698
  call void @writedata(%struct.WriteData* %164, i32 1096040772, i32 %conv115, i8* %169), !dbg !16700
  %170 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !16701
  %171 = load %struct.MeshDeformModifierData*, %struct.MeshDeformModifierData** %mmd, align 8, !dbg !16702
  %totcagevert = getelementptr inbounds %struct.MeshDeformModifierData, %struct.MeshDeformModifierData* %171, i32 0, i32 10, !dbg !16703
  %172 = load i32, i32* %totcagevert, align 4, !dbg !16703
  %conv116 = sext i32 %172 to i64, !dbg !16702
  %mul117 = mul i64 12, %conv116, !dbg !16704
  %conv118 = trunc i64 %mul117 to i32, !dbg !16705
  %173 = load %struct.MeshDeformModifierData*, %struct.MeshDeformModifierData** %mmd, align 8, !dbg !16706
  %bindcagecos = getelementptr inbounds %struct.MeshDeformModifierData, %struct.MeshDeformModifierData* %173, i32 0, i32 8, !dbg !16707
  %174 = load float*, float** %bindcagecos, align 8, !dbg !16707
  %175 = bitcast float* %174 to i8*, !dbg !16706
  call void @writedata(%struct.WriteData* %170, i32 1096040772, i32 %conv118, i8* %175), !dbg !16708
  %176 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !16709
  %177 = load i32, i32* %size, align 4, !dbg !16710
  %178 = load i32, i32* %size, align 4, !dbg !16711
  %mul119 = mul nsw i32 %177, %178, !dbg !16712
  %179 = load i32, i32* %size, align 4, !dbg !16713
  %mul120 = mul nsw i32 %mul119, %179, !dbg !16714
  %180 = load %struct.MeshDeformModifierData*, %struct.MeshDeformModifierData** %mmd, align 8, !dbg !16715
  %dyngrid = getelementptr inbounds %struct.MeshDeformModifierData, %struct.MeshDeformModifierData* %180, i32 0, i32 11, !dbg !16716
  %181 = load %struct.MDefCell*, %struct.MDefCell** %dyngrid, align 8, !dbg !16716
  %182 = bitcast %struct.MDefCell* %181 to i8*, !dbg !16715
  call void @writestruct(%struct.WriteData* %176, i32 1096040772, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.225, i64 0, i64 0), i32 %mul120, i8* %182), !dbg !16717
  %183 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !16718
  %184 = load %struct.MeshDeformModifierData*, %struct.MeshDeformModifierData** %mmd, align 8, !dbg !16719
  %totinfluence121 = getelementptr inbounds %struct.MeshDeformModifierData, %struct.MeshDeformModifierData* %184, i32 0, i32 15, !dbg !16720
  %185 = load i32, i32* %totinfluence121, align 4, !dbg !16720
  %186 = load %struct.MeshDeformModifierData*, %struct.MeshDeformModifierData** %mmd, align 8, !dbg !16721
  %dyninfluences = getelementptr inbounds %struct.MeshDeformModifierData, %struct.MeshDeformModifierData* %186, i32 0, i32 12, !dbg !16722
  %187 = load %struct.MDefInfluence*, %struct.MDefInfluence** %dyninfluences, align 8, !dbg !16722
  %188 = bitcast %struct.MDefInfluence* %187 to i8*, !dbg !16721
  call void @writestruct(%struct.WriteData* %183, i32 1096040772, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.224, i64 0, i64 0), i32 %185, i8* %188), !dbg !16723
  %189 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !16724
  %190 = load %struct.MeshDeformModifierData*, %struct.MeshDeformModifierData** %mmd, align 8, !dbg !16725
  %totvert122 = getelementptr inbounds %struct.MeshDeformModifierData, %struct.MeshDeformModifierData* %190, i32 0, i32 9, !dbg !16726
  %191 = load i32, i32* %totvert122, align 8, !dbg !16726
  %conv123 = sext i32 %191 to i64, !dbg !16725
  %mul124 = mul i64 4, %conv123, !dbg !16727
  %conv125 = trunc i64 %mul124 to i32, !dbg !16728
  %192 = load %struct.MeshDeformModifierData*, %struct.MeshDeformModifierData** %mmd, align 8, !dbg !16729
  %dynverts = getelementptr inbounds %struct.MeshDeformModifierData, %struct.MeshDeformModifierData* %192, i32 0, i32 13, !dbg !16730
  %193 = load i32*, i32** %dynverts, align 8, !dbg !16730
  %194 = bitcast i32* %193 to i8*, !dbg !16729
  call void @writedata(%struct.WriteData* %189, i32 1096040772, i32 %conv125, i8* %194), !dbg !16731
  br label %if.end156, !dbg !16732

if.else126:                                       ; preds = %if.else108
  %195 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !16733
  %type127 = getelementptr inbounds %struct.ModifierData, %struct.ModifierData* %195, i32 0, i32 2, !dbg !16735
  %196 = load i32, i32* %type127, align 8, !dbg !16735
  %cmp128 = icmp eq i32 %196, 35, !dbg !16736
  br i1 %cmp128, label %if.then130, label %if.else135, !dbg !16737

if.then130:                                       ; preds = %if.else126
  call void @llvm.dbg.declare(metadata %struct.WarpModifierData** %tmd, metadata !16738, metadata !DIExpression()), !dbg !16740
  %197 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !16741
  %198 = bitcast %struct.ModifierData* %197 to %struct.WarpModifierData*, !dbg !16742
  store %struct.WarpModifierData* %198, %struct.WarpModifierData** %tmd, align 8, !dbg !16740
  %199 = load %struct.WarpModifierData*, %struct.WarpModifierData** %tmd, align 8, !dbg !16743
  %curfalloff = getelementptr inbounds %struct.WarpModifierData, %struct.WarpModifierData* %199, i32 0, i32 8, !dbg !16745
  %200 = load %struct.CurveMapping*, %struct.CurveMapping** %curfalloff, align 8, !dbg !16745
  %tobool131 = icmp ne %struct.CurveMapping* %200, null, !dbg !16743
  br i1 %tobool131, label %if.then132, label %if.end134, !dbg !16746

if.then132:                                       ; preds = %if.then130
  %201 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !16747
  %202 = load %struct.WarpModifierData*, %struct.WarpModifierData** %tmd, align 8, !dbg !16749
  %curfalloff133 = getelementptr inbounds %struct.WarpModifierData, %struct.WarpModifierData* %202, i32 0, i32 8, !dbg !16750
  %203 = load %struct.CurveMapping*, %struct.CurveMapping** %curfalloff133, align 8, !dbg !16750
  call void @write_curvemapping(%struct.WriteData* %201, %struct.CurveMapping* %203), !dbg !16751
  br label %if.end134, !dbg !16752

if.end134:                                        ; preds = %if.then132, %if.then130
  br label %if.end155, !dbg !16753

if.else135:                                       ; preds = %if.else126
  %204 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !16754
  %type136 = getelementptr inbounds %struct.ModifierData, %struct.ModifierData* %204, i32 0, i32 2, !dbg !16756
  %205 = load i32, i32* %type136, align 8, !dbg !16756
  %cmp137 = icmp eq i32 %205, 36, !dbg !16757
  br i1 %cmp137, label %if.then139, label %if.else144, !dbg !16758

if.then139:                                       ; preds = %if.else135
  call void @llvm.dbg.declare(metadata %struct.WeightVGEditModifierData** %wmd, metadata !16759, metadata !DIExpression()), !dbg !16761
  %206 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !16762
  %207 = bitcast %struct.ModifierData* %206 to %struct.WeightVGEditModifierData*, !dbg !16763
  store %struct.WeightVGEditModifierData* %207, %struct.WeightVGEditModifierData** %wmd, align 8, !dbg !16761
  %208 = load %struct.WeightVGEditModifierData*, %struct.WeightVGEditModifierData** %wmd, align 8, !dbg !16764
  %cmap_curve = getelementptr inbounds %struct.WeightVGEditModifierData, %struct.WeightVGEditModifierData* %208, i32 0, i32 5, !dbg !16766
  %209 = load %struct.CurveMapping*, %struct.CurveMapping** %cmap_curve, align 8, !dbg !16766
  %tobool140 = icmp ne %struct.CurveMapping* %209, null, !dbg !16764
  br i1 %tobool140, label %if.then141, label %if.end143, !dbg !16767

if.then141:                                       ; preds = %if.then139
  %210 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !16768
  %211 = load %struct.WeightVGEditModifierData*, %struct.WeightVGEditModifierData** %wmd, align 8, !dbg !16769
  %cmap_curve142 = getelementptr inbounds %struct.WeightVGEditModifierData, %struct.WeightVGEditModifierData* %211, i32 0, i32 5, !dbg !16770
  %212 = load %struct.CurveMapping*, %struct.CurveMapping** %cmap_curve142, align 8, !dbg !16770
  call void @write_curvemapping(%struct.WriteData* %210, %struct.CurveMapping* %212), !dbg !16771
  br label %if.end143, !dbg !16771

if.end143:                                        ; preds = %if.then141, %if.then139
  br label %if.end154, !dbg !16772

if.else144:                                       ; preds = %if.else135
  %213 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !16773
  %type145 = getelementptr inbounds %struct.ModifierData, %struct.ModifierData* %213, i32 0, i32 2, !dbg !16775
  %214 = load i32, i32* %type145, align 8, !dbg !16775
  %cmp146 = icmp eq i32 %214, 47, !dbg !16776
  br i1 %cmp146, label %if.then148, label %if.end153, !dbg !16777

if.then148:                                       ; preds = %if.else144
  call void @llvm.dbg.declare(metadata %struct.LaplacianDeformModifierData** %lmd, metadata !16778, metadata !DIExpression()), !dbg !16780
  %215 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !16781
  %216 = bitcast %struct.ModifierData* %215 to %struct.LaplacianDeformModifierData*, !dbg !16782
  store %struct.LaplacianDeformModifierData* %216, %struct.LaplacianDeformModifierData** %lmd, align 8, !dbg !16780
  %217 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !16783
  %218 = load %struct.LaplacianDeformModifierData*, %struct.LaplacianDeformModifierData** %lmd, align 8, !dbg !16784
  %total_verts = getelementptr inbounds %struct.LaplacianDeformModifierData, %struct.LaplacianDeformModifierData* %218, i32 0, i32 2, !dbg !16785
  %219 = load i32, i32* %total_verts, align 8, !dbg !16785
  %conv149 = sext i32 %219 to i64, !dbg !16784
  %mul150 = mul i64 4, %conv149, !dbg !16786
  %mul151 = mul i64 %mul150, 3, !dbg !16787
  %conv152 = trunc i64 %mul151 to i32, !dbg !16788
  %220 = load %struct.LaplacianDeformModifierData*, %struct.LaplacianDeformModifierData** %lmd, align 8, !dbg !16789
  %vertexco = getelementptr inbounds %struct.LaplacianDeformModifierData, %struct.LaplacianDeformModifierData* %220, i32 0, i32 4, !dbg !16790
  %221 = load float*, float** %vertexco, align 8, !dbg !16790
  %222 = bitcast float* %221 to i8*, !dbg !16789
  call void @writedata(%struct.WriteData* %217, i32 1096040772, i32 %conv152, i8* %222), !dbg !16791
  br label %if.end153, !dbg !16792

if.end153:                                        ; preds = %if.then148, %if.else144
  br label %if.end154

if.end154:                                        ; preds = %if.end153, %if.end143
  br label %if.end155

if.end155:                                        ; preds = %if.end154, %if.end134
  br label %if.end156

if.end156:                                        ; preds = %if.end155, %if.then112
  br label %if.end157

if.end157:                                        ; preds = %if.end156, %if.then107
  br label %if.end158

if.end158:                                        ; preds = %if.end157, %if.end102
  br label %if.end159

if.end159:                                        ; preds = %if.end158, %if.then71
  br label %if.end160

if.end160:                                        ; preds = %if.end159, %if.end66
  br label %if.end161

if.end161:                                        ; preds = %if.end160, %if.then11
  br label %if.end162

if.end162:                                        ; preds = %if.end161, %if.then6
  br label %for.inc163, !dbg !16793

for.inc163:                                       ; preds = %if.end162
  %223 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !16794
  %next164 = getelementptr inbounds %struct.ModifierData, %struct.ModifierData* %223, i32 0, i32 0, !dbg !16795
  %224 = load %struct.ModifierData*, %struct.ModifierData** %next164, align 8, !dbg !16795
  store %struct.ModifierData* %224, %struct.ModifierData** %md, align 8, !dbg !16796
  br label %for.cond, !dbg !16797, !llvm.loop !16798

for.end165:                                       ; preds = %if.then, %if.then2, %for.cond
  ret void, !dbg !16800
}

declare dso_local i8* @BKE_pose_ikparam_get_name(%struct.bPose*) #2

declare dso_local %struct.bConstraintTypeInfo* @BKE_constraint_typeinfo_get(%struct.bConstraint*) #2

declare dso_local %struct.ModifierTypeInfo* @modifierType_getInfo(i32) #2

declare dso_local %struct.PointCache* @BKE_ptcache_add(%struct.ListBase*) #2

declare dso_local void @BKE_ptcache_free_list(%struct.ListBase*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @write_customdata(%struct.WriteData* %wd, %struct.ID* %id, i32 %count, %struct.CustomData* %data, i32 %partial_type, i32 %partial_count) #0 !dbg !16801 {
entry:
  %wd.addr = alloca %struct.WriteData*, align 8
  %id.addr = alloca %struct.ID*, align 8
  %count.addr = alloca i32, align 4
  %data.addr = alloca %struct.CustomData*, align 8
  %partial_type.addr = alloca i32, align 4
  %partial_count.addr = alloca i32, align 4
  %data_tmp = alloca %struct.CustomData, align 8
  %i = alloca i32, align 4
  %layer = alloca %struct.CustomDataLayer*, align 8
  %structname = alloca i8*, align 8
  %structnum = alloca i32, align 4
  %datasize = alloca i32, align 4
  %layer_data = alloca float*, align 8
  store %struct.WriteData* %wd, %struct.WriteData** %wd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WriteData** %wd.addr, metadata !16804, metadata !DIExpression()), !dbg !16805
  store %struct.ID* %id, %struct.ID** %id.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ID** %id.addr, metadata !16806, metadata !DIExpression()), !dbg !16807
  store i32 %count, i32* %count.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %count.addr, metadata !16808, metadata !DIExpression()), !dbg !16809
  store %struct.CustomData* %data, %struct.CustomData** %data.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CustomData** %data.addr, metadata !16810, metadata !DIExpression()), !dbg !16811
  store i32 %partial_type, i32* %partial_type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %partial_type.addr, metadata !16812, metadata !DIExpression()), !dbg !16813
  store i32 %partial_count, i32* %partial_count.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %partial_count.addr, metadata !16814, metadata !DIExpression()), !dbg !16815
  call void @llvm.dbg.declare(metadata %struct.CustomData* %data_tmp, metadata !16816, metadata !DIExpression()), !dbg !16817
  call void @llvm.dbg.declare(metadata i32* %i, metadata !16818, metadata !DIExpression()), !dbg !16819
  %0 = load %struct.CustomData*, %struct.CustomData** %data.addr, align 8, !dbg !16820
  %1 = load i64, i64* @CD_MASK_EVERYTHING, align 8, !dbg !16821
  %2 = load i32, i32* %count.addr, align 4, !dbg !16822
  call void @CustomData_copy(%struct.CustomData* %0, %struct.CustomData* %data_tmp, i64 %1, i32 3, i32 %2), !dbg !16823
  %external = getelementptr inbounds %struct.CustomData, %struct.CustomData* %data_tmp, i32 0, i32 6, !dbg !16824
  %3 = load %struct.CustomDataExternal*, %struct.CustomDataExternal** %external, align 8, !dbg !16824
  %tobool = icmp ne %struct.CustomDataExternal* %3, null, !dbg !16826
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !16827

land.lhs.true:                                    ; preds = %entry
  %4 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !16828
  %current = getelementptr inbounds %struct.WriteData, %struct.WriteData* %4, i32 0, i32 4, !dbg !16829
  %5 = load %struct.MemFile*, %struct.MemFile** %current, align 8, !dbg !16829
  %tobool1 = icmp ne %struct.MemFile* %5, null, !dbg !16828
  br i1 %tobool1, label %if.end, label %if.then, !dbg !16830

if.then:                                          ; preds = %land.lhs.true
  %6 = load %struct.ID*, %struct.ID** %id.addr, align 8, !dbg !16831
  %7 = load i64, i64* @CD_MASK_MESH, align 8, !dbg !16832
  %8 = load i32, i32* %count.addr, align 4, !dbg !16833
  call void @CustomData_external_write(%struct.CustomData* %data_tmp, %struct.ID* %6, i64 %7, i32 %8, i32 0), !dbg !16834
  br label %if.end, !dbg !16834

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  store i32 0, i32* %i, align 4, !dbg !16835
  br label %for.cond, !dbg !16837

for.cond:                                         ; preds = %for.inc, %if.end
  %9 = load i32, i32* %i, align 4, !dbg !16838
  %totlayer = getelementptr inbounds %struct.CustomData, %struct.CustomData* %data_tmp, i32 0, i32 2, !dbg !16840
  %10 = load i32, i32* %totlayer, align 4, !dbg !16840
  %cmp = icmp slt i32 %9, %10, !dbg !16841
  br i1 %cmp, label %for.body, label %for.end, !dbg !16842

for.body:                                         ; preds = %for.cond
  %layers = getelementptr inbounds %struct.CustomData, %struct.CustomData* %data_tmp, i32 0, i32 0, !dbg !16843
  %11 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %layers, align 8, !dbg !16843
  %12 = load i32, i32* %i, align 4, !dbg !16844
  %idxprom = sext i32 %12 to i64, !dbg !16845
  %arrayidx = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %11, i64 %idxprom, !dbg !16845
  %flag = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %arrayidx, i32 0, i32 2, !dbg !16846
  %13 = load i32, i32* %flag, align 8, !dbg !16847
  %and = and i32 %13, -3, !dbg !16847
  store i32 %and, i32* %flag, align 8, !dbg !16847
  br label %for.inc, !dbg !16845

for.inc:                                          ; preds = %for.body
  %14 = load i32, i32* %i, align 4, !dbg !16848
  %inc = add nsw i32 %14, 1, !dbg !16848
  store i32 %inc, i32* %i, align 4, !dbg !16848
  br label %for.cond, !dbg !16849, !llvm.loop !16850

for.end:                                          ; preds = %for.cond
  %15 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !16852
  %maxlayer = getelementptr inbounds %struct.CustomData, %struct.CustomData* %data_tmp, i32 0, i32 3, !dbg !16853
  %16 = load i32, i32* %maxlayer, align 8, !dbg !16853
  %17 = load %struct.CustomData*, %struct.CustomData** %data.addr, align 8, !dbg !16854
  %layers2 = getelementptr inbounds %struct.CustomData, %struct.CustomData* %17, i32 0, i32 0, !dbg !16855
  %18 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %layers2, align 8, !dbg !16855
  %19 = bitcast %struct.CustomDataLayer* %18 to i8*, !dbg !16854
  %layers3 = getelementptr inbounds %struct.CustomData, %struct.CustomData* %data_tmp, i32 0, i32 0, !dbg !16856
  %20 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %layers3, align 8, !dbg !16856
  %21 = bitcast %struct.CustomDataLayer* %20 to i8*, !dbg !16857
  call void @writestruct_at_address(%struct.WriteData* %15, i32 1096040772, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.233, i64 0, i64 0), i32 %16, i8* %19, i8* %21), !dbg !16858
  store i32 0, i32* %i, align 4, !dbg !16859
  br label %for.cond4, !dbg !16861

for.cond4:                                        ; preds = %for.inc12, %for.end
  %22 = load i32, i32* %i, align 4, !dbg !16862
  %totlayer5 = getelementptr inbounds %struct.CustomData, %struct.CustomData* %data_tmp, i32 0, i32 2, !dbg !16864
  %23 = load i32, i32* %totlayer5, align 4, !dbg !16864
  %cmp6 = icmp slt i32 %22, %23, !dbg !16865
  br i1 %cmp6, label %for.body7, label %for.end14, !dbg !16866

for.body7:                                        ; preds = %for.cond4
  %layers8 = getelementptr inbounds %struct.CustomData, %struct.CustomData* %data_tmp, i32 0, i32 0, !dbg !16867
  %24 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %layers8, align 8, !dbg !16867
  %25 = load i32, i32* %i, align 4, !dbg !16868
  %idxprom9 = sext i32 %25 to i64, !dbg !16869
  %arrayidx10 = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %24, i64 %idxprom9, !dbg !16869
  %flag11 = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %arrayidx10, i32 0, i32 2, !dbg !16870
  %26 = load i32, i32* %flag11, align 8, !dbg !16871
  %or = or i32 %26, 2, !dbg !16871
  store i32 %or, i32* %flag11, align 8, !dbg !16871
  br label %for.inc12, !dbg !16869

for.inc12:                                        ; preds = %for.body7
  %27 = load i32, i32* %i, align 4, !dbg !16872
  %inc13 = add nsw i32 %27, 1, !dbg !16872
  store i32 %inc13, i32* %i, align 4, !dbg !16872
  br label %for.cond4, !dbg !16873, !llvm.loop !16874

for.end14:                                        ; preds = %for.cond4
  store i32 0, i32* %i, align 4, !dbg !16876
  br label %for.cond15, !dbg !16878

for.cond15:                                       ; preds = %for.inc63, %for.end14
  %28 = load i32, i32* %i, align 4, !dbg !16879
  %totlayer16 = getelementptr inbounds %struct.CustomData, %struct.CustomData* %data_tmp, i32 0, i32 2, !dbg !16881
  %29 = load i32, i32* %totlayer16, align 4, !dbg !16881
  %cmp17 = icmp slt i32 %28, %29, !dbg !16882
  br i1 %cmp17, label %for.body18, label %for.end65, !dbg !16883

for.body18:                                       ; preds = %for.cond15
  call void @llvm.dbg.declare(metadata %struct.CustomDataLayer** %layer, metadata !16884, metadata !DIExpression()), !dbg !16886
  %layers19 = getelementptr inbounds %struct.CustomData, %struct.CustomData* %data_tmp, i32 0, i32 0, !dbg !16887
  %30 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %layers19, align 8, !dbg !16887
  %31 = load i32, i32* %i, align 4, !dbg !16888
  %idxprom20 = sext i32 %31 to i64, !dbg !16889
  %arrayidx21 = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %30, i64 %idxprom20, !dbg !16889
  store %struct.CustomDataLayer* %arrayidx21, %struct.CustomDataLayer** %layer, align 8, !dbg !16886
  call void @llvm.dbg.declare(metadata i8** %structname, metadata !16890, metadata !DIExpression()), !dbg !16891
  call void @llvm.dbg.declare(metadata i32* %structnum, metadata !16892, metadata !DIExpression()), !dbg !16893
  call void @llvm.dbg.declare(metadata i32* %datasize, metadata !16894, metadata !DIExpression()), !dbg !16895
  %32 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %layer, align 8, !dbg !16896
  %type = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %32, i32 0, i32 0, !dbg !16898
  %33 = load i32, i32* %type, align 8, !dbg !16898
  %cmp22 = icmp eq i32 %33, 2, !dbg !16899
  br i1 %cmp22, label %if.then23, label %if.else, !dbg !16900

if.then23:                                        ; preds = %for.body18
  %34 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !16901
  %35 = load i32, i32* %count.addr, align 4, !dbg !16903
  %36 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %layer, align 8, !dbg !16904
  %data24 = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %36, i32 0, i32 9, !dbg !16905
  %37 = load i8*, i8** %data24, align 8, !dbg !16905
  %38 = bitcast i8* %37 to %struct.MDeformVert*, !dbg !16904
  call void @write_dverts(%struct.WriteData* %34, i32 %35, %struct.MDeformVert* %38), !dbg !16906
  br label %if.end62, !dbg !16907

if.else:                                          ; preds = %for.body18
  %39 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %layer, align 8, !dbg !16908
  %type25 = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %39, i32 0, i32 0, !dbg !16910
  %40 = load i32, i32* %type25, align 8, !dbg !16910
  %cmp26 = icmp eq i32 %40, 19, !dbg !16911
  br i1 %cmp26, label %if.then27, label %if.else31, !dbg !16912

if.then27:                                        ; preds = %if.else
  %41 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !16913
  %42 = load i32, i32* %count.addr, align 4, !dbg !16915
  %43 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %layer, align 8, !dbg !16916
  %data28 = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %43, i32 0, i32 9, !dbg !16917
  %44 = load i8*, i8** %data28, align 8, !dbg !16917
  %45 = bitcast i8* %44 to %struct.MDisps*, !dbg !16916
  %46 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %layer, align 8, !dbg !16918
  %flag29 = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %46, i32 0, i32 2, !dbg !16919
  %47 = load i32, i32* %flag29, align 8, !dbg !16919
  %and30 = and i32 %47, 8, !dbg !16920
  call void @write_mdisps(%struct.WriteData* %41, i32 %42, %struct.MDisps* %45, i32 %and30), !dbg !16921
  br label %if.end61, !dbg !16922

if.else31:                                        ; preds = %if.else
  %48 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %layer, align 8, !dbg !16923
  %type32 = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %48, i32 0, i32 0, !dbg !16925
  %49 = load i32, i32* %type32, align 8, !dbg !16925
  %cmp33 = icmp eq i32 %49, 34, !dbg !16926
  br i1 %cmp33, label %if.then34, label %if.else37, !dbg !16927

if.then34:                                        ; preds = %if.else31
  call void @llvm.dbg.declare(metadata float** %layer_data, metadata !16928, metadata !DIExpression()), !dbg !16930
  %50 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %layer, align 8, !dbg !16931
  %data35 = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %50, i32 0, i32 9, !dbg !16932
  %51 = load i8*, i8** %data35, align 8, !dbg !16932
  %52 = bitcast i8* %51 to float*, !dbg !16931
  store float* %52, float** %layer_data, align 8, !dbg !16930
  %53 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !16933
  %54 = load i32, i32* %count.addr, align 4, !dbg !16934
  %conv = sext i32 %54 to i64, !dbg !16934
  %mul = mul i64 4, %conv, !dbg !16935
  %conv36 = trunc i64 %mul to i32, !dbg !16936
  %55 = load float*, float** %layer_data, align 8, !dbg !16937
  %56 = bitcast float* %55 to i8*, !dbg !16937
  call void @writedata(%struct.WriteData* %53, i32 1096040772, i32 %conv36, i8* %56), !dbg !16938
  br label %if.end60, !dbg !16939

if.else37:                                        ; preds = %if.else31
  %57 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %layer, align 8, !dbg !16940
  %type38 = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %57, i32 0, i32 0, !dbg !16942
  %58 = load i32, i32* %type38, align 8, !dbg !16942
  %cmp39 = icmp eq i32 %58, 35, !dbg !16943
  br i1 %cmp39, label %if.then41, label %if.else43, !dbg !16944

if.then41:                                        ; preds = %if.else37
  %59 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !16945
  %60 = load i32, i32* %count.addr, align 4, !dbg !16947
  %61 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %layer, align 8, !dbg !16948
  %data42 = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %61, i32 0, i32 9, !dbg !16949
  %62 = load i8*, i8** %data42, align 8, !dbg !16949
  %63 = bitcast i8* %62 to %struct.GridPaintMask*, !dbg !16948
  call void @write_grid_paint_mask(%struct.WriteData* %59, i32 %60, %struct.GridPaintMask* %63), !dbg !16950
  br label %if.end59, !dbg !16951

if.else43:                                        ; preds = %if.else37
  %64 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %layer, align 8, !dbg !16952
  %type44 = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %64, i32 0, i32 0, !dbg !16954
  %65 = load i32, i32* %type44, align 8, !dbg !16954
  call void @CustomData_file_write_info(i32 %65, i8** %structname, i32* %structnum), !dbg !16955
  %66 = load i32, i32* %structnum, align 4, !dbg !16956
  %tobool45 = icmp ne i32 %66, 0, !dbg !16956
  br i1 %tobool45, label %if.then46, label %if.else56, !dbg !16958

if.then46:                                        ; preds = %if.else43
  %67 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %layer, align 8, !dbg !16959
  %type47 = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %67, i32 0, i32 0, !dbg !16962
  %68 = load i32, i32* %type47, align 8, !dbg !16962
  %69 = load i32, i32* %partial_type.addr, align 4, !dbg !16963
  %cmp48 = icmp ne i32 %68, %69, !dbg !16964
  br i1 %cmp48, label %if.then50, label %if.else52, !dbg !16965

if.then50:                                        ; preds = %if.then46
  %70 = load i32, i32* %structnum, align 4, !dbg !16966
  %71 = load i32, i32* %count.addr, align 4, !dbg !16967
  %mul51 = mul nsw i32 %70, %71, !dbg !16968
  store i32 %mul51, i32* %datasize, align 4, !dbg !16969
  br label %if.end54, !dbg !16970

if.else52:                                        ; preds = %if.then46
  %72 = load i32, i32* %structnum, align 4, !dbg !16971
  %73 = load i32, i32* %partial_count.addr, align 4, !dbg !16972
  %mul53 = mul nsw i32 %72, %73, !dbg !16973
  store i32 %mul53, i32* %datasize, align 4, !dbg !16974
  br label %if.end54

if.end54:                                         ; preds = %if.else52, %if.then50
  %74 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !16975
  %75 = load i8*, i8** %structname, align 8, !dbg !16976
  %76 = load i32, i32* %datasize, align 4, !dbg !16977
  %77 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %layer, align 8, !dbg !16978
  %data55 = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %77, i32 0, i32 9, !dbg !16979
  %78 = load i8*, i8** %data55, align 8, !dbg !16979
  call void @writestruct(%struct.WriteData* %74, i32 1096040772, i8* %75, i32 %76, i8* %78), !dbg !16980
  br label %if.end58, !dbg !16981

if.else56:                                        ; preds = %if.else43
  %79 = load i8*, i8** %structname, align 8, !dbg !16982
  %80 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %layer, align 8, !dbg !16984
  %type57 = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %80, i32 0, i32 0, !dbg !16985
  %81 = load i32, i32* %type57, align 8, !dbg !16985
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.234, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.write_customdata, i64 0, i64 0), i8* %79, i32 %81), !dbg !16986
  br label %if.end58

if.end58:                                         ; preds = %if.else56, %if.end54
  br label %if.end59

if.end59:                                         ; preds = %if.end58, %if.then41
  br label %if.end60

if.end60:                                         ; preds = %if.end59, %if.then34
  br label %if.end61

if.end61:                                         ; preds = %if.end60, %if.then27
  br label %if.end62

if.end62:                                         ; preds = %if.end61, %if.then23
  br label %for.inc63, !dbg !16987

for.inc63:                                        ; preds = %if.end62
  %82 = load i32, i32* %i, align 4, !dbg !16988
  %inc64 = add nsw i32 %82, 1, !dbg !16988
  store i32 %inc64, i32* %i, align 4, !dbg !16988
  br label %for.cond15, !dbg !16989, !llvm.loop !16990

for.end65:                                        ; preds = %for.cond15
  %external66 = getelementptr inbounds %struct.CustomData, %struct.CustomData* %data_tmp, i32 0, i32 6, !dbg !16992
  %83 = load %struct.CustomDataExternal*, %struct.CustomDataExternal** %external66, align 8, !dbg !16992
  %tobool67 = icmp ne %struct.CustomDataExternal* %83, null, !dbg !16994
  br i1 %tobool67, label %if.then68, label %if.end71, !dbg !16995

if.then68:                                        ; preds = %for.end65
  %84 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !16996
  %85 = load %struct.CustomData*, %struct.CustomData** %data.addr, align 8, !dbg !16997
  %external69 = getelementptr inbounds %struct.CustomData, %struct.CustomData* %85, i32 0, i32 6, !dbg !16998
  %86 = load %struct.CustomDataExternal*, %struct.CustomDataExternal** %external69, align 8, !dbg !16998
  %87 = bitcast %struct.CustomDataExternal* %86 to i8*, !dbg !16997
  %external70 = getelementptr inbounds %struct.CustomData, %struct.CustomData* %data_tmp, i32 0, i32 6, !dbg !16999
  %88 = load %struct.CustomDataExternal*, %struct.CustomDataExternal** %external70, align 8, !dbg !16999
  %89 = bitcast %struct.CustomDataExternal* %88 to i8*, !dbg !17000
  call void @writestruct_at_address(%struct.WriteData* %84, i32 1096040772, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.235, i64 0, i64 0), i32 1, i8* %87, i8* %89), !dbg !17001
  br label %if.end71, !dbg !17001

if.end71:                                         ; preds = %if.then68, %for.end65
  %90 = load i32, i32* %count.addr, align 4, !dbg !17002
  call void @CustomData_free(%struct.CustomData* %data_tmp, i32 %90), !dbg !17003
  ret void, !dbg !17004
}

declare dso_local void @CustomData_reset(%struct.CustomData*) #2

declare dso_local i32 @BKE_mesh_mpoly_to_mface(%struct.CustomData*, %struct.CustomData*, %struct.CustomData*, i32, i32, i32) #2

declare dso_local void @BKE_mesh_update_customdata_pointers(%struct.Mesh*, i8 zeroext) #2

declare dso_local void @CustomData_free(%struct.CustomData*, i32) #2

declare dso_local void @CustomData_copy(%struct.CustomData*, %struct.CustomData*, i64, i32, i32) #2

declare dso_local void @CustomData_external_write(%struct.CustomData*, %struct.ID*, i64, i32, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal void @write_mdisps(%struct.WriteData* %wd, i32 %count, %struct.MDisps* %mdlist, i32 %external) #0 !dbg !17005 {
entry:
  %wd.addr = alloca %struct.WriteData*, align 8
  %count.addr = alloca i32, align 4
  %mdlist.addr = alloca %struct.MDisps*, align 8
  %external.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %md = alloca %struct.MDisps*, align 8
  store %struct.WriteData* %wd, %struct.WriteData** %wd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WriteData** %wd.addr, metadata !17016, metadata !DIExpression()), !dbg !17017
  store i32 %count, i32* %count.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %count.addr, metadata !17018, metadata !DIExpression()), !dbg !17019
  store %struct.MDisps* %mdlist, %struct.MDisps** %mdlist.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MDisps** %mdlist.addr, metadata !17020, metadata !DIExpression()), !dbg !17021
  store i32 %external, i32* %external.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %external.addr, metadata !17022, metadata !DIExpression()), !dbg !17023
  %0 = load %struct.MDisps*, %struct.MDisps** %mdlist.addr, align 8, !dbg !17024
  %tobool = icmp ne %struct.MDisps* %0, null, !dbg !17024
  br i1 %tobool, label %if.then, label %if.end16, !dbg !17026

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %i, metadata !17027, metadata !DIExpression()), !dbg !17029
  %1 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !17030
  %2 = load i32, i32* %count.addr, align 4, !dbg !17031
  %3 = load %struct.MDisps*, %struct.MDisps** %mdlist.addr, align 8, !dbg !17032
  %4 = bitcast %struct.MDisps* %3 to i8*, !dbg !17032
  call void @writestruct(%struct.WriteData* %1, i32 1096040772, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.236, i64 0, i64 0), i32 %2, i8* %4), !dbg !17033
  store i32 0, i32* %i, align 4, !dbg !17034
  br label %for.cond, !dbg !17036

for.cond:                                         ; preds = %for.inc, %if.then
  %5 = load i32, i32* %i, align 4, !dbg !17037
  %6 = load i32, i32* %count.addr, align 4, !dbg !17039
  %cmp = icmp slt i32 %5, %6, !dbg !17040
  br i1 %cmp, label %for.body, label %for.end, !dbg !17041

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.MDisps** %md, metadata !17042, metadata !DIExpression()), !dbg !17044
  %7 = load %struct.MDisps*, %struct.MDisps** %mdlist.addr, align 8, !dbg !17045
  %8 = load i32, i32* %i, align 4, !dbg !17046
  %idxprom = sext i32 %8 to i64, !dbg !17045
  %arrayidx = getelementptr inbounds %struct.MDisps, %struct.MDisps* %7, i64 %idxprom, !dbg !17045
  store %struct.MDisps* %arrayidx, %struct.MDisps** %md, align 8, !dbg !17044
  %9 = load %struct.MDisps*, %struct.MDisps** %md, align 8, !dbg !17047
  %disps = getelementptr inbounds %struct.MDisps, %struct.MDisps* %9, i32 0, i32 2, !dbg !17049
  %10 = load [3 x float]*, [3 x float]** %disps, align 8, !dbg !17049
  %tobool1 = icmp ne [3 x float]* %10, null, !dbg !17047
  br i1 %tobool1, label %if.then2, label %if.end7, !dbg !17050

if.then2:                                         ; preds = %for.body
  %11 = load i32, i32* %external.addr, align 4, !dbg !17051
  %tobool3 = icmp ne i32 %11, 0, !dbg !17051
  br i1 %tobool3, label %if.end, label %if.then4, !dbg !17054

if.then4:                                         ; preds = %if.then2
  %12 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !17055
  %13 = load %struct.MDisps*, %struct.MDisps** %md, align 8, !dbg !17056
  %totdisp = getelementptr inbounds %struct.MDisps, %struct.MDisps* %13, i32 0, i32 0, !dbg !17057
  %14 = load i32, i32* %totdisp, align 8, !dbg !17057
  %conv = sext i32 %14 to i64, !dbg !17056
  %mul = mul i64 12, %conv, !dbg !17058
  %conv5 = trunc i64 %mul to i32, !dbg !17059
  %15 = load %struct.MDisps*, %struct.MDisps** %md, align 8, !dbg !17060
  %disps6 = getelementptr inbounds %struct.MDisps, %struct.MDisps* %15, i32 0, i32 2, !dbg !17061
  %16 = load [3 x float]*, [3 x float]** %disps6, align 8, !dbg !17061
  %17 = bitcast [3 x float]* %16 to i8*, !dbg !17060
  call void @writedata(%struct.WriteData* %12, i32 1096040772, i32 %conv5, i8* %17), !dbg !17062
  br label %if.end, !dbg !17062

if.end:                                           ; preds = %if.then4, %if.then2
  br label %if.end7, !dbg !17063

if.end7:                                          ; preds = %if.end, %for.body
  %18 = load %struct.MDisps*, %struct.MDisps** %md, align 8, !dbg !17064
  %hidden = getelementptr inbounds %struct.MDisps, %struct.MDisps* %18, i32 0, i32 3, !dbg !17066
  %19 = load i32*, i32** %hidden, align 8, !dbg !17066
  %tobool8 = icmp ne i32* %19, null, !dbg !17064
  br i1 %tobool8, label %if.then9, label %if.end15, !dbg !17067

if.then9:                                         ; preds = %if.end7
  %20 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !17068
  %21 = load %struct.MDisps*, %struct.MDisps** %md, align 8, !dbg !17069
  %totdisp10 = getelementptr inbounds %struct.MDisps, %struct.MDisps* %21, i32 0, i32 0, !dbg !17069
  %22 = load i32, i32* %totdisp10, align 8, !dbg !17069
  %shr = ashr i32 %22, 5, !dbg !17069
  %add = add nsw i32 %shr, 1, !dbg !17069
  %conv11 = sext i32 %add to i64, !dbg !17069
  %mul12 = mul i64 %conv11, 4, !dbg !17069
  %conv13 = trunc i64 %mul12 to i32, !dbg !17069
  %23 = load %struct.MDisps*, %struct.MDisps** %md, align 8, !dbg !17070
  %hidden14 = getelementptr inbounds %struct.MDisps, %struct.MDisps* %23, i32 0, i32 3, !dbg !17071
  %24 = load i32*, i32** %hidden14, align 8, !dbg !17071
  %25 = bitcast i32* %24 to i8*, !dbg !17070
  call void @writedata(%struct.WriteData* %20, i32 1096040772, i32 %conv13, i8* %25), !dbg !17072
  br label %if.end15, !dbg !17072

if.end15:                                         ; preds = %if.then9, %if.end7
  br label %for.inc, !dbg !17073

for.inc:                                          ; preds = %if.end15
  %26 = load i32, i32* %i, align 4, !dbg !17074
  %inc = add nsw i32 %26, 1, !dbg !17074
  store i32 %inc, i32* %i, align 4, !dbg !17074
  br label %for.cond, !dbg !17075, !llvm.loop !17076

for.end:                                          ; preds = %for.cond
  br label %if.end16, !dbg !17078

if.end16:                                         ; preds = %for.end, %entry
  ret void, !dbg !17079
}

; Function Attrs: noinline nounwind uwtable
define internal void @write_grid_paint_mask(%struct.WriteData* %wd, i32 %count, %struct.GridPaintMask* %grid_paint_mask) #0 !dbg !17080 {
entry:
  %wd.addr = alloca %struct.WriteData*, align 8
  %count.addr = alloca i32, align 4
  %grid_paint_mask.addr = alloca %struct.GridPaintMask*, align 8
  %i = alloca i32, align 4
  %gpm = alloca %struct.GridPaintMask*, align 8
  %gridsize = alloca i32, align 4
  store %struct.WriteData* %wd, %struct.WriteData** %wd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WriteData** %wd.addr, metadata !17090, metadata !DIExpression()), !dbg !17091
  store i32 %count, i32* %count.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %count.addr, metadata !17092, metadata !DIExpression()), !dbg !17093
  store %struct.GridPaintMask* %grid_paint_mask, %struct.GridPaintMask** %grid_paint_mask.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GridPaintMask** %grid_paint_mask.addr, metadata !17094, metadata !DIExpression()), !dbg !17095
  %0 = load %struct.GridPaintMask*, %struct.GridPaintMask** %grid_paint_mask.addr, align 8, !dbg !17096
  %tobool = icmp ne %struct.GridPaintMask* %0, null, !dbg !17096
  br i1 %tobool, label %if.then, label %if.end7, !dbg !17098

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %i, metadata !17099, metadata !DIExpression()), !dbg !17101
  %1 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !17102
  %2 = load i32, i32* %count.addr, align 4, !dbg !17103
  %3 = load %struct.GridPaintMask*, %struct.GridPaintMask** %grid_paint_mask.addr, align 8, !dbg !17104
  %4 = bitcast %struct.GridPaintMask* %3 to i8*, !dbg !17104
  call void @writestruct(%struct.WriteData* %1, i32 1096040772, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.237, i64 0, i64 0), i32 %2, i8* %4), !dbg !17105
  store i32 0, i32* %i, align 4, !dbg !17106
  br label %for.cond, !dbg !17108

for.cond:                                         ; preds = %for.inc, %if.then
  %5 = load i32, i32* %i, align 4, !dbg !17109
  %6 = load i32, i32* %count.addr, align 4, !dbg !17111
  %cmp = icmp slt i32 %5, %6, !dbg !17112
  br i1 %cmp, label %for.body, label %for.end, !dbg !17113

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.GridPaintMask** %gpm, metadata !17114, metadata !DIExpression()), !dbg !17116
  %7 = load %struct.GridPaintMask*, %struct.GridPaintMask** %grid_paint_mask.addr, align 8, !dbg !17117
  %8 = load i32, i32* %i, align 4, !dbg !17118
  %idxprom = sext i32 %8 to i64, !dbg !17117
  %arrayidx = getelementptr inbounds %struct.GridPaintMask, %struct.GridPaintMask* %7, i64 %idxprom, !dbg !17117
  store %struct.GridPaintMask* %arrayidx, %struct.GridPaintMask** %gpm, align 8, !dbg !17116
  %9 = load %struct.GridPaintMask*, %struct.GridPaintMask** %gpm, align 8, !dbg !17119
  %data = getelementptr inbounds %struct.GridPaintMask, %struct.GridPaintMask* %9, i32 0, i32 0, !dbg !17121
  %10 = load float*, float** %data, align 8, !dbg !17121
  %tobool1 = icmp ne float* %10, null, !dbg !17119
  br i1 %tobool1, label %if.then2, label %if.end, !dbg !17122

if.then2:                                         ; preds = %for.body
  call void @llvm.dbg.declare(metadata i32* %gridsize, metadata !17123, metadata !DIExpression()), !dbg !17125
  %11 = load %struct.GridPaintMask*, %struct.GridPaintMask** %gpm, align 8, !dbg !17126
  %level = getelementptr inbounds %struct.GridPaintMask, %struct.GridPaintMask* %11, i32 0, i32 1, !dbg !17127
  %12 = load i32, i32* %level, align 8, !dbg !17127
  %call = call i32 @BKE_ccg_gridsize(i32 %12), !dbg !17128
  store i32 %call, i32* %gridsize, align 4, !dbg !17125
  %13 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !17129
  %14 = load i32, i32* %gridsize, align 4, !dbg !17130
  %conv = sext i32 %14 to i64, !dbg !17130
  %mul = mul i64 4, %conv, !dbg !17131
  %15 = load i32, i32* %gridsize, align 4, !dbg !17132
  %conv3 = sext i32 %15 to i64, !dbg !17132
  %mul4 = mul i64 %mul, %conv3, !dbg !17133
  %conv5 = trunc i64 %mul4 to i32, !dbg !17134
  %16 = load %struct.GridPaintMask*, %struct.GridPaintMask** %gpm, align 8, !dbg !17135
  %data6 = getelementptr inbounds %struct.GridPaintMask, %struct.GridPaintMask* %16, i32 0, i32 0, !dbg !17136
  %17 = load float*, float** %data6, align 8, !dbg !17136
  %18 = bitcast float* %17 to i8*, !dbg !17135
  call void @writedata(%struct.WriteData* %13, i32 1096040772, i32 %conv5, i8* %18), !dbg !17137
  br label %if.end, !dbg !17138

if.end:                                           ; preds = %if.then2, %for.body
  br label %for.inc, !dbg !17139

for.inc:                                          ; preds = %if.end
  %19 = load i32, i32* %i, align 4, !dbg !17140
  %inc = add nsw i32 %19, 1, !dbg !17140
  store i32 %inc, i32* %i, align 4, !dbg !17140
  br label %for.cond, !dbg !17141, !llvm.loop !17142

for.end:                                          ; preds = %for.cond
  br label %if.end7, !dbg !17144

if.end7:                                          ; preds = %for.end, %entry
  ret void, !dbg !17145
}

declare dso_local void @CustomData_file_write_info(i32, i8**, i32*) #2

declare dso_local i32 @BKE_ccg_gridsize(i32) #2

; Function Attrs: noinline nounwind uwtable
define internal void @write_boid_state(%struct.WriteData* %wd, %struct.BoidState* %state) #0 !dbg !17146 {
entry:
  %wd.addr = alloca %struct.WriteData*, align 8
  %state.addr = alloca %struct.BoidState*, align 8
  %rule = alloca %struct.BoidRule*, align 8
  store %struct.WriteData* %wd, %struct.WriteData** %wd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WriteData** %wd.addr, metadata !17149, metadata !DIExpression()), !dbg !17150
  store %struct.BoidState* %state, %struct.BoidState** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BoidState** %state.addr, metadata !17151, metadata !DIExpression()), !dbg !17152
  call void @llvm.dbg.declare(metadata %struct.BoidRule** %rule, metadata !17153, metadata !DIExpression()), !dbg !17164
  %0 = load %struct.BoidState*, %struct.BoidState** %state.addr, align 8, !dbg !17165
  %rules = getelementptr inbounds %struct.BoidState, %struct.BoidState* %0, i32 0, i32 2, !dbg !17166
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %rules, i32 0, i32 0, !dbg !17167
  %1 = load i8*, i8** %first, align 8, !dbg !17167
  %2 = bitcast i8* %1 to %struct.BoidRule*, !dbg !17165
  store %struct.BoidRule* %2, %struct.BoidRule** %rule, align 8, !dbg !17164
  %3 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !17168
  %4 = load %struct.BoidState*, %struct.BoidState** %state.addr, align 8, !dbg !17169
  %5 = bitcast %struct.BoidState* %4 to i8*, !dbg !17169
  call void @writestruct(%struct.WriteData* %3, i32 1096040772, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.242, i64 0, i64 0), i32 1, i8* %5), !dbg !17170
  br label %for.cond, !dbg !17171

for.cond:                                         ; preds = %for.inc, %entry
  %6 = load %struct.BoidRule*, %struct.BoidRule** %rule, align 8, !dbg !17172
  %tobool = icmp ne %struct.BoidRule* %6, null, !dbg !17175
  br i1 %tobool, label %for.body, label %for.end, !dbg !17175

for.body:                                         ; preds = %for.cond
  %7 = load %struct.BoidRule*, %struct.BoidRule** %rule, align 8, !dbg !17176
  %type = getelementptr inbounds %struct.BoidRule, %struct.BoidRule* %7, i32 0, i32 2, !dbg !17178
  %8 = load i32, i32* %type, align 8, !dbg !17178
  switch i32 %8, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb
    i32 3, label %sw.bb1
    i32 6, label %sw.bb2
    i32 7, label %sw.bb3
    i32 8, label %sw.bb4
  ], !dbg !17179

sw.bb:                                            ; preds = %for.body, %for.body
  %9 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !17180
  %10 = load %struct.BoidRule*, %struct.BoidRule** %rule, align 8, !dbg !17182
  %11 = bitcast %struct.BoidRule* %10 to i8*, !dbg !17182
  call void @writestruct(%struct.WriteData* %9, i32 1096040772, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.243, i64 0, i64 0), i32 1, i8* %11), !dbg !17183
  br label %sw.epilog, !dbg !17184

sw.bb1:                                           ; preds = %for.body
  %12 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !17185
  %13 = load %struct.BoidRule*, %struct.BoidRule** %rule, align 8, !dbg !17186
  %14 = bitcast %struct.BoidRule* %13 to i8*, !dbg !17186
  call void @writestruct(%struct.WriteData* %12, i32 1096040772, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.244, i64 0, i64 0), i32 1, i8* %14), !dbg !17187
  br label %sw.epilog, !dbg !17188

sw.bb2:                                           ; preds = %for.body
  %15 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !17189
  %16 = load %struct.BoidRule*, %struct.BoidRule** %rule, align 8, !dbg !17190
  %17 = bitcast %struct.BoidRule* %16 to i8*, !dbg !17190
  call void @writestruct(%struct.WriteData* %15, i32 1096040772, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.245, i64 0, i64 0), i32 1, i8* %17), !dbg !17191
  br label %sw.epilog, !dbg !17192

sw.bb3:                                           ; preds = %for.body
  %18 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !17193
  %19 = load %struct.BoidRule*, %struct.BoidRule** %rule, align 8, !dbg !17194
  %20 = bitcast %struct.BoidRule* %19 to i8*, !dbg !17194
  call void @writestruct(%struct.WriteData* %18, i32 1096040772, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.246, i64 0, i64 0), i32 1, i8* %20), !dbg !17195
  br label %sw.epilog, !dbg !17196

sw.bb4:                                           ; preds = %for.body
  %21 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !17197
  %22 = load %struct.BoidRule*, %struct.BoidRule** %rule, align 8, !dbg !17198
  %23 = bitcast %struct.BoidRule* %22 to i8*, !dbg !17198
  call void @writestruct(%struct.WriteData* %21, i32 1096040772, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.247, i64 0, i64 0), i32 1, i8* %23), !dbg !17199
  br label %sw.epilog, !dbg !17200

sw.default:                                       ; preds = %for.body
  %24 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !17201
  %25 = load %struct.BoidRule*, %struct.BoidRule** %rule, align 8, !dbg !17202
  %26 = bitcast %struct.BoidRule* %25 to i8*, !dbg !17202
  call void @writestruct(%struct.WriteData* %24, i32 1096040772, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.248, i64 0, i64 0), i32 1, i8* %26), !dbg !17203
  br label %sw.epilog, !dbg !17204

sw.epilog:                                        ; preds = %sw.default, %sw.bb4, %sw.bb3, %sw.bb2, %sw.bb1, %sw.bb
  br label %for.inc, !dbg !17205

for.inc:                                          ; preds = %sw.epilog
  %27 = load %struct.BoidRule*, %struct.BoidRule** %rule, align 8, !dbg !17206
  %next = getelementptr inbounds %struct.BoidRule, %struct.BoidRule* %27, i32 0, i32 0, !dbg !17207
  %28 = load %struct.BoidRule*, %struct.BoidRule** %next, align 8, !dbg !17207
  store %struct.BoidRule* %28, %struct.BoidRule** %rule, align 8, !dbg !17208
  br label %for.cond, !dbg !17209, !llvm.loop !17210

for.end:                                          ; preds = %for.cond
  ret void, !dbg !17212
}

; Function Attrs: noinline nounwind uwtable
define internal void @write_linestyle_color_modifiers(%struct.WriteData* %wd, %struct.ListBase* %modifiers) #0 !dbg !17213 {
entry:
  %wd.addr = alloca %struct.WriteData*, align 8
  %modifiers.addr = alloca %struct.ListBase*, align 8
  %m = alloca %struct.LineStyleModifier*, align 8
  %struct_name = alloca i8*, align 8
  store %struct.WriteData* %wd, %struct.WriteData** %wd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WriteData** %wd.addr, metadata !17214, metadata !DIExpression()), !dbg !17215
  store %struct.ListBase* %modifiers, %struct.ListBase** %modifiers.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %modifiers.addr, metadata !17216, metadata !DIExpression()), !dbg !17217
  call void @llvm.dbg.declare(metadata %struct.LineStyleModifier** %m, metadata !17218, metadata !DIExpression()), !dbg !17221
  call void @llvm.dbg.declare(metadata i8** %struct_name, metadata !17222, metadata !DIExpression()), !dbg !17223
  %0 = load %struct.ListBase*, %struct.ListBase** %modifiers.addr, align 8, !dbg !17224
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %0, i32 0, i32 0, !dbg !17226
  %1 = load i8*, i8** %first, align 8, !dbg !17226
  %2 = bitcast i8* %1 to %struct.LineStyleModifier*, !dbg !17224
  store %struct.LineStyleModifier* %2, %struct.LineStyleModifier** %m, align 8, !dbg !17227
  br label %for.cond, !dbg !17228

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.LineStyleModifier*, %struct.LineStyleModifier** %m, align 8, !dbg !17229
  %tobool = icmp ne %struct.LineStyleModifier* %3, null, !dbg !17231
  br i1 %tobool, label %for.body, label %for.end, !dbg !17231

for.body:                                         ; preds = %for.cond
  %4 = load %struct.LineStyleModifier*, %struct.LineStyleModifier** %m, align 8, !dbg !17232
  %type = getelementptr inbounds %struct.LineStyleModifier, %struct.LineStyleModifier* %4, i32 0, i32 3, !dbg !17234
  %5 = load i32, i32* %type, align 8, !dbg !17234
  switch i32 %5, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb1
    i32 3, label %sw.bb2
    i32 4, label %sw.bb3
  ], !dbg !17235

sw.bb:                                            ; preds = %for.body
  store i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.261, i64 0, i64 0), i8** %struct_name, align 8, !dbg !17236
  br label %sw.epilog, !dbg !17238

sw.bb1:                                           ; preds = %for.body
  store i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.262, i64 0, i64 0), i8** %struct_name, align 8, !dbg !17239
  br label %sw.epilog, !dbg !17240

sw.bb2:                                           ; preds = %for.body
  store i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.263, i64 0, i64 0), i8** %struct_name, align 8, !dbg !17241
  br label %sw.epilog, !dbg !17242

sw.bb3:                                           ; preds = %for.body
  store i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.264, i64 0, i64 0), i8** %struct_name, align 8, !dbg !17243
  br label %sw.epilog, !dbg !17244

sw.default:                                       ; preds = %for.body
  store i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.265, i64 0, i64 0), i8** %struct_name, align 8, !dbg !17245
  br label %sw.epilog, !dbg !17246

sw.epilog:                                        ; preds = %sw.default, %sw.bb3, %sw.bb2, %sw.bb1, %sw.bb
  %6 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !17247
  %7 = load i8*, i8** %struct_name, align 8, !dbg !17248
  %8 = load %struct.LineStyleModifier*, %struct.LineStyleModifier** %m, align 8, !dbg !17249
  %9 = bitcast %struct.LineStyleModifier* %8 to i8*, !dbg !17249
  call void @writestruct(%struct.WriteData* %6, i32 1096040772, i8* %7, i32 1, i8* %9), !dbg !17250
  br label %for.inc, !dbg !17251

for.inc:                                          ; preds = %sw.epilog
  %10 = load %struct.LineStyleModifier*, %struct.LineStyleModifier** %m, align 8, !dbg !17252
  %next = getelementptr inbounds %struct.LineStyleModifier, %struct.LineStyleModifier* %10, i32 0, i32 0, !dbg !17253
  %11 = load %struct.LineStyleModifier*, %struct.LineStyleModifier** %next, align 8, !dbg !17253
  store %struct.LineStyleModifier* %11, %struct.LineStyleModifier** %m, align 8, !dbg !17254
  br label %for.cond, !dbg !17255, !llvm.loop !17256

for.end:                                          ; preds = %for.cond
  %12 = load %struct.ListBase*, %struct.ListBase** %modifiers.addr, align 8, !dbg !17258
  %first4 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %12, i32 0, i32 0, !dbg !17260
  %13 = load i8*, i8** %first4, align 8, !dbg !17260
  %14 = bitcast i8* %13 to %struct.LineStyleModifier*, !dbg !17258
  store %struct.LineStyleModifier* %14, %struct.LineStyleModifier** %m, align 8, !dbg !17261
  br label %for.cond5, !dbg !17262

for.cond5:                                        ; preds = %for.inc17, %for.end
  %15 = load %struct.LineStyleModifier*, %struct.LineStyleModifier** %m, align 8, !dbg !17263
  %tobool6 = icmp ne %struct.LineStyleModifier* %15, null, !dbg !17265
  br i1 %tobool6, label %for.body7, label %for.end19, !dbg !17265

for.body7:                                        ; preds = %for.cond5
  %16 = load %struct.LineStyleModifier*, %struct.LineStyleModifier** %m, align 8, !dbg !17266
  %type8 = getelementptr inbounds %struct.LineStyleModifier, %struct.LineStyleModifier* %16, i32 0, i32 3, !dbg !17268
  %17 = load i32, i32* %type8, align 8, !dbg !17268
  switch i32 %17, label %sw.epilog16 [
    i32 1, label %sw.bb9
    i32 2, label %sw.bb10
    i32 3, label %sw.bb12
    i32 4, label %sw.bb14
  ], !dbg !17269

sw.bb9:                                           ; preds = %for.body7
  %18 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !17270
  %19 = load %struct.LineStyleModifier*, %struct.LineStyleModifier** %m, align 8, !dbg !17272
  %20 = bitcast %struct.LineStyleModifier* %19 to %struct.LineStyleColorModifier_AlongStroke*, !dbg !17273
  %color_ramp = getelementptr inbounds %struct.LineStyleColorModifier_AlongStroke, %struct.LineStyleColorModifier_AlongStroke* %20, i32 0, i32 1, !dbg !17273
  %21 = load %struct.ColorBand*, %struct.ColorBand** %color_ramp, align 8, !dbg !17273
  %22 = bitcast %struct.ColorBand* %21 to i8*, !dbg !17274
  call void @writestruct(%struct.WriteData* %18, i32 1096040772, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.223, i64 0, i64 0), i32 1, i8* %22), !dbg !17275
  br label %sw.epilog16, !dbg !17276

sw.bb10:                                          ; preds = %for.body7
  %23 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !17277
  %24 = load %struct.LineStyleModifier*, %struct.LineStyleModifier** %m, align 8, !dbg !17278
  %25 = bitcast %struct.LineStyleModifier* %24 to %struct.LineStyleColorModifier_DistanceFromCamera*, !dbg !17279
  %color_ramp11 = getelementptr inbounds %struct.LineStyleColorModifier_DistanceFromCamera, %struct.LineStyleColorModifier_DistanceFromCamera* %25, i32 0, i32 1, !dbg !17279
  %26 = load %struct.ColorBand*, %struct.ColorBand** %color_ramp11, align 8, !dbg !17279
  %27 = bitcast %struct.ColorBand* %26 to i8*, !dbg !17280
  call void @writestruct(%struct.WriteData* %23, i32 1096040772, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.223, i64 0, i64 0), i32 1, i8* %27), !dbg !17281
  br label %sw.epilog16, !dbg !17282

sw.bb12:                                          ; preds = %for.body7
  %28 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !17283
  %29 = load %struct.LineStyleModifier*, %struct.LineStyleModifier** %m, align 8, !dbg !17284
  %30 = bitcast %struct.LineStyleModifier* %29 to %struct.LineStyleColorModifier_DistanceFromObject*, !dbg !17285
  %color_ramp13 = getelementptr inbounds %struct.LineStyleColorModifier_DistanceFromObject, %struct.LineStyleColorModifier_DistanceFromObject* %30, i32 0, i32 2, !dbg !17285
  %31 = load %struct.ColorBand*, %struct.ColorBand** %color_ramp13, align 8, !dbg !17285
  %32 = bitcast %struct.ColorBand* %31 to i8*, !dbg !17286
  call void @writestruct(%struct.WriteData* %28, i32 1096040772, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.223, i64 0, i64 0), i32 1, i8* %32), !dbg !17287
  br label %sw.epilog16, !dbg !17288

sw.bb14:                                          ; preds = %for.body7
  %33 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !17289
  %34 = load %struct.LineStyleModifier*, %struct.LineStyleModifier** %m, align 8, !dbg !17290
  %35 = bitcast %struct.LineStyleModifier* %34 to %struct.LineStyleColorModifier_Material*, !dbg !17291
  %color_ramp15 = getelementptr inbounds %struct.LineStyleColorModifier_Material, %struct.LineStyleColorModifier_Material* %35, i32 0, i32 1, !dbg !17291
  %36 = load %struct.ColorBand*, %struct.ColorBand** %color_ramp15, align 8, !dbg !17291
  %37 = bitcast %struct.ColorBand* %36 to i8*, !dbg !17292
  call void @writestruct(%struct.WriteData* %33, i32 1096040772, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.223, i64 0, i64 0), i32 1, i8* %37), !dbg !17293
  br label %sw.epilog16, !dbg !17294

sw.epilog16:                                      ; preds = %for.body7, %sw.bb14, %sw.bb12, %sw.bb10, %sw.bb9
  br label %for.inc17, !dbg !17295

for.inc17:                                        ; preds = %sw.epilog16
  %38 = load %struct.LineStyleModifier*, %struct.LineStyleModifier** %m, align 8, !dbg !17296
  %next18 = getelementptr inbounds %struct.LineStyleModifier, %struct.LineStyleModifier* %38, i32 0, i32 0, !dbg !17297
  %39 = load %struct.LineStyleModifier*, %struct.LineStyleModifier** %next18, align 8, !dbg !17297
  store %struct.LineStyleModifier* %39, %struct.LineStyleModifier** %m, align 8, !dbg !17298
  br label %for.cond5, !dbg !17299, !llvm.loop !17300

for.end19:                                        ; preds = %for.cond5
  ret void, !dbg !17302
}

; Function Attrs: noinline nounwind uwtable
define internal void @write_linestyle_alpha_modifiers(%struct.WriteData* %wd, %struct.ListBase* %modifiers) #0 !dbg !17303 {
entry:
  %wd.addr = alloca %struct.WriteData*, align 8
  %modifiers.addr = alloca %struct.ListBase*, align 8
  %m = alloca %struct.LineStyleModifier*, align 8
  %struct_name = alloca i8*, align 8
  store %struct.WriteData* %wd, %struct.WriteData** %wd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WriteData** %wd.addr, metadata !17304, metadata !DIExpression()), !dbg !17305
  store %struct.ListBase* %modifiers, %struct.ListBase** %modifiers.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %modifiers.addr, metadata !17306, metadata !DIExpression()), !dbg !17307
  call void @llvm.dbg.declare(metadata %struct.LineStyleModifier** %m, metadata !17308, metadata !DIExpression()), !dbg !17309
  call void @llvm.dbg.declare(metadata i8** %struct_name, metadata !17310, metadata !DIExpression()), !dbg !17311
  %0 = load %struct.ListBase*, %struct.ListBase** %modifiers.addr, align 8, !dbg !17312
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %0, i32 0, i32 0, !dbg !17314
  %1 = load i8*, i8** %first, align 8, !dbg !17314
  %2 = bitcast i8* %1 to %struct.LineStyleModifier*, !dbg !17312
  store %struct.LineStyleModifier* %2, %struct.LineStyleModifier** %m, align 8, !dbg !17315
  br label %for.cond, !dbg !17316

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.LineStyleModifier*, %struct.LineStyleModifier** %m, align 8, !dbg !17317
  %tobool = icmp ne %struct.LineStyleModifier* %3, null, !dbg !17319
  br i1 %tobool, label %for.body, label %for.end, !dbg !17319

for.body:                                         ; preds = %for.cond
  %4 = load %struct.LineStyleModifier*, %struct.LineStyleModifier** %m, align 8, !dbg !17320
  %type = getelementptr inbounds %struct.LineStyleModifier, %struct.LineStyleModifier* %4, i32 0, i32 3, !dbg !17322
  %5 = load i32, i32* %type, align 8, !dbg !17322
  switch i32 %5, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb1
    i32 3, label %sw.bb2
    i32 4, label %sw.bb3
  ], !dbg !17323

sw.bb:                                            ; preds = %for.body
  store i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.266, i64 0, i64 0), i8** %struct_name, align 8, !dbg !17324
  br label %sw.epilog, !dbg !17326

sw.bb1:                                           ; preds = %for.body
  store i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.267, i64 0, i64 0), i8** %struct_name, align 8, !dbg !17327
  br label %sw.epilog, !dbg !17328

sw.bb2:                                           ; preds = %for.body
  store i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.268, i64 0, i64 0), i8** %struct_name, align 8, !dbg !17329
  br label %sw.epilog, !dbg !17330

sw.bb3:                                           ; preds = %for.body
  store i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.269, i64 0, i64 0), i8** %struct_name, align 8, !dbg !17331
  br label %sw.epilog, !dbg !17332

sw.default:                                       ; preds = %for.body
  store i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.270, i64 0, i64 0), i8** %struct_name, align 8, !dbg !17333
  br label %sw.epilog, !dbg !17334

sw.epilog:                                        ; preds = %sw.default, %sw.bb3, %sw.bb2, %sw.bb1, %sw.bb
  %6 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !17335
  %7 = load i8*, i8** %struct_name, align 8, !dbg !17336
  %8 = load %struct.LineStyleModifier*, %struct.LineStyleModifier** %m, align 8, !dbg !17337
  %9 = bitcast %struct.LineStyleModifier* %8 to i8*, !dbg !17337
  call void @writestruct(%struct.WriteData* %6, i32 1096040772, i8* %7, i32 1, i8* %9), !dbg !17338
  br label %for.inc, !dbg !17339

for.inc:                                          ; preds = %sw.epilog
  %10 = load %struct.LineStyleModifier*, %struct.LineStyleModifier** %m, align 8, !dbg !17340
  %next = getelementptr inbounds %struct.LineStyleModifier, %struct.LineStyleModifier* %10, i32 0, i32 0, !dbg !17341
  %11 = load %struct.LineStyleModifier*, %struct.LineStyleModifier** %next, align 8, !dbg !17341
  store %struct.LineStyleModifier* %11, %struct.LineStyleModifier** %m, align 8, !dbg !17342
  br label %for.cond, !dbg !17343, !llvm.loop !17344

for.end:                                          ; preds = %for.cond
  %12 = load %struct.ListBase*, %struct.ListBase** %modifiers.addr, align 8, !dbg !17346
  %first4 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %12, i32 0, i32 0, !dbg !17348
  %13 = load i8*, i8** %first4, align 8, !dbg !17348
  %14 = bitcast i8* %13 to %struct.LineStyleModifier*, !dbg !17346
  store %struct.LineStyleModifier* %14, %struct.LineStyleModifier** %m, align 8, !dbg !17349
  br label %for.cond5, !dbg !17350

for.cond5:                                        ; preds = %for.inc17, %for.end
  %15 = load %struct.LineStyleModifier*, %struct.LineStyleModifier** %m, align 8, !dbg !17351
  %tobool6 = icmp ne %struct.LineStyleModifier* %15, null, !dbg !17353
  br i1 %tobool6, label %for.body7, label %for.end19, !dbg !17353

for.body7:                                        ; preds = %for.cond5
  %16 = load %struct.LineStyleModifier*, %struct.LineStyleModifier** %m, align 8, !dbg !17354
  %type8 = getelementptr inbounds %struct.LineStyleModifier, %struct.LineStyleModifier* %16, i32 0, i32 3, !dbg !17356
  %17 = load i32, i32* %type8, align 8, !dbg !17356
  switch i32 %17, label %sw.epilog16 [
    i32 1, label %sw.bb9
    i32 2, label %sw.bb10
    i32 3, label %sw.bb12
    i32 4, label %sw.bb14
  ], !dbg !17357

sw.bb9:                                           ; preds = %for.body7
  %18 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !17358
  %19 = load %struct.LineStyleModifier*, %struct.LineStyleModifier** %m, align 8, !dbg !17360
  %20 = bitcast %struct.LineStyleModifier* %19 to %struct.LineStyleAlphaModifier_AlongStroke*, !dbg !17361
  %curve = getelementptr inbounds %struct.LineStyleAlphaModifier_AlongStroke, %struct.LineStyleAlphaModifier_AlongStroke* %20, i32 0, i32 1, !dbg !17361
  %21 = load %struct.CurveMapping*, %struct.CurveMapping** %curve, align 8, !dbg !17361
  call void @write_curvemapping(%struct.WriteData* %18, %struct.CurveMapping* %21), !dbg !17362
  br label %sw.epilog16, !dbg !17363

sw.bb10:                                          ; preds = %for.body7
  %22 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !17364
  %23 = load %struct.LineStyleModifier*, %struct.LineStyleModifier** %m, align 8, !dbg !17365
  %24 = bitcast %struct.LineStyleModifier* %23 to %struct.LineStyleAlphaModifier_DistanceFromCamera*, !dbg !17366
  %curve11 = getelementptr inbounds %struct.LineStyleAlphaModifier_DistanceFromCamera, %struct.LineStyleAlphaModifier_DistanceFromCamera* %24, i32 0, i32 1, !dbg !17366
  %25 = load %struct.CurveMapping*, %struct.CurveMapping** %curve11, align 8, !dbg !17366
  call void @write_curvemapping(%struct.WriteData* %22, %struct.CurveMapping* %25), !dbg !17367
  br label %sw.epilog16, !dbg !17368

sw.bb12:                                          ; preds = %for.body7
  %26 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !17369
  %27 = load %struct.LineStyleModifier*, %struct.LineStyleModifier** %m, align 8, !dbg !17370
  %28 = bitcast %struct.LineStyleModifier* %27 to %struct.LineStyleAlphaModifier_DistanceFromObject*, !dbg !17371
  %curve13 = getelementptr inbounds %struct.LineStyleAlphaModifier_DistanceFromObject, %struct.LineStyleAlphaModifier_DistanceFromObject* %28, i32 0, i32 2, !dbg !17371
  %29 = load %struct.CurveMapping*, %struct.CurveMapping** %curve13, align 8, !dbg !17371
  call void @write_curvemapping(%struct.WriteData* %26, %struct.CurveMapping* %29), !dbg !17372
  br label %sw.epilog16, !dbg !17373

sw.bb14:                                          ; preds = %for.body7
  %30 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !17374
  %31 = load %struct.LineStyleModifier*, %struct.LineStyleModifier** %m, align 8, !dbg !17375
  %32 = bitcast %struct.LineStyleModifier* %31 to %struct.LineStyleAlphaModifier_Material*, !dbg !17376
  %curve15 = getelementptr inbounds %struct.LineStyleAlphaModifier_Material, %struct.LineStyleAlphaModifier_Material* %32, i32 0, i32 1, !dbg !17376
  %33 = load %struct.CurveMapping*, %struct.CurveMapping** %curve15, align 8, !dbg !17376
  call void @write_curvemapping(%struct.WriteData* %30, %struct.CurveMapping* %33), !dbg !17377
  br label %sw.epilog16, !dbg !17378

sw.epilog16:                                      ; preds = %for.body7, %sw.bb14, %sw.bb12, %sw.bb10, %sw.bb9
  br label %for.inc17, !dbg !17379

for.inc17:                                        ; preds = %sw.epilog16
  %34 = load %struct.LineStyleModifier*, %struct.LineStyleModifier** %m, align 8, !dbg !17380
  %next18 = getelementptr inbounds %struct.LineStyleModifier, %struct.LineStyleModifier* %34, i32 0, i32 0, !dbg !17381
  %35 = load %struct.LineStyleModifier*, %struct.LineStyleModifier** %next18, align 8, !dbg !17381
  store %struct.LineStyleModifier* %35, %struct.LineStyleModifier** %m, align 8, !dbg !17382
  br label %for.cond5, !dbg !17383, !llvm.loop !17384

for.end19:                                        ; preds = %for.cond5
  ret void, !dbg !17386
}

; Function Attrs: noinline nounwind uwtable
define internal void @write_linestyle_thickness_modifiers(%struct.WriteData* %wd, %struct.ListBase* %modifiers) #0 !dbg !17387 {
entry:
  %wd.addr = alloca %struct.WriteData*, align 8
  %modifiers.addr = alloca %struct.ListBase*, align 8
  %m = alloca %struct.LineStyleModifier*, align 8
  %struct_name = alloca i8*, align 8
  store %struct.WriteData* %wd, %struct.WriteData** %wd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WriteData** %wd.addr, metadata !17388, metadata !DIExpression()), !dbg !17389
  store %struct.ListBase* %modifiers, %struct.ListBase** %modifiers.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %modifiers.addr, metadata !17390, metadata !DIExpression()), !dbg !17391
  call void @llvm.dbg.declare(metadata %struct.LineStyleModifier** %m, metadata !17392, metadata !DIExpression()), !dbg !17393
  call void @llvm.dbg.declare(metadata i8** %struct_name, metadata !17394, metadata !DIExpression()), !dbg !17395
  %0 = load %struct.ListBase*, %struct.ListBase** %modifiers.addr, align 8, !dbg !17396
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %0, i32 0, i32 0, !dbg !17398
  %1 = load i8*, i8** %first, align 8, !dbg !17398
  %2 = bitcast i8* %1 to %struct.LineStyleModifier*, !dbg !17396
  store %struct.LineStyleModifier* %2, %struct.LineStyleModifier** %m, align 8, !dbg !17399
  br label %for.cond, !dbg !17400

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.LineStyleModifier*, %struct.LineStyleModifier** %m, align 8, !dbg !17401
  %tobool = icmp ne %struct.LineStyleModifier* %3, null, !dbg !17403
  br i1 %tobool, label %for.body, label %for.end, !dbg !17403

for.body:                                         ; preds = %for.cond
  %4 = load %struct.LineStyleModifier*, %struct.LineStyleModifier** %m, align 8, !dbg !17404
  %type = getelementptr inbounds %struct.LineStyleModifier, %struct.LineStyleModifier* %4, i32 0, i32 3, !dbg !17406
  %5 = load i32, i32* %type, align 8, !dbg !17406
  switch i32 %5, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb1
    i32 3, label %sw.bb2
    i32 4, label %sw.bb3
    i32 13, label %sw.bb4
  ], !dbg !17407

sw.bb:                                            ; preds = %for.body
  store i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.271, i64 0, i64 0), i8** %struct_name, align 8, !dbg !17408
  br label %sw.epilog, !dbg !17410

sw.bb1:                                           ; preds = %for.body
  store i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.272, i64 0, i64 0), i8** %struct_name, align 8, !dbg !17411
  br label %sw.epilog, !dbg !17412

sw.bb2:                                           ; preds = %for.body
  store i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.273, i64 0, i64 0), i8** %struct_name, align 8, !dbg !17413
  br label %sw.epilog, !dbg !17414

sw.bb3:                                           ; preds = %for.body
  store i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.274, i64 0, i64 0), i8** %struct_name, align 8, !dbg !17415
  br label %sw.epilog, !dbg !17416

sw.bb4:                                           ; preds = %for.body
  store i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.275, i64 0, i64 0), i8** %struct_name, align 8, !dbg !17417
  br label %sw.epilog, !dbg !17418

sw.default:                                       ; preds = %for.body
  store i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.276, i64 0, i64 0), i8** %struct_name, align 8, !dbg !17419
  br label %sw.epilog, !dbg !17420

sw.epilog:                                        ; preds = %sw.default, %sw.bb4, %sw.bb3, %sw.bb2, %sw.bb1, %sw.bb
  %6 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !17421
  %7 = load i8*, i8** %struct_name, align 8, !dbg !17422
  %8 = load %struct.LineStyleModifier*, %struct.LineStyleModifier** %m, align 8, !dbg !17423
  %9 = bitcast %struct.LineStyleModifier* %8 to i8*, !dbg !17423
  call void @writestruct(%struct.WriteData* %6, i32 1096040772, i8* %7, i32 1, i8* %9), !dbg !17424
  br label %for.inc, !dbg !17425

for.inc:                                          ; preds = %sw.epilog
  %10 = load %struct.LineStyleModifier*, %struct.LineStyleModifier** %m, align 8, !dbg !17426
  %next = getelementptr inbounds %struct.LineStyleModifier, %struct.LineStyleModifier* %10, i32 0, i32 0, !dbg !17427
  %11 = load %struct.LineStyleModifier*, %struct.LineStyleModifier** %next, align 8, !dbg !17427
  store %struct.LineStyleModifier* %11, %struct.LineStyleModifier** %m, align 8, !dbg !17428
  br label %for.cond, !dbg !17429, !llvm.loop !17430

for.end:                                          ; preds = %for.cond
  %12 = load %struct.ListBase*, %struct.ListBase** %modifiers.addr, align 8, !dbg !17432
  %first5 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %12, i32 0, i32 0, !dbg !17434
  %13 = load i8*, i8** %first5, align 8, !dbg !17434
  %14 = bitcast i8* %13 to %struct.LineStyleModifier*, !dbg !17432
  store %struct.LineStyleModifier* %14, %struct.LineStyleModifier** %m, align 8, !dbg !17435
  br label %for.cond6, !dbg !17436

for.cond6:                                        ; preds = %for.inc18, %for.end
  %15 = load %struct.LineStyleModifier*, %struct.LineStyleModifier** %m, align 8, !dbg !17437
  %tobool7 = icmp ne %struct.LineStyleModifier* %15, null, !dbg !17439
  br i1 %tobool7, label %for.body8, label %for.end20, !dbg !17439

for.body8:                                        ; preds = %for.cond6
  %16 = load %struct.LineStyleModifier*, %struct.LineStyleModifier** %m, align 8, !dbg !17440
  %type9 = getelementptr inbounds %struct.LineStyleModifier, %struct.LineStyleModifier* %16, i32 0, i32 3, !dbg !17442
  %17 = load i32, i32* %type9, align 8, !dbg !17442
  switch i32 %17, label %sw.epilog17 [
    i32 1, label %sw.bb10
    i32 2, label %sw.bb11
    i32 3, label %sw.bb13
    i32 4, label %sw.bb15
  ], !dbg !17443

sw.bb10:                                          ; preds = %for.body8
  %18 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !17444
  %19 = load %struct.LineStyleModifier*, %struct.LineStyleModifier** %m, align 8, !dbg !17446
  %20 = bitcast %struct.LineStyleModifier* %19 to %struct.LineStyleThicknessModifier_AlongStroke*, !dbg !17447
  %curve = getelementptr inbounds %struct.LineStyleThicknessModifier_AlongStroke, %struct.LineStyleThicknessModifier_AlongStroke* %20, i32 0, i32 1, !dbg !17447
  %21 = load %struct.CurveMapping*, %struct.CurveMapping** %curve, align 8, !dbg !17447
  call void @write_curvemapping(%struct.WriteData* %18, %struct.CurveMapping* %21), !dbg !17448
  br label %sw.epilog17, !dbg !17449

sw.bb11:                                          ; preds = %for.body8
  %22 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !17450
  %23 = load %struct.LineStyleModifier*, %struct.LineStyleModifier** %m, align 8, !dbg !17451
  %24 = bitcast %struct.LineStyleModifier* %23 to %struct.LineStyleThicknessModifier_DistanceFromCamera*, !dbg !17452
  %curve12 = getelementptr inbounds %struct.LineStyleThicknessModifier_DistanceFromCamera, %struct.LineStyleThicknessModifier_DistanceFromCamera* %24, i32 0, i32 1, !dbg !17452
  %25 = load %struct.CurveMapping*, %struct.CurveMapping** %curve12, align 8, !dbg !17452
  call void @write_curvemapping(%struct.WriteData* %22, %struct.CurveMapping* %25), !dbg !17453
  br label %sw.epilog17, !dbg !17454

sw.bb13:                                          ; preds = %for.body8
  %26 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !17455
  %27 = load %struct.LineStyleModifier*, %struct.LineStyleModifier** %m, align 8, !dbg !17456
  %28 = bitcast %struct.LineStyleModifier* %27 to %struct.LineStyleThicknessModifier_DistanceFromObject*, !dbg !17457
  %curve14 = getelementptr inbounds %struct.LineStyleThicknessModifier_DistanceFromObject, %struct.LineStyleThicknessModifier_DistanceFromObject* %28, i32 0, i32 2, !dbg !17457
  %29 = load %struct.CurveMapping*, %struct.CurveMapping** %curve14, align 8, !dbg !17457
  call void @write_curvemapping(%struct.WriteData* %26, %struct.CurveMapping* %29), !dbg !17458
  br label %sw.epilog17, !dbg !17459

sw.bb15:                                          ; preds = %for.body8
  %30 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !17460
  %31 = load %struct.LineStyleModifier*, %struct.LineStyleModifier** %m, align 8, !dbg !17461
  %32 = bitcast %struct.LineStyleModifier* %31 to %struct.LineStyleThicknessModifier_Material*, !dbg !17462
  %curve16 = getelementptr inbounds %struct.LineStyleThicknessModifier_Material, %struct.LineStyleThicknessModifier_Material* %32, i32 0, i32 1, !dbg !17462
  %33 = load %struct.CurveMapping*, %struct.CurveMapping** %curve16, align 8, !dbg !17462
  call void @write_curvemapping(%struct.WriteData* %30, %struct.CurveMapping* %33), !dbg !17463
  br label %sw.epilog17, !dbg !17464

sw.epilog17:                                      ; preds = %for.body8, %sw.bb15, %sw.bb13, %sw.bb11, %sw.bb10
  br label %for.inc18, !dbg !17465

for.inc18:                                        ; preds = %sw.epilog17
  %34 = load %struct.LineStyleModifier*, %struct.LineStyleModifier** %m, align 8, !dbg !17466
  %next19 = getelementptr inbounds %struct.LineStyleModifier, %struct.LineStyleModifier* %34, i32 0, i32 0, !dbg !17467
  %35 = load %struct.LineStyleModifier*, %struct.LineStyleModifier** %next19, align 8, !dbg !17467
  store %struct.LineStyleModifier* %35, %struct.LineStyleModifier** %m, align 8, !dbg !17468
  br label %for.cond6, !dbg !17469, !llvm.loop !17470

for.end20:                                        ; preds = %for.cond6
  ret void, !dbg !17472
}

; Function Attrs: noinline nounwind uwtable
define internal void @write_linestyle_geometry_modifiers(%struct.WriteData* %wd, %struct.ListBase* %modifiers) #0 !dbg !17473 {
entry:
  %wd.addr = alloca %struct.WriteData*, align 8
  %modifiers.addr = alloca %struct.ListBase*, align 8
  %m = alloca %struct.LineStyleModifier*, align 8
  %struct_name = alloca i8*, align 8
  store %struct.WriteData* %wd, %struct.WriteData** %wd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WriteData** %wd.addr, metadata !17474, metadata !DIExpression()), !dbg !17475
  store %struct.ListBase* %modifiers, %struct.ListBase** %modifiers.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %modifiers.addr, metadata !17476, metadata !DIExpression()), !dbg !17477
  call void @llvm.dbg.declare(metadata %struct.LineStyleModifier** %m, metadata !17478, metadata !DIExpression()), !dbg !17479
  call void @llvm.dbg.declare(metadata i8** %struct_name, metadata !17480, metadata !DIExpression()), !dbg !17481
  %0 = load %struct.ListBase*, %struct.ListBase** %modifiers.addr, align 8, !dbg !17482
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %0, i32 0, i32 0, !dbg !17484
  %1 = load i8*, i8** %first, align 8, !dbg !17484
  %2 = bitcast i8* %1 to %struct.LineStyleModifier*, !dbg !17482
  store %struct.LineStyleModifier* %2, %struct.LineStyleModifier** %m, align 8, !dbg !17485
  br label %for.cond, !dbg !17486

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.LineStyleModifier*, %struct.LineStyleModifier** %m, align 8, !dbg !17487
  %tobool = icmp ne %struct.LineStyleModifier* %3, null, !dbg !17489
  br i1 %tobool, label %for.body, label %for.end, !dbg !17489

for.body:                                         ; preds = %for.cond
  %4 = load %struct.LineStyleModifier*, %struct.LineStyleModifier** %m, align 8, !dbg !17490
  %type = getelementptr inbounds %struct.LineStyleModifier, %struct.LineStyleModifier* %4, i32 0, i32 3, !dbg !17492
  %5 = load i32, i32* %type, align 8, !dbg !17492
  switch i32 %5, label %sw.default [
    i32 5, label %sw.bb
    i32 6, label %sw.bb1
    i32 7, label %sw.bb2
    i32 8, label %sw.bb3
    i32 9, label %sw.bb4
    i32 10, label %sw.bb5
    i32 11, label %sw.bb6
    i32 12, label %sw.bb7
    i32 14, label %sw.bb8
    i32 15, label %sw.bb9
    i32 16, label %sw.bb10
    i32 17, label %sw.bb11
    i32 18, label %sw.bb12
  ], !dbg !17493

sw.bb:                                            ; preds = %for.body
  store i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.277, i64 0, i64 0), i8** %struct_name, align 8, !dbg !17494
  br label %sw.epilog, !dbg !17496

sw.bb1:                                           ; preds = %for.body
  store i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.278, i64 0, i64 0), i8** %struct_name, align 8, !dbg !17497
  br label %sw.epilog, !dbg !17498

sw.bb2:                                           ; preds = %for.body
  store i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.279, i64 0, i64 0), i8** %struct_name, align 8, !dbg !17499
  br label %sw.epilog, !dbg !17500

sw.bb3:                                           ; preds = %for.body
  store i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.280, i64 0, i64 0), i8** %struct_name, align 8, !dbg !17501
  br label %sw.epilog, !dbg !17502

sw.bb4:                                           ; preds = %for.body
  store i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.281, i64 0, i64 0), i8** %struct_name, align 8, !dbg !17503
  br label %sw.epilog, !dbg !17504

sw.bb5:                                           ; preds = %for.body
  store i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.282, i64 0, i64 0), i8** %struct_name, align 8, !dbg !17505
  br label %sw.epilog, !dbg !17506

sw.bb6:                                           ; preds = %for.body
  store i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.283, i64 0, i64 0), i8** %struct_name, align 8, !dbg !17507
  br label %sw.epilog, !dbg !17508

sw.bb7:                                           ; preds = %for.body
  store i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.284, i64 0, i64 0), i8** %struct_name, align 8, !dbg !17509
  br label %sw.epilog, !dbg !17510

sw.bb8:                                           ; preds = %for.body
  store i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.285, i64 0, i64 0), i8** %struct_name, align 8, !dbg !17511
  br label %sw.epilog, !dbg !17512

sw.bb9:                                           ; preds = %for.body
  store i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.286, i64 0, i64 0), i8** %struct_name, align 8, !dbg !17513
  br label %sw.epilog, !dbg !17514

sw.bb10:                                          ; preds = %for.body
  store i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.287, i64 0, i64 0), i8** %struct_name, align 8, !dbg !17515
  br label %sw.epilog, !dbg !17516

sw.bb11:                                          ; preds = %for.body
  store i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.288, i64 0, i64 0), i8** %struct_name, align 8, !dbg !17517
  br label %sw.epilog, !dbg !17518

sw.bb12:                                          ; preds = %for.body
  store i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.289, i64 0, i64 0), i8** %struct_name, align 8, !dbg !17519
  br label %sw.epilog, !dbg !17520

sw.default:                                       ; preds = %for.body
  store i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.290, i64 0, i64 0), i8** %struct_name, align 8, !dbg !17521
  br label %sw.epilog, !dbg !17522

sw.epilog:                                        ; preds = %sw.default, %sw.bb12, %sw.bb11, %sw.bb10, %sw.bb9, %sw.bb8, %sw.bb7, %sw.bb6, %sw.bb5, %sw.bb4, %sw.bb3, %sw.bb2, %sw.bb1, %sw.bb
  %6 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !17523
  %7 = load i8*, i8** %struct_name, align 8, !dbg !17524
  %8 = load %struct.LineStyleModifier*, %struct.LineStyleModifier** %m, align 8, !dbg !17525
  %9 = bitcast %struct.LineStyleModifier* %8 to i8*, !dbg !17525
  call void @writestruct(%struct.WriteData* %6, i32 1096040772, i8* %7, i32 1, i8* %9), !dbg !17526
  br label %for.inc, !dbg !17527

for.inc:                                          ; preds = %sw.epilog
  %10 = load %struct.LineStyleModifier*, %struct.LineStyleModifier** %m, align 8, !dbg !17528
  %next = getelementptr inbounds %struct.LineStyleModifier, %struct.LineStyleModifier* %10, i32 0, i32 0, !dbg !17529
  %11 = load %struct.LineStyleModifier*, %struct.LineStyleModifier** %next, align 8, !dbg !17529
  store %struct.LineStyleModifier* %11, %struct.LineStyleModifier** %m, align 8, !dbg !17530
  br label %for.cond, !dbg !17531, !llvm.loop !17532

for.end:                                          ; preds = %for.cond
  ret void, !dbg !17534
}

declare dso_local i32 @set_listbasepointers(%struct.Main*, %struct.ListBase**) #2

; Function Attrs: noinline nounwind uwtable
define internal void @write_keymapitem(%struct.WriteData* %wd, %struct.wmKeyMapItem* %kmi) #0 !dbg !17535 {
entry:
  %wd.addr = alloca %struct.WriteData*, align 8
  %kmi.addr = alloca %struct.wmKeyMapItem*, align 8
  store %struct.WriteData* %wd, %struct.WriteData** %wd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WriteData** %wd.addr, metadata !17538, metadata !DIExpression()), !dbg !17539
  store %struct.wmKeyMapItem* %kmi, %struct.wmKeyMapItem** %kmi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmKeyMapItem** %kmi.addr, metadata !17540, metadata !DIExpression()), !dbg !17541
  %0 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !17542
  %1 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi.addr, align 8, !dbg !17543
  %2 = bitcast %struct.wmKeyMapItem* %1 to i8*, !dbg !17543
  call void @writestruct(%struct.WriteData* %0, i32 1096040772, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.301, i64 0, i64 0), i32 1, i8* %2), !dbg !17544
  %3 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi.addr, align 8, !dbg !17545
  %properties = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %3, i32 0, i32 3, !dbg !17547
  %4 = load %struct.IDProperty*, %struct.IDProperty** %properties, align 8, !dbg !17547
  %tobool = icmp ne %struct.IDProperty* %4, null, !dbg !17545
  br i1 %tobool, label %if.then, label %if.end, !dbg !17548

if.then:                                          ; preds = %entry
  %5 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi.addr, align 8, !dbg !17549
  %properties1 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %5, i32 0, i32 3, !dbg !17550
  %6 = load %struct.IDProperty*, %struct.IDProperty** %properties1, align 8, !dbg !17550
  %7 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !17551
  %8 = bitcast %struct.WriteData* %7 to i8*, !dbg !17551
  call void @IDP_WriteProperty(%struct.IDProperty* %6, i8* %8), !dbg !17552
  br label %if.end, !dbg !17552

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !17553
}

declare dso_local void @nodeRemLink(%struct.bNodeTree*, %struct.bNodeLink*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @writedata_free(%struct.WriteData* %wd) #0 !dbg !17554 {
entry:
  %wd.addr = alloca %struct.WriteData*, align 8
  store %struct.WriteData* %wd, %struct.WriteData** %wd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WriteData** %wd.addr, metadata !17555, metadata !DIExpression()), !dbg !17556
  %0 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !17557
  %sdna = getelementptr inbounds %struct.WriteData, %struct.WriteData* %0, i32 0, i32 0, !dbg !17558
  %1 = load %struct.SDNA*, %struct.SDNA** %sdna, align 8, !dbg !17558
  call void @DNA_sdna_free(%struct.SDNA* %1), !dbg !17559
  %2 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !17560
  %3 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !17561
  %buf = getelementptr inbounds %struct.WriteData, %struct.WriteData* %3, i32 0, i32 2, !dbg !17562
  %4 = load i8*, i8** %buf, align 8, !dbg !17562
  call void %2(i8* %4), !dbg !17560
  %5 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !17563
  %6 = load %struct.WriteData*, %struct.WriteData** %wd.addr, align 8, !dbg !17564
  %7 = bitcast %struct.WriteData* %6 to i8*, !dbg !17564
  call void %5(i8* %7), !dbg !17563
  ret void, !dbg !17565
}

declare dso_local void @DNA_sdna_free(%struct.SDNA*) #2

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nounwind willreturn }
attributes #7 = { nounwind readnone }
attributes #8 = { nounwind }
attributes #9 = { nounwind readonly }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!5634, !5635, !5636}
!llvm.ident = !{!5637}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "ptcache_data_struct", scope: !2, file: !3, line: 1055, type: !5633, isLocal: true, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !371, globals: !5629, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "blender/source/blender/blenloader/intern/writefile.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!4 = !{!5, !12, !17, !21, !27, !33, !39, !43, !55, !60, !85, !96, !126, !154, !162, !185, !199, !209, !235, !244, !256, !262, !315, !320, !328}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "DerivedMeshType", file: !6, line: 128, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_DerivedMesh.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11}
!9 = !DIEnumerator(name: "DM_TYPE_CDDM", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "DM_TYPE_EDITBMESH", value: 1, isUnsigned: true)
!11 = !DIEnumerator(name: "DM_TYPE_CCGDM", value: 2, isUnsigned: true)
!12 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "DMDirtyFlag", file: !6, line: 164, baseType: !7, size: 32, elements: !13)
!13 = !{!14, !15, !16}
!14 = !DIEnumerator(name: "DM_DIRTY_TESS_CDLAYERS", value: 1, isUnsigned: true)
!15 = !DIEnumerator(name: "DM_DIRTY_MCOL_UPDATE_DRAW", value: 2, isUnsigned: true)
!16 = !DIEnumerator(name: "DM_DIRTY_NORMALS", value: 4, isUnsigned: true)
!17 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "DMForeachFlag", file: !6, line: 159, baseType: !7, size: 32, elements: !18)
!18 = !{!19, !20}
!19 = !DIEnumerator(name: "DM_FOREACH_NOP", value: 0, isUnsigned: true)
!20 = !DIEnumerator(name: "DM_FOREACH_USE_NORMAL", value: 1, isUnsigned: true)
!21 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "DMDrawOption", file: !6, line: 134, baseType: !7, size: 32, elements: !22)
!22 = !{!23, !24, !25, !26}
!23 = !DIEnumerator(name: "DM_DRAW_OPTION_SKIP", value: 0, isUnsigned: true)
!24 = !DIEnumerator(name: "DM_DRAW_OPTION_NORMAL", value: 1, isUnsigned: true)
!25 = !DIEnumerator(name: "DM_DRAW_OPTION_NO_MCOL", value: 2, isUnsigned: true)
!26 = !DIEnumerator(name: "DM_DRAW_OPTION_STIPPLE", value: 3, isUnsigned: true)
!27 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "DMDrawFlag", file: !6, line: 152, baseType: !7, size: 32, elements: !28)
!28 = !{!29, !30, !31, !32}
!29 = !DIEnumerator(name: "DM_DRAW_USE_COLORS", value: 1, isUnsigned: true)
!30 = !DIEnumerator(name: "DM_DRAW_ALWAYS_SMOOTH", value: 2, isUnsigned: true)
!31 = !DIEnumerator(name: "DM_DRAW_USE_ACTIVE_UV", value: 4, isUnsigned: true)
!32 = !DIEnumerator(name: "DM_DRAW_USE_TEXPAINT_UV", value: 8, isUnsigned: true)
!33 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "BlenFileType", file: !34, line: 54, baseType: !7, size: 32, elements: !35)
!34 = !DIFile(filename: "blender/source/blender/blenloader/BLO_readfile.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!35 = !{!36, !37, !38}
!36 = !DIEnumerator(name: "BLENFILETYPE_BLEND", value: 1, isUnsigned: true)
!37 = !DIEnumerator(name: "BLENFILETYPE_PUB", value: 2, isUnsigned: true)
!38 = !DIEnumerator(name: "BLENFILETYPE_RUNTIME", value: 3, isUnsigned: true)
!39 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !3, line: 191, baseType: !7, size: 32, elements: !40)
!40 = !{!41, !42}
!41 = !DIEnumerator(name: "WW_WRAP_NONE", value: 1, isUnsigned: true)
!42 = !DIEnumerator(name: "WW_WRAP_ZLIB", value: 2, isUnsigned: true)
!43 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ReportType", file: !44, line: 67, baseType: !7, size: 32, elements: !45)
!44 = !DIFile(filename: "blender/source/blender/makesdna/DNA_windowmanager_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!45 = !{!46, !47, !48, !49, !50, !51, !52, !53, !54}
!46 = !DIEnumerator(name: "RPT_DEBUG", value: 1, isUnsigned: true)
!47 = !DIEnumerator(name: "RPT_INFO", value: 2, isUnsigned: true)
!48 = !DIEnumerator(name: "RPT_OPERATOR", value: 4, isUnsigned: true)
!49 = !DIEnumerator(name: "RPT_PROPERTY", value: 8, isUnsigned: true)
!50 = !DIEnumerator(name: "RPT_WARNING", value: 16, isUnsigned: true)
!51 = !DIEnumerator(name: "RPT_ERROR", value: 32, isUnsigned: true)
!52 = !DIEnumerator(name: "RPT_ERROR_INVALID_INPUT", value: 64, isUnsigned: true)
!53 = !DIEnumerator(name: "RPT_ERROR_INVALID_CONTEXT", value: 128, isUnsigned: true)
!54 = !DIEnumerator(name: "RPT_ERROR_OUT_OF_MEMORY", value: 256, isUnsigned: true)
!55 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eNodeSocketInOut", file: !56, line: 148, baseType: !7, size: 32, elements: !57)
!56 = !DIFile(filename: "blender/source/blender/makesdna/DNA_node_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!57 = !{!58, !59}
!58 = !DIEnumerator(name: "SOCK_IN", value: 1, isUnsigned: true)
!59 = !DIEnumerator(name: "SOCK_OUT", value: 2, isUnsigned: true)
!60 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eSpace_Type", file: !61, line: 1163, baseType: !7, size: 32, elements: !62)
!61 = !DIFile(filename: "blender/source/blender/makesdna/DNA_space_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!62 = !{!63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84}
!63 = !DIEnumerator(name: "SPACE_EMPTY", value: 0, isUnsigned: true)
!64 = !DIEnumerator(name: "SPACE_VIEW3D", value: 1, isUnsigned: true)
!65 = !DIEnumerator(name: "SPACE_IPO", value: 2, isUnsigned: true)
!66 = !DIEnumerator(name: "SPACE_OUTLINER", value: 3, isUnsigned: true)
!67 = !DIEnumerator(name: "SPACE_BUTS", value: 4, isUnsigned: true)
!68 = !DIEnumerator(name: "SPACE_FILE", value: 5, isUnsigned: true)
!69 = !DIEnumerator(name: "SPACE_IMAGE", value: 6, isUnsigned: true)
!70 = !DIEnumerator(name: "SPACE_INFO", value: 7, isUnsigned: true)
!71 = !DIEnumerator(name: "SPACE_SEQ", value: 8, isUnsigned: true)
!72 = !DIEnumerator(name: "SPACE_TEXT", value: 9, isUnsigned: true)
!73 = !DIEnumerator(name: "SPACE_IMASEL", value: 10, isUnsigned: true)
!74 = !DIEnumerator(name: "SPACE_SOUND", value: 11, isUnsigned: true)
!75 = !DIEnumerator(name: "SPACE_ACTION", value: 12, isUnsigned: true)
!76 = !DIEnumerator(name: "SPACE_NLA", value: 13, isUnsigned: true)
!77 = !DIEnumerator(name: "SPACE_SCRIPT", value: 14, isUnsigned: true)
!78 = !DIEnumerator(name: "SPACE_TIME", value: 15, isUnsigned: true)
!79 = !DIEnumerator(name: "SPACE_NODE", value: 16, isUnsigned: true)
!80 = !DIEnumerator(name: "SPACE_LOGIC", value: 17, isUnsigned: true)
!81 = !DIEnumerator(name: "SPACE_CONSOLE", value: 18, isUnsigned: true)
!82 = !DIEnumerator(name: "SPACE_USERPREF", value: 19, isUnsigned: true)
!83 = !DIEnumerator(name: "SPACE_CLIP", value: 20, isUnsigned: true)
!84 = !DIEnumerator(name: "SPACEICONMAX", value: 20, isUnsigned: true)
!85 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !86, line: 361, baseType: !7, size: 32, elements: !87)
!86 = !DIFile(filename: "blender/source/blender/makesdna/DNA_screen_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!87 = !{!88, !89, !90, !91, !92, !93, !94, !95}
!88 = !DIEnumerator(name: "RGN_TYPE_WINDOW", value: 0, isUnsigned: true)
!89 = !DIEnumerator(name: "RGN_TYPE_HEADER", value: 1, isUnsigned: true)
!90 = !DIEnumerator(name: "RGN_TYPE_CHANNELS", value: 2, isUnsigned: true)
!91 = !DIEnumerator(name: "RGN_TYPE_TEMPORARY", value: 3, isUnsigned: true)
!92 = !DIEnumerator(name: "RGN_TYPE_UI", value: 4, isUnsigned: true)
!93 = !DIEnumerator(name: "RGN_TYPE_TOOLS", value: 5, isUnsigned: true)
!94 = !DIEnumerator(name: "RGN_TYPE_TOOL_PROPS", value: 6, isUnsigned: true)
!95 = !DIEnumerator(name: "RGN_TYPE_PREVIEW", value: 7, isUnsigned: true)
!96 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !97, line: 335, baseType: !98, size: 32, elements: !99)
!97 = !DIFile(filename: "blender/source/blender/makesdna/DNA_sequence_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!98 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!99 = !{!100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125}
!100 = !DIEnumerator(name: "SEQ_LEFTSEL", value: 2)
!101 = !DIEnumerator(name: "SEQ_RIGHTSEL", value: 4)
!102 = !DIEnumerator(name: "SEQ_OVERLAP", value: 8)
!103 = !DIEnumerator(name: "SEQ_FILTERY", value: 16)
!104 = !DIEnumerator(name: "SEQ_MUTE", value: 32)
!105 = !DIEnumerator(name: "SEQ_MAKE_PREMUL", value: 64)
!106 = !DIEnumerator(name: "SEQ_REVERSE_FRAMES", value: 128)
!107 = !DIEnumerator(name: "SEQ_IPO_FRAME_LOCKED", value: 256)
!108 = !DIEnumerator(name: "SEQ_EFFECT_NOT_LOADED", value: 512)
!109 = !DIEnumerator(name: "SEQ_FLAG_DELETE", value: 1024)
!110 = !DIEnumerator(name: "SEQ_FLIPX", value: 2048)
!111 = !DIEnumerator(name: "SEQ_FLIPY", value: 4096)
!112 = !DIEnumerator(name: "SEQ_MAKE_FLOAT", value: 8192)
!113 = !DIEnumerator(name: "SEQ_LOCK", value: 16384)
!114 = !DIEnumerator(name: "SEQ_USE_PROXY", value: 32768)
!115 = !DIEnumerator(name: "SEQ_USE_TRANSFORM", value: 65536)
!116 = !DIEnumerator(name: "SEQ_USE_CROP", value: 131072)
!117 = !DIEnumerator(name: "SEQ_USE_PROXY_CUSTOM_DIR", value: 524288)
!118 = !DIEnumerator(name: "SEQ_USE_PROXY_CUSTOM_FILE", value: 2097152)
!119 = !DIEnumerator(name: "SEQ_USE_EFFECT_DEFAULT_FADE", value: 4194304)
!120 = !DIEnumerator(name: "SEQ_USE_LINEAR_MODIFIERS", value: 8388608)
!121 = !DIEnumerator(name: "SEQ_AUDIO_VOLUME_ANIMATED", value: 16777216)
!122 = !DIEnumerator(name: "SEQ_AUDIO_PITCH_ANIMATED", value: 33554432)
!123 = !DIEnumerator(name: "SEQ_AUDIO_PAN_ANIMATED", value: 67108864)
!124 = !DIEnumerator(name: "SEQ_AUDIO_DRAW_WAVEFORM", value: 134217728)
!125 = !DIEnumerator(name: "SEQ_INVALID_EFFECT", value: -2147483648)
!126 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !97, line: 404, baseType: !7, size: 32, elements: !127)
!127 = !{!128, !129, !130, !131, !132, !133, !134, !135, !136, !137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153}
!128 = !DIEnumerator(name: "SEQ_TYPE_IMAGE", value: 0, isUnsigned: true)
!129 = !DIEnumerator(name: "SEQ_TYPE_META", value: 1, isUnsigned: true)
!130 = !DIEnumerator(name: "SEQ_TYPE_SCENE", value: 2, isUnsigned: true)
!131 = !DIEnumerator(name: "SEQ_TYPE_MOVIE", value: 3, isUnsigned: true)
!132 = !DIEnumerator(name: "SEQ_TYPE_SOUND_RAM", value: 4, isUnsigned: true)
!133 = !DIEnumerator(name: "SEQ_TYPE_SOUND_HD", value: 5, isUnsigned: true)
!134 = !DIEnumerator(name: "SEQ_TYPE_MOVIECLIP", value: 6, isUnsigned: true)
!135 = !DIEnumerator(name: "SEQ_TYPE_MASK", value: 7, isUnsigned: true)
!136 = !DIEnumerator(name: "SEQ_TYPE_EFFECT", value: 8, isUnsigned: true)
!137 = !DIEnumerator(name: "SEQ_TYPE_CROSS", value: 8, isUnsigned: true)
!138 = !DIEnumerator(name: "SEQ_TYPE_ADD", value: 9, isUnsigned: true)
!139 = !DIEnumerator(name: "SEQ_TYPE_SUB", value: 10, isUnsigned: true)
!140 = !DIEnumerator(name: "SEQ_TYPE_ALPHAOVER", value: 11, isUnsigned: true)
!141 = !DIEnumerator(name: "SEQ_TYPE_ALPHAUNDER", value: 12, isUnsigned: true)
!142 = !DIEnumerator(name: "SEQ_TYPE_GAMCROSS", value: 13, isUnsigned: true)
!143 = !DIEnumerator(name: "SEQ_TYPE_MUL", value: 14, isUnsigned: true)
!144 = !DIEnumerator(name: "SEQ_TYPE_OVERDROP", value: 15, isUnsigned: true)
!145 = !DIEnumerator(name: "SEQ_TYPE_WIPE", value: 25, isUnsigned: true)
!146 = !DIEnumerator(name: "SEQ_TYPE_GLOW", value: 26, isUnsigned: true)
!147 = !DIEnumerator(name: "SEQ_TYPE_TRANSFORM", value: 27, isUnsigned: true)
!148 = !DIEnumerator(name: "SEQ_TYPE_COLOR", value: 28, isUnsigned: true)
!149 = !DIEnumerator(name: "SEQ_TYPE_SPEED", value: 29, isUnsigned: true)
!150 = !DIEnumerator(name: "SEQ_TYPE_MULTICAM", value: 30, isUnsigned: true)
!151 = !DIEnumerator(name: "SEQ_TYPE_ADJUSTMENT", value: 31, isUnsigned: true)
!152 = !DIEnumerator(name: "SEQ_TYPE_GAUSSIAN_BLUR", value: 40, isUnsigned: true)
!153 = !DIEnumerator(name: "SEQ_TYPE_EFFECT_MAX", value: 40, isUnsigned: true)
!154 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !97, line: 450, baseType: !7, size: 32, elements: !155)
!155 = !{!156, !157, !158, !159, !160, !161}
!156 = !DIEnumerator(name: "seqModifierType_ColorBalance", value: 1, isUnsigned: true)
!157 = !DIEnumerator(name: "seqModifierType_Curves", value: 2, isUnsigned: true)
!158 = !DIEnumerator(name: "seqModifierType_HueCorrect", value: 3, isUnsigned: true)
!159 = !DIEnumerator(name: "seqModifierType_BrightContrast", value: 4, isUnsigned: true)
!160 = !DIEnumerator(name: "seqModifierType_Mask", value: 5, isUnsigned: true)
!161 = !DIEnumerator(name: "NUM_SEQUENCE_MODIFIER_TYPES", value: 6, isUnsigned: true)
!162 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eUserPref_Flag", file: !163, line: 569, baseType: !7, size: 32, elements: !164)
!163 = !DIFile(filename: "blender/source/blender/makesdna/DNA_userdef_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!164 = !{!165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184}
!165 = !DIEnumerator(name: "USER_AUTOSAVE", value: 1, isUnsigned: true)
!166 = !DIEnumerator(name: "USER_SCENEGLOBAL", value: 16, isUnsigned: true)
!167 = !DIEnumerator(name: "USER_TRACKBALL", value: 32, isUnsigned: true)
!168 = !DIEnumerator(name: "USER_MAT_ON_OB", value: 256, isUnsigned: true)
!169 = !DIEnumerator(name: "USER_TOOLTIPS", value: 2048, isUnsigned: true)
!170 = !DIEnumerator(name: "USER_TWOBUTTONMOUSE", value: 4096, isUnsigned: true)
!171 = !DIEnumerator(name: "USER_NONUMPAD", value: 8192, isUnsigned: true)
!172 = !DIEnumerator(name: "USER_LMOUSESELECT", value: 16384, isUnsigned: true)
!173 = !DIEnumerator(name: "USER_FILECOMPRESS", value: 32768, isUnsigned: true)
!174 = !DIEnumerator(name: "USER_SAVE_PREVIEWS", value: 65536, isUnsigned: true)
!175 = !DIEnumerator(name: "USER_CUSTOM_RANGE", value: 131072, isUnsigned: true)
!176 = !DIEnumerator(name: "USER_ADD_EDITMODE", value: 262144, isUnsigned: true)
!177 = !DIEnumerator(name: "USER_ADD_VIEWALIGNED", value: 524288, isUnsigned: true)
!178 = !DIEnumerator(name: "USER_RELPATHS", value: 1048576, isUnsigned: true)
!179 = !DIEnumerator(name: "USER_RELEASECONFIRM", value: 2097152, isUnsigned: true)
!180 = !DIEnumerator(name: "USER_SCRIPT_AUTOEXEC_DISABLE", value: 4194304, isUnsigned: true)
!181 = !DIEnumerator(name: "USER_FILENOUI", value: 8388608, isUnsigned: true)
!182 = !DIEnumerator(name: "USER_NONEGFRAMES", value: 16777216, isUnsigned: true)
!183 = !DIEnumerator(name: "USER_TXT_TABSTOSPACES_DISABLE", value: 33554432, isUnsigned: true)
!184 = !DIEnumerator(name: "USER_TOOLTIPS_PYTHON", value: 67108864, isUnsigned: true)
!185 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !186, line: 339, baseType: !7, size: 32, elements: !187)
!186 = !DIFile(filename: "blender/source/blender/makesdna/DNA_object_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!187 = !{!188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198}
!188 = !DIEnumerator(name: "OB_EMPTY", value: 0, isUnsigned: true)
!189 = !DIEnumerator(name: "OB_MESH", value: 1, isUnsigned: true)
!190 = !DIEnumerator(name: "OB_CURVE", value: 2, isUnsigned: true)
!191 = !DIEnumerator(name: "OB_SURF", value: 3, isUnsigned: true)
!192 = !DIEnumerator(name: "OB_FONT", value: 4, isUnsigned: true)
!193 = !DIEnumerator(name: "OB_MBALL", value: 5, isUnsigned: true)
!194 = !DIEnumerator(name: "OB_LAMP", value: 10, isUnsigned: true)
!195 = !DIEnumerator(name: "OB_CAMERA", value: 11, isUnsigned: true)
!196 = !DIEnumerator(name: "OB_SPEAKER", value: 12, isUnsigned: true)
!197 = !DIEnumerator(name: "OB_LATTICE", value: 22, isUnsigned: true)
!198 = !DIEnumerator(name: "OB_ARMATURE", value: 25, isUnsigned: true)
!199 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !186, line: 460, baseType: !7, size: 32, elements: !200)
!200 = !{!201, !202, !203, !204, !205, !206, !207, !208}
!201 = !DIEnumerator(name: "OB_ARROWS", value: 1, isUnsigned: true)
!202 = !DIEnumerator(name: "OB_PLAINAXES", value: 2, isUnsigned: true)
!203 = !DIEnumerator(name: "OB_CIRCLE", value: 3, isUnsigned: true)
!204 = !DIEnumerator(name: "OB_SINGLE_ARROW", value: 4, isUnsigned: true)
!205 = !DIEnumerator(name: "OB_CUBE", value: 5, isUnsigned: true)
!206 = !DIEnumerator(name: "OB_EMPTY_SPHERE", value: 6, isUnsigned: true)
!207 = !DIEnumerator(name: "OB_EMPTY_CONE", value: 7, isUnsigned: true)
!208 = !DIEnumerator(name: "OB_EMPTY_IMAGE", value: 8, isUnsigned: true)
!209 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eBone_Flag", file: !210, line: 187, baseType: !7, size: 32, elements: !211)
!210 = !DIFile(filename: "blender/source/blender/makesdna/DNA_armature_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!211 = !{!212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234}
!212 = !DIEnumerator(name: "BONE_SELECTED", value: 1, isUnsigned: true)
!213 = !DIEnumerator(name: "BONE_ROOTSEL", value: 2, isUnsigned: true)
!214 = !DIEnumerator(name: "BONE_TIPSEL", value: 4, isUnsigned: true)
!215 = !DIEnumerator(name: "BONE_TRANSFORM", value: 8, isUnsigned: true)
!216 = !DIEnumerator(name: "BONE_CONNECTED", value: 16, isUnsigned: true)
!217 = !DIEnumerator(name: "BONE_HIDDEN_P", value: 64, isUnsigned: true)
!218 = !DIEnumerator(name: "BONE_DONE", value: 128, isUnsigned: true)
!219 = !DIEnumerator(name: "BONE_DRAW_ACTIVE", value: 256, isUnsigned: true)
!220 = !DIEnumerator(name: "BONE_HINGE", value: 512, isUnsigned: true)
!221 = !DIEnumerator(name: "BONE_HIDDEN_A", value: 1024, isUnsigned: true)
!222 = !DIEnumerator(name: "BONE_MULT_VG_ENV", value: 2048, isUnsigned: true)
!223 = !DIEnumerator(name: "BONE_NO_DEFORM", value: 4096, isUnsigned: true)
!224 = !DIEnumerator(name: "BONE_UNKEYED", value: 8192, isUnsigned: true)
!225 = !DIEnumerator(name: "BONE_HINGE_CHILD_TRANSFORM", value: 16384, isUnsigned: true)
!226 = !DIEnumerator(name: "BONE_NO_SCALE", value: 32768, isUnsigned: true)
!227 = !DIEnumerator(name: "BONE_HIDDEN_PG", value: 65536, isUnsigned: true)
!228 = !DIEnumerator(name: "BONE_DRAWWIRE", value: 131072, isUnsigned: true)
!229 = !DIEnumerator(name: "BONE_NO_CYCLICOFFSET", value: 262144, isUnsigned: true)
!230 = !DIEnumerator(name: "BONE_EDITMODE_LOCKED", value: 524288, isUnsigned: true)
!231 = !DIEnumerator(name: "BONE_TRANSFORM_CHILD", value: 1048576, isUnsigned: true)
!232 = !DIEnumerator(name: "BONE_UNSELECTABLE", value: 2097152, isUnsigned: true)
!233 = !DIEnumerator(name: "BONE_NO_LOCAL_LOCATION", value: 4194304, isUnsigned: true)
!234 = !DIEnumerator(name: "BONE_RELATIVE_PARENTING", value: 8388608, isUnsigned: true)
!235 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !236, line: 47, baseType: !7, size: 32, elements: !237)
!236 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_modifier.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!237 = !{!238, !239, !240, !241, !242, !243}
!238 = !DIEnumerator(name: "eModifierTypeType_None", value: 0, isUnsigned: true)
!239 = !DIEnumerator(name: "eModifierTypeType_OnlyDeform", value: 1, isUnsigned: true)
!240 = !DIEnumerator(name: "eModifierTypeType_Constructive", value: 2, isUnsigned: true)
!241 = !DIEnumerator(name: "eModifierTypeType_Nonconstructive", value: 3, isUnsigned: true)
!242 = !DIEnumerator(name: "eModifierTypeType_DeformOrConstruct", value: 4, isUnsigned: true)
!243 = !DIEnumerator(name: "eModifierTypeType_NonGeometrical", value: 5, isUnsigned: true)
!244 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !236, line: 73, baseType: !7, size: 32, elements: !245)
!245 = !{!246, !247, !248, !249, !250, !251, !252, !253, !254, !255}
!246 = !DIEnumerator(name: "eModifierTypeFlag_AcceptsMesh", value: 1, isUnsigned: true)
!247 = !DIEnumerator(name: "eModifierTypeFlag_AcceptsCVs", value: 2, isUnsigned: true)
!248 = !DIEnumerator(name: "eModifierTypeFlag_SupportsMapping", value: 4, isUnsigned: true)
!249 = !DIEnumerator(name: "eModifierTypeFlag_SupportsEditmode", value: 8, isUnsigned: true)
!250 = !DIEnumerator(name: "eModifierTypeFlag_EnableInEditmode", value: 16, isUnsigned: true)
!251 = !DIEnumerator(name: "eModifierTypeFlag_RequiresOriginalData", value: 32, isUnsigned: true)
!252 = !DIEnumerator(name: "eModifierTypeFlag_UsesPointCache", value: 64, isUnsigned: true)
!253 = !DIEnumerator(name: "eModifierTypeFlag_Single", value: 128, isUnsigned: true)
!254 = !DIEnumerator(name: "eModifierTypeFlag_NoUserAdd", value: 256, isUnsigned: true)
!255 = !DIEnumerator(name: "eModifierTypeFlag_UsesPreview", value: 512, isUnsigned: true)
!256 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ModifierApplyFlag", file: !236, line: 110, baseType: !7, size: 32, elements: !257)
!257 = !{!258, !259, !260, !261}
!258 = !DIEnumerator(name: "MOD_APPLY_RENDER", value: 1, isUnsigned: true)
!259 = !DIEnumerator(name: "MOD_APPLY_USECACHE", value: 2, isUnsigned: true)
!260 = !DIEnumerator(name: "MOD_APPLY_ORCO", value: 4, isUnsigned: true)
!261 = !DIEnumerator(name: "MOD_APPLY_IGNORE_SIMPLIFY", value: 8, isUnsigned: true)
!262 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ModifierType", file: !263, line: 35, baseType: !7, size: 32, elements: !264)
!263 = !DIFile(filename: "blender/source/blender/makesdna/DNA_modifier_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!264 = !{!265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314}
!265 = !DIEnumerator(name: "eModifierType_None", value: 0, isUnsigned: true)
!266 = !DIEnumerator(name: "eModifierType_Subsurf", value: 1, isUnsigned: true)
!267 = !DIEnumerator(name: "eModifierType_Lattice", value: 2, isUnsigned: true)
!268 = !DIEnumerator(name: "eModifierType_Curve", value: 3, isUnsigned: true)
!269 = !DIEnumerator(name: "eModifierType_Build", value: 4, isUnsigned: true)
!270 = !DIEnumerator(name: "eModifierType_Mirror", value: 5, isUnsigned: true)
!271 = !DIEnumerator(name: "eModifierType_Decimate", value: 6, isUnsigned: true)
!272 = !DIEnumerator(name: "eModifierType_Wave", value: 7, isUnsigned: true)
!273 = !DIEnumerator(name: "eModifierType_Armature", value: 8, isUnsigned: true)
!274 = !DIEnumerator(name: "eModifierType_Hook", value: 9, isUnsigned: true)
!275 = !DIEnumerator(name: "eModifierType_Softbody", value: 10, isUnsigned: true)
!276 = !DIEnumerator(name: "eModifierType_Boolean", value: 11, isUnsigned: true)
!277 = !DIEnumerator(name: "eModifierType_Array", value: 12, isUnsigned: true)
!278 = !DIEnumerator(name: "eModifierType_EdgeSplit", value: 13, isUnsigned: true)
!279 = !DIEnumerator(name: "eModifierType_Displace", value: 14, isUnsigned: true)
!280 = !DIEnumerator(name: "eModifierType_UVProject", value: 15, isUnsigned: true)
!281 = !DIEnumerator(name: "eModifierType_Smooth", value: 16, isUnsigned: true)
!282 = !DIEnumerator(name: "eModifierType_Cast", value: 17, isUnsigned: true)
!283 = !DIEnumerator(name: "eModifierType_MeshDeform", value: 18, isUnsigned: true)
!284 = !DIEnumerator(name: "eModifierType_ParticleSystem", value: 19, isUnsigned: true)
!285 = !DIEnumerator(name: "eModifierType_ParticleInstance", value: 20, isUnsigned: true)
!286 = !DIEnumerator(name: "eModifierType_Explode", value: 21, isUnsigned: true)
!287 = !DIEnumerator(name: "eModifierType_Cloth", value: 22, isUnsigned: true)
!288 = !DIEnumerator(name: "eModifierType_Collision", value: 23, isUnsigned: true)
!289 = !DIEnumerator(name: "eModifierType_Bevel", value: 24, isUnsigned: true)
!290 = !DIEnumerator(name: "eModifierType_Shrinkwrap", value: 25, isUnsigned: true)
!291 = !DIEnumerator(name: "eModifierType_Fluidsim", value: 26, isUnsigned: true)
!292 = !DIEnumerator(name: "eModifierType_Mask", value: 27, isUnsigned: true)
!293 = !DIEnumerator(name: "eModifierType_SimpleDeform", value: 28, isUnsigned: true)
!294 = !DIEnumerator(name: "eModifierType_Multires", value: 29, isUnsigned: true)
!295 = !DIEnumerator(name: "eModifierType_Surface", value: 30, isUnsigned: true)
!296 = !DIEnumerator(name: "eModifierType_Smoke", value: 31, isUnsigned: true)
!297 = !DIEnumerator(name: "eModifierType_ShapeKey", value: 32, isUnsigned: true)
!298 = !DIEnumerator(name: "eModifierType_Solidify", value: 33, isUnsigned: true)
!299 = !DIEnumerator(name: "eModifierType_Screw", value: 34, isUnsigned: true)
!300 = !DIEnumerator(name: "eModifierType_Warp", value: 35, isUnsigned: true)
!301 = !DIEnumerator(name: "eModifierType_WeightVGEdit", value: 36, isUnsigned: true)
!302 = !DIEnumerator(name: "eModifierType_WeightVGMix", value: 37, isUnsigned: true)
!303 = !DIEnumerator(name: "eModifierType_WeightVGProximity", value: 38, isUnsigned: true)
!304 = !DIEnumerator(name: "eModifierType_Ocean", value: 39, isUnsigned: true)
!305 = !DIEnumerator(name: "eModifierType_DynamicPaint", value: 40, isUnsigned: true)
!306 = !DIEnumerator(name: "eModifierType_Remesh", value: 41, isUnsigned: true)
!307 = !DIEnumerator(name: "eModifierType_Skin", value: 42, isUnsigned: true)
!308 = !DIEnumerator(name: "eModifierType_LaplacianSmooth", value: 43, isUnsigned: true)
!309 = !DIEnumerator(name: "eModifierType_Triangulate", value: 44, isUnsigned: true)
!310 = !DIEnumerator(name: "eModifierType_UVWarp", value: 45, isUnsigned: true)
!311 = !DIEnumerator(name: "eModifierType_MeshCache", value: 46, isUnsigned: true)
!312 = !DIEnumerator(name: "eModifierType_LaplacianDeform", value: 47, isUnsigned: true)
!313 = !DIEnumerator(name: "eModifierType_Wireframe", value: 48, isUnsigned: true)
!314 = !DIEnumerator(name: "NUM_MODIFIER_TYPES", value: 49, isUnsigned: true)
!315 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !263, line: 359, baseType: !7, size: 32, elements: !316)
!316 = !{!317, !318, !319}
!317 = !DIEnumerator(name: "MOD_SMOKE_TYPE_DOMAIN", value: 1, isUnsigned: true)
!318 = !DIEnumerator(name: "MOD_SMOKE_TYPE_FLOW", value: 2, isUnsigned: true)
!319 = !DIEnumerator(name: "MOD_SMOKE_TYPE_COLL", value: 4, isUnsigned: true)
!320 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !321, line: 172, baseType: !7, size: 32, elements: !322)
!321 = !DIFile(filename: "blender/source/blender/makesdna/DNA_customdata_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!322 = !{!323, !324, !325, !326, !327}
!323 = !DIEnumerator(name: "CD_FLAG_NOCOPY", value: 1, isUnsigned: true)
!324 = !DIEnumerator(name: "CD_FLAG_NOFREE", value: 2, isUnsigned: true)
!325 = !DIEnumerator(name: "CD_FLAG_TEMPORARY", value: 5, isUnsigned: true)
!326 = !DIEnumerator(name: "CD_FLAG_EXTERNAL", value: 8, isUnsigned: true)
!327 = !DIEnumerator(name: "CD_FLAG_IN_MEMORY", value: 16, isUnsigned: true)
!328 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !321, line: 76, baseType: !7, size: 32, elements: !329)
!329 = !{!330, !331, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341, !342, !343, !344, !345, !346, !347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370}
!330 = !DIEnumerator(name: "CD_MVERT", value: 0, isUnsigned: true)
!331 = !DIEnumerator(name: "CD_MSTICKY", value: 1, isUnsigned: true)
!332 = !DIEnumerator(name: "CD_MDEFORMVERT", value: 2, isUnsigned: true)
!333 = !DIEnumerator(name: "CD_MEDGE", value: 3, isUnsigned: true)
!334 = !DIEnumerator(name: "CD_MFACE", value: 4, isUnsigned: true)
!335 = !DIEnumerator(name: "CD_MTFACE", value: 5, isUnsigned: true)
!336 = !DIEnumerator(name: "CD_MCOL", value: 6, isUnsigned: true)
!337 = !DIEnumerator(name: "CD_ORIGINDEX", value: 7, isUnsigned: true)
!338 = !DIEnumerator(name: "CD_NORMAL", value: 8, isUnsigned: true)
!339 = !DIEnumerator(name: "CD_PROP_FLT", value: 10, isUnsigned: true)
!340 = !DIEnumerator(name: "CD_PROP_INT", value: 11, isUnsigned: true)
!341 = !DIEnumerator(name: "CD_PROP_STR", value: 12, isUnsigned: true)
!342 = !DIEnumerator(name: "CD_ORIGSPACE", value: 13, isUnsigned: true)
!343 = !DIEnumerator(name: "CD_ORCO", value: 14, isUnsigned: true)
!344 = !DIEnumerator(name: "CD_MTEXPOLY", value: 15, isUnsigned: true)
!345 = !DIEnumerator(name: "CD_MLOOPUV", value: 16, isUnsigned: true)
!346 = !DIEnumerator(name: "CD_MLOOPCOL", value: 17, isUnsigned: true)
!347 = !DIEnumerator(name: "CD_TANGENT", value: 18, isUnsigned: true)
!348 = !DIEnumerator(name: "CD_MDISPS", value: 19, isUnsigned: true)
!349 = !DIEnumerator(name: "CD_PREVIEW_MCOL", value: 20, isUnsigned: true)
!350 = !DIEnumerator(name: "CD_ID_MCOL", value: 21, isUnsigned: true)
!351 = !DIEnumerator(name: "CD_TEXTURE_MCOL", value: 22, isUnsigned: true)
!352 = !DIEnumerator(name: "CD_CLOTH_ORCO", value: 23, isUnsigned: true)
!353 = !DIEnumerator(name: "CD_RECAST", value: 24, isUnsigned: true)
!354 = !DIEnumerator(name: "CD_MPOLY", value: 25, isUnsigned: true)
!355 = !DIEnumerator(name: "CD_MLOOP", value: 26, isUnsigned: true)
!356 = !DIEnumerator(name: "CD_SHAPE_KEYINDEX", value: 27, isUnsigned: true)
!357 = !DIEnumerator(name: "CD_SHAPEKEY", value: 28, isUnsigned: true)
!358 = !DIEnumerator(name: "CD_BWEIGHT", value: 29, isUnsigned: true)
!359 = !DIEnumerator(name: "CD_CREASE", value: 30, isUnsigned: true)
!360 = !DIEnumerator(name: "CD_ORIGSPACE_MLOOP", value: 31, isUnsigned: true)
!361 = !DIEnumerator(name: "CD_PREVIEW_MLOOPCOL", value: 32, isUnsigned: true)
!362 = !DIEnumerator(name: "CD_BM_ELEM_PYPTR", value: 33, isUnsigned: true)
!363 = !DIEnumerator(name: "CD_PAINT_MASK", value: 34, isUnsigned: true)
!364 = !DIEnumerator(name: "CD_GRID_PAINT_MASK", value: 35, isUnsigned: true)
!365 = !DIEnumerator(name: "CD_MVERT_SKIN", value: 36, isUnsigned: true)
!366 = !DIEnumerator(name: "CD_FREESTYLE_EDGE", value: 37, isUnsigned: true)
!367 = !DIEnumerator(name: "CD_FREESTYLE_FACE", value: 38, isUnsigned: true)
!368 = !DIEnumerator(name: "CD_MLOOPTANGENT", value: 39, isUnsigned: true)
!369 = !DIEnumerator(name: "CD_TESSLOOPNORMAL", value: 40, isUnsigned: true)
!370 = !DIEnumerator(name: "CD_NUMTYPES", value: 41, isUnsigned: true)
!371 = !{!98, !372, !373, !376, !4860, !4889, !4957, !4985, !5064, !5091, !5106, !5108, !5126, !5129, !5138, !5156, !5162, !5181, !5187, !5196, !501, !5198, !5210, !5220, !5234, !5236, !5357, !5364, !5412, !5454, !5473, !5493, !5505, !5522, !5530, !5539, !5547, !5555, !5565, !5576, !5584, !5594, !5606, !5619}
!372 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!373 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !374, size: 64)
!374 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !375)
!375 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!376 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !377, size: 64)
!377 = !DIDerivedType(tag: DW_TAG_typedef, name: "View3D", file: !378, line: 221, baseType: !379)
!378 = !DIFile(filename: "blender/source/blender/makesdna/DNA_view3d_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!379 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "View3D", file: !378, line: 151, size: 3008, elements: !380)
!380 = !{!381, !402, !403, !404, !405, !406, !407, !411, !412, !413, !414, !418, !419, !420, !421, !422, !4799, !4800, !4801, !4802, !4825, !4827, !4828, !4829, !4830, !4831, !4832, !4833, !4834, !4835, !4836, !4837, !4838, !4839, !4840, !4841, !4842, !4843, !4844, !4845, !4846, !4847, !4848, !4849, !4850, !4851, !4852, !4853, !4854, !4855, !4856, !4857, !4858, !4859}
!381 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !379, file: !378, line: 152, baseType: !382, size: 64)
!382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !383, size: 64)
!383 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SpaceLink", file: !61, line: 85, size: 448, elements: !384)
!384 = !{!385, !386, !387, !394, !395, !397}
!385 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !383, file: !61, line: 86, baseType: !382, size: 64)
!386 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !383, file: !61, line: 86, baseType: !382, size: 64, offset: 64)
!387 = !DIDerivedType(tag: DW_TAG_member, name: "regionbase", scope: !383, file: !61, line: 87, baseType: !388, size: 128, offset: 128)
!388 = !DIDerivedType(tag: DW_TAG_typedef, name: "ListBase", file: !389, line: 71, baseType: !390)
!389 = !DIFile(filename: "blender/source/blender/makesdna/DNA_listBase.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!390 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ListBase", file: !389, line: 69, size: 128, elements: !391)
!391 = !{!392, !393}
!392 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !390, file: !389, line: 70, baseType: !372, size: 64)
!393 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !390, file: !389, line: 70, baseType: !372, size: 64, offset: 64)
!394 = !DIDerivedType(tag: DW_TAG_member, name: "spacetype", scope: !383, file: !61, line: 88, baseType: !98, size: 32, offset: 256)
!395 = !DIDerivedType(tag: DW_TAG_member, name: "blockscale", scope: !383, file: !61, line: 89, baseType: !396, size: 32, offset: 288)
!396 = !DIBasicType(name: "float", size: 32, encoding: DW_ATE_float)
!397 = !DIDerivedType(tag: DW_TAG_member, name: "blockhandler", scope: !383, file: !61, line: 90, baseType: !398, size: 128, offset: 320)
!398 = !DICompositeType(tag: DW_TAG_array_type, baseType: !399, size: 128, elements: !400)
!399 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!400 = !{!401}
!401 = !DISubrange(count: 8)
!402 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !379, file: !378, line: 152, baseType: !382, size: 64, offset: 64)
!403 = !DIDerivedType(tag: DW_TAG_member, name: "regionbase", scope: !379, file: !378, line: 153, baseType: !388, size: 128, offset: 128)
!404 = !DIDerivedType(tag: DW_TAG_member, name: "spacetype", scope: !379, file: !378, line: 154, baseType: !98, size: 32, offset: 256)
!405 = !DIDerivedType(tag: DW_TAG_member, name: "blockscale", scope: !379, file: !378, line: 155, baseType: !396, size: 32, offset: 288)
!406 = !DIDerivedType(tag: DW_TAG_member, name: "blockhandler", scope: !379, file: !378, line: 156, baseType: !398, size: 128, offset: 320)
!407 = !DIDerivedType(tag: DW_TAG_member, name: "viewquat", scope: !379, file: !378, line: 158, baseType: !408, size: 128, offset: 448)
!408 = !DICompositeType(tag: DW_TAG_array_type, baseType: !396, size: 128, elements: !409)
!409 = !{!410}
!410 = !DISubrange(count: 4)
!411 = !DIDerivedType(tag: DW_TAG_member, name: "dist", scope: !379, file: !378, line: 159, baseType: !396, size: 32, offset: 576)
!412 = !DIDerivedType(tag: DW_TAG_member, name: "bundle_size", scope: !379, file: !378, line: 161, baseType: !396, size: 32, offset: 608)
!413 = !DIDerivedType(tag: DW_TAG_member, name: "bundle_drawtype", scope: !379, file: !378, line: 162, baseType: !375, size: 8, offset: 640)
!414 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !379, file: !378, line: 163, baseType: !415, size: 24, offset: 648)
!415 = !DICompositeType(tag: DW_TAG_array_type, baseType: !375, size: 24, elements: !416)
!416 = !{!417}
!417 = !DISubrange(count: 3)
!418 = !DIDerivedType(tag: DW_TAG_member, name: "lay_prev", scope: !379, file: !378, line: 165, baseType: !7, size: 32, offset: 672)
!419 = !DIDerivedType(tag: DW_TAG_member, name: "lay_used", scope: !379, file: !378, line: 166, baseType: !7, size: 32, offset: 704)
!420 = !DIDerivedType(tag: DW_TAG_member, name: "persp", scope: !379, file: !378, line: 168, baseType: !399, size: 16, offset: 736)
!421 = !DIDerivedType(tag: DW_TAG_member, name: "view", scope: !379, file: !378, line: 169, baseType: !399, size: 16, offset: 752)
!422 = !DIDerivedType(tag: DW_TAG_member, name: "camera", scope: !379, file: !378, line: 171, baseType: !423, size: 64, offset: 768)
!423 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !424, size: 64)
!424 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Object", file: !186, line: 115, size: 11392, elements: !425)
!425 = !{!426, !4410, !4411, !4414, !4415, !4416, !4417, !4418, !4419, !4420, !4421, !4422, !4423, !4424, !4425, !4426, !4435, !4437, !4438, !4477, !4478, !4479, !4480, !4496, !4497, !4498, !4499, !4500, !4501, !4502, !4503, !4504, !4505, !4506, !4507, !4508, !4509, !4510, !4511, !4512, !4513, !4514, !4515, !4516, !4517, !4518, !4519, !4520, !4521, !4522, !4523, !4524, !4525, !4526, !4527, !4528, !4529, !4530, !4531, !4532, !4533, !4534, !4535, !4536, !4537, !4538, !4539, !4540, !4541, !4542, !4543, !4544, !4545, !4546, !4547, !4548, !4549, !4550, !4551, !4552, !4553, !4554, !4555, !4556, !4557, !4558, !4559, !4560, !4561, !4562, !4563, !4564, !4565, !4566, !4567, !4568, !4569, !4570, !4571, !4572, !4573, !4574, !4608, !4609, !4610, !4611, !4612, !4613, !4614, !4615, !4616, !4617, !4687, !4688, !4689, !4690, !4691, !4692, !4695, !4717, !4718, !4719, !4720, !4721, !4722, !4723, !4724, !4725, !4726, !4749, !4783, !4784, !4787, !4788}
!426 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !424, file: !186, line: 116, baseType: !427, size: 960)
!427 = !DIDerivedType(tag: DW_TAG_typedef, name: "ID", file: !428, line: 130, baseType: !429)
!428 = !DIFile(filename: "blender/source/blender/makesdna/DNA_ID.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!429 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ID", file: !428, line: 117, size: 960, elements: !430)
!430 = !{!431, !432, !433, !435, !4401, !4405, !4406, !4407, !4408, !4409}
!431 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !429, file: !428, line: 118, baseType: !372, size: 64)
!432 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !429, file: !428, line: 118, baseType: !372, size: 64, offset: 64)
!433 = !DIDerivedType(tag: DW_TAG_member, name: "newid", scope: !429, file: !428, line: 119, baseType: !434, size: 64, offset: 128)
!434 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !429, size: 64)
!435 = !DIDerivedType(tag: DW_TAG_member, name: "lib", scope: !429, file: !428, line: 120, baseType: !436, size: 64, offset: 192)
!436 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !437, size: 64)
!437 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Library", file: !428, line: 136, size: 17600, elements: !438)
!438 = !{!439, !440, !442, !4397, !4398, !4399, !4400}
!439 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !437, file: !428, line: 137, baseType: !427, size: 960)
!440 = !DIDerivedType(tag: DW_TAG_member, name: "idblock", scope: !437, file: !428, line: 138, baseType: !441, size: 64, offset: 960)
!441 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !427, size: 64)
!442 = !DIDerivedType(tag: DW_TAG_member, name: "filedata", scope: !437, file: !428, line: 139, baseType: !443, size: 64, offset: 1024)
!443 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !444, size: 64)
!444 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FileData", file: !445, line: 49, size: 10752, elements: !446)
!445 = !DIFile(filename: "blender/source/blender/blenloader/intern/readfile.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!446 = !{!447, !448, !449, !450, !451, !452, !456, !457, !464, !465, !477, !481, !482, !483, !522, !546, !547, !548, !549, !550, !551, !552, !555, !556, !557, !558, !559, !560, !563, !564, !566, !4387}
!447 = !DIDerivedType(tag: DW_TAG_member, name: "listbase", scope: !444, file: !445, line: 51, baseType: !388, size: 128)
!448 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !444, file: !445, line: 52, baseType: !98, size: 32, offset: 128)
!449 = !DIDerivedType(tag: DW_TAG_member, name: "eof", scope: !444, file: !445, line: 53, baseType: !98, size: 32, offset: 160)
!450 = !DIDerivedType(tag: DW_TAG_member, name: "buffersize", scope: !444, file: !445, line: 54, baseType: !98, size: 32, offset: 192)
!451 = !DIDerivedType(tag: DW_TAG_member, name: "seek", scope: !444, file: !445, line: 55, baseType: !98, size: 32, offset: 224)
!452 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !444, file: !445, line: 56, baseType: !453, size: 64, offset: 256)
!453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !454, size: 64)
!454 = !DISubroutineType(types: !455)
!455 = !{!98, !443, !372, !7}
!456 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !444, file: !445, line: 59, baseType: !373, size: 64, offset: 320)
!457 = !DIDerivedType(tag: DW_TAG_member, name: "memfile", scope: !444, file: !445, line: 61, baseType: !458, size: 64, offset: 384)
!458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !459, size: 64)
!459 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MemFile", file: !460, line: 44, size: 192, elements: !461)
!460 = !DIFile(filename: "blender/source/blender/blenloader/BLO_undofile.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!461 = !{!462, !463}
!462 = !DIDerivedType(tag: DW_TAG_member, name: "chunks", scope: !459, file: !460, line: 45, baseType: !388, size: 128)
!463 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !459, file: !460, line: 46, baseType: !7, size: 32, offset: 128)
!464 = !DIDerivedType(tag: DW_TAG_member, name: "filedes", scope: !444, file: !445, line: 64, baseType: !98, size: 32, offset: 448)
!465 = !DIDerivedType(tag: DW_TAG_member, name: "gzfiledes", scope: !444, file: !445, line: 65, baseType: !466, size: 64, offset: 512)
!466 = !DIDerivedType(tag: DW_TAG_typedef, name: "gzFile", file: !467, line: 1204, baseType: !468)
!467 = !DIFile(filename: "zlib/zlib.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !469, size: 64)
!469 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gzFile_s", file: !467, line: 1648, size: 192, elements: !470)
!470 = !{!471, !472, !475}
!471 = !DIDerivedType(tag: DW_TAG_member, name: "have", scope: !469, file: !467, line: 1649, baseType: !7, size: 32)
!472 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !469, file: !467, line: 1650, baseType: !473, size: 64, offset: 64)
!473 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !474, size: 64)
!474 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!475 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !469, file: !467, line: 1651, baseType: !476, size: 64, offset: 128)
!476 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!477 = !DIDerivedType(tag: DW_TAG_member, name: "relabase", scope: !444, file: !445, line: 68, baseType: !478, size: 8192, offset: 576)
!478 = !DICompositeType(tag: DW_TAG_array_type, baseType: !375, size: 8192, elements: !479)
!479 = !{!480}
!480 = !DISubrange(count: 1024)
!481 = !DIDerivedType(tag: DW_TAG_member, name: "headerdone", scope: !444, file: !445, line: 71, baseType: !375, size: 8, offset: 8768)
!482 = !DIDerivedType(tag: DW_TAG_member, name: "inbuffer", scope: !444, file: !445, line: 72, baseType: !98, size: 32, offset: 8800)
!483 = !DIDerivedType(tag: DW_TAG_member, name: "strm", scope: !444, file: !445, line: 75, baseType: !484, size: 896, offset: 8832)
!484 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_stream", file: !467, line: 104, baseType: !485)
!485 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_stream_s", file: !467, line: 85, size: 896, elements: !486)
!486 = !{!487, !492, !494, !497, !498, !499, !500, !502, !507, !513, !518, !519, !520, !521}
!487 = !DIDerivedType(tag: DW_TAG_member, name: "next_in", scope: !485, file: !467, line: 86, baseType: !488, size: 64)
!488 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !489, size: 64)
!489 = !DIDerivedType(tag: DW_TAG_typedef, name: "Bytef", file: !490, line: 374, baseType: !491)
!490 = !DIFile(filename: "zlib/zconf.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!491 = !DIDerivedType(tag: DW_TAG_typedef, name: "Byte", file: !490, line: 365, baseType: !474)
!492 = !DIDerivedType(tag: DW_TAG_member, name: "avail_in", scope: !485, file: !467, line: 87, baseType: !493, size: 32, offset: 64)
!493 = !DIDerivedType(tag: DW_TAG_typedef, name: "uInt", file: !490, line: 367, baseType: !7)
!494 = !DIDerivedType(tag: DW_TAG_member, name: "total_in", scope: !485, file: !467, line: 88, baseType: !495, size: 64, offset: 128)
!495 = !DIDerivedType(tag: DW_TAG_typedef, name: "uLong", file: !490, line: 368, baseType: !496)
!496 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!497 = !DIDerivedType(tag: DW_TAG_member, name: "next_out", scope: !485, file: !467, line: 90, baseType: !488, size: 64, offset: 192)
!498 = !DIDerivedType(tag: DW_TAG_member, name: "avail_out", scope: !485, file: !467, line: 91, baseType: !493, size: 32, offset: 256)
!499 = !DIDerivedType(tag: DW_TAG_member, name: "total_out", scope: !485, file: !467, line: 92, baseType: !495, size: 64, offset: 320)
!500 = !DIDerivedType(tag: DW_TAG_member, name: "msg", scope: !485, file: !467, line: 94, baseType: !501, size: 64, offset: 384)
!501 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !375, size: 64)
!502 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !485, file: !467, line: 95, baseType: !503, size: 64, offset: 448)
!503 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !504, size: 64)
!504 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "internal_state", file: !467, line: 1714, size: 32, elements: !505)
!505 = !{!506}
!506 = !DIDerivedType(tag: DW_TAG_member, name: "dummy", scope: !504, file: !467, line: 1714, baseType: !98, size: 32)
!507 = !DIDerivedType(tag: DW_TAG_member, name: "zalloc", scope: !485, file: !467, line: 97, baseType: !508, size: 64, offset: 512)
!508 = !DIDerivedType(tag: DW_TAG_typedef, name: "alloc_func", file: !467, line: 80, baseType: !509)
!509 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !510, size: 64)
!510 = !DISubroutineType(types: !511)
!511 = !{!512, !512, !493, !493}
!512 = !DIDerivedType(tag: DW_TAG_typedef, name: "voidpf", file: !490, line: 383, baseType: !372)
!513 = !DIDerivedType(tag: DW_TAG_member, name: "zfree", scope: !485, file: !467, line: 98, baseType: !514, size: 64, offset: 576)
!514 = !DIDerivedType(tag: DW_TAG_typedef, name: "free_func", file: !467, line: 81, baseType: !515)
!515 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !516, size: 64)
!516 = !DISubroutineType(types: !517)
!517 = !{null, !512, !512}
!518 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !485, file: !467, line: 99, baseType: !512, size: 64, offset: 640)
!519 = !DIDerivedType(tag: DW_TAG_member, name: "data_type", scope: !485, file: !467, line: 101, baseType: !98, size: 32, offset: 704)
!520 = !DIDerivedType(tag: DW_TAG_member, name: "adler", scope: !485, file: !467, line: 102, baseType: !495, size: 64, offset: 768)
!521 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !485, file: !467, line: 103, baseType: !495, size: 64, offset: 832)
!522 = !DIDerivedType(tag: DW_TAG_member, name: "filesdna", scope: !444, file: !445, line: 78, baseType: !523, size: 64, offset: 9728)
!523 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !524, size: 64)
!524 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SDNA", file: !525, line: 37, size: 640, elements: !526)
!525 = !DIFile(filename: "blender/source/blender/makesdna/DNA_sdna_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!526 = !{!527, !528, !529, !530, !532, !533, !534, !536, !538, !539, !541, !545}
!527 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !524, file: !525, line: 38, baseType: !501, size: 64)
!528 = !DIDerivedType(tag: DW_TAG_member, name: "datalen", scope: !524, file: !525, line: 39, baseType: !98, size: 32, offset: 64)
!529 = !DIDerivedType(tag: DW_TAG_member, name: "nr_names", scope: !524, file: !525, line: 41, baseType: !98, size: 32, offset: 96)
!530 = !DIDerivedType(tag: DW_TAG_member, name: "names", scope: !524, file: !525, line: 42, baseType: !531, size: 64, offset: 128)
!531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !373, size: 64)
!532 = !DIDerivedType(tag: DW_TAG_member, name: "pointerlen", scope: !524, file: !525, line: 44, baseType: !98, size: 32, offset: 192)
!533 = !DIDerivedType(tag: DW_TAG_member, name: "nr_types", scope: !524, file: !525, line: 46, baseType: !98, size: 32, offset: 224)
!534 = !DIDerivedType(tag: DW_TAG_member, name: "types", scope: !524, file: !525, line: 47, baseType: !535, size: 64, offset: 256)
!535 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !501, size: 64)
!536 = !DIDerivedType(tag: DW_TAG_member, name: "typelens", scope: !524, file: !525, line: 48, baseType: !537, size: 64, offset: 320)
!537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !399, size: 64)
!538 = !DIDerivedType(tag: DW_TAG_member, name: "nr_structs", scope: !524, file: !525, line: 50, baseType: !98, size: 32, offset: 384)
!539 = !DIDerivedType(tag: DW_TAG_member, name: "structs", scope: !524, file: !525, line: 51, baseType: !540, size: 64, offset: 448)
!540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !537, size: 64)
!541 = !DIDerivedType(tag: DW_TAG_member, name: "structs_map", scope: !524, file: !525, line: 57, baseType: !542, size: 64, offset: 512)
!542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !543, size: 64)
!543 = !DICompositeType(tag: DW_TAG_structure_type, name: "GHash", file: !544, line: 47, flags: DIFlagFwdDecl)
!544 = !DIFile(filename: "blender/source/blender/makesdna/DNA_action_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!545 = !DIDerivedType(tag: DW_TAG_member, name: "lastfind", scope: !524, file: !525, line: 63, baseType: !98, size: 32, offset: 576)
!546 = !DIDerivedType(tag: DW_TAG_member, name: "memsdna", scope: !444, file: !445, line: 79, baseType: !523, size: 64, offset: 9792)
!547 = !DIDerivedType(tag: DW_TAG_member, name: "compflags", scope: !444, file: !445, line: 80, baseType: !501, size: 64, offset: 9856)
!548 = !DIDerivedType(tag: DW_TAG_member, name: "fileversion", scope: !444, file: !445, line: 82, baseType: !98, size: 32, offset: 9920)
!549 = !DIDerivedType(tag: DW_TAG_member, name: "id_name_offs", scope: !444, file: !445, line: 83, baseType: !98, size: 32, offset: 9952)
!550 = !DIDerivedType(tag: DW_TAG_member, name: "globalf", scope: !444, file: !445, line: 84, baseType: !98, size: 32, offset: 9984)
!551 = !DIDerivedType(tag: DW_TAG_member, name: "fileflags", scope: !444, file: !445, line: 84, baseType: !98, size: 32, offset: 10016)
!552 = !DIDerivedType(tag: DW_TAG_member, name: "datamap", scope: !444, file: !445, line: 86, baseType: !553, size: 64, offset: 10048)
!553 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !554, size: 64)
!554 = !DICompositeType(tag: DW_TAG_structure_type, name: "OldNewMap", file: !445, line: 39, flags: DIFlagFwdDecl)
!555 = !DIDerivedType(tag: DW_TAG_member, name: "globmap", scope: !444, file: !445, line: 87, baseType: !553, size: 64, offset: 10112)
!556 = !DIDerivedType(tag: DW_TAG_member, name: "libmap", scope: !444, file: !445, line: 88, baseType: !553, size: 64, offset: 10176)
!557 = !DIDerivedType(tag: DW_TAG_member, name: "imamap", scope: !444, file: !445, line: 89, baseType: !553, size: 64, offset: 10240)
!558 = !DIDerivedType(tag: DW_TAG_member, name: "movieclipmap", scope: !444, file: !445, line: 90, baseType: !553, size: 64, offset: 10304)
!559 = !DIDerivedType(tag: DW_TAG_member, name: "packedmap", scope: !444, file: !445, line: 91, baseType: !553, size: 64, offset: 10368)
!560 = !DIDerivedType(tag: DW_TAG_member, name: "bheadmap", scope: !444, file: !445, line: 93, baseType: !561, size: 64, offset: 10432)
!561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !562, size: 64)
!562 = !DICompositeType(tag: DW_TAG_structure_type, name: "BHeadSort", file: !445, line: 93, flags: DIFlagFwdDecl)
!563 = !DIDerivedType(tag: DW_TAG_member, name: "tot_bheadmap", scope: !444, file: !445, line: 94, baseType: !98, size: 32, offset: 10496)
!564 = !DIDerivedType(tag: DW_TAG_member, name: "mainlist", scope: !444, file: !445, line: 96, baseType: !565, size: 64, offset: 10560)
!565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !388, size: 64)
!566 = !DIDerivedType(tag: DW_TAG_member, name: "bfd_r", scope: !444, file: !445, line: 101, baseType: !567, size: 64, offset: 10624)
!567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !568, size: 64)
!568 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !569, size: 64)
!569 = !DIDerivedType(tag: DW_TAG_typedef, name: "BlendFileData", file: !34, line: 74, baseType: !570)
!570 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BlendFileData", file: !34, line: 60, size: 8640, elements: !571)
!571 = !{!572, !639, !812, !813, !814, !815, !816, !817, !4384, !4385}
!572 = !DIDerivedType(tag: DW_TAG_member, name: "main", scope: !570, file: !34, line: 61, baseType: !573, size: 64)
!573 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !574, size: 64)
!574 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Main", file: !575, line: 53, size: 15232, elements: !576)
!575 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_main.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!576 = !{!577, !578, !579, !580, !581, !582, !583, !584, !589, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !633, !636}
!577 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !574, file: !575, line: 54, baseType: !573, size: 64)
!578 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !574, file: !575, line: 54, baseType: !573, size: 64, offset: 64)
!579 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !574, file: !575, line: 55, baseType: !478, size: 8192, offset: 128)
!580 = !DIDerivedType(tag: DW_TAG_member, name: "versionfile", scope: !574, file: !575, line: 56, baseType: !399, size: 16, offset: 8320)
!581 = !DIDerivedType(tag: DW_TAG_member, name: "subversionfile", scope: !574, file: !575, line: 56, baseType: !399, size: 16, offset: 8336)
!582 = !DIDerivedType(tag: DW_TAG_member, name: "minversionfile", scope: !574, file: !575, line: 57, baseType: !399, size: 16, offset: 8352)
!583 = !DIDerivedType(tag: DW_TAG_member, name: "minsubversionfile", scope: !574, file: !575, line: 57, baseType: !399, size: 16, offset: 8368)
!584 = !DIDerivedType(tag: DW_TAG_member, name: "build_commit_timestamp", scope: !574, file: !575, line: 58, baseType: !585, size: 64, offset: 8384)
!585 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !586, line: 27, baseType: !587)
!586 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdint-uintn.h", directory: "")
!587 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint64_t", file: !588, line: 45, baseType: !496)
!588 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!589 = !DIDerivedType(tag: DW_TAG_member, name: "build_hash", scope: !574, file: !575, line: 59, baseType: !590, size: 128, offset: 8448)
!590 = !DICompositeType(tag: DW_TAG_array_type, baseType: !375, size: 128, elements: !591)
!591 = !{!592}
!592 = !DISubrange(count: 16)
!593 = !DIDerivedType(tag: DW_TAG_member, name: "recovered", scope: !574, file: !575, line: 60, baseType: !399, size: 16, offset: 8576)
!594 = !DIDerivedType(tag: DW_TAG_member, name: "curlib", scope: !574, file: !575, line: 62, baseType: !436, size: 64, offset: 8640)
!595 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !574, file: !575, line: 63, baseType: !388, size: 128, offset: 8704)
!596 = !DIDerivedType(tag: DW_TAG_member, name: "library", scope: !574, file: !575, line: 64, baseType: !388, size: 128, offset: 8832)
!597 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !574, file: !575, line: 65, baseType: !388, size: 128, offset: 8960)
!598 = !DIDerivedType(tag: DW_TAG_member, name: "mesh", scope: !574, file: !575, line: 66, baseType: !388, size: 128, offset: 9088)
!599 = !DIDerivedType(tag: DW_TAG_member, name: "curve", scope: !574, file: !575, line: 67, baseType: !388, size: 128, offset: 9216)
!600 = !DIDerivedType(tag: DW_TAG_member, name: "mball", scope: !574, file: !575, line: 68, baseType: !388, size: 128, offset: 9344)
!601 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !574, file: !575, line: 69, baseType: !388, size: 128, offset: 9472)
!602 = !DIDerivedType(tag: DW_TAG_member, name: "tex", scope: !574, file: !575, line: 70, baseType: !388, size: 128, offset: 9600)
!603 = !DIDerivedType(tag: DW_TAG_member, name: "image", scope: !574, file: !575, line: 71, baseType: !388, size: 128, offset: 9728)
!604 = !DIDerivedType(tag: DW_TAG_member, name: "latt", scope: !574, file: !575, line: 72, baseType: !388, size: 128, offset: 9856)
!605 = !DIDerivedType(tag: DW_TAG_member, name: "lamp", scope: !574, file: !575, line: 73, baseType: !388, size: 128, offset: 9984)
!606 = !DIDerivedType(tag: DW_TAG_member, name: "camera", scope: !574, file: !575, line: 74, baseType: !388, size: 128, offset: 10112)
!607 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !574, file: !575, line: 75, baseType: !388, size: 128, offset: 10240)
!608 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !574, file: !575, line: 76, baseType: !388, size: 128, offset: 10368)
!609 = !DIDerivedType(tag: DW_TAG_member, name: "world", scope: !574, file: !575, line: 77, baseType: !388, size: 128, offset: 10496)
!610 = !DIDerivedType(tag: DW_TAG_member, name: "screen", scope: !574, file: !575, line: 78, baseType: !388, size: 128, offset: 10624)
!611 = !DIDerivedType(tag: DW_TAG_member, name: "script", scope: !574, file: !575, line: 79, baseType: !388, size: 128, offset: 10752)
!612 = !DIDerivedType(tag: DW_TAG_member, name: "vfont", scope: !574, file: !575, line: 80, baseType: !388, size: 128, offset: 10880)
!613 = !DIDerivedType(tag: DW_TAG_member, name: "text", scope: !574, file: !575, line: 81, baseType: !388, size: 128, offset: 11008)
!614 = !DIDerivedType(tag: DW_TAG_member, name: "speaker", scope: !574, file: !575, line: 82, baseType: !388, size: 128, offset: 11136)
!615 = !DIDerivedType(tag: DW_TAG_member, name: "sound", scope: !574, file: !575, line: 83, baseType: !388, size: 128, offset: 11264)
!616 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !574, file: !575, line: 84, baseType: !388, size: 128, offset: 11392)
!617 = !DIDerivedType(tag: DW_TAG_member, name: "armature", scope: !574, file: !575, line: 85, baseType: !388, size: 128, offset: 11520)
!618 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !574, file: !575, line: 86, baseType: !388, size: 128, offset: 11648)
!619 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !574, file: !575, line: 87, baseType: !388, size: 128, offset: 11776)
!620 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !574, file: !575, line: 88, baseType: !388, size: 128, offset: 11904)
!621 = !DIDerivedType(tag: DW_TAG_member, name: "particle", scope: !574, file: !575, line: 89, baseType: !388, size: 128, offset: 12032)
!622 = !DIDerivedType(tag: DW_TAG_member, name: "palettes", scope: !574, file: !575, line: 90, baseType: !388, size: 128, offset: 12160)
!623 = !DIDerivedType(tag: DW_TAG_member, name: "paintcurves", scope: !574, file: !575, line: 91, baseType: !388, size: 128, offset: 12288)
!624 = !DIDerivedType(tag: DW_TAG_member, name: "wm", scope: !574, file: !575, line: 92, baseType: !388, size: 128, offset: 12416)
!625 = !DIDerivedType(tag: DW_TAG_member, name: "gpencil", scope: !574, file: !575, line: 93, baseType: !388, size: 128, offset: 12544)
!626 = !DIDerivedType(tag: DW_TAG_member, name: "movieclip", scope: !574, file: !575, line: 94, baseType: !388, size: 128, offset: 12672)
!627 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !574, file: !575, line: 95, baseType: !388, size: 128, offset: 12800)
!628 = !DIDerivedType(tag: DW_TAG_member, name: "linestyle", scope: !574, file: !575, line: 96, baseType: !388, size: 128, offset: 12928)
!629 = !DIDerivedType(tag: DW_TAG_member, name: "id_tag_update", scope: !574, file: !575, line: 98, baseType: !630, size: 2048, offset: 13056)
!630 = !DICompositeType(tag: DW_TAG_array_type, baseType: !375, size: 2048, elements: !631)
!631 = !{!632}
!632 = !DISubrange(count: 256)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "eval_ctx", scope: !574, file: !575, line: 101, baseType: !634, size: 64, offset: 15104)
!634 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !635, size: 64)
!635 = !DICompositeType(tag: DW_TAG_structure_type, name: "EvaluationContext", file: !575, line: 49, flags: DIFlagFwdDecl)
!636 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !574, file: !575, line: 103, baseType: !637, size: 64, offset: 15168)
!637 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !638, size: 64)
!638 = !DICompositeType(tag: DW_TAG_structure_type, name: "MainLock", file: !575, line: 51, flags: DIFlagFwdDecl)
!639 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !570, file: !34, line: 62, baseType: !640, size: 64, offset: 64)
!640 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !641, size: 64)
!641 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UserDef", file: !163, line: 421, size: 87680, elements: !642)
!642 = !{!643, !644, !645, !646, !647, !648, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670, !671, !672, !673, !674, !675, !676, !677, !678, !679, !680, !681, !682, !683, !684, !685, !686, !687, !688, !689, !690, !691, !695, !696, !697, !698, !699, !700, !701, !702, !703, !712, !713, !714, !715, !716, !717, !718, !719, !720, !721, !722, !723, !724, !725, !726, !727, !728, !729, !730, !731, !732, !733, !734, !735, !736, !737, !738, !739, !740, !741, !742, !743, !744, !745, !746, !747, !748, !749, !750, !751, !752, !778, !780, !781, !782, !783, !784, !788, !789, !790, !791, !792, !793, !794, !795, !796, !797, !798, !799, !800}
!643 = !DIDerivedType(tag: DW_TAG_member, name: "versionfile", scope: !641, file: !163, line: 423, baseType: !98, size: 32)
!644 = !DIDerivedType(tag: DW_TAG_member, name: "subversionfile", scope: !641, file: !163, line: 423, baseType: !98, size: 32, offset: 32)
!645 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !641, file: !163, line: 425, baseType: !98, size: 32, offset: 64)
!646 = !DIDerivedType(tag: DW_TAG_member, name: "dupflag", scope: !641, file: !163, line: 425, baseType: !98, size: 32, offset: 96)
!647 = !DIDerivedType(tag: DW_TAG_member, name: "savetime", scope: !641, file: !163, line: 426, baseType: !98, size: 32, offset: 128)
!648 = !DIDerivedType(tag: DW_TAG_member, name: "tempdir", scope: !641, file: !163, line: 427, baseType: !649, size: 6144, offset: 160)
!649 = !DICompositeType(tag: DW_TAG_array_type, baseType: !375, size: 6144, elements: !650)
!650 = !{!651}
!651 = !DISubrange(count: 768)
!652 = !DIDerivedType(tag: DW_TAG_member, name: "fontdir", scope: !641, file: !163, line: 428, baseType: !649, size: 6144, offset: 6304)
!653 = !DIDerivedType(tag: DW_TAG_member, name: "renderdir", scope: !641, file: !163, line: 429, baseType: !478, size: 8192, offset: 12448)
!654 = !DIDerivedType(tag: DW_TAG_member, name: "render_cachedir", scope: !641, file: !163, line: 431, baseType: !649, size: 6144, offset: 20640)
!655 = !DIDerivedType(tag: DW_TAG_member, name: "textudir", scope: !641, file: !163, line: 432, baseType: !649, size: 6144, offset: 26784)
!656 = !DIDerivedType(tag: DW_TAG_member, name: "pythondir", scope: !641, file: !163, line: 433, baseType: !649, size: 6144, offset: 32928)
!657 = !DIDerivedType(tag: DW_TAG_member, name: "sounddir", scope: !641, file: !163, line: 434, baseType: !649, size: 6144, offset: 39072)
!658 = !DIDerivedType(tag: DW_TAG_member, name: "i18ndir", scope: !641, file: !163, line: 435, baseType: !649, size: 6144, offset: 45216)
!659 = !DIDerivedType(tag: DW_TAG_member, name: "image_editor", scope: !641, file: !163, line: 436, baseType: !478, size: 8192, offset: 51360)
!660 = !DIDerivedType(tag: DW_TAG_member, name: "anim_player", scope: !641, file: !163, line: 437, baseType: !478, size: 8192, offset: 59552)
!661 = !DIDerivedType(tag: DW_TAG_member, name: "anim_player_preset", scope: !641, file: !163, line: 438, baseType: !98, size: 32, offset: 67744)
!662 = !DIDerivedType(tag: DW_TAG_member, name: "v2d_min_gridsize", scope: !641, file: !163, line: 440, baseType: !399, size: 16, offset: 67776)
!663 = !DIDerivedType(tag: DW_TAG_member, name: "timecode_style", scope: !641, file: !163, line: 441, baseType: !399, size: 16, offset: 67792)
!664 = !DIDerivedType(tag: DW_TAG_member, name: "versions", scope: !641, file: !163, line: 443, baseType: !399, size: 16, offset: 67808)
!665 = !DIDerivedType(tag: DW_TAG_member, name: "dbl_click_time", scope: !641, file: !163, line: 444, baseType: !399, size: 16, offset: 67824)
!666 = !DIDerivedType(tag: DW_TAG_member, name: "gameflags", scope: !641, file: !163, line: 446, baseType: !399, size: 16, offset: 67840)
!667 = !DIDerivedType(tag: DW_TAG_member, name: "wheellinescroll", scope: !641, file: !163, line: 447, baseType: !399, size: 16, offset: 67856)
!668 = !DIDerivedType(tag: DW_TAG_member, name: "uiflag", scope: !641, file: !163, line: 448, baseType: !98, size: 32, offset: 67872)
!669 = !DIDerivedType(tag: DW_TAG_member, name: "uiflag2", scope: !641, file: !163, line: 448, baseType: !98, size: 32, offset: 67904)
!670 = !DIDerivedType(tag: DW_TAG_member, name: "language", scope: !641, file: !163, line: 449, baseType: !98, size: 32, offset: 67936)
!671 = !DIDerivedType(tag: DW_TAG_member, name: "userpref", scope: !641, file: !163, line: 450, baseType: !399, size: 16, offset: 67968)
!672 = !DIDerivedType(tag: DW_TAG_member, name: "viewzoom", scope: !641, file: !163, line: 450, baseType: !399, size: 16, offset: 67984)
!673 = !DIDerivedType(tag: DW_TAG_member, name: "mixbufsize", scope: !641, file: !163, line: 452, baseType: !98, size: 32, offset: 68000)
!674 = !DIDerivedType(tag: DW_TAG_member, name: "audiodevice", scope: !641, file: !163, line: 453, baseType: !98, size: 32, offset: 68032)
!675 = !DIDerivedType(tag: DW_TAG_member, name: "audiorate", scope: !641, file: !163, line: 454, baseType: !98, size: 32, offset: 68064)
!676 = !DIDerivedType(tag: DW_TAG_member, name: "audioformat", scope: !641, file: !163, line: 455, baseType: !98, size: 32, offset: 68096)
!677 = !DIDerivedType(tag: DW_TAG_member, name: "audiochannels", scope: !641, file: !163, line: 456, baseType: !98, size: 32, offset: 68128)
!678 = !DIDerivedType(tag: DW_TAG_member, name: "scrollback", scope: !641, file: !163, line: 458, baseType: !98, size: 32, offset: 68160)
!679 = !DIDerivedType(tag: DW_TAG_member, name: "dpi", scope: !641, file: !163, line: 459, baseType: !98, size: 32, offset: 68192)
!680 = !DIDerivedType(tag: DW_TAG_member, name: "encoding", scope: !641, file: !163, line: 460, baseType: !399, size: 16, offset: 68224)
!681 = !DIDerivedType(tag: DW_TAG_member, name: "transopts", scope: !641, file: !163, line: 461, baseType: !399, size: 16, offset: 68240)
!682 = !DIDerivedType(tag: DW_TAG_member, name: "menuthreshold1", scope: !641, file: !163, line: 462, baseType: !399, size: 16, offset: 68256)
!683 = !DIDerivedType(tag: DW_TAG_member, name: "menuthreshold2", scope: !641, file: !163, line: 462, baseType: !399, size: 16, offset: 68272)
!684 = !DIDerivedType(tag: DW_TAG_member, name: "themes", scope: !641, file: !163, line: 464, baseType: !390, size: 128, offset: 68288)
!685 = !DIDerivedType(tag: DW_TAG_member, name: "uifonts", scope: !641, file: !163, line: 465, baseType: !390, size: 128, offset: 68416)
!686 = !DIDerivedType(tag: DW_TAG_member, name: "uistyles", scope: !641, file: !163, line: 466, baseType: !390, size: 128, offset: 68544)
!687 = !DIDerivedType(tag: DW_TAG_member, name: "keymaps", scope: !641, file: !163, line: 467, baseType: !390, size: 128, offset: 68672)
!688 = !DIDerivedType(tag: DW_TAG_member, name: "user_keymaps", scope: !641, file: !163, line: 468, baseType: !390, size: 128, offset: 68800)
!689 = !DIDerivedType(tag: DW_TAG_member, name: "addons", scope: !641, file: !163, line: 469, baseType: !390, size: 128, offset: 68928)
!690 = !DIDerivedType(tag: DW_TAG_member, name: "autoexec_paths", scope: !641, file: !163, line: 470, baseType: !390, size: 128, offset: 69056)
!691 = !DIDerivedType(tag: DW_TAG_member, name: "keyconfigstr", scope: !641, file: !163, line: 471, baseType: !692, size: 512, offset: 69184)
!692 = !DICompositeType(tag: DW_TAG_array_type, baseType: !375, size: 512, elements: !693)
!693 = !{!694}
!694 = !DISubrange(count: 64)
!695 = !DIDerivedType(tag: DW_TAG_member, name: "undosteps", scope: !641, file: !163, line: 473, baseType: !399, size: 16, offset: 69696)
!696 = !DIDerivedType(tag: DW_TAG_member, name: "undomemory", scope: !641, file: !163, line: 474, baseType: !399, size: 16, offset: 69712)
!697 = !DIDerivedType(tag: DW_TAG_member, name: "gp_manhattendist", scope: !641, file: !163, line: 475, baseType: !399, size: 16, offset: 69728)
!698 = !DIDerivedType(tag: DW_TAG_member, name: "gp_euclideandist", scope: !641, file: !163, line: 475, baseType: !399, size: 16, offset: 69744)
!699 = !DIDerivedType(tag: DW_TAG_member, name: "gp_eraser", scope: !641, file: !163, line: 475, baseType: !399, size: 16, offset: 69760)
!700 = !DIDerivedType(tag: DW_TAG_member, name: "gp_settings", scope: !641, file: !163, line: 476, baseType: !399, size: 16, offset: 69776)
!701 = !DIDerivedType(tag: DW_TAG_member, name: "tb_leftmouse", scope: !641, file: !163, line: 477, baseType: !399, size: 16, offset: 69792)
!702 = !DIDerivedType(tag: DW_TAG_member, name: "tb_rightmouse", scope: !641, file: !163, line: 477, baseType: !399, size: 16, offset: 69808)
!703 = !DIDerivedType(tag: DW_TAG_member, name: "light", scope: !641, file: !163, line: 478, baseType: !704, size: 1344, offset: 69824)
!704 = !DICompositeType(tag: DW_TAG_array_type, baseType: !705, size: 1344, elements: !416)
!705 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SolidLight", file: !163, line: 405, size: 448, elements: !706)
!706 = !{!707, !708, !709, !710, !711}
!707 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !705, file: !163, line: 406, baseType: !98, size: 32)
!708 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !705, file: !163, line: 406, baseType: !98, size: 32, offset: 32)
!709 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !705, file: !163, line: 407, baseType: !408, size: 128, offset: 64)
!710 = !DIDerivedType(tag: DW_TAG_member, name: "spec", scope: !705, file: !163, line: 407, baseType: !408, size: 128, offset: 192)
!711 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !705, file: !163, line: 407, baseType: !408, size: 128, offset: 320)
!712 = !DIDerivedType(tag: DW_TAG_member, name: "tw_hotspot", scope: !641, file: !163, line: 479, baseType: !399, size: 16, offset: 71168)
!713 = !DIDerivedType(tag: DW_TAG_member, name: "tw_flag", scope: !641, file: !163, line: 479, baseType: !399, size: 16, offset: 71184)
!714 = !DIDerivedType(tag: DW_TAG_member, name: "tw_handlesize", scope: !641, file: !163, line: 479, baseType: !399, size: 16, offset: 71200)
!715 = !DIDerivedType(tag: DW_TAG_member, name: "tw_size", scope: !641, file: !163, line: 479, baseType: !399, size: 16, offset: 71216)
!716 = !DIDerivedType(tag: DW_TAG_member, name: "textimeout", scope: !641, file: !163, line: 480, baseType: !399, size: 16, offset: 71232)
!717 = !DIDerivedType(tag: DW_TAG_member, name: "texcollectrate", scope: !641, file: !163, line: 480, baseType: !399, size: 16, offset: 71248)
!718 = !DIDerivedType(tag: DW_TAG_member, name: "wmdrawmethod", scope: !641, file: !163, line: 481, baseType: !399, size: 16, offset: 71264)
!719 = !DIDerivedType(tag: DW_TAG_member, name: "dragthreshold", scope: !641, file: !163, line: 482, baseType: !399, size: 16, offset: 71280)
!720 = !DIDerivedType(tag: DW_TAG_member, name: "memcachelimit", scope: !641, file: !163, line: 483, baseType: !98, size: 32, offset: 71296)
!721 = !DIDerivedType(tag: DW_TAG_member, name: "prefetchframes", scope: !641, file: !163, line: 484, baseType: !98, size: 32, offset: 71328)
!722 = !DIDerivedType(tag: DW_TAG_member, name: "frameserverport", scope: !641, file: !163, line: 485, baseType: !399, size: 16, offset: 71360)
!723 = !DIDerivedType(tag: DW_TAG_member, name: "pad_rot_angle", scope: !641, file: !163, line: 486, baseType: !399, size: 16, offset: 71376)
!724 = !DIDerivedType(tag: DW_TAG_member, name: "obcenter_dia", scope: !641, file: !163, line: 487, baseType: !399, size: 16, offset: 71392)
!725 = !DIDerivedType(tag: DW_TAG_member, name: "rvisize", scope: !641, file: !163, line: 488, baseType: !399, size: 16, offset: 71408)
!726 = !DIDerivedType(tag: DW_TAG_member, name: "rvibright", scope: !641, file: !163, line: 489, baseType: !399, size: 16, offset: 71424)
!727 = !DIDerivedType(tag: DW_TAG_member, name: "recent_files", scope: !641, file: !163, line: 490, baseType: !399, size: 16, offset: 71440)
!728 = !DIDerivedType(tag: DW_TAG_member, name: "smooth_viewtx", scope: !641, file: !163, line: 491, baseType: !399, size: 16, offset: 71456)
!729 = !DIDerivedType(tag: DW_TAG_member, name: "glreslimit", scope: !641, file: !163, line: 492, baseType: !399, size: 16, offset: 71472)
!730 = !DIDerivedType(tag: DW_TAG_member, name: "curssize", scope: !641, file: !163, line: 493, baseType: !399, size: 16, offset: 71488)
!731 = !DIDerivedType(tag: DW_TAG_member, name: "color_picker_type", scope: !641, file: !163, line: 494, baseType: !399, size: 16, offset: 71504)
!732 = !DIDerivedType(tag: DW_TAG_member, name: "ipo_new", scope: !641, file: !163, line: 495, baseType: !375, size: 8, offset: 71520)
!733 = !DIDerivedType(tag: DW_TAG_member, name: "keyhandles_new", scope: !641, file: !163, line: 496, baseType: !375, size: 8, offset: 71528)
!734 = !DIDerivedType(tag: DW_TAG_member, name: "gpu_select_method", scope: !641, file: !163, line: 497, baseType: !375, size: 8, offset: 71536)
!735 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !641, file: !163, line: 498, baseType: !375, size: 8, offset: 71544)
!736 = !DIDerivedType(tag: DW_TAG_member, name: "scrcastfps", scope: !641, file: !163, line: 500, baseType: !399, size: 16, offset: 71552)
!737 = !DIDerivedType(tag: DW_TAG_member, name: "scrcastwait", scope: !641, file: !163, line: 501, baseType: !399, size: 16, offset: 71568)
!738 = !DIDerivedType(tag: DW_TAG_member, name: "widget_unit", scope: !641, file: !163, line: 503, baseType: !399, size: 16, offset: 71584)
!739 = !DIDerivedType(tag: DW_TAG_member, name: "anisotropic_filter", scope: !641, file: !163, line: 504, baseType: !399, size: 16, offset: 71600)
!740 = !DIDerivedType(tag: DW_TAG_member, name: "use_16bit_textures", scope: !641, file: !163, line: 505, baseType: !399, size: 16, offset: 71616)
!741 = !DIDerivedType(tag: DW_TAG_member, name: "use_gpu_mipmap", scope: !641, file: !163, line: 505, baseType: !399, size: 16, offset: 71632)
!742 = !DIDerivedType(tag: DW_TAG_member, name: "ndof_sensitivity", scope: !641, file: !163, line: 507, baseType: !396, size: 32, offset: 71648)
!743 = !DIDerivedType(tag: DW_TAG_member, name: "ndof_orbit_sensitivity", scope: !641, file: !163, line: 508, baseType: !396, size: 32, offset: 71680)
!744 = !DIDerivedType(tag: DW_TAG_member, name: "ndof_flag", scope: !641, file: !163, line: 509, baseType: !98, size: 32, offset: 71712)
!745 = !DIDerivedType(tag: DW_TAG_member, name: "ogl_multisamples", scope: !641, file: !163, line: 511, baseType: !399, size: 16, offset: 71744)
!746 = !DIDerivedType(tag: DW_TAG_member, name: "image_draw_method", scope: !641, file: !163, line: 513, baseType: !399, size: 16, offset: 71760)
!747 = !DIDerivedType(tag: DW_TAG_member, name: "glalphaclip", scope: !641, file: !163, line: 515, baseType: !396, size: 32, offset: 71776)
!748 = !DIDerivedType(tag: DW_TAG_member, name: "autokey_mode", scope: !641, file: !163, line: 517, baseType: !399, size: 16, offset: 71808)
!749 = !DIDerivedType(tag: DW_TAG_member, name: "autokey_flag", scope: !641, file: !163, line: 518, baseType: !399, size: 16, offset: 71824)
!750 = !DIDerivedType(tag: DW_TAG_member, name: "text_render", scope: !641, file: !163, line: 520, baseType: !399, size: 16, offset: 71840)
!751 = !DIDerivedType(tag: DW_TAG_member, name: "pad9", scope: !641, file: !163, line: 520, baseType: !399, size: 16, offset: 71856)
!752 = !DIDerivedType(tag: DW_TAG_member, name: "coba_weight", scope: !641, file: !163, line: 522, baseType: !753, size: 6208, offset: 71872)
!753 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorBand", file: !754, line: 113, size: 6208, elements: !755)
!754 = !DIFile(filename: "blender/source/blender/makesdna/DNA_texture_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!755 = !{!756, !757, !758, !759, !760, !761, !765}
!756 = !DIDerivedType(tag: DW_TAG_member, name: "tot", scope: !753, file: !754, line: 114, baseType: !399, size: 16)
!757 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !753, file: !754, line: 114, baseType: !399, size: 16, offset: 16)
!758 = !DIDerivedType(tag: DW_TAG_member, name: "ipotype", scope: !753, file: !754, line: 115, baseType: !375, size: 8, offset: 32)
!759 = !DIDerivedType(tag: DW_TAG_member, name: "ipotype_hue", scope: !753, file: !754, line: 115, baseType: !375, size: 8, offset: 40)
!760 = !DIDerivedType(tag: DW_TAG_member, name: "color_mode", scope: !753, file: !754, line: 116, baseType: !375, size: 8, offset: 48)
!761 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !753, file: !754, line: 117, baseType: !762, size: 8, offset: 56)
!762 = !DICompositeType(tag: DW_TAG_array_type, baseType: !375, size: 8, elements: !763)
!763 = !{!764}
!764 = !DISubrange(count: 1)
!765 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !753, file: !754, line: 119, baseType: !766, size: 6144, offset: 64)
!766 = !DICompositeType(tag: DW_TAG_array_type, baseType: !767, size: 6144, elements: !776)
!767 = !DIDerivedType(tag: DW_TAG_typedef, name: "CBData", file: !754, line: 109, baseType: !768)
!768 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CBData", file: !754, line: 106, size: 192, elements: !769)
!769 = !{!770, !771, !772, !773, !774, !775}
!770 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !768, file: !754, line: 107, baseType: !396, size: 32)
!771 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !768, file: !754, line: 107, baseType: !396, size: 32, offset: 32)
!772 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !768, file: !754, line: 107, baseType: !396, size: 32, offset: 64)
!773 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !768, file: !754, line: 107, baseType: !396, size: 32, offset: 96)
!774 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !768, file: !754, line: 107, baseType: !396, size: 32, offset: 128)
!775 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !768, file: !754, line: 108, baseType: !98, size: 32, offset: 160)
!776 = !{!777}
!777 = !DISubrange(count: 32)
!778 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_overlay_col", scope: !641, file: !163, line: 524, baseType: !779, size: 96, offset: 78080)
!779 = !DICompositeType(tag: DW_TAG_array_type, baseType: !396, size: 96, elements: !416)
!780 = !DIDerivedType(tag: DW_TAG_member, name: "gpencil_new_layer_col", scope: !641, file: !163, line: 525, baseType: !408, size: 128, offset: 78176)
!781 = !DIDerivedType(tag: DW_TAG_member, name: "tweak_threshold", scope: !641, file: !163, line: 527, baseType: !399, size: 16, offset: 78304)
!782 = !DIDerivedType(tag: DW_TAG_member, name: "navigation_mode", scope: !641, file: !163, line: 528, baseType: !375, size: 8, offset: 78320)
!783 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !641, file: !163, line: 528, baseType: !375, size: 8, offset: 78328)
!784 = !DIDerivedType(tag: DW_TAG_member, name: "author", scope: !641, file: !163, line: 530, baseType: !785, size: 640, offset: 78336)
!785 = !DICompositeType(tag: DW_TAG_array_type, baseType: !375, size: 640, elements: !786)
!786 = !{!787}
!787 = !DISubrange(count: 80)
!788 = !DIDerivedType(tag: DW_TAG_member, name: "font_path_ui", scope: !641, file: !163, line: 532, baseType: !478, size: 8192, offset: 78976)
!789 = !DIDerivedType(tag: DW_TAG_member, name: "compute_device_type", scope: !641, file: !163, line: 534, baseType: !98, size: 32, offset: 87168)
!790 = !DIDerivedType(tag: DW_TAG_member, name: "compute_device_id", scope: !641, file: !163, line: 535, baseType: !98, size: 32, offset: 87200)
!791 = !DIDerivedType(tag: DW_TAG_member, name: "fcu_inactive_alpha", scope: !641, file: !163, line: 537, baseType: !396, size: 32, offset: 87232)
!792 = !DIDerivedType(tag: DW_TAG_member, name: "pixelsize", scope: !641, file: !163, line: 538, baseType: !396, size: 32, offset: 87264)
!793 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_pixel", scope: !641, file: !163, line: 539, baseType: !98, size: 32, offset: 87296)
!794 = !DIDerivedType(tag: DW_TAG_member, name: "pie_interaction_type", scope: !641, file: !163, line: 541, baseType: !399, size: 16, offset: 87328)
!795 = !DIDerivedType(tag: DW_TAG_member, name: "pie_initial_timeout", scope: !641, file: !163, line: 543, baseType: !399, size: 16, offset: 87344)
!796 = !DIDerivedType(tag: DW_TAG_member, name: "pie_animation_timeout", scope: !641, file: !163, line: 545, baseType: !399, size: 16, offset: 87360)
!797 = !DIDerivedType(tag: DW_TAG_member, name: "pie_menu_confirm", scope: !641, file: !163, line: 546, baseType: !399, size: 16, offset: 87376)
!798 = !DIDerivedType(tag: DW_TAG_member, name: "pie_menu_radius", scope: !641, file: !163, line: 547, baseType: !399, size: 16, offset: 87392)
!799 = !DIDerivedType(tag: DW_TAG_member, name: "pie_menu_threshold", scope: !641, file: !163, line: 548, baseType: !399, size: 16, offset: 87408)
!800 = !DIDerivedType(tag: DW_TAG_member, name: "walk_navigation", scope: !641, file: !163, line: 550, baseType: !801, size: 256, offset: 87424)
!801 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "WalkNavigation", file: !163, line: 410, size: 256, elements: !802)
!802 = !{!803, !804, !805, !806, !807, !808, !809, !810}
!803 = !DIDerivedType(tag: DW_TAG_member, name: "mouse_speed", scope: !801, file: !163, line: 411, baseType: !396, size: 32)
!804 = !DIDerivedType(tag: DW_TAG_member, name: "walk_speed", scope: !801, file: !163, line: 412, baseType: !396, size: 32, offset: 32)
!805 = !DIDerivedType(tag: DW_TAG_member, name: "walk_speed_factor", scope: !801, file: !163, line: 413, baseType: !396, size: 32, offset: 64)
!806 = !DIDerivedType(tag: DW_TAG_member, name: "view_height", scope: !801, file: !163, line: 414, baseType: !396, size: 32, offset: 96)
!807 = !DIDerivedType(tag: DW_TAG_member, name: "jump_height", scope: !801, file: !163, line: 415, baseType: !396, size: 32, offset: 128)
!808 = !DIDerivedType(tag: DW_TAG_member, name: "teleport_time", scope: !801, file: !163, line: 416, baseType: !396, size: 32, offset: 160)
!809 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !801, file: !163, line: 417, baseType: !399, size: 16, offset: 192)
!810 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !801, file: !163, line: 418, baseType: !811, size: 48, offset: 208)
!811 = !DICompositeType(tag: DW_TAG_array_type, baseType: !399, size: 48, elements: !416)
!812 = !DIDerivedType(tag: DW_TAG_member, name: "winpos", scope: !570, file: !34, line: 64, baseType: !98, size: 32, offset: 128)
!813 = !DIDerivedType(tag: DW_TAG_member, name: "fileflags", scope: !570, file: !34, line: 65, baseType: !98, size: 32, offset: 160)
!814 = !DIDerivedType(tag: DW_TAG_member, name: "displaymode", scope: !570, file: !34, line: 66, baseType: !98, size: 32, offset: 192)
!815 = !DIDerivedType(tag: DW_TAG_member, name: "globalf", scope: !570, file: !34, line: 67, baseType: !98, size: 32, offset: 224)
!816 = !DIDerivedType(tag: DW_TAG_member, name: "filename", scope: !570, file: !34, line: 68, baseType: !478, size: 8192, offset: 256)
!817 = !DIDerivedType(tag: DW_TAG_member, name: "curscreen", scope: !570, file: !34, line: 70, baseType: !818, size: 64, offset: 8448)
!818 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !819, size: 64)
!819 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bScreen", file: !86, line: 49, size: 1984, elements: !820)
!820 = !{!821, !822, !823, !824, !825, !826, !4367, !4368, !4369, !4370, !4371, !4372, !4373, !4374, !4375, !4376, !4377, !4378, !4379, !4380, !4381, !4382, !4383}
!821 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !819, file: !86, line: 50, baseType: !427, size: 960)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "vertbase", scope: !819, file: !86, line: 52, baseType: !388, size: 128, offset: 960)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "edgebase", scope: !819, file: !86, line: 53, baseType: !388, size: 128, offset: 1088)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "areabase", scope: !819, file: !86, line: 54, baseType: !388, size: 128, offset: 1216)
!825 = !DIDerivedType(tag: DW_TAG_member, name: "regionbase", scope: !819, file: !86, line: 55, baseType: !388, size: 128, offset: 1344)
!826 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !819, file: !86, line: 57, baseType: !827, size: 64, offset: 1472)
!827 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !828, size: 64)
!828 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Scene", file: !829, line: 1216, size: 39680, elements: !830)
!829 = !DIFile(filename: "blender/source/blender/makesdna/DNA_scene_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!830 = !{!831, !832, !901, !902, !1934, !1935, !1936, !1948, !1949, !1950, !1951, !1952, !1953, !1954, !1955, !1956, !1957, !1958, !1959, !1960, !2329, !2659, !2662, !2929, !2941, !2942, !2943, !2944, !2945, !2946, !2947, !2948, !2951, !2952, !2953, !2954, !2955, !2963, !3029, !3036, !3037, !3044, !3045, !3046, !3047, !3048, !3049, !3050}
!831 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !828, file: !829, line: 1217, baseType: !427, size: 960)
!832 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !828, file: !829, line: 1218, baseType: !833, size: 64, offset: 960)
!833 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !834, size: 64)
!834 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AnimData", file: !835, line: 838, size: 768, elements: !836)
!835 = !DIFile(filename: "blender/source/blender/makesdna/DNA_anim_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!836 = !{!837, !851, !852, !862, !863, !894, !895, !896, !897, !898, !899, !900}
!837 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !834, file: !835, line: 840, baseType: !838, size: 64)
!838 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !839, size: 64)
!839 = !DIDerivedType(tag: DW_TAG_typedef, name: "bAction", file: !544, line: 499, baseType: !840)
!840 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bAction", file: !544, line: 486, size: 1600, elements: !841)
!841 = !{!842, !843, !844, !845, !846, !847, !848, !849, !850}
!842 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !840, file: !544, line: 487, baseType: !427, size: 960)
!843 = !DIDerivedType(tag: DW_TAG_member, name: "curves", scope: !840, file: !544, line: 489, baseType: !388, size: 128, offset: 960)
!844 = !DIDerivedType(tag: DW_TAG_member, name: "chanbase", scope: !840, file: !544, line: 490, baseType: !388, size: 128, offset: 1088)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !840, file: !544, line: 491, baseType: !388, size: 128, offset: 1216)
!846 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !840, file: !544, line: 492, baseType: !388, size: 128, offset: 1344)
!847 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !840, file: !544, line: 494, baseType: !98, size: 32, offset: 1472)
!848 = !DIDerivedType(tag: DW_TAG_member, name: "active_marker", scope: !840, file: !544, line: 495, baseType: !98, size: 32, offset: 1504)
!849 = !DIDerivedType(tag: DW_TAG_member, name: "idroot", scope: !840, file: !544, line: 497, baseType: !98, size: 32, offset: 1536)
!850 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !840, file: !544, line: 498, baseType: !98, size: 32, offset: 1568)
!851 = !DIDerivedType(tag: DW_TAG_member, name: "tmpact", scope: !834, file: !835, line: 844, baseType: !838, size: 64, offset: 64)
!852 = !DIDerivedType(tag: DW_TAG_member, name: "remap", scope: !834, file: !835, line: 848, baseType: !853, size: 64, offset: 128)
!853 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !854, size: 64)
!854 = !DIDerivedType(tag: DW_TAG_typedef, name: "AnimMapper", file: !835, line: 549, baseType: !855)
!855 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AnimMapper", file: !835, line: 544, size: 320, elements: !856)
!856 = !{!857, !859, !860, !861}
!857 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !855, file: !835, line: 545, baseType: !858, size: 64)
!858 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !855, size: 64)
!859 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !855, file: !835, line: 545, baseType: !858, size: 64, offset: 64)
!860 = !DIDerivedType(tag: DW_TAG_member, name: "target", scope: !855, file: !835, line: 547, baseType: !838, size: 64, offset: 128)
!861 = !DIDerivedType(tag: DW_TAG_member, name: "mappings", scope: !855, file: !835, line: 548, baseType: !388, size: 128, offset: 192)
!862 = !DIDerivedType(tag: DW_TAG_member, name: "nla_tracks", scope: !834, file: !835, line: 851, baseType: !388, size: 128, offset: 192)
!863 = !DIDerivedType(tag: DW_TAG_member, name: "actstrip", scope: !834, file: !835, line: 853, baseType: !864, size: 64, offset: 320)
!864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !865, size: 64)
!865 = !DIDerivedType(tag: DW_TAG_typedef, name: "NlaStrip", file: !835, line: 594, baseType: !866)
!866 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "NlaStrip", file: !835, line: 561, size: 1664, elements: !867)
!867 = !{!868, !870, !871, !872, !873, !874, !875, !876, !877, !878, !879, !880, !881, !882, !883, !884, !885, !886, !887, !888, !889, !890, !891, !892, !893}
!868 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !866, file: !835, line: 562, baseType: !869, size: 64)
!869 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !866, size: 64)
!870 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !866, file: !835, line: 562, baseType: !869, size: 64, offset: 64)
!871 = !DIDerivedType(tag: DW_TAG_member, name: "strips", scope: !866, file: !835, line: 564, baseType: !388, size: 128, offset: 128)
!872 = !DIDerivedType(tag: DW_TAG_member, name: "act", scope: !866, file: !835, line: 565, baseType: !838, size: 64, offset: 256)
!873 = !DIDerivedType(tag: DW_TAG_member, name: "remap", scope: !866, file: !835, line: 566, baseType: !853, size: 64, offset: 320)
!874 = !DIDerivedType(tag: DW_TAG_member, name: "fcurves", scope: !866, file: !835, line: 568, baseType: !388, size: 128, offset: 384)
!875 = !DIDerivedType(tag: DW_TAG_member, name: "modifiers", scope: !866, file: !835, line: 569, baseType: !388, size: 128, offset: 512)
!876 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !866, file: !835, line: 571, baseType: !692, size: 512, offset: 640)
!877 = !DIDerivedType(tag: DW_TAG_member, name: "influence", scope: !866, file: !835, line: 573, baseType: !396, size: 32, offset: 1152)
!878 = !DIDerivedType(tag: DW_TAG_member, name: "strip_time", scope: !866, file: !835, line: 574, baseType: !396, size: 32, offset: 1184)
!879 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !866, file: !835, line: 576, baseType: !396, size: 32, offset: 1216)
!880 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !866, file: !835, line: 576, baseType: !396, size: 32, offset: 1248)
!881 = !DIDerivedType(tag: DW_TAG_member, name: "actstart", scope: !866, file: !835, line: 577, baseType: !396, size: 32, offset: 1280)
!882 = !DIDerivedType(tag: DW_TAG_member, name: "actend", scope: !866, file: !835, line: 577, baseType: !396, size: 32, offset: 1312)
!883 = !DIDerivedType(tag: DW_TAG_member, name: "repeat", scope: !866, file: !835, line: 579, baseType: !396, size: 32, offset: 1344)
!884 = !DIDerivedType(tag: DW_TAG_member, name: "scale", scope: !866, file: !835, line: 580, baseType: !396, size: 32, offset: 1376)
!885 = !DIDerivedType(tag: DW_TAG_member, name: "blendin", scope: !866, file: !835, line: 582, baseType: !396, size: 32, offset: 1408)
!886 = !DIDerivedType(tag: DW_TAG_member, name: "blendout", scope: !866, file: !835, line: 582, baseType: !396, size: 32, offset: 1440)
!887 = !DIDerivedType(tag: DW_TAG_member, name: "blendmode", scope: !866, file: !835, line: 583, baseType: !399, size: 16, offset: 1472)
!888 = !DIDerivedType(tag: DW_TAG_member, name: "extendmode", scope: !866, file: !835, line: 585, baseType: !399, size: 16, offset: 1488)
!889 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !866, file: !835, line: 586, baseType: !399, size: 16, offset: 1504)
!890 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !866, file: !835, line: 588, baseType: !399, size: 16, offset: 1520)
!891 = !DIDerivedType(tag: DW_TAG_member, name: "speaker_handle", scope: !866, file: !835, line: 590, baseType: !372, size: 64, offset: 1536)
!892 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !866, file: !835, line: 592, baseType: !98, size: 32, offset: 1600)
!893 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !866, file: !835, line: 593, baseType: !98, size: 32, offset: 1632)
!894 = !DIDerivedType(tag: DW_TAG_member, name: "drivers", scope: !834, file: !835, line: 858, baseType: !388, size: 128, offset: 384)
!895 = !DIDerivedType(tag: DW_TAG_member, name: "overrides", scope: !834, file: !835, line: 859, baseType: !388, size: 128, offset: 512)
!896 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !834, file: !835, line: 862, baseType: !98, size: 32, offset: 640)
!897 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !834, file: !835, line: 863, baseType: !98, size: 32, offset: 672)
!898 = !DIDerivedType(tag: DW_TAG_member, name: "act_blendmode", scope: !834, file: !835, line: 866, baseType: !399, size: 16, offset: 704)
!899 = !DIDerivedType(tag: DW_TAG_member, name: "act_extendmode", scope: !834, file: !835, line: 867, baseType: !399, size: 16, offset: 720)
!900 = !DIDerivedType(tag: DW_TAG_member, name: "act_influence", scope: !834, file: !835, line: 868, baseType: !396, size: 32, offset: 736)
!901 = !DIDerivedType(tag: DW_TAG_member, name: "camera", scope: !828, file: !829, line: 1220, baseType: !423, size: 64, offset: 1024)
!902 = !DIDerivedType(tag: DW_TAG_member, name: "world", scope: !828, file: !829, line: 1221, baseType: !903, size: 64, offset: 1088)
!903 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !904, size: 64)
!904 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "World", file: !905, line: 52, size: 4224, elements: !906)
!905 = !DIFile(filename: "blender/source/blender/makesdna/DNA_world_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!906 = !{!907, !908, !909, !910, !911, !912, !913, !914, !915, !916, !917, !918, !919, !920, !921, !922, !923, !924, !925, !926, !927, !928, !929, !930, !931, !932, !933, !934, !935, !936, !937, !938, !939, !940, !941, !942, !943, !944, !945, !946, !947, !948, !949, !950, !951, !952, !953, !954, !955, !956, !957, !958, !959, !960, !961, !962, !963, !964, !965, !966, !967, !968, !969, !970, !971, !972, !973, !974, !976, !977, !980, !1929, !1930, !1931, !1932, !1933}
!907 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !904, file: !905, line: 53, baseType: !427, size: 960)
!908 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !904, file: !905, line: 54, baseType: !833, size: 64, offset: 960)
!909 = !DIDerivedType(tag: DW_TAG_member, name: "colormodel", scope: !904, file: !905, line: 56, baseType: !399, size: 16, offset: 1024)
!910 = !DIDerivedType(tag: DW_TAG_member, name: "totex", scope: !904, file: !905, line: 56, baseType: !399, size: 16, offset: 1040)
!911 = !DIDerivedType(tag: DW_TAG_member, name: "texact", scope: !904, file: !905, line: 57, baseType: !399, size: 16, offset: 1056)
!912 = !DIDerivedType(tag: DW_TAG_member, name: "mistype", scope: !904, file: !905, line: 57, baseType: !399, size: 16, offset: 1072)
!913 = !DIDerivedType(tag: DW_TAG_member, name: "horr", scope: !904, file: !905, line: 59, baseType: !396, size: 32, offset: 1088)
!914 = !DIDerivedType(tag: DW_TAG_member, name: "horg", scope: !904, file: !905, line: 59, baseType: !396, size: 32, offset: 1120)
!915 = !DIDerivedType(tag: DW_TAG_member, name: "horb", scope: !904, file: !905, line: 59, baseType: !396, size: 32, offset: 1152)
!916 = !DIDerivedType(tag: DW_TAG_member, name: "zenr", scope: !904, file: !905, line: 60, baseType: !396, size: 32, offset: 1184)
!917 = !DIDerivedType(tag: DW_TAG_member, name: "zeng", scope: !904, file: !905, line: 60, baseType: !396, size: 32, offset: 1216)
!918 = !DIDerivedType(tag: DW_TAG_member, name: "zenb", scope: !904, file: !905, line: 60, baseType: !396, size: 32, offset: 1248)
!919 = !DIDerivedType(tag: DW_TAG_member, name: "ambr", scope: !904, file: !905, line: 61, baseType: !396, size: 32, offset: 1280)
!920 = !DIDerivedType(tag: DW_TAG_member, name: "ambg", scope: !904, file: !905, line: 61, baseType: !396, size: 32, offset: 1312)
!921 = !DIDerivedType(tag: DW_TAG_member, name: "ambb", scope: !904, file: !905, line: 61, baseType: !396, size: 32, offset: 1344)
!922 = !DIDerivedType(tag: DW_TAG_member, name: "exposure", scope: !904, file: !905, line: 68, baseType: !396, size: 32, offset: 1376)
!923 = !DIDerivedType(tag: DW_TAG_member, name: "exp", scope: !904, file: !905, line: 68, baseType: !396, size: 32, offset: 1408)
!924 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !904, file: !905, line: 68, baseType: !396, size: 32, offset: 1440)
!925 = !DIDerivedType(tag: DW_TAG_member, name: "linfac", scope: !904, file: !905, line: 69, baseType: !396, size: 32, offset: 1472)
!926 = !DIDerivedType(tag: DW_TAG_member, name: "logfac", scope: !904, file: !905, line: 69, baseType: !396, size: 32, offset: 1504)
!927 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !904, file: !905, line: 74, baseType: !396, size: 32, offset: 1536)
!928 = !DIDerivedType(tag: DW_TAG_member, name: "activityBoxRadius", scope: !904, file: !905, line: 79, baseType: !396, size: 32, offset: 1568)
!929 = !DIDerivedType(tag: DW_TAG_member, name: "skytype", scope: !904, file: !905, line: 81, baseType: !399, size: 16, offset: 1600)
!930 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !904, file: !905, line: 91, baseType: !399, size: 16, offset: 1616)
!931 = !DIDerivedType(tag: DW_TAG_member, name: "occlusionRes", scope: !904, file: !905, line: 92, baseType: !399, size: 16, offset: 1632)
!932 = !DIDerivedType(tag: DW_TAG_member, name: "physicsEngine", scope: !904, file: !905, line: 93, baseType: !399, size: 16, offset: 1648)
!933 = !DIDerivedType(tag: DW_TAG_member, name: "ticrate", scope: !904, file: !905, line: 94, baseType: !399, size: 16, offset: 1664)
!934 = !DIDerivedType(tag: DW_TAG_member, name: "maxlogicstep", scope: !904, file: !905, line: 94, baseType: !399, size: 16, offset: 1680)
!935 = !DIDerivedType(tag: DW_TAG_member, name: "physubstep", scope: !904, file: !905, line: 94, baseType: !399, size: 16, offset: 1696)
!936 = !DIDerivedType(tag: DW_TAG_member, name: "maxphystep", scope: !904, file: !905, line: 94, baseType: !399, size: 16, offset: 1712)
!937 = !DIDerivedType(tag: DW_TAG_member, name: "misi", scope: !904, file: !905, line: 96, baseType: !396, size: 32, offset: 1728)
!938 = !DIDerivedType(tag: DW_TAG_member, name: "miststa", scope: !904, file: !905, line: 96, baseType: !396, size: 32, offset: 1760)
!939 = !DIDerivedType(tag: DW_TAG_member, name: "mistdist", scope: !904, file: !905, line: 96, baseType: !396, size: 32, offset: 1792)
!940 = !DIDerivedType(tag: DW_TAG_member, name: "misthi", scope: !904, file: !905, line: 96, baseType: !396, size: 32, offset: 1824)
!941 = !DIDerivedType(tag: DW_TAG_member, name: "starr", scope: !904, file: !905, line: 98, baseType: !396, size: 32, offset: 1856)
!942 = !DIDerivedType(tag: DW_TAG_member, name: "starg", scope: !904, file: !905, line: 98, baseType: !396, size: 32, offset: 1888)
!943 = !DIDerivedType(tag: DW_TAG_member, name: "starb", scope: !904, file: !905, line: 98, baseType: !396, size: 32, offset: 1920)
!944 = !DIDerivedType(tag: DW_TAG_member, name: "stark", scope: !904, file: !905, line: 98, baseType: !396, size: 32, offset: 1952)
!945 = !DIDerivedType(tag: DW_TAG_member, name: "starsize", scope: !904, file: !905, line: 99, baseType: !396, size: 32, offset: 1984)
!946 = !DIDerivedType(tag: DW_TAG_member, name: "starmindist", scope: !904, file: !905, line: 99, baseType: !396, size: 32, offset: 2016)
!947 = !DIDerivedType(tag: DW_TAG_member, name: "stardist", scope: !904, file: !905, line: 100, baseType: !396, size: 32, offset: 2048)
!948 = !DIDerivedType(tag: DW_TAG_member, name: "starcolnoise", scope: !904, file: !905, line: 100, baseType: !396, size: 32, offset: 2080)
!949 = !DIDerivedType(tag: DW_TAG_member, name: "dofsta", scope: !904, file: !905, line: 103, baseType: !399, size: 16, offset: 2112)
!950 = !DIDerivedType(tag: DW_TAG_member, name: "dofend", scope: !904, file: !905, line: 103, baseType: !399, size: 16, offset: 2128)
!951 = !DIDerivedType(tag: DW_TAG_member, name: "dofmin", scope: !904, file: !905, line: 103, baseType: !399, size: 16, offset: 2144)
!952 = !DIDerivedType(tag: DW_TAG_member, name: "dofmax", scope: !904, file: !905, line: 103, baseType: !399, size: 16, offset: 2160)
!953 = !DIDerivedType(tag: DW_TAG_member, name: "aodist", scope: !904, file: !905, line: 106, baseType: !396, size: 32, offset: 2176)
!954 = !DIDerivedType(tag: DW_TAG_member, name: "aodistfac", scope: !904, file: !905, line: 106, baseType: !396, size: 32, offset: 2208)
!955 = !DIDerivedType(tag: DW_TAG_member, name: "aoenergy", scope: !904, file: !905, line: 106, baseType: !396, size: 32, offset: 2240)
!956 = !DIDerivedType(tag: DW_TAG_member, name: "aobias", scope: !904, file: !905, line: 106, baseType: !396, size: 32, offset: 2272)
!957 = !DIDerivedType(tag: DW_TAG_member, name: "aomode", scope: !904, file: !905, line: 107, baseType: !399, size: 16, offset: 2304)
!958 = !DIDerivedType(tag: DW_TAG_member, name: "aosamp", scope: !904, file: !905, line: 107, baseType: !399, size: 16, offset: 2320)
!959 = !DIDerivedType(tag: DW_TAG_member, name: "aomix", scope: !904, file: !905, line: 107, baseType: !399, size: 16, offset: 2336)
!960 = !DIDerivedType(tag: DW_TAG_member, name: "aocolor", scope: !904, file: !905, line: 107, baseType: !399, size: 16, offset: 2352)
!961 = !DIDerivedType(tag: DW_TAG_member, name: "ao_adapt_thresh", scope: !904, file: !905, line: 108, baseType: !396, size: 32, offset: 2368)
!962 = !DIDerivedType(tag: DW_TAG_member, name: "ao_adapt_speed_fac", scope: !904, file: !905, line: 108, baseType: !396, size: 32, offset: 2400)
!963 = !DIDerivedType(tag: DW_TAG_member, name: "ao_approx_error", scope: !904, file: !905, line: 109, baseType: !396, size: 32, offset: 2432)
!964 = !DIDerivedType(tag: DW_TAG_member, name: "ao_approx_correction", scope: !904, file: !905, line: 109, baseType: !396, size: 32, offset: 2464)
!965 = !DIDerivedType(tag: DW_TAG_member, name: "ao_indirect_energy", scope: !904, file: !905, line: 110, baseType: !396, size: 32, offset: 2496)
!966 = !DIDerivedType(tag: DW_TAG_member, name: "ao_env_energy", scope: !904, file: !905, line: 110, baseType: !396, size: 32, offset: 2528)
!967 = !DIDerivedType(tag: DW_TAG_member, name: "ao_pad2", scope: !904, file: !905, line: 110, baseType: !396, size: 32, offset: 2560)
!968 = !DIDerivedType(tag: DW_TAG_member, name: "ao_indirect_bounces", scope: !904, file: !905, line: 111, baseType: !399, size: 16, offset: 2592)
!969 = !DIDerivedType(tag: DW_TAG_member, name: "ao_pad", scope: !904, file: !905, line: 111, baseType: !399, size: 16, offset: 2608)
!970 = !DIDerivedType(tag: DW_TAG_member, name: "ao_samp_method", scope: !904, file: !905, line: 112, baseType: !399, size: 16, offset: 2624)
!971 = !DIDerivedType(tag: DW_TAG_member, name: "ao_gather_method", scope: !904, file: !905, line: 112, baseType: !399, size: 16, offset: 2640)
!972 = !DIDerivedType(tag: DW_TAG_member, name: "ao_approx_passes", scope: !904, file: !905, line: 112, baseType: !399, size: 16, offset: 2656)
!973 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !904, file: !905, line: 115, baseType: !399, size: 16, offset: 2672)
!974 = !DIDerivedType(tag: DW_TAG_member, name: "aosphere", scope: !904, file: !905, line: 118, baseType: !975, size: 64, offset: 2688)
!975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !396, size: 64)
!976 = !DIDerivedType(tag: DW_TAG_member, name: "aotables", scope: !904, file: !905, line: 118, baseType: !975, size: 64, offset: 2752)
!977 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !904, file: !905, line: 121, baseType: !978, size: 64, offset: 2816)
!978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !979, size: 64)
!979 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ipo", file: !754, line: 46, flags: DIFlagFwdDecl)
!980 = !DIDerivedType(tag: DW_TAG_member, name: "mtex", scope: !904, file: !905, line: 122, baseType: !981, size: 1152, offset: 2880)
!981 = !DICompositeType(tag: DW_TAG_array_type, baseType: !982, size: 1152, elements: !1927)
!982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !983, size: 64)
!983 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MTex", file: !754, line: 57, size: 2496, elements: !984)
!984 = !{!985, !986, !987, !988, !989, !990, !1868, !1869, !1870, !1871, !1872, !1873, !1874, !1875, !1876, !1877, !1878, !1879, !1880, !1881, !1882, !1883, !1884, !1885, !1886, !1887, !1888, !1889, !1890, !1891, !1892, !1893, !1894, !1895, !1896, !1897, !1898, !1899, !1900, !1901, !1902, !1903, !1904, !1905, !1906, !1907, !1908, !1909, !1910, !1911, !1912, !1913, !1914, !1915, !1916, !1917, !1918, !1919, !1920, !1921, !1922, !1923, !1924, !1925, !1926}
!985 = !DIDerivedType(tag: DW_TAG_member, name: "texco", scope: !983, file: !754, line: 59, baseType: !399, size: 16)
!986 = !DIDerivedType(tag: DW_TAG_member, name: "mapto", scope: !983, file: !754, line: 59, baseType: !399, size: 16, offset: 16)
!987 = !DIDerivedType(tag: DW_TAG_member, name: "maptoneg", scope: !983, file: !754, line: 59, baseType: !399, size: 16, offset: 32)
!988 = !DIDerivedType(tag: DW_TAG_member, name: "blendtype", scope: !983, file: !754, line: 59, baseType: !399, size: 16, offset: 48)
!989 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !983, file: !754, line: 60, baseType: !423, size: 64, offset: 64)
!990 = !DIDerivedType(tag: DW_TAG_member, name: "tex", scope: !983, file: !754, line: 61, baseType: !991, size: 64, offset: 128)
!991 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !992, size: 64)
!992 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Tex", file: !754, line: 202, size: 3328, elements: !993)
!993 = !{!994, !995, !996, !997, !998, !999, !1000, !1001, !1002, !1003, !1004, !1005, !1006, !1007, !1008, !1009, !1010, !1011, !1012, !1013, !1014, !1015, !1016, !1017, !1018, !1019, !1020, !1021, !1022, !1023, !1024, !1025, !1026, !1027, !1028, !1029, !1030, !1031, !1032, !1033, !1034, !1035, !1036, !1037, !1038, !1039, !1040, !1041, !1042, !1043, !1044, !1045, !1063, !1653, !1654, !1739, !1741, !1769, !1770, !1837, !1858, !1866, !1867}
!994 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !992, file: !754, line: 203, baseType: !427, size: 960)
!995 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !992, file: !754, line: 204, baseType: !833, size: 64, offset: 960)
!996 = !DIDerivedType(tag: DW_TAG_member, name: "noisesize", scope: !992, file: !754, line: 206, baseType: !396, size: 32, offset: 1024)
!997 = !DIDerivedType(tag: DW_TAG_member, name: "turbul", scope: !992, file: !754, line: 206, baseType: !396, size: 32, offset: 1056)
!998 = !DIDerivedType(tag: DW_TAG_member, name: "bright", scope: !992, file: !754, line: 207, baseType: !396, size: 32, offset: 1088)
!999 = !DIDerivedType(tag: DW_TAG_member, name: "contrast", scope: !992, file: !754, line: 207, baseType: !396, size: 32, offset: 1120)
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "saturation", scope: !992, file: !754, line: 207, baseType: !396, size: 32, offset: 1152)
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "rfac", scope: !992, file: !754, line: 207, baseType: !396, size: 32, offset: 1184)
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "gfac", scope: !992, file: !754, line: 207, baseType: !396, size: 32, offset: 1216)
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "bfac", scope: !992, file: !754, line: 207, baseType: !396, size: 32, offset: 1248)
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "filtersize", scope: !992, file: !754, line: 208, baseType: !396, size: 32, offset: 1280)
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !992, file: !754, line: 208, baseType: !396, size: 32, offset: 1312)
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "mg_H", scope: !992, file: !754, line: 211, baseType: !396, size: 32, offset: 1344)
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "mg_lacunarity", scope: !992, file: !754, line: 211, baseType: !396, size: 32, offset: 1376)
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "mg_octaves", scope: !992, file: !754, line: 211, baseType: !396, size: 32, offset: 1408)
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "mg_offset", scope: !992, file: !754, line: 211, baseType: !396, size: 32, offset: 1440)
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "mg_gain", scope: !992, file: !754, line: 211, baseType: !396, size: 32, offset: 1472)
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "dist_amount", scope: !992, file: !754, line: 214, baseType: !396, size: 32, offset: 1504)
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "ns_outscale", scope: !992, file: !754, line: 214, baseType: !396, size: 32, offset: 1536)
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "vn_w1", scope: !992, file: !754, line: 217, baseType: !396, size: 32, offset: 1568)
!1014 = !DIDerivedType(tag: DW_TAG_member, name: "vn_w2", scope: !992, file: !754, line: 218, baseType: !396, size: 32, offset: 1600)
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "vn_w3", scope: !992, file: !754, line: 219, baseType: !396, size: 32, offset: 1632)
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "vn_w4", scope: !992, file: !754, line: 220, baseType: !396, size: 32, offset: 1664)
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "vn_mexp", scope: !992, file: !754, line: 221, baseType: !396, size: 32, offset: 1696)
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "vn_distm", scope: !992, file: !754, line: 222, baseType: !399, size: 16, offset: 1728)
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "vn_coltype", scope: !992, file: !754, line: 222, baseType: !399, size: 16, offset: 1744)
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "noisedepth", scope: !992, file: !754, line: 224, baseType: !399, size: 16, offset: 1760)
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "noisetype", scope: !992, file: !754, line: 224, baseType: !399, size: 16, offset: 1776)
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "noisebasis", scope: !992, file: !754, line: 227, baseType: !399, size: 16, offset: 1792)
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "noisebasis2", scope: !992, file: !754, line: 227, baseType: !399, size: 16, offset: 1808)
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "imaflag", scope: !992, file: !754, line: 229, baseType: !399, size: 16, offset: 1824)
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !992, file: !754, line: 229, baseType: !399, size: 16, offset: 1840)
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !992, file: !754, line: 230, baseType: !399, size: 16, offset: 1856)
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "stype", scope: !992, file: !754, line: 230, baseType: !399, size: 16, offset: 1872)
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "cropxmin", scope: !992, file: !754, line: 232, baseType: !396, size: 32, offset: 1888)
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "cropymin", scope: !992, file: !754, line: 232, baseType: !396, size: 32, offset: 1920)
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "cropxmax", scope: !992, file: !754, line: 232, baseType: !396, size: 32, offset: 1952)
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "cropymax", scope: !992, file: !754, line: 232, baseType: !396, size: 32, offset: 1984)
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "texfilter", scope: !992, file: !754, line: 233, baseType: !98, size: 32, offset: 2016)
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "afmax", scope: !992, file: !754, line: 234, baseType: !98, size: 32, offset: 2048)
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "xrepeat", scope: !992, file: !754, line: 235, baseType: !399, size: 16, offset: 2080)
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "yrepeat", scope: !992, file: !754, line: 235, baseType: !399, size: 16, offset: 2096)
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "extend", scope: !992, file: !754, line: 236, baseType: !399, size: 16, offset: 2112)
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "fie_ima", scope: !992, file: !754, line: 239, baseType: !399, size: 16, offset: 2128)
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !992, file: !754, line: 240, baseType: !98, size: 32, offset: 2144)
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "frames", scope: !992, file: !754, line: 241, baseType: !98, size: 32, offset: 2176)
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !992, file: !754, line: 241, baseType: !98, size: 32, offset: 2208)
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !992, file: !754, line: 241, baseType: !98, size: 32, offset: 2240)
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "checkerdist", scope: !992, file: !754, line: 243, baseType: !396, size: 32, offset: 2272)
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "nabla", scope: !992, file: !754, line: 243, baseType: !396, size: 32, offset: 2304)
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !992, file: !754, line: 244, baseType: !396, size: 32, offset: 2336)
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "iuser", scope: !992, file: !754, line: 246, baseType: !1046, size: 320, offset: 2368)
!1046 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImageUser", file: !1047, line: 50, size: 320, elements: !1048)
!1047 = !DIFile(filename: "blender/source/blender/makesdna/DNA_image_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1048 = !{!1049, !1050, !1051, !1052, !1053, !1054, !1055, !1056, !1057, !1058, !1059, !1060, !1061, !1062}
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !1046, file: !1047, line: 51, baseType: !827, size: 64)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !1046, file: !1047, line: 53, baseType: !98, size: 32, offset: 64)
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "frames", scope: !1046, file: !1047, line: 54, baseType: !98, size: 32, offset: 96)
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1046, file: !1047, line: 55, baseType: !98, size: 32, offset: 128)
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !1046, file: !1047, line: 55, baseType: !98, size: 32, offset: 160)
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "fie_ima", scope: !1046, file: !1047, line: 56, baseType: !375, size: 8, offset: 192)
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "cycl", scope: !1046, file: !1047, line: 56, baseType: !375, size: 8, offset: 200)
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !1046, file: !1047, line: 57, baseType: !375, size: 8, offset: 208)
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1046, file: !1047, line: 57, baseType: !375, size: 8, offset: 216)
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "multi_index", scope: !1046, file: !1047, line: 59, baseType: !399, size: 16, offset: 224)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "layer", scope: !1046, file: !1047, line: 59, baseType: !399, size: 16, offset: 240)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "pass", scope: !1046, file: !1047, line: 59, baseType: !399, size: 16, offset: 256)
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1046, file: !1047, line: 61, baseType: !399, size: 16, offset: 272)
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1046, file: !1047, line: 63, baseType: !98, size: 32, offset: 288)
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !992, file: !754, line: 248, baseType: !1064, size: 64, offset: 2688)
!1064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1065, size: 64)
!1065 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeTree", file: !56, line: 328, size: 3456, elements: !1066)
!1066 = !{!1067, !1068, !1069, !1602, !1603, !1604, !1605, !1606, !1607, !1608, !1609, !1610, !1611, !1612, !1613, !1614, !1615, !1616, !1617, !1618, !1619, !1620, !1621, !1622, !1623, !1631, !1632, !1633, !1636, !1640, !1644, !1648, !1649, !1650, !1651, !1652}
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1065, file: !56, line: 329, baseType: !427, size: 960)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !1065, file: !56, line: 330, baseType: !833, size: 64, offset: 960)
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "typeinfo", scope: !1065, file: !56, line: 332, baseType: !1070, size: 64, offset: 1024)
!1070 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1071, size: 64)
!1071 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeTreeType", file: !1072, line: 283, size: 4096, elements: !1073)
!1072 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_node.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1073 = !{!1074, !1075, !1076, !1077, !1078, !1079, !1083, !1571, !1579, !1583, !1589, !1593, !1594, !1595, !1596, !1600, !1601}
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1071, file: !1072, line: 284, baseType: !98, size: 32)
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !1071, file: !1072, line: 285, baseType: !692, size: 512, offset: 32)
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "ui_name", scope: !1071, file: !1072, line: 287, baseType: !692, size: 512, offset: 544)
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "ui_description", scope: !1071, file: !1072, line: 288, baseType: !630, size: 2048, offset: 1056)
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "ui_icon", scope: !1071, file: !1072, line: 289, baseType: !98, size: 32, offset: 3104)
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "free_cache", scope: !1071, file: !1072, line: 292, baseType: !1080, size: 64, offset: 3136)
!1080 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1081, size: 64)
!1081 = !DISubroutineType(types: !1082)
!1082 = !{null, !1064}
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "free_node_cache", scope: !1071, file: !1072, line: 293, baseType: !1084, size: 64, offset: 3200)
!1084 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1085, size: 64)
!1085 = !DISubroutineType(types: !1086)
!1086 = !{null, !1064, !1087}
!1087 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1088, size: 64)
!1088 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNode", file: !56, line: 167, size: 3712, elements: !1089)
!1089 = !{!1090, !1091, !1092, !1093, !1116, !1527, !1528, !1529, !1530, !1531, !1532, !1533, !1534, !1535, !1536, !1537, !1538, !1539, !1540, !1541, !1542, !1543, !1544, !1545, !1546, !1547, !1548, !1549, !1550, !1551, !1552, !1553, !1554, !1555, !1556, !1557, !1558, !1559, !1560, !1561, !1562, !1563, !1564, !1565, !1566, !1567, !1568}
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1088, file: !56, line: 168, baseType: !1087, size: 64)
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1088, file: !56, line: 168, baseType: !1087, size: 64, offset: 64)
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "new_node", scope: !1088, file: !56, line: 168, baseType: !1087, size: 64, offset: 128)
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "prop", scope: !1088, file: !56, line: 170, baseType: !1094, size: 64, offset: 192)
!1094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1095, size: 64)
!1095 = !DIDerivedType(tag: DW_TAG_typedef, name: "IDProperty", file: !428, line: 75, baseType: !1096)
!1096 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IDProperty", file: !428, line: 62, size: 1024, elements: !1097)
!1097 = !{!1098, !1100, !1101, !1102, !1103, !1104, !1105, !1106, !1114, !1115}
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1096, file: !428, line: 63, baseType: !1099, size: 64)
!1099 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1096, size: 64)
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1096, file: !428, line: 63, baseType: !1099, size: 64, offset: 64)
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1096, file: !428, line: 64, baseType: !375, size: 8, offset: 128)
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "subtype", scope: !1096, file: !428, line: 64, baseType: !375, size: 8, offset: 136)
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1096, file: !428, line: 65, baseType: !399, size: 16, offset: 144)
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1096, file: !428, line: 66, baseType: !692, size: 512, offset: 160)
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "saved", scope: !1096, file: !428, line: 67, baseType: !98, size: 32, offset: 672)
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1096, file: !428, line: 69, baseType: !1107, size: 256, offset: 704)
!1107 = !DIDerivedType(tag: DW_TAG_typedef, name: "IDPropertyData", file: !428, line: 60, baseType: !1108)
!1108 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IDPropertyData", file: !428, line: 48, size: 256, elements: !1109)
!1109 = !{!1110, !1111, !1112, !1113}
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !1108, file: !428, line: 49, baseType: !372, size: 64)
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !1108, file: !428, line: 58, baseType: !388, size: 128, offset: 64)
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1108, file: !428, line: 59, baseType: !98, size: 32, offset: 192)
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "val2", scope: !1108, file: !428, line: 59, baseType: !98, size: 32, offset: 224)
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1096, file: !428, line: 70, baseType: !98, size: 32, offset: 960)
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "totallen", scope: !1096, file: !428, line: 74, baseType: !98, size: 32, offset: 992)
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "typeinfo", scope: !1088, file: !56, line: 172, baseType: !1117, size: 64, offset: 256)
!1117 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1118, size: 64)
!1118 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeType", file: !1072, line: 144, size: 6016, elements: !1119)
!1119 = !{!1120, !1121, !1122, !1123, !1124, !1125, !1126, !1127, !1128, !1129, !1130, !1131, !1132, !1133, !1134, !1135, !1136, !1137, !1296, !1297, !1298, !1438, !1442, !1446, !1447, !1454, !1458, !1462, !1463, !1464, !1465, !1469, !1470, !1474, !1478, !1482, !1486, !1490, !1494, !1498, !1499, !1506, !1508, !1517, !1526}
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1118, file: !1072, line: 145, baseType: !372, size: 64)
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1118, file: !1072, line: 145, baseType: !372, size: 64, offset: 64)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "needs_free", scope: !1118, file: !1072, line: 146, baseType: !399, size: 16, offset: 128)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !1118, file: !1072, line: 148, baseType: !692, size: 512, offset: 144)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1118, file: !1072, line: 149, baseType: !98, size: 32, offset: 672)
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "ui_name", scope: !1118, file: !1072, line: 151, baseType: !692, size: 512, offset: 704)
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "ui_description", scope: !1118, file: !1072, line: 152, baseType: !630, size: 2048, offset: 1216)
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "ui_icon", scope: !1118, file: !1072, line: 153, baseType: !98, size: 32, offset: 3264)
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1118, file: !1072, line: 155, baseType: !396, size: 32, offset: 3296)
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "minwidth", scope: !1118, file: !1072, line: 155, baseType: !396, size: 32, offset: 3328)
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "maxwidth", scope: !1118, file: !1072, line: 155, baseType: !396, size: 32, offset: 3360)
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1118, file: !1072, line: 156, baseType: !396, size: 32, offset: 3392)
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "minheight", scope: !1118, file: !1072, line: 156, baseType: !396, size: 32, offset: 3424)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "maxheight", scope: !1118, file: !1072, line: 156, baseType: !396, size: 32, offset: 3456)
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "nclass", scope: !1118, file: !1072, line: 157, baseType: !399, size: 16, offset: 3488)
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1118, file: !1072, line: 157, baseType: !399, size: 16, offset: 3504)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "compatibility", scope: !1118, file: !1072, line: 157, baseType: !399, size: 16, offset: 3520)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "inputs", scope: !1118, file: !1072, line: 160, baseType: !1138, size: 64, offset: 3584)
!1138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1139, size: 64)
!1139 = !DIDerivedType(tag: DW_TAG_typedef, name: "bNodeSocketTemplate", file: !1072, line: 109, baseType: !1140)
!1140 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeSocketTemplate", file: !1072, line: 98, size: 1408, elements: !1141)
!1141 = !{!1142, !1143, !1144, !1145, !1146, !1147, !1148, !1149, !1150, !1151, !1152, !1153, !1295}
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1140, file: !1072, line: 99, baseType: !98, size: 32)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !1140, file: !1072, line: 99, baseType: !98, size: 32, offset: 32)
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1140, file: !1072, line: 100, baseType: !692, size: 512, offset: 64)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "val1", scope: !1140, file: !1072, line: 101, baseType: !396, size: 32, offset: 576)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "val2", scope: !1140, file: !1072, line: 101, baseType: !396, size: 32, offset: 608)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "val3", scope: !1140, file: !1072, line: 101, baseType: !396, size: 32, offset: 640)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "val4", scope: !1140, file: !1072, line: 101, baseType: !396, size: 32, offset: 672)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !1140, file: !1072, line: 102, baseType: !396, size: 32, offset: 704)
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !1140, file: !1072, line: 102, baseType: !396, size: 32, offset: 736)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "subtype", scope: !1140, file: !1072, line: 103, baseType: !98, size: 32, offset: 768)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1140, file: !1072, line: 104, baseType: !98, size: 32, offset: 800)
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "sock", scope: !1140, file: !1072, line: 107, baseType: !1154, size: 64, offset: 832)
!1154 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1155, size: 64)
!1155 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeSocket", file: !56, line: 87, size: 2816, elements: !1156)
!1156 = !{!1157, !1158, !1159, !1160, !1161, !1162, !1163, !1164, !1165, !1166, !1167, !1168, !1250, !1251, !1252, !1253, !1254, !1255, !1256, !1257, !1258, !1259, !1260, !1261, !1277}
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1155, file: !56, line: 88, baseType: !1154, size: 64)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1155, file: !56, line: 88, baseType: !1154, size: 64, offset: 64)
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "new_sock", scope: !1155, file: !56, line: 88, baseType: !1154, size: 64, offset: 128)
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "prop", scope: !1155, file: !56, line: 90, baseType: !1094, size: 64, offset: 192)
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "identifier", scope: !1155, file: !56, line: 92, baseType: !692, size: 512, offset: 256)
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1155, file: !56, line: 94, baseType: !692, size: 512, offset: 768)
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "storage", scope: !1155, file: !56, line: 99, baseType: !372, size: 64, offset: 1280)
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1155, file: !56, line: 101, baseType: !399, size: 16, offset: 1344)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1155, file: !56, line: 101, baseType: !399, size: 16, offset: 1360)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !1155, file: !56, line: 102, baseType: !399, size: 16, offset: 1376)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "in_out", scope: !1155, file: !56, line: 103, baseType: !399, size: 16, offset: 1392)
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "typeinfo", scope: !1155, file: !56, line: 104, baseType: !1169, size: 64, offset: 1408)
!1169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1170, size: 64)
!1170 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeSocketType", file: !1072, line: 114, size: 1600, elements: !1171)
!1171 = !{!1172, !1173, !1193, !1197, !1201, !1205, !1209, !1213, !1214, !1218, !1247, !1248, !1249}
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !1170, file: !1072, line: 115, baseType: !692, size: 512)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "draw", scope: !1170, file: !1072, line: 117, baseType: !1174, size: 64, offset: 512)
!1174 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1175, size: 64)
!1175 = !DISubroutineType(types: !1176)
!1176 = !{null, !1177, !1179, !1181, !1181, !373}
!1177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1178, size: 64)
!1178 = !DICompositeType(tag: DW_TAG_structure_type, name: "bContext", file: !44, line: 51, flags: DIFlagFwdDecl)
!1179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1180, size: 64)
!1180 = !DICompositeType(tag: DW_TAG_structure_type, name: "uiLayout", file: !86, line: 46, flags: DIFlagFwdDecl)
!1181 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1182, size: 64)
!1182 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PointerRNA", file: !1183, line: 55, size: 192, elements: !1184)
!1183 = !DIFile(filename: "blender/source/blender/makesrna/RNA_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1184 = !{!1185, !1189, !1192}
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1182, file: !1183, line: 58, baseType: !1186, size: 64)
!1186 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1182, file: !1183, line: 56, size: 64, elements: !1187)
!1187 = !{!1188}
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1186, file: !1183, line: 57, baseType: !372, size: 64)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1182, file: !1183, line: 60, baseType: !1190, size: 64, offset: 64)
!1190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1191, size: 64)
!1191 = !DICompositeType(tag: DW_TAG_structure_type, name: "StructRNA", file: !56, line: 335, flags: DIFlagFwdDecl)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1182, file: !1183, line: 61, baseType: !372, size: 64, offset: 128)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "draw_color", scope: !1170, file: !1072, line: 118, baseType: !1194, size: 64, offset: 576)
!1194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1195, size: 64)
!1195 = !DISubroutineType(types: !1196)
!1196 = !{null, !1177, !1181, !1181, !975}
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "interface_draw", scope: !1170, file: !1072, line: 120, baseType: !1198, size: 64, offset: 640)
!1198 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1199, size: 64)
!1199 = !DISubroutineType(types: !1200)
!1200 = !{null, !1177, !1179, !1181}
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "interface_draw_color", scope: !1170, file: !1072, line: 121, baseType: !1202, size: 64, offset: 704)
!1202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1203, size: 64)
!1203 = !DISubroutineType(types: !1204)
!1204 = !{null, !1177, !1181, !975}
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "interface_register_properties", scope: !1170, file: !1072, line: 122, baseType: !1206, size: 64, offset: 768)
!1206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1207, size: 64)
!1207 = !DISubroutineType(types: !1208)
!1208 = !{null, !1064, !1154, !1190}
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "interface_init_socket", scope: !1170, file: !1072, line: 123, baseType: !1210, size: 64, offset: 832)
!1210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1211, size: 64)
!1211 = !DISubroutineType(types: !1212)
!1212 = !{null, !1064, !1154, !1087, !1154, !373}
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "interface_verify_socket", scope: !1170, file: !1072, line: 124, baseType: !1210, size: 64, offset: 896)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "interface_from_socket", scope: !1170, file: !1072, line: 125, baseType: !1215, size: 64, offset: 960)
!1215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1216, size: 64)
!1216 = !DISubroutineType(types: !1217)
!1217 = !{null, !1064, !1154, !1087, !1154}
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "ext_socket", scope: !1170, file: !1072, line: 128, baseType: !1219, size: 256, offset: 1024)
!1219 = !DIDerivedType(tag: DW_TAG_typedef, name: "ExtensionRNA", file: !1183, line: 436, baseType: !1220)
!1220 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ExtensionRNA", file: !1183, line: 430, size: 256, elements: !1221)
!1221 = !{!1222, !1223, !1226, !1242}
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1220, file: !1183, line: 431, baseType: !372, size: 64)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "srna", scope: !1220, file: !1183, line: 432, baseType: !1224, size: 64, offset: 64)
!1224 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1225, size: 64)
!1225 = !DIDerivedType(tag: DW_TAG_typedef, name: "StructRNA", file: !1183, line: 417, baseType: !1191)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "call", scope: !1220, file: !1183, line: 433, baseType: !1227, size: 64, offset: 128)
!1227 = !DIDerivedType(tag: DW_TAG_typedef, name: "StructCallbackFunc", file: !1183, line: 408, baseType: !1228)
!1228 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1229, size: 64)
!1229 = !DISubroutineType(types: !1230)
!1230 = !{!98, !1177, !1181, !1231, !1233}
!1231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1232, size: 64)
!1232 = !DICompositeType(tag: DW_TAG_structure_type, name: "FunctionRNA", file: !1183, line: 38, flags: DIFlagFwdDecl)
!1233 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1234, size: 64)
!1234 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParameterList", file: !1183, line: 348, baseType: !1235)
!1235 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParameterList", file: !1183, line: 337, size: 256, elements: !1236)
!1236 = !{!1237, !1238, !1239, !1240, !1241}
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1235, file: !1183, line: 339, baseType: !372, size: 64)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1235, file: !1183, line: 342, baseType: !1231, size: 64, offset: 64)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_size", scope: !1235, file: !1183, line: 345, baseType: !98, size: 32, offset: 128)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "arg_count", scope: !1235, file: !1183, line: 347, baseType: !98, size: 32, offset: 160)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "ret_count", scope: !1235, file: !1183, line: 347, baseType: !98, size: 32, offset: 192)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !1220, file: !1183, line: 434, baseType: !1243, size: 64, offset: 192)
!1243 = !DIDerivedType(tag: DW_TAG_typedef, name: "StructFreeFunc", file: !1183, line: 409, baseType: !1244)
!1244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1245, size: 64)
!1245 = !DISubroutineType(types: !1246)
!1246 = !{null, !372}
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "ext_interface", scope: !1170, file: !1072, line: 129, baseType: !1219, size: 256, offset: 1280)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1170, file: !1072, line: 132, baseType: !98, size: 32, offset: 1536)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "subtype", scope: !1170, file: !1072, line: 132, baseType: !98, size: 32, offset: 1568)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !1155, file: !56, line: 105, baseType: !692, size: 512, offset: 1472)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "locx", scope: !1155, file: !56, line: 107, baseType: !396, size: 32, offset: 1984)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "locy", scope: !1155, file: !56, line: 107, baseType: !396, size: 32, offset: 2016)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "default_value", scope: !1155, file: !56, line: 109, baseType: !372, size: 64, offset: 2048)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "stack_index", scope: !1155, file: !56, line: 112, baseType: !399, size: 16, offset: 2112)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "stack_type", scope: !1155, file: !56, line: 114, baseType: !399, size: 16, offset: 2128)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1155, file: !56, line: 115, baseType: !98, size: 32, offset: 2144)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !1155, file: !56, line: 117, baseType: !372, size: 64, offset: 2176)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "own_index", scope: !1155, file: !56, line: 122, baseType: !98, size: 32, offset: 2240)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "to_index", scope: !1155, file: !56, line: 124, baseType: !98, size: 32, offset: 2272)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "groupsock", scope: !1155, file: !56, line: 126, baseType: !1154, size: 64, offset: 2304)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !1155, file: !56, line: 128, baseType: !1262, size: 64, offset: 2368)
!1262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1263, size: 64)
!1263 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeLink", file: !56, line: 298, size: 448, elements: !1264)
!1264 = !{!1265, !1266, !1267, !1270, !1271, !1274, !1275, !1276}
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1263, file: !56, line: 299, baseType: !1262, size: 64)
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1263, file: !56, line: 299, baseType: !1262, size: 64, offset: 64)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "fromnode", scope: !1263, file: !56, line: 301, baseType: !1268, size: 64, offset: 128)
!1268 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1269, size: 64)
!1269 = !DIDerivedType(tag: DW_TAG_typedef, name: "bNode", file: !56, line: 218, baseType: !1088)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "tonode", scope: !1263, file: !56, line: 301, baseType: !1268, size: 64, offset: 192)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "fromsock", scope: !1263, file: !56, line: 302, baseType: !1272, size: 64, offset: 256)
!1272 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1273, size: 64)
!1273 = !DIDerivedType(tag: DW_TAG_typedef, name: "bNodeSocket", file: !56, line: 132, baseType: !1155)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "tosock", scope: !1263, file: !56, line: 302, baseType: !1272, size: 64, offset: 320)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1263, file: !56, line: 304, baseType: !98, size: 32, offset: 384)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1263, file: !56, line: 305, baseType: !98, size: 32, offset: 416)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !1155, file: !56, line: 131, baseType: !1278, size: 384, offset: 2432)
!1278 = !DIDerivedType(tag: DW_TAG_typedef, name: "bNodeStack", file: !56, line: 73, baseType: !1279)
!1279 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeStack", file: !56, line: 62, size: 384, elements: !1280)
!1280 = !{!1281, !1282, !1283, !1284, !1285, !1286, !1287, !1288, !1289, !1290, !1291}
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1279, file: !56, line: 63, baseType: !408, size: 128)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !1279, file: !56, line: 64, baseType: !396, size: 32, offset: 128)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !1279, file: !56, line: 64, baseType: !396, size: 32, offset: 160)
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1279, file: !56, line: 65, baseType: !372, size: 64, offset: 192)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "hasinput", scope: !1279, file: !56, line: 66, baseType: !399, size: 16, offset: 256)
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "hasoutput", scope: !1279, file: !56, line: 67, baseType: !399, size: 16, offset: 272)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "datatype", scope: !1279, file: !56, line: 68, baseType: !399, size: 16, offset: 288)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "sockettype", scope: !1279, file: !56, line: 69, baseType: !399, size: 16, offset: 304)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "is_copy", scope: !1279, file: !56, line: 70, baseType: !399, size: 16, offset: 320)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "external", scope: !1279, file: !56, line: 71, baseType: !399, size: 16, offset: 336)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1279, file: !56, line: 72, baseType: !1292, size: 32, offset: 352)
!1292 = !DICompositeType(tag: DW_TAG_array_type, baseType: !399, size: 32, elements: !1293)
!1293 = !{!1294}
!1294 = !DISubrange(count: 2)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "identifier", scope: !1140, file: !1072, line: 108, baseType: !692, size: 512, offset: 896)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "outputs", scope: !1118, file: !1072, line: 160, baseType: !1138, size: 64, offset: 3648)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "storagename", scope: !1118, file: !1072, line: 162, baseType: !692, size: 512, offset: 3712)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "draw_nodetype", scope: !1118, file: !1072, line: 165, baseType: !1299, size: 64, offset: 4224)
!1299 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1300, size: 64)
!1300 = !DISubroutineType(types: !1301)
!1301 = !{null, !1302, !1304, !1390, !1064, !1087, !1434}
!1302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1303, size: 64)
!1303 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1178)
!1304 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1305, size: 64)
!1305 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ARegion", file: !86, line: 230, size: 3072, elements: !1306)
!1306 = !{!1307, !1308, !1309, !1360, !1361, !1362, !1363, !1364, !1365, !1366, !1367, !1368, !1369, !1370, !1371, !1372, !1373, !1374, !1375, !1376, !1377, !1380, !1381, !1382, !1383, !1384, !1385, !1386, !1387, !1388, !1389}
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1305, file: !86, line: 231, baseType: !1304, size: 64)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1305, file: !86, line: 231, baseType: !1304, size: 64, offset: 64)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "v2d", scope: !1305, file: !86, line: 233, baseType: !1310, size: 1280, offset: 128)
!1310 = !DIDerivedType(tag: DW_TAG_typedef, name: "View2D", file: !1311, line: 71, baseType: !1312)
!1311 = !DIFile(filename: "blender/source/blender/makesdna/DNA_view2d_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1312 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "View2D", file: !1311, line: 40, size: 1280, elements: !1313)
!1313 = !{!1314, !1323, !1324, !1332, !1333, !1334, !1336, !1337, !1338, !1339, !1340, !1341, !1342, !1343, !1344, !1345, !1346, !1347, !1348, !1349, !1350, !1351, !1352, !1353, !1354, !1357}
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "tot", scope: !1312, file: !1311, line: 41, baseType: !1315, size: 128)
!1315 = !DIDerivedType(tag: DW_TAG_typedef, name: "rctf", file: !1316, line: 95, baseType: !1317)
!1316 = !DIFile(filename: "blender/source/blender/makesdna/DNA_vec_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1317 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rctf", file: !1316, line: 92, size: 128, elements: !1318)
!1318 = !{!1319, !1320, !1321, !1322}
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "xmin", scope: !1317, file: !1316, line: 93, baseType: !396, size: 32)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "xmax", scope: !1317, file: !1316, line: 93, baseType: !396, size: 32, offset: 32)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "ymin", scope: !1317, file: !1316, line: 94, baseType: !396, size: 32, offset: 64)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "ymax", scope: !1317, file: !1316, line: 94, baseType: !396, size: 32, offset: 96)
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !1312, file: !1311, line: 41, baseType: !1315, size: 128, offset: 128)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "vert", scope: !1312, file: !1311, line: 42, baseType: !1325, size: 128, offset: 256)
!1325 = !DIDerivedType(tag: DW_TAG_typedef, name: "rcti", file: !1316, line: 89, baseType: !1326)
!1326 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcti", file: !1316, line: 86, size: 128, elements: !1327)
!1327 = !{!1328, !1329, !1330, !1331}
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "xmin", scope: !1326, file: !1316, line: 87, baseType: !98, size: 32)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "xmax", scope: !1326, file: !1316, line: 87, baseType: !98, size: 32, offset: 32)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "ymin", scope: !1326, file: !1316, line: 88, baseType: !98, size: 32, offset: 64)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "ymax", scope: !1326, file: !1316, line: 88, baseType: !98, size: 32, offset: 96)
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "hor", scope: !1312, file: !1311, line: 42, baseType: !1325, size: 128, offset: 384)
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !1312, file: !1311, line: 43, baseType: !1325, size: 128, offset: 512)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !1312, file: !1311, line: 45, baseType: !1335, size: 64, offset: 640)
!1335 = !DICompositeType(tag: DW_TAG_array_type, baseType: !396, size: 64, elements: !1293)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !1312, file: !1311, line: 45, baseType: !1335, size: 64, offset: 704)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "minzoom", scope: !1312, file: !1311, line: 46, baseType: !396, size: 32, offset: 768)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "maxzoom", scope: !1312, file: !1311, line: 46, baseType: !396, size: 32, offset: 800)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "scroll", scope: !1312, file: !1311, line: 48, baseType: !399, size: 16, offset: 832)
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "scroll_ui", scope: !1312, file: !1311, line: 49, baseType: !399, size: 16, offset: 848)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "keeptot", scope: !1312, file: !1311, line: 51, baseType: !399, size: 16, offset: 864)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "keepzoom", scope: !1312, file: !1311, line: 52, baseType: !399, size: 16, offset: 880)
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "keepofs", scope: !1312, file: !1311, line: 53, baseType: !399, size: 16, offset: 896)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1312, file: !1311, line: 55, baseType: !399, size: 16, offset: 912)
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !1312, file: !1311, line: 56, baseType: !399, size: 16, offset: 928)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "winx", scope: !1312, file: !1311, line: 58, baseType: !399, size: 16, offset: 944)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "winy", scope: !1312, file: !1311, line: 58, baseType: !399, size: 16, offset: 960)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "oldwinx", scope: !1312, file: !1311, line: 59, baseType: !399, size: 16, offset: 976)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "oldwiny", scope: !1312, file: !1311, line: 59, baseType: !399, size: 16, offset: 992)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "around", scope: !1312, file: !1311, line: 61, baseType: !399, size: 16, offset: 1008)
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "tab_offset", scope: !1312, file: !1311, line: 63, baseType: !975, size: 64, offset: 1024)
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "tab_num", scope: !1312, file: !1311, line: 64, baseType: !98, size: 32, offset: 1088)
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "tab_cur", scope: !1312, file: !1311, line: 65, baseType: !98, size: 32, offset: 1120)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "sms", scope: !1312, file: !1311, line: 68, baseType: !1355, size: 64, offset: 1152)
!1355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1356, size: 64)
!1356 = !DICompositeType(tag: DW_TAG_structure_type, name: "SmoothView2DStore", file: !1311, line: 68, flags: DIFlagFwdDecl)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "smooth_timer", scope: !1312, file: !1311, line: 69, baseType: !1358, size: 64, offset: 1216)
!1358 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1359, size: 64)
!1359 = !DICompositeType(tag: DW_TAG_structure_type, name: "wmTimer", file: !1311, line: 69, flags: DIFlagFwdDecl)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "winrct", scope: !1305, file: !86, line: 234, baseType: !1325, size: 128, offset: 1408)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "drawrct", scope: !1305, file: !86, line: 235, baseType: !1325, size: 128, offset: 1536)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "winx", scope: !1305, file: !86, line: 236, baseType: !399, size: 16, offset: 1664)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "winy", scope: !1305, file: !86, line: 236, baseType: !399, size: 16, offset: 1680)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "swinid", scope: !1305, file: !86, line: 238, baseType: !399, size: 16, offset: 1696)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "regiontype", scope: !1305, file: !86, line: 239, baseType: !399, size: 16, offset: 1712)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "alignment", scope: !1305, file: !86, line: 240, baseType: !399, size: 16, offset: 1728)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1305, file: !86, line: 241, baseType: !399, size: 16, offset: 1744)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "fsize", scope: !1305, file: !86, line: 243, baseType: !396, size: 32, offset: 1760)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "sizex", scope: !1305, file: !86, line: 244, baseType: !399, size: 16, offset: 1792)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "sizey", scope: !1305, file: !86, line: 244, baseType: !399, size: 16, offset: 1808)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw", scope: !1305, file: !86, line: 246, baseType: !399, size: 16, offset: 1824)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw_overlay", scope: !1305, file: !86, line: 247, baseType: !399, size: 16, offset: 1840)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "swap", scope: !1305, file: !86, line: 248, baseType: !399, size: 16, offset: 1856)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "overlap", scope: !1305, file: !86, line: 249, baseType: !399, size: 16, offset: 1872)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "flagfullscreen", scope: !1305, file: !86, line: 250, baseType: !399, size: 16, offset: 1888)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1305, file: !86, line: 251, baseType: !399, size: 16, offset: 1904)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1305, file: !86, line: 253, baseType: !1378, size: 64, offset: 1920)
!1378 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1379, size: 64)
!1379 = !DICompositeType(tag: DW_TAG_structure_type, name: "ARegionType", file: !86, line: 42, flags: DIFlagFwdDecl)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "uiblocks", scope: !1305, file: !86, line: 255, baseType: !388, size: 128, offset: 1984)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "panels", scope: !1305, file: !86, line: 256, baseType: !388, size: 128, offset: 2112)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "panels_category_active", scope: !1305, file: !86, line: 257, baseType: !388, size: 128, offset: 2240)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "ui_lists", scope: !1305, file: !86, line: 258, baseType: !388, size: 128, offset: 2368)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "ui_previews", scope: !1305, file: !86, line: 259, baseType: !388, size: 128, offset: 2496)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "handlers", scope: !1305, file: !86, line: 260, baseType: !388, size: 128, offset: 2624)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "panels_category", scope: !1305, file: !86, line: 261, baseType: !388, size: 128, offset: 2752)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "regiontimer", scope: !1305, file: !86, line: 263, baseType: !1358, size: 64, offset: 2880)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "headerstr", scope: !1305, file: !86, line: 265, baseType: !501, size: 64, offset: 2944)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "regiondata", scope: !1305, file: !86, line: 266, baseType: !372, size: 64, offset: 3008)
!1390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1391, size: 64)
!1391 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SpaceNode", file: !61, line: 925, size: 3200, elements: !1392)
!1392 = !{!1393, !1396, !1397, !1398, !1399, !1400, !1401, !1402, !1403, !1404, !1405, !1406, !1407, !1408, !1409, !1410, !1411, !1412, !1413, !1414, !1415, !1416, !1417, !1418, !1419, !1420, !1421, !1422, !1423}
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1391, file: !61, line: 926, baseType: !1394, size: 64)
!1394 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1395, size: 64)
!1395 = !DIDerivedType(tag: DW_TAG_typedef, name: "SpaceLink", file: !61, line: 91, baseType: !383)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1391, file: !61, line: 926, baseType: !1394, size: 64, offset: 64)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "regionbase", scope: !1391, file: !61, line: 927, baseType: !388, size: 128, offset: 128)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "spacetype", scope: !1391, file: !61, line: 928, baseType: !98, size: 32, offset: 256)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "blockscale", scope: !1391, file: !61, line: 929, baseType: !396, size: 32, offset: 288)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "blockhandler", scope: !1391, file: !61, line: 930, baseType: !398, size: 128, offset: 320)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "v2d", scope: !1391, file: !61, line: 932, baseType: !1310, size: 1280, offset: 448)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1391, file: !61, line: 934, baseType: !434, size: 64, offset: 1728)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "from", scope: !1391, file: !61, line: 934, baseType: !434, size: 64, offset: 1792)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1391, file: !61, line: 935, baseType: !399, size: 16, offset: 1856)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1391, file: !61, line: 935, baseType: !399, size: 16, offset: 1872)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "aspect", scope: !1391, file: !61, line: 936, baseType: !396, size: 32, offset: 1888)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1391, file: !61, line: 936, baseType: !396, size: 32, offset: 1920)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "xof", scope: !1391, file: !61, line: 938, baseType: !396, size: 32, offset: 1952)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "yof", scope: !1391, file: !61, line: 938, baseType: !396, size: 32, offset: 1984)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "zoom", scope: !1391, file: !61, line: 939, baseType: !396, size: 32, offset: 2016)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "cursor", scope: !1391, file: !61, line: 940, baseType: !1335, size: 64, offset: 2048)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "treepath", scope: !1391, file: !61, line: 947, baseType: !388, size: 128, offset: 2112)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !1391, file: !61, line: 949, baseType: !1064, size: 64, offset: 2240)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "edittree", scope: !1391, file: !61, line: 949, baseType: !1064, size: 64, offset: 2304)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "tree_idname", scope: !1391, file: !61, line: 952, baseType: !692, size: 512, offset: 2368)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "treetype", scope: !1391, file: !61, line: 953, baseType: !98, size: 32, offset: 2880)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !1391, file: !61, line: 954, baseType: !98, size: 32, offset: 2912)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "texfrom", scope: !1391, file: !61, line: 956, baseType: !399, size: 16, offset: 2944)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "shaderfrom", scope: !1391, file: !61, line: 957, baseType: !399, size: 16, offset: 2960)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !1391, file: !61, line: 958, baseType: !399, size: 16, offset: 2976)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !1391, file: !61, line: 959, baseType: !399, size: 16, offset: 2992)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "linkdrag", scope: !1391, file: !61, line: 960, baseType: !388, size: 128, offset: 3008)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !1391, file: !61, line: 962, baseType: !1424, size: 64, offset: 3136)
!1424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1425, size: 64)
!1425 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bGPdata", file: !1426, line: 130, size: 1216, elements: !1427)
!1426 = !DIFile(filename: "blender/source/blender/makesdna/DNA_gpencil_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1427 = !{!1428, !1429, !1430, !1431, !1432, !1433}
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1425, file: !1426, line: 131, baseType: !427, size: 960)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "layers", scope: !1425, file: !1426, line: 134, baseType: !388, size: 128, offset: 960)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1425, file: !1426, line: 135, baseType: !98, size: 32, offset: 1088)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "sbuffer_size", scope: !1425, file: !1426, line: 141, baseType: !399, size: 16, offset: 1120)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "sbuffer_sflag", scope: !1425, file: !1426, line: 142, baseType: !399, size: 16, offset: 1136)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "sbuffer", scope: !1425, file: !1426, line: 143, baseType: !372, size: 64, offset: 1152)
!1434 = !DIDerivedType(tag: DW_TAG_typedef, name: "bNodeInstanceKey", file: !56, line: 274, baseType: !1435)
!1435 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeInstanceKey", file: !56, line: 271, size: 32, elements: !1436)
!1436 = !{!1437}
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1435, file: !56, line: 273, baseType: !7, size: 32)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "draw_nodetype_prepare", scope: !1118, file: !1072, line: 168, baseType: !1439, size: 64, offset: 4288)
!1439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1440, size: 64)
!1440 = !DISubroutineType(types: !1441)
!1441 = !{null, !1302, !1064, !1087}
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "draw_buttons", scope: !1118, file: !1072, line: 171, baseType: !1443, size: 64, offset: 4352)
!1443 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1444, size: 64)
!1444 = !DISubroutineType(types: !1445)
!1445 = !{null, !1179, !1177, !1181}
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "draw_buttons_ex", scope: !1118, file: !1072, line: 173, baseType: !1443, size: 64, offset: 4416)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "draw_backdrop", scope: !1118, file: !1072, line: 176, baseType: !1448, size: 64, offset: 4480)
!1448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1449, size: 64)
!1449 = !DISubroutineType(types: !1450)
!1450 = !{null, !1390, !1451, !1087, !98, !98}
!1451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1452, size: 64)
!1452 = !DICompositeType(tag: DW_TAG_structure_type, name: "ImBuf", file: !1453, line: 136, flags: DIFlagFwdDecl)
!1453 = !DIFile(filename: "blender/source/blender/makesdna/DNA_color_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "labelfunc", scope: !1118, file: !1072, line: 179, baseType: !1455, size: 64, offset: 4544)
!1455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1456, size: 64)
!1456 = !DISubroutineType(types: !1457)
!1457 = !{null, !1064, !1087, !501, !98}
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "resize_area_func", scope: !1118, file: !1072, line: 181, baseType: !1459, size: 64, offset: 4608)
!1459 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1460, size: 64)
!1460 = !DISubroutineType(types: !1461)
!1461 = !{!98, !1087, !98, !98}
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "select_area_func", scope: !1118, file: !1072, line: 183, baseType: !1459, size: 64, offset: 4672)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "tweak_area_func", scope: !1118, file: !1072, line: 185, baseType: !1459, size: 64, offset: 4736)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "updatefunc", scope: !1118, file: !1072, line: 188, baseType: !1084, size: 64, offset: 4800)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "verifyfunc", scope: !1118, file: !1072, line: 190, baseType: !1466, size: 64, offset: 4864)
!1466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1467, size: 64)
!1467 = !DISubroutineType(types: !1468)
!1468 = !{null, !1064, !1087, !434}
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "initfunc", scope: !1118, file: !1072, line: 193, baseType: !1084, size: 64, offset: 4928)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "freefunc", scope: !1118, file: !1072, line: 195, baseType: !1471, size: 64, offset: 4992)
!1471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1472, size: 64)
!1472 = !DISubroutineType(types: !1473)
!1473 = !{null, !1087}
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "copyfunc", scope: !1118, file: !1072, line: 197, baseType: !1475, size: 64, offset: 5056)
!1475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1476, size: 64)
!1476 = !DISubroutineType(types: !1477)
!1477 = !{null, !1064, !1087, !1087}
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "initfunc_api", scope: !1118, file: !1072, line: 200, baseType: !1479, size: 64, offset: 5120)
!1479 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1480, size: 64)
!1480 = !DISubroutineType(types: !1481)
!1481 = !{null, !1302, !1181}
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "freefunc_api", scope: !1118, file: !1072, line: 201, baseType: !1483, size: 64, offset: 5184)
!1483 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1484, size: 64)
!1484 = !DISubroutineType(types: !1485)
!1485 = !{null, !1181}
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "copyfunc_api", scope: !1118, file: !1072, line: 202, baseType: !1487, size: 64, offset: 5248)
!1487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1488, size: 64)
!1488 = !DISubroutineType(types: !1489)
!1489 = !{null, !1181, !1087}
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !1118, file: !1072, line: 205, baseType: !1491, size: 64, offset: 5312)
!1491 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1492, size: 64)
!1492 = !DISubroutineType(types: !1493)
!1493 = !{!98, !1117, !1064}
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "poll_instance", scope: !1118, file: !1072, line: 207, baseType: !1495, size: 64, offset: 5376)
!1495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1496, size: 64)
!1496 = !DISubroutineType(types: !1497)
!1497 = !{!98, !1087, !1064}
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "update_internal_links", scope: !1118, file: !1072, line: 210, baseType: !1084, size: 64, offset: 5440)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "initexecfunc", scope: !1118, file: !1072, line: 213, baseType: !1500, size: 64, offset: 5504)
!1500 = !DIDerivedType(tag: DW_TAG_typedef, name: "NodeInitExecFunction", file: !1072, line: 135, baseType: !1501)
!1501 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1502, size: 64)
!1502 = !DISubroutineType(types: !1503)
!1503 = !{!372, !1504, !1087, !1434}
!1504 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1505, size: 64)
!1505 = !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeExecContext", file: !1072, line: 62, flags: DIFlagFwdDecl)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "freeexecfunc", scope: !1118, file: !1072, line: 214, baseType: !1507, size: 64, offset: 5568)
!1507 = !DIDerivedType(tag: DW_TAG_typedef, name: "NodeFreeExecFunction", file: !1072, line: 136, baseType: !1244)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "execfunc", scope: !1118, file: !1072, line: 215, baseType: !1509, size: 64, offset: 5632)
!1509 = !DIDerivedType(tag: DW_TAG_typedef, name: "NodeExecFunction", file: !1072, line: 137, baseType: !1510)
!1510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1511, size: 64)
!1511 = !DISubroutineType(types: !1512)
!1512 = !{null, !372, !98, !1087, !1513, !1515, !1515}
!1513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1514, size: 64)
!1514 = !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeExecData", file: !1072, line: 63, flags: DIFlagFwdDecl)
!1515 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1516, size: 64)
!1516 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1279, size: 64)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "gpufunc", scope: !1118, file: !1072, line: 217, baseType: !1518, size: 64, offset: 5696)
!1518 = !DIDerivedType(tag: DW_TAG_typedef, name: "NodeGPUExecFunction", file: !1072, line: 138, baseType: !1519)
!1519 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1520, size: 64)
!1520 = !DISubroutineType(types: !1521)
!1521 = !{!98, !1522, !1087, !1513, !1524, !1524}
!1522 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1523, size: 64)
!1523 = !DICompositeType(tag: DW_TAG_structure_type, name: "GPUMaterial", file: !1072, line: 64, flags: DIFlagFwdDecl)
!1524 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1525, size: 64)
!1525 = !DICompositeType(tag: DW_TAG_structure_type, name: "GPUNodeStack", file: !1072, line: 66, flags: DIFlagFwdDecl)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "ext", scope: !1118, file: !1072, line: 220, baseType: !1219, size: 256, offset: 5760)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !1088, file: !56, line: 173, baseType: !692, size: 512, offset: 320)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1088, file: !56, line: 175, baseType: !692, size: 512, offset: 832)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1088, file: !56, line: 176, baseType: !98, size: 32, offset: 1344)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1088, file: !56, line: 177, baseType: !399, size: 16, offset: 1376)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1088, file: !56, line: 177, baseType: !399, size: 16, offset: 1392)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !1088, file: !56, line: 178, baseType: !399, size: 16, offset: 1408)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1088, file: !56, line: 178, baseType: !399, size: 16, offset: 1424)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "lasty", scope: !1088, file: !56, line: 179, baseType: !399, size: 16, offset: 1440)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "menunr", scope: !1088, file: !56, line: 179, baseType: !399, size: 16, offset: 1456)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "stack_index", scope: !1088, file: !56, line: 180, baseType: !399, size: 16, offset: 1472)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "nr", scope: !1088, file: !56, line: 181, baseType: !399, size: 16, offset: 1488)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "color", scope: !1088, file: !56, line: 182, baseType: !779, size: 96, offset: 1504)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "inputs", scope: !1088, file: !56, line: 184, baseType: !388, size: 128, offset: 1600)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "outputs", scope: !1088, file: !56, line: 184, baseType: !388, size: 128, offset: 1728)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1088, file: !56, line: 185, baseType: !1087, size: 64, offset: 1856)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1088, file: !56, line: 186, baseType: !434, size: 64, offset: 1920)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "storage", scope: !1088, file: !56, line: 187, baseType: !372, size: 64, offset: 1984)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "original", scope: !1088, file: !56, line: 188, baseType: !1087, size: 64, offset: 2048)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "internal_links", scope: !1088, file: !56, line: 189, baseType: !388, size: 128, offset: 2112)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "locx", scope: !1088, file: !56, line: 191, baseType: !396, size: 32, offset: 2240)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "locy", scope: !1088, file: !56, line: 191, baseType: !396, size: 32, offset: 2272)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1088, file: !56, line: 192, baseType: !396, size: 32, offset: 2304)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1088, file: !56, line: 192, baseType: !396, size: 32, offset: 2336)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "miniwidth", scope: !1088, file: !56, line: 193, baseType: !396, size: 32, offset: 2368)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "offsetx", scope: !1088, file: !56, line: 194, baseType: !396, size: 32, offset: 2400)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "offsety", scope: !1088, file: !56, line: 194, baseType: !396, size: 32, offset: 2432)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "update", scope: !1088, file: !56, line: 196, baseType: !98, size: 32, offset: 2464)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "label", scope: !1088, file: !56, line: 198, baseType: !692, size: 512, offset: 2496)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "custom1", scope: !1088, file: !56, line: 199, baseType: !399, size: 16, offset: 3008)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "custom2", scope: !1088, file: !56, line: 199, baseType: !399, size: 16, offset: 3024)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "custom3", scope: !1088, file: !56, line: 200, baseType: !396, size: 32, offset: 3040)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "custom4", scope: !1088, file: !56, line: 200, baseType: !396, size: 32, offset: 3072)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "need_exec", scope: !1088, file: !56, line: 202, baseType: !399, size: 16, offset: 3104)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "exec", scope: !1088, file: !56, line: 202, baseType: !399, size: 16, offset: 3120)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "threaddata", scope: !1088, file: !56, line: 203, baseType: !372, size: 64, offset: 3136)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "totr", scope: !1088, file: !56, line: 204, baseType: !1315, size: 128, offset: 3200)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "butr", scope: !1088, file: !56, line: 205, baseType: !1315, size: 128, offset: 3328)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "prvr", scope: !1088, file: !56, line: 206, baseType: !1315, size: 128, offset: 3456)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "preview_xsize", scope: !1088, file: !56, line: 215, baseType: !399, size: 16, offset: 3584)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "preview_ysize", scope: !1088, file: !56, line: 215, baseType: !399, size: 16, offset: 3600)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1088, file: !56, line: 216, baseType: !98, size: 32, offset: 3616)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1088, file: !56, line: 217, baseType: !1569, size: 64, offset: 3648)
!1569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1570, size: 64)
!1570 = !DICompositeType(tag: DW_TAG_structure_type, name: "uiBlock", file: !56, line: 51, flags: DIFlagFwdDecl)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "foreach_nodeclass", scope: !1071, file: !1072, line: 294, baseType: !1572, size: 64, offset: 3264)
!1572 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1573, size: 64)
!1573 = !DISubroutineType(types: !1574)
!1574 = !{null, !827, !372, !1575}
!1575 = !DIDerivedType(tag: DW_TAG_typedef, name: "bNodeClassCallback", file: !1072, line: 282, baseType: !1576)
!1576 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1577, size: 64)
!1577 = !DISubroutineType(types: !1578)
!1578 = !{null, !372, !98, !373}
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !1071, file: !1072, line: 296, baseType: !1580, size: 64, offset: 3328)
!1580 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1581, size: 64)
!1581 = !DISubroutineType(types: !1582)
!1582 = !{!98, !1302, !1070}
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "get_from_context", scope: !1071, file: !1072, line: 298, baseType: !1584, size: 64, offset: 3392)
!1584 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1585, size: 64)
!1585 = !DISubroutineType(types: !1586)
!1586 = !{null, !1302, !1070, !1587, !1588, !1588}
!1587 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1064, size: 64)
!1588 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !434, size: 64)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "localize", scope: !1071, file: !1072, line: 302, baseType: !1590, size: 64, offset: 3456)
!1590 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1591, size: 64)
!1591 = !DISubroutineType(types: !1592)
!1592 = !{null, !1064, !1064}
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "local_sync", scope: !1071, file: !1072, line: 303, baseType: !1590, size: 64, offset: 3520)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "local_merge", scope: !1071, file: !1072, line: 304, baseType: !1590, size: 64, offset: 3584)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "update", scope: !1071, file: !1072, line: 307, baseType: !1080, size: 64, offset: 3648)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "validate_link", scope: !1071, file: !1072, line: 309, baseType: !1597, size: 64, offset: 3712)
!1597 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1598, size: 64)
!1598 = !DISubroutineType(types: !1599)
!1599 = !{!98, !1064, !1262}
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "node_add_init", scope: !1071, file: !1072, line: 311, baseType: !1084, size: 64, offset: 3776)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "ext", scope: !1071, file: !1072, line: 314, baseType: !1219, size: 256, offset: 3840)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !1065, file: !56, line: 333, baseType: !692, size: 512, offset: 1088)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "interface_type", scope: !1065, file: !56, line: 335, baseType: !1190, size: 64, offset: 1600)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !1065, file: !56, line: 337, baseType: !1424, size: 64, offset: 1664)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "view_center", scope: !1065, file: !56, line: 338, baseType: !1335, size: 64, offset: 1728)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "nodes", scope: !1065, file: !56, line: 340, baseType: !388, size: 128, offset: 1792)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !1065, file: !56, line: 340, baseType: !388, size: 128, offset: 1920)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1065, file: !56, line: 342, baseType: !98, size: 32, offset: 2048)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1065, file: !56, line: 342, baseType: !98, size: 32, offset: 2080)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "cur_index", scope: !1065, file: !56, line: 343, baseType: !98, size: 32, offset: 2112)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1065, file: !56, line: 345, baseType: !98, size: 32, offset: 2144)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "update", scope: !1065, file: !56, line: 346, baseType: !98, size: 32, offset: 2176)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "is_updating", scope: !1065, file: !56, line: 347, baseType: !399, size: 16, offset: 2208)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !1065, file: !56, line: 348, baseType: !399, size: 16, offset: 2224)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1065, file: !56, line: 349, baseType: !98, size: 32, offset: 2240)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "nodetype", scope: !1065, file: !56, line: 351, baseType: !98, size: 32, offset: 2272)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "edit_quality", scope: !1065, file: !56, line: 353, baseType: !399, size: 16, offset: 2304)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "render_quality", scope: !1065, file: !56, line: 354, baseType: !399, size: 16, offset: 2320)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "chunksize", scope: !1065, file: !56, line: 355, baseType: !98, size: 32, offset: 2336)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "viewer_border", scope: !1065, file: !56, line: 357, baseType: !1315, size: 128, offset: 2368)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "inputs", scope: !1065, file: !56, line: 363, baseType: !388, size: 128, offset: 2496)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "outputs", scope: !1065, file: !56, line: 363, baseType: !388, size: 128, offset: 2624)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "previews", scope: !1065, file: !56, line: 368, baseType: !1624, size: 64, offset: 2752)
!1624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1625, size: 64)
!1625 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeInstanceHash", file: !1072, line: 500, size: 64, elements: !1626)
!1626 = !{!1627}
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "ghash", scope: !1625, file: !1072, line: 502, baseType: !1628, size: 64)
!1628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1629, size: 64)
!1629 = !DIDerivedType(tag: DW_TAG_typedef, name: "GHash", file: !1630, line: 48, baseType: !543)
!1630 = !DIFile(filename: "blender/source/blender/blenlib/BLI_ghash.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "active_viewer_key", scope: !1065, file: !56, line: 372, baseType: !1434, size: 32, offset: 2816)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1065, file: !56, line: 373, baseType: !98, size: 32, offset: 2848)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "execdata", scope: !1065, file: !56, line: 382, baseType: !1634, size: 64, offset: 2880)
!1634 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1635, size: 64)
!1635 = !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeTreeExec", file: !56, line: 46, flags: DIFlagFwdDecl)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "progress", scope: !1065, file: !56, line: 385, baseType: !1637, size: 64, offset: 2944)
!1637 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1638, size: 64)
!1638 = !DISubroutineType(types: !1639)
!1639 = !{null, !372, !396}
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "stats_draw", scope: !1065, file: !56, line: 386, baseType: !1641, size: 64, offset: 3008)
!1641 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1642, size: 64)
!1642 = !DISubroutineType(types: !1643)
!1643 = !{null, !372, !501}
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "test_break", scope: !1065, file: !56, line: 387, baseType: !1645, size: 64, offset: 3072)
!1645 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1646, size: 64)
!1646 = !DISubroutineType(types: !1647)
!1647 = !{!98, !372}
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "update_draw", scope: !1065, file: !56, line: 388, baseType: !1244, size: 64, offset: 3136)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "tbh", scope: !1065, file: !56, line: 389, baseType: !372, size: 64, offset: 3200)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "prh", scope: !1065, file: !56, line: 389, baseType: !372, size: 64, offset: 3264)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "sdh", scope: !1065, file: !56, line: 389, baseType: !372, size: 64, offset: 3328)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "udh", scope: !1065, file: !56, line: 389, baseType: !372, size: 64, offset: 3392)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !992, file: !754, line: 249, baseType: !978, size: 64, offset: 2752)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "ima", scope: !992, file: !754, line: 250, baseType: !1655, size: 64, offset: 2816)
!1655 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1656, size: 64)
!1656 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Image", file: !1047, line: 77, size: 15424, elements: !1657)
!1657 = !{!1658, !1659, !1660, !1663, !1666, !1669, !1672, !1674, !1675, !1676, !1677, !1678, !1679, !1680, !1681, !1682, !1683, !1684, !1685, !1686, !1687, !1688, !1690, !1698, !1711, !1712, !1713, !1714, !1715, !1716, !1717, !1718, !1719, !1720, !1721, !1722, !1723, !1728, !1729, !1733}
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1656, file: !1047, line: 78, baseType: !427, size: 960)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1656, file: !1047, line: 80, baseType: !478, size: 8192, offset: 960)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !1656, file: !1047, line: 82, baseType: !1661, size: 64, offset: 9152)
!1661 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1662, size: 64)
!1662 = !DICompositeType(tag: DW_TAG_structure_type, name: "MovieCache", file: !1047, line: 43, flags: DIFlagFwdDecl)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "gputexture", scope: !1656, file: !1047, line: 83, baseType: !1664, size: 64, offset: 9216)
!1664 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1665, size: 64)
!1665 = !DICompositeType(tag: DW_TAG_structure_type, name: "GPUTexture", file: !428, line: 46, flags: DIFlagFwdDecl)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "anim", scope: !1656, file: !1047, line: 86, baseType: !1667, size: 64, offset: 9280)
!1667 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1668, size: 64)
!1668 = !DICompositeType(tag: DW_TAG_structure_type, name: "anim", file: !1047, line: 41, flags: DIFlagFwdDecl)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "rr", scope: !1656, file: !1047, line: 87, baseType: !1670, size: 64, offset: 9344)
!1670 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1671, size: 64)
!1671 = !DICompositeType(tag: DW_TAG_structure_type, name: "RenderResult", file: !1047, line: 44, flags: DIFlagFwdDecl)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "renders", scope: !1656, file: !1047, line: 89, baseType: !1673, size: 512, offset: 9408)
!1673 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1670, size: 512, elements: !400)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "render_slot", scope: !1656, file: !1047, line: 90, baseType: !399, size: 16, offset: 9920)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "last_render_slot", scope: !1656, file: !1047, line: 90, baseType: !399, size: 16, offset: 9936)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !1656, file: !1047, line: 92, baseType: !399, size: 16, offset: 9952)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1656, file: !1047, line: 92, baseType: !399, size: 16, offset: 9968)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !1656, file: !1047, line: 93, baseType: !399, size: 16, offset: 9984)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1656, file: !1047, line: 93, baseType: !399, size: 16, offset: 10000)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "lastframe", scope: !1656, file: !1047, line: 94, baseType: !98, size: 32, offset: 10016)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "tpageflag", scope: !1656, file: !1047, line: 97, baseType: !399, size: 16, offset: 10048)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "totbind", scope: !1656, file: !1047, line: 97, baseType: !399, size: 16, offset: 10064)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "xrep", scope: !1656, file: !1047, line: 98, baseType: !399, size: 16, offset: 10080)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "yrep", scope: !1656, file: !1047, line: 98, baseType: !399, size: 16, offset: 10096)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "twsta", scope: !1656, file: !1047, line: 99, baseType: !399, size: 16, offset: 10112)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "twend", scope: !1656, file: !1047, line: 99, baseType: !399, size: 16, offset: 10128)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "bindcode", scope: !1656, file: !1047, line: 100, baseType: !7, size: 32, offset: 10144)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "repbind", scope: !1656, file: !1047, line: 101, baseType: !1689, size: 64, offset: 10176)
!1689 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "packedfile", scope: !1656, file: !1047, line: 103, baseType: !1691, size: 64, offset: 10240)
!1691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1692, size: 64)
!1692 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PackedFile", file: !1693, line: 37, size: 128, elements: !1694)
!1693 = !DIFile(filename: "blender/source/blender/makesdna/DNA_packedFile_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1694 = !{!1695, !1696, !1697}
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1692, file: !1693, line: 38, baseType: !98, size: 32)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "seek", scope: !1692, file: !1693, line: 39, baseType: !98, size: 32, offset: 32)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1692, file: !1693, line: 40, baseType: !372, size: 64, offset: 64)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !1656, file: !1047, line: 104, baseType: !1699, size: 64, offset: 10304)
!1699 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1700, size: 64)
!1700 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PreviewImage", file: !428, line: 159, size: 448, elements: !1701)
!1701 = !{!1702, !1704, !1705, !1706, !1707, !1709}
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !1700, file: !428, line: 161, baseType: !1703, size: 64)
!1703 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 64, elements: !1293)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !1700, file: !428, line: 162, baseType: !1703, size: 64, offset: 64)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !1700, file: !428, line: 163, baseType: !1292, size: 32, offset: 128)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "changed_timestamp", scope: !1700, file: !428, line: 164, baseType: !1292, size: 32, offset: 160)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "rect", scope: !1700, file: !428, line: 165, baseType: !1708, size: 128, offset: 192)
!1708 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1689, size: 128, elements: !1293)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "gputexture", scope: !1700, file: !428, line: 166, baseType: !1710, size: 128, offset: 320)
!1710 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1664, size: 128, elements: !1293)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "lastupdate", scope: !1656, file: !1047, line: 107, baseType: !396, size: 32, offset: 10368)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "lastused", scope: !1656, file: !1047, line: 108, baseType: !98, size: 32, offset: 10400)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "animspeed", scope: !1656, file: !1047, line: 109, baseType: !399, size: 16, offset: 10432)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1656, file: !1047, line: 110, baseType: !399, size: 16, offset: 10448)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "gen_x", scope: !1656, file: !1047, line: 113, baseType: !98, size: 32, offset: 10464)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "gen_y", scope: !1656, file: !1047, line: 113, baseType: !98, size: 32, offset: 10496)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "gen_type", scope: !1656, file: !1047, line: 114, baseType: !375, size: 8, offset: 10528)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "gen_flag", scope: !1656, file: !1047, line: 114, baseType: !375, size: 8, offset: 10536)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "gen_depth", scope: !1656, file: !1047, line: 115, baseType: !399, size: 16, offset: 10544)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "gen_color", scope: !1656, file: !1047, line: 116, baseType: !408, size: 128, offset: 10560)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "aspx", scope: !1656, file: !1047, line: 119, baseType: !396, size: 32, offset: 10688)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "aspy", scope: !1656, file: !1047, line: 119, baseType: !396, size: 32, offset: 10720)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace_settings", scope: !1656, file: !1047, line: 122, baseType: !1724, size: 512, offset: 10752)
!1724 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedColorspaceSettings", file: !1453, line: 182, baseType: !1725)
!1725 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedColorspaceSettings", file: !1453, line: 180, size: 512, elements: !1726)
!1726 = !{!1727}
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1725, file: !1453, line: 181, baseType: !692, size: 512)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "alpha_mode", scope: !1656, file: !1047, line: 123, baseType: !375, size: 8, offset: 11264)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1656, file: !1047, line: 125, baseType: !1730, size: 56, offset: 11272)
!1730 = !DICompositeType(tag: DW_TAG_array_type, baseType: !375, size: 56, elements: !1731)
!1731 = !{!1732}
!1732 = !DISubrange(count: 7)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "render_slots", scope: !1656, file: !1047, line: 126, baseType: !1734, size: 4096, offset: 11328)
!1734 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1735, size: 4096, elements: !400)
!1735 = !DIDerivedType(tag: DW_TAG_typedef, name: "RenderSlot", file: !1047, line: 69, baseType: !1736)
!1736 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderSlot", file: !1047, line: 67, size: 512, elements: !1737)
!1737 = !{!1738}
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1736, file: !1047, line: 68, baseType: !692, size: 512)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "coba", scope: !992, file: !754, line: 251, baseType: !1740, size: 64, offset: 2880)
!1740 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !753, size: 64)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "env", scope: !992, file: !754, line: 252, baseType: !1742, size: 64, offset: 2944)
!1742 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1743, size: 64)
!1743 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "EnvMap", file: !754, line: 122, size: 1600, elements: !1744)
!1744 = !{!1745, !1746, !1747, !1751, !1754, !1757, !1758, !1759, !1760, !1761, !1762, !1763, !1764, !1765, !1766, !1767, !1768}
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1743, file: !754, line: 123, baseType: !423, size: 64)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "ima", scope: !1743, file: !754, line: 124, baseType: !1655, size: 64, offset: 64)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "cube", scope: !1743, file: !754, line: 125, baseType: !1748, size: 384, offset: 128)
!1748 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1451, size: 384, elements: !1749)
!1749 = !{!1750}
!1750 = !DISubrange(count: 6)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "imat", scope: !1743, file: !754, line: 126, baseType: !1752, size: 512, offset: 512)
!1752 = !DICompositeType(tag: DW_TAG_array_type, baseType: !396, size: 512, elements: !1753)
!1753 = !{!410, !410}
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "obimat", scope: !1743, file: !754, line: 127, baseType: !1755, size: 288, offset: 1024)
!1755 = !DICompositeType(tag: DW_TAG_array_type, baseType: !396, size: 288, elements: !1756)
!1756 = !{!417, !417}
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1743, file: !754, line: 128, baseType: !399, size: 16, offset: 1312)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "stype", scope: !1743, file: !754, line: 128, baseType: !399, size: 16, offset: 1328)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "clipsta", scope: !1743, file: !754, line: 129, baseType: !396, size: 32, offset: 1344)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "clipend", scope: !1743, file: !754, line: 129, baseType: !396, size: 32, offset: 1376)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "viewscale", scope: !1743, file: !754, line: 130, baseType: !396, size: 32, offset: 1408)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "notlay", scope: !1743, file: !754, line: 131, baseType: !7, size: 32, offset: 1440)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "cuberes", scope: !1743, file: !754, line: 132, baseType: !399, size: 16, offset: 1472)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !1743, file: !754, line: 132, baseType: !399, size: 16, offset: 1488)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !1743, file: !754, line: 133, baseType: !98, size: 32, offset: 1504)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "lastframe", scope: !1743, file: !754, line: 133, baseType: !98, size: 32, offset: 1536)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !1743, file: !754, line: 134, baseType: !399, size: 16, offset: 1568)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "lastsize", scope: !1743, file: !754, line: 134, baseType: !399, size: 16, offset: 1584)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !992, file: !754, line: 253, baseType: !1699, size: 64, offset: 3008)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "pd", scope: !992, file: !754, line: 254, baseType: !1771, size: 64, offset: 3072)
!1771 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1772, size: 64)
!1772 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PointDensity", file: !754, line: 137, size: 832, elements: !1773)
!1773 = !{!1774, !1775, !1776, !1777, !1778, !1779, !1780, !1781, !1782, !1783, !1784, !1785, !1786, !1787, !1788, !1789, !1790, !1791, !1792, !1793, !1794, !1795, !1796, !1797, !1798}
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1772, file: !754, line: 138, baseType: !399, size: 16)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_type", scope: !1772, file: !754, line: 140, baseType: !399, size: 16, offset: 16)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_softness", scope: !1772, file: !754, line: 141, baseType: !396, size: 32, offset: 32)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "radius", scope: !1772, file: !754, line: 142, baseType: !396, size: 32, offset: 64)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !1772, file: !754, line: 143, baseType: !399, size: 16, offset: 96)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "color_source", scope: !1772, file: !754, line: 144, baseType: !399, size: 16, offset: 112)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "totpoints", scope: !1772, file: !754, line: 145, baseType: !98, size: 32, offset: 128)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "pdpad", scope: !1772, file: !754, line: 147, baseType: !98, size: 32, offset: 160)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1772, file: !754, line: 149, baseType: !423, size: 64, offset: 192)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "psys", scope: !1772, file: !754, line: 150, baseType: !98, size: 32, offset: 256)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "psys_cache_space", scope: !1772, file: !754, line: 151, baseType: !399, size: 16, offset: 288)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "ob_cache_space", scope: !1772, file: !754, line: 152, baseType: !399, size: 16, offset: 304)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "point_tree", scope: !1772, file: !754, line: 154, baseType: !372, size: 64, offset: 320)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "point_data", scope: !1772, file: !754, line: 155, baseType: !975, size: 64, offset: 384)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "noise_size", scope: !1772, file: !754, line: 157, baseType: !396, size: 32, offset: 448)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "noise_depth", scope: !1772, file: !754, line: 158, baseType: !399, size: 16, offset: 480)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "noise_influence", scope: !1772, file: !754, line: 159, baseType: !399, size: 16, offset: 496)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "noise_basis", scope: !1772, file: !754, line: 160, baseType: !399, size: 16, offset: 512)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "pdpad3", scope: !1772, file: !754, line: 161, baseType: !811, size: 48, offset: 528)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "noise_fac", scope: !1772, file: !754, line: 162, baseType: !396, size: 32, offset: 576)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "speed_scale", scope: !1772, file: !754, line: 164, baseType: !396, size: 32, offset: 608)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_speed_scale", scope: !1772, file: !754, line: 164, baseType: !396, size: 32, offset: 640)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "pdpad2", scope: !1772, file: !754, line: 164, baseType: !396, size: 32, offset: 672)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "coba", scope: !1772, file: !754, line: 165, baseType: !1740, size: 64, offset: 704)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_curve", scope: !1772, file: !754, line: 167, baseType: !1799, size: 64, offset: 768)
!1799 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1800, size: 64)
!1800 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMapping", file: !1453, line: 72, size: 3072, elements: !1801)
!1801 = !{!1802, !1803, !1804, !1805, !1806, !1807, !1808, !1833, !1834, !1835, !1836}
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1800, file: !1453, line: 73, baseType: !98, size: 32)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !1800, file: !1453, line: 73, baseType: !98, size: 32, offset: 32)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "preset", scope: !1800, file: !1453, line: 74, baseType: !98, size: 32, offset: 64)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "changed_timestamp", scope: !1800, file: !1453, line: 75, baseType: !98, size: 32, offset: 96)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "curr", scope: !1800, file: !1453, line: 77, baseType: !1315, size: 128, offset: 128)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "clipr", scope: !1800, file: !1453, line: 77, baseType: !1315, size: 128, offset: 256)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "cm", scope: !1800, file: !1453, line: 79, baseType: !1809, size: 2304, offset: 384)
!1809 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1810, size: 2304, elements: !409)
!1810 = !DIDerivedType(tag: DW_TAG_typedef, name: "CurveMap", file: !1453, line: 67, baseType: !1811)
!1811 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMap", file: !1453, line: 55, size: 576, elements: !1812)
!1812 = !{!1813, !1814, !1815, !1816, !1817, !1818, !1819, !1820, !1829, !1830, !1831, !1832}
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "totpoint", scope: !1811, file: !1453, line: 56, baseType: !399, size: 16)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1811, file: !1453, line: 56, baseType: !399, size: 16, offset: 16)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !1811, file: !1453, line: 58, baseType: !396, size: 32, offset: 32)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "mintable", scope: !1811, file: !1453, line: 59, baseType: !396, size: 32, offset: 64)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "maxtable", scope: !1811, file: !1453, line: 59, baseType: !396, size: 32, offset: 96)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "ext_in", scope: !1811, file: !1453, line: 60, baseType: !1335, size: 64, offset: 128)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "ext_out", scope: !1811, file: !1453, line: 60, baseType: !1335, size: 64, offset: 192)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "curve", scope: !1811, file: !1453, line: 61, baseType: !1821, size: 64, offset: 256)
!1821 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1822, size: 64)
!1822 = !DIDerivedType(tag: DW_TAG_typedef, name: "CurveMapPoint", file: !1453, line: 47, baseType: !1823)
!1823 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMapPoint", file: !1453, line: 44, size: 96, elements: !1824)
!1824 = !{!1825, !1826, !1827, !1828}
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1823, file: !1453, line: 45, baseType: !396, size: 32)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !1823, file: !1453, line: 45, baseType: !396, size: 32, offset: 32)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1823, file: !1453, line: 46, baseType: !399, size: 16, offset: 64)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "shorty", scope: !1823, file: !1453, line: 46, baseType: !399, size: 16, offset: 80)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "table", scope: !1811, file: !1453, line: 62, baseType: !1821, size: 64, offset: 320)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "premultable", scope: !1811, file: !1453, line: 64, baseType: !1821, size: 64, offset: 384)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "premul_ext_in", scope: !1811, file: !1453, line: 65, baseType: !1335, size: 64, offset: 448)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "premul_ext_out", scope: !1811, file: !1453, line: 66, baseType: !1335, size: 64, offset: 512)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "black", scope: !1800, file: !1453, line: 80, baseType: !779, size: 96, offset: 2688)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "white", scope: !1800, file: !1453, line: 80, baseType: !779, size: 96, offset: 2784)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "bwmul", scope: !1800, file: !1453, line: 81, baseType: !779, size: 96, offset: 2880)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "sample", scope: !1800, file: !1453, line: 83, baseType: !779, size: 96, offset: 2976)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "vd", scope: !992, file: !754, line: 255, baseType: !1838, size: 64, offset: 3136)
!1838 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1839, size: 64)
!1839 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VoxelData", file: !754, line: 170, size: 8704, elements: !1840)
!1840 = !{!1841, !1843, !1844, !1845, !1846, !1847, !1848, !1849, !1850, !1851, !1852, !1853, !1854, !1855, !1856, !1857}
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "resol", scope: !1839, file: !754, line: 171, baseType: !1842, size: 96)
!1842 = !DICompositeType(tag: DW_TAG_array_type, baseType: !98, size: 96, elements: !416)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "interp_type", scope: !1839, file: !754, line: 172, baseType: !98, size: 32, offset: 96)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "file_format", scope: !1839, file: !754, line: 173, baseType: !399, size: 16, offset: 128)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1839, file: !754, line: 174, baseType: !399, size: 16, offset: 144)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "extend", scope: !1839, file: !754, line: 175, baseType: !399, size: 16, offset: 160)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "smoked_type", scope: !1839, file: !754, line: 176, baseType: !399, size: 16, offset: 176)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "data_type", scope: !1839, file: !754, line: 177, baseType: !399, size: 16, offset: 192)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1839, file: !754, line: 178, baseType: !399, size: 16, offset: 208)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "_pad", scope: !1839, file: !754, line: 179, baseType: !98, size: 32, offset: 224)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1839, file: !754, line: 181, baseType: !423, size: 64, offset: 256)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "int_multiplier", scope: !1839, file: !754, line: 182, baseType: !396, size: 32, offset: 320)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "still_frame", scope: !1839, file: !754, line: 183, baseType: !98, size: 32, offset: 352)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "source_path", scope: !1839, file: !754, line: 184, baseType: !478, size: 8192, offset: 384)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "dataset", scope: !1839, file: !754, line: 187, baseType: !975, size: 64, offset: 8576)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "cachedframe", scope: !1839, file: !754, line: 188, baseType: !98, size: 32, offset: 8640)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !1839, file: !754, line: 189, baseType: !98, size: 32, offset: 8672)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "ot", scope: !992, file: !754, line: 256, baseType: !1859, size: 64, offset: 3200)
!1859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1860, size: 64)
!1860 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "OceanTex", file: !754, line: 193, size: 640, elements: !1861)
!1861 = !{!1862, !1863, !1864, !1865}
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1860, file: !754, line: 194, baseType: !423, size: 64)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "oceanmod", scope: !1860, file: !754, line: 195, baseType: !692, size: 512, offset: 64)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "output", scope: !1860, file: !754, line: 197, baseType: !98, size: 32, offset: 576)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1860, file: !754, line: 198, baseType: !98, size: 32, offset: 608)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !992, file: !754, line: 258, baseType: !375, size: 8, offset: 3264)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !992, file: !754, line: 259, baseType: !1730, size: 56, offset: 3272)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "uvname", scope: !983, file: !754, line: 62, baseType: !692, size: 512, offset: 192)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "projx", scope: !983, file: !754, line: 64, baseType: !375, size: 8, offset: 704)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "projy", scope: !983, file: !754, line: 64, baseType: !375, size: 8, offset: 712)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "projz", scope: !983, file: !754, line: 64, baseType: !375, size: 8, offset: 720)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !983, file: !754, line: 64, baseType: !375, size: 8, offset: 728)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "ofs", scope: !983, file: !754, line: 65, baseType: !779, size: 96, offset: 736)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !983, file: !754, line: 65, baseType: !779, size: 96, offset: 832)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !983, file: !754, line: 65, baseType: !396, size: 32, offset: 928)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "texflag", scope: !983, file: !754, line: 67, baseType: !399, size: 16, offset: 960)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "colormodel", scope: !983, file: !754, line: 67, baseType: !399, size: 16, offset: 976)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "pmapto", scope: !983, file: !754, line: 67, baseType: !399, size: 16, offset: 992)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "pmaptoneg", scope: !983, file: !754, line: 67, baseType: !399, size: 16, offset: 1008)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "normapspace", scope: !983, file: !754, line: 68, baseType: !399, size: 16, offset: 1024)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "which_output", scope: !983, file: !754, line: 68, baseType: !399, size: 16, offset: 1040)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "brush_map_mode", scope: !983, file: !754, line: 69, baseType: !375, size: 8, offset: 1056)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !983, file: !754, line: 69, baseType: !1730, size: 56, offset: 1064)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !983, file: !754, line: 70, baseType: !396, size: 32, offset: 1120)
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !983, file: !754, line: 70, baseType: !396, size: 32, offset: 1152)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !983, file: !754, line: 70, baseType: !396, size: 32, offset: 1184)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "k", scope: !983, file: !754, line: 70, baseType: !396, size: 32, offset: 1216)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "def_var", scope: !983, file: !754, line: 71, baseType: !396, size: 32, offset: 1248)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !983, file: !754, line: 71, baseType: !396, size: 32, offset: 1280)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "colfac", scope: !983, file: !754, line: 74, baseType: !396, size: 32, offset: 1312)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "varfac", scope: !983, file: !754, line: 74, baseType: !396, size: 32, offset: 1344)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "norfac", scope: !983, file: !754, line: 77, baseType: !396, size: 32, offset: 1376)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "dispfac", scope: !983, file: !754, line: 77, baseType: !396, size: 32, offset: 1408)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "warpfac", scope: !983, file: !754, line: 77, baseType: !396, size: 32, offset: 1440)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "colspecfac", scope: !983, file: !754, line: 78, baseType: !396, size: 32, offset: 1472)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "mirrfac", scope: !983, file: !754, line: 78, baseType: !396, size: 32, offset: 1504)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "alphafac", scope: !983, file: !754, line: 78, baseType: !396, size: 32, offset: 1536)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "difffac", scope: !983, file: !754, line: 79, baseType: !396, size: 32, offset: 1568)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "specfac", scope: !983, file: !754, line: 79, baseType: !396, size: 32, offset: 1600)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "emitfac", scope: !983, file: !754, line: 79, baseType: !396, size: 32, offset: 1632)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "hardfac", scope: !983, file: !754, line: 79, baseType: !396, size: 32, offset: 1664)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "raymirrfac", scope: !983, file: !754, line: 80, baseType: !396, size: 32, offset: 1696)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "translfac", scope: !983, file: !754, line: 80, baseType: !396, size: 32, offset: 1728)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "ambfac", scope: !983, file: !754, line: 80, baseType: !396, size: 32, offset: 1760)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "colemitfac", scope: !983, file: !754, line: 81, baseType: !396, size: 32, offset: 1792)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "colreflfac", scope: !983, file: !754, line: 81, baseType: !396, size: 32, offset: 1824)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "coltransfac", scope: !983, file: !754, line: 81, baseType: !396, size: 32, offset: 1856)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "densfac", scope: !983, file: !754, line: 82, baseType: !396, size: 32, offset: 1888)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "scatterfac", scope: !983, file: !754, line: 82, baseType: !396, size: 32, offset: 1920)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "reflfac", scope: !983, file: !754, line: 82, baseType: !396, size: 32, offset: 1952)
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "timefac", scope: !983, file: !754, line: 85, baseType: !396, size: 32, offset: 1984)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "lengthfac", scope: !983, file: !754, line: 85, baseType: !396, size: 32, offset: 2016)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "clumpfac", scope: !983, file: !754, line: 85, baseType: !396, size: 32, offset: 2048)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "dampfac", scope: !983, file: !754, line: 85, baseType: !396, size: 32, offset: 2080)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "kinkfac", scope: !983, file: !754, line: 86, baseType: !396, size: 32, offset: 2112)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "roughfac", scope: !983, file: !754, line: 86, baseType: !396, size: 32, offset: 2144)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "padensfac", scope: !983, file: !754, line: 86, baseType: !396, size: 32, offset: 2176)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "gravityfac", scope: !983, file: !754, line: 86, baseType: !396, size: 32, offset: 2208)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "lifefac", scope: !983, file: !754, line: 87, baseType: !396, size: 32, offset: 2240)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "sizefac", scope: !983, file: !754, line: 87, baseType: !396, size: 32, offset: 2272)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "ivelfac", scope: !983, file: !754, line: 87, baseType: !396, size: 32, offset: 2304)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "fieldfac", scope: !983, file: !754, line: 87, baseType: !396, size: 32, offset: 2336)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "shadowfac", scope: !983, file: !754, line: 90, baseType: !396, size: 32, offset: 2368)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "zenupfac", scope: !983, file: !754, line: 93, baseType: !396, size: 32, offset: 2400)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "zendownfac", scope: !983, file: !754, line: 93, baseType: !396, size: 32, offset: 2432)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "blendfac", scope: !983, file: !754, line: 93, baseType: !396, size: 32, offset: 2464)
!1927 = !{!1928}
!1928 = !DISubrange(count: 18)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "pr_texture", scope: !904, file: !905, line: 123, baseType: !399, size: 16, offset: 4032)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !904, file: !905, line: 123, baseType: !399, size: 16, offset: 4048)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !904, file: !905, line: 123, baseType: !1292, size: 32, offset: 4064)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !904, file: !905, line: 126, baseType: !1699, size: 64, offset: 4096)
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !904, file: !905, line: 129, baseType: !1064, size: 64, offset: 4160)
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !828, file: !829, line: 1223, baseType: !827, size: 64, offset: 1152)
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !828, file: !829, line: 1225, baseType: !388, size: 128, offset: 1216)
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "basact", scope: !828, file: !829, line: 1226, baseType: !1937, size: 64, offset: 1344)
!1937 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1938, size: 64)
!1938 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Base", file: !829, line: 69, size: 320, elements: !1939)
!1939 = !{!1940, !1941, !1942, !1943, !1944, !1945, !1946, !1947}
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1938, file: !829, line: 70, baseType: !1937, size: 64)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1938, file: !829, line: 70, baseType: !1937, size: 64, offset: 64)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !1938, file: !829, line: 71, baseType: !7, size: 32, offset: 128)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "selcol", scope: !1938, file: !829, line: 71, baseType: !7, size: 32, offset: 160)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1938, file: !829, line: 72, baseType: !98, size: 32, offset: 192)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "sx", scope: !1938, file: !829, line: 73, baseType: !399, size: 16, offset: 224)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "sy", scope: !1938, file: !829, line: 73, baseType: !399, size: 16, offset: 240)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1938, file: !829, line: 74, baseType: !423, size: 64, offset: 256)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "obedit", scope: !828, file: !829, line: 1227, baseType: !423, size: 64, offset: 1408)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "cursor", scope: !828, file: !829, line: 1229, baseType: !779, size: 96, offset: 1472)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "twcent", scope: !828, file: !829, line: 1230, baseType: !779, size: 96, offset: 1568)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "twmin", scope: !828, file: !829, line: 1231, baseType: !779, size: 96, offset: 1664)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "twmax", scope: !828, file: !829, line: 1231, baseType: !779, size: 96, offset: 1760)
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !828, file: !829, line: 1233, baseType: !7, size: 32, offset: 1856)
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "layact", scope: !828, file: !829, line: 1234, baseType: !98, size: 32, offset: 1888)
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "lay_updated", scope: !828, file: !829, line: 1235, baseType: !7, size: 32, offset: 1920)
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !828, file: !829, line: 1237, baseType: !399, size: 16, offset: 1952)
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !828, file: !829, line: 1239, baseType: !375, size: 8, offset: 1968)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !828, file: !829, line: 1240, baseType: !762, size: 8, offset: 1976)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !828, file: !829, line: 1242, baseType: !1064, size: 64, offset: 1984)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "ed", scope: !828, file: !829, line: 1244, baseType: !1961, size: 64, offset: 2048)
!1961 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1962, size: 64)
!1962 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Editing", file: !97, line: 200, size: 17024, elements: !1963)
!1963 = !{!1964, !1965, !1966, !1967, !2322, !2323, !2324, !2325, !2326, !2327, !2328}
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "seqbasep", scope: !1962, file: !97, line: 201, baseType: !565, size: 64)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "seqbase", scope: !1962, file: !97, line: 202, baseType: !388, size: 128, offset: 64)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "metastack", scope: !1962, file: !97, line: 203, baseType: !388, size: 128, offset: 192)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "act_seq", scope: !1962, file: !97, line: 206, baseType: !1968, size: 64, offset: 320)
!1968 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1969, size: 64)
!1969 = !DIDerivedType(tag: DW_TAG_typedef, name: "Sequence", file: !97, line: 190, baseType: !1970)
!1970 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Sequence", file: !97, line: 126, size: 2816, elements: !1971)
!1971 = !{!1972, !1974, !1975, !1976, !1977, !1978, !1979, !1980, !1981, !1982, !1983, !1984, !1985, !1986, !1987, !1988, !1989, !1990, !1991, !1992, !1993, !1994, !1995, !1996, !1997, !2057, !2058, !2059, !2060, !2265, !2279, !2280, !2281, !2282, !2283, !2284, !2285, !2286, !2308, !2309, !2310, !2311, !2312, !2313, !2314, !2315, !2316, !2317, !2318, !2319, !2320, !2321}
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1970, file: !97, line: 127, baseType: !1973, size: 64)
!1973 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1970, size: 64)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1970, file: !97, line: 127, baseType: !1973, size: 64, offset: 64)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "tmp", scope: !1970, file: !97, line: 128, baseType: !372, size: 64, offset: 128)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "lib", scope: !1970, file: !97, line: 129, baseType: !372, size: 64, offset: 192)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1970, file: !97, line: 130, baseType: !692, size: 512, offset: 256)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1970, file: !97, line: 132, baseType: !98, size: 32, offset: 768)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1970, file: !97, line: 132, baseType: !98, size: 32, offset: 800)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1970, file: !97, line: 133, baseType: !98, size: 32, offset: 832)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !1970, file: !97, line: 134, baseType: !98, size: 32, offset: 864)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "startofs", scope: !1970, file: !97, line: 134, baseType: !98, size: 32, offset: 896)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "endofs", scope: !1970, file: !97, line: 134, baseType: !98, size: 32, offset: 928)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "startstill", scope: !1970, file: !97, line: 135, baseType: !98, size: 32, offset: 960)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "endstill", scope: !1970, file: !97, line: 135, baseType: !98, size: 32, offset: 992)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "machine", scope: !1970, file: !97, line: 136, baseType: !98, size: 32, offset: 1024)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !1970, file: !97, line: 136, baseType: !98, size: 32, offset: 1056)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "startdisp", scope: !1970, file: !97, line: 137, baseType: !98, size: 32, offset: 1088)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "enddisp", scope: !1970, file: !97, line: 137, baseType: !98, size: 32, offset: 1120)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "sat", scope: !1970, file: !97, line: 138, baseType: !396, size: 32, offset: 1152)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "mul", scope: !1970, file: !97, line: 139, baseType: !396, size: 32, offset: 1184)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "handsize", scope: !1970, file: !97, line: 139, baseType: !396, size: 32, offset: 1216)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "anim_preseek", scope: !1970, file: !97, line: 141, baseType: !399, size: 16, offset: 1248)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "streamindex", scope: !1970, file: !97, line: 142, baseType: !399, size: 16, offset: 1264)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "multicam_source", scope: !1970, file: !97, line: 143, baseType: !98, size: 32, offset: 1280)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "clip_flag", scope: !1970, file: !97, line: 144, baseType: !98, size: 32, offset: 1312)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "strip", scope: !1970, file: !97, line: 146, baseType: !1998, size: 64, offset: 1344)
!1998 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1999, size: 64)
!1999 = !DIDerivedType(tag: DW_TAG_typedef, name: "Strip", file: !97, line: 114, baseType: !2000)
!2000 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Strip", file: !97, line: 99, size: 7232, elements: !2001)
!2001 = !{!2002, !2004, !2005, !2006, !2007, !2008, !2009, !2017, !2018, !2030, !2039, !2046, !2056}
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2000, file: !97, line: 100, baseType: !2003, size: 64)
!2003 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2000, size: 64)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2000, file: !97, line: 100, baseType: !2003, size: 64, offset: 64)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "us", scope: !2000, file: !97, line: 101, baseType: !98, size: 32, offset: 128)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !2000, file: !97, line: 101, baseType: !98, size: 32, offset: 160)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "startstill", scope: !2000, file: !97, line: 102, baseType: !98, size: 32, offset: 192)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "endstill", scope: !2000, file: !97, line: 102, baseType: !98, size: 32, offset: 224)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "stripdata", scope: !2000, file: !97, line: 103, baseType: !2010, size: 64, offset: 256)
!2010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2011, size: 64)
!2011 = !DIDerivedType(tag: DW_TAG_typedef, name: "StripElem", file: !97, line: 59, baseType: !2012)
!2012 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StripElem", file: !97, line: 56, size: 2112, elements: !2013)
!2013 = !{!2014, !2015, !2016}
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2012, file: !97, line: 57, baseType: !630, size: 2048)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "orig_width", scope: !2012, file: !97, line: 58, baseType: !98, size: 32, offset: 2048)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "orig_height", scope: !2012, file: !97, line: 58, baseType: !98, size: 32, offset: 2080)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !2000, file: !97, line: 106, baseType: !649, size: 6144, offset: 320)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "proxy", scope: !2000, file: !97, line: 107, baseType: !2019, size: 64, offset: 6464)
!2019 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2020, size: 64)
!2020 = !DIDerivedType(tag: DW_TAG_typedef, name: "StripProxy", file: !97, line: 97, baseType: !2021)
!2021 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StripProxy", file: !97, line: 83, size: 8320, elements: !2022)
!2022 = !{!2023, !2024, !2025, !2026, !2027, !2028, !2029}
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !2021, file: !97, line: 84, baseType: !649, size: 6144)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !2021, file: !97, line: 87, baseType: !630, size: 2048, offset: 6144)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "anim", scope: !2021, file: !97, line: 88, baseType: !1667, size: 64, offset: 8192)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "tc", scope: !2021, file: !97, line: 90, baseType: !399, size: 16, offset: 8256)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !2021, file: !97, line: 92, baseType: !399, size: 16, offset: 8272)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "build_size_flags", scope: !2021, file: !97, line: 93, baseType: !399, size: 16, offset: 8288)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "build_tc_flags", scope: !2021, file: !97, line: 95, baseType: !399, size: 16, offset: 8304)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "crop", scope: !2000, file: !97, line: 108, baseType: !2031, size: 64, offset: 6528)
!2031 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2032, size: 64)
!2032 = !DIDerivedType(tag: DW_TAG_typedef, name: "StripCrop", file: !97, line: 66, baseType: !2033)
!2033 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StripCrop", file: !97, line: 61, size: 128, elements: !2034)
!2034 = !{!2035, !2036, !2037, !2038}
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !2033, file: !97, line: 62, baseType: !98, size: 32)
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "bottom", scope: !2033, file: !97, line: 63, baseType: !98, size: 32, offset: 32)
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "left", scope: !2033, file: !97, line: 64, baseType: !98, size: 32, offset: 64)
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "right", scope: !2033, file: !97, line: 65, baseType: !98, size: 32, offset: 96)
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "transform", scope: !2000, file: !97, line: 109, baseType: !2040, size: 64, offset: 6592)
!2040 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2041, size: 64)
!2041 = !DIDerivedType(tag: DW_TAG_typedef, name: "StripTransform", file: !97, line: 71, baseType: !2042)
!2042 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StripTransform", file: !97, line: 68, size: 64, elements: !2043)
!2043 = !{!2044, !2045}
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "xofs", scope: !2042, file: !97, line: 69, baseType: !98, size: 32)
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "yofs", scope: !2042, file: !97, line: 70, baseType: !98, size: 32, offset: 32)
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "color_balance", scope: !2000, file: !97, line: 110, baseType: !2047, size: 64, offset: 6656)
!2047 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2048, size: 64)
!2048 = !DIDerivedType(tag: DW_TAG_typedef, name: "StripColorBalance", file: !97, line: 81, baseType: !2049)
!2049 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StripColorBalance", file: !97, line: 73, size: 352, elements: !2050)
!2050 = !{!2051, !2052, !2053, !2054, !2055}
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "lift", scope: !2049, file: !97, line: 74, baseType: !779, size: 96)
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "gamma", scope: !2049, file: !97, line: 75, baseType: !779, size: 96, offset: 96)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "gain", scope: !2049, file: !97, line: 76, baseType: !779, size: 96, offset: 192)
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2049, file: !97, line: 77, baseType: !98, size: 32, offset: 288)
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2049, file: !97, line: 78, baseType: !98, size: 32, offset: 320)
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace_settings", scope: !2000, file: !97, line: 113, baseType: !1724, size: 512, offset: 6720)
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !1970, file: !97, line: 148, baseType: !978, size: 64, offset: 1408)
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !1970, file: !97, line: 151, baseType: !827, size: 64, offset: 1472)
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "scene_camera", scope: !1970, file: !97, line: 152, baseType: !423, size: 64, offset: 1536)
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "clip", scope: !1970, file: !97, line: 153, baseType: !2061, size: 64, offset: 1600)
!2061 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2062, size: 64)
!2062 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieClip", file: !2063, line: 64, size: 19136, elements: !2064)
!2063 = !DIFile(filename: "blender/source/blender/makesdna/DNA_movieclip_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2064 = !{!2065, !2066, !2067, !2068, !2069, !2070, !2072, !2073, !2074, !2075, !2078, !2079, !2251, !2252, !2260, !2261, !2262, !2263, !2264}
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2062, file: !2063, line: 65, baseType: !427, size: 960)
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !2062, file: !2063, line: 66, baseType: !833, size: 64, offset: 960)
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2062, file: !2063, line: 68, baseType: !478, size: 8192, offset: 1024)
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !2062, file: !2063, line: 70, baseType: !98, size: 32, offset: 9216)
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "lastframe", scope: !2062, file: !2063, line: 71, baseType: !98, size: 32, offset: 9248)
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "lastsize", scope: !2062, file: !2063, line: 72, baseType: !2071, size: 64, offset: 9280)
!2071 = !DICompositeType(tag: DW_TAG_array_type, baseType: !98, size: 64, elements: !1293)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "aspx", scope: !2062, file: !2063, line: 74, baseType: !396, size: 32, offset: 9344)
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "aspy", scope: !2062, file: !2063, line: 74, baseType: !396, size: 32, offset: 9376)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "anim", scope: !2062, file: !2063, line: 76, baseType: !1667, size: 64, offset: 9408)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !2062, file: !2063, line: 77, baseType: !2076, size: 64, offset: 9472)
!2076 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2077, size: 64)
!2077 = !DICompositeType(tag: DW_TAG_structure_type, name: "MovieClipCache", file: !2063, line: 77, flags: DIFlagFwdDecl)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !2062, file: !2063, line: 78, baseType: !1424, size: 64, offset: 9536)
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "tracking", scope: !2062, file: !2063, line: 80, baseType: !2080, size: 2624, offset: 9600)
!2080 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTracking", file: !2081, line: 340, size: 2624, elements: !2082)
!2081 = !DIFile(filename: "blender/source/blender/makesdna/DNA_tracking_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2082 = !{!2083, !2111, !2129, !2130, !2131, !2146, !2204, !2205, !2231, !2232, !2233, !2234, !2240}
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "settings", scope: !2080, file: !2081, line: 341, baseType: !2084, size: 576)
!2084 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingSettings", file: !2081, line: 251, baseType: !2085)
!2085 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingSettings", file: !2081, line: 207, size: 576, elements: !2086)
!2086 = !{!2087, !2088, !2089, !2090, !2091, !2092, !2093, !2094, !2095, !2096, !2097, !2098, !2099, !2100, !2101, !2102, !2103, !2104, !2105, !2106, !2107, !2108, !2109, !2110}
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2085, file: !2081, line: 208, baseType: !98, size: 32)
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "default_motion_model", scope: !2085, file: !2081, line: 211, baseType: !399, size: 16, offset: 32)
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "default_algorithm_flag", scope: !2085, file: !2081, line: 212, baseType: !399, size: 16, offset: 48)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "default_minimum_correlation", scope: !2085, file: !2081, line: 213, baseType: !396, size: 32, offset: 64)
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "default_pattern_size", scope: !2085, file: !2081, line: 214, baseType: !399, size: 16, offset: 96)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "default_search_size", scope: !2085, file: !2081, line: 215, baseType: !399, size: 16, offset: 112)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "default_frames_limit", scope: !2085, file: !2081, line: 216, baseType: !399, size: 16, offset: 128)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "default_margin", scope: !2085, file: !2081, line: 217, baseType: !399, size: 16, offset: 144)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "default_pattern_match", scope: !2085, file: !2081, line: 218, baseType: !399, size: 16, offset: 160)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "default_flag", scope: !2085, file: !2081, line: 219, baseType: !399, size: 16, offset: 176)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "default_weight", scope: !2085, file: !2081, line: 220, baseType: !396, size: 32, offset: 192)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "motion_flag", scope: !2085, file: !2081, line: 222, baseType: !399, size: 16, offset: 224)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "speed", scope: !2085, file: !2081, line: 225, baseType: !399, size: 16, offset: 240)
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "keyframe1", scope: !2085, file: !2081, line: 228, baseType: !98, size: 32, offset: 256)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "keyframe2", scope: !2085, file: !2081, line: 229, baseType: !98, size: 32, offset: 288)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "reconstruction_flag", scope: !2085, file: !2081, line: 233, baseType: !98, size: 32, offset: 320)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "refine_camera_intrinsics", scope: !2085, file: !2081, line: 236, baseType: !399, size: 16, offset: 352)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2085, file: !2081, line: 236, baseType: !399, size: 16, offset: 368)
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "dist", scope: !2085, file: !2081, line: 241, baseType: !396, size: 32, offset: 384)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "clean_frames", scope: !2085, file: !2081, line: 244, baseType: !98, size: 32, offset: 416)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "clean_action", scope: !2085, file: !2081, line: 244, baseType: !98, size: 32, offset: 448)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "clean_error", scope: !2085, file: !2081, line: 245, baseType: !396, size: 32, offset: 480)
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "object_distance", scope: !2085, file: !2081, line: 248, baseType: !396, size: 32, offset: 512)
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !2085, file: !2081, line: 250, baseType: !98, size: 32, offset: 544)
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "camera", scope: !2080, file: !2081, line: 342, baseType: !2112, size: 448, offset: 576)
!2112 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingCamera", file: !2081, line: 79, baseType: !2113)
!2113 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingCamera", file: !2081, line: 61, size: 448, elements: !2114)
!2114 = !{!2115, !2116, !2117, !2118, !2119, !2120, !2121, !2122, !2123, !2124, !2125, !2126, !2127, !2128}
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "intrinsics", scope: !2113, file: !2081, line: 62, baseType: !372, size: 64)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "distortion_model", scope: !2113, file: !2081, line: 64, baseType: !399, size: 16, offset: 64)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2113, file: !2081, line: 65, baseType: !399, size: 16, offset: 80)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "sensor_width", scope: !2113, file: !2081, line: 67, baseType: !396, size: 32, offset: 96)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "pixel_aspect", scope: !2113, file: !2081, line: 68, baseType: !396, size: 32, offset: 128)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "focal", scope: !2113, file: !2081, line: 69, baseType: !396, size: 32, offset: 160)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "units", scope: !2113, file: !2081, line: 70, baseType: !399, size: 16, offset: 192)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !2113, file: !2081, line: 71, baseType: !399, size: 16, offset: 208)
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "principal", scope: !2113, file: !2081, line: 72, baseType: !1335, size: 64, offset: 224)
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "k1", scope: !2113, file: !2081, line: 75, baseType: !396, size: 32, offset: 288)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "k2", scope: !2113, file: !2081, line: 75, baseType: !396, size: 32, offset: 320)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "k3", scope: !2113, file: !2081, line: 75, baseType: !396, size: 32, offset: 352)
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "division_k1", scope: !2113, file: !2081, line: 78, baseType: !396, size: 32, offset: 384)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "division_k2", scope: !2113, file: !2081, line: 78, baseType: !396, size: 32, offset: 416)
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "tracks", scope: !2080, file: !2081, line: 343, baseType: !388, size: 128, offset: 1024)
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "plane_tracks", scope: !2080, file: !2081, line: 344, baseType: !388, size: 128, offset: 1152)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "reconstruction", scope: !2080, file: !2081, line: 345, baseType: !2132, size: 192, offset: 1280)
!2132 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingReconstruction", file: !2081, line: 278, baseType: !2133)
!2133 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingReconstruction", file: !2081, line: 270, size: 192, elements: !2134)
!2134 = !{!2135, !2136, !2137, !2138, !2139}
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2133, file: !2081, line: 271, baseType: !98, size: 32)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !2133, file: !2081, line: 273, baseType: !396, size: 32, offset: 32)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "last_camera", scope: !2133, file: !2081, line: 275, baseType: !98, size: 32, offset: 64)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "camnr", scope: !2133, file: !2081, line: 276, baseType: !98, size: 32, offset: 96)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "cameras", scope: !2133, file: !2081, line: 277, baseType: !2140, size: 64, offset: 128)
!2140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2141, size: 64)
!2141 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieReconstructedCamera", file: !2081, line: 55, size: 576, elements: !2142)
!2142 = !{!2143, !2144, !2145}
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !2141, file: !2081, line: 56, baseType: !98, size: 32)
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !2141, file: !2081, line: 57, baseType: !396, size: 32, offset: 32)
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !2141, file: !2081, line: 58, baseType: !1752, size: 512, offset: 64)
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "stabilization", scope: !2080, file: !2081, line: 346, baseType: !2147, size: 384, offset: 1472)
!2147 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingStabilization", file: !2081, line: 268, baseType: !2148)
!2148 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingStabilization", file: !2081, line: 253, size: 384, elements: !2149)
!2149 = !{!2150, !2151, !2152, !2153, !2154, !2198, !2199, !2200, !2201, !2202, !2203}
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2148, file: !2081, line: 254, baseType: !98, size: 32)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "tot_track", scope: !2148, file: !2081, line: 255, baseType: !98, size: 32, offset: 32)
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "act_track", scope: !2148, file: !2081, line: 255, baseType: !98, size: 32, offset: 64)
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "maxscale", scope: !2148, file: !2081, line: 258, baseType: !396, size: 32, offset: 96)
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "rot_track", scope: !2148, file: !2081, line: 259, baseType: !2155, size: 64, offset: 128)
!2155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2156, size: 64)
!2156 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingTrack", file: !2081, line: 164, baseType: !2157)
!2157 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingTrack", file: !2081, line: 108, size: 1664, elements: !2158)
!2158 = !{!2159, !2161, !2162, !2163, !2164, !2165, !2166, !2167, !2168, !2169, !2170, !2183, !2184, !2185, !2186, !2187, !2188, !2189, !2190, !2191, !2192, !2193, !2194, !2195, !2196, !2197}
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2157, file: !2081, line: 109, baseType: !2160, size: 64)
!2160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2157, size: 64)
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2157, file: !2081, line: 109, baseType: !2160, size: 64, offset: 64)
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2157, file: !2081, line: 111, baseType: !692, size: 512, offset: 128)
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "pat_min", scope: !2157, file: !2081, line: 119, baseType: !1335, size: 64, offset: 640)
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "pat_max", scope: !2157, file: !2081, line: 119, baseType: !1335, size: 64, offset: 704)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "search_min", scope: !2157, file: !2081, line: 125, baseType: !1335, size: 64, offset: 768)
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "search_max", scope: !2157, file: !2081, line: 125, baseType: !1335, size: 64, offset: 832)
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2157, file: !2081, line: 127, baseType: !1335, size: 64, offset: 896)
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "markersnr", scope: !2157, file: !2081, line: 130, baseType: !98, size: 32, offset: 960)
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "last_marker", scope: !2157, file: !2081, line: 131, baseType: !98, size: 32, offset: 992)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !2157, file: !2081, line: 132, baseType: !2171, size: 64, offset: 1024)
!2171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2172, size: 64)
!2172 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingMarker", file: !2081, line: 106, baseType: !2173)
!2173 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingMarker", file: !2081, line: 81, size: 512, elements: !2174)
!2174 = !{!2175, !2176, !2179, !2180, !2181, !2182}
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !2173, file: !2081, line: 82, baseType: !1335, size: 64)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "pattern_corners", scope: !2173, file: !2081, line: 97, baseType: !2177, size: 256, offset: 64)
!2177 = !DICompositeType(tag: DW_TAG_array_type, baseType: !396, size: 256, elements: !2178)
!2178 = !{!410, !1294}
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "search_min", scope: !2173, file: !2081, line: 102, baseType: !1335, size: 64, offset: 320)
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "search_max", scope: !2173, file: !2081, line: 102, baseType: !1335, size: 64, offset: 384)
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !2173, file: !2081, line: 104, baseType: !98, size: 32, offset: 448)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2173, file: !2081, line: 105, baseType: !98, size: 32, offset: 480)
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "bundle_pos", scope: !2157, file: !2081, line: 135, baseType: !779, size: 96, offset: 1088)
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !2157, file: !2081, line: 136, baseType: !396, size: 32, offset: 1184)
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2157, file: !2081, line: 139, baseType: !98, size: 32, offset: 1216)
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "pat_flag", scope: !2157, file: !2081, line: 139, baseType: !98, size: 32, offset: 1248)
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "search_flag", scope: !2157, file: !2081, line: 139, baseType: !98, size: 32, offset: 1280)
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "color", scope: !2157, file: !2081, line: 140, baseType: !779, size: 96, offset: 1312)
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "frames_limit", scope: !2157, file: !2081, line: 143, baseType: !399, size: 16, offset: 1408)
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "margin", scope: !2157, file: !2081, line: 144, baseType: !399, size: 16, offset: 1424)
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "pattern_match", scope: !2157, file: !2081, line: 145, baseType: !399, size: 16, offset: 1440)
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "motion_model", scope: !2157, file: !2081, line: 148, baseType: !399, size: 16, offset: 1456)
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "algorithm_flag", scope: !2157, file: !2081, line: 149, baseType: !98, size: 32, offset: 1472)
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "minimum_correlation", scope: !2157, file: !2081, line: 150, baseType: !396, size: 32, offset: 1504)
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !2157, file: !2081, line: 152, baseType: !1424, size: 64, offset: 1536)
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !2157, file: !2081, line: 163, baseType: !396, size: 32, offset: 1600)
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2157, file: !2081, line: 163, baseType: !396, size: 32, offset: 1632)
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "locinf", scope: !2148, file: !2081, line: 261, baseType: !396, size: 32, offset: 192)
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "scaleinf", scope: !2148, file: !2081, line: 261, baseType: !396, size: 32, offset: 224)
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "rotinf", scope: !2148, file: !2081, line: 261, baseType: !396, size: 32, offset: 256)
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !2148, file: !2081, line: 263, baseType: !98, size: 32, offset: 288)
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !2148, file: !2081, line: 266, baseType: !98, size: 32, offset: 320)
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "scale", scope: !2148, file: !2081, line: 267, baseType: !396, size: 32, offset: 352)
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "act_track", scope: !2080, file: !2081, line: 347, baseType: !2155, size: 64, offset: 1856)
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "act_plane_track", scope: !2080, file: !2081, line: 348, baseType: !2206, size: 64, offset: 1920)
!2206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2207, size: 64)
!2207 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingPlaneTrack", file: !2081, line: 205, baseType: !2208)
!2208 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingPlaneTrack", file: !2081, line: 186, size: 1024, elements: !2209)
!2209 = !{!2210, !2212, !2213, !2214, !2216, !2217, !2218, !2226, !2227, !2228, !2229, !2230}
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2208, file: !2081, line: 187, baseType: !2211, size: 64)
!2211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2208, size: 64)
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2208, file: !2081, line: 187, baseType: !2211, size: 64, offset: 64)
!2213 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2208, file: !2081, line: 189, baseType: !692, size: 512, offset: 128)
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "point_tracks", scope: !2208, file: !2081, line: 191, baseType: !2215, size: 64, offset: 640)
!2215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2155, size: 64)
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "point_tracksnr", scope: !2208, file: !2081, line: 193, baseType: !98, size: 32, offset: 704)
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2208, file: !2081, line: 193, baseType: !98, size: 32, offset: 736)
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !2208, file: !2081, line: 195, baseType: !2219, size: 64, offset: 768)
!2219 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2220, size: 64)
!2220 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingPlaneMarker", file: !2081, line: 184, baseType: !2221)
!2221 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingPlaneMarker", file: !2081, line: 166, size: 320, elements: !2222)
!2222 = !{!2223, !2224, !2225}
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "corners", scope: !2221, file: !2081, line: 180, baseType: !2177, size: 256)
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !2221, file: !2081, line: 182, baseType: !98, size: 32, offset: 256)
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2221, file: !2081, line: 183, baseType: !98, size: 32, offset: 288)
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "markersnr", scope: !2208, file: !2081, line: 196, baseType: !98, size: 32, offset: 832)
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2208, file: !2081, line: 198, baseType: !98, size: 32, offset: 864)
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "image", scope: !2208, file: !2081, line: 200, baseType: !1655, size: 64, offset: 896)
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "image_opacity", scope: !2208, file: !2081, line: 201, baseType: !396, size: 32, offset: 960)
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "last_marker", scope: !2208, file: !2081, line: 204, baseType: !98, size: 32, offset: 992)
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !2080, file: !2081, line: 350, baseType: !388, size: 128, offset: 1984)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "objectnr", scope: !2080, file: !2081, line: 351, baseType: !98, size: 32, offset: 2112)
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "tot_object", scope: !2080, file: !2081, line: 351, baseType: !98, size: 32, offset: 2144)
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !2080, file: !2081, line: 353, baseType: !2235, size: 64, offset: 2176)
!2235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2236, size: 64)
!2236 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingStats", file: !2081, line: 297, baseType: !2237)
!2237 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingStats", file: !2081, line: 295, size: 2048, elements: !2238)
!2238 = !{!2239}
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "message", scope: !2237, file: !2081, line: 296, baseType: !630, size: 2048)
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "dopesheet", scope: !2080, file: !2081, line: 355, baseType: !2241, size: 384, offset: 2240)
!2241 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingDopesheet", file: !2081, line: 338, baseType: !2242)
!2242 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingDopesheet", file: !2081, line: 322, size: 384, elements: !2243)
!2243 = !{!2244, !2245, !2246, !2247, !2248, !2249, !2250}
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !2242, file: !2081, line: 323, baseType: !98, size: 32)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "sort_method", scope: !2242, file: !2081, line: 325, baseType: !399, size: 16, offset: 32)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2242, file: !2081, line: 326, baseType: !399, size: 16, offset: 48)
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "coverage_segments", scope: !2242, file: !2081, line: 331, baseType: !388, size: 128, offset: 64)
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !2242, file: !2081, line: 334, baseType: !388, size: 128, offset: 192)
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "tot_channel", scope: !2242, file: !2081, line: 335, baseType: !98, size: 32, offset: 320)
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2242, file: !2081, line: 337, baseType: !98, size: 32, offset: 352)
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "tracking_context", scope: !2062, file: !2063, line: 81, baseType: !372, size: 64, offset: 12224)
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "proxy", scope: !2062, file: !2063, line: 85, baseType: !2253, size: 6208, offset: 12288)
!2253 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieClipProxy", file: !2063, line: 55, size: 6208, elements: !2254)
!2254 = !{!2255, !2256, !2257, !2258, !2259}
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !2253, file: !2063, line: 56, baseType: !649, size: 6144)
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "tc", scope: !2253, file: !2063, line: 58, baseType: !399, size: 16, offset: 6144)
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !2253, file: !2063, line: 59, baseType: !399, size: 16, offset: 6160)
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "build_size_flag", scope: !2253, file: !2063, line: 60, baseType: !399, size: 16, offset: 6176)
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "build_tc_flag", scope: !2253, file: !2063, line: 61, baseType: !399, size: 16, offset: 6192)
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2062, file: !2063, line: 86, baseType: !98, size: 32, offset: 18496)
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !2062, file: !2063, line: 88, baseType: !98, size: 32, offset: 18528)
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !2062, file: !2063, line: 90, baseType: !98, size: 32, offset: 18560)
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "frame_offset", scope: !2062, file: !2063, line: 94, baseType: !98, size: 32, offset: 18592)
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace_settings", scope: !2062, file: !2063, line: 100, baseType: !1724, size: 512, offset: 18624)
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !1970, file: !97, line: 154, baseType: !2266, size: 64, offset: 1664)
!2266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2267, size: 64)
!2267 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Mask", file: !2268, line: 46, size: 1344, elements: !2269)
!2268 = !DIFile(filename: "blender/source/blender/makesdna/DNA_mask_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2269 = !{!2270, !2271, !2272, !2273, !2274, !2275, !2276, !2277, !2278}
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2267, file: !2268, line: 47, baseType: !427, size: 960)
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !2267, file: !2268, line: 48, baseType: !833, size: 64, offset: 960)
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "masklayers", scope: !2267, file: !2268, line: 49, baseType: !388, size: 128, offset: 1024)
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "masklay_act", scope: !2267, file: !2268, line: 50, baseType: !98, size: 32, offset: 1152)
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "masklay_tot", scope: !2267, file: !2268, line: 51, baseType: !98, size: 32, offset: 1184)
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !2267, file: !2268, line: 53, baseType: !98, size: 32, offset: 1216)
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "efra", scope: !2267, file: !2268, line: 53, baseType: !98, size: 32, offset: 1248)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2267, file: !2268, line: 55, baseType: !98, size: 32, offset: 1280)
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2267, file: !2268, line: 56, baseType: !98, size: 32, offset: 1312)
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "anim", scope: !1970, file: !97, line: 156, baseType: !1667, size: 64, offset: 1728)
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "effect_fader", scope: !1970, file: !97, line: 158, baseType: !396, size: 32, offset: 1792)
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "speed_fader", scope: !1970, file: !97, line: 159, baseType: !396, size: 32, offset: 1824)
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "seq1", scope: !1970, file: !97, line: 162, baseType: !1973, size: 64, offset: 1856)
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "seq2", scope: !1970, file: !97, line: 162, baseType: !1973, size: 64, offset: 1920)
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "seq3", scope: !1970, file: !97, line: 162, baseType: !1973, size: 64, offset: 1984)
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "seqbase", scope: !1970, file: !97, line: 164, baseType: !388, size: 128, offset: 2048)
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "sound", scope: !1970, file: !97, line: 166, baseType: !2287, size: 64, offset: 2176)
!2287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2288, size: 64)
!2288 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bSound", file: !2289, line: 46, size: 9856, elements: !2290)
!2289 = !DIFile(filename: "blender/source/blender/makesdna/DNA_sound_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2290 = !{!2291, !2292, !2293, !2294, !2295, !2296, !2297, !2298, !2299, !2300, !2301, !2302, !2303, !2304, !2305, !2306, !2307}
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2288, file: !2289, line: 47, baseType: !427, size: 960)
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2288, file: !2289, line: 52, baseType: !478, size: 8192, offset: 960)
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "packedfile", scope: !2288, file: !2289, line: 57, baseType: !1691, size: 64, offset: 9152)
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "handle", scope: !2288, file: !2289, line: 62, baseType: !372, size: 64, offset: 9216)
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "newpackedfile", scope: !2288, file: !2289, line: 67, baseType: !1691, size: 64, offset: 9280)
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !2288, file: !2289, line: 68, baseType: !978, size: 64, offset: 9344)
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "volume", scope: !2288, file: !2289, line: 69, baseType: !396, size: 32, offset: 9408)
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "attenuation", scope: !2288, file: !2289, line: 70, baseType: !396, size: 32, offset: 9440)
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "pitch", scope: !2288, file: !2289, line: 71, baseType: !396, size: 32, offset: 9472)
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "min_gain", scope: !2288, file: !2289, line: 72, baseType: !396, size: 32, offset: 9504)
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "max_gain", scope: !2288, file: !2289, line: 73, baseType: !396, size: 32, offset: 9536)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "distance", scope: !2288, file: !2289, line: 74, baseType: !396, size: 32, offset: 9568)
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2288, file: !2289, line: 75, baseType: !98, size: 32, offset: 9600)
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2288, file: !2289, line: 76, baseType: !98, size: 32, offset: 9632)
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !2288, file: !2289, line: 85, baseType: !372, size: 64, offset: 9664)
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "waveform", scope: !2288, file: !2289, line: 90, baseType: !372, size: 64, offset: 9728)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "playback_handle", scope: !2288, file: !2289, line: 96, baseType: !372, size: 64, offset: 9792)
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "scene_sound", scope: !1970, file: !97, line: 167, baseType: !372, size: 64, offset: 2240)
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "volume", scope: !1970, file: !97, line: 168, baseType: !396, size: 32, offset: 2304)
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "pitch", scope: !1970, file: !97, line: 170, baseType: !396, size: 32, offset: 2336)
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "pan", scope: !1970, file: !97, line: 170, baseType: !396, size: 32, offset: 2368)
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "strobe", scope: !1970, file: !97, line: 171, baseType: !396, size: 32, offset: 2400)
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "effectdata", scope: !1970, file: !97, line: 173, baseType: !372, size: 64, offset: 2432)
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "anim_startofs", scope: !1970, file: !97, line: 175, baseType: !98, size: 32, offset: 2496)
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "anim_endofs", scope: !1970, file: !97, line: 176, baseType: !98, size: 32, offset: 2528)
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "blend_mode", scope: !1970, file: !97, line: 179, baseType: !98, size: 32, offset: 2560)
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "blend_opacity", scope: !1970, file: !97, line: 180, baseType: !396, size: 32, offset: 2592)
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !1970, file: !97, line: 183, baseType: !98, size: 32, offset: 2624)
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "alpha_mode", scope: !1970, file: !97, line: 185, baseType: !375, size: 8, offset: 2656)
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1970, file: !97, line: 186, baseType: !415, size: 24, offset: 2664)
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "modifiers", scope: !1970, file: !97, line: 189, baseType: !388, size: 128, offset: 2688)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "act_imagedir", scope: !1962, file: !97, line: 207, baseType: !478, size: 8192, offset: 384)
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "act_sounddir", scope: !1962, file: !97, line: 208, baseType: !478, size: 8192, offset: 8576)
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "over_ofs", scope: !1962, file: !97, line: 210, baseType: !98, size: 32, offset: 16768)
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "over_cfra", scope: !1962, file: !97, line: 210, baseType: !98, size: 32, offset: 16800)
!2326 = !DIDerivedType(tag: DW_TAG_member, name: "over_flag", scope: !1962, file: !97, line: 211, baseType: !98, size: 32, offset: 16832)
!2327 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1962, file: !97, line: 211, baseType: !98, size: 32, offset: 16864)
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "over_border", scope: !1962, file: !97, line: 212, baseType: !1315, size: 128, offset: 16896)
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "toolsettings", scope: !828, file: !829, line: 1246, baseType: !2330, size: 64, offset: 2112)
!2330 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2331, size: 64)
!2331 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ToolSettings", file: !829, line: 1067, size: 5184, elements: !2332)
!2332 = !{!2333, !2479, !2480, !2494, !2500, !2501, !2502, !2503, !2504, !2505, !2506, !2507, !2508, !2509, !2510, !2511, !2512, !2516, !2532, !2559, !2560, !2561, !2562, !2563, !2564, !2565, !2566, !2567, !2568, !2569, !2570, !2571, !2572, !2573, !2574, !2575, !2576, !2577, !2578, !2579, !2580, !2581, !2582, !2583, !2584, !2585, !2586, !2587, !2589, !2590, !2591, !2592, !2593, !2594, !2595, !2596, !2597, !2598, !2599, !2600, !2601, !2602, !2603, !2604, !2605, !2606, !2607, !2608, !2609, !2610, !2611, !2612, !2613, !2614, !2642}
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "vpaint", scope: !2331, file: !829, line: 1068, baseType: !2334, size: 64)
!2334 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2335, size: 64)
!2335 = !DIDerivedType(tag: DW_TAG_typedef, name: "VPaint", file: !829, line: 934, baseType: !2336)
!2336 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VPaint", file: !829, line: 925, size: 576, elements: !2337)
!2337 = !{!2338, !2461, !2462, !2463, !2464, !2465, !2478}
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !2336, file: !829, line: 926, baseType: !2339, size: 320)
!2339 = !DIDerivedType(tag: DW_TAG_typedef, name: "Paint", file: !829, line: 830, baseType: !2340)
!2340 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Paint", file: !829, line: 813, size: 320, elements: !2341)
!2341 = !{!2342, !2446, !2455, !2456, !2458, !2459, !2460}
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !2340, file: !829, line: 814, baseType: !2343, size: 64)
!2343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2344, size: 64)
!2344 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Brush", file: !2345, line: 54, size: 16448, elements: !2346)
!2345 = !DIFile(filename: "blender/source/blender/makesdna/DNA_brush_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2346 = !{!2347, !2348, !2355, !2356, !2357, !2358, !2359, !2360, !2363, !2364, !2399, !2400, !2401, !2402, !2403, !2404, !2405, !2406, !2407, !2408, !2409, !2410, !2411, !2412, !2413, !2414, !2415, !2416, !2417, !2418, !2419, !2420, !2421, !2422, !2423, !2424, !2425, !2426, !2427, !2428, !2429, !2430, !2431, !2432, !2433, !2434, !2435, !2436, !2437, !2438, !2439, !2440, !2441, !2442, !2443, !2444, !2445}
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2344, file: !2345, line: 55, baseType: !427, size: 960)
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "clone", scope: !2344, file: !2345, line: 57, baseType: !2349, size: 192, offset: 960)
!2349 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BrushClone", file: !2345, line: 48, size: 192, elements: !2350)
!2350 = !{!2351, !2352, !2353, !2354}
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "image", scope: !2349, file: !2345, line: 49, baseType: !1655, size: 64)
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2349, file: !2345, line: 50, baseType: !1335, size: 64, offset: 64)
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "alpha", scope: !2349, file: !2345, line: 51, baseType: !396, size: 32, offset: 128)
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2349, file: !2345, line: 51, baseType: !396, size: 32, offset: 160)
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "curve", scope: !2344, file: !2345, line: 58, baseType: !1799, size: 64, offset: 1152)
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "mtex", scope: !2344, file: !2345, line: 59, baseType: !983, size: 2496, offset: 1216)
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "mask_mtex", scope: !2344, file: !2345, line: 60, baseType: !983, size: 2496, offset: 3712)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "toggle_brush", scope: !2344, file: !2345, line: 62, baseType: !2343, size: 64, offset: 6208)
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "icon_imbuf", scope: !2344, file: !2345, line: 64, baseType: !1451, size: 64, offset: 6272)
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !2344, file: !2345, line: 65, baseType: !2361, size: 64, offset: 6336)
!2361 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2362, size: 64)
!2362 = !DIDerivedType(tag: DW_TAG_typedef, name: "PreviewImage", file: !428, line: 167, baseType: !1700)
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "gradient", scope: !2344, file: !2345, line: 66, baseType: !1740, size: 64, offset: 6400)
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "paint_curve", scope: !2344, file: !2345, line: 67, baseType: !2365, size: 64, offset: 6464)
!2365 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2366, size: 64)
!2366 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PaintCurve", file: !2345, line: 166, size: 1088, elements: !2367)
!2367 = !{!2368, !2369, !2397, !2398}
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2366, file: !2345, line: 168, baseType: !427, size: 960)
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "points", scope: !2366, file: !2345, line: 169, baseType: !2370, size: 64, offset: 960)
!2370 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2371, size: 64)
!2371 = !DIDerivedType(tag: DW_TAG_typedef, name: "PaintCurvePoint", file: !2345, line: 164, baseType: !2372)
!2372 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PaintCurvePoint", file: !2345, line: 160, size: 608, elements: !2373)
!2373 = !{!2374, !2396}
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "bez", scope: !2372, file: !2345, line: 162, baseType: !2375, size: 576)
!2375 = !DIDerivedType(tag: DW_TAG_typedef, name: "BezTriple", file: !2376, line: 133, baseType: !2377)
!2376 = !DIFile(filename: "blender/source/blender/makesdna/DNA_curve_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2377 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BezTriple", file: !2376, line: 117, size: 576, elements: !2378)
!2378 = !{!2379, !2380, !2381, !2382, !2383, !2384, !2385, !2386, !2387, !2388, !2389, !2390, !2391, !2392, !2393, !2394}
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2377, file: !2376, line: 118, baseType: !1755, size: 288)
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "alfa", scope: !2377, file: !2376, line: 119, baseType: !396, size: 32, offset: 288)
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !2377, file: !2376, line: 119, baseType: !396, size: 32, offset: 320)
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "radius", scope: !2377, file: !2376, line: 119, baseType: !396, size: 32, offset: 352)
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !2377, file: !2376, line: 121, baseType: !375, size: 8, offset: 384)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "h1", scope: !2377, file: !2376, line: 123, baseType: !375, size: 8, offset: 392)
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "h2", scope: !2377, file: !2376, line: 123, baseType: !375, size: 8, offset: 400)
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "f1", scope: !2377, file: !2376, line: 124, baseType: !375, size: 8, offset: 408)
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "f2", scope: !2377, file: !2376, line: 124, baseType: !375, size: 8, offset: 416)
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "f3", scope: !2377, file: !2376, line: 124, baseType: !375, size: 8, offset: 424)
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "hide", scope: !2377, file: !2376, line: 126, baseType: !375, size: 8, offset: 432)
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "easing", scope: !2377, file: !2376, line: 128, baseType: !375, size: 8, offset: 440)
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "back", scope: !2377, file: !2376, line: 129, baseType: !396, size: 32, offset: 448)
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "amplitude", scope: !2377, file: !2376, line: 130, baseType: !396, size: 32, offset: 480)
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "period", scope: !2377, file: !2376, line: 130, baseType: !396, size: 32, offset: 512)
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2377, file: !2376, line: 132, baseType: !2395, size: 32, offset: 544)
!2395 = !DICompositeType(tag: DW_TAG_array_type, baseType: !375, size: 32, elements: !409)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "pressure", scope: !2372, file: !2345, line: 163, baseType: !396, size: 32, offset: 576)
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "tot_points", scope: !2366, file: !2345, line: 170, baseType: !98, size: 32, offset: 1024)
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "add_index", scope: !2366, file: !2345, line: 171, baseType: !98, size: 32, offset: 1056)
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "icon_filepath", scope: !2344, file: !2345, line: 69, baseType: !478, size: 8192, offset: 6528)
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "normal_weight", scope: !2344, file: !2345, line: 71, baseType: !396, size: 32, offset: 14720)
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "blend", scope: !2344, file: !2345, line: 73, baseType: !399, size: 16, offset: 14752)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "ob_mode", scope: !2344, file: !2345, line: 74, baseType: !399, size: 16, offset: 14768)
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !2344, file: !2345, line: 75, baseType: !396, size: 32, offset: 14784)
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2344, file: !2345, line: 76, baseType: !98, size: 32, offset: 14816)
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2344, file: !2345, line: 77, baseType: !98, size: 32, offset: 14848)
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "mask_pressure", scope: !2344, file: !2345, line: 78, baseType: !98, size: 32, offset: 14880)
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "jitter", scope: !2344, file: !2345, line: 79, baseType: !396, size: 32, offset: 14912)
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "jitter_absolute", scope: !2344, file: !2345, line: 80, baseType: !98, size: 32, offset: 14944)
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "overlay_flags", scope: !2344, file: !2345, line: 81, baseType: !98, size: 32, offset: 14976)
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "spacing", scope: !2344, file: !2345, line: 82, baseType: !98, size: 32, offset: 15008)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "smooth_stroke_radius", scope: !2344, file: !2345, line: 83, baseType: !98, size: 32, offset: 15040)
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "smooth_stroke_factor", scope: !2344, file: !2345, line: 84, baseType: !396, size: 32, offset: 15072)
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "rate", scope: !2344, file: !2345, line: 85, baseType: !396, size: 32, offset: 15104)
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "rgb", scope: !2344, file: !2345, line: 87, baseType: !779, size: 96, offset: 15136)
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "alpha", scope: !2344, file: !2345, line: 88, baseType: !396, size: 32, offset: 15232)
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "secondary_rgb", scope: !2344, file: !2345, line: 90, baseType: !779, size: 96, offset: 15264)
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_plane", scope: !2344, file: !2345, line: 92, baseType: !98, size: 32, offset: 15360)
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "plane_offset", scope: !2344, file: !2345, line: 94, baseType: !396, size: 32, offset: 15392)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2344, file: !2345, line: 96, baseType: !396, size: 32, offset: 15424)
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "gradient_spacing", scope: !2344, file: !2345, line: 97, baseType: !98, size: 32, offset: 15456)
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "gradient_stroke_mode", scope: !2344, file: !2345, line: 98, baseType: !98, size: 32, offset: 15488)
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "gradient_fill_mode", scope: !2344, file: !2345, line: 99, baseType: !98, size: 32, offset: 15520)
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_tool", scope: !2344, file: !2345, line: 101, baseType: !375, size: 8, offset: 15552)
!2424 = !DIDerivedType(tag: DW_TAG_member, name: "vertexpaint_tool", scope: !2344, file: !2345, line: 102, baseType: !375, size: 8, offset: 15560)
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "imagepaint_tool", scope: !2344, file: !2345, line: 103, baseType: !375, size: 8, offset: 15568)
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "mask_tool", scope: !2344, file: !2345, line: 104, baseType: !375, size: 8, offset: 15576)
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "autosmooth_factor", scope: !2344, file: !2345, line: 106, baseType: !396, size: 32, offset: 15584)
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "crease_pinch_factor", scope: !2344, file: !2345, line: 108, baseType: !396, size: 32, offset: 15616)
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "plane_trim", scope: !2344, file: !2345, line: 110, baseType: !396, size: 32, offset: 15648)
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !2344, file: !2345, line: 111, baseType: !396, size: 32, offset: 15680)
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "texture_sample_bias", scope: !2344, file: !2345, line: 113, baseType: !396, size: 32, offset: 15712)
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "texture_overlay_alpha", scope: !2344, file: !2345, line: 116, baseType: !98, size: 32, offset: 15744)
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "mask_overlay_alpha", scope: !2344, file: !2345, line: 117, baseType: !98, size: 32, offset: 15776)
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "cursor_overlay_alpha", scope: !2344, file: !2345, line: 118, baseType: !98, size: 32, offset: 15808)
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "unprojected_radius", scope: !2344, file: !2345, line: 120, baseType: !396, size: 32, offset: 15840)
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "sharp_threshold", scope: !2344, file: !2345, line: 123, baseType: !396, size: 32, offset: 15872)
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "blur_kernel_radius", scope: !2344, file: !2345, line: 124, baseType: !98, size: 32, offset: 15904)
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "blur_mode", scope: !2344, file: !2345, line: 125, baseType: !98, size: 32, offset: 15936)
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "fill_threshold", scope: !2344, file: !2345, line: 128, baseType: !396, size: 32, offset: 15968)
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "add_col", scope: !2344, file: !2345, line: 130, baseType: !779, size: 96, offset: 16000)
!2441 = !DIDerivedType(tag: DW_TAG_member, name: "sub_col", scope: !2344, file: !2345, line: 131, baseType: !779, size: 96, offset: 16096)
!2442 = !DIDerivedType(tag: DW_TAG_member, name: "stencil_pos", scope: !2344, file: !2345, line: 133, baseType: !1335, size: 64, offset: 16192)
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "stencil_dimension", scope: !2344, file: !2345, line: 134, baseType: !1335, size: 64, offset: 16256)
!2444 = !DIDerivedType(tag: DW_TAG_member, name: "mask_stencil_pos", scope: !2344, file: !2345, line: 136, baseType: !1335, size: 64, offset: 16320)
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "mask_stencil_dimension", scope: !2344, file: !2345, line: 137, baseType: !1335, size: 64, offset: 16384)
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "palette", scope: !2340, file: !829, line: 815, baseType: !2447, size: 64, offset: 64)
!2447 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2448, size: 64)
!2448 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Palette", file: !2345, line: 148, size: 1280, elements: !2449)
!2449 = !{!2450, !2451, !2452, !2453, !2454}
!2450 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2448, file: !2345, line: 150, baseType: !427, size: 960)
!2451 = !DIDerivedType(tag: DW_TAG_member, name: "colors", scope: !2448, file: !2345, line: 153, baseType: !388, size: 128, offset: 960)
!2452 = !DIDerivedType(tag: DW_TAG_member, name: "deleted", scope: !2448, file: !2345, line: 154, baseType: !388, size: 128, offset: 1088)
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "active_color", scope: !2448, file: !2345, line: 156, baseType: !98, size: 32, offset: 1216)
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2448, file: !2345, line: 157, baseType: !98, size: 32, offset: 1248)
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "paint_cursor", scope: !2340, file: !829, line: 818, baseType: !372, size: 64, offset: 128)
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "paint_cursor_col", scope: !2340, file: !829, line: 819, baseType: !2457, size: 32, offset: 192)
!2457 = !DICompositeType(tag: DW_TAG_array_type, baseType: !474, size: 32, elements: !409)
!2458 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2340, file: !829, line: 822, baseType: !98, size: 32, offset: 224)
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "num_input_samples", scope: !2340, file: !829, line: 826, baseType: !98, size: 32, offset: 256)
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "symmetry_flags", scope: !2340, file: !829, line: 829, baseType: !98, size: 32, offset: 288)
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2336, file: !829, line: 928, baseType: !399, size: 16, offset: 320)
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2336, file: !829, line: 928, baseType: !399, size: 16, offset: 336)
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "tot", scope: !2336, file: !829, line: 929, baseType: !98, size: 32, offset: 352)
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "vpaint_prev", scope: !2336, file: !829, line: 930, baseType: !1689, size: 64, offset: 384)
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "wpaint_prev", scope: !2336, file: !829, line: 931, baseType: !2466, size: 64, offset: 448)
!2466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2467, size: 64)
!2467 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MDeformVert", file: !2468, line: 59, size: 128, elements: !2469)
!2468 = !DIFile(filename: "blender/source/blender/makesdna/DNA_meshdata_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2469 = !{!2470, !2476, !2477}
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "dw", scope: !2467, file: !2468, line: 60, baseType: !2471, size: 64)
!2471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2472, size: 64)
!2472 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MDeformWeight", file: !2468, line: 54, size: 64, elements: !2473)
!2473 = !{!2474, !2475}
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "def_nr", scope: !2472, file: !2468, line: 55, baseType: !98, size: 32)
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !2472, file: !2468, line: 56, baseType: !396, size: 32, offset: 32)
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "totweight", scope: !2467, file: !2468, line: 61, baseType: !98, size: 32, offset: 64)
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2467, file: !2468, line: 62, baseType: !98, size: 32, offset: 96)
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !2336, file: !829, line: 933, baseType: !372, size: 64, offset: 512)
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "wpaint", scope: !2331, file: !829, line: 1069, baseType: !2334, size: 64, offset: 64)
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt", scope: !2331, file: !829, line: 1070, baseType: !2481, size: 64, offset: 128)
!2481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2482, size: 64)
!2482 = !DIDerivedType(tag: DW_TAG_typedef, name: "Sculpt", file: !829, line: 916, baseType: !2483)
!2483 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Sculpt", file: !829, line: 891, size: 704, elements: !2484)
!2484 = !{!2485, !2486, !2487, !2488, !2489, !2490, !2491, !2492, !2493}
!2485 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !2483, file: !829, line: 892, baseType: !2339, size: 320)
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2483, file: !829, line: 896, baseType: !98, size: 32, offset: 320)
!2487 = !DIDerivedType(tag: DW_TAG_member, name: "radial_symm", scope: !2483, file: !829, line: 900, baseType: !1842, size: 96, offset: 352)
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "detail_size", scope: !2483, file: !829, line: 903, baseType: !396, size: 32, offset: 448)
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "symmetrize_direction", scope: !2483, file: !829, line: 906, baseType: !98, size: 32, offset: 480)
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "gravity_factor", scope: !2483, file: !829, line: 909, baseType: !396, size: 32, offset: 512)
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "constant_detail", scope: !2483, file: !829, line: 912, baseType: !396, size: 32, offset: 544)
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "gravity_object", scope: !2483, file: !829, line: 914, baseType: !423, size: 64, offset: 576)
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2483, file: !829, line: 915, baseType: !372, size: 64, offset: 640)
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "uvsculpt", scope: !2331, file: !829, line: 1071, baseType: !2495, size: 64, offset: 192)
!2495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2496, size: 64)
!2496 = !DIDerivedType(tag: DW_TAG_typedef, name: "UvSculpt", file: !829, line: 920, baseType: !2497)
!2497 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UvSculpt", file: !829, line: 918, size: 320, elements: !2498)
!2498 = !{!2499}
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !2497, file: !829, line: 919, baseType: !2339, size: 320)
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "vgroup_weight", scope: !2331, file: !829, line: 1075, baseType: !396, size: 32, offset: 256)
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "doublimit", scope: !2331, file: !829, line: 1077, baseType: !396, size: 32, offset: 288)
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "normalsize", scope: !2331, file: !829, line: 1078, baseType: !396, size: 32, offset: 320)
!2503 = !DIDerivedType(tag: DW_TAG_member, name: "automerge", scope: !2331, file: !829, line: 1079, baseType: !399, size: 16, offset: 352)
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "selectmode", scope: !2331, file: !829, line: 1082, baseType: !399, size: 16, offset: 368)
!2505 = !DIDerivedType(tag: DW_TAG_member, name: "unwrapper", scope: !2331, file: !829, line: 1085, baseType: !375, size: 8, offset: 384)
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "uvcalc_flag", scope: !2331, file: !829, line: 1086, baseType: !375, size: 8, offset: 392)
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "uv_flag", scope: !2331, file: !829, line: 1087, baseType: !375, size: 8, offset: 400)
!2508 = !DIDerivedType(tag: DW_TAG_member, name: "uv_selectmode", scope: !2331, file: !829, line: 1088, baseType: !375, size: 8, offset: 408)
!2509 = !DIDerivedType(tag: DW_TAG_member, name: "uvcalc_margin", scope: !2331, file: !829, line: 1090, baseType: !396, size: 32, offset: 416)
!2510 = !DIDerivedType(tag: DW_TAG_member, name: "autoik_chainlen", scope: !2331, file: !829, line: 1093, baseType: !399, size: 16, offset: 448)
!2511 = !DIDerivedType(tag: DW_TAG_member, name: "gpencil_flags", scope: !2331, file: !829, line: 1096, baseType: !375, size: 8, offset: 464)
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2331, file: !829, line: 1098, baseType: !2513, size: 40, offset: 472)
!2513 = !DICompositeType(tag: DW_TAG_array_type, baseType: !375, size: 40, elements: !2514)
!2514 = !{!2515}
!2515 = !DISubrange(count: 5)
!2516 = !DIDerivedType(tag: DW_TAG_member, name: "imapaint", scope: !2331, file: !829, line: 1101, baseType: !2517, size: 832, offset: 512)
!2517 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImagePaintSettings", file: !829, line: 836, size: 832, elements: !2518)
!2518 = !{!2519, !2520, !2521, !2522, !2523, !2524, !2525, !2526, !2527, !2528, !2529, !2530, !2531}
!2519 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !2517, file: !829, line: 837, baseType: !2339, size: 320)
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2517, file: !829, line: 839, baseType: !399, size: 16, offset: 320)
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "missing_data", scope: !2517, file: !829, line: 839, baseType: !399, size: 16, offset: 336)
!2522 = !DIDerivedType(tag: DW_TAG_member, name: "seam_bleed", scope: !2517, file: !829, line: 842, baseType: !399, size: 16, offset: 352)
!2523 = !DIDerivedType(tag: DW_TAG_member, name: "normal_angle", scope: !2517, file: !829, line: 842, baseType: !399, size: 16, offset: 368)
!2524 = !DIDerivedType(tag: DW_TAG_member, name: "screen_grab_size", scope: !2517, file: !829, line: 843, baseType: !1292, size: 32, offset: 384)
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2517, file: !829, line: 845, baseType: !98, size: 32, offset: 416)
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !2517, file: !829, line: 847, baseType: !372, size: 64, offset: 448)
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "stencil", scope: !2517, file: !829, line: 848, baseType: !1655, size: 64, offset: 512)
!2528 = !DIDerivedType(tag: DW_TAG_member, name: "clone", scope: !2517, file: !829, line: 849, baseType: !1655, size: 64, offset: 576)
!2529 = !DIDerivedType(tag: DW_TAG_member, name: "canvas", scope: !2517, file: !829, line: 850, baseType: !1655, size: 64, offset: 640)
!2530 = !DIDerivedType(tag: DW_TAG_member, name: "stencil_col", scope: !2517, file: !829, line: 851, baseType: !779, size: 96, offset: 704)
!2531 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !2517, file: !829, line: 852, baseType: !396, size: 32, offset: 800)
!2532 = !DIDerivedType(tag: DW_TAG_member, name: "particle", scope: !2331, file: !829, line: 1104, baseType: !2533, size: 1344, offset: 1344)
!2533 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleEditSettings", file: !829, line: 867, size: 1344, elements: !2534)
!2534 = !{!2535, !2536, !2537, !2538, !2539, !2550, !2551, !2552, !2553, !2554, !2555, !2556, !2557, !2558}
!2535 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2533, file: !829, line: 868, baseType: !399, size: 16)
!2536 = !DIDerivedType(tag: DW_TAG_member, name: "totrekey", scope: !2533, file: !829, line: 869, baseType: !399, size: 16, offset: 16)
!2537 = !DIDerivedType(tag: DW_TAG_member, name: "totaddkey", scope: !2533, file: !829, line: 870, baseType: !399, size: 16, offset: 32)
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "brushtype", scope: !2533, file: !829, line: 871, baseType: !399, size: 16, offset: 48)
!2539 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !2533, file: !829, line: 873, baseType: !2540, size: 896, offset: 64)
!2540 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2541, size: 896, elements: !1731)
!2541 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParticleBrushData", file: !829, line: 864, baseType: !2542)
!2542 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleBrushData", file: !829, line: 859, size: 128, elements: !2543)
!2543 = !{!2544, !2545, !2546, !2547, !2548, !2549}
!2544 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2542, file: !829, line: 860, baseType: !399, size: 16)
!2545 = !DIDerivedType(tag: DW_TAG_member, name: "step", scope: !2542, file: !829, line: 861, baseType: !399, size: 16, offset: 16)
!2546 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !2542, file: !829, line: 861, baseType: !399, size: 16, offset: 32)
!2547 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2542, file: !829, line: 861, baseType: !399, size: 16, offset: 48)
!2548 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2542, file: !829, line: 862, baseType: !98, size: 32, offset: 64)
!2549 = !DIDerivedType(tag: DW_TAG_member, name: "strength", scope: !2542, file: !829, line: 863, baseType: !396, size: 32, offset: 96)
!2550 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !2533, file: !829, line: 874, baseType: !372, size: 64, offset: 960)
!2551 = !DIDerivedType(tag: DW_TAG_member, name: "emitterdist", scope: !2533, file: !829, line: 876, baseType: !396, size: 32, offset: 1024)
!2552 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !2533, file: !829, line: 876, baseType: !396, size: 32, offset: 1056)
!2553 = !DIDerivedType(tag: DW_TAG_member, name: "selectmode", scope: !2533, file: !829, line: 878, baseType: !98, size: 32, offset: 1088)
!2554 = !DIDerivedType(tag: DW_TAG_member, name: "edittype", scope: !2533, file: !829, line: 879, baseType: !98, size: 32, offset: 1120)
!2555 = !DIDerivedType(tag: DW_TAG_member, name: "draw_step", scope: !2533, file: !829, line: 881, baseType: !98, size: 32, offset: 1152)
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "fade_frames", scope: !2533, file: !829, line: 881, baseType: !98, size: 32, offset: 1184)
!2557 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !2533, file: !829, line: 883, baseType: !827, size: 64, offset: 1216)
!2558 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !2533, file: !829, line: 884, baseType: !423, size: 64, offset: 1280)
!2559 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_size", scope: !2331, file: !829, line: 1107, baseType: !396, size: 32, offset: 2688)
!2560 = !DIDerivedType(tag: DW_TAG_member, name: "select_thresh", scope: !2331, file: !829, line: 1110, baseType: !396, size: 32, offset: 2720)
!2561 = !DIDerivedType(tag: DW_TAG_member, name: "autokey_mode", scope: !2331, file: !829, line: 1113, baseType: !399, size: 16, offset: 2752)
!2562 = !DIDerivedType(tag: DW_TAG_member, name: "autokey_flag", scope: !2331, file: !829, line: 1113, baseType: !399, size: 16, offset: 2768)
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "multires_subdiv_type", scope: !2331, file: !829, line: 1116, baseType: !375, size: 8, offset: 2784)
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !2331, file: !829, line: 1117, baseType: !762, size: 8, offset: 2792)
!2565 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_resolution", scope: !2331, file: !829, line: 1120, baseType: !399, size: 16, offset: 2800)
!2566 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_threshold_internal", scope: !2331, file: !829, line: 1121, baseType: !396, size: 32, offset: 2816)
!2567 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_threshold_external", scope: !2331, file: !829, line: 1122, baseType: !396, size: 32, offset: 2848)
!2568 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_length_ratio", scope: !2331, file: !829, line: 1123, baseType: !396, size: 32, offset: 2880)
!2569 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_length_limit", scope: !2331, file: !829, line: 1124, baseType: !396, size: 32, offset: 2912)
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_angle_limit", scope: !2331, file: !829, line: 1125, baseType: !396, size: 32, offset: 2944)
!2571 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_correlation_limit", scope: !2331, file: !829, line: 1126, baseType: !396, size: 32, offset: 2976)
!2572 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_symmetry_limit", scope: !2331, file: !829, line: 1127, baseType: !396, size: 32, offset: 3008)
!2573 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_angle_weight", scope: !2331, file: !829, line: 1128, baseType: !396, size: 32, offset: 3040)
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_length_weight", scope: !2331, file: !829, line: 1129, baseType: !396, size: 32, offset: 3072)
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_distance_weight", scope: !2331, file: !829, line: 1130, baseType: !396, size: 32, offset: 3104)
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_options", scope: !2331, file: !829, line: 1131, baseType: !399, size: 16, offset: 3136)
!2577 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_postpro", scope: !2331, file: !829, line: 1132, baseType: !375, size: 8, offset: 3152)
!2578 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_postpro_passes", scope: !2331, file: !829, line: 1133, baseType: !375, size: 8, offset: 3160)
!2579 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_subdivisions", scope: !2331, file: !829, line: 1134, baseType: !415, size: 24, offset: 3168)
!2580 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_multi_level", scope: !2331, file: !829, line: 1135, baseType: !375, size: 8, offset: 3192)
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_template", scope: !2331, file: !829, line: 1138, baseType: !423, size: 64, offset: 3200)
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "bone_sketching", scope: !2331, file: !829, line: 1139, baseType: !375, size: 8, offset: 3264)
!2583 = !DIDerivedType(tag: DW_TAG_member, name: "bone_sketching_convert", scope: !2331, file: !829, line: 1140, baseType: !375, size: 8, offset: 3272)
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_subdivision_number", scope: !2331, file: !829, line: 1141, baseType: !375, size: 8, offset: 3280)
!2585 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_options", scope: !2331, file: !829, line: 1142, baseType: !375, size: 8, offset: 3288)
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_roll", scope: !2331, file: !829, line: 1143, baseType: !375, size: 8, offset: 3296)
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_side_string", scope: !2331, file: !829, line: 1144, baseType: !2588, size: 64, offset: 3304)
!2588 = !DICompositeType(tag: DW_TAG_array_type, baseType: !375, size: 64, elements: !400)
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_num_string", scope: !2331, file: !829, line: 1145, baseType: !2588, size: 64, offset: 3368)
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "edge_mode", scope: !2331, file: !829, line: 1148, baseType: !375, size: 8, offset: 3432)
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "edge_mode_live_unwrap", scope: !2331, file: !829, line: 1149, baseType: !375, size: 8, offset: 3440)
!2592 = !DIDerivedType(tag: DW_TAG_member, name: "snap_mode", scope: !2331, file: !829, line: 1152, baseType: !375, size: 8, offset: 3448)
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "snap_node_mode", scope: !2331, file: !829, line: 1152, baseType: !375, size: 8, offset: 3456)
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "snap_uv_mode", scope: !2331, file: !829, line: 1153, baseType: !375, size: 8, offset: 3464)
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "snap_flag", scope: !2331, file: !829, line: 1154, baseType: !399, size: 16, offset: 3472)
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "snap_target", scope: !2331, file: !829, line: 1154, baseType: !399, size: 16, offset: 3488)
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "proportional", scope: !2331, file: !829, line: 1155, baseType: !399, size: 16, offset: 3504)
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "prop_mode", scope: !2331, file: !829, line: 1155, baseType: !399, size: 16, offset: 3520)
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_objects", scope: !2331, file: !829, line: 1156, baseType: !375, size: 8, offset: 3536)
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_mask", scope: !2331, file: !829, line: 1157, baseType: !375, size: 8, offset: 3544)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "auto_normalize", scope: !2331, file: !829, line: 1159, baseType: !375, size: 8, offset: 3552)
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "multipaint", scope: !2331, file: !829, line: 1160, baseType: !375, size: 8, offset: 3560)
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "weightuser", scope: !2331, file: !829, line: 1161, baseType: !375, size: 8, offset: 3568)
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "vgroupsubset", scope: !2331, file: !829, line: 1162, baseType: !375, size: 8, offset: 3576)
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "use_uv_sculpt", scope: !2331, file: !829, line: 1165, baseType: !98, size: 32, offset: 3584)
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "uv_sculpt_settings", scope: !2331, file: !829, line: 1166, baseType: !98, size: 32, offset: 3616)
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "uv_sculpt_tool", scope: !2331, file: !829, line: 1167, baseType: !98, size: 32, offset: 3648)
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "uv_relax_method", scope: !2331, file: !829, line: 1168, baseType: !98, size: 32, offset: 3680)
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_settings", scope: !2331, file: !829, line: 1171, baseType: !399, size: 16, offset: 3712)
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "pad5", scope: !2331, file: !829, line: 1171, baseType: !399, size: 16, offset: 3728)
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_size", scope: !2331, file: !829, line: 1172, baseType: !98, size: 32, offset: 3744)
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_unprojected_radius", scope: !2331, file: !829, line: 1173, baseType: !396, size: 32, offset: 3776)
!2613 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_alpha", scope: !2331, file: !829, line: 1174, baseType: !396, size: 32, offset: 3808)
!2614 = !DIDerivedType(tag: DW_TAG_member, name: "unified_paint_settings", scope: !2331, file: !829, line: 1177, baseType: !2615, size: 1024, offset: 3840)
!2615 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UnifiedPaintSettings", file: !829, line: 963, size: 1024, elements: !2616)
!2616 = !{!2617, !2618, !2619, !2620, !2621, !2622, !2623, !2624, !2625, !2626, !2627, !2628, !2629, !2630, !2631, !2632, !2633, !2634, !2635, !2636, !2637, !2640, !2641}
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2615, file: !829, line: 965, baseType: !98, size: 32)
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "unprojected_radius", scope: !2615, file: !829, line: 968, baseType: !396, size: 32, offset: 32)
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "alpha", scope: !2615, file: !829, line: 971, baseType: !396, size: 32, offset: 64)
!2620 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !2615, file: !829, line: 974, baseType: !396, size: 32, offset: 96)
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "rgb", scope: !2615, file: !829, line: 977, baseType: !779, size: 96, offset: 128)
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "secondary_rgb", scope: !2615, file: !829, line: 979, baseType: !779, size: 96, offset: 224)
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2615, file: !829, line: 982, baseType: !98, size: 32, offset: 320)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "last_rake", scope: !2615, file: !829, line: 987, baseType: !1335, size: 64, offset: 352)
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "brush_rotation", scope: !2615, file: !829, line: 989, baseType: !396, size: 32, offset: 416)
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "draw_anchored", scope: !2615, file: !829, line: 994, baseType: !98, size: 32, offset: 448)
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "anchored_size", scope: !2615, file: !829, line: 995, baseType: !98, size: 32, offset: 480)
!2628 = !DIDerivedType(tag: DW_TAG_member, name: "draw_inverted", scope: !2615, file: !829, line: 997, baseType: !375, size: 8, offset: 512)
!2629 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !2615, file: !829, line: 998, baseType: !1730, size: 56, offset: 520)
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "overlap_factor", scope: !2615, file: !829, line: 1000, baseType: !396, size: 32, offset: 576)
!2631 = !DIDerivedType(tag: DW_TAG_member, name: "anchored_initial_mouse", scope: !2615, file: !829, line: 1003, baseType: !1335, size: 64, offset: 608)
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "stroke_active", scope: !2615, file: !829, line: 1006, baseType: !98, size: 32, offset: 672)
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "size_pressure_value", scope: !2615, file: !829, line: 1009, baseType: !396, size: 32, offset: 704)
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "tex_mouse", scope: !2615, file: !829, line: 1012, baseType: !1335, size: 64, offset: 736)
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "mask_tex_mouse", scope: !2615, file: !829, line: 1015, baseType: !1335, size: 64, offset: 800)
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "do_linear_conversion", scope: !2615, file: !829, line: 1018, baseType: !98, size: 32, offset: 864)
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !2615, file: !829, line: 1019, baseType: !2638, size: 64, offset: 896)
!2638 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2639, size: 64)
!2639 = !DICompositeType(tag: DW_TAG_structure_type, name: "ColorSpace", file: !829, line: 63, flags: DIFlagFwdDecl)
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "pixel_radius", scope: !2615, file: !829, line: 1023, baseType: !396, size: 32, offset: 960)
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !2615, file: !829, line: 1024, baseType: !98, size: 32, offset: 992)
!2642 = !DIDerivedType(tag: DW_TAG_member, name: "statvis", scope: !2331, file: !829, line: 1179, baseType: !2643, size: 320, offset: 4864)
!2643 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MeshStatVis", file: !829, line: 1043, size: 320, elements: !2644)
!2644 = !{!2645, !2646, !2648, !2649, !2650, !2651, !2652, !2653, !2654, !2655, !2656, !2657, !2658}
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2643, file: !829, line: 1044, baseType: !375, size: 8)
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "_pad1", scope: !2643, file: !829, line: 1045, baseType: !2647, size: 16, offset: 8)
!2647 = !DICompositeType(tag: DW_TAG_array_type, baseType: !375, size: 16, elements: !1293)
!2648 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_axis", scope: !2643, file: !829, line: 1048, baseType: !375, size: 8, offset: 24)
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_min", scope: !2643, file: !829, line: 1049, baseType: !396, size: 32, offset: 32)
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_max", scope: !2643, file: !829, line: 1049, baseType: !396, size: 32, offset: 64)
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_min", scope: !2643, file: !829, line: 1052, baseType: !396, size: 32, offset: 96)
!2652 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_max", scope: !2643, file: !829, line: 1052, baseType: !396, size: 32, offset: 128)
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_samples", scope: !2643, file: !829, line: 1053, baseType: !375, size: 8, offset: 160)
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "_pad2", scope: !2643, file: !829, line: 1054, baseType: !415, size: 24, offset: 168)
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "distort_min", scope: !2643, file: !829, line: 1057, baseType: !396, size: 32, offset: 192)
!2656 = !DIDerivedType(tag: DW_TAG_member, name: "distort_max", scope: !2643, file: !829, line: 1057, baseType: !396, size: 32, offset: 224)
!2657 = !DIDerivedType(tag: DW_TAG_member, name: "sharp_min", scope: !2643, file: !829, line: 1060, baseType: !396, size: 32, offset: 256)
!2658 = !DIDerivedType(tag: DW_TAG_member, name: "sharp_max", scope: !2643, file: !829, line: 1060, baseType: !396, size: 32, offset: 288)
!2659 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !828, file: !829, line: 1247, baseType: !2660, size: 64, offset: 2176)
!2660 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2661, size: 64)
!2661 = !DICompositeType(tag: DW_TAG_structure_type, name: "SceneStats", file: !829, line: 60, flags: DIFlagFwdDecl)
!2662 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !828, file: !829, line: 1251, baseType: !2663, size: 31872, offset: 2240)
!2663 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderData", file: !829, line: 403, size: 31872, elements: !2664)
!2664 = !{!2665, !2700, !2720, !2729, !2749, !2769, !2770, !2771, !2772, !2773, !2774, !2775, !2776, !2777, !2778, !2779, !2780, !2781, !2782, !2783, !2784, !2785, !2786, !2787, !2788, !2789, !2790, !2791, !2792, !2793, !2794, !2795, !2796, !2797, !2798, !2799, !2800, !2801, !2802, !2803, !2804, !2805, !2806, !2807, !2808, !2809, !2810, !2811, !2812, !2813, !2814, !2815, !2816, !2817, !2818, !2819, !2820, !2821, !2822, !2823, !2824, !2825, !2826, !2827, !2828, !2829, !2830, !2831, !2832, !2833, !2834, !2835, !2836, !2837, !2838, !2839, !2840, !2841, !2842, !2843, !2844, !2845, !2846, !2847, !2848, !2849, !2850, !2851, !2852, !2853, !2854, !2855, !2856, !2857, !2858, !2859, !2860, !2861, !2862, !2863, !2864, !2865, !2866, !2867, !2868, !2869, !2870, !2871, !2872, !2873, !2874, !2875, !2876, !2907, !2908, !2909, !2911, !2927, !2928}
!2665 = !DIDerivedType(tag: DW_TAG_member, name: "im_format", scope: !2663, file: !829, line: 404, baseType: !2666, size: 1984)
!2666 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImageFormatData", file: !829, line: 259, size: 1984, elements: !2667)
!2667 = !{!2668, !2669, !2670, !2671, !2672, !2673, !2674, !2675, !2676, !2677, !2678, !2679, !2680, !2681, !2683, !2695}
!2668 = !DIDerivedType(tag: DW_TAG_member, name: "imtype", scope: !2666, file: !829, line: 260, baseType: !375, size: 8)
!2669 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !2666, file: !829, line: 263, baseType: !375, size: 8, offset: 8)
!2670 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !2666, file: !829, line: 266, baseType: !375, size: 8, offset: 16)
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2666, file: !829, line: 267, baseType: !375, size: 8, offset: 24)
!2672 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !2666, file: !829, line: 269, baseType: !375, size: 8, offset: 32)
!2673 = !DIDerivedType(tag: DW_TAG_member, name: "compress", scope: !2666, file: !829, line: 270, baseType: !375, size: 8, offset: 40)
!2674 = !DIDerivedType(tag: DW_TAG_member, name: "exr_codec", scope: !2666, file: !829, line: 276, baseType: !375, size: 8, offset: 48)
!2675 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_flag", scope: !2666, file: !829, line: 279, baseType: !375, size: 8, offset: 56)
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_white", scope: !2666, file: !829, line: 280, baseType: !399, size: 16, offset: 64)
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_black", scope: !2666, file: !829, line: 280, baseType: !399, size: 16, offset: 80)
!2678 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_gamma", scope: !2666, file: !829, line: 281, baseType: !396, size: 32, offset: 96)
!2679 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_flag", scope: !2666, file: !829, line: 284, baseType: !375, size: 8, offset: 128)
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_codec", scope: !2666, file: !829, line: 285, baseType: !375, size: 8, offset: 136)
!2681 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2666, file: !829, line: 287, baseType: !2682, size: 48, offset: 144)
!2682 = !DICompositeType(tag: DW_TAG_array_type, baseType: !375, size: 48, elements: !1749)
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "view_settings", scope: !2666, file: !829, line: 290, baseType: !2684, size: 1280, offset: 192)
!2684 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedViewSettings", file: !1453, line: 174, baseType: !2685)
!2685 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedViewSettings", file: !1453, line: 166, size: 1280, elements: !2686)
!2686 = !{!2687, !2688, !2689, !2690, !2691, !2692, !2693, !2694}
!2687 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2685, file: !1453, line: 167, baseType: !98, size: 32)
!2688 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2685, file: !1453, line: 167, baseType: !98, size: 32, offset: 32)
!2689 = !DIDerivedType(tag: DW_TAG_member, name: "look", scope: !2685, file: !1453, line: 168, baseType: !692, size: 512, offset: 64)
!2690 = !DIDerivedType(tag: DW_TAG_member, name: "view_transform", scope: !2685, file: !1453, line: 169, baseType: !692, size: 512, offset: 576)
!2691 = !DIDerivedType(tag: DW_TAG_member, name: "exposure", scope: !2685, file: !1453, line: 170, baseType: !396, size: 32, offset: 1088)
!2692 = !DIDerivedType(tag: DW_TAG_member, name: "gamma", scope: !2685, file: !1453, line: 171, baseType: !396, size: 32, offset: 1120)
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "curve_mapping", scope: !2685, file: !1453, line: 172, baseType: !1799, size: 64, offset: 1152)
!2694 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2685, file: !1453, line: 173, baseType: !372, size: 64, offset: 1216)
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "display_settings", scope: !2666, file: !829, line: 291, baseType: !2696, size: 512, offset: 1472)
!2696 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedDisplaySettings", file: !1453, line: 178, baseType: !2697)
!2697 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedDisplaySettings", file: !1453, line: 176, size: 512, elements: !2698)
!2698 = !{!2699}
!2699 = !DIDerivedType(tag: DW_TAG_member, name: "display_device", scope: !2697, file: !1453, line: 177, baseType: !692, size: 512)
!2700 = !DIDerivedType(tag: DW_TAG_member, name: "avicodecdata", scope: !2663, file: !829, line: 406, baseType: !2701, size: 64, offset: 1984)
!2701 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2702, size: 64)
!2702 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AviCodecData", file: !829, line: 80, size: 1472, elements: !2703)
!2703 = !{!2704, !2705, !2706, !2707, !2708, !2709, !2710, !2711, !2712, !2713, !2714, !2715, !2716}
!2704 = !DIDerivedType(tag: DW_TAG_member, name: "lpFormat", scope: !2702, file: !829, line: 81, baseType: !372, size: 64)
!2705 = !DIDerivedType(tag: DW_TAG_member, name: "lpParms", scope: !2702, file: !829, line: 82, baseType: !372, size: 64, offset: 64)
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "cbFormat", scope: !2702, file: !829, line: 83, baseType: !7, size: 32, offset: 128)
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "cbParms", scope: !2702, file: !829, line: 84, baseType: !7, size: 32, offset: 160)
!2708 = !DIDerivedType(tag: DW_TAG_member, name: "fccType", scope: !2702, file: !829, line: 86, baseType: !7, size: 32, offset: 192)
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "fccHandler", scope: !2702, file: !829, line: 87, baseType: !7, size: 32, offset: 224)
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "dwKeyFrameEvery", scope: !2702, file: !829, line: 88, baseType: !7, size: 32, offset: 256)
!2711 = !DIDerivedType(tag: DW_TAG_member, name: "dwQuality", scope: !2702, file: !829, line: 89, baseType: !7, size: 32, offset: 288)
!2712 = !DIDerivedType(tag: DW_TAG_member, name: "dwBytesPerSecond", scope: !2702, file: !829, line: 90, baseType: !7, size: 32, offset: 320)
!2713 = !DIDerivedType(tag: DW_TAG_member, name: "dwFlags", scope: !2702, file: !829, line: 91, baseType: !7, size: 32, offset: 352)
!2714 = !DIDerivedType(tag: DW_TAG_member, name: "dwInterleaveEvery", scope: !2702, file: !829, line: 92, baseType: !7, size: 32, offset: 384)
!2715 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2702, file: !829, line: 93, baseType: !7, size: 32, offset: 416)
!2716 = !DIDerivedType(tag: DW_TAG_member, name: "avicodecname", scope: !2702, file: !829, line: 95, baseType: !2717, size: 1024, offset: 448)
!2717 = !DICompositeType(tag: DW_TAG_array_type, baseType: !375, size: 1024, elements: !2718)
!2718 = !{!2719}
!2719 = !DISubrange(count: 128)
!2720 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecdata", scope: !2663, file: !829, line: 407, baseType: !2721, size: 64, offset: 2048)
!2721 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2722, size: 64)
!2722 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "QuicktimeCodecData", file: !829, line: 98, size: 1216, elements: !2723)
!2723 = !{!2724, !2725, !2726, !2727, !2728}
!2724 = !DIDerivedType(tag: DW_TAG_member, name: "cdParms", scope: !2722, file: !829, line: 100, baseType: !372, size: 64)
!2725 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2722, file: !829, line: 101, baseType: !372, size: 64, offset: 64)
!2726 = !DIDerivedType(tag: DW_TAG_member, name: "cdSize", scope: !2722, file: !829, line: 103, baseType: !7, size: 32, offset: 128)
!2727 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2722, file: !829, line: 104, baseType: !7, size: 32, offset: 160)
!2728 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecname", scope: !2722, file: !829, line: 106, baseType: !2717, size: 1024, offset: 192)
!2729 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecsettings", scope: !2663, file: !829, line: 408, baseType: !2730, size: 512, offset: 2112)
!2730 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "QuicktimeCodecSettings", file: !829, line: 109, size: 512, elements: !2731)
!2731 = !{!2732, !2733, !2734, !2735, !2736, !2737, !2738, !2739, !2740, !2741, !2742, !2743, !2744, !2745, !2746, !2747, !2748}
!2732 = !DIDerivedType(tag: DW_TAG_member, name: "codecType", scope: !2730, file: !829, line: 111, baseType: !98, size: 32)
!2733 = !DIDerivedType(tag: DW_TAG_member, name: "codecSpatialQuality", scope: !2730, file: !829, line: 112, baseType: !98, size: 32, offset: 32)
!2734 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !2730, file: !829, line: 115, baseType: !98, size: 32, offset: 64)
!2735 = !DIDerivedType(tag: DW_TAG_member, name: "codecFlags", scope: !2730, file: !829, line: 116, baseType: !98, size: 32, offset: 96)
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "colorDepth", scope: !2730, file: !829, line: 117, baseType: !98, size: 32, offset: 128)
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "codecTemporalQuality", scope: !2730, file: !829, line: 118, baseType: !98, size: 32, offset: 160)
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "minSpatialQuality", scope: !2730, file: !829, line: 119, baseType: !98, size: 32, offset: 192)
!2739 = !DIDerivedType(tag: DW_TAG_member, name: "minTemporalQuality", scope: !2730, file: !829, line: 120, baseType: !98, size: 32, offset: 224)
!2740 = !DIDerivedType(tag: DW_TAG_member, name: "keyFrameRate", scope: !2730, file: !829, line: 121, baseType: !98, size: 32, offset: 256)
!2741 = !DIDerivedType(tag: DW_TAG_member, name: "bitRate", scope: !2730, file: !829, line: 122, baseType: !98, size: 32, offset: 288)
!2742 = !DIDerivedType(tag: DW_TAG_member, name: "audiocodecType", scope: !2730, file: !829, line: 125, baseType: !98, size: 32, offset: 320)
!2743 = !DIDerivedType(tag: DW_TAG_member, name: "audioSampleRate", scope: !2730, file: !829, line: 126, baseType: !98, size: 32, offset: 352)
!2744 = !DIDerivedType(tag: DW_TAG_member, name: "audioBitDepth", scope: !2730, file: !829, line: 127, baseType: !399, size: 16, offset: 384)
!2745 = !DIDerivedType(tag: DW_TAG_member, name: "audioChannels", scope: !2730, file: !829, line: 128, baseType: !399, size: 16, offset: 400)
!2746 = !DIDerivedType(tag: DW_TAG_member, name: "audioCodecFlags", scope: !2730, file: !829, line: 129, baseType: !98, size: 32, offset: 416)
!2747 = !DIDerivedType(tag: DW_TAG_member, name: "audioBitRate", scope: !2730, file: !829, line: 130, baseType: !98, size: 32, offset: 448)
!2748 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !2730, file: !829, line: 131, baseType: !98, size: 32, offset: 480)
!2749 = !DIDerivedType(tag: DW_TAG_member, name: "ffcodecdata", scope: !2663, file: !829, line: 409, baseType: !2750, size: 576, offset: 2624)
!2750 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FFMpegCodecData", file: !829, line: 134, size: 576, elements: !2751)
!2751 = !{!2752, !2753, !2754, !2755, !2756, !2757, !2758, !2759, !2760, !2761, !2762, !2763, !2764, !2765, !2766, !2767, !2768}
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2750, file: !829, line: 135, baseType: !98, size: 32)
!2753 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !2750, file: !829, line: 136, baseType: !98, size: 32, offset: 32)
!2754 = !DIDerivedType(tag: DW_TAG_member, name: "audio_codec", scope: !2750, file: !829, line: 137, baseType: !98, size: 32, offset: 64)
!2755 = !DIDerivedType(tag: DW_TAG_member, name: "video_bitrate", scope: !2750, file: !829, line: 138, baseType: !98, size: 32, offset: 96)
!2756 = !DIDerivedType(tag: DW_TAG_member, name: "audio_bitrate", scope: !2750, file: !829, line: 139, baseType: !98, size: 32, offset: 128)
!2757 = !DIDerivedType(tag: DW_TAG_member, name: "audio_mixrate", scope: !2750, file: !829, line: 140, baseType: !98, size: 32, offset: 160)
!2758 = !DIDerivedType(tag: DW_TAG_member, name: "audio_channels", scope: !2750, file: !829, line: 141, baseType: !98, size: 32, offset: 192)
!2759 = !DIDerivedType(tag: DW_TAG_member, name: "audio_pad", scope: !2750, file: !829, line: 142, baseType: !98, size: 32, offset: 224)
!2760 = !DIDerivedType(tag: DW_TAG_member, name: "audio_volume", scope: !2750, file: !829, line: 143, baseType: !396, size: 32, offset: 256)
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "gop_size", scope: !2750, file: !829, line: 144, baseType: !98, size: 32, offset: 288)
!2762 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2750, file: !829, line: 145, baseType: !98, size: 32, offset: 320)
!2763 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_rate", scope: !2750, file: !829, line: 147, baseType: !98, size: 32, offset: 352)
!2764 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_rate", scope: !2750, file: !829, line: 148, baseType: !98, size: 32, offset: 384)
!2765 = !DIDerivedType(tag: DW_TAG_member, name: "rc_buffer_size", scope: !2750, file: !829, line: 149, baseType: !98, size: 32, offset: 416)
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "mux_packet_size", scope: !2750, file: !829, line: 150, baseType: !98, size: 32, offset: 448)
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "mux_rate", scope: !2750, file: !829, line: 151, baseType: !98, size: 32, offset: 480)
!2768 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !2750, file: !829, line: 152, baseType: !1094, size: 64, offset: 512)
!2769 = !DIDerivedType(tag: DW_TAG_member, name: "cfra", scope: !2663, file: !829, line: 411, baseType: !98, size: 32, offset: 3200)
!2770 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !2663, file: !829, line: 411, baseType: !98, size: 32, offset: 3232)
!2771 = !DIDerivedType(tag: DW_TAG_member, name: "efra", scope: !2663, file: !829, line: 411, baseType: !98, size: 32, offset: 3264)
!2772 = !DIDerivedType(tag: DW_TAG_member, name: "subframe", scope: !2663, file: !829, line: 412, baseType: !396, size: 32, offset: 3296)
!2773 = !DIDerivedType(tag: DW_TAG_member, name: "psfra", scope: !2663, file: !829, line: 413, baseType: !98, size: 32, offset: 3328)
!2774 = !DIDerivedType(tag: DW_TAG_member, name: "pefra", scope: !2663, file: !829, line: 413, baseType: !98, size: 32, offset: 3360)
!2775 = !DIDerivedType(tag: DW_TAG_member, name: "images", scope: !2663, file: !829, line: 415, baseType: !98, size: 32, offset: 3392)
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "framapto", scope: !2663, file: !829, line: 415, baseType: !98, size: 32, offset: 3424)
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2663, file: !829, line: 416, baseType: !399, size: 16, offset: 3456)
!2778 = !DIDerivedType(tag: DW_TAG_member, name: "threads", scope: !2663, file: !829, line: 416, baseType: !399, size: 16, offset: 3472)
!2779 = !DIDerivedType(tag: DW_TAG_member, name: "framelen", scope: !2663, file: !829, line: 418, baseType: !396, size: 32, offset: 3488)
!2780 = !DIDerivedType(tag: DW_TAG_member, name: "blurfac", scope: !2663, file: !829, line: 418, baseType: !396, size: 32, offset: 3520)
!2781 = !DIDerivedType(tag: DW_TAG_member, name: "edgeR", scope: !2663, file: !829, line: 421, baseType: !396, size: 32, offset: 3552)
!2782 = !DIDerivedType(tag: DW_TAG_member, name: "edgeG", scope: !2663, file: !829, line: 421, baseType: !396, size: 32, offset: 3584)
!2783 = !DIDerivedType(tag: DW_TAG_member, name: "edgeB", scope: !2663, file: !829, line: 421, baseType: !396, size: 32, offset: 3616)
!2784 = !DIDerivedType(tag: DW_TAG_member, name: "fullscreen", scope: !2663, file: !829, line: 425, baseType: !399, size: 16, offset: 3648)
!2785 = !DIDerivedType(tag: DW_TAG_member, name: "xplay", scope: !2663, file: !829, line: 425, baseType: !399, size: 16, offset: 3664)
!2786 = !DIDerivedType(tag: DW_TAG_member, name: "yplay", scope: !2663, file: !829, line: 425, baseType: !399, size: 16, offset: 3680)
!2787 = !DIDerivedType(tag: DW_TAG_member, name: "freqplay", scope: !2663, file: !829, line: 426, baseType: !399, size: 16, offset: 3696)
!2788 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !2663, file: !829, line: 428, baseType: !399, size: 16, offset: 3712)
!2789 = !DIDerivedType(tag: DW_TAG_member, name: "attrib", scope: !2663, file: !829, line: 428, baseType: !399, size: 16, offset: 3728)
!2790 = !DIDerivedType(tag: DW_TAG_member, name: "frame_step", scope: !2663, file: !829, line: 431, baseType: !98, size: 32, offset: 3744)
!2791 = !DIDerivedType(tag: DW_TAG_member, name: "stereomode", scope: !2663, file: !829, line: 433, baseType: !399, size: 16, offset: 3776)
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "dimensionspreset", scope: !2663, file: !829, line: 435, baseType: !399, size: 16, offset: 3792)
!2793 = !DIDerivedType(tag: DW_TAG_member, name: "filtertype", scope: !2663, file: !829, line: 437, baseType: !399, size: 16, offset: 3808)
!2794 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2663, file: !829, line: 439, baseType: !399, size: 16, offset: 3824)
!2795 = !DIDerivedType(tag: DW_TAG_member, name: "maximsize", scope: !2663, file: !829, line: 441, baseType: !399, size: 16, offset: 3840)
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "pad6", scope: !2663, file: !829, line: 443, baseType: !399, size: 16, offset: 3856)
!2797 = !DIDerivedType(tag: DW_TAG_member, name: "xsch", scope: !2663, file: !829, line: 449, baseType: !98, size: 32, offset: 3872)
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "ysch", scope: !2663, file: !829, line: 453, baseType: !98, size: 32, offset: 3904)
!2799 = !DIDerivedType(tag: DW_TAG_member, name: "xparts", scope: !2663, file: !829, line: 458, baseType: !399, size: 16, offset: 3936)
!2800 = !DIDerivedType(tag: DW_TAG_member, name: "yparts", scope: !2663, file: !829, line: 462, baseType: !399, size: 16, offset: 3952)
!2801 = !DIDerivedType(tag: DW_TAG_member, name: "tilex", scope: !2663, file: !829, line: 467, baseType: !98, size: 32, offset: 3968)
!2802 = !DIDerivedType(tag: DW_TAG_member, name: "tiley", scope: !2663, file: !829, line: 467, baseType: !98, size: 32, offset: 4000)
!2803 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !2663, file: !829, line: 469, baseType: !399, size: 16, offset: 4032)
!2804 = !DIDerivedType(tag: DW_TAG_member, name: "imtype", scope: !2663, file: !829, line: 469, baseType: !399, size: 16, offset: 4048)
!2805 = !DIDerivedType(tag: DW_TAG_member, name: "subimtype", scope: !2663, file: !829, line: 469, baseType: !399, size: 16, offset: 4064)
!2806 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !2663, file: !829, line: 469, baseType: !399, size: 16, offset: 4080)
!2807 = !DIDerivedType(tag: DW_TAG_member, name: "displaymode", scope: !2663, file: !829, line: 474, baseType: !399, size: 16, offset: 4096)
!2808 = !DIDerivedType(tag: DW_TAG_member, name: "use_lock_interface", scope: !2663, file: !829, line: 475, baseType: !375, size: 8, offset: 4112)
!2809 = !DIDerivedType(tag: DW_TAG_member, name: "pad7", scope: !2663, file: !829, line: 476, baseType: !375, size: 8, offset: 4120)
!2810 = !DIDerivedType(tag: DW_TAG_member, name: "scemode", scope: !2663, file: !829, line: 481, baseType: !98, size: 32, offset: 4128)
!2811 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2663, file: !829, line: 486, baseType: !98, size: 32, offset: 4160)
!2812 = !DIDerivedType(tag: DW_TAG_member, name: "raytrace_options", scope: !2663, file: !829, line: 491, baseType: !98, size: 32, offset: 4192)
!2813 = !DIDerivedType(tag: DW_TAG_member, name: "raytrace_structure", scope: !2663, file: !829, line: 496, baseType: !399, size: 16, offset: 4224)
!2814 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !2663, file: !829, line: 498, baseType: !399, size: 16, offset: 4240)
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "ocres", scope: !2663, file: !829, line: 501, baseType: !399, size: 16, offset: 4256)
!2816 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !2663, file: !829, line: 502, baseType: !399, size: 16, offset: 4272)
!2817 = !DIDerivedType(tag: DW_TAG_member, name: "alphamode", scope: !2663, file: !829, line: 508, baseType: !399, size: 16, offset: 4288)
!2818 = !DIDerivedType(tag: DW_TAG_member, name: "osa", scope: !2663, file: !829, line: 513, baseType: !399, size: 16, offset: 4304)
!2819 = !DIDerivedType(tag: DW_TAG_member, name: "frs_sec", scope: !2663, file: !829, line: 515, baseType: !399, size: 16, offset: 4320)
!2820 = !DIDerivedType(tag: DW_TAG_member, name: "edgeint", scope: !2663, file: !829, line: 515, baseType: !399, size: 16, offset: 4336)
!2821 = !DIDerivedType(tag: DW_TAG_member, name: "safety", scope: !2663, file: !829, line: 519, baseType: !1315, size: 128, offset: 4352)
!2822 = !DIDerivedType(tag: DW_TAG_member, name: "border", scope: !2663, file: !829, line: 519, baseType: !1315, size: 128, offset: 4480)
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "disprect", scope: !2663, file: !829, line: 520, baseType: !1325, size: 128, offset: 4608)
!2824 = !DIDerivedType(tag: DW_TAG_member, name: "layers", scope: !2663, file: !829, line: 523, baseType: !388, size: 128, offset: 4736)
!2825 = !DIDerivedType(tag: DW_TAG_member, name: "actlay", scope: !2663, file: !829, line: 524, baseType: !399, size: 16, offset: 4864)
!2826 = !DIDerivedType(tag: DW_TAG_member, name: "mblur_samples", scope: !2663, file: !829, line: 527, baseType: !399, size: 16, offset: 4880)
!2827 = !DIDerivedType(tag: DW_TAG_member, name: "xasp", scope: !2663, file: !829, line: 532, baseType: !396, size: 32, offset: 4896)
!2828 = !DIDerivedType(tag: DW_TAG_member, name: "yasp", scope: !2663, file: !829, line: 532, baseType: !396, size: 32, offset: 4928)
!2829 = !DIDerivedType(tag: DW_TAG_member, name: "frs_sec_base", scope: !2663, file: !829, line: 534, baseType: !396, size: 32, offset: 4960)
!2830 = !DIDerivedType(tag: DW_TAG_member, name: "gauss", scope: !2663, file: !829, line: 538, baseType: !396, size: 32, offset: 4992)
!2831 = !DIDerivedType(tag: DW_TAG_member, name: "color_mgt_flag", scope: !2663, file: !829, line: 542, baseType: !98, size: 32, offset: 5024)
!2832 = !DIDerivedType(tag: DW_TAG_member, name: "postgamma", scope: !2663, file: !829, line: 545, baseType: !396, size: 32, offset: 5056)
!2833 = !DIDerivedType(tag: DW_TAG_member, name: "posthue", scope: !2663, file: !829, line: 545, baseType: !396, size: 32, offset: 5088)
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "postsat", scope: !2663, file: !829, line: 545, baseType: !396, size: 32, offset: 5120)
!2835 = !DIDerivedType(tag: DW_TAG_member, name: "dither_intensity", scope: !2663, file: !829, line: 548, baseType: !396, size: 32, offset: 5152)
!2836 = !DIDerivedType(tag: DW_TAG_member, name: "bake_osa", scope: !2663, file: !829, line: 551, baseType: !399, size: 16, offset: 5184)
!2837 = !DIDerivedType(tag: DW_TAG_member, name: "bake_filter", scope: !2663, file: !829, line: 551, baseType: !399, size: 16, offset: 5200)
!2838 = !DIDerivedType(tag: DW_TAG_member, name: "bake_mode", scope: !2663, file: !829, line: 551, baseType: !399, size: 16, offset: 5216)
!2839 = !DIDerivedType(tag: DW_TAG_member, name: "bake_flag", scope: !2663, file: !829, line: 551, baseType: !399, size: 16, offset: 5232)
!2840 = !DIDerivedType(tag: DW_TAG_member, name: "bake_normal_space", scope: !2663, file: !829, line: 552, baseType: !399, size: 16, offset: 5248)
!2841 = !DIDerivedType(tag: DW_TAG_member, name: "bake_quad_split", scope: !2663, file: !829, line: 552, baseType: !399, size: 16, offset: 5264)
!2842 = !DIDerivedType(tag: DW_TAG_member, name: "bake_maxdist", scope: !2663, file: !829, line: 553, baseType: !396, size: 32, offset: 5280)
!2843 = !DIDerivedType(tag: DW_TAG_member, name: "bake_biasdist", scope: !2663, file: !829, line: 553, baseType: !396, size: 32, offset: 5312)
!2844 = !DIDerivedType(tag: DW_TAG_member, name: "bake_samples", scope: !2663, file: !829, line: 554, baseType: !399, size: 16, offset: 5344)
!2845 = !DIDerivedType(tag: DW_TAG_member, name: "bake_pad", scope: !2663, file: !829, line: 554, baseType: !399, size: 16, offset: 5360)
!2846 = !DIDerivedType(tag: DW_TAG_member, name: "bake_user_scale", scope: !2663, file: !829, line: 555, baseType: !396, size: 32, offset: 5376)
!2847 = !DIDerivedType(tag: DW_TAG_member, name: "bake_pad1", scope: !2663, file: !829, line: 555, baseType: !396, size: 32, offset: 5408)
!2848 = !DIDerivedType(tag: DW_TAG_member, name: "pic", scope: !2663, file: !829, line: 558, baseType: !478, size: 8192, offset: 5440)
!2849 = !DIDerivedType(tag: DW_TAG_member, name: "stamp", scope: !2663, file: !829, line: 561, baseType: !98, size: 32, offset: 13632)
!2850 = !DIDerivedType(tag: DW_TAG_member, name: "stamp_font_id", scope: !2663, file: !829, line: 562, baseType: !399, size: 16, offset: 13664)
!2851 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !2663, file: !829, line: 562, baseType: !399, size: 16, offset: 13680)
!2852 = !DIDerivedType(tag: DW_TAG_member, name: "stamp_udata", scope: !2663, file: !829, line: 565, baseType: !649, size: 6144, offset: 13696)
!2853 = !DIDerivedType(tag: DW_TAG_member, name: "fg_stamp", scope: !2663, file: !829, line: 568, baseType: !408, size: 128, offset: 19840)
!2854 = !DIDerivedType(tag: DW_TAG_member, name: "bg_stamp", scope: !2663, file: !829, line: 569, baseType: !408, size: 128, offset: 19968)
!2855 = !DIDerivedType(tag: DW_TAG_member, name: "seq_prev_type", scope: !2663, file: !829, line: 572, baseType: !375, size: 8, offset: 20096)
!2856 = !DIDerivedType(tag: DW_TAG_member, name: "seq_rend_type", scope: !2663, file: !829, line: 573, baseType: !375, size: 8, offset: 20104)
!2857 = !DIDerivedType(tag: DW_TAG_member, name: "seq_flag", scope: !2663, file: !829, line: 574, baseType: !375, size: 8, offset: 20112)
!2858 = !DIDerivedType(tag: DW_TAG_member, name: "pad5", scope: !2663, file: !829, line: 575, baseType: !2513, size: 40, offset: 20120)
!2859 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_flag", scope: !2663, file: !829, line: 578, baseType: !98, size: 32, offset: 20160)
!2860 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_subsurf", scope: !2663, file: !829, line: 579, baseType: !399, size: 16, offset: 20192)
!2861 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_shadowsamples", scope: !2663, file: !829, line: 580, baseType: !399, size: 16, offset: 20208)
!2862 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_particles", scope: !2663, file: !829, line: 581, baseType: !396, size: 32, offset: 20224)
!2863 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_aosss", scope: !2663, file: !829, line: 582, baseType: !396, size: 32, offset: 20256)
!2864 = !DIDerivedType(tag: DW_TAG_member, name: "cineonwhite", scope: !2663, file: !829, line: 585, baseType: !399, size: 16, offset: 20288)
!2865 = !DIDerivedType(tag: DW_TAG_member, name: "cineonblack", scope: !2663, file: !829, line: 585, baseType: !399, size: 16, offset: 20304)
!2866 = !DIDerivedType(tag: DW_TAG_member, name: "cineongamma", scope: !2663, file: !829, line: 586, baseType: !396, size: 32, offset: 20320)
!2867 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_preset", scope: !2663, file: !829, line: 589, baseType: !399, size: 16, offset: 20352)
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_depth", scope: !2663, file: !829, line: 589, baseType: !399, size: 16, offset: 20368)
!2869 = !DIDerivedType(tag: DW_TAG_member, name: "rpad3", scope: !2663, file: !829, line: 590, baseType: !98, size: 32, offset: 20384)
!2870 = !DIDerivedType(tag: DW_TAG_member, name: "domeres", scope: !2663, file: !829, line: 593, baseType: !399, size: 16, offset: 20416)
!2871 = !DIDerivedType(tag: DW_TAG_member, name: "domemode", scope: !2663, file: !829, line: 593, baseType: !399, size: 16, offset: 20432)
!2872 = !DIDerivedType(tag: DW_TAG_member, name: "domeangle", scope: !2663, file: !829, line: 594, baseType: !399, size: 16, offset: 20448)
!2873 = !DIDerivedType(tag: DW_TAG_member, name: "dometilt", scope: !2663, file: !829, line: 594, baseType: !399, size: 16, offset: 20464)
!2874 = !DIDerivedType(tag: DW_TAG_member, name: "domeresbuf", scope: !2663, file: !829, line: 595, baseType: !396, size: 32, offset: 20480)
!2875 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2663, file: !829, line: 596, baseType: !396, size: 32, offset: 20512)
!2876 = !DIDerivedType(tag: DW_TAG_member, name: "dometext", scope: !2663, file: !829, line: 597, baseType: !2877, size: 64, offset: 20544)
!2877 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2878, size: 64)
!2878 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Text", file: !2879, line: 50, size: 1664, elements: !2880)
!2879 = !DIFile(filename: "blender/source/blender/makesdna/DNA_text_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2880 = !{!2881, !2882, !2883, !2884, !2885, !2886, !2898, !2899, !2900, !2901, !2902, !2903, !2904, !2905}
!2881 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2878, file: !2879, line: 51, baseType: !427, size: 960)
!2882 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2878, file: !2879, line: 53, baseType: !501, size: 64, offset: 960)
!2883 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2878, file: !2879, line: 55, baseType: !98, size: 32, offset: 1024)
!2884 = !DIDerivedType(tag: DW_TAG_member, name: "nlines", scope: !2878, file: !2879, line: 55, baseType: !98, size: 32, offset: 1056)
!2885 = !DIDerivedType(tag: DW_TAG_member, name: "lines", scope: !2878, file: !2879, line: 57, baseType: !388, size: 128, offset: 1088)
!2886 = !DIDerivedType(tag: DW_TAG_member, name: "curl", scope: !2878, file: !2879, line: 58, baseType: !2887, size: 64, offset: 1216)
!2887 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2888, size: 64)
!2888 = !DIDerivedType(tag: DW_TAG_typedef, name: "TextLine", file: !2879, line: 48, baseType: !2889)
!2889 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "TextLine", file: !2879, line: 42, size: 320, elements: !2890)
!2890 = !{!2891, !2893, !2894, !2895, !2896, !2897}
!2891 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2889, file: !2879, line: 43, baseType: !2892, size: 64)
!2892 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2889, size: 64)
!2893 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2889, file: !2879, line: 43, baseType: !2892, size: 64, offset: 64)
!2894 = !DIDerivedType(tag: DW_TAG_member, name: "line", scope: !2889, file: !2879, line: 45, baseType: !501, size: 64, offset: 128)
!2895 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !2889, file: !2879, line: 46, baseType: !501, size: 64, offset: 192)
!2896 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !2889, file: !2879, line: 47, baseType: !98, size: 32, offset: 256)
!2897 = !DIDerivedType(tag: DW_TAG_member, name: "blen", scope: !2889, file: !2879, line: 47, baseType: !98, size: 32, offset: 288)
!2898 = !DIDerivedType(tag: DW_TAG_member, name: "sell", scope: !2878, file: !2879, line: 58, baseType: !2887, size: 64, offset: 1280)
!2899 = !DIDerivedType(tag: DW_TAG_member, name: "curc", scope: !2878, file: !2879, line: 59, baseType: !98, size: 32, offset: 1344)
!2900 = !DIDerivedType(tag: DW_TAG_member, name: "selc", scope: !2878, file: !2879, line: 59, baseType: !98, size: 32, offset: 1376)
!2901 = !DIDerivedType(tag: DW_TAG_member, name: "undo_buf", scope: !2878, file: !2879, line: 61, baseType: !501, size: 64, offset: 1408)
!2902 = !DIDerivedType(tag: DW_TAG_member, name: "undo_pos", scope: !2878, file: !2879, line: 62, baseType: !98, size: 32, offset: 1472)
!2903 = !DIDerivedType(tag: DW_TAG_member, name: "undo_len", scope: !2878, file: !2879, line: 62, baseType: !98, size: 32, offset: 1504)
!2904 = !DIDerivedType(tag: DW_TAG_member, name: "compiled", scope: !2878, file: !2879, line: 64, baseType: !372, size: 64, offset: 1536)
!2905 = !DIDerivedType(tag: DW_TAG_member, name: "mtime", scope: !2878, file: !2879, line: 65, baseType: !2906, size: 64, offset: 1600)
!2906 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!2907 = !DIDerivedType(tag: DW_TAG_member, name: "line_thickness_mode", scope: !2663, file: !829, line: 600, baseType: !98, size: 32, offset: 20608)
!2908 = !DIDerivedType(tag: DW_TAG_member, name: "unit_line_thickness", scope: !2663, file: !829, line: 601, baseType: !396, size: 32, offset: 20640)
!2909 = !DIDerivedType(tag: DW_TAG_member, name: "engine", scope: !2663, file: !829, line: 604, baseType: !2910, size: 256, offset: 20672)
!2910 = !DICompositeType(tag: DW_TAG_array_type, baseType: !375, size: 256, elements: !776)
!2911 = !DIDerivedType(tag: DW_TAG_member, name: "bake", scope: !2663, file: !829, line: 607, baseType: !2912, size: 10880, offset: 20928)
!2912 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BakeData", file: !829, line: 364, size: 10880, elements: !2913)
!2913 = !{!2914, !2915, !2916, !2917, !2918, !2919, !2920, !2921, !2922, !2923, !2924, !2925, !2926}
!2914 = !DIDerivedType(tag: DW_TAG_member, name: "im_format", scope: !2912, file: !829, line: 365, baseType: !2666, size: 1984)
!2915 = !DIDerivedType(tag: DW_TAG_member, name: "filepath", scope: !2912, file: !829, line: 367, baseType: !478, size: 8192, offset: 1984)
!2916 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !2912, file: !829, line: 369, baseType: !399, size: 16, offset: 10176)
!2917 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !2912, file: !829, line: 369, baseType: !399, size: 16, offset: 10192)
!2918 = !DIDerivedType(tag: DW_TAG_member, name: "margin", scope: !2912, file: !829, line: 370, baseType: !399, size: 16, offset: 10208)
!2919 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2912, file: !829, line: 370, baseType: !399, size: 16, offset: 10224)
!2920 = !DIDerivedType(tag: DW_TAG_member, name: "cage_extrusion", scope: !2912, file: !829, line: 372, baseType: !396, size: 32, offset: 10240)
!2921 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2912, file: !829, line: 373, baseType: !396, size: 32, offset: 10272)
!2922 = !DIDerivedType(tag: DW_TAG_member, name: "normal_swizzle", scope: !2912, file: !829, line: 375, baseType: !415, size: 24, offset: 10304)
!2923 = !DIDerivedType(tag: DW_TAG_member, name: "normal_space", scope: !2912, file: !829, line: 376, baseType: !375, size: 8, offset: 10328)
!2924 = !DIDerivedType(tag: DW_TAG_member, name: "save_mode", scope: !2912, file: !829, line: 378, baseType: !375, size: 8, offset: 10336)
!2925 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2912, file: !829, line: 379, baseType: !415, size: 24, offset: 10344)
!2926 = !DIDerivedType(tag: DW_TAG_member, name: "cage", scope: !2912, file: !829, line: 381, baseType: !692, size: 512, offset: 10368)
!2927 = !DIDerivedType(tag: DW_TAG_member, name: "preview_start_resolution", scope: !2663, file: !829, line: 609, baseType: !98, size: 32, offset: 31808)
!2928 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2663, file: !829, line: 610, baseType: !98, size: 32, offset: 31840)
!2929 = !DIDerivedType(tag: DW_TAG_member, name: "audio", scope: !828, file: !829, line: 1252, baseType: !2930, size: 256, offset: 34112)
!2930 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AudioData", file: !829, line: 158, size: 256, elements: !2931)
!2931 = !{!2932, !2933, !2934, !2935, !2936, !2937, !2938, !2939, !2940}
!2932 = !DIDerivedType(tag: DW_TAG_member, name: "mixrate", scope: !2930, file: !829, line: 159, baseType: !98, size: 32)
!2933 = !DIDerivedType(tag: DW_TAG_member, name: "main", scope: !2930, file: !829, line: 160, baseType: !396, size: 32, offset: 32)
!2934 = !DIDerivedType(tag: DW_TAG_member, name: "speed_of_sound", scope: !2930, file: !829, line: 161, baseType: !396, size: 32, offset: 64)
!2935 = !DIDerivedType(tag: DW_TAG_member, name: "doppler_factor", scope: !2930, file: !829, line: 162, baseType: !396, size: 32, offset: 96)
!2936 = !DIDerivedType(tag: DW_TAG_member, name: "distance_model", scope: !2930, file: !829, line: 163, baseType: !98, size: 32, offset: 128)
!2937 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2930, file: !829, line: 164, baseType: !399, size: 16, offset: 160)
!2938 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2930, file: !829, line: 165, baseType: !399, size: 16, offset: 176)
!2939 = !DIDerivedType(tag: DW_TAG_member, name: "volume", scope: !2930, file: !829, line: 166, baseType: !396, size: 32, offset: 192)
!2940 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2930, file: !829, line: 167, baseType: !396, size: 32, offset: 224)
!2941 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !828, file: !829, line: 1254, baseType: !388, size: 128, offset: 34368)
!2942 = !DIDerivedType(tag: DW_TAG_member, name: "transform_spaces", scope: !828, file: !829, line: 1255, baseType: !388, size: 128, offset: 34496)
!2943 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scene", scope: !828, file: !829, line: 1257, baseType: !372, size: 64, offset: 34624)
!2944 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scene_handle", scope: !828, file: !829, line: 1258, baseType: !372, size: 64, offset: 34688)
!2945 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scrub_handle", scope: !828, file: !829, line: 1259, baseType: !372, size: 64, offset: 34752)
!2946 = !DIDerivedType(tag: DW_TAG_member, name: "speaker_handles", scope: !828, file: !829, line: 1260, baseType: !372, size: 64, offset: 34816)
!2947 = !DIDerivedType(tag: DW_TAG_member, name: "fps_info", scope: !828, file: !829, line: 1262, baseType: !372, size: 64, offset: 34880)
!2948 = !DIDerivedType(tag: DW_TAG_member, name: "theDag", scope: !828, file: !829, line: 1265, baseType: !2949, size: 64, offset: 34944)
!2949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2950, size: 64)
!2950 = !DICompositeType(tag: DW_TAG_structure_type, name: "DagForest", file: !829, line: 1265, flags: DIFlagFwdDecl)
!2951 = !DIDerivedType(tag: DW_TAG_member, name: "dagflags", scope: !828, file: !829, line: 1266, baseType: !399, size: 16, offset: 35008)
!2952 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !828, file: !829, line: 1267, baseType: !399, size: 16, offset: 35024)
!2953 = !DIDerivedType(tag: DW_TAG_member, name: "active_keyingset", scope: !828, file: !829, line: 1270, baseType: !98, size: 32, offset: 35040)
!2954 = !DIDerivedType(tag: DW_TAG_member, name: "keyingsets", scope: !828, file: !829, line: 1271, baseType: !388, size: 128, offset: 35072)
!2955 = !DIDerivedType(tag: DW_TAG_member, name: "framing", scope: !828, file: !829, line: 1274, baseType: !2956, size: 128, offset: 35200)
!2956 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameFraming", file: !829, line: 650, size: 128, elements: !2957)
!2957 = !{!2958, !2959, !2960, !2961, !2962}
!2958 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !2956, file: !829, line: 651, baseType: !779, size: 96)
!2959 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2956, file: !829, line: 652, baseType: !375, size: 8, offset: 96)
!2960 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !2956, file: !829, line: 652, baseType: !375, size: 8, offset: 104)
!2961 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2956, file: !829, line: 652, baseType: !375, size: 8, offset: 112)
!2962 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !2956, file: !829, line: 652, baseType: !375, size: 8, offset: 120)
!2963 = !DIDerivedType(tag: DW_TAG_member, name: "gm", scope: !828, file: !829, line: 1275, baseType: !2964, size: 1472, offset: 35328)
!2964 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameData", file: !829, line: 676, size: 1472, elements: !2965)
!2965 = !{!2966, !2967, !2968, !2969, !2970, !2971, !2972, !2973, !2974, !2975, !2976, !2977, !2987, !2988, !2989, !2990, !3009, !3010, !3011, !3012, !3013, !3014, !3015, !3016, !3017, !3018, !3019, !3020, !3021, !3022, !3023, !3024, !3025, !3026, !3027, !3028}
!2966 = !DIDerivedType(tag: DW_TAG_member, name: "framing", scope: !2964, file: !829, line: 679, baseType: !2956, size: 128)
!2967 = !DIDerivedType(tag: DW_TAG_member, name: "playerflag", scope: !2964, file: !829, line: 680, baseType: !399, size: 16, offset: 128)
!2968 = !DIDerivedType(tag: DW_TAG_member, name: "xplay", scope: !2964, file: !829, line: 680, baseType: !399, size: 16, offset: 144)
!2969 = !DIDerivedType(tag: DW_TAG_member, name: "yplay", scope: !2964, file: !829, line: 680, baseType: !399, size: 16, offset: 160)
!2970 = !DIDerivedType(tag: DW_TAG_member, name: "freqplay", scope: !2964, file: !829, line: 680, baseType: !399, size: 16, offset: 176)
!2971 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !2964, file: !829, line: 681, baseType: !399, size: 16, offset: 192)
!2972 = !DIDerivedType(tag: DW_TAG_member, name: "attrib", scope: !2964, file: !829, line: 681, baseType: !399, size: 16, offset: 208)
!2973 = !DIDerivedType(tag: DW_TAG_member, name: "rt1", scope: !2964, file: !829, line: 681, baseType: !399, size: 16, offset: 224)
!2974 = !DIDerivedType(tag: DW_TAG_member, name: "rt2", scope: !2964, file: !829, line: 681, baseType: !399, size: 16, offset: 240)
!2975 = !DIDerivedType(tag: DW_TAG_member, name: "aasamples", scope: !2964, file: !829, line: 682, baseType: !399, size: 16, offset: 256)
!2976 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !2964, file: !829, line: 682, baseType: !811, size: 48, offset: 272)
!2977 = !DIDerivedType(tag: DW_TAG_member, name: "dome", scope: !2964, file: !829, line: 685, baseType: !2978, size: 192, offset: 320)
!2978 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameDome", file: !829, line: 633, size: 192, elements: !2979)
!2979 = !{!2980, !2981, !2982, !2983, !2984, !2985, !2986}
!2980 = !DIDerivedType(tag: DW_TAG_member, name: "res", scope: !2978, file: !829, line: 634, baseType: !399, size: 16)
!2981 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2978, file: !829, line: 634, baseType: !399, size: 16, offset: 16)
!2982 = !DIDerivedType(tag: DW_TAG_member, name: "angle", scope: !2978, file: !829, line: 635, baseType: !399, size: 16, offset: 32)
!2983 = !DIDerivedType(tag: DW_TAG_member, name: "tilt", scope: !2978, file: !829, line: 635, baseType: !399, size: 16, offset: 48)
!2984 = !DIDerivedType(tag: DW_TAG_member, name: "resbuf", scope: !2978, file: !829, line: 636, baseType: !396, size: 32, offset: 64)
!2985 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2978, file: !829, line: 636, baseType: !396, size: 32, offset: 96)
!2986 = !DIDerivedType(tag: DW_TAG_member, name: "warptext", scope: !2978, file: !829, line: 637, baseType: !2877, size: 64, offset: 128)
!2987 = !DIDerivedType(tag: DW_TAG_member, name: "stereoflag", scope: !2964, file: !829, line: 686, baseType: !399, size: 16, offset: 512)
!2988 = !DIDerivedType(tag: DW_TAG_member, name: "stereomode", scope: !2964, file: !829, line: 686, baseType: !399, size: 16, offset: 528)
!2989 = !DIDerivedType(tag: DW_TAG_member, name: "eyeseparation", scope: !2964, file: !829, line: 687, baseType: !396, size: 32, offset: 544)
!2990 = !DIDerivedType(tag: DW_TAG_member, name: "recastData", scope: !2964, file: !829, line: 688, baseType: !2991, size: 448, offset: 576)
!2991 = !DIDerivedType(tag: DW_TAG_typedef, name: "RecastData", file: !829, line: 674, baseType: !2992)
!2992 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RecastData", file: !829, line: 659, size: 448, elements: !2993)
!2993 = !{!2994, !2995, !2996, !2997, !2998, !2999, !3000, !3001, !3002, !3003, !3004, !3005, !3006, !3007, !3008}
!2994 = !DIDerivedType(tag: DW_TAG_member, name: "cellsize", scope: !2992, file: !829, line: 660, baseType: !396, size: 32)
!2995 = !DIDerivedType(tag: DW_TAG_member, name: "cellheight", scope: !2992, file: !829, line: 661, baseType: !396, size: 32, offset: 32)
!2996 = !DIDerivedType(tag: DW_TAG_member, name: "agentmaxslope", scope: !2992, file: !829, line: 662, baseType: !396, size: 32, offset: 64)
!2997 = !DIDerivedType(tag: DW_TAG_member, name: "agentmaxclimb", scope: !2992, file: !829, line: 663, baseType: !396, size: 32, offset: 96)
!2998 = !DIDerivedType(tag: DW_TAG_member, name: "agentheight", scope: !2992, file: !829, line: 664, baseType: !396, size: 32, offset: 128)
!2999 = !DIDerivedType(tag: DW_TAG_member, name: "agentradius", scope: !2992, file: !829, line: 665, baseType: !396, size: 32, offset: 160)
!3000 = !DIDerivedType(tag: DW_TAG_member, name: "edgemaxlen", scope: !2992, file: !829, line: 666, baseType: !396, size: 32, offset: 192)
!3001 = !DIDerivedType(tag: DW_TAG_member, name: "edgemaxerror", scope: !2992, file: !829, line: 667, baseType: !396, size: 32, offset: 224)
!3002 = !DIDerivedType(tag: DW_TAG_member, name: "regionminsize", scope: !2992, file: !829, line: 668, baseType: !396, size: 32, offset: 256)
!3003 = !DIDerivedType(tag: DW_TAG_member, name: "regionmergesize", scope: !2992, file: !829, line: 669, baseType: !396, size: 32, offset: 288)
!3004 = !DIDerivedType(tag: DW_TAG_member, name: "vertsperpoly", scope: !2992, file: !829, line: 670, baseType: !98, size: 32, offset: 320)
!3005 = !DIDerivedType(tag: DW_TAG_member, name: "detailsampledist", scope: !2992, file: !829, line: 671, baseType: !396, size: 32, offset: 352)
!3006 = !DIDerivedType(tag: DW_TAG_member, name: "detailsamplemaxerror", scope: !2992, file: !829, line: 672, baseType: !396, size: 32, offset: 384)
!3007 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !2992, file: !829, line: 673, baseType: !399, size: 16, offset: 416)
!3008 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2992, file: !829, line: 673, baseType: !399, size: 16, offset: 432)
!3009 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !2964, file: !829, line: 692, baseType: !396, size: 32, offset: 1024)
!3010 = !DIDerivedType(tag: DW_TAG_member, name: "activityBoxRadius", scope: !2964, file: !829, line: 697, baseType: !396, size: 32, offset: 1056)
!3011 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2964, file: !829, line: 703, baseType: !98, size: 32, offset: 1088)
!3012 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2964, file: !829, line: 704, baseType: !399, size: 16, offset: 1120)
!3013 = !DIDerivedType(tag: DW_TAG_member, name: "matmode", scope: !2964, file: !829, line: 704, baseType: !399, size: 16, offset: 1136)
!3014 = !DIDerivedType(tag: DW_TAG_member, name: "occlusionRes", scope: !2964, file: !829, line: 705, baseType: !399, size: 16, offset: 1152)
!3015 = !DIDerivedType(tag: DW_TAG_member, name: "physicsEngine", scope: !2964, file: !829, line: 706, baseType: !399, size: 16, offset: 1168)
!3016 = !DIDerivedType(tag: DW_TAG_member, name: "exitkey", scope: !2964, file: !829, line: 707, baseType: !399, size: 16, offset: 1184)
!3017 = !DIDerivedType(tag: DW_TAG_member, name: "vsync", scope: !2964, file: !829, line: 708, baseType: !399, size: 16, offset: 1200)
!3018 = !DIDerivedType(tag: DW_TAG_member, name: "ticrate", scope: !2964, file: !829, line: 709, baseType: !399, size: 16, offset: 1216)
!3019 = !DIDerivedType(tag: DW_TAG_member, name: "maxlogicstep", scope: !2964, file: !829, line: 709, baseType: !399, size: 16, offset: 1232)
!3020 = !DIDerivedType(tag: DW_TAG_member, name: "physubstep", scope: !2964, file: !829, line: 709, baseType: !399, size: 16, offset: 1248)
!3021 = !DIDerivedType(tag: DW_TAG_member, name: "maxphystep", scope: !2964, file: !829, line: 709, baseType: !399, size: 16, offset: 1264)
!3022 = !DIDerivedType(tag: DW_TAG_member, name: "obstacleSimulation", scope: !2964, file: !829, line: 710, baseType: !399, size: 16, offset: 1280)
!3023 = !DIDerivedType(tag: DW_TAG_member, name: "raster_storage", scope: !2964, file: !829, line: 711, baseType: !399, size: 16, offset: 1296)
!3024 = !DIDerivedType(tag: DW_TAG_member, name: "levelHeight", scope: !2964, file: !829, line: 712, baseType: !396, size: 32, offset: 1312)
!3025 = !DIDerivedType(tag: DW_TAG_member, name: "deactivationtime", scope: !2964, file: !829, line: 713, baseType: !396, size: 32, offset: 1344)
!3026 = !DIDerivedType(tag: DW_TAG_member, name: "lineardeactthreshold", scope: !2964, file: !829, line: 713, baseType: !396, size: 32, offset: 1376)
!3027 = !DIDerivedType(tag: DW_TAG_member, name: "angulardeactthreshold", scope: !2964, file: !829, line: 713, baseType: !396, size: 32, offset: 1408)
!3028 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2964, file: !829, line: 713, baseType: !396, size: 32, offset: 1440)
!3029 = !DIDerivedType(tag: DW_TAG_member, name: "unit", scope: !828, file: !829, line: 1278, baseType: !3030, size: 64, offset: 36800)
!3030 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UnitSettings", file: !829, line: 1197, size: 64, elements: !3031)
!3031 = !{!3032, !3033, !3034, !3035}
!3032 = !DIDerivedType(tag: DW_TAG_member, name: "scale_length", scope: !3030, file: !829, line: 1199, baseType: !396, size: 32)
!3033 = !DIDerivedType(tag: DW_TAG_member, name: "system", scope: !3030, file: !829, line: 1200, baseType: !375, size: 8, offset: 32)
!3034 = !DIDerivedType(tag: DW_TAG_member, name: "system_rotation", scope: !3030, file: !829, line: 1201, baseType: !375, size: 8, offset: 40)
!3035 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3030, file: !829, line: 1202, baseType: !399, size: 16, offset: 48)
!3036 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !828, file: !829, line: 1281, baseType: !1424, size: 64, offset: 36864)
!3037 = !DIDerivedType(tag: DW_TAG_member, name: "physics_settings", scope: !828, file: !829, line: 1284, baseType: !3038, size: 192, offset: 36928)
!3038 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PhysicsSettings", file: !829, line: 1208, size: 192, elements: !3039)
!3039 = !{!3040, !3041, !3042, !3043}
!3040 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !3038, file: !829, line: 1209, baseType: !779, size: 96)
!3041 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3038, file: !829, line: 1210, baseType: !98, size: 32, offset: 96)
!3042 = !DIDerivedType(tag: DW_TAG_member, name: "quick_cache_step", scope: !3038, file: !829, line: 1210, baseType: !98, size: 32, offset: 128)
!3043 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !3038, file: !829, line: 1210, baseType: !98, size: 32, offset: 160)
!3044 = !DIDerivedType(tag: DW_TAG_member, name: "clip", scope: !828, file: !829, line: 1287, baseType: !2061, size: 64, offset: 37120)
!3045 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask", scope: !828, file: !829, line: 1289, baseType: !585, size: 64, offset: 37184)
!3046 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask_modal", scope: !828, file: !829, line: 1290, baseType: !585, size: 64, offset: 37248)
!3047 = !DIDerivedType(tag: DW_TAG_member, name: "view_settings", scope: !828, file: !829, line: 1293, baseType: !2684, size: 1280, offset: 37312)
!3048 = !DIDerivedType(tag: DW_TAG_member, name: "display_settings", scope: !828, file: !829, line: 1294, baseType: !2696, size: 512, offset: 38592)
!3049 = !DIDerivedType(tag: DW_TAG_member, name: "sequencer_colorspace_settings", scope: !828, file: !829, line: 1295, baseType: !1724, size: 512, offset: 39104)
!3050 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_world", scope: !828, file: !829, line: 1298, baseType: !3051, size: 64, offset: 39616)
!3051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3052, size: 64)
!3052 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyWorld", file: !3053, line: 49, size: 704, elements: !3054)
!3053 = !DIFile(filename: "blender/source/blender/makesdna/DNA_rigidbody_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3054 = !{!3055, !3077, !3078, !3080, !3081, !3082, !3083, !4360, !4361, !4362, !4363, !4364, !4365, !4366}
!3055 = !DIDerivedType(tag: DW_TAG_member, name: "effector_weights", scope: !3052, file: !3053, line: 51, baseType: !3056, size: 64)
!3056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3057, size: 64)
!3057 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "EffectorWeights", file: !3058, line: 118, size: 640, elements: !3059)
!3058 = !DIFile(filename: "blender/source/blender/makesdna/DNA_object_force.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3059 = !{!3060, !3069, !3073, !3074, !3075, !3076}
!3060 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !3057, file: !3058, line: 119, baseType: !3061, size: 64)
!3061 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3062, size: 64)
!3062 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Group", file: !3063, line: 51, size: 1216, elements: !3064)
!3063 = !DIFile(filename: "blender/source/blender/makesdna/DNA_group_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3064 = !{!3065, !3066, !3067, !3068}
!3065 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3062, file: !3063, line: 52, baseType: !427, size: 960)
!3066 = !DIDerivedType(tag: DW_TAG_member, name: "gobject", scope: !3062, file: !3063, line: 54, baseType: !388, size: 128, offset: 960)
!3067 = !DIDerivedType(tag: DW_TAG_member, name: "layer", scope: !3062, file: !3063, line: 59, baseType: !7, size: 32, offset: 1088)
!3068 = !DIDerivedType(tag: DW_TAG_member, name: "dupli_ofs", scope: !3062, file: !3063, line: 60, baseType: !779, size: 96, offset: 1120)
!3069 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !3057, file: !3058, line: 121, baseType: !3070, size: 448, offset: 64)
!3070 = !DICompositeType(tag: DW_TAG_array_type, baseType: !396, size: 448, elements: !3071)
!3071 = !{!3072}
!3072 = !DISubrange(count: 14)
!3073 = !DIDerivedType(tag: DW_TAG_member, name: "global_gravity", scope: !3057, file: !3058, line: 122, baseType: !396, size: 32, offset: 512)
!3074 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3057, file: !3058, line: 123, baseType: !399, size: 16, offset: 544)
!3075 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !3057, file: !3058, line: 123, baseType: !811, size: 48, offset: 560)
!3076 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3057, file: !3058, line: 124, baseType: !98, size: 32, offset: 608)
!3077 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !3052, file: !3053, line: 53, baseType: !3061, size: 64, offset: 64)
!3078 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !3052, file: !3053, line: 54, baseType: !3079, size: 64, offset: 128)
!3079 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !423, size: 64)
!3080 = !DIDerivedType(tag: DW_TAG_member, name: "constraints", scope: !3052, file: !3053, line: 56, baseType: !3061, size: 64, offset: 192)
!3081 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3052, file: !3053, line: 58, baseType: !98, size: 32, offset: 256)
!3082 = !DIDerivedType(tag: DW_TAG_member, name: "ltime", scope: !3052, file: !3053, line: 59, baseType: !396, size: 32, offset: 288)
!3083 = !DIDerivedType(tag: DW_TAG_member, name: "pointcache", scope: !3052, file: !3053, line: 62, baseType: !3084, size: 64, offset: 320)
!3084 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3085, size: 64)
!3085 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PointCache", file: !3058, line: 170, size: 10560, elements: !3086)
!3086 = !{!3087, !3088, !3089, !3090, !3091, !3092, !3093, !3094, !3095, !3096, !3097, !3098, !3099, !3100, !3101, !3102, !3103, !3104, !3105, !3106, !3107, !3108, !4359}
!3087 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3085, file: !3058, line: 171, baseType: !3084, size: 64)
!3088 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3085, file: !3058, line: 171, baseType: !3084, size: 64, offset: 64)
!3089 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3085, file: !3058, line: 172, baseType: !98, size: 32, offset: 128)
!3090 = !DIDerivedType(tag: DW_TAG_member, name: "step", scope: !3085, file: !3058, line: 174, baseType: !98, size: 32, offset: 160)
!3091 = !DIDerivedType(tag: DW_TAG_member, name: "simframe", scope: !3085, file: !3058, line: 186, baseType: !98, size: 32, offset: 192)
!3092 = !DIDerivedType(tag: DW_TAG_member, name: "startframe", scope: !3085, file: !3058, line: 187, baseType: !98, size: 32, offset: 224)
!3093 = !DIDerivedType(tag: DW_TAG_member, name: "endframe", scope: !3085, file: !3058, line: 188, baseType: !98, size: 32, offset: 256)
!3094 = !DIDerivedType(tag: DW_TAG_member, name: "editframe", scope: !3085, file: !3058, line: 189, baseType: !98, size: 32, offset: 288)
!3095 = !DIDerivedType(tag: DW_TAG_member, name: "last_exact", scope: !3085, file: !3058, line: 190, baseType: !98, size: 32, offset: 320)
!3096 = !DIDerivedType(tag: DW_TAG_member, name: "last_valid", scope: !3085, file: !3058, line: 191, baseType: !98, size: 32, offset: 352)
!3097 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3085, file: !3058, line: 192, baseType: !98, size: 32, offset: 384)
!3098 = !DIDerivedType(tag: DW_TAG_member, name: "totpoint", scope: !3085, file: !3058, line: 195, baseType: !98, size: 32, offset: 416)
!3099 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !3085, file: !3058, line: 196, baseType: !98, size: 32, offset: 448)
!3100 = !DIDerivedType(tag: DW_TAG_member, name: "compression", scope: !3085, file: !3058, line: 197, baseType: !399, size: 16, offset: 480)
!3101 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !3085, file: !3058, line: 197, baseType: !399, size: 16, offset: 496)
!3102 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3085, file: !3058, line: 199, baseType: !692, size: 512, offset: 512)
!3103 = !DIDerivedType(tag: DW_TAG_member, name: "prev_name", scope: !3085, file: !3058, line: 200, baseType: !692, size: 512, offset: 1024)
!3104 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !3085, file: !3058, line: 201, baseType: !692, size: 512, offset: 1536)
!3105 = !DIDerivedType(tag: DW_TAG_member, name: "path", scope: !3085, file: !3058, line: 202, baseType: !478, size: 8192, offset: 2048)
!3106 = !DIDerivedType(tag: DW_TAG_member, name: "cached_frames", scope: !3085, file: !3058, line: 203, baseType: !501, size: 64, offset: 10240)
!3107 = !DIDerivedType(tag: DW_TAG_member, name: "mem_cache", scope: !3085, file: !3058, line: 205, baseType: !390, size: 128, offset: 10304)
!3108 = !DIDerivedType(tag: DW_TAG_member, name: "edit", scope: !3085, file: !3058, line: 207, baseType: !3109, size: 64, offset: 10432)
!3109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3110, size: 64)
!3110 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PTCacheEdit", file: !3111, line: 235, size: 2560, elements: !3112)
!3111 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_pointcache.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3112 = !{!3113, !3114, !3204, !3207, !3361, !4346, !4347, !4348, !4349, !4350, !4351, !4352, !4353, !4354, !4355, !4356, !4358}
!3113 = !DIDerivedType(tag: DW_TAG_member, name: "undo", scope: !3110, file: !3111, line: 236, baseType: !388, size: 128)
!3114 = !DIDerivedType(tag: DW_TAG_member, name: "curundo", scope: !3110, file: !3111, line: 237, baseType: !3115, size: 64, offset: 128)
!3115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3116, size: 64)
!3116 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PTCacheUndo", file: !3111, line: 218, size: 1152, elements: !3117)
!3117 = !{!3118, !3119, !3120, !3138, !3196, !3199, !3200, !3201, !3202, !3203}
!3118 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3116, file: !3111, line: 219, baseType: !3115, size: 64)
!3119 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3116, file: !3111, line: 219, baseType: !3115, size: 64, offset: 64)
!3120 = !DIDerivedType(tag: DW_TAG_member, name: "points", scope: !3116, file: !3111, line: 220, baseType: !3121, size: 64, offset: 128)
!3121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3122, size: 64)
!3122 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PTCacheEditPoint", file: !3111, line: 212, size: 128, elements: !3123)
!3123 = !{!3124, !3136, !3137}
!3124 = !DIDerivedType(tag: DW_TAG_member, name: "keys", scope: !3122, file: !3111, line: 213, baseType: !3125, size: 64)
!3125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3126, size: 64)
!3126 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PTCacheEditKey", file: !3111, line: 194, size: 448, elements: !3127)
!3127 = !{!3128, !3129, !3130, !3131, !3132, !3133, !3134, !3135}
!3128 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !3126, file: !3111, line: 195, baseType: !975, size: 64)
!3129 = !DIDerivedType(tag: DW_TAG_member, name: "vel", scope: !3126, file: !3111, line: 196, baseType: !975, size: 64, offset: 64)
!3130 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !3126, file: !3111, line: 197, baseType: !975, size: 64, offset: 128)
!3131 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !3126, file: !3111, line: 198, baseType: !975, size: 64, offset: 192)
!3132 = !DIDerivedType(tag: DW_TAG_member, name: "world_co", scope: !3126, file: !3111, line: 200, baseType: !779, size: 96, offset: 256)
!3133 = !DIDerivedType(tag: DW_TAG_member, name: "ftime", scope: !3126, file: !3111, line: 201, baseType: !396, size: 32, offset: 352)
!3134 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !3126, file: !3111, line: 202, baseType: !396, size: 32, offset: 384)
!3135 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3126, file: !3111, line: 203, baseType: !399, size: 16, offset: 416)
!3136 = !DIDerivedType(tag: DW_TAG_member, name: "totkey", scope: !3122, file: !3111, line: 214, baseType: !98, size: 32, offset: 64)
!3137 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3122, file: !3111, line: 215, baseType: !399, size: 16, offset: 96)
!3138 = !DIDerivedType(tag: DW_TAG_member, name: "particles", scope: !3116, file: !3111, line: 223, baseType: !3139, size: 64, offset: 192)
!3139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3140, size: 64)
!3140 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleData", file: !3141, line: 95, size: 1600, elements: !3142)
!3141 = !DIFile(filename: "blender/source/blender/makesdna/DNA_particle_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3142 = !{!3143, !3152, !3153, !3163, !3165, !3182, !3183, !3184, !3185, !3186, !3187, !3188, !3189, !3190, !3191, !3192, !3193, !3194, !3195}
!3143 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !3140, file: !3141, line: 96, baseType: !3144, size: 448)
!3144 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParticleKey", file: !3141, line: 55, baseType: !3145)
!3145 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleKey", file: !3141, line: 49, size: 448, elements: !3146)
!3146 = !{!3147, !3148, !3149, !3150, !3151}
!3147 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !3145, file: !3141, line: 50, baseType: !779, size: 96)
!3148 = !DIDerivedType(tag: DW_TAG_member, name: "vel", scope: !3145, file: !3141, line: 51, baseType: !779, size: 96, offset: 96)
!3149 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !3145, file: !3141, line: 52, baseType: !408, size: 128, offset: 192)
!3150 = !DIDerivedType(tag: DW_TAG_member, name: "ave", scope: !3145, file: !3141, line: 53, baseType: !779, size: 96, offset: 320)
!3151 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !3145, file: !3141, line: 54, baseType: !396, size: 32, offset: 416)
!3152 = !DIDerivedType(tag: DW_TAG_member, name: "prev_state", scope: !3140, file: !3141, line: 98, baseType: !3144, size: 448, offset: 448)
!3153 = !DIDerivedType(tag: DW_TAG_member, name: "hair", scope: !3140, file: !3141, line: 100, baseType: !3154, size: 64, offset: 896)
!3154 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3155, size: 64)
!3155 = !DIDerivedType(tag: DW_TAG_typedef, name: "HairKey", file: !3141, line: 47, baseType: !3156)
!3156 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "HairKey", file: !3141, line: 41, size: 192, elements: !3157)
!3157 = !{!3158, !3159, !3160, !3161, !3162}
!3158 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !3156, file: !3141, line: 42, baseType: !779, size: 96)
!3159 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !3156, file: !3141, line: 43, baseType: !396, size: 32, offset: 96)
!3160 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !3156, file: !3141, line: 44, baseType: !396, size: 32, offset: 128)
!3161 = !DIDerivedType(tag: DW_TAG_member, name: "editflag", scope: !3156, file: !3141, line: 45, baseType: !399, size: 16, offset: 160)
!3162 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3156, file: !3141, line: 46, baseType: !399, size: 16, offset: 176)
!3163 = !DIDerivedType(tag: DW_TAG_member, name: "keys", scope: !3140, file: !3141, line: 102, baseType: !3164, size: 64, offset: 960)
!3164 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3144, size: 64)
!3165 = !DIDerivedType(tag: DW_TAG_member, name: "boid", scope: !3140, file: !3141, line: 104, baseType: !3166, size: 64, offset: 1024)
!3166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3167, size: 64)
!3167 = !DIDerivedType(tag: DW_TAG_typedef, name: "BoidParticle", file: !3141, line: 63, baseType: !3168)
!3168 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BoidParticle", file: !3141, line: 57, size: 448, elements: !3169)
!3169 = !{!3170, !3171, !3179, !3180, !3181}
!3170 = !DIDerivedType(tag: DW_TAG_member, name: "ground", scope: !3168, file: !3141, line: 58, baseType: !423, size: 64)
!3171 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3168, file: !3141, line: 59, baseType: !3172, size: 160, offset: 64)
!3172 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BoidData", file: !3173, line: 109, size: 160, elements: !3174)
!3173 = !DIFile(filename: "blender/source/blender/makesdna/DNA_boid_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3174 = !{!3175, !3176, !3177, !3178}
!3175 = !DIDerivedType(tag: DW_TAG_member, name: "health", scope: !3172, file: !3173, line: 110, baseType: !396, size: 32)
!3176 = !DIDerivedType(tag: DW_TAG_member, name: "acc", scope: !3172, file: !3173, line: 110, baseType: !779, size: 96, offset: 32)
!3177 = !DIDerivedType(tag: DW_TAG_member, name: "state_id", scope: !3172, file: !3173, line: 111, baseType: !399, size: 16, offset: 128)
!3178 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3172, file: !3173, line: 111, baseType: !399, size: 16, offset: 144)
!3179 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !3168, file: !3141, line: 60, baseType: !779, size: 96, offset: 224)
!3180 = !DIDerivedType(tag: DW_TAG_member, name: "wander", scope: !3168, file: !3141, line: 61, baseType: !779, size: 96, offset: 320)
!3181 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !3168, file: !3141, line: 62, baseType: !396, size: 32, offset: 416)
!3182 = !DIDerivedType(tag: DW_TAG_member, name: "totkey", scope: !3140, file: !3141, line: 106, baseType: !98, size: 32, offset: 1088)
!3183 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !3140, file: !3141, line: 108, baseType: !396, size: 32, offset: 1120)
!3184 = !DIDerivedType(tag: DW_TAG_member, name: "lifetime", scope: !3140, file: !3141, line: 108, baseType: !396, size: 32, offset: 1152)
!3185 = !DIDerivedType(tag: DW_TAG_member, name: "dietime", scope: !3140, file: !3141, line: 109, baseType: !396, size: 32, offset: 1184)
!3186 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !3140, file: !3141, line: 111, baseType: !98, size: 32, offset: 1216)
!3187 = !DIDerivedType(tag: DW_TAG_member, name: "num_dmcache", scope: !3140, file: !3141, line: 112, baseType: !98, size: 32, offset: 1248)
!3188 = !DIDerivedType(tag: DW_TAG_member, name: "fuv", scope: !3140, file: !3141, line: 114, baseType: !408, size: 128, offset: 1280)
!3189 = !DIDerivedType(tag: DW_TAG_member, name: "foffset", scope: !3140, file: !3141, line: 114, baseType: !396, size: 32, offset: 1408)
!3190 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3140, file: !3141, line: 117, baseType: !396, size: 32, offset: 1440)
!3191 = !DIDerivedType(tag: DW_TAG_member, name: "sphdensity", scope: !3140, file: !3141, line: 119, baseType: !396, size: 32, offset: 1472)
!3192 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3140, file: !3141, line: 120, baseType: !98, size: 32, offset: 1504)
!3193 = !DIDerivedType(tag: DW_TAG_member, name: "hair_index", scope: !3140, file: !3141, line: 122, baseType: !98, size: 32, offset: 1536)
!3194 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3140, file: !3141, line: 123, baseType: !399, size: 16, offset: 1568)
!3195 = !DIDerivedType(tag: DW_TAG_member, name: "alive", scope: !3140, file: !3141, line: 124, baseType: !399, size: 16, offset: 1584)
!3196 = !DIDerivedType(tag: DW_TAG_member, name: "emitter_field", scope: !3116, file: !3111, line: 224, baseType: !3197, size: 64, offset: 256)
!3197 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3198, size: 64)
!3198 = !DICompositeType(tag: DW_TAG_structure_type, name: "KDTree", file: !3141, line: 307, flags: DIFlagFwdDecl)
!3199 = !DIDerivedType(tag: DW_TAG_member, name: "emitter_cosnos", scope: !3116, file: !3111, line: 225, baseType: !975, size: 64, offset: 320)
!3200 = !DIDerivedType(tag: DW_TAG_member, name: "psys_flag", scope: !3116, file: !3111, line: 226, baseType: !98, size: 32, offset: 384)
!3201 = !DIDerivedType(tag: DW_TAG_member, name: "mem_cache", scope: !3116, file: !3111, line: 229, baseType: !390, size: 128, offset: 448)
!3202 = !DIDerivedType(tag: DW_TAG_member, name: "totpoint", scope: !3116, file: !3111, line: 231, baseType: !98, size: 32, offset: 576)
!3203 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3116, file: !3111, line: 232, baseType: !692, size: 512, offset: 608)
!3204 = !DIDerivedType(tag: DW_TAG_member, name: "points", scope: !3110, file: !3111, line: 238, baseType: !3205, size: 64, offset: 192)
!3205 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3206, size: 64)
!3206 = !DIDerivedType(tag: DW_TAG_typedef, name: "PTCacheEditPoint", file: !3111, line: 216, baseType: !3122)
!3207 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !3110, file: !3111, line: 240, baseType: !3208, size: 1600, offset: 256)
!3208 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PTCacheID", file: !3111, line: 122, size: 1600, elements: !3209)
!3209 = !{!3210, !3212, !3213, !3214, !3215, !3216, !3217, !3218, !3219, !3220, !3221, !3222, !3223, !3228, !3232, !3236, !3317, !3318, !3334, !3338, !3342, !3346, !3350, !3351, !3355, !3356, !3357, !3359}
!3210 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3208, file: !3111, line: 123, baseType: !3211, size: 64)
!3211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3208, size: 64)
!3212 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3208, file: !3111, line: 123, baseType: !3211, size: 64, offset: 64)
!3213 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !3208, file: !3111, line: 125, baseType: !827, size: 64, offset: 128)
!3214 = !DIDerivedType(tag: DW_TAG_member, name: "ob", scope: !3208, file: !3111, line: 126, baseType: !423, size: 64, offset: 192)
!3215 = !DIDerivedType(tag: DW_TAG_member, name: "calldata", scope: !3208, file: !3111, line: 127, baseType: !372, size: 64, offset: 256)
!3216 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3208, file: !3111, line: 128, baseType: !7, size: 32, offset: 320)
!3217 = !DIDerivedType(tag: DW_TAG_member, name: "stack_index", scope: !3208, file: !3111, line: 129, baseType: !7, size: 32, offset: 352)
!3218 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3208, file: !3111, line: 130, baseType: !7, size: 32, offset: 384)
!3219 = !DIDerivedType(tag: DW_TAG_member, name: "default_step", scope: !3208, file: !3111, line: 132, baseType: !7, size: 32, offset: 416)
!3220 = !DIDerivedType(tag: DW_TAG_member, name: "max_step", scope: !3208, file: !3111, line: 133, baseType: !7, size: 32, offset: 448)
!3221 = !DIDerivedType(tag: DW_TAG_member, name: "data_types", scope: !3208, file: !3111, line: 136, baseType: !7, size: 32, offset: 480)
!3222 = !DIDerivedType(tag: DW_TAG_member, name: "info_types", scope: !3208, file: !3111, line: 136, baseType: !7, size: 32, offset: 512)
!3223 = !DIDerivedType(tag: DW_TAG_member, name: "write_point", scope: !3208, file: !3111, line: 139, baseType: !3224, size: 64, offset: 576)
!3224 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3225, size: 64)
!3225 = !DISubroutineType(types: !3226)
!3226 = !{!98, !98, !372, !3227, !98}
!3227 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !372, size: 64)
!3228 = !DIDerivedType(tag: DW_TAG_member, name: "read_point", scope: !3208, file: !3111, line: 141, baseType: !3229, size: 64, offset: 640)
!3229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3230, size: 64)
!3230 = !DISubroutineType(types: !3231)
!3231 = !{null, !98, !372, !3227, !396, !975}
!3232 = !DIDerivedType(tag: DW_TAG_member, name: "interpolate_point", scope: !3208, file: !3111, line: 143, baseType: !3233, size: 64, offset: 704)
!3233 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3234, size: 64)
!3234 = !DISubroutineType(types: !3235)
!3235 = !{null, !98, !372, !3227, !396, !396, !396, !975}
!3236 = !DIDerivedType(tag: DW_TAG_member, name: "write_stream", scope: !3208, file: !3111, line: 146, baseType: !3237, size: 64, offset: 768)
!3237 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3238, size: 64)
!3238 = !DISubroutineType(types: !3239)
!3239 = !{!98, !3240, !372}
!3240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3241, size: 64)
!3241 = !DIDerivedType(tag: DW_TAG_typedef, name: "PTCacheFile", file: !3111, line: 118, baseType: !3242)
!3242 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PTCacheFile", file: !3111, line: 109, size: 1536, elements: !3243)
!3243 = !{!3244, !3298, !3299, !3300, !3301, !3302, !3303, !3304, !3315}
!3244 = !DIDerivedType(tag: DW_TAG_member, name: "fp", scope: !3242, file: !3111, line: 110, baseType: !3245, size: 64)
!3245 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3246, size: 64)
!3246 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !3247, line: 7, baseType: !3248)
!3247 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/FILE.h", directory: "")
!3248 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !3249, line: 49, size: 1728, elements: !3250)
!3249 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h", directory: "")
!3250 = !{!3251, !3252, !3253, !3254, !3255, !3256, !3257, !3258, !3259, !3260, !3261, !3262, !3263, !3266, !3268, !3269, !3270, !3272, !3274, !3276, !3277, !3280, !3282, !3285, !3288, !3289, !3290, !3293, !3294}
!3251 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !3248, file: !3249, line: 51, baseType: !98, size: 32)
!3252 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !3248, file: !3249, line: 54, baseType: !501, size: 64, offset: 64)
!3253 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !3248, file: !3249, line: 55, baseType: !501, size: 64, offset: 128)
!3254 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !3248, file: !3249, line: 56, baseType: !501, size: 64, offset: 192)
!3255 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !3248, file: !3249, line: 57, baseType: !501, size: 64, offset: 256)
!3256 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !3248, file: !3249, line: 58, baseType: !501, size: 64, offset: 320)
!3257 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !3248, file: !3249, line: 59, baseType: !501, size: 64, offset: 384)
!3258 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !3248, file: !3249, line: 60, baseType: !501, size: 64, offset: 448)
!3259 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !3248, file: !3249, line: 61, baseType: !501, size: 64, offset: 512)
!3260 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !3248, file: !3249, line: 64, baseType: !501, size: 64, offset: 576)
!3261 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !3248, file: !3249, line: 65, baseType: !501, size: 64, offset: 640)
!3262 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !3248, file: !3249, line: 66, baseType: !501, size: 64, offset: 704)
!3263 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !3248, file: !3249, line: 68, baseType: !3264, size: 64, offset: 768)
!3264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3265, size: 64)
!3265 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !3249, line: 36, flags: DIFlagFwdDecl)
!3266 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !3248, file: !3249, line: 70, baseType: !3267, size: 64, offset: 832)
!3267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3248, size: 64)
!3268 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !3248, file: !3249, line: 72, baseType: !98, size: 32, offset: 896)
!3269 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !3248, file: !3249, line: 73, baseType: !98, size: 32, offset: 928)
!3270 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !3248, file: !3249, line: 74, baseType: !3271, size: 64, offset: 960)
!3271 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !588, line: 152, baseType: !476)
!3272 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !3248, file: !3249, line: 77, baseType: !3273, size: 16, offset: 1024)
!3273 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!3274 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !3248, file: !3249, line: 78, baseType: !3275, size: 8, offset: 1040)
!3275 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!3276 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !3248, file: !3249, line: 79, baseType: !762, size: 8, offset: 1048)
!3277 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !3248, file: !3249, line: 81, baseType: !3278, size: 64, offset: 1088)
!3278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3279, size: 64)
!3279 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !3249, line: 43, baseType: null)
!3280 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !3248, file: !3249, line: 89, baseType: !3281, size: 64, offset: 1152)
!3281 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !588, line: 153, baseType: !476)
!3282 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !3248, file: !3249, line: 91, baseType: !3283, size: 64, offset: 1216)
!3283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3284, size: 64)
!3284 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_codecvt", file: !3249, line: 37, flags: DIFlagFwdDecl)
!3285 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !3248, file: !3249, line: 92, baseType: !3286, size: 64, offset: 1280)
!3286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3287, size: 64)
!3287 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_wide_data", file: !3249, line: 38, flags: DIFlagFwdDecl)
!3288 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !3248, file: !3249, line: 93, baseType: !3267, size: 64, offset: 1344)
!3289 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !3248, file: !3249, line: 94, baseType: !372, size: 64, offset: 1408)
!3290 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !3248, file: !3249, line: 95, baseType: !3291, size: 64, offset: 1472)
!3291 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !3292, line: 46, baseType: !496)
!3292 = !DIFile(filename: "Rohit/IR2Vec-LoopOptimizationFramework/build_REL_AsrtON/lib/clang/10.0.1/include/stddef.h", directory: "/home/venkat/IF-DV")
!3293 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !3248, file: !3249, line: 96, baseType: !98, size: 32, offset: 1536)
!3294 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !3248, file: !3249, line: 98, baseType: !3295, size: 160, offset: 1568)
!3295 = !DICompositeType(tag: DW_TAG_array_type, baseType: !375, size: 160, elements: !3296)
!3296 = !{!3297}
!3297 = !DISubrange(count: 20)
!3298 = !DIDerivedType(tag: DW_TAG_member, name: "frame", scope: !3242, file: !3111, line: 112, baseType: !98, size: 32, offset: 64)
!3299 = !DIDerivedType(tag: DW_TAG_member, name: "old_format", scope: !3242, file: !3111, line: 112, baseType: !98, size: 32, offset: 96)
!3300 = !DIDerivedType(tag: DW_TAG_member, name: "totpoint", scope: !3242, file: !3111, line: 113, baseType: !7, size: 32, offset: 128)
!3301 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3242, file: !3111, line: 113, baseType: !7, size: 32, offset: 160)
!3302 = !DIDerivedType(tag: DW_TAG_member, name: "data_types", scope: !3242, file: !3111, line: 114, baseType: !7, size: 32, offset: 192)
!3303 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3242, file: !3111, line: 114, baseType: !7, size: 32, offset: 224)
!3304 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3242, file: !3111, line: 116, baseType: !3305, size: 736, offset: 256)
!3305 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PTCacheData", file: !3111, line: 98, size: 736, elements: !3306)
!3306 = !{!3307, !3308, !3309, !3310, !3311, !3312, !3313, !3314}
!3307 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !3305, file: !3111, line: 99, baseType: !7, size: 32)
!3308 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !3305, file: !3111, line: 100, baseType: !779, size: 96, offset: 32)
!3309 = !DIDerivedType(tag: DW_TAG_member, name: "vel", scope: !3305, file: !3111, line: 101, baseType: !779, size: 96, offset: 128)
!3310 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !3305, file: !3111, line: 102, baseType: !408, size: 128, offset: 224)
!3311 = !DIDerivedType(tag: DW_TAG_member, name: "ave", scope: !3305, file: !3111, line: 103, baseType: !779, size: 96, offset: 352)
!3312 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3305, file: !3111, line: 104, baseType: !396, size: 32, offset: 448)
!3313 = !DIDerivedType(tag: DW_TAG_member, name: "times", scope: !3305, file: !3111, line: 105, baseType: !779, size: 96, offset: 480)
!3314 = !DIDerivedType(tag: DW_TAG_member, name: "boids", scope: !3305, file: !3111, line: 106, baseType: !3172, size: 160, offset: 576)
!3315 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !3242, file: !3111, line: 117, baseType: !3316, size: 512, offset: 1024)
!3316 = !DICompositeType(tag: DW_TAG_array_type, baseType: !372, size: 512, elements: !400)
!3317 = !DIDerivedType(tag: DW_TAG_member, name: "read_stream", scope: !3208, file: !3111, line: 148, baseType: !3237, size: 64, offset: 832)
!3318 = !DIDerivedType(tag: DW_TAG_member, name: "write_extra_data", scope: !3208, file: !3111, line: 151, baseType: !3319, size: 64, offset: 896)
!3319 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3320, size: 64)
!3320 = !DISubroutineType(types: !3321)
!3321 = !{null, !372, !3322, !98}
!3322 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3323, size: 64)
!3323 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PTCacheMem", file: !3058, line: 159, size: 1408, elements: !3324)
!3324 = !{!3325, !3326, !3327, !3328, !3329, !3330, !3331, !3332, !3333}
!3325 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3323, file: !3058, line: 160, baseType: !3322, size: 64)
!3326 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3323, file: !3058, line: 160, baseType: !3322, size: 64, offset: 64)
!3327 = !DIDerivedType(tag: DW_TAG_member, name: "frame", scope: !3323, file: !3058, line: 161, baseType: !7, size: 32, offset: 128)
!3328 = !DIDerivedType(tag: DW_TAG_member, name: "totpoint", scope: !3323, file: !3058, line: 161, baseType: !7, size: 32, offset: 160)
!3329 = !DIDerivedType(tag: DW_TAG_member, name: "data_types", scope: !3323, file: !3058, line: 162, baseType: !7, size: 32, offset: 192)
!3330 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3323, file: !3058, line: 162, baseType: !7, size: 32, offset: 224)
!3331 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3323, file: !3058, line: 164, baseType: !3316, size: 512, offset: 256)
!3332 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !3323, file: !3058, line: 165, baseType: !3316, size: 512, offset: 768)
!3333 = !DIDerivedType(tag: DW_TAG_member, name: "extradata", scope: !3323, file: !3058, line: 167, baseType: !390, size: 128, offset: 1280)
!3334 = !DIDerivedType(tag: DW_TAG_member, name: "read_extra_data", scope: !3208, file: !3111, line: 153, baseType: !3335, size: 64, offset: 960)
!3335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3336, size: 64)
!3336 = !DISubroutineType(types: !3337)
!3337 = !{null, !372, !3322, !396}
!3338 = !DIDerivedType(tag: DW_TAG_member, name: "interpolate_extra_data", scope: !3208, file: !3111, line: 155, baseType: !3339, size: 64, offset: 1024)
!3339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3340, size: 64)
!3340 = !DISubroutineType(types: !3341)
!3341 = !{null, !372, !3322, !396, !396, !396}
!3342 = !DIDerivedType(tag: DW_TAG_member, name: "totpoint", scope: !3208, file: !3111, line: 158, baseType: !3343, size: 64, offset: 1088)
!3343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3344, size: 64)
!3344 = !DISubroutineType(types: !3345)
!3345 = !{!98, !372, !98}
!3346 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !3208, file: !3111, line: 160, baseType: !3347, size: 64, offset: 1152)
!3347 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3348, size: 64)
!3348 = !DISubroutineType(types: !3349)
!3349 = !{null, !372, !373}
!3350 = !DIDerivedType(tag: DW_TAG_member, name: "totwrite", scope: !3208, file: !3111, line: 162, baseType: !3343, size: 64, offset: 1216)
!3351 = !DIDerivedType(tag: DW_TAG_member, name: "write_header", scope: !3208, file: !3111, line: 164, baseType: !3352, size: 64, offset: 1280)
!3352 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3353, size: 64)
!3353 = !DISubroutineType(types: !3354)
!3354 = !{!98, !3240}
!3355 = !DIDerivedType(tag: DW_TAG_member, name: "read_header", scope: !3208, file: !3111, line: 165, baseType: !3352, size: 64, offset: 1344)
!3356 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !3208, file: !3111, line: 167, baseType: !3084, size: 64, offset: 1408)
!3357 = !DIDerivedType(tag: DW_TAG_member, name: "cache_ptr", scope: !3208, file: !3111, line: 169, baseType: !3358, size: 64, offset: 1472)
!3358 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3084, size: 64)
!3359 = !DIDerivedType(tag: DW_TAG_member, name: "ptcaches", scope: !3208, file: !3111, line: 170, baseType: !3360, size: 64, offset: 1536)
!3360 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !390, size: 64)
!3361 = !DIDerivedType(tag: DW_TAG_member, name: "psys", scope: !3110, file: !3111, line: 243, baseType: !3362, size: 64, offset: 1856)
!3362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3363, size: 64)
!3363 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleSystem", file: !3141, line: 253, size: 5248, elements: !3364)
!3364 = !{!3365, !3366, !3367, !3597, !3600, !3613, !3614, !3618, !3622, !3623, !3624, !3625, !3720, !4290, !4291, !4292, !4295, !4296, !4297, !4298, !4299, !4300, !4301, !4302, !4303, !4304, !4305, !4306, !4307, !4308, !4309, !4310, !4311, !4312, !4313, !4314, !4317, !4321, !4322, !4323, !4324, !4325, !4326, !4327, !4335, !4336, !4337, !4338, !4341, !4344, !4345}
!3365 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3363, file: !3141, line: 257, baseType: !3362, size: 64)
!3366 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3363, file: !3141, line: 257, baseType: !3362, size: 64, offset: 64)
!3367 = !DIDerivedType(tag: DW_TAG_member, name: "part", scope: !3363, file: !3141, line: 259, baseType: !3368, size: 64, offset: 128)
!3368 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3369, size: 64)
!3369 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParticleSettings", file: !3141, line: 251, baseType: !3370)
!3370 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleSettings", file: !3141, line: 153, size: 6400, elements: !3371)
!3371 = !{!3372, !3373, !3374, !3401, !3422, !3423, !3424, !3425, !3426, !3427, !3428, !3429, !3430, !3431, !3432, !3433, !3434, !3435, !3436, !3437, !3438, !3439, !3440, !3441, !3442, !3443, !3444, !3445, !3446, !3447, !3448, !3449, !3450, !3451, !3452, !3453, !3454, !3455, !3456, !3457, !3458, !3459, !3460, !3461, !3462, !3463, !3464, !3465, !3466, !3467, !3468, !3469, !3470, !3471, !3472, !3473, !3474, !3475, !3476, !3477, !3478, !3479, !3480, !3482, !3483, !3484, !3485, !3486, !3487, !3488, !3489, !3490, !3491, !3492, !3493, !3494, !3495, !3496, !3497, !3498, !3499, !3500, !3501, !3502, !3503, !3504, !3505, !3506, !3507, !3508, !3509, !3510, !3511, !3512, !3513, !3514, !3515, !3516, !3517, !3518, !3519, !3520, !3521, !3522, !3523, !3524, !3525, !3526, !3527, !3528, !3529, !3530, !3531, !3532, !3533, !3534, !3535, !3536, !3537, !3538, !3539, !3540, !3541, !3542, !3543, !3544, !3545, !3546, !3547, !3594, !3595, !3596}
!3372 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3370, file: !3141, line: 154, baseType: !427, size: 960)
!3373 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !3370, file: !3141, line: 155, baseType: !833, size: 64, offset: 960)
!3374 = !DIDerivedType(tag: DW_TAG_member, name: "boids", scope: !3370, file: !3141, line: 157, baseType: !3375, size: 64, offset: 1024)
!3375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3376, size: 64)
!3376 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BoidSettings", file: !3173, line: 189, size: 832, elements: !3377)
!3377 = !{!3378, !3379, !3380, !3381, !3382, !3383, !3384, !3385, !3386, !3387, !3388, !3389, !3390, !3391, !3392, !3393, !3394, !3395, !3396, !3397, !3398, !3399, !3400}
!3378 = !DIDerivedType(tag: DW_TAG_member, name: "options", scope: !3376, file: !3173, line: 190, baseType: !98, size: 32)
!3379 = !DIDerivedType(tag: DW_TAG_member, name: "last_state_id", scope: !3376, file: !3173, line: 190, baseType: !98, size: 32, offset: 32)
!3380 = !DIDerivedType(tag: DW_TAG_member, name: "landing_smoothness", scope: !3376, file: !3173, line: 192, baseType: !396, size: 32, offset: 64)
!3381 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !3376, file: !3173, line: 192, baseType: !396, size: 32, offset: 96)
!3382 = !DIDerivedType(tag: DW_TAG_member, name: "banking", scope: !3376, file: !3173, line: 193, baseType: !396, size: 32, offset: 128)
!3383 = !DIDerivedType(tag: DW_TAG_member, name: "pitch", scope: !3376, file: !3173, line: 193, baseType: !396, size: 32, offset: 160)
!3384 = !DIDerivedType(tag: DW_TAG_member, name: "health", scope: !3376, file: !3173, line: 195, baseType: !396, size: 32, offset: 192)
!3385 = !DIDerivedType(tag: DW_TAG_member, name: "aggression", scope: !3376, file: !3173, line: 195, baseType: !396, size: 32, offset: 224)
!3386 = !DIDerivedType(tag: DW_TAG_member, name: "strength", scope: !3376, file: !3173, line: 196, baseType: !396, size: 32, offset: 256)
!3387 = !DIDerivedType(tag: DW_TAG_member, name: "accuracy", scope: !3376, file: !3173, line: 196, baseType: !396, size: 32, offset: 288)
!3388 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !3376, file: !3173, line: 196, baseType: !396, size: 32, offset: 320)
!3389 = !DIDerivedType(tag: DW_TAG_member, name: "air_min_speed", scope: !3376, file: !3173, line: 199, baseType: !396, size: 32, offset: 352)
!3390 = !DIDerivedType(tag: DW_TAG_member, name: "air_max_speed", scope: !3376, file: !3173, line: 199, baseType: !396, size: 32, offset: 384)
!3391 = !DIDerivedType(tag: DW_TAG_member, name: "air_max_acc", scope: !3376, file: !3173, line: 200, baseType: !396, size: 32, offset: 416)
!3392 = !DIDerivedType(tag: DW_TAG_member, name: "air_max_ave", scope: !3376, file: !3173, line: 200, baseType: !396, size: 32, offset: 448)
!3393 = !DIDerivedType(tag: DW_TAG_member, name: "air_personal_space", scope: !3376, file: !3173, line: 201, baseType: !396, size: 32, offset: 480)
!3394 = !DIDerivedType(tag: DW_TAG_member, name: "land_jump_speed", scope: !3376, file: !3173, line: 204, baseType: !396, size: 32, offset: 512)
!3395 = !DIDerivedType(tag: DW_TAG_member, name: "land_max_speed", scope: !3376, file: !3173, line: 204, baseType: !396, size: 32, offset: 544)
!3396 = !DIDerivedType(tag: DW_TAG_member, name: "land_max_acc", scope: !3376, file: !3173, line: 205, baseType: !396, size: 32, offset: 576)
!3397 = !DIDerivedType(tag: DW_TAG_member, name: "land_max_ave", scope: !3376, file: !3173, line: 205, baseType: !396, size: 32, offset: 608)
!3398 = !DIDerivedType(tag: DW_TAG_member, name: "land_personal_space", scope: !3376, file: !3173, line: 206, baseType: !396, size: 32, offset: 640)
!3399 = !DIDerivedType(tag: DW_TAG_member, name: "land_stick_force", scope: !3376, file: !3173, line: 207, baseType: !396, size: 32, offset: 672)
!3400 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !3376, file: !3173, line: 209, baseType: !390, size: 128, offset: 704)
!3401 = !DIDerivedType(tag: DW_TAG_member, name: "fluid", scope: !3370, file: !3141, line: 158, baseType: !3402, size: 64, offset: 1088)
!3402 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3403, size: 64)
!3403 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SPHFluidSettings", file: !3141, line: 127, size: 544, elements: !3404)
!3404 = !{!3405, !3406, !3407, !3408, !3409, !3410, !3411, !3412, !3413, !3414, !3415, !3416, !3417, !3418, !3419, !3420, !3421}
!3405 = !DIDerivedType(tag: DW_TAG_member, name: "radius", scope: !3403, file: !3141, line: 129, baseType: !396, size: 32)
!3406 = !DIDerivedType(tag: DW_TAG_member, name: "spring_k", scope: !3403, file: !3141, line: 129, baseType: !396, size: 32, offset: 32)
!3407 = !DIDerivedType(tag: DW_TAG_member, name: "rest_length", scope: !3403, file: !3141, line: 129, baseType: !396, size: 32, offset: 64)
!3408 = !DIDerivedType(tag: DW_TAG_member, name: "plasticity_constant", scope: !3403, file: !3141, line: 130, baseType: !396, size: 32, offset: 96)
!3409 = !DIDerivedType(tag: DW_TAG_member, name: "yield_ratio", scope: !3403, file: !3141, line: 130, baseType: !396, size: 32, offset: 128)
!3410 = !DIDerivedType(tag: DW_TAG_member, name: "plasticity_balance", scope: !3403, file: !3141, line: 131, baseType: !396, size: 32, offset: 160)
!3411 = !DIDerivedType(tag: DW_TAG_member, name: "yield_balance", scope: !3403, file: !3141, line: 131, baseType: !396, size: 32, offset: 192)
!3412 = !DIDerivedType(tag: DW_TAG_member, name: "viscosity_omega", scope: !3403, file: !3141, line: 132, baseType: !396, size: 32, offset: 224)
!3413 = !DIDerivedType(tag: DW_TAG_member, name: "viscosity_beta", scope: !3403, file: !3141, line: 132, baseType: !396, size: 32, offset: 256)
!3414 = !DIDerivedType(tag: DW_TAG_member, name: "stiffness_k", scope: !3403, file: !3141, line: 133, baseType: !396, size: 32, offset: 288)
!3415 = !DIDerivedType(tag: DW_TAG_member, name: "stiffness_knear", scope: !3403, file: !3141, line: 133, baseType: !396, size: 32, offset: 320)
!3416 = !DIDerivedType(tag: DW_TAG_member, name: "rest_density", scope: !3403, file: !3141, line: 133, baseType: !396, size: 32, offset: 352)
!3417 = !DIDerivedType(tag: DW_TAG_member, name: "buoyancy", scope: !3403, file: !3141, line: 134, baseType: !396, size: 32, offset: 384)
!3418 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3403, file: !3141, line: 135, baseType: !98, size: 32, offset: 416)
!3419 = !DIDerivedType(tag: DW_TAG_member, name: "spring_frames", scope: !3403, file: !3141, line: 135, baseType: !98, size: 32, offset: 448)
!3420 = !DIDerivedType(tag: DW_TAG_member, name: "solver", scope: !3403, file: !3141, line: 136, baseType: !399, size: 16, offset: 480)
!3421 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3403, file: !3141, line: 137, baseType: !811, size: 48, offset: 496)
!3422 = !DIDerivedType(tag: DW_TAG_member, name: "effector_weights", scope: !3370, file: !3141, line: 160, baseType: !3056, size: 64, offset: 1152)
!3423 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3370, file: !3141, line: 162, baseType: !98, size: 32, offset: 1216)
!3424 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !3370, file: !3141, line: 162, baseType: !98, size: 32, offset: 1248)
!3425 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3370, file: !3141, line: 163, baseType: !399, size: 16, offset: 1280)
!3426 = !DIDerivedType(tag: DW_TAG_member, name: "from", scope: !3370, file: !3141, line: 163, baseType: !399, size: 16, offset: 1296)
!3427 = !DIDerivedType(tag: DW_TAG_member, name: "distr", scope: !3370, file: !3141, line: 163, baseType: !399, size: 16, offset: 1312)
!3428 = !DIDerivedType(tag: DW_TAG_member, name: "texact", scope: !3370, file: !3141, line: 163, baseType: !399, size: 16, offset: 1328)
!3429 = !DIDerivedType(tag: DW_TAG_member, name: "phystype", scope: !3370, file: !3141, line: 165, baseType: !399, size: 16, offset: 1344)
!3430 = !DIDerivedType(tag: DW_TAG_member, name: "rotmode", scope: !3370, file: !3141, line: 165, baseType: !399, size: 16, offset: 1360)
!3431 = !DIDerivedType(tag: DW_TAG_member, name: "avemode", scope: !3370, file: !3141, line: 165, baseType: !399, size: 16, offset: 1376)
!3432 = !DIDerivedType(tag: DW_TAG_member, name: "reactevent", scope: !3370, file: !3141, line: 165, baseType: !399, size: 16, offset: 1392)
!3433 = !DIDerivedType(tag: DW_TAG_member, name: "draw", scope: !3370, file: !3141, line: 166, baseType: !98, size: 32, offset: 1408)
!3434 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !3370, file: !3141, line: 166, baseType: !98, size: 32, offset: 1440)
!3435 = !DIDerivedType(tag: DW_TAG_member, name: "draw_as", scope: !3370, file: !3141, line: 167, baseType: !399, size: 16, offset: 1472)
!3436 = !DIDerivedType(tag: DW_TAG_member, name: "draw_size", scope: !3370, file: !3141, line: 167, baseType: !399, size: 16, offset: 1488)
!3437 = !DIDerivedType(tag: DW_TAG_member, name: "childtype", scope: !3370, file: !3141, line: 167, baseType: !399, size: 16, offset: 1504)
!3438 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !3370, file: !3141, line: 167, baseType: !399, size: 16, offset: 1520)
!3439 = !DIDerivedType(tag: DW_TAG_member, name: "ren_as", scope: !3370, file: !3141, line: 168, baseType: !399, size: 16, offset: 1536)
!3440 = !DIDerivedType(tag: DW_TAG_member, name: "subframes", scope: !3370, file: !3141, line: 168, baseType: !399, size: 16, offset: 1552)
!3441 = !DIDerivedType(tag: DW_TAG_member, name: "draw_col", scope: !3370, file: !3141, line: 168, baseType: !399, size: 16, offset: 1568)
!3442 = !DIDerivedType(tag: DW_TAG_member, name: "draw_step", scope: !3370, file: !3141, line: 170, baseType: !399, size: 16, offset: 1584)
!3443 = !DIDerivedType(tag: DW_TAG_member, name: "ren_step", scope: !3370, file: !3141, line: 170, baseType: !399, size: 16, offset: 1600)
!3444 = !DIDerivedType(tag: DW_TAG_member, name: "hair_step", scope: !3370, file: !3141, line: 171, baseType: !399, size: 16, offset: 1616)
!3445 = !DIDerivedType(tag: DW_TAG_member, name: "keys_step", scope: !3370, file: !3141, line: 171, baseType: !399, size: 16, offset: 1632)
!3446 = !DIDerivedType(tag: DW_TAG_member, name: "adapt_angle", scope: !3370, file: !3141, line: 174, baseType: !399, size: 16, offset: 1648)
!3447 = !DIDerivedType(tag: DW_TAG_member, name: "adapt_pix", scope: !3370, file: !3141, line: 174, baseType: !399, size: 16, offset: 1664)
!3448 = !DIDerivedType(tag: DW_TAG_member, name: "disp", scope: !3370, file: !3141, line: 176, baseType: !399, size: 16, offset: 1680)
!3449 = !DIDerivedType(tag: DW_TAG_member, name: "omat", scope: !3370, file: !3141, line: 176, baseType: !399, size: 16, offset: 1696)
!3450 = !DIDerivedType(tag: DW_TAG_member, name: "interpolation", scope: !3370, file: !3141, line: 176, baseType: !399, size: 16, offset: 1712)
!3451 = !DIDerivedType(tag: DW_TAG_member, name: "integrator", scope: !3370, file: !3141, line: 176, baseType: !399, size: 16, offset: 1728)
!3452 = !DIDerivedType(tag: DW_TAG_member, name: "rotfrom", scope: !3370, file: !3141, line: 177, baseType: !399, size: 16, offset: 1744)
!3453 = !DIDerivedType(tag: DW_TAG_member, name: "kink", scope: !3370, file: !3141, line: 178, baseType: !399, size: 16, offset: 1760)
!3454 = !DIDerivedType(tag: DW_TAG_member, name: "kink_axis", scope: !3370, file: !3141, line: 178, baseType: !399, size: 16, offset: 1776)
!3455 = !DIDerivedType(tag: DW_TAG_member, name: "bb_align", scope: !3370, file: !3141, line: 181, baseType: !399, size: 16, offset: 1792)
!3456 = !DIDerivedType(tag: DW_TAG_member, name: "bb_uv_split", scope: !3370, file: !3141, line: 181, baseType: !399, size: 16, offset: 1808)
!3457 = !DIDerivedType(tag: DW_TAG_member, name: "bb_anim", scope: !3370, file: !3141, line: 181, baseType: !399, size: 16, offset: 1824)
!3458 = !DIDerivedType(tag: DW_TAG_member, name: "bb_split_offset", scope: !3370, file: !3141, line: 181, baseType: !399, size: 16, offset: 1840)
!3459 = !DIDerivedType(tag: DW_TAG_member, name: "bb_tilt", scope: !3370, file: !3141, line: 182, baseType: !396, size: 32, offset: 1856)
!3460 = !DIDerivedType(tag: DW_TAG_member, name: "bb_rand_tilt", scope: !3370, file: !3141, line: 182, baseType: !396, size: 32, offset: 1888)
!3461 = !DIDerivedType(tag: DW_TAG_member, name: "bb_offset", scope: !3370, file: !3141, line: 182, baseType: !1335, size: 64, offset: 1920)
!3462 = !DIDerivedType(tag: DW_TAG_member, name: "bb_size", scope: !3370, file: !3141, line: 182, baseType: !1335, size: 64, offset: 1984)
!3463 = !DIDerivedType(tag: DW_TAG_member, name: "bb_vel_head", scope: !3370, file: !3141, line: 182, baseType: !396, size: 32, offset: 2048)
!3464 = !DIDerivedType(tag: DW_TAG_member, name: "bb_vel_tail", scope: !3370, file: !3141, line: 182, baseType: !396, size: 32, offset: 2080)
!3465 = !DIDerivedType(tag: DW_TAG_member, name: "color_vec_max", scope: !3370, file: !3141, line: 185, baseType: !396, size: 32, offset: 2112)
!3466 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_flag", scope: !3370, file: !3141, line: 188, baseType: !399, size: 16, offset: 2144)
!3467 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_refsize", scope: !3370, file: !3141, line: 188, baseType: !399, size: 16, offset: 2160)
!3468 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_rate", scope: !3370, file: !3141, line: 189, baseType: !396, size: 32, offset: 2176)
!3469 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_transition", scope: !3370, file: !3141, line: 189, baseType: !396, size: 32, offset: 2208)
!3470 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_viewport", scope: !3370, file: !3141, line: 190, baseType: !396, size: 32, offset: 2240)
!3471 = !DIDerivedType(tag: DW_TAG_member, name: "sta", scope: !3370, file: !3141, line: 193, baseType: !396, size: 32, offset: 2272)
!3472 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !3370, file: !3141, line: 193, baseType: !396, size: 32, offset: 2304)
!3473 = !DIDerivedType(tag: DW_TAG_member, name: "lifetime", scope: !3370, file: !3141, line: 193, baseType: !396, size: 32, offset: 2336)
!3474 = !DIDerivedType(tag: DW_TAG_member, name: "randlife", scope: !3370, file: !3141, line: 193, baseType: !396, size: 32, offset: 2368)
!3475 = !DIDerivedType(tag: DW_TAG_member, name: "timetweak", scope: !3370, file: !3141, line: 194, baseType: !396, size: 32, offset: 2400)
!3476 = !DIDerivedType(tag: DW_TAG_member, name: "courant_target", scope: !3370, file: !3141, line: 194, baseType: !396, size: 32, offset: 2432)
!3477 = !DIDerivedType(tag: DW_TAG_member, name: "jitfac", scope: !3370, file: !3141, line: 195, baseType: !396, size: 32, offset: 2464)
!3478 = !DIDerivedType(tag: DW_TAG_member, name: "eff_hair", scope: !3370, file: !3141, line: 195, baseType: !396, size: 32, offset: 2496)
!3479 = !DIDerivedType(tag: DW_TAG_member, name: "grid_rand", scope: !3370, file: !3141, line: 195, baseType: !396, size: 32, offset: 2528)
!3480 = !DIDerivedType(tag: DW_TAG_member, name: "ps_offset", scope: !3370, file: !3141, line: 195, baseType: !3481, size: 32, offset: 2560)
!3481 = !DICompositeType(tag: DW_TAG_array_type, baseType: !396, size: 32, elements: !763)
!3482 = !DIDerivedType(tag: DW_TAG_member, name: "totpart", scope: !3370, file: !3141, line: 196, baseType: !98, size: 32, offset: 2592)
!3483 = !DIDerivedType(tag: DW_TAG_member, name: "userjit", scope: !3370, file: !3141, line: 196, baseType: !98, size: 32, offset: 2624)
!3484 = !DIDerivedType(tag: DW_TAG_member, name: "grid_res", scope: !3370, file: !3141, line: 196, baseType: !98, size: 32, offset: 2656)
!3485 = !DIDerivedType(tag: DW_TAG_member, name: "effector_amount", scope: !3370, file: !3141, line: 196, baseType: !98, size: 32, offset: 2688)
!3486 = !DIDerivedType(tag: DW_TAG_member, name: "time_flag", scope: !3370, file: !3141, line: 197, baseType: !399, size: 16, offset: 2720)
!3487 = !DIDerivedType(tag: DW_TAG_member, name: "time_pad", scope: !3370, file: !3141, line: 197, baseType: !811, size: 48, offset: 2736)
!3488 = !DIDerivedType(tag: DW_TAG_member, name: "normfac", scope: !3370, file: !3141, line: 200, baseType: !396, size: 32, offset: 2784)
!3489 = !DIDerivedType(tag: DW_TAG_member, name: "obfac", scope: !3370, file: !3141, line: 200, baseType: !396, size: 32, offset: 2816)
!3490 = !DIDerivedType(tag: DW_TAG_member, name: "randfac", scope: !3370, file: !3141, line: 200, baseType: !396, size: 32, offset: 2848)
!3491 = !DIDerivedType(tag: DW_TAG_member, name: "partfac", scope: !3370, file: !3141, line: 200, baseType: !396, size: 32, offset: 2880)
!3492 = !DIDerivedType(tag: DW_TAG_member, name: "tanfac", scope: !3370, file: !3141, line: 200, baseType: !396, size: 32, offset: 2912)
!3493 = !DIDerivedType(tag: DW_TAG_member, name: "tanphase", scope: !3370, file: !3141, line: 200, baseType: !396, size: 32, offset: 2944)
!3494 = !DIDerivedType(tag: DW_TAG_member, name: "reactfac", scope: !3370, file: !3141, line: 200, baseType: !396, size: 32, offset: 2976)
!3495 = !DIDerivedType(tag: DW_TAG_member, name: "ob_vel", scope: !3370, file: !3141, line: 201, baseType: !779, size: 96, offset: 3008)
!3496 = !DIDerivedType(tag: DW_TAG_member, name: "avefac", scope: !3370, file: !3141, line: 202, baseType: !396, size: 32, offset: 3104)
!3497 = !DIDerivedType(tag: DW_TAG_member, name: "phasefac", scope: !3370, file: !3141, line: 202, baseType: !396, size: 32, offset: 3136)
!3498 = !DIDerivedType(tag: DW_TAG_member, name: "randrotfac", scope: !3370, file: !3141, line: 202, baseType: !396, size: 32, offset: 3168)
!3499 = !DIDerivedType(tag: DW_TAG_member, name: "randphasefac", scope: !3370, file: !3141, line: 202, baseType: !396, size: 32, offset: 3200)
!3500 = !DIDerivedType(tag: DW_TAG_member, name: "mass", scope: !3370, file: !3141, line: 204, baseType: !396, size: 32, offset: 3232)
!3501 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3370, file: !3141, line: 204, baseType: !396, size: 32, offset: 3264)
!3502 = !DIDerivedType(tag: DW_TAG_member, name: "randsize", scope: !3370, file: !3141, line: 204, baseType: !396, size: 32, offset: 3296)
!3503 = !DIDerivedType(tag: DW_TAG_member, name: "acc", scope: !3370, file: !3141, line: 206, baseType: !779, size: 96, offset: 3328)
!3504 = !DIDerivedType(tag: DW_TAG_member, name: "dragfac", scope: !3370, file: !3141, line: 206, baseType: !396, size: 32, offset: 3424)
!3505 = !DIDerivedType(tag: DW_TAG_member, name: "brownfac", scope: !3370, file: !3141, line: 206, baseType: !396, size: 32, offset: 3456)
!3506 = !DIDerivedType(tag: DW_TAG_member, name: "dampfac", scope: !3370, file: !3141, line: 206, baseType: !396, size: 32, offset: 3488)
!3507 = !DIDerivedType(tag: DW_TAG_member, name: "randlength", scope: !3370, file: !3141, line: 208, baseType: !396, size: 32, offset: 3520)
!3508 = !DIDerivedType(tag: DW_TAG_member, name: "child_nbr", scope: !3370, file: !3141, line: 210, baseType: !98, size: 32, offset: 3552)
!3509 = !DIDerivedType(tag: DW_TAG_member, name: "ren_child_nbr", scope: !3370, file: !3141, line: 210, baseType: !98, size: 32, offset: 3584)
!3510 = !DIDerivedType(tag: DW_TAG_member, name: "parents", scope: !3370, file: !3141, line: 211, baseType: !396, size: 32, offset: 3616)
!3511 = !DIDerivedType(tag: DW_TAG_member, name: "childsize", scope: !3370, file: !3141, line: 211, baseType: !396, size: 32, offset: 3648)
!3512 = !DIDerivedType(tag: DW_TAG_member, name: "childrandsize", scope: !3370, file: !3141, line: 211, baseType: !396, size: 32, offset: 3680)
!3513 = !DIDerivedType(tag: DW_TAG_member, name: "childrad", scope: !3370, file: !3141, line: 212, baseType: !396, size: 32, offset: 3712)
!3514 = !DIDerivedType(tag: DW_TAG_member, name: "childflat", scope: !3370, file: !3141, line: 212, baseType: !396, size: 32, offset: 3744)
!3515 = !DIDerivedType(tag: DW_TAG_member, name: "clumpfac", scope: !3370, file: !3141, line: 214, baseType: !396, size: 32, offset: 3776)
!3516 = !DIDerivedType(tag: DW_TAG_member, name: "clumppow", scope: !3370, file: !3141, line: 214, baseType: !396, size: 32, offset: 3808)
!3517 = !DIDerivedType(tag: DW_TAG_member, name: "kink_amp", scope: !3370, file: !3141, line: 216, baseType: !396, size: 32, offset: 3840)
!3518 = !DIDerivedType(tag: DW_TAG_member, name: "kink_freq", scope: !3370, file: !3141, line: 216, baseType: !396, size: 32, offset: 3872)
!3519 = !DIDerivedType(tag: DW_TAG_member, name: "kink_shape", scope: !3370, file: !3141, line: 216, baseType: !396, size: 32, offset: 3904)
!3520 = !DIDerivedType(tag: DW_TAG_member, name: "kink_flat", scope: !3370, file: !3141, line: 216, baseType: !396, size: 32, offset: 3936)
!3521 = !DIDerivedType(tag: DW_TAG_member, name: "kink_amp_clump", scope: !3370, file: !3141, line: 217, baseType: !396, size: 32, offset: 3968)
!3522 = !DIDerivedType(tag: DW_TAG_member, name: "rough1", scope: !3370, file: !3141, line: 219, baseType: !396, size: 32, offset: 4000)
!3523 = !DIDerivedType(tag: DW_TAG_member, name: "rough1_size", scope: !3370, file: !3141, line: 219, baseType: !396, size: 32, offset: 4032)
!3524 = !DIDerivedType(tag: DW_TAG_member, name: "rough2", scope: !3370, file: !3141, line: 220, baseType: !396, size: 32, offset: 4064)
!3525 = !DIDerivedType(tag: DW_TAG_member, name: "rough2_size", scope: !3370, file: !3141, line: 220, baseType: !396, size: 32, offset: 4096)
!3526 = !DIDerivedType(tag: DW_TAG_member, name: "rough2_thres", scope: !3370, file: !3141, line: 220, baseType: !396, size: 32, offset: 4128)
!3527 = !DIDerivedType(tag: DW_TAG_member, name: "rough_end", scope: !3370, file: !3141, line: 221, baseType: !396, size: 32, offset: 4160)
!3528 = !DIDerivedType(tag: DW_TAG_member, name: "rough_end_shape", scope: !3370, file: !3141, line: 221, baseType: !396, size: 32, offset: 4192)
!3529 = !DIDerivedType(tag: DW_TAG_member, name: "clength", scope: !3370, file: !3141, line: 223, baseType: !396, size: 32, offset: 4224)
!3530 = !DIDerivedType(tag: DW_TAG_member, name: "clength_thres", scope: !3370, file: !3141, line: 223, baseType: !396, size: 32, offset: 4256)
!3531 = !DIDerivedType(tag: DW_TAG_member, name: "parting_fac", scope: !3370, file: !3141, line: 225, baseType: !396, size: 32, offset: 4288)
!3532 = !DIDerivedType(tag: DW_TAG_member, name: "parting_min", scope: !3370, file: !3141, line: 226, baseType: !396, size: 32, offset: 4320)
!3533 = !DIDerivedType(tag: DW_TAG_member, name: "parting_max", scope: !3370, file: !3141, line: 226, baseType: !396, size: 32, offset: 4352)
!3534 = !DIDerivedType(tag: DW_TAG_member, name: "branch_thres", scope: !3370, file: !3141, line: 228, baseType: !396, size: 32, offset: 4384)
!3535 = !DIDerivedType(tag: DW_TAG_member, name: "draw_line", scope: !3370, file: !3141, line: 230, baseType: !1335, size: 64, offset: 4416)
!3536 = !DIDerivedType(tag: DW_TAG_member, name: "path_start", scope: !3370, file: !3141, line: 231, baseType: !396, size: 32, offset: 4480)
!3537 = !DIDerivedType(tag: DW_TAG_member, name: "path_end", scope: !3370, file: !3141, line: 231, baseType: !396, size: 32, offset: 4512)
!3538 = !DIDerivedType(tag: DW_TAG_member, name: "trail_count", scope: !3370, file: !3141, line: 232, baseType: !98, size: 32, offset: 4544)
!3539 = !DIDerivedType(tag: DW_TAG_member, name: "keyed_loops", scope: !3370, file: !3141, line: 234, baseType: !98, size: 32, offset: 4576)
!3540 = !DIDerivedType(tag: DW_TAG_member, name: "mtex", scope: !3370, file: !3141, line: 236, baseType: !981, size: 1152, offset: 4608)
!3541 = !DIDerivedType(tag: DW_TAG_member, name: "dup_group", scope: !3370, file: !3141, line: 238, baseType: !3061, size: 64, offset: 5760)
!3542 = !DIDerivedType(tag: DW_TAG_member, name: "dupliweights", scope: !3370, file: !3141, line: 239, baseType: !390, size: 128, offset: 5824)
!3543 = !DIDerivedType(tag: DW_TAG_member, name: "eff_group", scope: !3370, file: !3141, line: 240, baseType: !3061, size: 64, offset: 5952)
!3544 = !DIDerivedType(tag: DW_TAG_member, name: "dup_ob", scope: !3370, file: !3141, line: 241, baseType: !423, size: 64, offset: 6016)
!3545 = !DIDerivedType(tag: DW_TAG_member, name: "bb_ob", scope: !3370, file: !3141, line: 242, baseType: !423, size: 64, offset: 6080)
!3546 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !3370, file: !3141, line: 243, baseType: !978, size: 64, offset: 6144)
!3547 = !DIDerivedType(tag: DW_TAG_member, name: "pd", scope: !3370, file: !3141, line: 244, baseType: !3548, size: 64, offset: 6208)
!3548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3549, size: 64)
!3549 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PartDeflect", file: !3058, line: 61, size: 1280, elements: !3550)
!3550 = !{!3551, !3552, !3553, !3554, !3555, !3556, !3557, !3558, !3559, !3560, !3561, !3562, !3563, !3564, !3565, !3566, !3567, !3568, !3569, !3570, !3571, !3572, !3573, !3574, !3575, !3576, !3577, !3578, !3579, !3580, !3581, !3582, !3583, !3584, !3585, !3586, !3587, !3588, !3591, !3592, !3593}
!3551 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3549, file: !3058, line: 62, baseType: !98, size: 32)
!3552 = !DIDerivedType(tag: DW_TAG_member, name: "deflect", scope: !3549, file: !3058, line: 63, baseType: !399, size: 16, offset: 32)
!3553 = !DIDerivedType(tag: DW_TAG_member, name: "forcefield", scope: !3549, file: !3058, line: 64, baseType: !399, size: 16, offset: 48)
!3554 = !DIDerivedType(tag: DW_TAG_member, name: "falloff", scope: !3549, file: !3058, line: 65, baseType: !399, size: 16, offset: 64)
!3555 = !DIDerivedType(tag: DW_TAG_member, name: "shape", scope: !3549, file: !3058, line: 66, baseType: !399, size: 16, offset: 80)
!3556 = !DIDerivedType(tag: DW_TAG_member, name: "tex_mode", scope: !3549, file: !3058, line: 67, baseType: !399, size: 16, offset: 96)
!3557 = !DIDerivedType(tag: DW_TAG_member, name: "kink", scope: !3549, file: !3058, line: 68, baseType: !399, size: 16, offset: 112)
!3558 = !DIDerivedType(tag: DW_TAG_member, name: "kink_axis", scope: !3549, file: !3058, line: 68, baseType: !399, size: 16, offset: 128)
!3559 = !DIDerivedType(tag: DW_TAG_member, name: "zdir", scope: !3549, file: !3058, line: 69, baseType: !399, size: 16, offset: 144)
!3560 = !DIDerivedType(tag: DW_TAG_member, name: "f_strength", scope: !3549, file: !3058, line: 72, baseType: !396, size: 32, offset: 160)
!3561 = !DIDerivedType(tag: DW_TAG_member, name: "f_damp", scope: !3549, file: !3058, line: 73, baseType: !396, size: 32, offset: 192)
!3562 = !DIDerivedType(tag: DW_TAG_member, name: "f_flow", scope: !3549, file: !3058, line: 74, baseType: !396, size: 32, offset: 224)
!3563 = !DIDerivedType(tag: DW_TAG_member, name: "f_size", scope: !3549, file: !3058, line: 77, baseType: !396, size: 32, offset: 256)
!3564 = !DIDerivedType(tag: DW_TAG_member, name: "f_power", scope: !3549, file: !3058, line: 80, baseType: !396, size: 32, offset: 288)
!3565 = !DIDerivedType(tag: DW_TAG_member, name: "maxdist", scope: !3549, file: !3058, line: 81, baseType: !396, size: 32, offset: 320)
!3566 = !DIDerivedType(tag: DW_TAG_member, name: "mindist", scope: !3549, file: !3058, line: 82, baseType: !396, size: 32, offset: 352)
!3567 = !DIDerivedType(tag: DW_TAG_member, name: "f_power_r", scope: !3549, file: !3058, line: 83, baseType: !396, size: 32, offset: 384)
!3568 = !DIDerivedType(tag: DW_TAG_member, name: "maxrad", scope: !3549, file: !3058, line: 84, baseType: !396, size: 32, offset: 416)
!3569 = !DIDerivedType(tag: DW_TAG_member, name: "minrad", scope: !3549, file: !3058, line: 85, baseType: !396, size: 32, offset: 448)
!3570 = !DIDerivedType(tag: DW_TAG_member, name: "pdef_damp", scope: !3549, file: !3058, line: 88, baseType: !396, size: 32, offset: 480)
!3571 = !DIDerivedType(tag: DW_TAG_member, name: "pdef_rdamp", scope: !3549, file: !3058, line: 89, baseType: !396, size: 32, offset: 512)
!3572 = !DIDerivedType(tag: DW_TAG_member, name: "pdef_perm", scope: !3549, file: !3058, line: 90, baseType: !396, size: 32, offset: 544)
!3573 = !DIDerivedType(tag: DW_TAG_member, name: "pdef_frict", scope: !3549, file: !3058, line: 91, baseType: !396, size: 32, offset: 576)
!3574 = !DIDerivedType(tag: DW_TAG_member, name: "pdef_rfrict", scope: !3549, file: !3058, line: 92, baseType: !396, size: 32, offset: 608)
!3575 = !DIDerivedType(tag: DW_TAG_member, name: "pdef_stickness", scope: !3549, file: !3058, line: 93, baseType: !396, size: 32, offset: 640)
!3576 = !DIDerivedType(tag: DW_TAG_member, name: "absorption", scope: !3549, file: !3058, line: 95, baseType: !396, size: 32, offset: 672)
!3577 = !DIDerivedType(tag: DW_TAG_member, name: "pdef_sbdamp", scope: !3549, file: !3058, line: 98, baseType: !396, size: 32, offset: 704)
!3578 = !DIDerivedType(tag: DW_TAG_member, name: "pdef_sbift", scope: !3549, file: !3058, line: 99, baseType: !396, size: 32, offset: 736)
!3579 = !DIDerivedType(tag: DW_TAG_member, name: "pdef_sboft", scope: !3549, file: !3058, line: 100, baseType: !396, size: 32, offset: 768)
!3580 = !DIDerivedType(tag: DW_TAG_member, name: "clump_fac", scope: !3549, file: !3058, line: 103, baseType: !396, size: 32, offset: 800)
!3581 = !DIDerivedType(tag: DW_TAG_member, name: "clump_pow", scope: !3549, file: !3058, line: 103, baseType: !396, size: 32, offset: 832)
!3582 = !DIDerivedType(tag: DW_TAG_member, name: "kink_freq", scope: !3549, file: !3058, line: 104, baseType: !396, size: 32, offset: 864)
!3583 = !DIDerivedType(tag: DW_TAG_member, name: "kink_shape", scope: !3549, file: !3058, line: 104, baseType: !396, size: 32, offset: 896)
!3584 = !DIDerivedType(tag: DW_TAG_member, name: "kink_amp", scope: !3549, file: !3058, line: 104, baseType: !396, size: 32, offset: 928)
!3585 = !DIDerivedType(tag: DW_TAG_member, name: "free_end", scope: !3549, file: !3058, line: 104, baseType: !396, size: 32, offset: 960)
!3586 = !DIDerivedType(tag: DW_TAG_member, name: "tex_nabla", scope: !3549, file: !3058, line: 107, baseType: !396, size: 32, offset: 992)
!3587 = !DIDerivedType(tag: DW_TAG_member, name: "tex", scope: !3549, file: !3058, line: 108, baseType: !991, size: 64, offset: 1024)
!3588 = !DIDerivedType(tag: DW_TAG_member, name: "rng", scope: !3549, file: !3058, line: 111, baseType: !3589, size: 64, offset: 1088)
!3589 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3590, size: 64)
!3590 = !DICompositeType(tag: DW_TAG_structure_type, name: "RNG", file: !3058, line: 111, flags: DIFlagFwdDecl)
!3591 = !DIDerivedType(tag: DW_TAG_member, name: "f_noise", scope: !3549, file: !3058, line: 112, baseType: !396, size: 32, offset: 1152)
!3592 = !DIDerivedType(tag: DW_TAG_member, name: "seed", scope: !3549, file: !3058, line: 113, baseType: !98, size: 32, offset: 1184)
!3593 = !DIDerivedType(tag: DW_TAG_member, name: "f_source", scope: !3549, file: !3058, line: 115, baseType: !423, size: 64, offset: 1216)
!3594 = !DIDerivedType(tag: DW_TAG_member, name: "pd2", scope: !3370, file: !3141, line: 245, baseType: !3548, size: 64, offset: 6272)
!3595 = !DIDerivedType(tag: DW_TAG_member, name: "use_modifier_stack", scope: !3370, file: !3141, line: 248, baseType: !399, size: 16, offset: 6336)
!3596 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3370, file: !3141, line: 249, baseType: !811, size: 48, offset: 6352)
!3597 = !DIDerivedType(tag: DW_TAG_member, name: "particles", scope: !3363, file: !3141, line: 261, baseType: !3598, size: 64, offset: 192)
!3598 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3599, size: 64)
!3599 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParticleData", file: !3141, line: 125, baseType: !3140)
!3600 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !3363, file: !3141, line: 262, baseType: !3601, size: 64, offset: 256)
!3601 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3602, size: 64)
!3602 = !DIDerivedType(tag: DW_TAG_typedef, name: "ChildParticle", file: !3141, line: 77, baseType: !3603)
!3603 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ChildParticle", file: !3141, line: 71, size: 512, elements: !3604)
!3604 = !{!3605, !3606, !3607, !3609, !3610, !3611, !3612}
!3605 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !3603, file: !3141, line: 72, baseType: !98, size: 32)
!3606 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !3603, file: !3141, line: 72, baseType: !98, size: 32, offset: 32)
!3607 = !DIDerivedType(tag: DW_TAG_member, name: "pa", scope: !3603, file: !3141, line: 73, baseType: !3608, size: 128, offset: 64)
!3608 = !DICompositeType(tag: DW_TAG_array_type, baseType: !98, size: 128, elements: !409)
!3609 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !3603, file: !3141, line: 74, baseType: !408, size: 128, offset: 192)
!3610 = !DIDerivedType(tag: DW_TAG_member, name: "fuv", scope: !3603, file: !3141, line: 75, baseType: !408, size: 128, offset: 320)
!3611 = !DIDerivedType(tag: DW_TAG_member, name: "foffset", scope: !3603, file: !3141, line: 75, baseType: !396, size: 32, offset: 448)
!3612 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !3603, file: !3141, line: 76, baseType: !396, size: 32, offset: 480)
!3613 = !DIDerivedType(tag: DW_TAG_member, name: "edit", scope: !3363, file: !3141, line: 264, baseType: !3109, size: 64, offset: 320)
!3614 = !DIDerivedType(tag: DW_TAG_member, name: "free_edit", scope: !3363, file: !3141, line: 265, baseType: !3615, size: 64, offset: 384)
!3615 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3616, size: 64)
!3616 = !DISubroutineType(types: !3617)
!3617 = !{null, !3109}
!3618 = !DIDerivedType(tag: DW_TAG_member, name: "pathcache", scope: !3363, file: !3141, line: 267, baseType: !3619, size: 64, offset: 448)
!3619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3620, size: 64)
!3620 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3621, size: 64)
!3621 = !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleCacheKey", file: !3141, line: 267, flags: DIFlagFwdDecl)
!3622 = !DIDerivedType(tag: DW_TAG_member, name: "childcache", scope: !3363, file: !3141, line: 268, baseType: !3619, size: 64, offset: 512)
!3623 = !DIDerivedType(tag: DW_TAG_member, name: "pathcachebufs", scope: !3363, file: !3141, line: 269, baseType: !388, size: 128, offset: 576)
!3624 = !DIDerivedType(tag: DW_TAG_member, name: "childcachebufs", scope: !3363, file: !3141, line: 269, baseType: !388, size: 128, offset: 704)
!3625 = !DIDerivedType(tag: DW_TAG_member, name: "clmd", scope: !3363, file: !3141, line: 271, baseType: !3626, size: 64, offset: 832)
!3626 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3627, size: 64)
!3627 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ClothModifierData", file: !263, line: 557, size: 1344, elements: !3628)
!3628 = !{!3629, !3643, !3644, !3647, !3700, !3718, !3719}
!3629 = !DIDerivedType(tag: DW_TAG_member, name: "modifier", scope: !3627, file: !263, line: 558, baseType: !3630, size: 896)
!3630 = !DIDerivedType(tag: DW_TAG_typedef, name: "ModifierData", file: !263, line: 110, baseType: !3631)
!3631 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ModifierData", file: !263, line: 99, size: 896, elements: !3632)
!3632 = !{!3633, !3635, !3636, !3637, !3638, !3639, !3640, !3641, !3642}
!3633 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3631, file: !263, line: 100, baseType: !3634, size: 64)
!3634 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3631, size: 64)
!3635 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3631, file: !263, line: 100, baseType: !3634, size: 64, offset: 64)
!3636 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3631, file: !263, line: 102, baseType: !98, size: 32, offset: 128)
!3637 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3631, file: !263, line: 102, baseType: !98, size: 32, offset: 160)
!3638 = !DIDerivedType(tag: DW_TAG_member, name: "stackindex", scope: !3631, file: !263, line: 103, baseType: !98, size: 32, offset: 192)
!3639 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3631, file: !263, line: 103, baseType: !98, size: 32, offset: 224)
!3640 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3631, file: !263, line: 104, baseType: !692, size: 512, offset: 256)
!3641 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !3631, file: !263, line: 107, baseType: !827, size: 64, offset: 768)
!3642 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !3631, file: !263, line: 109, baseType: !501, size: 64, offset: 832)
!3643 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !3627, file: !263, line: 560, baseType: !827, size: 64, offset: 896)
!3644 = !DIDerivedType(tag: DW_TAG_member, name: "clothObject", scope: !3627, file: !263, line: 561, baseType: !3645, size: 64, offset: 960)
!3645 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3646, size: 64)
!3646 = !DICompositeType(tag: DW_TAG_structure_type, name: "Cloth", file: !263, line: 561, flags: DIFlagFwdDecl)
!3647 = !DIDerivedType(tag: DW_TAG_member, name: "sim_parms", scope: !3627, file: !263, line: 562, baseType: !3648, size: 64, offset: 1024)
!3648 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3649, size: 64)
!3649 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ClothSimSettings", file: !3650, line: 47, size: 1344, elements: !3651)
!3650 = !DIFile(filename: "blender/source/blender/makesdna/DNA_cloth_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3651 = !{!3652, !3659, !3660, !3661, !3662, !3663, !3664, !3665, !3666, !3667, !3668, !3669, !3670, !3671, !3672, !3673, !3674, !3675, !3676, !3677, !3678, !3679, !3680, !3681, !3682, !3683, !3684, !3685, !3686, !3687, !3688, !3689, !3690, !3691, !3692, !3693, !3694, !3695, !3696, !3697, !3698, !3699}
!3652 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !3649, file: !3650, line: 48, baseType: !3653, size: 64)
!3653 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3654, size: 64)
!3654 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "LinkNode", file: !3655, line: 45, size: 128, elements: !3656)
!3655 = !DIFile(filename: "blender/source/blender/blenlib/BLI_linklist.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3656 = !{!3657, !3658}
!3657 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3654, file: !3655, line: 46, baseType: !3653, size: 64)
!3658 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !3654, file: !3655, line: 47, baseType: !372, size: 64, offset: 64)
!3659 = !DIDerivedType(tag: DW_TAG_member, name: "mingoal", scope: !3649, file: !3650, line: 49, baseType: !396, size: 32, offset: 64)
!3660 = !DIDerivedType(tag: DW_TAG_member, name: "Cdis", scope: !3649, file: !3650, line: 50, baseType: !396, size: 32, offset: 96)
!3661 = !DIDerivedType(tag: DW_TAG_member, name: "Cvi", scope: !3649, file: !3650, line: 51, baseType: !396, size: 32, offset: 128)
!3662 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !3649, file: !3650, line: 52, baseType: !779, size: 96, offset: 160)
!3663 = !DIDerivedType(tag: DW_TAG_member, name: "dt", scope: !3649, file: !3650, line: 53, baseType: !396, size: 32, offset: 256)
!3664 = !DIDerivedType(tag: DW_TAG_member, name: "mass", scope: !3649, file: !3650, line: 54, baseType: !396, size: 32, offset: 288)
!3665 = !DIDerivedType(tag: DW_TAG_member, name: "structural", scope: !3649, file: !3650, line: 55, baseType: !396, size: 32, offset: 320)
!3666 = !DIDerivedType(tag: DW_TAG_member, name: "shear", scope: !3649, file: !3650, line: 56, baseType: !396, size: 32, offset: 352)
!3667 = !DIDerivedType(tag: DW_TAG_member, name: "bending", scope: !3649, file: !3650, line: 57, baseType: !396, size: 32, offset: 384)
!3668 = !DIDerivedType(tag: DW_TAG_member, name: "max_bend", scope: !3649, file: !3650, line: 58, baseType: !396, size: 32, offset: 416)
!3669 = !DIDerivedType(tag: DW_TAG_member, name: "max_struct", scope: !3649, file: !3650, line: 59, baseType: !396, size: 32, offset: 448)
!3670 = !DIDerivedType(tag: DW_TAG_member, name: "max_shear", scope: !3649, file: !3650, line: 60, baseType: !396, size: 32, offset: 480)
!3671 = !DIDerivedType(tag: DW_TAG_member, name: "max_sewing", scope: !3649, file: !3650, line: 61, baseType: !396, size: 32, offset: 512)
!3672 = !DIDerivedType(tag: DW_TAG_member, name: "avg_spring_len", scope: !3649, file: !3650, line: 62, baseType: !396, size: 32, offset: 544)
!3673 = !DIDerivedType(tag: DW_TAG_member, name: "timescale", scope: !3649, file: !3650, line: 63, baseType: !396, size: 32, offset: 576)
!3674 = !DIDerivedType(tag: DW_TAG_member, name: "maxgoal", scope: !3649, file: !3650, line: 64, baseType: !396, size: 32, offset: 608)
!3675 = !DIDerivedType(tag: DW_TAG_member, name: "eff_force_scale", scope: !3649, file: !3650, line: 65, baseType: !396, size: 32, offset: 640)
!3676 = !DIDerivedType(tag: DW_TAG_member, name: "eff_wind_scale", scope: !3649, file: !3650, line: 66, baseType: !396, size: 32, offset: 672)
!3677 = !DIDerivedType(tag: DW_TAG_member, name: "sim_time_old", scope: !3649, file: !3650, line: 67, baseType: !396, size: 32, offset: 704)
!3678 = !DIDerivedType(tag: DW_TAG_member, name: "defgoal", scope: !3649, file: !3650, line: 68, baseType: !396, size: 32, offset: 736)
!3679 = !DIDerivedType(tag: DW_TAG_member, name: "goalspring", scope: !3649, file: !3650, line: 69, baseType: !396, size: 32, offset: 768)
!3680 = !DIDerivedType(tag: DW_TAG_member, name: "goalfrict", scope: !3649, file: !3650, line: 70, baseType: !396, size: 32, offset: 800)
!3681 = !DIDerivedType(tag: DW_TAG_member, name: "velocity_smooth", scope: !3649, file: !3650, line: 71, baseType: !396, size: 32, offset: 832)
!3682 = !DIDerivedType(tag: DW_TAG_member, name: "collider_friction", scope: !3649, file: !3650, line: 72, baseType: !396, size: 32, offset: 864)
!3683 = !DIDerivedType(tag: DW_TAG_member, name: "vel_damping", scope: !3649, file: !3650, line: 73, baseType: !396, size: 32, offset: 896)
!3684 = !DIDerivedType(tag: DW_TAG_member, name: "shrink_min", scope: !3649, file: !3650, line: 74, baseType: !396, size: 32, offset: 928)
!3685 = !DIDerivedType(tag: DW_TAG_member, name: "shrink_max", scope: !3649, file: !3650, line: 75, baseType: !396, size: 32, offset: 960)
!3686 = !DIDerivedType(tag: DW_TAG_member, name: "stepsPerFrame", scope: !3649, file: !3650, line: 77, baseType: !98, size: 32, offset: 992)
!3687 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3649, file: !3650, line: 78, baseType: !98, size: 32, offset: 1024)
!3688 = !DIDerivedType(tag: DW_TAG_member, name: "preroll", scope: !3649, file: !3650, line: 79, baseType: !98, size: 32, offset: 1056)
!3689 = !DIDerivedType(tag: DW_TAG_member, name: "maxspringlen", scope: !3649, file: !3650, line: 80, baseType: !98, size: 32, offset: 1088)
!3690 = !DIDerivedType(tag: DW_TAG_member, name: "solver_type", scope: !3649, file: !3650, line: 81, baseType: !399, size: 16, offset: 1120)
!3691 = !DIDerivedType(tag: DW_TAG_member, name: "vgroup_bend", scope: !3649, file: !3650, line: 82, baseType: !399, size: 16, offset: 1136)
!3692 = !DIDerivedType(tag: DW_TAG_member, name: "vgroup_mass", scope: !3649, file: !3650, line: 83, baseType: !399, size: 16, offset: 1152)
!3693 = !DIDerivedType(tag: DW_TAG_member, name: "vgroup_struct", scope: !3649, file: !3650, line: 84, baseType: !399, size: 16, offset: 1168)
!3694 = !DIDerivedType(tag: DW_TAG_member, name: "vgroup_shrink", scope: !3649, file: !3650, line: 85, baseType: !399, size: 16, offset: 1184)
!3695 = !DIDerivedType(tag: DW_TAG_member, name: "shapekey_rest", scope: !3649, file: !3650, line: 86, baseType: !399, size: 16, offset: 1200)
!3696 = !DIDerivedType(tag: DW_TAG_member, name: "presets", scope: !3649, file: !3650, line: 87, baseType: !399, size: 16, offset: 1216)
!3697 = !DIDerivedType(tag: DW_TAG_member, name: "reset", scope: !3649, file: !3650, line: 88, baseType: !399, size: 16, offset: 1232)
!3698 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3649, file: !3650, line: 89, baseType: !2395, size: 32, offset: 1248)
!3699 = !DIDerivedType(tag: DW_TAG_member, name: "effector_weights", scope: !3649, file: !3650, line: 91, baseType: !3056, size: 64, offset: 1280)
!3700 = !DIDerivedType(tag: DW_TAG_member, name: "coll_parms", scope: !3627, file: !263, line: 563, baseType: !3701, size: 64, offset: 1088)
!3701 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3702, size: 64)
!3702 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ClothCollSettings", file: !3650, line: 95, size: 448, elements: !3703)
!3703 = !{!3704, !3705, !3706, !3707, !3708, !3709, !3710, !3711, !3712, !3713, !3714, !3715, !3716, !3717}
!3704 = !DIDerivedType(tag: DW_TAG_member, name: "collision_list", scope: !3702, file: !3650, line: 96, baseType: !3653, size: 64)
!3705 = !DIDerivedType(tag: DW_TAG_member, name: "epsilon", scope: !3702, file: !3650, line: 97, baseType: !396, size: 32, offset: 64)
!3706 = !DIDerivedType(tag: DW_TAG_member, name: "self_friction", scope: !3702, file: !3650, line: 98, baseType: !396, size: 32, offset: 96)
!3707 = !DIDerivedType(tag: DW_TAG_member, name: "friction", scope: !3702, file: !3650, line: 99, baseType: !396, size: 32, offset: 128)
!3708 = !DIDerivedType(tag: DW_TAG_member, name: "selfepsilon", scope: !3702, file: !3650, line: 100, baseType: !396, size: 32, offset: 160)
!3709 = !DIDerivedType(tag: DW_TAG_member, name: "repel_force", scope: !3702, file: !3650, line: 101, baseType: !396, size: 32, offset: 192)
!3710 = !DIDerivedType(tag: DW_TAG_member, name: "distance_repel", scope: !3702, file: !3650, line: 101, baseType: !396, size: 32, offset: 224)
!3711 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3702, file: !3650, line: 102, baseType: !98, size: 32, offset: 256)
!3712 = !DIDerivedType(tag: DW_TAG_member, name: "self_loop_count", scope: !3702, file: !3650, line: 103, baseType: !399, size: 16, offset: 288)
!3713 = !DIDerivedType(tag: DW_TAG_member, name: "loop_count", scope: !3702, file: !3650, line: 104, baseType: !399, size: 16, offset: 304)
!3714 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !3702, file: !3650, line: 105, baseType: !3061, size: 64, offset: 320)
!3715 = !DIDerivedType(tag: DW_TAG_member, name: "vgroup_selfcol", scope: !3702, file: !3650, line: 106, baseType: !399, size: 16, offset: 384)
!3716 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3702, file: !3650, line: 107, baseType: !399, size: 16, offset: 400)
!3717 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !3702, file: !3650, line: 108, baseType: !98, size: 32, offset: 416)
!3718 = !DIDerivedType(tag: DW_TAG_member, name: "point_cache", scope: !3627, file: !263, line: 564, baseType: !3084, size: 64, offset: 1152)
!3719 = !DIDerivedType(tag: DW_TAG_member, name: "ptcaches", scope: !3627, file: !263, line: 565, baseType: !390, size: 128, offset: 1216)
!3720 = !DIDerivedType(tag: DW_TAG_member, name: "hair_in_dm", scope: !3363, file: !3141, line: 272, baseType: !3721, size: 64, offset: 896)
!3721 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3722, size: 64)
!3722 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DerivedMesh", file: !6, line: 178, size: 13504, elements: !3723)
!3723 = !{!3724, !3759, !3760, !3761, !3762, !3763, !3764, !3765, !3766, !3767, !3768, !3769, !3770, !3773, !3776, !3778, !3779, !3781, !3782, !3958, !3959, !3965, !3970, !3971, !3975, !3976, !3977, !3978, !3979, !3990, !4002, !4016, !4020, !4024, !4028, !4037, !4049, !4053, !4057, !4061, !4065, !4069, !4070, !4071, !4072, !4073, !4074, !4078, !4079, !4080, !4081, !4085, !4086, !4087, !4088, !4089, !4094, !4095, !4096, !4097, !4098, !4102, !4103, !4104, !4105, !4106, !4113, !4123, !4128, !4134, !4144, !4149, !4160, !4167, !4174, !4178, !4182, !4186, !4191, !4192, !4193, !4200, !4206, !4207, !4208, !4212, !4213, !4222, !4247, !4251, !4259, !4263, !4267, !4271, !4279, !4289}
!3724 = !DIDerivedType(tag: DW_TAG_member, name: "vertData", scope: !3722, file: !6, line: 180, baseType: !3725, size: 1600)
!3725 = !DIDerivedType(tag: DW_TAG_typedef, name: "CustomData", file: !321, line: 73, baseType: !3726)
!3726 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CustomData", file: !321, line: 64, size: 1600, elements: !3727)
!3727 = !{!3728, !3743, !3747, !3748, !3749, !3750, !3753}
!3728 = !DIDerivedType(tag: DW_TAG_member, name: "layers", scope: !3726, file: !321, line: 65, baseType: !3729, size: 64)
!3729 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3730, size: 64)
!3730 = !DIDerivedType(tag: DW_TAG_typedef, name: "CustomDataLayer", file: !321, line: 53, baseType: !3731)
!3731 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CustomDataLayer", file: !321, line: 42, size: 832, elements: !3732)
!3732 = !{!3733, !3734, !3735, !3736, !3737, !3738, !3739, !3740, !3741, !3742}
!3733 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3731, file: !321, line: 43, baseType: !98, size: 32)
!3734 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !3731, file: !321, line: 44, baseType: !98, size: 32, offset: 32)
!3735 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3731, file: !321, line: 45, baseType: !98, size: 32, offset: 64)
!3736 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !3731, file: !321, line: 46, baseType: !98, size: 32, offset: 96)
!3737 = !DIDerivedType(tag: DW_TAG_member, name: "active_rnd", scope: !3731, file: !321, line: 47, baseType: !98, size: 32, offset: 128)
!3738 = !DIDerivedType(tag: DW_TAG_member, name: "active_clone", scope: !3731, file: !321, line: 48, baseType: !98, size: 32, offset: 160)
!3739 = !DIDerivedType(tag: DW_TAG_member, name: "active_mask", scope: !3731, file: !321, line: 49, baseType: !98, size: 32, offset: 192)
!3740 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !3731, file: !321, line: 50, baseType: !98, size: 32, offset: 224)
!3741 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3731, file: !321, line: 51, baseType: !692, size: 512, offset: 256)
!3742 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3731, file: !321, line: 52, baseType: !372, size: 64, offset: 768)
!3743 = !DIDerivedType(tag: DW_TAG_member, name: "typemap", scope: !3726, file: !321, line: 66, baseType: !3744, size: 1312, offset: 64)
!3744 = !DICompositeType(tag: DW_TAG_array_type, baseType: !98, size: 1312, elements: !3745)
!3745 = !{!3746}
!3746 = !DISubrange(count: 41)
!3747 = !DIDerivedType(tag: DW_TAG_member, name: "totlayer", scope: !3726, file: !321, line: 69, baseType: !98, size: 32, offset: 1376)
!3748 = !DIDerivedType(tag: DW_TAG_member, name: "maxlayer", scope: !3726, file: !321, line: 69, baseType: !98, size: 32, offset: 1408)
!3749 = !DIDerivedType(tag: DW_TAG_member, name: "totsize", scope: !3726, file: !321, line: 70, baseType: !98, size: 32, offset: 1440)
!3750 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !3726, file: !321, line: 71, baseType: !3751, size: 64, offset: 1472)
!3751 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3752, size: 64)
!3752 = !DICompositeType(tag: DW_TAG_structure_type, name: "BLI_mempool", file: !321, line: 71, flags: DIFlagFwdDecl)
!3753 = !DIDerivedType(tag: DW_TAG_member, name: "external", scope: !3726, file: !321, line: 72, baseType: !3754, size: 64, offset: 1536)
!3754 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3755, size: 64)
!3755 = !DIDerivedType(tag: DW_TAG_typedef, name: "CustomDataExternal", file: !321, line: 59, baseType: !3756)
!3756 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CustomDataExternal", file: !321, line: 57, size: 8192, elements: !3757)
!3757 = !{!3758}
!3758 = !DIDerivedType(tag: DW_TAG_member, name: "filename", scope: !3756, file: !321, line: 58, baseType: !478, size: 8192)
!3759 = !DIDerivedType(tag: DW_TAG_member, name: "edgeData", scope: !3722, file: !6, line: 180, baseType: !3725, size: 1600, offset: 1600)
!3760 = !DIDerivedType(tag: DW_TAG_member, name: "faceData", scope: !3722, file: !6, line: 180, baseType: !3725, size: 1600, offset: 3200)
!3761 = !DIDerivedType(tag: DW_TAG_member, name: "loopData", scope: !3722, file: !6, line: 180, baseType: !3725, size: 1600, offset: 4800)
!3762 = !DIDerivedType(tag: DW_TAG_member, name: "polyData", scope: !3722, file: !6, line: 180, baseType: !3725, size: 1600, offset: 6400)
!3763 = !DIDerivedType(tag: DW_TAG_member, name: "numVertData", scope: !3722, file: !6, line: 181, baseType: !98, size: 32, offset: 8000)
!3764 = !DIDerivedType(tag: DW_TAG_member, name: "numEdgeData", scope: !3722, file: !6, line: 181, baseType: !98, size: 32, offset: 8032)
!3765 = !DIDerivedType(tag: DW_TAG_member, name: "numTessFaceData", scope: !3722, file: !6, line: 181, baseType: !98, size: 32, offset: 8064)
!3766 = !DIDerivedType(tag: DW_TAG_member, name: "numLoopData", scope: !3722, file: !6, line: 181, baseType: !98, size: 32, offset: 8096)
!3767 = !DIDerivedType(tag: DW_TAG_member, name: "numPolyData", scope: !3722, file: !6, line: 181, baseType: !98, size: 32, offset: 8128)
!3768 = !DIDerivedType(tag: DW_TAG_member, name: "needsFree", scope: !3722, file: !6, line: 182, baseType: !98, size: 32, offset: 8160)
!3769 = !DIDerivedType(tag: DW_TAG_member, name: "deformedOnly", scope: !3722, file: !6, line: 183, baseType: !98, size: 32, offset: 8192)
!3770 = !DIDerivedType(tag: DW_TAG_member, name: "bvhCache", scope: !3722, file: !6, line: 184, baseType: !3771, size: 64, offset: 8256)
!3771 = !DIDerivedType(tag: DW_TAG_typedef, name: "BVHCache", file: !3772, line: 124, baseType: !3653)
!3772 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_bvhutils.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3773 = !DIDerivedType(tag: DW_TAG_member, name: "drawObject", scope: !3722, file: !6, line: 185, baseType: !3774, size: 64, offset: 8320)
!3774 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3775, size: 64)
!3775 = !DICompositeType(tag: DW_TAG_structure_type, name: "GPUDrawObject", file: !6, line: 97, flags: DIFlagFwdDecl)
!3776 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3722, file: !6, line: 186, baseType: !3777, size: 32, offset: 8384)
!3777 = !DIDerivedType(tag: DW_TAG_typedef, name: "DerivedMeshType", file: !6, line: 132, baseType: !5)
!3778 = !DIDerivedType(tag: DW_TAG_member, name: "auto_bump_scale", scope: !3722, file: !6, line: 187, baseType: !396, size: 32, offset: 8416)
!3779 = !DIDerivedType(tag: DW_TAG_member, name: "dirty", scope: !3722, file: !6, line: 188, baseType: !3780, size: 32, offset: 8448)
!3780 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMDirtyFlag", file: !6, line: 175, baseType: !12)
!3781 = !DIDerivedType(tag: DW_TAG_member, name: "totmat", scope: !3722, file: !6, line: 189, baseType: !98, size: 32, offset: 8480)
!3782 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !3722, file: !6, line: 190, baseType: !3783, size: 64, offset: 8512)
!3783 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3784, size: 64)
!3784 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3785, size: 64)
!3785 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Material", file: !3786, line: 93, size: 7552, elements: !3787)
!3786 = !DIFile(filename: "blender/source/blender/makesdna/DNA_material_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3787 = !{!3788, !3789, !3790, !3791, !3792, !3793, !3794, !3795, !3796, !3797, !3798, !3799, !3800, !3801, !3802, !3803, !3804, !3805, !3806, !3807, !3808, !3809, !3810, !3811, !3812, !3813, !3814, !3815, !3836, !3843, !3844, !3845, !3846, !3847, !3848, !3849, !3850, !3851, !3852, !3853, !3854, !3855, !3856, !3857, !3858, !3859, !3860, !3861, !3862, !3863, !3864, !3865, !3866, !3867, !3868, !3869, !3870, !3871, !3872, !3873, !3874, !3875, !3876, !3877, !3878, !3879, !3880, !3881, !3882, !3883, !3884, !3885, !3886, !3887, !3888, !3889, !3890, !3891, !3892, !3893, !3894, !3895, !3896, !3897, !3898, !3899, !3900, !3901, !3902, !3903, !3904, !3905, !3906, !3907, !3908, !3909, !3910, !3911, !3912, !3913, !3914, !3915, !3916, !3917, !3918, !3919, !3920, !3921, !3922, !3923, !3924, !3925, !3926, !3927, !3928, !3929, !3930, !3931, !3932, !3933, !3934, !3935, !3936, !3937, !3938, !3939, !3940, !3941, !3942, !3943, !3944, !3945, !3946, !3947, !3948, !3949, !3957}
!3788 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3785, file: !3786, line: 94, baseType: !427, size: 960)
!3789 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !3785, file: !3786, line: 95, baseType: !833, size: 64, offset: 960)
!3790 = !DIDerivedType(tag: DW_TAG_member, name: "material_type", scope: !3785, file: !3786, line: 97, baseType: !399, size: 16, offset: 1024)
!3791 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3785, file: !3786, line: 97, baseType: !399, size: 16, offset: 1040)
!3792 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !3785, file: !3786, line: 99, baseType: !396, size: 32, offset: 1056)
!3793 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !3785, file: !3786, line: 99, baseType: !396, size: 32, offset: 1088)
!3794 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !3785, file: !3786, line: 99, baseType: !396, size: 32, offset: 1120)
!3795 = !DIDerivedType(tag: DW_TAG_member, name: "specr", scope: !3785, file: !3786, line: 100, baseType: !396, size: 32, offset: 1152)
!3796 = !DIDerivedType(tag: DW_TAG_member, name: "specg", scope: !3785, file: !3786, line: 100, baseType: !396, size: 32, offset: 1184)
!3797 = !DIDerivedType(tag: DW_TAG_member, name: "specb", scope: !3785, file: !3786, line: 100, baseType: !396, size: 32, offset: 1216)
!3798 = !DIDerivedType(tag: DW_TAG_member, name: "mirr", scope: !3785, file: !3786, line: 101, baseType: !396, size: 32, offset: 1248)
!3799 = !DIDerivedType(tag: DW_TAG_member, name: "mirg", scope: !3785, file: !3786, line: 101, baseType: !396, size: 32, offset: 1280)
!3800 = !DIDerivedType(tag: DW_TAG_member, name: "mirb", scope: !3785, file: !3786, line: 101, baseType: !396, size: 32, offset: 1312)
!3801 = !DIDerivedType(tag: DW_TAG_member, name: "ambr", scope: !3785, file: !3786, line: 102, baseType: !396, size: 32, offset: 1344)
!3802 = !DIDerivedType(tag: DW_TAG_member, name: "ambb", scope: !3785, file: !3786, line: 102, baseType: !396, size: 32, offset: 1376)
!3803 = !DIDerivedType(tag: DW_TAG_member, name: "ambg", scope: !3785, file: !3786, line: 102, baseType: !396, size: 32, offset: 1408)
!3804 = !DIDerivedType(tag: DW_TAG_member, name: "amb", scope: !3785, file: !3786, line: 103, baseType: !396, size: 32, offset: 1440)
!3805 = !DIDerivedType(tag: DW_TAG_member, name: "emit", scope: !3785, file: !3786, line: 103, baseType: !396, size: 32, offset: 1472)
!3806 = !DIDerivedType(tag: DW_TAG_member, name: "ang", scope: !3785, file: !3786, line: 103, baseType: !396, size: 32, offset: 1504)
!3807 = !DIDerivedType(tag: DW_TAG_member, name: "spectra", scope: !3785, file: !3786, line: 103, baseType: !396, size: 32, offset: 1536)
!3808 = !DIDerivedType(tag: DW_TAG_member, name: "ray_mirror", scope: !3785, file: !3786, line: 103, baseType: !396, size: 32, offset: 1568)
!3809 = !DIDerivedType(tag: DW_TAG_member, name: "alpha", scope: !3785, file: !3786, line: 104, baseType: !396, size: 32, offset: 1600)
!3810 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !3785, file: !3786, line: 104, baseType: !396, size: 32, offset: 1632)
!3811 = !DIDerivedType(tag: DW_TAG_member, name: "spec", scope: !3785, file: !3786, line: 104, baseType: !396, size: 32, offset: 1664)
!3812 = !DIDerivedType(tag: DW_TAG_member, name: "zoffs", scope: !3785, file: !3786, line: 104, baseType: !396, size: 32, offset: 1696)
!3813 = !DIDerivedType(tag: DW_TAG_member, name: "add", scope: !3785, file: !3786, line: 104, baseType: !396, size: 32, offset: 1728)
!3814 = !DIDerivedType(tag: DW_TAG_member, name: "translucency", scope: !3785, file: !3786, line: 105, baseType: !396, size: 32, offset: 1760)
!3815 = !DIDerivedType(tag: DW_TAG_member, name: "vol", scope: !3785, file: !3786, line: 108, baseType: !3816, size: 704, offset: 1792)
!3816 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VolumeSettings", file: !3786, line: 53, size: 704, elements: !3817)
!3817 = !{!3818, !3819, !3820, !3821, !3822, !3823, !3824, !3825, !3826, !3827, !3828, !3829, !3830, !3831, !3832, !3833, !3834, !3835}
!3818 = !DIDerivedType(tag: DW_TAG_member, name: "density", scope: !3816, file: !3786, line: 54, baseType: !396, size: 32)
!3819 = !DIDerivedType(tag: DW_TAG_member, name: "emission", scope: !3816, file: !3786, line: 55, baseType: !396, size: 32, offset: 32)
!3820 = !DIDerivedType(tag: DW_TAG_member, name: "scattering", scope: !3816, file: !3786, line: 56, baseType: !396, size: 32, offset: 64)
!3821 = !DIDerivedType(tag: DW_TAG_member, name: "reflection", scope: !3816, file: !3786, line: 57, baseType: !396, size: 32, offset: 96)
!3822 = !DIDerivedType(tag: DW_TAG_member, name: "emission_col", scope: !3816, file: !3786, line: 59, baseType: !779, size: 96, offset: 128)
!3823 = !DIDerivedType(tag: DW_TAG_member, name: "transmission_col", scope: !3816, file: !3786, line: 60, baseType: !779, size: 96, offset: 224)
!3824 = !DIDerivedType(tag: DW_TAG_member, name: "reflection_col", scope: !3816, file: !3786, line: 61, baseType: !779, size: 96, offset: 320)
!3825 = !DIDerivedType(tag: DW_TAG_member, name: "density_scale", scope: !3816, file: !3786, line: 63, baseType: !396, size: 32, offset: 416)
!3826 = !DIDerivedType(tag: DW_TAG_member, name: "depth_cutoff", scope: !3816, file: !3786, line: 64, baseType: !396, size: 32, offset: 448)
!3827 = !DIDerivedType(tag: DW_TAG_member, name: "asymmetry", scope: !3816, file: !3786, line: 65, baseType: !396, size: 32, offset: 480)
!3828 = !DIDerivedType(tag: DW_TAG_member, name: "stepsize_type", scope: !3816, file: !3786, line: 67, baseType: !399, size: 16, offset: 512)
!3829 = !DIDerivedType(tag: DW_TAG_member, name: "shadeflag", scope: !3816, file: !3786, line: 68, baseType: !399, size: 16, offset: 528)
!3830 = !DIDerivedType(tag: DW_TAG_member, name: "shade_type", scope: !3816, file: !3786, line: 69, baseType: !399, size: 16, offset: 544)
!3831 = !DIDerivedType(tag: DW_TAG_member, name: "precache_resolution", scope: !3816, file: !3786, line: 70, baseType: !399, size: 16, offset: 560)
!3832 = !DIDerivedType(tag: DW_TAG_member, name: "stepsize", scope: !3816, file: !3786, line: 72, baseType: !396, size: 32, offset: 576)
!3833 = !DIDerivedType(tag: DW_TAG_member, name: "ms_diff", scope: !3816, file: !3786, line: 73, baseType: !396, size: 32, offset: 608)
!3834 = !DIDerivedType(tag: DW_TAG_member, name: "ms_intensity", scope: !3816, file: !3786, line: 74, baseType: !396, size: 32, offset: 640)
!3835 = !DIDerivedType(tag: DW_TAG_member, name: "ms_spread", scope: !3816, file: !3786, line: 75, baseType: !396, size: 32, offset: 672)
!3836 = !DIDerivedType(tag: DW_TAG_member, name: "game", scope: !3785, file: !3786, line: 109, baseType: !3837, size: 128, offset: 2496)
!3837 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameSettings", file: !3786, line: 79, size: 128, elements: !3838)
!3838 = !{!3839, !3840, !3841, !3842}
!3839 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3837, file: !3786, line: 80, baseType: !98, size: 32)
!3840 = !DIDerivedType(tag: DW_TAG_member, name: "alpha_blend", scope: !3837, file: !3786, line: 81, baseType: !98, size: 32, offset: 32)
!3841 = !DIDerivedType(tag: DW_TAG_member, name: "face_orientation", scope: !3837, file: !3786, line: 82, baseType: !98, size: 32, offset: 64)
!3842 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !3837, file: !3786, line: 83, baseType: !98, size: 32, offset: 96)
!3843 = !DIDerivedType(tag: DW_TAG_member, name: "fresnel_mir", scope: !3785, file: !3786, line: 111, baseType: !396, size: 32, offset: 2624)
!3844 = !DIDerivedType(tag: DW_TAG_member, name: "fresnel_mir_i", scope: !3785, file: !3786, line: 111, baseType: !396, size: 32, offset: 2656)
!3845 = !DIDerivedType(tag: DW_TAG_member, name: "fresnel_tra", scope: !3785, file: !3786, line: 112, baseType: !396, size: 32, offset: 2688)
!3846 = !DIDerivedType(tag: DW_TAG_member, name: "fresnel_tra_i", scope: !3785, file: !3786, line: 112, baseType: !396, size: 32, offset: 2720)
!3847 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !3785, file: !3786, line: 113, baseType: !396, size: 32, offset: 2752)
!3848 = !DIDerivedType(tag: DW_TAG_member, name: "tx_limit", scope: !3785, file: !3786, line: 114, baseType: !396, size: 32, offset: 2784)
!3849 = !DIDerivedType(tag: DW_TAG_member, name: "tx_falloff", scope: !3785, file: !3786, line: 114, baseType: !396, size: 32, offset: 2816)
!3850 = !DIDerivedType(tag: DW_TAG_member, name: "ray_depth", scope: !3785, file: !3786, line: 115, baseType: !399, size: 16, offset: 2848)
!3851 = !DIDerivedType(tag: DW_TAG_member, name: "ray_depth_tra", scope: !3785, file: !3786, line: 115, baseType: !399, size: 16, offset: 2864)
!3852 = !DIDerivedType(tag: DW_TAG_member, name: "har", scope: !3785, file: !3786, line: 116, baseType: !399, size: 16, offset: 2880)
!3853 = !DIDerivedType(tag: DW_TAG_member, name: "seed1", scope: !3785, file: !3786, line: 117, baseType: !375, size: 8, offset: 2896)
!3854 = !DIDerivedType(tag: DW_TAG_member, name: "seed2", scope: !3785, file: !3786, line: 117, baseType: !375, size: 8, offset: 2904)
!3855 = !DIDerivedType(tag: DW_TAG_member, name: "gloss_mir", scope: !3785, file: !3786, line: 119, baseType: !396, size: 32, offset: 2912)
!3856 = !DIDerivedType(tag: DW_TAG_member, name: "gloss_tra", scope: !3785, file: !3786, line: 119, baseType: !396, size: 32, offset: 2944)
!3857 = !DIDerivedType(tag: DW_TAG_member, name: "samp_gloss_mir", scope: !3785, file: !3786, line: 120, baseType: !399, size: 16, offset: 2976)
!3858 = !DIDerivedType(tag: DW_TAG_member, name: "samp_gloss_tra", scope: !3785, file: !3786, line: 120, baseType: !399, size: 16, offset: 2992)
!3859 = !DIDerivedType(tag: DW_TAG_member, name: "adapt_thresh_mir", scope: !3785, file: !3786, line: 121, baseType: !396, size: 32, offset: 3008)
!3860 = !DIDerivedType(tag: DW_TAG_member, name: "adapt_thresh_tra", scope: !3785, file: !3786, line: 121, baseType: !396, size: 32, offset: 3040)
!3861 = !DIDerivedType(tag: DW_TAG_member, name: "aniso_gloss_mir", scope: !3785, file: !3786, line: 122, baseType: !396, size: 32, offset: 3072)
!3862 = !DIDerivedType(tag: DW_TAG_member, name: "dist_mir", scope: !3785, file: !3786, line: 123, baseType: !396, size: 32, offset: 3104)
!3863 = !DIDerivedType(tag: DW_TAG_member, name: "fadeto_mir", scope: !3785, file: !3786, line: 124, baseType: !399, size: 16, offset: 3136)
!3864 = !DIDerivedType(tag: DW_TAG_member, name: "shade_flag", scope: !3785, file: !3786, line: 125, baseType: !399, size: 16, offset: 3152)
!3865 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3785, file: !3786, line: 127, baseType: !98, size: 32, offset: 3168)
!3866 = !DIDerivedType(tag: DW_TAG_member, name: "mode_l", scope: !3785, file: !3786, line: 127, baseType: !98, size: 32, offset: 3200)
!3867 = !DIDerivedType(tag: DW_TAG_member, name: "mode2", scope: !3785, file: !3786, line: 128, baseType: !98, size: 32, offset: 3232)
!3868 = !DIDerivedType(tag: DW_TAG_member, name: "mode2_l", scope: !3785, file: !3786, line: 128, baseType: !98, size: 32, offset: 3264)
!3869 = !DIDerivedType(tag: DW_TAG_member, name: "flarec", scope: !3785, file: !3786, line: 129, baseType: !399, size: 16, offset: 3296)
!3870 = !DIDerivedType(tag: DW_TAG_member, name: "starc", scope: !3785, file: !3786, line: 129, baseType: !399, size: 16, offset: 3312)
!3871 = !DIDerivedType(tag: DW_TAG_member, name: "linec", scope: !3785, file: !3786, line: 129, baseType: !399, size: 16, offset: 3328)
!3872 = !DIDerivedType(tag: DW_TAG_member, name: "ringc", scope: !3785, file: !3786, line: 129, baseType: !399, size: 16, offset: 3344)
!3873 = !DIDerivedType(tag: DW_TAG_member, name: "hasize", scope: !3785, file: !3786, line: 130, baseType: !396, size: 32, offset: 3360)
!3874 = !DIDerivedType(tag: DW_TAG_member, name: "flaresize", scope: !3785, file: !3786, line: 130, baseType: !396, size: 32, offset: 3392)
!3875 = !DIDerivedType(tag: DW_TAG_member, name: "subsize", scope: !3785, file: !3786, line: 130, baseType: !396, size: 32, offset: 3424)
!3876 = !DIDerivedType(tag: DW_TAG_member, name: "flareboost", scope: !3785, file: !3786, line: 130, baseType: !396, size: 32, offset: 3456)
!3877 = !DIDerivedType(tag: DW_TAG_member, name: "strand_sta", scope: !3785, file: !3786, line: 131, baseType: !396, size: 32, offset: 3488)
!3878 = !DIDerivedType(tag: DW_TAG_member, name: "strand_end", scope: !3785, file: !3786, line: 131, baseType: !396, size: 32, offset: 3520)
!3879 = !DIDerivedType(tag: DW_TAG_member, name: "strand_ease", scope: !3785, file: !3786, line: 131, baseType: !396, size: 32, offset: 3552)
!3880 = !DIDerivedType(tag: DW_TAG_member, name: "strand_surfnor", scope: !3785, file: !3786, line: 131, baseType: !396, size: 32, offset: 3584)
!3881 = !DIDerivedType(tag: DW_TAG_member, name: "strand_min", scope: !3785, file: !3786, line: 132, baseType: !396, size: 32, offset: 3616)
!3882 = !DIDerivedType(tag: DW_TAG_member, name: "strand_widthfade", scope: !3785, file: !3786, line: 132, baseType: !396, size: 32, offset: 3648)
!3883 = !DIDerivedType(tag: DW_TAG_member, name: "strand_uvname", scope: !3785, file: !3786, line: 133, baseType: !692, size: 512, offset: 3680)
!3884 = !DIDerivedType(tag: DW_TAG_member, name: "sbias", scope: !3785, file: !3786, line: 135, baseType: !396, size: 32, offset: 4192)
!3885 = !DIDerivedType(tag: DW_TAG_member, name: "lbias", scope: !3785, file: !3786, line: 136, baseType: !396, size: 32, offset: 4224)
!3886 = !DIDerivedType(tag: DW_TAG_member, name: "shad_alpha", scope: !3785, file: !3786, line: 137, baseType: !396, size: 32, offset: 4256)
!3887 = !DIDerivedType(tag: DW_TAG_member, name: "septex", scope: !3785, file: !3786, line: 138, baseType: !98, size: 32, offset: 4288)
!3888 = !DIDerivedType(tag: DW_TAG_member, name: "rgbsel", scope: !3785, file: !3786, line: 141, baseType: !375, size: 8, offset: 4320)
!3889 = !DIDerivedType(tag: DW_TAG_member, name: "texact", scope: !3785, file: !3786, line: 141, baseType: !375, size: 8, offset: 4328)
!3890 = !DIDerivedType(tag: DW_TAG_member, name: "pr_type", scope: !3785, file: !3786, line: 141, baseType: !375, size: 8, offset: 4336)
!3891 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !3785, file: !3786, line: 141, baseType: !375, size: 8, offset: 4344)
!3892 = !DIDerivedType(tag: DW_TAG_member, name: "pr_lamp", scope: !3785, file: !3786, line: 142, baseType: !399, size: 16, offset: 4352)
!3893 = !DIDerivedType(tag: DW_TAG_member, name: "pr_texture", scope: !3785, file: !3786, line: 142, baseType: !399, size: 16, offset: 4368)
!3894 = !DIDerivedType(tag: DW_TAG_member, name: "ml_flag", scope: !3785, file: !3786, line: 142, baseType: !399, size: 16, offset: 4384)
!3895 = !DIDerivedType(tag: DW_TAG_member, name: "mapflag", scope: !3785, file: !3786, line: 145, baseType: !375, size: 8, offset: 4400)
!3896 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3785, file: !3786, line: 145, baseType: !375, size: 8, offset: 4408)
!3897 = !DIDerivedType(tag: DW_TAG_member, name: "diff_shader", scope: !3785, file: !3786, line: 148, baseType: !399, size: 16, offset: 4416)
!3898 = !DIDerivedType(tag: DW_TAG_member, name: "spec_shader", scope: !3785, file: !3786, line: 148, baseType: !399, size: 16, offset: 4432)
!3899 = !DIDerivedType(tag: DW_TAG_member, name: "roughness", scope: !3785, file: !3786, line: 149, baseType: !396, size: 32, offset: 4448)
!3900 = !DIDerivedType(tag: DW_TAG_member, name: "refrac", scope: !3785, file: !3786, line: 149, baseType: !396, size: 32, offset: 4480)
!3901 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !3785, file: !3786, line: 152, baseType: !408, size: 128, offset: 4512)
!3902 = !DIDerivedType(tag: DW_TAG_member, name: "rms", scope: !3785, file: !3786, line: 153, baseType: !396, size: 32, offset: 4640)
!3903 = !DIDerivedType(tag: DW_TAG_member, name: "darkness", scope: !3785, file: !3786, line: 154, baseType: !396, size: 32, offset: 4672)
!3904 = !DIDerivedType(tag: DW_TAG_member, name: "texco", scope: !3785, file: !3786, line: 157, baseType: !399, size: 16, offset: 4704)
!3905 = !DIDerivedType(tag: DW_TAG_member, name: "mapto", scope: !3785, file: !3786, line: 157, baseType: !399, size: 16, offset: 4720)
!3906 = !DIDerivedType(tag: DW_TAG_member, name: "ramp_col", scope: !3785, file: !3786, line: 160, baseType: !1740, size: 64, offset: 4736)
!3907 = !DIDerivedType(tag: DW_TAG_member, name: "ramp_spec", scope: !3785, file: !3786, line: 161, baseType: !1740, size: 64, offset: 4800)
!3908 = !DIDerivedType(tag: DW_TAG_member, name: "rampin_col", scope: !3785, file: !3786, line: 162, baseType: !375, size: 8, offset: 4864)
!3909 = !DIDerivedType(tag: DW_TAG_member, name: "rampin_spec", scope: !3785, file: !3786, line: 162, baseType: !375, size: 8, offset: 4872)
!3910 = !DIDerivedType(tag: DW_TAG_member, name: "rampblend_col", scope: !3785, file: !3786, line: 163, baseType: !375, size: 8, offset: 4880)
!3911 = !DIDerivedType(tag: DW_TAG_member, name: "rampblend_spec", scope: !3785, file: !3786, line: 163, baseType: !375, size: 8, offset: 4888)
!3912 = !DIDerivedType(tag: DW_TAG_member, name: "ramp_show", scope: !3785, file: !3786, line: 164, baseType: !399, size: 16, offset: 4896)
!3913 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !3785, file: !3786, line: 164, baseType: !399, size: 16, offset: 4912)
!3914 = !DIDerivedType(tag: DW_TAG_member, name: "rampfac_col", scope: !3785, file: !3786, line: 165, baseType: !396, size: 32, offset: 4928)
!3915 = !DIDerivedType(tag: DW_TAG_member, name: "rampfac_spec", scope: !3785, file: !3786, line: 165, baseType: !396, size: 32, offset: 4960)
!3916 = !DIDerivedType(tag: DW_TAG_member, name: "mtex", scope: !3785, file: !3786, line: 167, baseType: !981, size: 1152, offset: 4992)
!3917 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !3785, file: !3786, line: 168, baseType: !1064, size: 64, offset: 6144)
!3918 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !3785, file: !3786, line: 169, baseType: !978, size: 64, offset: 6208)
!3919 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !3785, file: !3786, line: 170, baseType: !3061, size: 64, offset: 6272)
!3920 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !3785, file: !3786, line: 171, baseType: !1699, size: 64, offset: 6336)
!3921 = !DIDerivedType(tag: DW_TAG_member, name: "friction", scope: !3785, file: !3786, line: 174, baseType: !396, size: 32, offset: 6400)
!3922 = !DIDerivedType(tag: DW_TAG_member, name: "fh", scope: !3785, file: !3786, line: 174, baseType: !396, size: 32, offset: 6432)
!3923 = !DIDerivedType(tag: DW_TAG_member, name: "reflect", scope: !3785, file: !3786, line: 174, baseType: !396, size: 32, offset: 6464)
!3924 = !DIDerivedType(tag: DW_TAG_member, name: "fhdist", scope: !3785, file: !3786, line: 175, baseType: !396, size: 32, offset: 6496)
!3925 = !DIDerivedType(tag: DW_TAG_member, name: "xyfrict", scope: !3785, file: !3786, line: 175, baseType: !396, size: 32, offset: 6528)
!3926 = !DIDerivedType(tag: DW_TAG_member, name: "dynamode", scope: !3785, file: !3786, line: 176, baseType: !399, size: 16, offset: 6560)
!3927 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !3785, file: !3786, line: 176, baseType: !399, size: 16, offset: 6576)
!3928 = !DIDerivedType(tag: DW_TAG_member, name: "sss_radius", scope: !3785, file: !3786, line: 179, baseType: !779, size: 96, offset: 6592)
!3929 = !DIDerivedType(tag: DW_TAG_member, name: "sss_col", scope: !3785, file: !3786, line: 179, baseType: !779, size: 96, offset: 6688)
!3930 = !DIDerivedType(tag: DW_TAG_member, name: "sss_error", scope: !3785, file: !3786, line: 180, baseType: !396, size: 32, offset: 6784)
!3931 = !DIDerivedType(tag: DW_TAG_member, name: "sss_scale", scope: !3785, file: !3786, line: 180, baseType: !396, size: 32, offset: 6816)
!3932 = !DIDerivedType(tag: DW_TAG_member, name: "sss_ior", scope: !3785, file: !3786, line: 180, baseType: !396, size: 32, offset: 6848)
!3933 = !DIDerivedType(tag: DW_TAG_member, name: "sss_colfac", scope: !3785, file: !3786, line: 181, baseType: !396, size: 32, offset: 6880)
!3934 = !DIDerivedType(tag: DW_TAG_member, name: "sss_texfac", scope: !3785, file: !3786, line: 181, baseType: !396, size: 32, offset: 6912)
!3935 = !DIDerivedType(tag: DW_TAG_member, name: "sss_front", scope: !3785, file: !3786, line: 182, baseType: !396, size: 32, offset: 6944)
!3936 = !DIDerivedType(tag: DW_TAG_member, name: "sss_back", scope: !3785, file: !3786, line: 182, baseType: !396, size: 32, offset: 6976)
!3937 = !DIDerivedType(tag: DW_TAG_member, name: "sss_flag", scope: !3785, file: !3786, line: 183, baseType: !399, size: 16, offset: 7008)
!3938 = !DIDerivedType(tag: DW_TAG_member, name: "sss_preset", scope: !3785, file: !3786, line: 183, baseType: !399, size: 16, offset: 7024)
!3939 = !DIDerivedType(tag: DW_TAG_member, name: "mapto_textured", scope: !3785, file: !3786, line: 185, baseType: !98, size: 32, offset: 7040)
!3940 = !DIDerivedType(tag: DW_TAG_member, name: "shadowonly_flag", scope: !3785, file: !3786, line: 186, baseType: !399, size: 16, offset: 7072)
!3941 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !3785, file: !3786, line: 187, baseType: !399, size: 16, offset: 7088)
!3942 = !DIDerivedType(tag: DW_TAG_member, name: "line_col", scope: !3785, file: !3786, line: 190, baseType: !408, size: 128, offset: 7104)
!3943 = !DIDerivedType(tag: DW_TAG_member, name: "line_priority", scope: !3785, file: !3786, line: 191, baseType: !399, size: 16, offset: 7232)
!3944 = !DIDerivedType(tag: DW_TAG_member, name: "vcol_alpha", scope: !3785, file: !3786, line: 192, baseType: !399, size: 16, offset: 7248)
!3945 = !DIDerivedType(tag: DW_TAG_member, name: "paint_active_slot", scope: !3785, file: !3786, line: 195, baseType: !399, size: 16, offset: 7264)
!3946 = !DIDerivedType(tag: DW_TAG_member, name: "paint_clone_slot", scope: !3785, file: !3786, line: 196, baseType: !399, size: 16, offset: 7280)
!3947 = !DIDerivedType(tag: DW_TAG_member, name: "tot_slots", scope: !3785, file: !3786, line: 197, baseType: !399, size: 16, offset: 7296)
!3948 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !3785, file: !3786, line: 198, baseType: !811, size: 48, offset: 7312)
!3949 = !DIDerivedType(tag: DW_TAG_member, name: "texpaintslot", scope: !3785, file: !3786, line: 200, baseType: !3950, size: 64, offset: 7360)
!3950 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3951, size: 64)
!3951 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "TexPaintSlot", file: !3786, line: 86, size: 192, elements: !3952)
!3952 = !{!3953, !3954, !3955, !3956}
!3953 = !DIDerivedType(tag: DW_TAG_member, name: "ima", scope: !3951, file: !3786, line: 87, baseType: !1655, size: 64)
!3954 = !DIDerivedType(tag: DW_TAG_member, name: "uvname", scope: !3951, file: !3786, line: 88, baseType: !501, size: 64, offset: 64)
!3955 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !3951, file: !3786, line: 89, baseType: !98, size: 32, offset: 128)
!3956 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3951, file: !3786, line: 90, baseType: !98, size: 32, offset: 160)
!3957 = !DIDerivedType(tag: DW_TAG_member, name: "gpumaterial", scope: !3785, file: !3786, line: 202, baseType: !388, size: 128, offset: 7424)
!3958 = !DIDerivedType(tag: DW_TAG_member, name: "cd_flag", scope: !3722, file: !6, line: 193, baseType: !375, size: 8, offset: 8576)
!3959 = !DIDerivedType(tag: DW_TAG_member, name: "calcNormals", scope: !3722, file: !6, line: 196, baseType: !3960, size: 64, offset: 8640)
!3960 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3961, size: 64)
!3961 = !DISubroutineType(types: !3962)
!3962 = !{null, !3963}
!3963 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3964, size: 64)
!3964 = !DIDerivedType(tag: DW_TAG_typedef, name: "DerivedMesh", file: !6, line: 177, baseType: !3722)
!3965 = !DIDerivedType(tag: DW_TAG_member, name: "calcLoopNormals", scope: !3722, file: !6, line: 199, baseType: !3966, size: 64, offset: 8704)
!3966 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3967, size: 64)
!3967 = !DISubroutineType(types: !3968)
!3968 = !{null, !3963, !3969}
!3969 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !396)
!3970 = !DIDerivedType(tag: DW_TAG_member, name: "recalcTessellation", scope: !3722, file: !6, line: 202, baseType: !3960, size: 64, offset: 8768)
!3971 = !DIDerivedType(tag: DW_TAG_member, name: "getNumVerts", scope: !3722, file: !6, line: 207, baseType: !3972, size: 64, offset: 8832)
!3972 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3973, size: 64)
!3973 = !DISubroutineType(types: !3974)
!3974 = !{!98, !3963}
!3975 = !DIDerivedType(tag: DW_TAG_member, name: "getNumEdges", scope: !3722, file: !6, line: 208, baseType: !3972, size: 64, offset: 8896)
!3976 = !DIDerivedType(tag: DW_TAG_member, name: "getNumTessFaces", scope: !3722, file: !6, line: 209, baseType: !3972, size: 64, offset: 8960)
!3977 = !DIDerivedType(tag: DW_TAG_member, name: "getNumLoops", scope: !3722, file: !6, line: 210, baseType: !3972, size: 64, offset: 9024)
!3978 = !DIDerivedType(tag: DW_TAG_member, name: "getNumPolys", scope: !3722, file: !6, line: 211, baseType: !3972, size: 64, offset: 9088)
!3979 = !DIDerivedType(tag: DW_TAG_member, name: "getVert", scope: !3722, file: !6, line: 218, baseType: !3980, size: 64, offset: 9152)
!3980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3981, size: 64)
!3981 = !DISubroutineType(types: !3982)
!3982 = !{null, !3963, !98, !3983}
!3983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3984, size: 64)
!3984 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MVert", file: !2468, line: 65, size: 160, elements: !3985)
!3985 = !{!3986, !3987, !3988, !3989}
!3986 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !3984, file: !2468, line: 66, baseType: !779, size: 96)
!3987 = !DIDerivedType(tag: DW_TAG_member, name: "no", scope: !3984, file: !2468, line: 67, baseType: !811, size: 48, offset: 96)
!3988 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3984, file: !2468, line: 68, baseType: !375, size: 8, offset: 144)
!3989 = !DIDerivedType(tag: DW_TAG_member, name: "bweight", scope: !3984, file: !2468, line: 68, baseType: !375, size: 8, offset: 152)
!3990 = !DIDerivedType(tag: DW_TAG_member, name: "getEdge", scope: !3722, file: !6, line: 219, baseType: !3991, size: 64, offset: 9216)
!3991 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3992, size: 64)
!3992 = !DISubroutineType(types: !3993)
!3993 = !{null, !3963, !98, !3994}
!3994 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3995, size: 64)
!3995 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MEdge", file: !2468, line: 48, size: 96, elements: !3996)
!3996 = !{!3997, !3998, !3999, !4000, !4001}
!3997 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !3995, file: !2468, line: 49, baseType: !7, size: 32)
!3998 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !3995, file: !2468, line: 49, baseType: !7, size: 32, offset: 32)
!3999 = !DIDerivedType(tag: DW_TAG_member, name: "crease", scope: !3995, file: !2468, line: 50, baseType: !375, size: 8, offset: 64)
!4000 = !DIDerivedType(tag: DW_TAG_member, name: "bweight", scope: !3995, file: !2468, line: 50, baseType: !375, size: 8, offset: 72)
!4001 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3995, file: !2468, line: 51, baseType: !399, size: 16, offset: 80)
!4002 = !DIDerivedType(tag: DW_TAG_member, name: "getTessFace", scope: !3722, file: !6, line: 220, baseType: !4003, size: 64, offset: 9280)
!4003 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4004, size: 64)
!4004 = !DISubroutineType(types: !4005)
!4005 = !{null, !3963, !98, !4006}
!4006 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4007, size: 64)
!4007 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MFace", file: !2468, line: 42, size: 160, elements: !4008)
!4008 = !{!4009, !4010, !4011, !4012, !4013, !4014, !4015}
!4009 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !4007, file: !2468, line: 43, baseType: !7, size: 32)
!4010 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !4007, file: !2468, line: 43, baseType: !7, size: 32, offset: 32)
!4011 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !4007, file: !2468, line: 43, baseType: !7, size: 32, offset: 64)
!4012 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !4007, file: !2468, line: 43, baseType: !7, size: 32, offset: 96)
!4013 = !DIDerivedType(tag: DW_TAG_member, name: "mat_nr", scope: !4007, file: !2468, line: 44, baseType: !399, size: 16, offset: 128)
!4014 = !DIDerivedType(tag: DW_TAG_member, name: "edcode", scope: !4007, file: !2468, line: 45, baseType: !375, size: 8, offset: 144)
!4015 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !4007, file: !2468, line: 45, baseType: !375, size: 8, offset: 152)
!4016 = !DIDerivedType(tag: DW_TAG_member, name: "getVertArray", scope: !3722, file: !6, line: 227, baseType: !4017, size: 64, offset: 9344)
!4017 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4018, size: 64)
!4018 = !DISubroutineType(types: !4019)
!4019 = !{!3983, !3963}
!4020 = !DIDerivedType(tag: DW_TAG_member, name: "getEdgeArray", scope: !3722, file: !6, line: 228, baseType: !4021, size: 64, offset: 9408)
!4021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4022, size: 64)
!4022 = !DISubroutineType(types: !4023)
!4023 = !{!3994, !3963}
!4024 = !DIDerivedType(tag: DW_TAG_member, name: "getTessFaceArray", scope: !3722, file: !6, line: 229, baseType: !4025, size: 64, offset: 9472)
!4025 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4026, size: 64)
!4026 = !DISubroutineType(types: !4027)
!4027 = !{!4006, !3963}
!4028 = !DIDerivedType(tag: DW_TAG_member, name: "getLoopArray", scope: !3722, file: !6, line: 230, baseType: !4029, size: 64, offset: 9536)
!4029 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4030, size: 64)
!4030 = !DISubroutineType(types: !4031)
!4031 = !{!4032, !3963}
!4032 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4033, size: 64)
!4033 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MLoop", file: !2468, line: 88, size: 64, elements: !4034)
!4034 = !{!4035, !4036}
!4035 = !DIDerivedType(tag: DW_TAG_member, name: "v", scope: !4033, file: !2468, line: 89, baseType: !7, size: 32)
!4036 = !DIDerivedType(tag: DW_TAG_member, name: "e", scope: !4033, file: !2468, line: 90, baseType: !7, size: 32, offset: 32)
!4037 = !DIDerivedType(tag: DW_TAG_member, name: "getPolyArray", scope: !3722, file: !6, line: 231, baseType: !4038, size: 64, offset: 9600)
!4038 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4039, size: 64)
!4039 = !DISubroutineType(types: !4040)
!4040 = !{!4041, !3963}
!4041 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4042, size: 64)
!4042 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MPoly", file: !2468, line: 79, size: 96, elements: !4043)
!4043 = !{!4044, !4045, !4046, !4047, !4048}
!4044 = !DIDerivedType(tag: DW_TAG_member, name: "loopstart", scope: !4042, file: !2468, line: 81, baseType: !98, size: 32)
!4045 = !DIDerivedType(tag: DW_TAG_member, name: "totloop", scope: !4042, file: !2468, line: 82, baseType: !98, size: 32, offset: 32)
!4046 = !DIDerivedType(tag: DW_TAG_member, name: "mat_nr", scope: !4042, file: !2468, line: 83, baseType: !399, size: 16, offset: 64)
!4047 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !4042, file: !2468, line: 84, baseType: !375, size: 8, offset: 80)
!4048 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !4042, file: !2468, line: 84, baseType: !375, size: 8, offset: 88)
!4049 = !DIDerivedType(tag: DW_TAG_member, name: "copyVertArray", scope: !3722, file: !6, line: 236, baseType: !4050, size: 64, offset: 9664)
!4050 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4051, size: 64)
!4051 = !DISubroutineType(types: !4052)
!4052 = !{null, !3963, !3983}
!4053 = !DIDerivedType(tag: DW_TAG_member, name: "copyEdgeArray", scope: !3722, file: !6, line: 237, baseType: !4054, size: 64, offset: 9728)
!4054 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4055, size: 64)
!4055 = !DISubroutineType(types: !4056)
!4056 = !{null, !3963, !3994}
!4057 = !DIDerivedType(tag: DW_TAG_member, name: "copyTessFaceArray", scope: !3722, file: !6, line: 238, baseType: !4058, size: 64, offset: 9792)
!4058 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4059, size: 64)
!4059 = !DISubroutineType(types: !4060)
!4060 = !{null, !3963, !4006}
!4061 = !DIDerivedType(tag: DW_TAG_member, name: "copyLoopArray", scope: !3722, file: !6, line: 239, baseType: !4062, size: 64, offset: 9856)
!4062 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4063, size: 64)
!4063 = !DISubroutineType(types: !4064)
!4064 = !{null, !3963, !4032}
!4065 = !DIDerivedType(tag: DW_TAG_member, name: "copyPolyArray", scope: !3722, file: !6, line: 240, baseType: !4066, size: 64, offset: 9920)
!4066 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4067, size: 64)
!4067 = !DISubroutineType(types: !4068)
!4068 = !{null, !3963, !4041}
!4069 = !DIDerivedType(tag: DW_TAG_member, name: "dupVertArray", scope: !3722, file: !6, line: 245, baseType: !4017, size: 64, offset: 9984)
!4070 = !DIDerivedType(tag: DW_TAG_member, name: "dupEdgeArray", scope: !3722, file: !6, line: 246, baseType: !4021, size: 64, offset: 10048)
!4071 = !DIDerivedType(tag: DW_TAG_member, name: "dupTessFaceArray", scope: !3722, file: !6, line: 247, baseType: !4025, size: 64, offset: 10112)
!4072 = !DIDerivedType(tag: DW_TAG_member, name: "dupLoopArray", scope: !3722, file: !6, line: 248, baseType: !4029, size: 64, offset: 10176)
!4073 = !DIDerivedType(tag: DW_TAG_member, name: "dupPolyArray", scope: !3722, file: !6, line: 249, baseType: !4038, size: 64, offset: 10240)
!4074 = !DIDerivedType(tag: DW_TAG_member, name: "getVertData", scope: !3722, file: !6, line: 255, baseType: !4075, size: 64, offset: 10304)
!4075 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4076, size: 64)
!4076 = !DISubroutineType(types: !4077)
!4077 = !{!372, !3963, !98, !98}
!4078 = !DIDerivedType(tag: DW_TAG_member, name: "getEdgeData", scope: !3722, file: !6, line: 256, baseType: !4075, size: 64, offset: 10368)
!4079 = !DIDerivedType(tag: DW_TAG_member, name: "getTessFaceData", scope: !3722, file: !6, line: 257, baseType: !4075, size: 64, offset: 10432)
!4080 = !DIDerivedType(tag: DW_TAG_member, name: "getPolyData", scope: !3722, file: !6, line: 258, baseType: !4075, size: 64, offset: 10496)
!4081 = !DIDerivedType(tag: DW_TAG_member, name: "getVertDataArray", scope: !3722, file: !6, line: 264, baseType: !4082, size: 64, offset: 10560)
!4082 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4083, size: 64)
!4083 = !DISubroutineType(types: !4084)
!4084 = !{!372, !3963, !98}
!4085 = !DIDerivedType(tag: DW_TAG_member, name: "getEdgeDataArray", scope: !3722, file: !6, line: 265, baseType: !4082, size: 64, offset: 10624)
!4086 = !DIDerivedType(tag: DW_TAG_member, name: "getTessFaceDataArray", scope: !3722, file: !6, line: 266, baseType: !4082, size: 64, offset: 10688)
!4087 = !DIDerivedType(tag: DW_TAG_member, name: "getLoopDataArray", scope: !3722, file: !6, line: 267, baseType: !4082, size: 64, offset: 10752)
!4088 = !DIDerivedType(tag: DW_TAG_member, name: "getPolyDataArray", scope: !3722, file: !6, line: 268, baseType: !4082, size: 64, offset: 10816)
!4089 = !DIDerivedType(tag: DW_TAG_member, name: "getVertDataLayout", scope: !3722, file: !6, line: 272, baseType: !4090, size: 64, offset: 10880)
!4090 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4091, size: 64)
!4091 = !DISubroutineType(types: !4092)
!4092 = !{!4093, !3963}
!4093 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3725, size: 64)
!4094 = !DIDerivedType(tag: DW_TAG_member, name: "getEdgeDataLayout", scope: !3722, file: !6, line: 273, baseType: !4090, size: 64, offset: 10944)
!4095 = !DIDerivedType(tag: DW_TAG_member, name: "getTessFaceDataLayout", scope: !3722, file: !6, line: 274, baseType: !4090, size: 64, offset: 11008)
!4096 = !DIDerivedType(tag: DW_TAG_member, name: "getLoopDataLayout", scope: !3722, file: !6, line: 275, baseType: !4090, size: 64, offset: 11072)
!4097 = !DIDerivedType(tag: DW_TAG_member, name: "getPolyDataLayout", scope: !3722, file: !6, line: 276, baseType: !4090, size: 64, offset: 11136)
!4098 = !DIDerivedType(tag: DW_TAG_member, name: "copyFromVertCData", scope: !3722, file: !6, line: 279, baseType: !4099, size: 64, offset: 11200)
!4099 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4100, size: 64)
!4100 = !DISubroutineType(types: !4101)
!4101 = !{null, !3963, !98, !4093, !98}
!4102 = !DIDerivedType(tag: DW_TAG_member, name: "copyFromEdgeCData", scope: !3722, file: !6, line: 280, baseType: !4099, size: 64, offset: 11264)
!4103 = !DIDerivedType(tag: DW_TAG_member, name: "copyFromFaceCData", scope: !3722, file: !6, line: 281, baseType: !4099, size: 64, offset: 11328)
!4104 = !DIDerivedType(tag: DW_TAG_member, name: "getNumGrids", scope: !3722, file: !6, line: 284, baseType: !3972, size: 64, offset: 11392)
!4105 = !DIDerivedType(tag: DW_TAG_member, name: "getGridSize", scope: !3722, file: !6, line: 285, baseType: !3972, size: 64, offset: 11456)
!4106 = !DIDerivedType(tag: DW_TAG_member, name: "getGridData", scope: !3722, file: !6, line: 286, baseType: !4107, size: 64, offset: 11520)
!4107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4108, size: 64)
!4108 = !DISubroutineType(types: !4109)
!4109 = !{!4110, !3963}
!4110 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4111, size: 64)
!4111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4112, size: 64)
!4112 = !DICompositeType(tag: DW_TAG_structure_type, name: "CCGElem", file: !6, line: 82, flags: DIFlagFwdDecl)
!4113 = !DIDerivedType(tag: DW_TAG_member, name: "getGridAdjacency", scope: !3722, file: !6, line: 287, baseType: !4114, size: 64, offset: 11584)
!4114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4115, size: 64)
!4115 = !DISubroutineType(types: !4116)
!4116 = !{!4117, !3963}
!4117 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4118, size: 64)
!4118 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMGridAdjacency", file: !6, line: 120, baseType: !4119)
!4119 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DMGridAdjacency", file: !6, line: 117, size: 256, elements: !4120)
!4120 = !{!4121, !4122}
!4121 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !4119, file: !6, line: 118, baseType: !3608, size: 128)
!4122 = !DIDerivedType(tag: DW_TAG_member, name: "rotation", scope: !4119, file: !6, line: 119, baseType: !3608, size: 128, offset: 128)
!4123 = !DIDerivedType(tag: DW_TAG_member, name: "getGridOffset", scope: !3722, file: !6, line: 288, baseType: !4124, size: 64, offset: 11648)
!4124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4125, size: 64)
!4125 = !DISubroutineType(types: !4126)
!4126 = !{!4127, !3963}
!4127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !98, size: 64)
!4128 = !DIDerivedType(tag: DW_TAG_member, name: "getGridKey", scope: !3722, file: !6, line: 289, baseType: !4129, size: 64, offset: 11712)
!4129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4130, size: 64)
!4130 = !DISubroutineType(types: !4131)
!4131 = !{null, !3963, !4132}
!4132 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4133, size: 64)
!4133 = !DICompositeType(tag: DW_TAG_structure_type, name: "CCGKey", file: !6, line: 83, flags: DIFlagFwdDecl)
!4134 = !DIDerivedType(tag: DW_TAG_member, name: "getGridFlagMats", scope: !3722, file: !6, line: 290, baseType: !4135, size: 64, offset: 11776)
!4135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4136, size: 64)
!4136 = !DISubroutineType(types: !4137)
!4137 = !{!4138, !3963}
!4138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4139, size: 64)
!4139 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMFlagMat", file: !6, line: 126, baseType: !4140)
!4140 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DMFlagMat", file: !6, line: 123, size: 32, elements: !4141)
!4141 = !{!4142, !4143}
!4142 = !DIDerivedType(tag: DW_TAG_member, name: "mat_nr", scope: !4140, file: !6, line: 124, baseType: !399, size: 16)
!4143 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !4140, file: !6, line: 125, baseType: !375, size: 8, offset: 16)
!4144 = !DIDerivedType(tag: DW_TAG_member, name: "getGridHidden", scope: !3722, file: !6, line: 291, baseType: !4145, size: 64, offset: 11840)
!4145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4146, size: 64)
!4146 = !DISubroutineType(types: !4147)
!4147 = !{!4148, !3963}
!4148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1689, size: 64)
!4149 = !DIDerivedType(tag: DW_TAG_member, name: "foreachMappedVert", scope: !3722, file: !6, line: 299, baseType: !4150, size: 64, offset: 11904)
!4150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4151, size: 64)
!4151 = !DISubroutineType(types: !4152)
!4152 = !{null, !3963, !4153, !372, !4159}
!4153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4154, size: 64)
!4154 = !DISubroutineType(types: !4155)
!4155 = !{null, !372, !98, !4156, !4156, !4157}
!4156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3969, size: 64)
!4157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4158, size: 64)
!4158 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !399)
!4159 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMForeachFlag", file: !6, line: 162, baseType: !17)
!4160 = !DIDerivedType(tag: DW_TAG_member, name: "foreachMappedEdge", scope: !3722, file: !6, line: 309, baseType: !4161, size: 64, offset: 11968)
!4161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4162, size: 64)
!4162 = !DISubroutineType(types: !4163)
!4163 = !{null, !3963, !4164, !372}
!4164 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4165, size: 64)
!4165 = !DISubroutineType(types: !4166)
!4166 = !{null, !372, !98, !4156, !4156}
!4167 = !DIDerivedType(tag: DW_TAG_member, name: "foreachMappedLoop", scope: !3722, file: !6, line: 317, baseType: !4168, size: 64, offset: 12032)
!4168 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4169, size: 64)
!4169 = !DISubroutineType(types: !4170)
!4170 = !{null, !3963, !4171, !372, !4159}
!4171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4172, size: 64)
!4172 = !DISubroutineType(types: !4173)
!4173 = !{null, !372, !98, !98, !4156, !4156}
!4174 = !DIDerivedType(tag: DW_TAG_member, name: "foreachMappedFaceCenter", scope: !3722, file: !6, line: 327, baseType: !4175, size: 64, offset: 12096)
!4175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4176, size: 64)
!4176 = !DISubroutineType(types: !4177)
!4177 = !{null, !3963, !4164, !372, !4159}
!4178 = !DIDerivedType(tag: DW_TAG_member, name: "getMinMax", scope: !3722, file: !6, line: 337, baseType: !4179, size: 64, offset: 12160)
!4179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4180, size: 64)
!4180 = !DISubroutineType(types: !4181)
!4181 = !{null, !3963, !975, !975}
!4182 = !DIDerivedType(tag: DW_TAG_member, name: "getVertCo", scope: !3722, file: !6, line: 344, baseType: !4183, size: 64, offset: 12224)
!4183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4184, size: 64)
!4184 = !DISubroutineType(types: !4185)
!4185 = !{null, !3963, !98, !975}
!4186 = !DIDerivedType(tag: DW_TAG_member, name: "getVertCos", scope: !3722, file: !6, line: 347, baseType: !4187, size: 64, offset: 12288)
!4187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4188, size: 64)
!4188 = !DISubroutineType(types: !4189)
!4189 = !{null, !3963, !4190}
!4190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !779, size: 64)
!4191 = !DIDerivedType(tag: DW_TAG_member, name: "getVertNo", scope: !3722, file: !6, line: 350, baseType: !4183, size: 64, offset: 12352)
!4192 = !DIDerivedType(tag: DW_TAG_member, name: "getPolyNo", scope: !3722, file: !6, line: 351, baseType: !4183, size: 64, offset: 12416)
!4193 = !DIDerivedType(tag: DW_TAG_member, name: "getPolyMap", scope: !3722, file: !6, line: 355, baseType: !4194, size: 64, offset: 12480)
!4194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4195, size: 64)
!4195 = !DISubroutineType(types: !4196)
!4196 = !{!4197, !423, !3963}
!4197 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4198, size: 64)
!4198 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4199)
!4199 = !DICompositeType(tag: DW_TAG_structure_type, name: "MeshElemMap", file: !6, line: 355, flags: DIFlagFwdDecl)
!4200 = !DIDerivedType(tag: DW_TAG_member, name: "getPBVH", scope: !3722, file: !6, line: 359, baseType: !4201, size: 64, offset: 12544)
!4201 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4202, size: 64)
!4202 = !DISubroutineType(types: !4203)
!4203 = !{!4204, !423, !3963}
!4204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4205, size: 64)
!4205 = !DICompositeType(tag: DW_TAG_structure_type, name: "PBVH", file: !6, line: 100, flags: DIFlagFwdDecl)
!4206 = !DIDerivedType(tag: DW_TAG_member, name: "drawVerts", scope: !3722, file: !6, line: 364, baseType: !3960, size: 64, offset: 12608)
!4207 = !DIDerivedType(tag: DW_TAG_member, name: "drawUVEdges", scope: !3722, file: !6, line: 367, baseType: !3960, size: 64, offset: 12672)
!4208 = !DIDerivedType(tag: DW_TAG_member, name: "drawEdges", scope: !3722, file: !6, line: 373, baseType: !4209, size: 64, offset: 12736)
!4209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4210, size: 64)
!4210 = !DISubroutineType(types: !4211)
!4211 = !{null, !3963, !474, !474}
!4212 = !DIDerivedType(tag: DW_TAG_member, name: "drawLooseEdges", scope: !3722, file: !6, line: 376, baseType: !3960, size: 64, offset: 12800)
!4213 = !DIDerivedType(tag: DW_TAG_member, name: "drawFacesSolid", scope: !3722, file: !6, line: 385, baseType: !4214, size: 64, offset: 12864)
!4214 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4215, size: 64)
!4215 = !DISubroutineType(types: !4216)
!4216 = !{null, !3963, !4217, !474, !4218}
!4217 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !408, size: 64)
!4218 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMSetMaterial", file: !6, line: 146, baseType: !4219)
!4219 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4220, size: 64)
!4220 = !DISubroutineType(types: !4221)
!4221 = !{!98, !98, !372}
!4222 = !DIDerivedType(tag: DW_TAG_member, name: "drawFacesTex", scope: !3722, file: !6, line: 391, baseType: !4223, size: 64, offset: 12928)
!4223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4224, size: 64)
!4224 = !DISubroutineType(types: !4225)
!4225 = !{null, !3963, !4226, !4242, !372, !4246}
!4226 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMSetDrawOptionsTex", file: !6, line: 150, baseType: !4227)
!4227 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4228, size: 64)
!4228 = !DISubroutineType(types: !4229)
!4229 = !{!4230, !4231, !4241, !98}
!4230 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMDrawOption", file: !6, line: 143, baseType: !21)
!4231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4232, size: 64)
!4232 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MTFace", file: !2468, line: 160, size: 384, elements: !4233)
!4233 = !{!4234, !4235, !4236, !4237, !4238, !4239, !4240}
!4234 = !DIDerivedType(tag: DW_TAG_member, name: "uv", scope: !4232, file: !2468, line: 161, baseType: !2177, size: 256)
!4235 = !DIDerivedType(tag: DW_TAG_member, name: "tpage", scope: !4232, file: !2468, line: 162, baseType: !1655, size: 64, offset: 256)
!4236 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !4232, file: !2468, line: 163, baseType: !375, size: 8, offset: 320)
!4237 = !DIDerivedType(tag: DW_TAG_member, name: "transp", scope: !4232, file: !2468, line: 163, baseType: !375, size: 8, offset: 328)
!4238 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !4232, file: !2468, line: 164, baseType: !399, size: 16, offset: 336)
!4239 = !DIDerivedType(tag: DW_TAG_member, name: "tile", scope: !4232, file: !2468, line: 164, baseType: !399, size: 16, offset: 352)
!4240 = !DIDerivedType(tag: DW_TAG_member, name: "unwrap", scope: !4232, file: !2468, line: 164, baseType: !399, size: 16, offset: 368)
!4241 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !474)
!4242 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMCompareDrawOptions", file: !6, line: 147, baseType: !4243)
!4243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4244, size: 64)
!4244 = !DISubroutineType(types: !4245)
!4245 = !{!98, !372, !98, !98}
!4246 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMDrawFlag", file: !6, line: 157, baseType: !27)
!4247 = !DIDerivedType(tag: DW_TAG_member, name: "drawFacesGLSL", scope: !3722, file: !6, line: 400, baseType: !4248, size: 64, offset: 12992)
!4248 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4249, size: 64)
!4249 = !DISubroutineType(types: !4250)
!4250 = !{null, !3963, !4218}
!4251 = !DIDerivedType(tag: DW_TAG_member, name: "drawMappedFaces", scope: !3722, file: !6, line: 415, baseType: !4252, size: 64, offset: 13056)
!4252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4253, size: 64)
!4253 = !DISubroutineType(types: !4254)
!4254 = !{null, !3963, !4255, !4218, !4242, !372, !4246}
!4255 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMSetDrawOptions", file: !6, line: 149, baseType: !4256)
!4256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4257, size: 64)
!4257 = !DISubroutineType(types: !4258)
!4258 = !{!4230, !372, !98}
!4259 = !DIDerivedType(tag: DW_TAG_member, name: "drawMappedFacesTex", scope: !3722, file: !6, line: 425, baseType: !4260, size: 64, offset: 13120)
!4260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4261, size: 64)
!4261 = !DISubroutineType(types: !4262)
!4262 = !{null, !3963, !4255, !4242, !372, !4246}
!4263 = !DIDerivedType(tag: DW_TAG_member, name: "drawMappedFacesGLSL", scope: !3722, file: !6, line: 435, baseType: !4264, size: 64, offset: 13184)
!4264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4265, size: 64)
!4265 = !DISubroutineType(types: !4266)
!4266 = !{null, !3963, !4218, !4255, !372}
!4267 = !DIDerivedType(tag: DW_TAG_member, name: "drawMappedEdges", scope: !3722, file: !6, line: 444, baseType: !4268, size: 64, offset: 13248)
!4268 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4269, size: 64)
!4269 = !DISubroutineType(types: !4270)
!4270 = !{null, !3963, !4255, !372}
!4271 = !DIDerivedType(tag: DW_TAG_member, name: "drawMappedEdgesInterp", scope: !3722, file: !6, line: 455, baseType: !4272, size: 64, offset: 13312)
!4272 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4273, size: 64)
!4273 = !DISubroutineType(types: !4274)
!4274 = !{null, !3963, !4255, !4275, !372}
!4275 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMSetDrawInterpOptions", file: !6, line: 148, baseType: !4276)
!4276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4277, size: 64)
!4277 = !DISubroutineType(types: !4278)
!4278 = !{null, !372, !98, !396}
!4279 = !DIDerivedType(tag: DW_TAG_member, name: "drawMappedFacesMat", scope: !3722, file: !6, line: 464, baseType: !4280, size: 64, offset: 13376)
!4280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4281, size: 64)
!4281 = !DISubroutineType(types: !4282)
!4282 = !{null, !3963, !4283, !4286, !372}
!4283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4284, size: 64)
!4284 = !DISubroutineType(types: !4285)
!4285 = !{null, !372, !98, !372}
!4286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4287, size: 64)
!4287 = !DISubroutineType(types: !4288)
!4288 = !{!474, !372, !98}
!4289 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3722, file: !6, line: 470, baseType: !3960, size: 64, offset: 13440)
!4290 = !DIDerivedType(tag: DW_TAG_member, name: "hair_out_dm", scope: !3363, file: !3141, line: 272, baseType: !3721, size: 64, offset: 960)
!4291 = !DIDerivedType(tag: DW_TAG_member, name: "target_ob", scope: !3363, file: !3141, line: 274, baseType: !423, size: 64, offset: 1024)
!4292 = !DIDerivedType(tag: DW_TAG_member, name: "lattice_deform_data", scope: !3363, file: !3141, line: 276, baseType: !4293, size: 64, offset: 1088)
!4293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4294, size: 64)
!4294 = !DICompositeType(tag: DW_TAG_structure_type, name: "LatticeDeformData", file: !3141, line: 276, flags: DIFlagFwdDecl)
!4295 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !3363, file: !3141, line: 278, baseType: !423, size: 64, offset: 1152)
!4296 = !DIDerivedType(tag: DW_TAG_member, name: "targets", scope: !3363, file: !3141, line: 280, baseType: !390, size: 128, offset: 1216)
!4297 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3363, file: !3141, line: 282, baseType: !692, size: 512, offset: 1344)
!4298 = !DIDerivedType(tag: DW_TAG_member, name: "imat", scope: !3363, file: !3141, line: 284, baseType: !1752, size: 512, offset: 1856)
!4299 = !DIDerivedType(tag: DW_TAG_member, name: "cfra", scope: !3363, file: !3141, line: 285, baseType: !396, size: 32, offset: 2368)
!4300 = !DIDerivedType(tag: DW_TAG_member, name: "tree_frame", scope: !3363, file: !3141, line: 285, baseType: !396, size: 32, offset: 2400)
!4301 = !DIDerivedType(tag: DW_TAG_member, name: "bvhtree_frame", scope: !3363, file: !3141, line: 285, baseType: !396, size: 32, offset: 2432)
!4302 = !DIDerivedType(tag: DW_TAG_member, name: "seed", scope: !3363, file: !3141, line: 286, baseType: !98, size: 32, offset: 2464)
!4303 = !DIDerivedType(tag: DW_TAG_member, name: "child_seed", scope: !3363, file: !3141, line: 286, baseType: !98, size: 32, offset: 2496)
!4304 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3363, file: !3141, line: 287, baseType: !98, size: 32, offset: 2528)
!4305 = !DIDerivedType(tag: DW_TAG_member, name: "totpart", scope: !3363, file: !3141, line: 287, baseType: !98, size: 32, offset: 2560)
!4306 = !DIDerivedType(tag: DW_TAG_member, name: "totunexist", scope: !3363, file: !3141, line: 287, baseType: !98, size: 32, offset: 2592)
!4307 = !DIDerivedType(tag: DW_TAG_member, name: "totchild", scope: !3363, file: !3141, line: 287, baseType: !98, size: 32, offset: 2624)
!4308 = !DIDerivedType(tag: DW_TAG_member, name: "totcached", scope: !3363, file: !3141, line: 287, baseType: !98, size: 32, offset: 2656)
!4309 = !DIDerivedType(tag: DW_TAG_member, name: "totchildcache", scope: !3363, file: !3141, line: 287, baseType: !98, size: 32, offset: 2688)
!4310 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !3363, file: !3141, line: 288, baseType: !399, size: 16, offset: 2720)
!4311 = !DIDerivedType(tag: DW_TAG_member, name: "target_psys", scope: !3363, file: !3141, line: 288, baseType: !399, size: 16, offset: 2736)
!4312 = !DIDerivedType(tag: DW_TAG_member, name: "totkeyed", scope: !3363, file: !3141, line: 288, baseType: !399, size: 16, offset: 2752)
!4313 = !DIDerivedType(tag: DW_TAG_member, name: "bakespace", scope: !3363, file: !3141, line: 288, baseType: !399, size: 16, offset: 2768)
!4314 = !DIDerivedType(tag: DW_TAG_member, name: "bb_uvname", scope: !3363, file: !3141, line: 290, baseType: !4315, size: 1536, offset: 2784)
!4315 = !DICompositeType(tag: DW_TAG_array_type, baseType: !375, size: 1536, elements: !4316)
!4316 = !{!417, !694}
!4317 = !DIDerivedType(tag: DW_TAG_member, name: "vgroup", scope: !3363, file: !3141, line: 293, baseType: !4318, size: 192, offset: 4320)
!4318 = !DICompositeType(tag: DW_TAG_array_type, baseType: !399, size: 192, elements: !4319)
!4319 = !{!4320}
!4320 = !DISubrange(count: 12)
!4321 = !DIDerivedType(tag: DW_TAG_member, name: "vg_neg", scope: !3363, file: !3141, line: 293, baseType: !399, size: 16, offset: 4512)
!4322 = !DIDerivedType(tag: DW_TAG_member, name: "rt3", scope: !3363, file: !3141, line: 293, baseType: !399, size: 16, offset: 4528)
!4323 = !DIDerivedType(tag: DW_TAG_member, name: "renderdata", scope: !3363, file: !3141, line: 296, baseType: !372, size: 64, offset: 4544)
!4324 = !DIDerivedType(tag: DW_TAG_member, name: "pointcache", scope: !3363, file: !3141, line: 299, baseType: !3084, size: 64, offset: 4608)
!4325 = !DIDerivedType(tag: DW_TAG_member, name: "ptcaches", scope: !3363, file: !3141, line: 300, baseType: !390, size: 128, offset: 4672)
!4326 = !DIDerivedType(tag: DW_TAG_member, name: "effectors", scope: !3363, file: !3141, line: 302, baseType: !3360, size: 64, offset: 4800)
!4327 = !DIDerivedType(tag: DW_TAG_member, name: "fluid_springs", scope: !3363, file: !3141, line: 304, baseType: !4328, size: 64, offset: 4864)
!4328 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4329, size: 64)
!4329 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParticleSpring", file: !3141, line: 68, baseType: !4330)
!4330 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleSpring", file: !3141, line: 65, size: 128, elements: !4331)
!4331 = !{!4332, !4333, !4334}
!4332 = !DIDerivedType(tag: DW_TAG_member, name: "rest_length", scope: !4330, file: !3141, line: 66, baseType: !396, size: 32)
!4333 = !DIDerivedType(tag: DW_TAG_member, name: "particle_index", scope: !4330, file: !3141, line: 67, baseType: !1703, size: 64, offset: 32)
!4334 = !DIDerivedType(tag: DW_TAG_member, name: "delete_flag", scope: !4330, file: !3141, line: 67, baseType: !7, size: 32, offset: 96)
!4335 = !DIDerivedType(tag: DW_TAG_member, name: "tot_fluidsprings", scope: !3363, file: !3141, line: 305, baseType: !98, size: 32, offset: 4928)
!4336 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_fluidsprings", scope: !3363, file: !3141, line: 305, baseType: !98, size: 32, offset: 4960)
!4337 = !DIDerivedType(tag: DW_TAG_member, name: "tree", scope: !3363, file: !3141, line: 307, baseType: !3197, size: 64, offset: 4992)
!4338 = !DIDerivedType(tag: DW_TAG_member, name: "bvhtree", scope: !3363, file: !3141, line: 308, baseType: !4339, size: 64, offset: 5056)
!4339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4340, size: 64)
!4340 = !DICompositeType(tag: DW_TAG_structure_type, name: "BVHTree", file: !3141, line: 308, flags: DIFlagFwdDecl)
!4341 = !DIDerivedType(tag: DW_TAG_member, name: "pdd", scope: !3363, file: !3141, line: 310, baseType: !4342, size: 64, offset: 5120)
!4342 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4343, size: 64)
!4343 = !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleDrawData", file: !3141, line: 310, flags: DIFlagFwdDecl)
!4344 = !DIDerivedType(tag: DW_TAG_member, name: "dt_frac", scope: !3363, file: !3141, line: 312, baseType: !396, size: 32, offset: 5184)
!4345 = !DIDerivedType(tag: DW_TAG_member, name: "_pad", scope: !3363, file: !3141, line: 313, baseType: !396, size: 32, offset: 5216)
!4346 = !DIDerivedType(tag: DW_TAG_member, name: "particles", scope: !3110, file: !3111, line: 244, baseType: !3139, size: 64, offset: 1920)
!4347 = !DIDerivedType(tag: DW_TAG_member, name: "emitter_field", scope: !3110, file: !3111, line: 245, baseType: !3197, size: 64, offset: 1984)
!4348 = !DIDerivedType(tag: DW_TAG_member, name: "emitter_cosnos", scope: !3110, file: !3111, line: 246, baseType: !975, size: 64, offset: 2048)
!4349 = !DIDerivedType(tag: DW_TAG_member, name: "mirror_cache", scope: !3110, file: !3111, line: 247, baseType: !4127, size: 64, offset: 2112)
!4350 = !DIDerivedType(tag: DW_TAG_member, name: "pathcache", scope: !3110, file: !3111, line: 249, baseType: !3619, size: 64, offset: 2176)
!4351 = !DIDerivedType(tag: DW_TAG_member, name: "pathcachebufs", scope: !3110, file: !3111, line: 250, baseType: !388, size: 128, offset: 2240)
!4352 = !DIDerivedType(tag: DW_TAG_member, name: "totpoint", scope: !3110, file: !3111, line: 252, baseType: !98, size: 32, offset: 2368)
!4353 = !DIDerivedType(tag: DW_TAG_member, name: "totframes", scope: !3110, file: !3111, line: 252, baseType: !98, size: 32, offset: 2400)
!4354 = !DIDerivedType(tag: DW_TAG_member, name: "totcached", scope: !3110, file: !3111, line: 252, baseType: !98, size: 32, offset: 2432)
!4355 = !DIDerivedType(tag: DW_TAG_member, name: "edited", scope: !3110, file: !3111, line: 252, baseType: !98, size: 32, offset: 2464)
!4356 = !DIDerivedType(tag: DW_TAG_member, name: "sel_col", scope: !3110, file: !3111, line: 254, baseType: !4357, size: 24, offset: 2496)
!4357 = !DICompositeType(tag: DW_TAG_array_type, baseType: !474, size: 24, elements: !416)
!4358 = !DIDerivedType(tag: DW_TAG_member, name: "nosel_col", scope: !3110, file: !3111, line: 255, baseType: !4357, size: 24, offset: 2520)
!4359 = !DIDerivedType(tag: DW_TAG_member, name: "free_edit", scope: !3085, file: !3058, line: 208, baseType: !3615, size: 64, offset: 10496)
!4360 = !DIDerivedType(tag: DW_TAG_member, name: "ptcaches", scope: !3052, file: !3053, line: 63, baseType: !390, size: 128, offset: 384)
!4361 = !DIDerivedType(tag: DW_TAG_member, name: "numbodies", scope: !3052, file: !3053, line: 64, baseType: !98, size: 32, offset: 512)
!4362 = !DIDerivedType(tag: DW_TAG_member, name: "steps_per_second", scope: !3052, file: !3053, line: 66, baseType: !399, size: 16, offset: 544)
!4363 = !DIDerivedType(tag: DW_TAG_member, name: "num_solver_iterations", scope: !3052, file: !3053, line: 67, baseType: !399, size: 16, offset: 560)
!4364 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3052, file: !3053, line: 69, baseType: !98, size: 32, offset: 576)
!4365 = !DIDerivedType(tag: DW_TAG_member, name: "time_scale", scope: !3052, file: !3053, line: 70, baseType: !396, size: 32, offset: 608)
!4366 = !DIDerivedType(tag: DW_TAG_member, name: "physics_world", scope: !3052, file: !3053, line: 73, baseType: !372, size: 64, offset: 640)
!4367 = !DIDerivedType(tag: DW_TAG_member, name: "newscene", scope: !819, file: !86, line: 58, baseType: !827, size: 64, offset: 1536)
!4368 = !DIDerivedType(tag: DW_TAG_member, name: "redraws_flag", scope: !819, file: !86, line: 60, baseType: !98, size: 32, offset: 1600)
!4369 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !819, file: !86, line: 61, baseType: !98, size: 32, offset: 1632)
!4370 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !819, file: !86, line: 63, baseType: !399, size: 16, offset: 1664)
!4371 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !819, file: !86, line: 64, baseType: !399, size: 16, offset: 1680)
!4372 = !DIDerivedType(tag: DW_TAG_member, name: "winid", scope: !819, file: !86, line: 65, baseType: !399, size: 16, offset: 1696)
!4373 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw", scope: !819, file: !86, line: 66, baseType: !399, size: 16, offset: 1712)
!4374 = !DIDerivedType(tag: DW_TAG_member, name: "do_refresh", scope: !819, file: !86, line: 67, baseType: !399, size: 16, offset: 1728)
!4375 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw_gesture", scope: !819, file: !86, line: 68, baseType: !399, size: 16, offset: 1744)
!4376 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw_paintcursor", scope: !819, file: !86, line: 69, baseType: !399, size: 16, offset: 1760)
!4377 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw_drag", scope: !819, file: !86, line: 70, baseType: !399, size: 16, offset: 1776)
!4378 = !DIDerivedType(tag: DW_TAG_member, name: "swap", scope: !819, file: !86, line: 71, baseType: !399, size: 16, offset: 1792)
!4379 = !DIDerivedType(tag: DW_TAG_member, name: "mainwin", scope: !819, file: !86, line: 73, baseType: !399, size: 16, offset: 1808)
!4380 = !DIDerivedType(tag: DW_TAG_member, name: "subwinactive", scope: !819, file: !86, line: 74, baseType: !399, size: 16, offset: 1824)
!4381 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !819, file: !86, line: 76, baseType: !399, size: 16, offset: 1840)
!4382 = !DIDerivedType(tag: DW_TAG_member, name: "animtimer", scope: !819, file: !86, line: 78, baseType: !1358, size: 64, offset: 1856)
!4383 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !819, file: !86, line: 79, baseType: !372, size: 64, offset: 1920)
!4384 = !DIDerivedType(tag: DW_TAG_member, name: "curscene", scope: !570, file: !34, line: 71, baseType: !827, size: 64, offset: 8512)
!4385 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !570, file: !34, line: 73, baseType: !4386, size: 32, offset: 8576)
!4386 = !DIDerivedType(tag: DW_TAG_typedef, name: "BlenFileType", file: !34, line: 58, baseType: !33)
!4387 = !DIDerivedType(tag: DW_TAG_member, name: "reports", scope: !444, file: !445, line: 102, baseType: !4388, size: 64, offset: 10688)
!4388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4389, size: 64)
!4389 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ReportList", file: !44, line: 106, size: 320, elements: !4390)
!4390 = !{!4391, !4392, !4393, !4394, !4395, !4396}
!4391 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4389, file: !44, line: 107, baseType: !388, size: 128)
!4392 = !DIDerivedType(tag: DW_TAG_member, name: "printlevel", scope: !4389, file: !44, line: 108, baseType: !98, size: 32, offset: 128)
!4393 = !DIDerivedType(tag: DW_TAG_member, name: "storelevel", scope: !4389, file: !44, line: 109, baseType: !98, size: 32, offset: 160)
!4394 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !4389, file: !44, line: 110, baseType: !98, size: 32, offset: 192)
!4395 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !4389, file: !44, line: 110, baseType: !98, size: 32, offset: 224)
!4396 = !DIDerivedType(tag: DW_TAG_member, name: "reporttimer", scope: !4389, file: !44, line: 111, baseType: !1358, size: 64, offset: 256)
!4397 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !437, file: !428, line: 140, baseType: !478, size: 8192, offset: 1088)
!4398 = !DIDerivedType(tag: DW_TAG_member, name: "filepath", scope: !437, file: !428, line: 141, baseType: !478, size: 8192, offset: 9280)
!4399 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !437, file: !428, line: 148, baseType: !436, size: 64, offset: 17472)
!4400 = !DIDerivedType(tag: DW_TAG_member, name: "packedfile", scope: !437, file: !428, line: 150, baseType: !1691, size: 64, offset: 17536)
!4401 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !429, file: !428, line: 121, baseType: !4402, size: 528, offset: 256)
!4402 = !DICompositeType(tag: DW_TAG_array_type, baseType: !375, size: 528, elements: !4403)
!4403 = !{!4404}
!4404 = !DISubrange(count: 66)
!4405 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !429, file: !428, line: 126, baseType: !399, size: 16, offset: 784)
!4406 = !DIDerivedType(tag: DW_TAG_member, name: "us", scope: !429, file: !428, line: 127, baseType: !98, size: 32, offset: 800)
!4407 = !DIDerivedType(tag: DW_TAG_member, name: "icon_id", scope: !429, file: !428, line: 128, baseType: !98, size: 32, offset: 832)
!4408 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !429, file: !428, line: 128, baseType: !98, size: 32, offset: 864)
!4409 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !429, file: !428, line: 129, baseType: !1094, size: 64, offset: 896)
!4410 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !424, file: !186, line: 117, baseType: !833, size: 64, offset: 960)
!4411 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt", scope: !424, file: !186, line: 119, baseType: !4412, size: 64, offset: 1024)
!4412 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4413, size: 64)
!4413 = !DICompositeType(tag: DW_TAG_structure_type, name: "SculptSession", file: !186, line: 57, flags: DIFlagFwdDecl)
!4414 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !424, file: !186, line: 121, baseType: !399, size: 16, offset: 1088)
!4415 = !DIDerivedType(tag: DW_TAG_member, name: "partype", scope: !424, file: !186, line: 121, baseType: !399, size: 16, offset: 1104)
!4416 = !DIDerivedType(tag: DW_TAG_member, name: "par1", scope: !424, file: !186, line: 122, baseType: !98, size: 32, offset: 1120)
!4417 = !DIDerivedType(tag: DW_TAG_member, name: "par2", scope: !424, file: !186, line: 122, baseType: !98, size: 32, offset: 1152)
!4418 = !DIDerivedType(tag: DW_TAG_member, name: "par3", scope: !424, file: !186, line: 122, baseType: !98, size: 32, offset: 1184)
!4419 = !DIDerivedType(tag: DW_TAG_member, name: "parsubstr", scope: !424, file: !186, line: 123, baseType: !692, size: 512, offset: 1216)
!4420 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !424, file: !186, line: 124, baseType: !423, size: 64, offset: 1728)
!4421 = !DIDerivedType(tag: DW_TAG_member, name: "track", scope: !424, file: !186, line: 124, baseType: !423, size: 64, offset: 1792)
!4422 = !DIDerivedType(tag: DW_TAG_member, name: "proxy", scope: !424, file: !186, line: 127, baseType: !423, size: 64, offset: 1856)
!4423 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_group", scope: !424, file: !186, line: 127, baseType: !423, size: 64, offset: 1920)
!4424 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_from", scope: !424, file: !186, line: 127, baseType: !423, size: 64, offset: 1984)
!4425 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !424, file: !186, line: 128, baseType: !978, size: 64, offset: 2048)
!4426 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !424, file: !186, line: 130, baseType: !4427, size: 64, offset: 2112)
!4427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4428, size: 64)
!4428 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BoundBox", file: !186, line: 97, size: 832, elements: !4429)
!4429 = !{!4430, !4433, !4434}
!4430 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !4428, file: !186, line: 98, baseType: !4431, size: 768)
!4431 = !DICompositeType(tag: DW_TAG_array_type, baseType: !396, size: 768, elements: !4432)
!4432 = !{!401, !417}
!4433 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !4428, file: !186, line: 99, baseType: !98, size: 32, offset: 768)
!4434 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !4428, file: !186, line: 99, baseType: !98, size: 32, offset: 800)
!4435 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !424, file: !186, line: 131, baseType: !4436, size: 64, offset: 2176)
!4436 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !840, size: 64)
!4437 = !DIDerivedType(tag: DW_TAG_member, name: "poselib", scope: !424, file: !186, line: 132, baseType: !4436, size: 64, offset: 2240)
!4438 = !DIDerivedType(tag: DW_TAG_member, name: "pose", scope: !424, file: !186, line: 133, baseType: !4439, size: 64, offset: 2304)
!4439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4440, size: 64)
!4440 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bPose", file: !544, line: 334, size: 1728, elements: !4441)
!4441 = !{!4442, !4443, !4444, !4445, !4446, !4447, !4448, !4449, !4450, !4451, !4452, !4453, !4454, !4455, !4456, !4476}
!4442 = !DIDerivedType(tag: DW_TAG_member, name: "chanbase", scope: !4440, file: !544, line: 335, baseType: !388, size: 128)
!4443 = !DIDerivedType(tag: DW_TAG_member, name: "chanhash", scope: !4440, file: !544, line: 336, baseType: !542, size: 64, offset: 128)
!4444 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !4440, file: !544, line: 338, baseType: !399, size: 16, offset: 192)
!4445 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !4440, file: !544, line: 338, baseType: !399, size: 16, offset: 208)
!4446 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_layer", scope: !4440, file: !544, line: 339, baseType: !7, size: 32, offset: 224)
!4447 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !4440, file: !544, line: 340, baseType: !98, size: 32, offset: 256)
!4448 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !4440, file: !544, line: 342, baseType: !396, size: 32, offset: 288)
!4449 = !DIDerivedType(tag: DW_TAG_member, name: "stride_offset", scope: !4440, file: !544, line: 343, baseType: !779, size: 96, offset: 320)
!4450 = !DIDerivedType(tag: DW_TAG_member, name: "cyclic_offset", scope: !4440, file: !544, line: 344, baseType: !779, size: 96, offset: 416)
!4451 = !DIDerivedType(tag: DW_TAG_member, name: "agroups", scope: !4440, file: !544, line: 347, baseType: !388, size: 128, offset: 512)
!4452 = !DIDerivedType(tag: DW_TAG_member, name: "active_group", scope: !4440, file: !544, line: 349, baseType: !98, size: 32, offset: 640)
!4453 = !DIDerivedType(tag: DW_TAG_member, name: "iksolver", scope: !4440, file: !544, line: 350, baseType: !98, size: 32, offset: 672)
!4454 = !DIDerivedType(tag: DW_TAG_member, name: "ikdata", scope: !4440, file: !544, line: 351, baseType: !372, size: 64, offset: 704)
!4455 = !DIDerivedType(tag: DW_TAG_member, name: "ikparam", scope: !4440, file: !544, line: 352, baseType: !372, size: 64, offset: 768)
!4456 = !DIDerivedType(tag: DW_TAG_member, name: "avs", scope: !4440, file: !544, line: 354, baseType: !4457, size: 384, offset: 832)
!4457 = !DIDerivedType(tag: DW_TAG_typedef, name: "bAnimVizSettings", file: !544, line: 116, baseType: !4458)
!4458 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bAnimVizSettings", file: !544, line: 94, size: 384, elements: !4459)
!4459 = !{!4460, !4461, !4462, !4463, !4464, !4465, !4466, !4467, !4468, !4469, !4470, !4471, !4472, !4473, !4474, !4475}
!4460 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_sf", scope: !4458, file: !544, line: 96, baseType: !98, size: 32)
!4461 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_ef", scope: !4458, file: !544, line: 96, baseType: !98, size: 32, offset: 32)
!4462 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_bc", scope: !4458, file: !544, line: 97, baseType: !98, size: 32, offset: 64)
!4463 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_ac", scope: !4458, file: !544, line: 97, baseType: !98, size: 32, offset: 96)
!4464 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_type", scope: !4458, file: !544, line: 99, baseType: !399, size: 16, offset: 128)
!4465 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_step", scope: !4458, file: !544, line: 100, baseType: !399, size: 16, offset: 144)
!4466 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_flag", scope: !4458, file: !544, line: 102, baseType: !399, size: 16, offset: 160)
!4467 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !4458, file: !544, line: 105, baseType: !399, size: 16, offset: 176)
!4468 = !DIDerivedType(tag: DW_TAG_member, name: "path_type", scope: !4458, file: !544, line: 108, baseType: !399, size: 16, offset: 192)
!4469 = !DIDerivedType(tag: DW_TAG_member, name: "path_step", scope: !4458, file: !544, line: 109, baseType: !399, size: 16, offset: 208)
!4470 = !DIDerivedType(tag: DW_TAG_member, name: "path_viewflag", scope: !4458, file: !544, line: 111, baseType: !399, size: 16, offset: 224)
!4471 = !DIDerivedType(tag: DW_TAG_member, name: "path_bakeflag", scope: !4458, file: !544, line: 112, baseType: !399, size: 16, offset: 240)
!4472 = !DIDerivedType(tag: DW_TAG_member, name: "path_sf", scope: !4458, file: !544, line: 114, baseType: !98, size: 32, offset: 256)
!4473 = !DIDerivedType(tag: DW_TAG_member, name: "path_ef", scope: !4458, file: !544, line: 114, baseType: !98, size: 32, offset: 288)
!4474 = !DIDerivedType(tag: DW_TAG_member, name: "path_bc", scope: !4458, file: !544, line: 115, baseType: !98, size: 32, offset: 320)
!4475 = !DIDerivedType(tag: DW_TAG_member, name: "path_ac", scope: !4458, file: !544, line: 115, baseType: !98, size: 32, offset: 352)
!4476 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_act_bone", scope: !4440, file: !544, line: 355, baseType: !692, size: 512, offset: 1216)
!4477 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !424, file: !186, line: 134, baseType: !372, size: 64, offset: 2368)
!4478 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !424, file: !186, line: 136, baseType: !1424, size: 64, offset: 2432)
!4479 = !DIDerivedType(tag: DW_TAG_member, name: "avs", scope: !424, file: !186, line: 138, baseType: !4457, size: 384, offset: 2496)
!4480 = !DIDerivedType(tag: DW_TAG_member, name: "mpath", scope: !424, file: !186, line: 139, baseType: !4481, size: 64, offset: 2880)
!4481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4482, size: 64)
!4482 = !DIDerivedType(tag: DW_TAG_typedef, name: "bMotionPath", file: !544, line: 80, baseType: !4483)
!4483 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bMotionPath", file: !544, line: 72, size: 192, elements: !4484)
!4484 = !{!4485, !4492, !4493, !4494, !4495}
!4485 = !DIDerivedType(tag: DW_TAG_member, name: "points", scope: !4483, file: !544, line: 73, baseType: !4486, size: 64)
!4486 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4487, size: 64)
!4487 = !DIDerivedType(tag: DW_TAG_typedef, name: "bMotionPathVert", file: !544, line: 59, baseType: !4488)
!4488 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bMotionPathVert", file: !544, line: 56, size: 128, elements: !4489)
!4489 = !{!4490, !4491}
!4490 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !4488, file: !544, line: 57, baseType: !779, size: 96)
!4491 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !4488, file: !544, line: 58, baseType: !98, size: 32, offset: 96)
!4492 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !4483, file: !544, line: 74, baseType: !98, size: 32, offset: 64)
!4493 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !4483, file: !544, line: 76, baseType: !98, size: 32, offset: 96)
!4494 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame", scope: !4483, file: !544, line: 77, baseType: !98, size: 32, offset: 128)
!4495 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !4483, file: !544, line: 79, baseType: !98, size: 32, offset: 160)
!4496 = !DIDerivedType(tag: DW_TAG_member, name: "constraintChannels", scope: !424, file: !186, line: 141, baseType: !388, size: 128, offset: 2944)
!4497 = !DIDerivedType(tag: DW_TAG_member, name: "effect", scope: !424, file: !186, line: 142, baseType: !388, size: 128, offset: 3072)
!4498 = !DIDerivedType(tag: DW_TAG_member, name: "defbase", scope: !424, file: !186, line: 143, baseType: !388, size: 128, offset: 3200)
!4499 = !DIDerivedType(tag: DW_TAG_member, name: "modifiers", scope: !424, file: !186, line: 144, baseType: !388, size: 128, offset: 3328)
!4500 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !424, file: !186, line: 146, baseType: !98, size: 32, offset: 3456)
!4501 = !DIDerivedType(tag: DW_TAG_member, name: "restore_mode", scope: !424, file: !186, line: 147, baseType: !98, size: 32, offset: 3488)
!4502 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !424, file: !186, line: 150, baseType: !3783, size: 64, offset: 3520)
!4503 = !DIDerivedType(tag: DW_TAG_member, name: "matbits", scope: !424, file: !186, line: 151, baseType: !501, size: 64, offset: 3584)
!4504 = !DIDerivedType(tag: DW_TAG_member, name: "totcol", scope: !424, file: !186, line: 152, baseType: !98, size: 32, offset: 3648)
!4505 = !DIDerivedType(tag: DW_TAG_member, name: "actcol", scope: !424, file: !186, line: 153, baseType: !98, size: 32, offset: 3680)
!4506 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !424, file: !186, line: 156, baseType: !779, size: 96, offset: 3712)
!4507 = !DIDerivedType(tag: DW_TAG_member, name: "dloc", scope: !424, file: !186, line: 156, baseType: !779, size: 96, offset: 3808)
!4508 = !DIDerivedType(tag: DW_TAG_member, name: "orig", scope: !424, file: !186, line: 156, baseType: !779, size: 96, offset: 3904)
!4509 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !424, file: !186, line: 157, baseType: !779, size: 96, offset: 4000)
!4510 = !DIDerivedType(tag: DW_TAG_member, name: "dsize", scope: !424, file: !186, line: 158, baseType: !779, size: 96, offset: 4096)
!4511 = !DIDerivedType(tag: DW_TAG_member, name: "dscale", scope: !424, file: !186, line: 159, baseType: !779, size: 96, offset: 4192)
!4512 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !424, file: !186, line: 160, baseType: !779, size: 96, offset: 4288)
!4513 = !DIDerivedType(tag: DW_TAG_member, name: "drot", scope: !424, file: !186, line: 160, baseType: !779, size: 96, offset: 4384)
!4514 = !DIDerivedType(tag: DW_TAG_member, name: "quat", scope: !424, file: !186, line: 161, baseType: !408, size: 128, offset: 4480)
!4515 = !DIDerivedType(tag: DW_TAG_member, name: "dquat", scope: !424, file: !186, line: 161, baseType: !408, size: 128, offset: 4608)
!4516 = !DIDerivedType(tag: DW_TAG_member, name: "rotAxis", scope: !424, file: !186, line: 162, baseType: !779, size: 96, offset: 4736)
!4517 = !DIDerivedType(tag: DW_TAG_member, name: "drotAxis", scope: !424, file: !186, line: 162, baseType: !779, size: 96, offset: 4832)
!4518 = !DIDerivedType(tag: DW_TAG_member, name: "rotAngle", scope: !424, file: !186, line: 163, baseType: !396, size: 32, offset: 4928)
!4519 = !DIDerivedType(tag: DW_TAG_member, name: "drotAngle", scope: !424, file: !186, line: 163, baseType: !396, size: 32, offset: 4960)
!4520 = !DIDerivedType(tag: DW_TAG_member, name: "obmat", scope: !424, file: !186, line: 164, baseType: !1752, size: 512, offset: 4992)
!4521 = !DIDerivedType(tag: DW_TAG_member, name: "parentinv", scope: !424, file: !186, line: 165, baseType: !1752, size: 512, offset: 5504)
!4522 = !DIDerivedType(tag: DW_TAG_member, name: "constinv", scope: !424, file: !186, line: 166, baseType: !1752, size: 512, offset: 6016)
!4523 = !DIDerivedType(tag: DW_TAG_member, name: "imat", scope: !424, file: !186, line: 167, baseType: !1752, size: 512, offset: 6528)
!4524 = !DIDerivedType(tag: DW_TAG_member, name: "imat_ren", scope: !424, file: !186, line: 176, baseType: !1752, size: 512, offset: 7040)
!4525 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !424, file: !186, line: 178, baseType: !7, size: 32, offset: 7552)
!4526 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !424, file: !186, line: 180, baseType: !399, size: 16, offset: 7584)
!4527 = !DIDerivedType(tag: DW_TAG_member, name: "colbits", scope: !424, file: !186, line: 181, baseType: !399, size: 16, offset: 7600)
!4528 = !DIDerivedType(tag: DW_TAG_member, name: "transflag", scope: !424, file: !186, line: 183, baseType: !399, size: 16, offset: 7616)
!4529 = !DIDerivedType(tag: DW_TAG_member, name: "protectflag", scope: !424, file: !186, line: 183, baseType: !399, size: 16, offset: 7632)
!4530 = !DIDerivedType(tag: DW_TAG_member, name: "trackflag", scope: !424, file: !186, line: 184, baseType: !399, size: 16, offset: 7648)
!4531 = !DIDerivedType(tag: DW_TAG_member, name: "upflag", scope: !424, file: !186, line: 184, baseType: !399, size: 16, offset: 7664)
!4532 = !DIDerivedType(tag: DW_TAG_member, name: "nlaflag", scope: !424, file: !186, line: 185, baseType: !399, size: 16, offset: 7680)
!4533 = !DIDerivedType(tag: DW_TAG_member, name: "ipoflag", scope: !424, file: !186, line: 186, baseType: !399, size: 16, offset: 7696)
!4534 = !DIDerivedType(tag: DW_TAG_member, name: "scaflag", scope: !424, file: !186, line: 187, baseType: !399, size: 16, offset: 7712)
!4535 = !DIDerivedType(tag: DW_TAG_member, name: "scavisflag", scope: !424, file: !186, line: 188, baseType: !375, size: 8, offset: 7728)
!4536 = !DIDerivedType(tag: DW_TAG_member, name: "depsflag", scope: !424, file: !186, line: 189, baseType: !375, size: 8, offset: 7736)
!4537 = !DIDerivedType(tag: DW_TAG_member, name: "dupon", scope: !424, file: !186, line: 192, baseType: !98, size: 32, offset: 7744)
!4538 = !DIDerivedType(tag: DW_TAG_member, name: "dupoff", scope: !424, file: !186, line: 192, baseType: !98, size: 32, offset: 7776)
!4539 = !DIDerivedType(tag: DW_TAG_member, name: "dupsta", scope: !424, file: !186, line: 192, baseType: !98, size: 32, offset: 7808)
!4540 = !DIDerivedType(tag: DW_TAG_member, name: "dupend", scope: !424, file: !186, line: 192, baseType: !98, size: 32, offset: 7840)
!4541 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !424, file: !186, line: 194, baseType: !98, size: 32, offset: 7872)
!4542 = !DIDerivedType(tag: DW_TAG_member, name: "mass", scope: !424, file: !186, line: 202, baseType: !396, size: 32, offset: 7904)
!4543 = !DIDerivedType(tag: DW_TAG_member, name: "damping", scope: !424, file: !186, line: 202, baseType: !396, size: 32, offset: 7936)
!4544 = !DIDerivedType(tag: DW_TAG_member, name: "inertia", scope: !424, file: !186, line: 202, baseType: !396, size: 32, offset: 7968)
!4545 = !DIDerivedType(tag: DW_TAG_member, name: "formfactor", scope: !424, file: !186, line: 211, baseType: !396, size: 32, offset: 8000)
!4546 = !DIDerivedType(tag: DW_TAG_member, name: "rdamping", scope: !424, file: !186, line: 212, baseType: !396, size: 32, offset: 8032)
!4547 = !DIDerivedType(tag: DW_TAG_member, name: "margin", scope: !424, file: !186, line: 213, baseType: !396, size: 32, offset: 8064)
!4548 = !DIDerivedType(tag: DW_TAG_member, name: "max_vel", scope: !424, file: !186, line: 214, baseType: !396, size: 32, offset: 8096)
!4549 = !DIDerivedType(tag: DW_TAG_member, name: "min_vel", scope: !424, file: !186, line: 215, baseType: !396, size: 32, offset: 8128)
!4550 = !DIDerivedType(tag: DW_TAG_member, name: "obstacleRad", scope: !424, file: !186, line: 216, baseType: !396, size: 32, offset: 8160)
!4551 = !DIDerivedType(tag: DW_TAG_member, name: "step_height", scope: !424, file: !186, line: 219, baseType: !396, size: 32, offset: 8192)
!4552 = !DIDerivedType(tag: DW_TAG_member, name: "jump_speed", scope: !424, file: !186, line: 220, baseType: !396, size: 32, offset: 8224)
!4553 = !DIDerivedType(tag: DW_TAG_member, name: "fall_speed", scope: !424, file: !186, line: 221, baseType: !396, size: 32, offset: 8256)
!4554 = !DIDerivedType(tag: DW_TAG_member, name: "col_group", scope: !424, file: !186, line: 224, baseType: !3273, size: 16, offset: 8288)
!4555 = !DIDerivedType(tag: DW_TAG_member, name: "col_mask", scope: !424, file: !186, line: 224, baseType: !3273, size: 16, offset: 8304)
!4556 = !DIDerivedType(tag: DW_TAG_member, name: "rotmode", scope: !424, file: !186, line: 226, baseType: !399, size: 16, offset: 8320)
!4557 = !DIDerivedType(tag: DW_TAG_member, name: "boundtype", scope: !424, file: !186, line: 228, baseType: !375, size: 8, offset: 8336)
!4558 = !DIDerivedType(tag: DW_TAG_member, name: "collision_boundtype", scope: !424, file: !186, line: 229, baseType: !375, size: 8, offset: 8344)
!4559 = !DIDerivedType(tag: DW_TAG_member, name: "dtx", scope: !424, file: !186, line: 231, baseType: !399, size: 16, offset: 8352)
!4560 = !DIDerivedType(tag: DW_TAG_member, name: "dt", scope: !424, file: !186, line: 232, baseType: !375, size: 8, offset: 8368)
!4561 = !DIDerivedType(tag: DW_TAG_member, name: "empty_drawtype", scope: !424, file: !186, line: 233, baseType: !375, size: 8, offset: 8376)
!4562 = !DIDerivedType(tag: DW_TAG_member, name: "empty_drawsize", scope: !424, file: !186, line: 234, baseType: !396, size: 32, offset: 8384)
!4563 = !DIDerivedType(tag: DW_TAG_member, name: "dupfacesca", scope: !424, file: !186, line: 235, baseType: !396, size: 32, offset: 8416)
!4564 = !DIDerivedType(tag: DW_TAG_member, name: "prop", scope: !424, file: !186, line: 237, baseType: !388, size: 128, offset: 8448)
!4565 = !DIDerivedType(tag: DW_TAG_member, name: "sensors", scope: !424, file: !186, line: 238, baseType: !388, size: 128, offset: 8576)
!4566 = !DIDerivedType(tag: DW_TAG_member, name: "controllers", scope: !424, file: !186, line: 239, baseType: !388, size: 128, offset: 8704)
!4567 = !DIDerivedType(tag: DW_TAG_member, name: "actuators", scope: !424, file: !186, line: 240, baseType: !388, size: 128, offset: 8832)
!4568 = !DIDerivedType(tag: DW_TAG_member, name: "sf", scope: !424, file: !186, line: 242, baseType: !396, size: 32, offset: 8960)
!4569 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !424, file: !186, line: 244, baseType: !399, size: 16, offset: 8992)
!4570 = !DIDerivedType(tag: DW_TAG_member, name: "actdef", scope: !424, file: !186, line: 245, baseType: !3273, size: 16, offset: 9008)
!4571 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !424, file: !186, line: 246, baseType: !408, size: 128, offset: 9024)
!4572 = !DIDerivedType(tag: DW_TAG_member, name: "gameflag", scope: !424, file: !186, line: 248, baseType: !98, size: 32, offset: 9152)
!4573 = !DIDerivedType(tag: DW_TAG_member, name: "gameflag2", scope: !424, file: !186, line: 249, baseType: !98, size: 32, offset: 9184)
!4574 = !DIDerivedType(tag: DW_TAG_member, name: "bsoft", scope: !424, file: !186, line: 251, baseType: !4575, size: 64, offset: 9216)
!4575 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4576, size: 64)
!4576 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BulletSoftBody", file: !3058, line: 215, size: 960, elements: !4577)
!4577 = !{!4578, !4579, !4580, !4581, !4582, !4583, !4584, !4585, !4586, !4587, !4588, !4589, !4590, !4591, !4592, !4593, !4594, !4595, !4596, !4597, !4598, !4599, !4600, !4601, !4602, !4603, !4604, !4605, !4606, !4607}
!4578 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !4576, file: !3058, line: 216, baseType: !98, size: 32)
!4579 = !DIDerivedType(tag: DW_TAG_member, name: "linStiff", scope: !4576, file: !3058, line: 217, baseType: !396, size: 32, offset: 32)
!4580 = !DIDerivedType(tag: DW_TAG_member, name: "angStiff", scope: !4576, file: !3058, line: 218, baseType: !396, size: 32, offset: 64)
!4581 = !DIDerivedType(tag: DW_TAG_member, name: "volume", scope: !4576, file: !3058, line: 219, baseType: !396, size: 32, offset: 96)
!4582 = !DIDerivedType(tag: DW_TAG_member, name: "viterations", scope: !4576, file: !3058, line: 221, baseType: !98, size: 32, offset: 128)
!4583 = !DIDerivedType(tag: DW_TAG_member, name: "piterations", scope: !4576, file: !3058, line: 222, baseType: !98, size: 32, offset: 160)
!4584 = !DIDerivedType(tag: DW_TAG_member, name: "diterations", scope: !4576, file: !3058, line: 223, baseType: !98, size: 32, offset: 192)
!4585 = !DIDerivedType(tag: DW_TAG_member, name: "citerations", scope: !4576, file: !3058, line: 224, baseType: !98, size: 32, offset: 224)
!4586 = !DIDerivedType(tag: DW_TAG_member, name: "kSRHR_CL", scope: !4576, file: !3058, line: 226, baseType: !396, size: 32, offset: 256)
!4587 = !DIDerivedType(tag: DW_TAG_member, name: "kSKHR_CL", scope: !4576, file: !3058, line: 227, baseType: !396, size: 32, offset: 288)
!4588 = !DIDerivedType(tag: DW_TAG_member, name: "kSSHR_CL", scope: !4576, file: !3058, line: 228, baseType: !396, size: 32, offset: 320)
!4589 = !DIDerivedType(tag: DW_TAG_member, name: "kSR_SPLT_CL", scope: !4576, file: !3058, line: 229, baseType: !396, size: 32, offset: 352)
!4590 = !DIDerivedType(tag: DW_TAG_member, name: "kSK_SPLT_CL", scope: !4576, file: !3058, line: 231, baseType: !396, size: 32, offset: 384)
!4591 = !DIDerivedType(tag: DW_TAG_member, name: "kSS_SPLT_CL", scope: !4576, file: !3058, line: 232, baseType: !396, size: 32, offset: 416)
!4592 = !DIDerivedType(tag: DW_TAG_member, name: "kVCF", scope: !4576, file: !3058, line: 233, baseType: !396, size: 32, offset: 448)
!4593 = !DIDerivedType(tag: DW_TAG_member, name: "kDP", scope: !4576, file: !3058, line: 234, baseType: !396, size: 32, offset: 480)
!4594 = !DIDerivedType(tag: DW_TAG_member, name: "kDG", scope: !4576, file: !3058, line: 236, baseType: !396, size: 32, offset: 512)
!4595 = !DIDerivedType(tag: DW_TAG_member, name: "kLF", scope: !4576, file: !3058, line: 237, baseType: !396, size: 32, offset: 544)
!4596 = !DIDerivedType(tag: DW_TAG_member, name: "kPR", scope: !4576, file: !3058, line: 238, baseType: !396, size: 32, offset: 576)
!4597 = !DIDerivedType(tag: DW_TAG_member, name: "kVC", scope: !4576, file: !3058, line: 239, baseType: !396, size: 32, offset: 608)
!4598 = !DIDerivedType(tag: DW_TAG_member, name: "kDF", scope: !4576, file: !3058, line: 241, baseType: !396, size: 32, offset: 640)
!4599 = !DIDerivedType(tag: DW_TAG_member, name: "kMT", scope: !4576, file: !3058, line: 242, baseType: !396, size: 32, offset: 672)
!4600 = !DIDerivedType(tag: DW_TAG_member, name: "kCHR", scope: !4576, file: !3058, line: 243, baseType: !396, size: 32, offset: 704)
!4601 = !DIDerivedType(tag: DW_TAG_member, name: "kKHR", scope: !4576, file: !3058, line: 244, baseType: !396, size: 32, offset: 736)
!4602 = !DIDerivedType(tag: DW_TAG_member, name: "kSHR", scope: !4576, file: !3058, line: 246, baseType: !396, size: 32, offset: 768)
!4603 = !DIDerivedType(tag: DW_TAG_member, name: "kAHR", scope: !4576, file: !3058, line: 247, baseType: !396, size: 32, offset: 800)
!4604 = !DIDerivedType(tag: DW_TAG_member, name: "collisionflags", scope: !4576, file: !3058, line: 248, baseType: !98, size: 32, offset: 832)
!4605 = !DIDerivedType(tag: DW_TAG_member, name: "numclusteriterations", scope: !4576, file: !3058, line: 249, baseType: !98, size: 32, offset: 864)
!4606 = !DIDerivedType(tag: DW_TAG_member, name: "welding", scope: !4576, file: !3058, line: 250, baseType: !396, size: 32, offset: 896)
!4607 = !DIDerivedType(tag: DW_TAG_member, name: "margin", scope: !4576, file: !3058, line: 251, baseType: !396, size: 32, offset: 928)
!4608 = !DIDerivedType(tag: DW_TAG_member, name: "restrictflag", scope: !424, file: !186, line: 253, baseType: !375, size: 8, offset: 9280)
!4609 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !424, file: !186, line: 254, baseType: !375, size: 8, offset: 9288)
!4610 = !DIDerivedType(tag: DW_TAG_member, name: "softflag", scope: !424, file: !186, line: 255, baseType: !399, size: 16, offset: 9296)
!4611 = !DIDerivedType(tag: DW_TAG_member, name: "anisotropicFriction", scope: !424, file: !186, line: 256, baseType: !779, size: 96, offset: 9312)
!4612 = !DIDerivedType(tag: DW_TAG_member, name: "constraints", scope: !424, file: !186, line: 258, baseType: !388, size: 128, offset: 9408)
!4613 = !DIDerivedType(tag: DW_TAG_member, name: "nlastrips", scope: !424, file: !186, line: 259, baseType: !388, size: 128, offset: 9536)
!4614 = !DIDerivedType(tag: DW_TAG_member, name: "hooks", scope: !424, file: !186, line: 260, baseType: !388, size: 128, offset: 9664)
!4615 = !DIDerivedType(tag: DW_TAG_member, name: "particlesystem", scope: !424, file: !186, line: 261, baseType: !388, size: 128, offset: 9792)
!4616 = !DIDerivedType(tag: DW_TAG_member, name: "pd", scope: !424, file: !186, line: 263, baseType: !3548, size: 64, offset: 9920)
!4617 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !424, file: !186, line: 264, baseType: !4618, size: 64, offset: 9984)
!4618 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4619, size: 64)
!4619 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SoftBody", file: !3058, line: 268, size: 3776, elements: !4620)
!4620 = !{!4621, !4622, !4623, !4626, !4629, !4630, !4631, !4632, !4633, !4634, !4635, !4636, !4637, !4638, !4639, !4640, !4641, !4642, !4643, !4644, !4645, !4646, !4647, !4648, !4649, !4650, !4651, !4652, !4653, !4654, !4661, !4662, !4663, !4664, !4665, !4666, !4667, !4668, !4669, !4670, !4671, !4672, !4673, !4674, !4675, !4678, !4679, !4680, !4681, !4682, !4683, !4684, !4685, !4686}
!4621 = !DIDerivedType(tag: DW_TAG_member, name: "totpoint", scope: !4619, file: !3058, line: 270, baseType: !98, size: 32)
!4622 = !DIDerivedType(tag: DW_TAG_member, name: "totspring", scope: !4619, file: !3058, line: 270, baseType: !98, size: 32, offset: 32)
!4623 = !DIDerivedType(tag: DW_TAG_member, name: "bpoint", scope: !4619, file: !3058, line: 271, baseType: !4624, size: 64, offset: 64)
!4624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4625, size: 64)
!4625 = !DICompositeType(tag: DW_TAG_structure_type, name: "BodyPoint", file: !3058, line: 271, flags: DIFlagFwdDecl)
!4626 = !DIDerivedType(tag: DW_TAG_member, name: "bspring", scope: !4619, file: !3058, line: 272, baseType: !4627, size: 64, offset: 128)
!4627 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4628, size: 64)
!4628 = !DICompositeType(tag: DW_TAG_structure_type, name: "BodySpring", file: !3058, line: 272, flags: DIFlagFwdDecl)
!4629 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !4619, file: !3058, line: 273, baseType: !375, size: 8, offset: 192)
!4630 = !DIDerivedType(tag: DW_TAG_member, name: "msg_lock", scope: !4619, file: !3058, line: 274, baseType: !375, size: 8, offset: 200)
!4631 = !DIDerivedType(tag: DW_TAG_member, name: "msg_value", scope: !4619, file: !3058, line: 275, baseType: !399, size: 16, offset: 208)
!4632 = !DIDerivedType(tag: DW_TAG_member, name: "nodemass", scope: !4619, file: !3058, line: 280, baseType: !396, size: 32, offset: 224)
!4633 = !DIDerivedType(tag: DW_TAG_member, name: "namedVG_Mass", scope: !4619, file: !3058, line: 281, baseType: !692, size: 512, offset: 256)
!4634 = !DIDerivedType(tag: DW_TAG_member, name: "grav", scope: !4619, file: !3058, line: 285, baseType: !396, size: 32, offset: 768)
!4635 = !DIDerivedType(tag: DW_TAG_member, name: "mediafrict", scope: !4619, file: !3058, line: 286, baseType: !396, size: 32, offset: 800)
!4636 = !DIDerivedType(tag: DW_TAG_member, name: "rklimit", scope: !4619, file: !3058, line: 287, baseType: !396, size: 32, offset: 832)
!4637 = !DIDerivedType(tag: DW_TAG_member, name: "physics_speed", scope: !4619, file: !3058, line: 288, baseType: !396, size: 32, offset: 864)
!4638 = !DIDerivedType(tag: DW_TAG_member, name: "goalspring", scope: !4619, file: !3058, line: 291, baseType: !396, size: 32, offset: 896)
!4639 = !DIDerivedType(tag: DW_TAG_member, name: "goalfrict", scope: !4619, file: !3058, line: 292, baseType: !396, size: 32, offset: 928)
!4640 = !DIDerivedType(tag: DW_TAG_member, name: "mingoal", scope: !4619, file: !3058, line: 293, baseType: !396, size: 32, offset: 960)
!4641 = !DIDerivedType(tag: DW_TAG_member, name: "maxgoal", scope: !4619, file: !3058, line: 294, baseType: !396, size: 32, offset: 992)
!4642 = !DIDerivedType(tag: DW_TAG_member, name: "defgoal", scope: !4619, file: !3058, line: 295, baseType: !396, size: 32, offset: 1024)
!4643 = !DIDerivedType(tag: DW_TAG_member, name: "vertgroup", scope: !4619, file: !3058, line: 296, baseType: !399, size: 16, offset: 1056)
!4644 = !DIDerivedType(tag: DW_TAG_member, name: "namedVG_Softgoal", scope: !4619, file: !3058, line: 297, baseType: !692, size: 512, offset: 1072)
!4645 = !DIDerivedType(tag: DW_TAG_member, name: "fuzzyness", scope: !4619, file: !3058, line: 301, baseType: !399, size: 16, offset: 1584)
!4646 = !DIDerivedType(tag: DW_TAG_member, name: "inspring", scope: !4619, file: !3058, line: 304, baseType: !396, size: 32, offset: 1600)
!4647 = !DIDerivedType(tag: DW_TAG_member, name: "infrict", scope: !4619, file: !3058, line: 305, baseType: !396, size: 32, offset: 1632)
!4648 = !DIDerivedType(tag: DW_TAG_member, name: "namedVG_Spring_K", scope: !4619, file: !3058, line: 306, baseType: !692, size: 512, offset: 1664)
!4649 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !4619, file: !3058, line: 312, baseType: !98, size: 32, offset: 2176)
!4650 = !DIDerivedType(tag: DW_TAG_member, name: "efra", scope: !4619, file: !3058, line: 312, baseType: !98, size: 32, offset: 2208)
!4651 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !4619, file: !3058, line: 313, baseType: !98, size: 32, offset: 2240)
!4652 = !DIDerivedType(tag: DW_TAG_member, name: "local", scope: !4619, file: !3058, line: 314, baseType: !399, size: 16, offset: 2272)
!4653 = !DIDerivedType(tag: DW_TAG_member, name: "solverflags", scope: !4619, file: !3058, line: 314, baseType: !399, size: 16, offset: 2288)
!4654 = !DIDerivedType(tag: DW_TAG_member, name: "keys", scope: !4619, file: !3058, line: 317, baseType: !4655, size: 64, offset: 2304)
!4655 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4656, size: 64)
!4656 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4657, size: 64)
!4657 = !DIDerivedType(tag: DW_TAG_typedef, name: "SBVertex", file: !3058, line: 213, baseType: !4658)
!4658 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SBVertex", file: !3058, line: 211, size: 128, elements: !4659)
!4659 = !{!4660}
!4660 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !4658, file: !3058, line: 212, baseType: !408, size: 128)
!4661 = !DIDerivedType(tag: DW_TAG_member, name: "totpointkey", scope: !4619, file: !3058, line: 318, baseType: !98, size: 32, offset: 2368)
!4662 = !DIDerivedType(tag: DW_TAG_member, name: "totkey", scope: !4619, file: !3058, line: 318, baseType: !98, size: 32, offset: 2400)
!4663 = !DIDerivedType(tag: DW_TAG_member, name: "secondspring", scope: !4619, file: !3058, line: 320, baseType: !396, size: 32, offset: 2432)
!4664 = !DIDerivedType(tag: DW_TAG_member, name: "colball", scope: !4619, file: !3058, line: 323, baseType: !396, size: 32, offset: 2464)
!4665 = !DIDerivedType(tag: DW_TAG_member, name: "balldamp", scope: !4619, file: !3058, line: 324, baseType: !396, size: 32, offset: 2496)
!4666 = !DIDerivedType(tag: DW_TAG_member, name: "ballstiff", scope: !4619, file: !3058, line: 325, baseType: !396, size: 32, offset: 2528)
!4667 = !DIDerivedType(tag: DW_TAG_member, name: "sbc_mode", scope: !4619, file: !3058, line: 326, baseType: !399, size: 16, offset: 2560)
!4668 = !DIDerivedType(tag: DW_TAG_member, name: "aeroedge", scope: !4619, file: !3058, line: 327, baseType: !399, size: 16, offset: 2576)
!4669 = !DIDerivedType(tag: DW_TAG_member, name: "minloops", scope: !4619, file: !3058, line: 328, baseType: !399, size: 16, offset: 2592)
!4670 = !DIDerivedType(tag: DW_TAG_member, name: "maxloops", scope: !4619, file: !3058, line: 329, baseType: !399, size: 16, offset: 2608)
!4671 = !DIDerivedType(tag: DW_TAG_member, name: "choke", scope: !4619, file: !3058, line: 330, baseType: !399, size: 16, offset: 2624)
!4672 = !DIDerivedType(tag: DW_TAG_member, name: "solver_ID", scope: !4619, file: !3058, line: 331, baseType: !399, size: 16, offset: 2640)
!4673 = !DIDerivedType(tag: DW_TAG_member, name: "plastic", scope: !4619, file: !3058, line: 332, baseType: !399, size: 16, offset: 2656)
!4674 = !DIDerivedType(tag: DW_TAG_member, name: "springpreload", scope: !4619, file: !3058, line: 332, baseType: !399, size: 16, offset: 2672)
!4675 = !DIDerivedType(tag: DW_TAG_member, name: "scratch", scope: !4619, file: !3058, line: 335, baseType: !4676, size: 64, offset: 2688)
!4676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4677, size: 64)
!4677 = !DICompositeType(tag: DW_TAG_structure_type, name: "SBScratch", file: !3058, line: 335, flags: DIFlagFwdDecl)
!4678 = !DIDerivedType(tag: DW_TAG_member, name: "shearstiff", scope: !4619, file: !3058, line: 336, baseType: !396, size: 32, offset: 2752)
!4679 = !DIDerivedType(tag: DW_TAG_member, name: "inpush", scope: !4619, file: !3058, line: 337, baseType: !396, size: 32, offset: 2784)
!4680 = !DIDerivedType(tag: DW_TAG_member, name: "pointcache", scope: !4619, file: !3058, line: 339, baseType: !3084, size: 64, offset: 2816)
!4681 = !DIDerivedType(tag: DW_TAG_member, name: "ptcaches", scope: !4619, file: !3058, line: 340, baseType: !390, size: 128, offset: 2880)
!4682 = !DIDerivedType(tag: DW_TAG_member, name: "effector_weights", scope: !4619, file: !3058, line: 342, baseType: !3056, size: 64, offset: 3008)
!4683 = !DIDerivedType(tag: DW_TAG_member, name: "lcom", scope: !4619, file: !3058, line: 344, baseType: !779, size: 96, offset: 3072)
!4684 = !DIDerivedType(tag: DW_TAG_member, name: "lrot", scope: !4619, file: !3058, line: 345, baseType: !1755, size: 288, offset: 3168)
!4685 = !DIDerivedType(tag: DW_TAG_member, name: "lscale", scope: !4619, file: !3058, line: 346, baseType: !1755, size: 288, offset: 3456)
!4686 = !DIDerivedType(tag: DW_TAG_member, name: "last_frame", scope: !4619, file: !3058, line: 348, baseType: !98, size: 32, offset: 3744)
!4687 = !DIDerivedType(tag: DW_TAG_member, name: "dup_group", scope: !424, file: !186, line: 265, baseType: !3061, size: 64, offset: 10048)
!4688 = !DIDerivedType(tag: DW_TAG_member, name: "body_type", scope: !424, file: !186, line: 267, baseType: !375, size: 8, offset: 10112)
!4689 = !DIDerivedType(tag: DW_TAG_member, name: "shapeflag", scope: !424, file: !186, line: 268, baseType: !375, size: 8, offset: 10120)
!4690 = !DIDerivedType(tag: DW_TAG_member, name: "shapenr", scope: !424, file: !186, line: 269, baseType: !399, size: 16, offset: 10128)
!4691 = !DIDerivedType(tag: DW_TAG_member, name: "smoothresh", scope: !424, file: !186, line: 270, baseType: !396, size: 32, offset: 10144)
!4692 = !DIDerivedType(tag: DW_TAG_member, name: "fluidsimSettings", scope: !424, file: !186, line: 272, baseType: !4693, size: 64, offset: 10176)
!4693 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4694, size: 64)
!4694 = !DICompositeType(tag: DW_TAG_structure_type, name: "FluidsimSettings", file: !186, line: 54, flags: DIFlagFwdDecl)
!4695 = !DIDerivedType(tag: DW_TAG_member, name: "curve_cache", scope: !424, file: !186, line: 275, baseType: !4696, size: 64, offset: 10240)
!4696 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4697, size: 64)
!4697 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveCache", file: !4698, line: 49, size: 448, elements: !4699)
!4698 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_curve.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!4699 = !{!4700, !4701, !4702, !4703}
!4700 = !DIDerivedType(tag: DW_TAG_member, name: "disp", scope: !4697, file: !4698, line: 50, baseType: !388, size: 128)
!4701 = !DIDerivedType(tag: DW_TAG_member, name: "bev", scope: !4697, file: !4698, line: 51, baseType: !388, size: 128, offset: 128)
!4702 = !DIDerivedType(tag: DW_TAG_member, name: "deformed_nurbs", scope: !4697, file: !4698, line: 52, baseType: !388, size: 128, offset: 256)
!4703 = !DIDerivedType(tag: DW_TAG_member, name: "path", scope: !4697, file: !4698, line: 53, baseType: !4704, size: 64, offset: 384)
!4704 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4705, size: 64)
!4705 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Path", file: !2376, line: 65, size: 128, elements: !4706)
!4706 = !{!4707, !4715, !4716}
!4707 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !4705, file: !2376, line: 66, baseType: !4708, size: 64)
!4708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4709, size: 64)
!4709 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PathPoint", file: !2376, line: 56, size: 320, elements: !4710)
!4710 = !{!4711, !4712, !4713, !4714}
!4711 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !4709, file: !2376, line: 57, baseType: !408, size: 128)
!4712 = !DIDerivedType(tag: DW_TAG_member, name: "quat", scope: !4709, file: !2376, line: 58, baseType: !408, size: 128, offset: 128)
!4713 = !DIDerivedType(tag: DW_TAG_member, name: "radius", scope: !4709, file: !2376, line: 59, baseType: !396, size: 32, offset: 256)
!4714 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !4709, file: !2376, line: 59, baseType: !396, size: 32, offset: 288)
!4715 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !4705, file: !2376, line: 67, baseType: !98, size: 32, offset: 64)
!4716 = !DIDerivedType(tag: DW_TAG_member, name: "totdist", scope: !4705, file: !2376, line: 68, baseType: !396, size: 32, offset: 96)
!4717 = !DIDerivedType(tag: DW_TAG_member, name: "derivedDeform", scope: !424, file: !186, line: 277, baseType: !3721, size: 64, offset: 10304)
!4718 = !DIDerivedType(tag: DW_TAG_member, name: "derivedFinal", scope: !424, file: !186, line: 277, baseType: !3721, size: 64, offset: 10368)
!4719 = !DIDerivedType(tag: DW_TAG_member, name: "lastDataMask", scope: !424, file: !186, line: 278, baseType: !585, size: 64, offset: 10432)
!4720 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask", scope: !424, file: !186, line: 279, baseType: !585, size: 64, offset: 10496)
!4721 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !424, file: !186, line: 280, baseType: !7, size: 32, offset: 10560)
!4722 = !DIDerivedType(tag: DW_TAG_member, name: "init_state", scope: !424, file: !186, line: 281, baseType: !7, size: 32, offset: 10592)
!4723 = !DIDerivedType(tag: DW_TAG_member, name: "gpulamp", scope: !424, file: !186, line: 283, baseType: !388, size: 128, offset: 10624)
!4724 = !DIDerivedType(tag: DW_TAG_member, name: "pc_ids", scope: !424, file: !186, line: 284, baseType: !388, size: 128, offset: 10752)
!4725 = !DIDerivedType(tag: DW_TAG_member, name: "duplilist", scope: !424, file: !186, line: 285, baseType: !565, size: 64, offset: 10880)
!4726 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_object", scope: !424, file: !186, line: 287, baseType: !4727, size: 64, offset: 10944)
!4727 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4728, size: 64)
!4728 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyOb", file: !3053, line: 95, size: 768, elements: !4729)
!4729 = !{!4730, !4731, !4732, !4733, !4734, !4735, !4736, !4737, !4738, !4739, !4740, !4741, !4742, !4743, !4744, !4745, !4746, !4747, !4748}
!4730 = !DIDerivedType(tag: DW_TAG_member, name: "physics_object", scope: !4728, file: !3053, line: 97, baseType: !372, size: 64)
!4731 = !DIDerivedType(tag: DW_TAG_member, name: "physics_shape", scope: !4728, file: !3053, line: 98, baseType: !372, size: 64, offset: 64)
!4732 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4728, file: !3053, line: 101, baseType: !399, size: 16, offset: 128)
!4733 = !DIDerivedType(tag: DW_TAG_member, name: "shape", scope: !4728, file: !3053, line: 102, baseType: !399, size: 16, offset: 144)
!4734 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !4728, file: !3053, line: 104, baseType: !98, size: 32, offset: 160)
!4735 = !DIDerivedType(tag: DW_TAG_member, name: "col_groups", scope: !4728, file: !3053, line: 105, baseType: !98, size: 32, offset: 192)
!4736 = !DIDerivedType(tag: DW_TAG_member, name: "mesh_source", scope: !4728, file: !3053, line: 106, baseType: !399, size: 16, offset: 224)
!4737 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !4728, file: !3053, line: 107, baseType: !399, size: 16, offset: 240)
!4738 = !DIDerivedType(tag: DW_TAG_member, name: "mass", scope: !4728, file: !3053, line: 110, baseType: !396, size: 32, offset: 256)
!4739 = !DIDerivedType(tag: DW_TAG_member, name: "friction", scope: !4728, file: !3053, line: 112, baseType: !396, size: 32, offset: 288)
!4740 = !DIDerivedType(tag: DW_TAG_member, name: "restitution", scope: !4728, file: !3053, line: 113, baseType: !396, size: 32, offset: 320)
!4741 = !DIDerivedType(tag: DW_TAG_member, name: "margin", scope: !4728, file: !3053, line: 115, baseType: !396, size: 32, offset: 352)
!4742 = !DIDerivedType(tag: DW_TAG_member, name: "lin_damping", scope: !4728, file: !3053, line: 117, baseType: !396, size: 32, offset: 384)
!4743 = !DIDerivedType(tag: DW_TAG_member, name: "ang_damping", scope: !4728, file: !3053, line: 118, baseType: !396, size: 32, offset: 416)
!4744 = !DIDerivedType(tag: DW_TAG_member, name: "lin_sleep_thresh", scope: !4728, file: !3053, line: 120, baseType: !396, size: 32, offset: 448)
!4745 = !DIDerivedType(tag: DW_TAG_member, name: "ang_sleep_thresh", scope: !4728, file: !3053, line: 121, baseType: !396, size: 32, offset: 480)
!4746 = !DIDerivedType(tag: DW_TAG_member, name: "orn", scope: !4728, file: !3053, line: 123, baseType: !408, size: 128, offset: 512)
!4747 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !4728, file: !3053, line: 124, baseType: !779, size: 96, offset: 640)
!4748 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !4728, file: !3053, line: 125, baseType: !396, size: 32, offset: 736)
!4749 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_constraint", scope: !424, file: !186, line: 288, baseType: !4750, size: 64, offset: 11008)
!4750 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4751, size: 64)
!4751 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyCon", file: !3053, line: 195, size: 1024, elements: !4752)
!4752 = !{!4753, !4754, !4755, !4756, !4757, !4758, !4759, !4760, !4761, !4762, !4763, !4764, !4765, !4766, !4767, !4768, !4769, !4770, !4771, !4772, !4773, !4774, !4775, !4776, !4777, !4778, !4779, !4780, !4781, !4782}
!4753 = !DIDerivedType(tag: DW_TAG_member, name: "ob1", scope: !4751, file: !3053, line: 196, baseType: !423, size: 64)
!4754 = !DIDerivedType(tag: DW_TAG_member, name: "ob2", scope: !4751, file: !3053, line: 197, baseType: !423, size: 64, offset: 64)
!4755 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4751, file: !3053, line: 200, baseType: !399, size: 16, offset: 128)
!4756 = !DIDerivedType(tag: DW_TAG_member, name: "num_solver_iterations", scope: !4751, file: !3053, line: 201, baseType: !399, size: 16, offset: 144)
!4757 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !4751, file: !3053, line: 203, baseType: !98, size: 32, offset: 160)
!4758 = !DIDerivedType(tag: DW_TAG_member, name: "breaking_threshold", scope: !4751, file: !3053, line: 205, baseType: !396, size: 32, offset: 192)
!4759 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !4751, file: !3053, line: 206, baseType: !396, size: 32, offset: 224)
!4760 = !DIDerivedType(tag: DW_TAG_member, name: "limit_lin_x_lower", scope: !4751, file: !3053, line: 210, baseType: !396, size: 32, offset: 256)
!4761 = !DIDerivedType(tag: DW_TAG_member, name: "limit_lin_x_upper", scope: !4751, file: !3053, line: 211, baseType: !396, size: 32, offset: 288)
!4762 = !DIDerivedType(tag: DW_TAG_member, name: "limit_lin_y_lower", scope: !4751, file: !3053, line: 212, baseType: !396, size: 32, offset: 320)
!4763 = !DIDerivedType(tag: DW_TAG_member, name: "limit_lin_y_upper", scope: !4751, file: !3053, line: 213, baseType: !396, size: 32, offset: 352)
!4764 = !DIDerivedType(tag: DW_TAG_member, name: "limit_lin_z_lower", scope: !4751, file: !3053, line: 214, baseType: !396, size: 32, offset: 384)
!4765 = !DIDerivedType(tag: DW_TAG_member, name: "limit_lin_z_upper", scope: !4751, file: !3053, line: 215, baseType: !396, size: 32, offset: 416)
!4766 = !DIDerivedType(tag: DW_TAG_member, name: "limit_ang_x_lower", scope: !4751, file: !3053, line: 217, baseType: !396, size: 32, offset: 448)
!4767 = !DIDerivedType(tag: DW_TAG_member, name: "limit_ang_x_upper", scope: !4751, file: !3053, line: 218, baseType: !396, size: 32, offset: 480)
!4768 = !DIDerivedType(tag: DW_TAG_member, name: "limit_ang_y_lower", scope: !4751, file: !3053, line: 219, baseType: !396, size: 32, offset: 512)
!4769 = !DIDerivedType(tag: DW_TAG_member, name: "limit_ang_y_upper", scope: !4751, file: !3053, line: 220, baseType: !396, size: 32, offset: 544)
!4770 = !DIDerivedType(tag: DW_TAG_member, name: "limit_ang_z_lower", scope: !4751, file: !3053, line: 221, baseType: !396, size: 32, offset: 576)
!4771 = !DIDerivedType(tag: DW_TAG_member, name: "limit_ang_z_upper", scope: !4751, file: !3053, line: 222, baseType: !396, size: 32, offset: 608)
!4772 = !DIDerivedType(tag: DW_TAG_member, name: "spring_stiffness_x", scope: !4751, file: !3053, line: 226, baseType: !396, size: 32, offset: 640)
!4773 = !DIDerivedType(tag: DW_TAG_member, name: "spring_stiffness_y", scope: !4751, file: !3053, line: 227, baseType: !396, size: 32, offset: 672)
!4774 = !DIDerivedType(tag: DW_TAG_member, name: "spring_stiffness_z", scope: !4751, file: !3053, line: 228, baseType: !396, size: 32, offset: 704)
!4775 = !DIDerivedType(tag: DW_TAG_member, name: "spring_damping_x", scope: !4751, file: !3053, line: 230, baseType: !396, size: 32, offset: 736)
!4776 = !DIDerivedType(tag: DW_TAG_member, name: "spring_damping_y", scope: !4751, file: !3053, line: 231, baseType: !396, size: 32, offset: 768)
!4777 = !DIDerivedType(tag: DW_TAG_member, name: "spring_damping_z", scope: !4751, file: !3053, line: 232, baseType: !396, size: 32, offset: 800)
!4778 = !DIDerivedType(tag: DW_TAG_member, name: "motor_lin_target_velocity", scope: !4751, file: !3053, line: 235, baseType: !396, size: 32, offset: 832)
!4779 = !DIDerivedType(tag: DW_TAG_member, name: "motor_ang_target_velocity", scope: !4751, file: !3053, line: 236, baseType: !396, size: 32, offset: 864)
!4780 = !DIDerivedType(tag: DW_TAG_member, name: "motor_lin_max_impulse", scope: !4751, file: !3053, line: 237, baseType: !396, size: 32, offset: 896)
!4781 = !DIDerivedType(tag: DW_TAG_member, name: "motor_ang_max_impulse", scope: !4751, file: !3053, line: 238, baseType: !396, size: 32, offset: 928)
!4782 = !DIDerivedType(tag: DW_TAG_member, name: "physics_constraint", scope: !4751, file: !3053, line: 241, baseType: !372, size: 64, offset: 960)
!4783 = !DIDerivedType(tag: DW_TAG_member, name: "ima_ofs", scope: !424, file: !186, line: 290, baseType: !1335, size: 64, offset: 11072)
!4784 = !DIDerivedType(tag: DW_TAG_member, name: "iuser", scope: !424, file: !186, line: 291, baseType: !4785, size: 64, offset: 11136)
!4785 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4786, size: 64)
!4786 = !DIDerivedType(tag: DW_TAG_typedef, name: "ImageUser", file: !1047, line: 65, baseType: !1046)
!4787 = !DIDerivedType(tag: DW_TAG_member, name: "lodlevels", scope: !424, file: !186, line: 293, baseType: !388, size: 128, offset: 11200)
!4788 = !DIDerivedType(tag: DW_TAG_member, name: "currentlod", scope: !424, file: !186, line: 294, baseType: !4789, size: 64, offset: 11328)
!4789 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4790, size: 64)
!4790 = !DIDerivedType(tag: DW_TAG_typedef, name: "LodLevel", file: !186, line: 113, baseType: !4791)
!4791 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "LodLevel", file: !186, line: 108, size: 256, elements: !4792)
!4792 = !{!4793, !4795, !4796, !4797, !4798}
!4793 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4791, file: !186, line: 109, baseType: !4794, size: 64)
!4794 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4791, size: 64)
!4795 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !4791, file: !186, line: 109, baseType: !4794, size: 64, offset: 64)
!4796 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !4791, file: !186, line: 110, baseType: !423, size: 64, offset: 128)
!4797 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4791, file: !186, line: 111, baseType: !98, size: 32, offset: 192)
!4798 = !DIDerivedType(tag: DW_TAG_member, name: "distance", scope: !4791, file: !186, line: 112, baseType: !396, size: 32, offset: 224)
!4799 = !DIDerivedType(tag: DW_TAG_member, name: "ob_centre", scope: !379, file: !378, line: 171, baseType: !423, size: 64, offset: 832)
!4800 = !DIDerivedType(tag: DW_TAG_member, name: "render_border", scope: !379, file: !378, line: 172, baseType: !1315, size: 128, offset: 896)
!4801 = !DIDerivedType(tag: DW_TAG_member, name: "bgpicbase", scope: !379, file: !378, line: 174, baseType: !390, size: 128, offset: 1024)
!4802 = !DIDerivedType(tag: DW_TAG_member, name: "bgpic", scope: !379, file: !378, line: 175, baseType: !4803, size: 64, offset: 1152)
!4803 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4804, size: 64)
!4804 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BGpic", file: !378, line: 70, size: 832, elements: !4805)
!4805 = !{!4806, !4807, !4808, !4809, !4810, !4811, !4817, !4818, !4819, !4820, !4821, !4822, !4823, !4824}
!4806 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4804, file: !378, line: 71, baseType: !4803, size: 64)
!4807 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !4804, file: !378, line: 71, baseType: !4803, size: 64, offset: 64)
!4808 = !DIDerivedType(tag: DW_TAG_member, name: "ima", scope: !4804, file: !378, line: 73, baseType: !1655, size: 64, offset: 128)
!4809 = !DIDerivedType(tag: DW_TAG_member, name: "iuser", scope: !4804, file: !378, line: 74, baseType: !1046, size: 320, offset: 192)
!4810 = !DIDerivedType(tag: DW_TAG_member, name: "clip", scope: !4804, file: !378, line: 75, baseType: !2061, size: 64, offset: 512)
!4811 = !DIDerivedType(tag: DW_TAG_member, name: "cuser", scope: !4804, file: !378, line: 76, baseType: !4812, size: 64, offset: 576)
!4812 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieClipUser", file: !2063, line: 50, size: 64, elements: !4813)
!4813 = !{!4814, !4815, !4816}
!4814 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !4812, file: !2063, line: 51, baseType: !98, size: 32)
!4815 = !DIDerivedType(tag: DW_TAG_member, name: "render_size", scope: !4812, file: !2063, line: 52, baseType: !399, size: 16, offset: 32)
!4816 = !DIDerivedType(tag: DW_TAG_member, name: "render_flag", scope: !4812, file: !2063, line: 52, baseType: !399, size: 16, offset: 48)
!4817 = !DIDerivedType(tag: DW_TAG_member, name: "xof", scope: !4804, file: !378, line: 77, baseType: !396, size: 32, offset: 640)
!4818 = !DIDerivedType(tag: DW_TAG_member, name: "yof", scope: !4804, file: !378, line: 77, baseType: !396, size: 32, offset: 672)
!4819 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4804, file: !378, line: 77, baseType: !396, size: 32, offset: 704)
!4820 = !DIDerivedType(tag: DW_TAG_member, name: "blend", scope: !4804, file: !378, line: 77, baseType: !396, size: 32, offset: 736)
!4821 = !DIDerivedType(tag: DW_TAG_member, name: "view", scope: !4804, file: !378, line: 78, baseType: !399, size: 16, offset: 768)
!4822 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !4804, file: !378, line: 79, baseType: !399, size: 16, offset: 784)
!4823 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !4804, file: !378, line: 80, baseType: !399, size: 16, offset: 800)
!4824 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !4804, file: !378, line: 80, baseType: !399, size: 16, offset: 816)
!4825 = !DIDerivedType(tag: DW_TAG_member, name: "localvd", scope: !379, file: !378, line: 177, baseType: !4826, size: 64, offset: 1216)
!4826 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !379, size: 64)
!4827 = !DIDerivedType(tag: DW_TAG_member, name: "ob_centre_bone", scope: !379, file: !378, line: 179, baseType: !692, size: 512, offset: 1280)
!4828 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !379, file: !378, line: 181, baseType: !7, size: 32, offset: 1792)
!4829 = !DIDerivedType(tag: DW_TAG_member, name: "layact", scope: !379, file: !378, line: 182, baseType: !98, size: 32, offset: 1824)
!4830 = !DIDerivedType(tag: DW_TAG_member, name: "drawtype", scope: !379, file: !378, line: 187, baseType: !399, size: 16, offset: 1856)
!4831 = !DIDerivedType(tag: DW_TAG_member, name: "ob_centre_cursor", scope: !379, file: !378, line: 188, baseType: !399, size: 16, offset: 1872)
!4832 = !DIDerivedType(tag: DW_TAG_member, name: "scenelock", scope: !379, file: !378, line: 189, baseType: !399, size: 16, offset: 1888)
!4833 = !DIDerivedType(tag: DW_TAG_member, name: "around", scope: !379, file: !378, line: 189, baseType: !399, size: 16, offset: 1904)
!4834 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !379, file: !378, line: 190, baseType: !399, size: 16, offset: 1920)
!4835 = !DIDerivedType(tag: DW_TAG_member, name: "flag2", scope: !379, file: !378, line: 190, baseType: !399, size: 16, offset: 1936)
!4836 = !DIDerivedType(tag: DW_TAG_member, name: "lens", scope: !379, file: !378, line: 192, baseType: !396, size: 32, offset: 1952)
!4837 = !DIDerivedType(tag: DW_TAG_member, name: "grid", scope: !379, file: !378, line: 192, baseType: !396, size: 32, offset: 1984)
!4838 = !DIDerivedType(tag: DW_TAG_member, name: "near", scope: !379, file: !378, line: 193, baseType: !396, size: 32, offset: 2016)
!4839 = !DIDerivedType(tag: DW_TAG_member, name: "far", scope: !379, file: !378, line: 193, baseType: !396, size: 32, offset: 2048)
!4840 = !DIDerivedType(tag: DW_TAG_member, name: "ofs", scope: !379, file: !378, line: 194, baseType: !779, size: 96, offset: 2080)
!4841 = !DIDerivedType(tag: DW_TAG_member, name: "cursor", scope: !379, file: !378, line: 195, baseType: !779, size: 96, offset: 2176)
!4842 = !DIDerivedType(tag: DW_TAG_member, name: "matcap_icon", scope: !379, file: !378, line: 197, baseType: !399, size: 16, offset: 2272)
!4843 = !DIDerivedType(tag: DW_TAG_member, name: "gridlines", scope: !379, file: !378, line: 199, baseType: !399, size: 16, offset: 2288)
!4844 = !DIDerivedType(tag: DW_TAG_member, name: "gridsubdiv", scope: !379, file: !378, line: 200, baseType: !399, size: 16, offset: 2304)
!4845 = !DIDerivedType(tag: DW_TAG_member, name: "gridflag", scope: !379, file: !378, line: 201, baseType: !375, size: 8, offset: 2320)
!4846 = !DIDerivedType(tag: DW_TAG_member, name: "twtype", scope: !379, file: !378, line: 204, baseType: !375, size: 8, offset: 2328)
!4847 = !DIDerivedType(tag: DW_TAG_member, name: "twmode", scope: !379, file: !378, line: 204, baseType: !375, size: 8, offset: 2336)
!4848 = !DIDerivedType(tag: DW_TAG_member, name: "twflag", scope: !379, file: !378, line: 204, baseType: !375, size: 8, offset: 2344)
!4849 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !379, file: !378, line: 204, baseType: !2647, size: 16, offset: 2352)
!4850 = !DIDerivedType(tag: DW_TAG_member, name: "afterdraw_transp", scope: !379, file: !378, line: 207, baseType: !390, size: 128, offset: 2368)
!4851 = !DIDerivedType(tag: DW_TAG_member, name: "afterdraw_xray", scope: !379, file: !378, line: 208, baseType: !390, size: 128, offset: 2496)
!4852 = !DIDerivedType(tag: DW_TAG_member, name: "afterdraw_xraytransp", scope: !379, file: !378, line: 209, baseType: !390, size: 128, offset: 2624)
!4853 = !DIDerivedType(tag: DW_TAG_member, name: "zbuf", scope: !379, file: !378, line: 212, baseType: !375, size: 8, offset: 2752)
!4854 = !DIDerivedType(tag: DW_TAG_member, name: "transp", scope: !379, file: !378, line: 212, baseType: !375, size: 8, offset: 2760)
!4855 = !DIDerivedType(tag: DW_TAG_member, name: "xray", scope: !379, file: !378, line: 212, baseType: !375, size: 8, offset: 2768)
!4856 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !379, file: !378, line: 213, baseType: !2513, size: 40, offset: 2776)
!4857 = !DIDerivedType(tag: DW_TAG_member, name: "properties_storage", scope: !379, file: !378, line: 215, baseType: !372, size: 64, offset: 2816)
!4858 = !DIDerivedType(tag: DW_TAG_member, name: "defmaterial", scope: !379, file: !378, line: 216, baseType: !3784, size: 64, offset: 2880)
!4859 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !379, file: !378, line: 219, baseType: !1424, size: 64, offset: 2944)
!4860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4861, size: 64)
!4861 = !DIDerivedType(tag: DW_TAG_typedef, name: "SpaceIpo", file: !61, line: 334, baseType: !4862)
!4862 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SpaceIpo", file: !61, line: 315, size: 2048, elements: !4863)
!4863 = !{!4864, !4865, !4866, !4867, !4868, !4869, !4870, !4871, !4883, !4884, !4885, !4886, !4887, !4888}
!4864 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4862, file: !61, line: 316, baseType: !1394, size: 64)
!4865 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !4862, file: !61, line: 316, baseType: !1394, size: 64, offset: 64)
!4866 = !DIDerivedType(tag: DW_TAG_member, name: "regionbase", scope: !4862, file: !61, line: 317, baseType: !388, size: 128, offset: 128)
!4867 = !DIDerivedType(tag: DW_TAG_member, name: "spacetype", scope: !4862, file: !61, line: 318, baseType: !98, size: 32, offset: 256)
!4868 = !DIDerivedType(tag: DW_TAG_member, name: "blockscale", scope: !4862, file: !61, line: 319, baseType: !396, size: 32, offset: 288)
!4869 = !DIDerivedType(tag: DW_TAG_member, name: "blockhandler", scope: !4862, file: !61, line: 320, baseType: !398, size: 128, offset: 320)
!4870 = !DIDerivedType(tag: DW_TAG_member, name: "v2d", scope: !4862, file: !61, line: 322, baseType: !1310, size: 1280, offset: 448)
!4871 = !DIDerivedType(tag: DW_TAG_member, name: "ads", scope: !4862, file: !61, line: 324, baseType: !4872, size: 64, offset: 1728)
!4872 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4873, size: 64)
!4873 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bDopeSheet", file: !544, line: 519, size: 896, elements: !4874)
!4874 = !{!4875, !4876, !4877, !4878, !4879, !4880, !4881, !4882}
!4875 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !4873, file: !544, line: 520, baseType: !441, size: 64)
!4876 = !DIDerivedType(tag: DW_TAG_member, name: "chanbase", scope: !4873, file: !544, line: 521, baseType: !388, size: 128, offset: 64)
!4877 = !DIDerivedType(tag: DW_TAG_member, name: "filter_grp", scope: !4873, file: !544, line: 523, baseType: !3061, size: 64, offset: 192)
!4878 = !DIDerivedType(tag: DW_TAG_member, name: "searchstr", scope: !4873, file: !544, line: 524, baseType: !692, size: 512, offset: 256)
!4879 = !DIDerivedType(tag: DW_TAG_member, name: "filterflag", scope: !4873, file: !544, line: 526, baseType: !98, size: 32, offset: 768)
!4880 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !4873, file: !544, line: 527, baseType: !98, size: 32, offset: 800)
!4881 = !DIDerivedType(tag: DW_TAG_member, name: "renameIndex", scope: !4873, file: !544, line: 529, baseType: !98, size: 32, offset: 832)
!4882 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !4873, file: !544, line: 530, baseType: !98, size: 32, offset: 864)
!4883 = !DIDerivedType(tag: DW_TAG_member, name: "ghostCurves", scope: !4862, file: !61, line: 326, baseType: !388, size: 128, offset: 1792)
!4884 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !4862, file: !61, line: 328, baseType: !399, size: 16, offset: 1920)
!4885 = !DIDerivedType(tag: DW_TAG_member, name: "autosnap", scope: !4862, file: !61, line: 329, baseType: !399, size: 16, offset: 1936)
!4886 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !4862, file: !61, line: 330, baseType: !98, size: 32, offset: 1952)
!4887 = !DIDerivedType(tag: DW_TAG_member, name: "cursorVal", scope: !4862, file: !61, line: 332, baseType: !396, size: 32, offset: 1984)
!4888 = !DIDerivedType(tag: DW_TAG_member, name: "around", scope: !4862, file: !61, line: 333, baseType: !98, size: 32, offset: 2016)
!4889 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4890, size: 64)
!4890 = !DIDerivedType(tag: DW_TAG_typedef, name: "SpaceFile", file: !61, line: 622, baseType: !4891)
!4891 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SpaceFile", file: !61, line: 595, size: 832, elements: !4892)
!4892 = !{!4893, !4894, !4895, !4896, !4897, !4898, !4924, !4927, !4928, !4929, !4949, !4950, !4953, !4954, !4955, !4956}
!4893 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4891, file: !61, line: 596, baseType: !1394, size: 64)
!4894 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !4891, file: !61, line: 596, baseType: !1394, size: 64, offset: 64)
!4895 = !DIDerivedType(tag: DW_TAG_member, name: "regionbase", scope: !4891, file: !61, line: 597, baseType: !388, size: 128, offset: 128)
!4896 = !DIDerivedType(tag: DW_TAG_member, name: "spacetype", scope: !4891, file: !61, line: 598, baseType: !98, size: 32, offset: 256)
!4897 = !DIDerivedType(tag: DW_TAG_member, name: "scroll_offset", scope: !4891, file: !61, line: 600, baseType: !98, size: 32, offset: 288)
!4898 = !DIDerivedType(tag: DW_TAG_member, name: "params", scope: !4891, file: !61, line: 602, baseType: !4899, size: 64, offset: 320)
!4899 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4900, size: 64)
!4900 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FileSelectParams", file: !61, line: 566, size: 16128, elements: !4901)
!4901 = !{!4902, !4906, !4910, !4911, !4912, !4913, !4914, !4915, !4916, !4917, !4918, !4919, !4920, !4921, !4922, !4923}
!4902 = !DIDerivedType(tag: DW_TAG_member, name: "title", scope: !4900, file: !61, line: 567, baseType: !4903, size: 768)
!4903 = !DICompositeType(tag: DW_TAG_array_type, baseType: !375, size: 768, elements: !4904)
!4904 = !{!4905}
!4905 = !DISubrange(count: 96)
!4906 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !4900, file: !61, line: 568, baseType: !4907, size: 8448, offset: 768)
!4907 = !DICompositeType(tag: DW_TAG_array_type, baseType: !375, size: 8448, elements: !4908)
!4908 = !{!4909}
!4909 = !DISubrange(count: 1056)
!4910 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !4900, file: !61, line: 570, baseType: !630, size: 2048, offset: 9216)
!4911 = !DIDerivedType(tag: DW_TAG_member, name: "renamefile", scope: !4900, file: !61, line: 571, baseType: !630, size: 2048, offset: 11264)
!4912 = !DIDerivedType(tag: DW_TAG_member, name: "renameedit", scope: !4900, file: !61, line: 572, baseType: !630, size: 2048, offset: 13312)
!4913 = !DIDerivedType(tag: DW_TAG_member, name: "filter_glob", scope: !4900, file: !61, line: 574, baseType: !692, size: 512, offset: 15360)
!4914 = !DIDerivedType(tag: DW_TAG_member, name: "active_file", scope: !4900, file: !61, line: 576, baseType: !98, size: 32, offset: 15872)
!4915 = !DIDerivedType(tag: DW_TAG_member, name: "sel_first", scope: !4900, file: !61, line: 577, baseType: !98, size: 32, offset: 15904)
!4916 = !DIDerivedType(tag: DW_TAG_member, name: "sel_last", scope: !4900, file: !61, line: 578, baseType: !98, size: 32, offset: 15936)
!4917 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4900, file: !61, line: 581, baseType: !399, size: 16, offset: 15968)
!4918 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !4900, file: !61, line: 582, baseType: !399, size: 16, offset: 15984)
!4919 = !DIDerivedType(tag: DW_TAG_member, name: "sort", scope: !4900, file: !61, line: 583, baseType: !399, size: 16, offset: 16000)
!4920 = !DIDerivedType(tag: DW_TAG_member, name: "display", scope: !4900, file: !61, line: 584, baseType: !399, size: 16, offset: 16016)
!4921 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !4900, file: !61, line: 585, baseType: !399, size: 16, offset: 16032)
!4922 = !DIDerivedType(tag: DW_TAG_member, name: "f_fp", scope: !4900, file: !61, line: 588, baseType: !399, size: 16, offset: 16048)
!4923 = !DIDerivedType(tag: DW_TAG_member, name: "fp_str", scope: !4900, file: !61, line: 589, baseType: !2588, size: 64, offset: 16064)
!4924 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !4891, file: !61, line: 604, baseType: !4925, size: 64, offset: 384)
!4925 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4926, size: 64)
!4926 = !DICompositeType(tag: DW_TAG_structure_type, name: "FileList", file: !61, line: 62, flags: DIFlagFwdDecl)
!4927 = !DIDerivedType(tag: DW_TAG_member, name: "folders_prev", scope: !4891, file: !61, line: 606, baseType: !565, size: 64, offset: 448)
!4928 = !DIDerivedType(tag: DW_TAG_member, name: "folders_next", scope: !4891, file: !61, line: 607, baseType: !565, size: 64, offset: 512)
!4929 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !4891, file: !61, line: 614, baseType: !4930, size: 64, offset: 576)
!4930 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4931, size: 64)
!4931 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmOperator", file: !44, line: 328, size: 1344, elements: !4932)
!4932 = !{!4933, !4934, !4935, !4936, !4937, !4940, !4941, !4942, !4943, !4944, !4945, !4946, !4947, !4948}
!4933 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4931, file: !44, line: 329, baseType: !4930, size: 64)
!4934 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !4931, file: !44, line: 329, baseType: !4930, size: 64, offset: 64)
!4935 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !4931, file: !44, line: 332, baseType: !692, size: 512, offset: 128)
!4936 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !4931, file: !44, line: 333, baseType: !1094, size: 64, offset: 640)
!4937 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4931, file: !44, line: 336, baseType: !4938, size: 64, offset: 704)
!4938 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4939, size: 64)
!4939 = !DICompositeType(tag: DW_TAG_structure_type, name: "wmOperatorType", file: !44, line: 45, flags: DIFlagFwdDecl)
!4940 = !DIDerivedType(tag: DW_TAG_member, name: "customdata", scope: !4931, file: !44, line: 337, baseType: !372, size: 64, offset: 768)
!4941 = !DIDerivedType(tag: DW_TAG_member, name: "py_instance", scope: !4931, file: !44, line: 338, baseType: !372, size: 64, offset: 832)
!4942 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !4931, file: !44, line: 340, baseType: !1181, size: 64, offset: 896)
!4943 = !DIDerivedType(tag: DW_TAG_member, name: "reports", scope: !4931, file: !44, line: 341, baseType: !4388, size: 64, offset: 960)
!4944 = !DIDerivedType(tag: DW_TAG_member, name: "macro", scope: !4931, file: !44, line: 343, baseType: !388, size: 128, offset: 1024)
!4945 = !DIDerivedType(tag: DW_TAG_member, name: "opm", scope: !4931, file: !44, line: 344, baseType: !4930, size: 64, offset: 1152)
!4946 = !DIDerivedType(tag: DW_TAG_member, name: "layout", scope: !4931, file: !44, line: 345, baseType: !1179, size: 64, offset: 1216)
!4947 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !4931, file: !44, line: 346, baseType: !399, size: 16, offset: 1280)
!4948 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !4931, file: !44, line: 346, baseType: !811, size: 48, offset: 1296)
!4949 = !DIDerivedType(tag: DW_TAG_member, name: "smoothscroll_timer", scope: !4891, file: !61, line: 616, baseType: !1358, size: 64, offset: 640)
!4950 = !DIDerivedType(tag: DW_TAG_member, name: "layout", scope: !4891, file: !61, line: 618, baseType: !4951, size: 64, offset: 704)
!4951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4952, size: 64)
!4952 = !DICompositeType(tag: DW_TAG_structure_type, name: "FileLayout", file: !61, line: 66, flags: DIFlagFwdDecl)
!4953 = !DIDerivedType(tag: DW_TAG_member, name: "recentnr", scope: !4891, file: !61, line: 620, baseType: !399, size: 16, offset: 768)
!4954 = !DIDerivedType(tag: DW_TAG_member, name: "bookmarknr", scope: !4891, file: !61, line: 620, baseType: !399, size: 16, offset: 784)
!4955 = !DIDerivedType(tag: DW_TAG_member, name: "systemnr", scope: !4891, file: !61, line: 621, baseType: !399, size: 16, offset: 800)
!4956 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !4891, file: !61, line: 621, baseType: !399, size: 16, offset: 816)
!4957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4958, size: 64)
!4958 = !DIDerivedType(tag: DW_TAG_typedef, name: "SpaceOops", file: !61, line: 267, baseType: !4959)
!4959 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SpaceOops", file: !61, line: 240, size: 2432, elements: !4960)
!4960 = !{!4961, !4962, !4963, !4964, !4965, !4966, !4967, !4968, !4969, !4970, !4971, !4980, !4981, !4982, !4983, !4984}
!4961 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4959, file: !61, line: 241, baseType: !1394, size: 64)
!4962 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !4959, file: !61, line: 241, baseType: !1394, size: 64, offset: 64)
!4963 = !DIDerivedType(tag: DW_TAG_member, name: "regionbase", scope: !4959, file: !61, line: 242, baseType: !388, size: 128, offset: 128)
!4964 = !DIDerivedType(tag: DW_TAG_member, name: "spacetype", scope: !4959, file: !61, line: 243, baseType: !98, size: 32, offset: 256)
!4965 = !DIDerivedType(tag: DW_TAG_member, name: "blockscale", scope: !4959, file: !61, line: 244, baseType: !396, size: 32, offset: 288)
!4966 = !DIDerivedType(tag: DW_TAG_member, name: "blockhandler", scope: !4959, file: !61, line: 245, baseType: !398, size: 128, offset: 320)
!4967 = !DIDerivedType(tag: DW_TAG_member, name: "v2d", scope: !4959, file: !61, line: 247, baseType: !1310, size: 1280, offset: 448)
!4968 = !DIDerivedType(tag: DW_TAG_member, name: "tree", scope: !4959, file: !61, line: 249, baseType: !388, size: 128, offset: 1728)
!4969 = !DIDerivedType(tag: DW_TAG_member, name: "treestore", scope: !4959, file: !61, line: 257, baseType: !3751, size: 64, offset: 1856)
!4970 = !DIDerivedType(tag: DW_TAG_member, name: "search_string", scope: !4959, file: !61, line: 260, baseType: !2910, size: 256, offset: 1920)
!4971 = !DIDerivedType(tag: DW_TAG_member, name: "search_tse", scope: !4959, file: !61, line: 261, baseType: !4972, size: 128, offset: 2176)
!4972 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "TreeStoreElem", file: !4973, line: 39, size: 128, elements: !4974)
!4973 = !DIFile(filename: "blender/source/blender/makesdna/DNA_outliner_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!4974 = !{!4975, !4976, !4977, !4978, !4979}
!4975 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4972, file: !4973, line: 40, baseType: !399, size: 16)
!4976 = !DIDerivedType(tag: DW_TAG_member, name: "nr", scope: !4972, file: !4973, line: 40, baseType: !399, size: 16, offset: 16)
!4977 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !4972, file: !4973, line: 40, baseType: !399, size: 16, offset: 32)
!4978 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !4972, file: !4973, line: 40, baseType: !399, size: 16, offset: 48)
!4979 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !4972, file: !4973, line: 41, baseType: !434, size: 64, offset: 64)
!4980 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !4959, file: !61, line: 263, baseType: !399, size: 16, offset: 2304)
!4981 = !DIDerivedType(tag: DW_TAG_member, name: "outlinevis", scope: !4959, file: !61, line: 263, baseType: !399, size: 16, offset: 2320)
!4982 = !DIDerivedType(tag: DW_TAG_member, name: "storeflag", scope: !4959, file: !61, line: 263, baseType: !399, size: 16, offset: 2336)
!4983 = !DIDerivedType(tag: DW_TAG_member, name: "search_flags", scope: !4959, file: !61, line: 263, baseType: !399, size: 16, offset: 2352)
!4984 = !DIDerivedType(tag: DW_TAG_member, name: "treehash", scope: !4959, file: !61, line: 266, baseType: !372, size: 64, offset: 2368)
!4985 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4986, size: 64)
!4986 = !DIDerivedType(tag: DW_TAG_typedef, name: "SpaceImage", file: !61, line: 743, baseType: !4987)
!4987 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SpaceImage", file: !61, line: 710, size: 84672, elements: !4988)
!4988 = !{!4989, !4990, !4991, !4992, !4993, !4994, !4995, !4996, !4997, !5038, !5039, !5040, !5041, !5042, !5043, !5044, !5045, !5046, !5047, !5048, !5049, !5050, !5051, !5052, !5053, !5054, !5055}
!4989 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4987, file: !61, line: 711, baseType: !1394, size: 64)
!4990 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !4987, file: !61, line: 711, baseType: !1394, size: 64, offset: 64)
!4991 = !DIDerivedType(tag: DW_TAG_member, name: "regionbase", scope: !4987, file: !61, line: 712, baseType: !388, size: 128, offset: 128)
!4992 = !DIDerivedType(tag: DW_TAG_member, name: "spacetype", scope: !4987, file: !61, line: 713, baseType: !98, size: 32, offset: 256)
!4993 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !4987, file: !61, line: 715, baseType: !98, size: 32, offset: 288)
!4994 = !DIDerivedType(tag: DW_TAG_member, name: "image", scope: !4987, file: !61, line: 717, baseType: !1655, size: 64, offset: 320)
!4995 = !DIDerivedType(tag: DW_TAG_member, name: "iuser", scope: !4987, file: !61, line: 718, baseType: !1046, size: 320, offset: 384)
!4996 = !DIDerivedType(tag: DW_TAG_member, name: "cumap", scope: !4987, file: !61, line: 720, baseType: !1799, size: 64, offset: 704)
!4997 = !DIDerivedType(tag: DW_TAG_member, name: "scopes", scope: !4987, file: !61, line: 722, baseType: !4998, size: 42112, offset: 768)
!4998 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Scopes", file: !1453, line: 138, size: 42112, elements: !4999)
!4999 = !{!5000, !5001, !5002, !5003, !5004, !5005, !5006, !5007, !5008, !5009, !5010, !5013, !5032, !5033, !5034, !5035, !5036, !5037}
!5000 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !4998, file: !1453, line: 139, baseType: !98, size: 32)
!5001 = !DIDerivedType(tag: DW_TAG_member, name: "sample_full", scope: !4998, file: !1453, line: 140, baseType: !98, size: 32, offset: 32)
!5002 = !DIDerivedType(tag: DW_TAG_member, name: "sample_lines", scope: !4998, file: !1453, line: 141, baseType: !98, size: 32, offset: 64)
!5003 = !DIDerivedType(tag: DW_TAG_member, name: "accuracy", scope: !4998, file: !1453, line: 142, baseType: !396, size: 32, offset: 96)
!5004 = !DIDerivedType(tag: DW_TAG_member, name: "wavefrm_mode", scope: !4998, file: !1453, line: 143, baseType: !98, size: 32, offset: 128)
!5005 = !DIDerivedType(tag: DW_TAG_member, name: "wavefrm_alpha", scope: !4998, file: !1453, line: 144, baseType: !396, size: 32, offset: 160)
!5006 = !DIDerivedType(tag: DW_TAG_member, name: "wavefrm_yfac", scope: !4998, file: !1453, line: 145, baseType: !396, size: 32, offset: 192)
!5007 = !DIDerivedType(tag: DW_TAG_member, name: "wavefrm_height", scope: !4998, file: !1453, line: 146, baseType: !98, size: 32, offset: 224)
!5008 = !DIDerivedType(tag: DW_TAG_member, name: "vecscope_alpha", scope: !4998, file: !1453, line: 147, baseType: !396, size: 32, offset: 256)
!5009 = !DIDerivedType(tag: DW_TAG_member, name: "vecscope_height", scope: !4998, file: !1453, line: 148, baseType: !98, size: 32, offset: 288)
!5010 = !DIDerivedType(tag: DW_TAG_member, name: "minmax", scope: !4998, file: !1453, line: 149, baseType: !5011, size: 192, offset: 320)
!5011 = !DICompositeType(tag: DW_TAG_array_type, baseType: !396, size: 192, elements: !5012)
!5012 = !{!417, !1294}
!5013 = !DIDerivedType(tag: DW_TAG_member, name: "hist", scope: !4998, file: !1453, line: 150, baseType: !5014, size: 41280, offset: 512)
!5014 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Histogram", file: !1453, line: 118, size: 41280, elements: !5015)
!5015 = !{!5016, !5017, !5018, !5020, !5021, !5022, !5023, !5024, !5025, !5026, !5027, !5028, !5029}
!5016 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !5014, file: !1453, line: 119, baseType: !98, size: 32)
!5017 = !DIDerivedType(tag: DW_TAG_member, name: "x_resolution", scope: !5014, file: !1453, line: 120, baseType: !98, size: 32, offset: 32)
!5018 = !DIDerivedType(tag: DW_TAG_member, name: "data_luma", scope: !5014, file: !1453, line: 121, baseType: !5019, size: 8192, offset: 64)
!5019 = !DICompositeType(tag: DW_TAG_array_type, baseType: !396, size: 8192, elements: !631)
!5020 = !DIDerivedType(tag: DW_TAG_member, name: "data_r", scope: !5014, file: !1453, line: 122, baseType: !5019, size: 8192, offset: 8256)
!5021 = !DIDerivedType(tag: DW_TAG_member, name: "data_g", scope: !5014, file: !1453, line: 123, baseType: !5019, size: 8192, offset: 16448)
!5022 = !DIDerivedType(tag: DW_TAG_member, name: "data_b", scope: !5014, file: !1453, line: 124, baseType: !5019, size: 8192, offset: 24640)
!5023 = !DIDerivedType(tag: DW_TAG_member, name: "data_a", scope: !5014, file: !1453, line: 125, baseType: !5019, size: 8192, offset: 32832)
!5024 = !DIDerivedType(tag: DW_TAG_member, name: "xmax", scope: !5014, file: !1453, line: 126, baseType: !396, size: 32, offset: 41024)
!5025 = !DIDerivedType(tag: DW_TAG_member, name: "ymax", scope: !5014, file: !1453, line: 126, baseType: !396, size: 32, offset: 41056)
!5026 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !5014, file: !1453, line: 127, baseType: !399, size: 16, offset: 41088)
!5027 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !5014, file: !1453, line: 128, baseType: !399, size: 16, offset: 41104)
!5028 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !5014, file: !1453, line: 129, baseType: !98, size: 32, offset: 41120)
!5029 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !5014, file: !1453, line: 133, baseType: !5030, size: 128, offset: 41152)
!5030 = !DICompositeType(tag: DW_TAG_array_type, baseType: !396, size: 128, elements: !5031)
!5031 = !{!1294, !1294}
!5032 = !DIDerivedType(tag: DW_TAG_member, name: "waveform_1", scope: !4998, file: !1453, line: 151, baseType: !975, size: 64, offset: 41792)
!5033 = !DIDerivedType(tag: DW_TAG_member, name: "waveform_2", scope: !4998, file: !1453, line: 152, baseType: !975, size: 64, offset: 41856)
!5034 = !DIDerivedType(tag: DW_TAG_member, name: "waveform_3", scope: !4998, file: !1453, line: 153, baseType: !975, size: 64, offset: 41920)
!5035 = !DIDerivedType(tag: DW_TAG_member, name: "vecscope", scope: !4998, file: !1453, line: 154, baseType: !975, size: 64, offset: 41984)
!5036 = !DIDerivedType(tag: DW_TAG_member, name: "waveform_tot", scope: !4998, file: !1453, line: 155, baseType: !98, size: 32, offset: 42048)
!5037 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !4998, file: !1453, line: 156, baseType: !98, size: 32, offset: 42080)
!5038 = !DIDerivedType(tag: DW_TAG_member, name: "sample_line_hist", scope: !4987, file: !61, line: 723, baseType: !5014, size: 41280, offset: 42880)
!5039 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !4987, file: !61, line: 725, baseType: !1424, size: 64, offset: 84160)
!5040 = !DIDerivedType(tag: DW_TAG_member, name: "cursor", scope: !4987, file: !61, line: 727, baseType: !1335, size: 64, offset: 84224)
!5041 = !DIDerivedType(tag: DW_TAG_member, name: "xof", scope: !4987, file: !61, line: 728, baseType: !396, size: 32, offset: 84288)
!5042 = !DIDerivedType(tag: DW_TAG_member, name: "yof", scope: !4987, file: !61, line: 728, baseType: !396, size: 32, offset: 84320)
!5043 = !DIDerivedType(tag: DW_TAG_member, name: "zoom", scope: !4987, file: !61, line: 729, baseType: !396, size: 32, offset: 84352)
!5044 = !DIDerivedType(tag: DW_TAG_member, name: "centx", scope: !4987, file: !61, line: 730, baseType: !396, size: 32, offset: 84384)
!5045 = !DIDerivedType(tag: DW_TAG_member, name: "centy", scope: !4987, file: !61, line: 730, baseType: !396, size: 32, offset: 84416)
!5046 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !4987, file: !61, line: 732, baseType: !375, size: 8, offset: 84448)
!5047 = !DIDerivedType(tag: DW_TAG_member, name: "pin", scope: !4987, file: !61, line: 733, baseType: !375, size: 8, offset: 84456)
!5048 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !4987, file: !61, line: 734, baseType: !399, size: 16, offset: 84464)
!5049 = !DIDerivedType(tag: DW_TAG_member, name: "curtile", scope: !4987, file: !61, line: 735, baseType: !399, size: 16, offset: 84480)
!5050 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4987, file: !61, line: 736, baseType: !399, size: 16, offset: 84496)
!5051 = !DIDerivedType(tag: DW_TAG_member, name: "dt_uv", scope: !4987, file: !61, line: 737, baseType: !375, size: 8, offset: 84512)
!5052 = !DIDerivedType(tag: DW_TAG_member, name: "sticky", scope: !4987, file: !61, line: 738, baseType: !375, size: 8, offset: 84520)
!5053 = !DIDerivedType(tag: DW_TAG_member, name: "dt_uvstretch", scope: !4987, file: !61, line: 739, baseType: !375, size: 8, offset: 84528)
!5054 = !DIDerivedType(tag: DW_TAG_member, name: "around", scope: !4987, file: !61, line: 740, baseType: !375, size: 8, offset: 84536)
!5055 = !DIDerivedType(tag: DW_TAG_member, name: "mask_info", scope: !4987, file: !61, line: 742, baseType: !5056, size: 128, offset: 84544)
!5056 = !DIDerivedType(tag: DW_TAG_typedef, name: "MaskSpaceInfo", file: !61, line: 554, baseType: !5057)
!5057 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MaskSpaceInfo", file: !61, line: 545, size: 128, elements: !5058)
!5058 = !{!5059, !5060, !5061, !5062, !5063}
!5059 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !5057, file: !61, line: 548, baseType: !2266, size: 64)
!5060 = !DIDerivedType(tag: DW_TAG_member, name: "draw_flag", scope: !5057, file: !61, line: 550, baseType: !375, size: 8, offset: 64)
!5061 = !DIDerivedType(tag: DW_TAG_member, name: "draw_type", scope: !5057, file: !61, line: 551, baseType: !375, size: 8, offset: 72)
!5062 = !DIDerivedType(tag: DW_TAG_member, name: "overlay_mode", scope: !5057, file: !61, line: 552, baseType: !375, size: 8, offset: 80)
!5063 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !5057, file: !61, line: 553, baseType: !2513, size: 40, offset: 88)
!5064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5065, size: 64)
!5065 = !DIDerivedType(tag: DW_TAG_typedef, name: "SpaceScript", file: !61, line: 908, baseType: !5066)
!5066 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SpaceScript", file: !61, line: 897, size: 512, elements: !5067)
!5067 = !{!5068, !5069, !5070, !5071, !5072, !5073, !5087, !5088, !5089, !5090}
!5068 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !5066, file: !61, line: 898, baseType: !1394, size: 64)
!5069 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !5066, file: !61, line: 898, baseType: !1394, size: 64, offset: 64)
!5070 = !DIDerivedType(tag: DW_TAG_member, name: "regionbase", scope: !5066, file: !61, line: 899, baseType: !388, size: 128, offset: 128)
!5071 = !DIDerivedType(tag: DW_TAG_member, name: "spacetype", scope: !5066, file: !61, line: 900, baseType: !98, size: 32, offset: 256)
!5072 = !DIDerivedType(tag: DW_TAG_member, name: "blockscale", scope: !5066, file: !61, line: 901, baseType: !396, size: 32, offset: 288)
!5073 = !DIDerivedType(tag: DW_TAG_member, name: "script", scope: !5066, file: !61, line: 902, baseType: !5074, size: 64, offset: 320)
!5074 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5075, size: 64)
!5075 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Script", file: !61, line: 880, size: 11584, elements: !5076)
!5076 = !{!5077, !5078, !5079, !5080, !5081, !5082, !5083, !5084, !5085, !5086}
!5077 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !5075, file: !61, line: 881, baseType: !427, size: 960)
!5078 = !DIDerivedType(tag: DW_TAG_member, name: "py_draw", scope: !5075, file: !61, line: 883, baseType: !372, size: 64, offset: 960)
!5079 = !DIDerivedType(tag: DW_TAG_member, name: "py_event", scope: !5075, file: !61, line: 884, baseType: !372, size: 64, offset: 1024)
!5080 = !DIDerivedType(tag: DW_TAG_member, name: "py_button", scope: !5075, file: !61, line: 885, baseType: !372, size: 64, offset: 1088)
!5081 = !DIDerivedType(tag: DW_TAG_member, name: "py_browsercallback", scope: !5075, file: !61, line: 886, baseType: !372, size: 64, offset: 1152)
!5082 = !DIDerivedType(tag: DW_TAG_member, name: "py_globaldict", scope: !5075, file: !61, line: 887, baseType: !372, size: 64, offset: 1216)
!5083 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5075, file: !61, line: 889, baseType: !98, size: 32, offset: 1280)
!5084 = !DIDerivedType(tag: DW_TAG_member, name: "lastspace", scope: !5075, file: !61, line: 889, baseType: !98, size: 32, offset: 1312)
!5085 = !DIDerivedType(tag: DW_TAG_member, name: "scriptname", scope: !5075, file: !61, line: 891, baseType: !478, size: 8192, offset: 1344)
!5086 = !DIDerivedType(tag: DW_TAG_member, name: "scriptarg", scope: !5075, file: !61, line: 892, baseType: !630, size: 2048, offset: 9536)
!5087 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5066, file: !61, line: 904, baseType: !399, size: 16, offset: 384)
!5088 = !DIDerivedType(tag: DW_TAG_member, name: "menunr", scope: !5066, file: !61, line: 904, baseType: !399, size: 16, offset: 400)
!5089 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !5066, file: !61, line: 905, baseType: !98, size: 32, offset: 416)
!5090 = !DIDerivedType(tag: DW_TAG_member, name: "but_refs", scope: !5066, file: !61, line: 907, baseType: !372, size: 64, offset: 448)
!5091 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5092, size: 64)
!5092 = !DIDerivedType(tag: DW_TAG_typedef, name: "SpaceNla", file: !61, line: 399, baseType: !5093)
!5093 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SpaceNla", file: !61, line: 386, size: 1856, elements: !5094)
!5094 = !{!5095, !5096, !5097, !5098, !5099, !5100, !5101, !5102, !5103, !5104, !5105}
!5095 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !5093, file: !61, line: 387, baseType: !382, size: 64)
!5096 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !5093, file: !61, line: 387, baseType: !382, size: 64, offset: 64)
!5097 = !DIDerivedType(tag: DW_TAG_member, name: "regionbase", scope: !5093, file: !61, line: 388, baseType: !388, size: 128, offset: 128)
!5098 = !DIDerivedType(tag: DW_TAG_member, name: "spacetype", scope: !5093, file: !61, line: 389, baseType: !98, size: 32, offset: 256)
!5099 = !DIDerivedType(tag: DW_TAG_member, name: "blockscale", scope: !5093, file: !61, line: 390, baseType: !396, size: 32, offset: 288)
!5100 = !DIDerivedType(tag: DW_TAG_member, name: "blockhandler", scope: !5093, file: !61, line: 391, baseType: !398, size: 128, offset: 320)
!5101 = !DIDerivedType(tag: DW_TAG_member, name: "autosnap", scope: !5093, file: !61, line: 393, baseType: !399, size: 16, offset: 448)
!5102 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !5093, file: !61, line: 394, baseType: !399, size: 16, offset: 464)
!5103 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !5093, file: !61, line: 395, baseType: !98, size: 32, offset: 480)
!5104 = !DIDerivedType(tag: DW_TAG_member, name: "ads", scope: !5093, file: !61, line: 397, baseType: !4872, size: 64, offset: 512)
!5105 = !DIDerivedType(tag: DW_TAG_member, name: "v2d", scope: !5093, file: !61, line: 398, baseType: !1310, size: 1280, offset: 576)
!5106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5107, size: 64)
!5107 = !DIDerivedType(tag: DW_TAG_typedef, name: "SpaceNode", file: !61, line: 963, baseType: !1391)
!5108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5109, size: 64)
!5109 = !DIDerivedType(tag: DW_TAG_typedef, name: "SpaceConsole", file: !61, line: 1055, baseType: !5110)
!5110 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SpaceConsole", file: !61, line: 1038, size: 3136, elements: !5111)
!5111 = !{!5112, !5113, !5114, !5115, !5116, !5117, !5118, !5119, !5120, !5121, !5122, !5123, !5124, !5125}
!5112 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !5110, file: !61, line: 1039, baseType: !1394, size: 64)
!5113 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !5110, file: !61, line: 1039, baseType: !1394, size: 64, offset: 64)
!5114 = !DIDerivedType(tag: DW_TAG_member, name: "regionbase", scope: !5110, file: !61, line: 1040, baseType: !388, size: 128, offset: 128)
!5115 = !DIDerivedType(tag: DW_TAG_member, name: "spacetype", scope: !5110, file: !61, line: 1041, baseType: !98, size: 32, offset: 256)
!5116 = !DIDerivedType(tag: DW_TAG_member, name: "blockscale", scope: !5110, file: !61, line: 1042, baseType: !396, size: 32, offset: 288)
!5117 = !DIDerivedType(tag: DW_TAG_member, name: "blockhandler", scope: !5110, file: !61, line: 1043, baseType: !398, size: 128, offset: 320)
!5118 = !DIDerivedType(tag: DW_TAG_member, name: "lheight", scope: !5110, file: !61, line: 1046, baseType: !98, size: 32, offset: 448)
!5119 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !5110, file: !61, line: 1046, baseType: !98, size: 32, offset: 480)
!5120 = !DIDerivedType(tag: DW_TAG_member, name: "scrollback", scope: !5110, file: !61, line: 1048, baseType: !388, size: 128, offset: 512)
!5121 = !DIDerivedType(tag: DW_TAG_member, name: "history", scope: !5110, file: !61, line: 1049, baseType: !388, size: 128, offset: 640)
!5122 = !DIDerivedType(tag: DW_TAG_member, name: "prompt", scope: !5110, file: !61, line: 1050, baseType: !630, size: 2048, offset: 768)
!5123 = !DIDerivedType(tag: DW_TAG_member, name: "language", scope: !5110, file: !61, line: 1051, baseType: !2910, size: 256, offset: 2816)
!5124 = !DIDerivedType(tag: DW_TAG_member, name: "sel_start", scope: !5110, file: !61, line: 1053, baseType: !98, size: 32, offset: 3072)
!5125 = !DIDerivedType(tag: DW_TAG_member, name: "sel_end", scope: !5110, file: !61, line: 1054, baseType: !98, size: 32, offset: 3104)
!5126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5127, size: 64)
!5127 = !DIDerivedType(tag: DW_TAG_typedef, name: "BLI_mempool", file: !5128, line: 47, baseType: !3752)
!5128 = !DIFile(filename: "blender/source/blender/blenlib/BLI_mempool.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!5129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5130, size: 64)
!5130 = !DIDerivedType(tag: DW_TAG_typedef, name: "FMod_Generator", file: !835, line: 117, baseType: !5131)
!5131 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FMod_Generator", file: !835, line: 107, size: 192, elements: !5132)
!5132 = !{!5133, !5134, !5135, !5136, !5137}
!5133 = !DIDerivedType(tag: DW_TAG_member, name: "coefficients", scope: !5131, file: !835, line: 109, baseType: !975, size: 64)
!5134 = !DIDerivedType(tag: DW_TAG_member, name: "arraysize", scope: !5131, file: !835, line: 110, baseType: !7, size: 32, offset: 64)
!5135 = !DIDerivedType(tag: DW_TAG_member, name: "poly_order", scope: !5131, file: !835, line: 112, baseType: !98, size: 32, offset: 96)
!5136 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !5131, file: !835, line: 113, baseType: !98, size: 32, offset: 128)
!5137 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !5131, file: !835, line: 116, baseType: !98, size: 32, offset: 160)
!5138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5139, size: 64)
!5139 = !DIDerivedType(tag: DW_TAG_typedef, name: "FMod_Envelope", file: !835, line: 182, baseType: !5140)
!5140 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FMod_Envelope", file: !835, line: 176, size: 192, elements: !5141)
!5141 = !{!5142, !5152, !5153, !5154, !5155}
!5142 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !5140, file: !835, line: 177, baseType: !5143, size: 64)
!5143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5144, size: 64)
!5144 = !DIDerivedType(tag: DW_TAG_typedef, name: "FCM_EnvelopeData", file: !835, line: 173, baseType: !5145)
!5145 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FCM_EnvelopeData", file: !835, line: 167, size: 128, elements: !5146)
!5146 = !{!5147, !5148, !5149, !5150, !5151}
!5147 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !5145, file: !835, line: 168, baseType: !396, size: 32)
!5148 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !5145, file: !835, line: 168, baseType: !396, size: 32, offset: 32)
!5149 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !5145, file: !835, line: 169, baseType: !396, size: 32, offset: 64)
!5150 = !DIDerivedType(tag: DW_TAG_member, name: "f1", scope: !5145, file: !835, line: 171, baseType: !399, size: 16, offset: 96)
!5151 = !DIDerivedType(tag: DW_TAG_member, name: "f2", scope: !5145, file: !835, line: 172, baseType: !399, size: 16, offset: 112)
!5152 = !DIDerivedType(tag: DW_TAG_member, name: "totvert", scope: !5140, file: !835, line: 178, baseType: !98, size: 32, offset: 64)
!5153 = !DIDerivedType(tag: DW_TAG_member, name: "midval", scope: !5140, file: !835, line: 180, baseType: !396, size: 32, offset: 96)
!5154 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !5140, file: !835, line: 181, baseType: !396, size: 32, offset: 128)
!5155 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !5140, file: !835, line: 181, baseType: !396, size: 32, offset: 160)
!5156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5157, size: 64)
!5157 = !DIDerivedType(tag: DW_TAG_typedef, name: "FMod_Python", file: !835, line: 207, baseType: !5158)
!5158 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FMod_Python", file: !835, line: 204, size: 128, elements: !5159)
!5159 = !{!5160, !5161}
!5160 = !DIDerivedType(tag: DW_TAG_member, name: "script", scope: !5158, file: !835, line: 205, baseType: !2877, size: 64)
!5161 = !DIDerivedType(tag: DW_TAG_member, name: "prop", scope: !5158, file: !835, line: 206, baseType: !1094, size: 64, offset: 64)
!5162 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5163, size: 64)
!5163 = !DIDerivedType(tag: DW_TAG_typedef, name: "CurvesModifierData", file: !97, line: 284, baseType: !5164)
!5164 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurvesModifierData", file: !97, line: 280, size: 3968, elements: !5165)
!5165 = !{!5166, !5180}
!5166 = !DIDerivedType(tag: DW_TAG_member, name: "modifier", scope: !5164, file: !97, line: 281, baseType: !5167, size: 896)
!5167 = !DIDerivedType(tag: DW_TAG_typedef, name: "SequenceModifierData", file: !97, line: 271, baseType: !5168)
!5168 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SequenceModifierData", file: !97, line: 261, size: 896, elements: !5169)
!5169 = !{!5170, !5172, !5173, !5174, !5175, !5176, !5177, !5178, !5179}
!5170 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !5168, file: !97, line: 262, baseType: !5171, size: 64)
!5171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5168, size: 64)
!5172 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !5168, file: !97, line: 262, baseType: !5171, size: 64, offset: 64)
!5173 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !5168, file: !97, line: 263, baseType: !98, size: 32, offset: 128)
!5174 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !5168, file: !97, line: 263, baseType: !98, size: 32, offset: 160)
!5175 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5168, file: !97, line: 264, baseType: !692, size: 512, offset: 192)
!5176 = !DIDerivedType(tag: DW_TAG_member, name: "mask_input_type", scope: !5168, file: !97, line: 267, baseType: !98, size: 32, offset: 704)
!5177 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !5168, file: !97, line: 267, baseType: !98, size: 32, offset: 736)
!5178 = !DIDerivedType(tag: DW_TAG_member, name: "mask_sequence", scope: !5168, file: !97, line: 269, baseType: !1973, size: 64, offset: 768)
!5179 = !DIDerivedType(tag: DW_TAG_member, name: "mask_id", scope: !5168, file: !97, line: 270, baseType: !2266, size: 64, offset: 832)
!5180 = !DIDerivedType(tag: DW_TAG_member, name: "curve_mapping", scope: !5164, file: !97, line: 283, baseType: !1800, size: 3072, offset: 896)
!5181 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5182, size: 64)
!5182 = !DIDerivedType(tag: DW_TAG_typedef, name: "HueCorrectModifierData", file: !97, line: 290, baseType: !5183)
!5183 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "HueCorrectModifierData", file: !97, line: 286, size: 3968, elements: !5184)
!5184 = !{!5185, !5186}
!5185 = !DIDerivedType(tag: DW_TAG_member, name: "modifier", scope: !5183, file: !97, line: 287, baseType: !5167, size: 896)
!5186 = !DIDerivedType(tag: DW_TAG_member, name: "curve_mapping", scope: !5183, file: !97, line: 289, baseType: !1800, size: 3072, offset: 896)
!5187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5188, size: 64)
!5188 = !DIDerivedType(tag: DW_TAG_typedef, name: "NodeShaderScript", file: !56, line: 838, baseType: !5189)
!5189 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "NodeShaderScript", file: !56, line: 830, size: 8832, elements: !5190)
!5190 = !{!5191, !5192, !5193, !5194, !5195}
!5191 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !5189, file: !56, line: 831, baseType: !98, size: 32)
!5192 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !5189, file: !56, line: 832, baseType: !98, size: 32, offset: 32)
!5193 = !DIDerivedType(tag: DW_TAG_member, name: "filepath", scope: !5189, file: !56, line: 834, baseType: !478, size: 8192, offset: 64)
!5194 = !DIDerivedType(tag: DW_TAG_member, name: "bytecode_hash", scope: !5189, file: !56, line: 836, baseType: !692, size: 512, offset: 8256)
!5195 = !DIDerivedType(tag: DW_TAG_member, name: "bytecode", scope: !5189, file: !56, line: 837, baseType: !501, size: 64, offset: 8768)
!5196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5197, size: 64)
!5197 = !DIDerivedType(tag: DW_TAG_typedef, name: "bNodeTree", file: !56, line: 391, baseType: !1065)
!5198 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5199, size: 64)
!5199 = !DIDerivedType(tag: DW_TAG_typedef, name: "bPythonConstraint", file: !5200, line: 126, baseType: !5201)
!5200 = !DIFile(filename: "blender/source/blender/makesdna/DNA_constraint_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!5201 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bPythonConstraint", file: !5200, line: 115, size: 896, elements: !5202)
!5202 = !{!5203, !5204, !5205, !5206, !5207, !5208, !5209}
!5203 = !DIDerivedType(tag: DW_TAG_member, name: "text", scope: !5201, file: !5200, line: 116, baseType: !2877, size: 64)
!5204 = !DIDerivedType(tag: DW_TAG_member, name: "prop", scope: !5201, file: !5200, line: 117, baseType: !1094, size: 64, offset: 64)
!5205 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !5201, file: !5200, line: 119, baseType: !98, size: 32, offset: 128)
!5206 = !DIDerivedType(tag: DW_TAG_member, name: "tarnum", scope: !5201, file: !5200, line: 120, baseType: !98, size: 32, offset: 160)
!5207 = !DIDerivedType(tag: DW_TAG_member, name: "targets", scope: !5201, file: !5200, line: 122, baseType: !388, size: 128, offset: 192)
!5208 = !DIDerivedType(tag: DW_TAG_member, name: "tar", scope: !5201, file: !5200, line: 124, baseType: !423, size: 64, offset: 320)
!5209 = !DIDerivedType(tag: DW_TAG_member, name: "subtarget", scope: !5201, file: !5200, line: 125, baseType: !692, size: 512, offset: 384)
!5210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5211, size: 64)
!5211 = !DIDerivedType(tag: DW_TAG_typedef, name: "bSplineIKConstraint", file: !5200, line: 176, baseType: !5212)
!5212 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bSplineIKConstraint", file: !5200, line: 164, size: 192, elements: !5213)
!5213 = !{!5214, !5215, !5216, !5217, !5218, !5219}
!5214 = !DIDerivedType(tag: DW_TAG_member, name: "tar", scope: !5212, file: !5200, line: 166, baseType: !423, size: 64)
!5215 = !DIDerivedType(tag: DW_TAG_member, name: "points", scope: !5212, file: !5200, line: 169, baseType: !975, size: 64, offset: 64)
!5216 = !DIDerivedType(tag: DW_TAG_member, name: "numpoints", scope: !5212, file: !5200, line: 170, baseType: !399, size: 16, offset: 128)
!5217 = !DIDerivedType(tag: DW_TAG_member, name: "chainlen", scope: !5212, file: !5200, line: 171, baseType: !399, size: 16, offset: 144)
!5218 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !5212, file: !5200, line: 174, baseType: !399, size: 16, offset: 160)
!5219 = !DIDerivedType(tag: DW_TAG_member, name: "xzScaleMode", scope: !5212, file: !5200, line: 175, baseType: !399, size: 16, offset: 176)
!5220 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5221, size: 64)
!5221 = !DIDerivedType(tag: DW_TAG_typedef, name: "HookModifierData", file: !263, line: 551, baseType: !5222)
!5222 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "HookModifierData", file: !263, line: 537, size: 2752, elements: !5223)
!5223 = !{!5224, !5225, !5226, !5227, !5228, !5229, !5230, !5231, !5232, !5233}
!5224 = !DIDerivedType(tag: DW_TAG_member, name: "modifier", scope: !5222, file: !263, line: 538, baseType: !3630, size: 896)
!5225 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !5222, file: !263, line: 540, baseType: !423, size: 64, offset: 896)
!5226 = !DIDerivedType(tag: DW_TAG_member, name: "subtarget", scope: !5222, file: !263, line: 541, baseType: !692, size: 512, offset: 960)
!5227 = !DIDerivedType(tag: DW_TAG_member, name: "parentinv", scope: !5222, file: !263, line: 543, baseType: !1752, size: 512, offset: 1472)
!5228 = !DIDerivedType(tag: DW_TAG_member, name: "cent", scope: !5222, file: !263, line: 544, baseType: !779, size: 96, offset: 1984)
!5229 = !DIDerivedType(tag: DW_TAG_member, name: "falloff", scope: !5222, file: !263, line: 545, baseType: !396, size: 32, offset: 2080)
!5230 = !DIDerivedType(tag: DW_TAG_member, name: "indexar", scope: !5222, file: !263, line: 547, baseType: !4127, size: 64, offset: 2112)
!5231 = !DIDerivedType(tag: DW_TAG_member, name: "totindex", scope: !5222, file: !263, line: 548, baseType: !98, size: 32, offset: 2176)
!5232 = !DIDerivedType(tag: DW_TAG_member, name: "force", scope: !5222, file: !263, line: 549, baseType: !396, size: 32, offset: 2208)
!5233 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5222, file: !263, line: 550, baseType: !692, size: 512, offset: 2240)
!5234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5235, size: 64)
!5235 = !DIDerivedType(tag: DW_TAG_typedef, name: "ClothModifierData", file: !263, line: 566, baseType: !3627)
!5236 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5237, size: 64)
!5237 = !DIDerivedType(tag: DW_TAG_typedef, name: "SmokeModifierData", file: !263, line: 356, baseType: !5238)
!5238 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SmokeModifierData", file: !263, line: 348, size: 1152, elements: !5239)
!5239 = !{!5240, !5241, !5315, !5345, !5355, !5356}
!5240 = !DIDerivedType(tag: DW_TAG_member, name: "modifier", scope: !5238, file: !263, line: 349, baseType: !3630, size: 896)
!5241 = !DIDerivedType(tag: DW_TAG_member, name: "domain", scope: !5238, file: !263, line: 351, baseType: !5242, size: 64, offset: 896)
!5242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5243, size: 64)
!5243 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SmokeDomainSettings", file: !5244, line: 82, size: 4672, elements: !5245)
!5244 = !DIFile(filename: "blender/source/blender/makesdna/DNA_smoke_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!5245 = !{!5246, !5248, !5251, !5252, !5253, !5254, !5255, !5258, !5259, !5260, !5261, !5262, !5263, !5264, !5265, !5266, !5267, !5268, !5269, !5270, !5271, !5272, !5273, !5274, !5275, !5276, !5277, !5278, !5279, !5280, !5281, !5282, !5283, !5284, !5285, !5286, !5287, !5288, !5289, !5290, !5291, !5292, !5293, !5294, !5295, !5296, !5297, !5298, !5300, !5302, !5303, !5304, !5305, !5306, !5307, !5308, !5309, !5310, !5311, !5312, !5313, !5314}
!5246 = !DIDerivedType(tag: DW_TAG_member, name: "smd", scope: !5243, file: !5244, line: 83, baseType: !5247, size: 64)
!5247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5238, size: 64)
!5248 = !DIDerivedType(tag: DW_TAG_member, name: "fluid", scope: !5243, file: !5244, line: 84, baseType: !5249, size: 64, offset: 64)
!5249 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5250, size: 64)
!5250 = !DICompositeType(tag: DW_TAG_structure_type, name: "FLUID_3D", file: !5244, line: 84, flags: DIFlagFwdDecl)
!5251 = !DIDerivedType(tag: DW_TAG_member, name: "fluid_mutex", scope: !5243, file: !5244, line: 85, baseType: !372, size: 64, offset: 128)
!5252 = !DIDerivedType(tag: DW_TAG_member, name: "fluid_group", scope: !5243, file: !5244, line: 86, baseType: !3061, size: 64, offset: 192)
!5253 = !DIDerivedType(tag: DW_TAG_member, name: "eff_group", scope: !5243, file: !5244, line: 87, baseType: !3061, size: 64, offset: 256)
!5254 = !DIDerivedType(tag: DW_TAG_member, name: "coll_group", scope: !5243, file: !5244, line: 88, baseType: !3061, size: 64, offset: 320)
!5255 = !DIDerivedType(tag: DW_TAG_member, name: "wt", scope: !5243, file: !5244, line: 89, baseType: !5256, size: 64, offset: 384)
!5256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5257, size: 64)
!5257 = !DICompositeType(tag: DW_TAG_structure_type, name: "WTURBULENCE", file: !5244, line: 89, flags: DIFlagFwdDecl)
!5258 = !DIDerivedType(tag: DW_TAG_member, name: "tex", scope: !5243, file: !5244, line: 90, baseType: !1664, size: 64, offset: 448)
!5259 = !DIDerivedType(tag: DW_TAG_member, name: "tex_wt", scope: !5243, file: !5244, line: 91, baseType: !1664, size: 64, offset: 512)
!5260 = !DIDerivedType(tag: DW_TAG_member, name: "tex_shadow", scope: !5243, file: !5244, line: 92, baseType: !1664, size: 64, offset: 576)
!5261 = !DIDerivedType(tag: DW_TAG_member, name: "tex_flame", scope: !5243, file: !5244, line: 93, baseType: !1664, size: 64, offset: 640)
!5262 = !DIDerivedType(tag: DW_TAG_member, name: "shadow", scope: !5243, file: !5244, line: 94, baseType: !975, size: 64, offset: 704)
!5263 = !DIDerivedType(tag: DW_TAG_member, name: "p0", scope: !5243, file: !5244, line: 97, baseType: !779, size: 96, offset: 768)
!5264 = !DIDerivedType(tag: DW_TAG_member, name: "p1", scope: !5243, file: !5244, line: 98, baseType: !779, size: 96, offset: 864)
!5265 = !DIDerivedType(tag: DW_TAG_member, name: "dp0", scope: !5243, file: !5244, line: 99, baseType: !779, size: 96, offset: 960)
!5266 = !DIDerivedType(tag: DW_TAG_member, name: "cell_size", scope: !5243, file: !5244, line: 100, baseType: !779, size: 96, offset: 1056)
!5267 = !DIDerivedType(tag: DW_TAG_member, name: "global_size", scope: !5243, file: !5244, line: 101, baseType: !779, size: 96, offset: 1152)
!5268 = !DIDerivedType(tag: DW_TAG_member, name: "prev_loc", scope: !5243, file: !5244, line: 102, baseType: !779, size: 96, offset: 1248)
!5269 = !DIDerivedType(tag: DW_TAG_member, name: "shift", scope: !5243, file: !5244, line: 103, baseType: !1842, size: 96, offset: 1344)
!5270 = !DIDerivedType(tag: DW_TAG_member, name: "shift_f", scope: !5243, file: !5244, line: 104, baseType: !779, size: 96, offset: 1440)
!5271 = !DIDerivedType(tag: DW_TAG_member, name: "obj_shift_f", scope: !5243, file: !5244, line: 105, baseType: !779, size: 96, offset: 1536)
!5272 = !DIDerivedType(tag: DW_TAG_member, name: "imat", scope: !5243, file: !5244, line: 106, baseType: !1752, size: 512, offset: 1632)
!5273 = !DIDerivedType(tag: DW_TAG_member, name: "obmat", scope: !5243, file: !5244, line: 107, baseType: !1752, size: 512, offset: 2144)
!5274 = !DIDerivedType(tag: DW_TAG_member, name: "base_res", scope: !5243, file: !5244, line: 109, baseType: !1842, size: 96, offset: 2656)
!5275 = !DIDerivedType(tag: DW_TAG_member, name: "res_min", scope: !5243, file: !5244, line: 110, baseType: !1842, size: 96, offset: 2752)
!5276 = !DIDerivedType(tag: DW_TAG_member, name: "res_max", scope: !5243, file: !5244, line: 111, baseType: !1842, size: 96, offset: 2848)
!5277 = !DIDerivedType(tag: DW_TAG_member, name: "res", scope: !5243, file: !5244, line: 112, baseType: !1842, size: 96, offset: 2944)
!5278 = !DIDerivedType(tag: DW_TAG_member, name: "total_cells", scope: !5243, file: !5244, line: 113, baseType: !98, size: 32, offset: 3040)
!5279 = !DIDerivedType(tag: DW_TAG_member, name: "dx", scope: !5243, file: !5244, line: 114, baseType: !396, size: 32, offset: 3072)
!5280 = !DIDerivedType(tag: DW_TAG_member, name: "scale", scope: !5243, file: !5244, line: 115, baseType: !396, size: 32, offset: 3104)
!5281 = !DIDerivedType(tag: DW_TAG_member, name: "adapt_margin", scope: !5243, file: !5244, line: 118, baseType: !98, size: 32, offset: 3136)
!5282 = !DIDerivedType(tag: DW_TAG_member, name: "adapt_res", scope: !5243, file: !5244, line: 119, baseType: !98, size: 32, offset: 3168)
!5283 = !DIDerivedType(tag: DW_TAG_member, name: "adapt_threshold", scope: !5243, file: !5244, line: 120, baseType: !396, size: 32, offset: 3200)
!5284 = !DIDerivedType(tag: DW_TAG_member, name: "alpha", scope: !5243, file: !5244, line: 122, baseType: !396, size: 32, offset: 3232)
!5285 = !DIDerivedType(tag: DW_TAG_member, name: "beta", scope: !5243, file: !5244, line: 123, baseType: !396, size: 32, offset: 3264)
!5286 = !DIDerivedType(tag: DW_TAG_member, name: "amplify", scope: !5243, file: !5244, line: 124, baseType: !98, size: 32, offset: 3296)
!5287 = !DIDerivedType(tag: DW_TAG_member, name: "maxres", scope: !5243, file: !5244, line: 125, baseType: !98, size: 32, offset: 3328)
!5288 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5243, file: !5244, line: 126, baseType: !98, size: 32, offset: 3360)
!5289 = !DIDerivedType(tag: DW_TAG_member, name: "viewsettings", scope: !5243, file: !5244, line: 127, baseType: !98, size: 32, offset: 3392)
!5290 = !DIDerivedType(tag: DW_TAG_member, name: "noise", scope: !5243, file: !5244, line: 128, baseType: !399, size: 16, offset: 3424)
!5291 = !DIDerivedType(tag: DW_TAG_member, name: "diss_percent", scope: !5243, file: !5244, line: 129, baseType: !399, size: 16, offset: 3440)
!5292 = !DIDerivedType(tag: DW_TAG_member, name: "diss_speed", scope: !5243, file: !5244, line: 130, baseType: !98, size: 32, offset: 3456)
!5293 = !DIDerivedType(tag: DW_TAG_member, name: "strength", scope: !5243, file: !5244, line: 131, baseType: !396, size: 32, offset: 3488)
!5294 = !DIDerivedType(tag: DW_TAG_member, name: "res_wt", scope: !5243, file: !5244, line: 132, baseType: !1842, size: 96, offset: 3520)
!5295 = !DIDerivedType(tag: DW_TAG_member, name: "dx_wt", scope: !5243, file: !5244, line: 133, baseType: !396, size: 32, offset: 3616)
!5296 = !DIDerivedType(tag: DW_TAG_member, name: "cache_comp", scope: !5243, file: !5244, line: 134, baseType: !98, size: 32, offset: 3648)
!5297 = !DIDerivedType(tag: DW_TAG_member, name: "cache_high_comp", scope: !5243, file: !5244, line: 135, baseType: !98, size: 32, offset: 3680)
!5298 = !DIDerivedType(tag: DW_TAG_member, name: "point_cache", scope: !5243, file: !5244, line: 138, baseType: !5299, size: 128, offset: 3712)
!5299 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3084, size: 128, elements: !1293)
!5300 = !DIDerivedType(tag: DW_TAG_member, name: "ptcaches", scope: !5243, file: !5244, line: 139, baseType: !5301, size: 256, offset: 3840)
!5301 = !DICompositeType(tag: DW_TAG_array_type, baseType: !390, size: 256, elements: !1293)
!5302 = !DIDerivedType(tag: DW_TAG_member, name: "effector_weights", scope: !5243, file: !5244, line: 140, baseType: !3056, size: 64, offset: 4096)
!5303 = !DIDerivedType(tag: DW_TAG_member, name: "border_collisions", scope: !5243, file: !5244, line: 141, baseType: !98, size: 32, offset: 4160)
!5304 = !DIDerivedType(tag: DW_TAG_member, name: "time_scale", scope: !5243, file: !5244, line: 142, baseType: !396, size: 32, offset: 4192)
!5305 = !DIDerivedType(tag: DW_TAG_member, name: "vorticity", scope: !5243, file: !5244, line: 143, baseType: !396, size: 32, offset: 4224)
!5306 = !DIDerivedType(tag: DW_TAG_member, name: "active_fields", scope: !5243, file: !5244, line: 144, baseType: !98, size: 32, offset: 4256)
!5307 = !DIDerivedType(tag: DW_TAG_member, name: "active_color", scope: !5243, file: !5244, line: 145, baseType: !779, size: 96, offset: 4288)
!5308 = !DIDerivedType(tag: DW_TAG_member, name: "highres_sampling", scope: !5243, file: !5244, line: 146, baseType: !98, size: 32, offset: 4384)
!5309 = !DIDerivedType(tag: DW_TAG_member, name: "burning_rate", scope: !5243, file: !5244, line: 149, baseType: !396, size: 32, offset: 4416)
!5310 = !DIDerivedType(tag: DW_TAG_member, name: "flame_smoke", scope: !5243, file: !5244, line: 149, baseType: !396, size: 32, offset: 4448)
!5311 = !DIDerivedType(tag: DW_TAG_member, name: "flame_vorticity", scope: !5243, file: !5244, line: 149, baseType: !396, size: 32, offset: 4480)
!5312 = !DIDerivedType(tag: DW_TAG_member, name: "flame_ignition", scope: !5243, file: !5244, line: 150, baseType: !396, size: 32, offset: 4512)
!5313 = !DIDerivedType(tag: DW_TAG_member, name: "flame_max_temp", scope: !5243, file: !5244, line: 150, baseType: !396, size: 32, offset: 4544)
!5314 = !DIDerivedType(tag: DW_TAG_member, name: "flame_smoke_color", scope: !5243, file: !5244, line: 151, baseType: !779, size: 96, offset: 4576)
!5315 = !DIDerivedType(tag: DW_TAG_member, name: "flow", scope: !5238, file: !263, line: 352, baseType: !5316, size: 64, offset: 960)
!5316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5317, size: 64)
!5317 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SmokeFlowSettings", file: !5244, line: 177, size: 1472, elements: !5318)
!5318 = !{!5319, !5320, !5321, !5322, !5323, !5324, !5325, !5326, !5327, !5328, !5329, !5330, !5331, !5332, !5333, !5334, !5335, !5336, !5337, !5338, !5339, !5340, !5341, !5342, !5343, !5344}
!5319 = !DIDerivedType(tag: DW_TAG_member, name: "smd", scope: !5317, file: !5244, line: 178, baseType: !5247, size: 64)
!5320 = !DIDerivedType(tag: DW_TAG_member, name: "dm", scope: !5317, file: !5244, line: 179, baseType: !3721, size: 64, offset: 64)
!5321 = !DIDerivedType(tag: DW_TAG_member, name: "psys", scope: !5317, file: !5244, line: 180, baseType: !3362, size: 64, offset: 128)
!5322 = !DIDerivedType(tag: DW_TAG_member, name: "noise_texture", scope: !5317, file: !5244, line: 181, baseType: !991, size: 64, offset: 192)
!5323 = !DIDerivedType(tag: DW_TAG_member, name: "verts_old", scope: !5317, file: !5244, line: 184, baseType: !975, size: 64, offset: 256)
!5324 = !DIDerivedType(tag: DW_TAG_member, name: "numverts", scope: !5317, file: !5244, line: 185, baseType: !98, size: 32, offset: 320)
!5325 = !DIDerivedType(tag: DW_TAG_member, name: "vel_multi", scope: !5317, file: !5244, line: 186, baseType: !396, size: 32, offset: 352)
!5326 = !DIDerivedType(tag: DW_TAG_member, name: "vel_normal", scope: !5317, file: !5244, line: 187, baseType: !396, size: 32, offset: 384)
!5327 = !DIDerivedType(tag: DW_TAG_member, name: "vel_random", scope: !5317, file: !5244, line: 188, baseType: !396, size: 32, offset: 416)
!5328 = !DIDerivedType(tag: DW_TAG_member, name: "density", scope: !5317, file: !5244, line: 190, baseType: !396, size: 32, offset: 448)
!5329 = !DIDerivedType(tag: DW_TAG_member, name: "color", scope: !5317, file: !5244, line: 191, baseType: !779, size: 96, offset: 480)
!5330 = !DIDerivedType(tag: DW_TAG_member, name: "fuel_amount", scope: !5317, file: !5244, line: 192, baseType: !396, size: 32, offset: 576)
!5331 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !5317, file: !5244, line: 193, baseType: !396, size: 32, offset: 608)
!5332 = !DIDerivedType(tag: DW_TAG_member, name: "volume_density", scope: !5317, file: !5244, line: 194, baseType: !396, size: 32, offset: 640)
!5333 = !DIDerivedType(tag: DW_TAG_member, name: "surface_distance", scope: !5317, file: !5244, line: 195, baseType: !396, size: 32, offset: 672)
!5334 = !DIDerivedType(tag: DW_TAG_member, name: "particle_size", scope: !5317, file: !5244, line: 196, baseType: !396, size: 32, offset: 704)
!5335 = !DIDerivedType(tag: DW_TAG_member, name: "subframes", scope: !5317, file: !5244, line: 197, baseType: !98, size: 32, offset: 736)
!5336 = !DIDerivedType(tag: DW_TAG_member, name: "texture_size", scope: !5317, file: !5244, line: 199, baseType: !396, size: 32, offset: 768)
!5337 = !DIDerivedType(tag: DW_TAG_member, name: "texture_offset", scope: !5317, file: !5244, line: 200, baseType: !396, size: 32, offset: 800)
!5338 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !5317, file: !5244, line: 201, baseType: !98, size: 32, offset: 832)
!5339 = !DIDerivedType(tag: DW_TAG_member, name: "uvlayer_name", scope: !5317, file: !5244, line: 202, baseType: !692, size: 512, offset: 864)
!5340 = !DIDerivedType(tag: DW_TAG_member, name: "vgroup_density", scope: !5317, file: !5244, line: 203, baseType: !399, size: 16, offset: 1376)
!5341 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !5317, file: !5244, line: 205, baseType: !399, size: 16, offset: 1392)
!5342 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !5317, file: !5244, line: 206, baseType: !399, size: 16, offset: 1408)
!5343 = !DIDerivedType(tag: DW_TAG_member, name: "texture_type", scope: !5317, file: !5244, line: 207, baseType: !399, size: 16, offset: 1424)
!5344 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5317, file: !5244, line: 208, baseType: !98, size: 32, offset: 1440)
!5345 = !DIDerivedType(tag: DW_TAG_member, name: "coll", scope: !5238, file: !263, line: 353, baseType: !5346, size: 64, offset: 1024)
!5346 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5347, size: 64)
!5347 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SmokeCollSettings", file: !5244, line: 217, size: 256, elements: !5348)
!5348 = !{!5349, !5350, !5351, !5352, !5353, !5354}
!5349 = !DIDerivedType(tag: DW_TAG_member, name: "smd", scope: !5347, file: !5244, line: 218, baseType: !5247, size: 64)
!5350 = !DIDerivedType(tag: DW_TAG_member, name: "dm", scope: !5347, file: !5244, line: 219, baseType: !3721, size: 64, offset: 64)
!5351 = !DIDerivedType(tag: DW_TAG_member, name: "verts_old", scope: !5347, file: !5244, line: 220, baseType: !975, size: 64, offset: 128)
!5352 = !DIDerivedType(tag: DW_TAG_member, name: "numverts", scope: !5347, file: !5244, line: 221, baseType: !98, size: 32, offset: 192)
!5353 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !5347, file: !5244, line: 222, baseType: !399, size: 16, offset: 224)
!5354 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !5347, file: !5244, line: 223, baseType: !399, size: 16, offset: 240)
!5355 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !5238, file: !263, line: 354, baseType: !396, size: 32, offset: 1088)
!5356 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !5238, file: !263, line: 355, baseType: !98, size: 32, offset: 1120)
!5357 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5358, size: 64)
!5358 = !DIDerivedType(tag: DW_TAG_typedef, name: "FluidsimModifierData", file: !263, line: 734, baseType: !5359)
!5359 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FluidsimModifierData", file: !263, line: 729, size: 1024, elements: !5360)
!5360 = !{!5361, !5362, !5363}
!5361 = !DIDerivedType(tag: DW_TAG_member, name: "modifier", scope: !5359, file: !263, line: 730, baseType: !3630, size: 896)
!5362 = !DIDerivedType(tag: DW_TAG_member, name: "fss", scope: !5359, file: !263, line: 732, baseType: !4693, size: 64, offset: 896)
!5363 = !DIDerivedType(tag: DW_TAG_member, name: "point_cache", scope: !5359, file: !263, line: 733, baseType: !3084, size: 64, offset: 960)
!5364 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5365, size: 64)
!5365 = !DIDerivedType(tag: DW_TAG_typedef, name: "DynamicPaintModifierData", file: !263, line: 1140, baseType: !5366)
!5366 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DynamicPaintModifierData", file: !263, line: 1133, size: 1088, elements: !5367)
!5367 = !{!5368, !5369, !5382, !5410, !5411}
!5368 = !DIDerivedType(tag: DW_TAG_member, name: "modifier", scope: !5366, file: !263, line: 1134, baseType: !3630, size: 896)
!5369 = !DIDerivedType(tag: DW_TAG_member, name: "canvas", scope: !5366, file: !263, line: 1136, baseType: !5370, size: 64, offset: 896)
!5370 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5371, size: 64)
!5371 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DynamicPaintCanvasSettings", file: !5372, line: 146, size: 832, elements: !5373)
!5372 = !DIFile(filename: "blender/source/blender/makesdna/DNA_dynamicpaint_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!5373 = !{!5374, !5376, !5377, !5378, !5379, !5380, !5381}
!5374 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !5371, file: !5372, line: 147, baseType: !5375, size: 64)
!5375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5366, size: 64)
!5376 = !DIDerivedType(tag: DW_TAG_member, name: "dm", scope: !5371, file: !5372, line: 148, baseType: !3721, size: 64, offset: 64)
!5377 = !DIDerivedType(tag: DW_TAG_member, name: "surfaces", scope: !5371, file: !5372, line: 150, baseType: !390, size: 128, offset: 128)
!5378 = !DIDerivedType(tag: DW_TAG_member, name: "active_sur", scope: !5371, file: !5372, line: 151, baseType: !399, size: 16, offset: 256)
!5379 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5371, file: !5372, line: 151, baseType: !399, size: 16, offset: 272)
!5380 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !5371, file: !5372, line: 152, baseType: !98, size: 32, offset: 288)
!5381 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !5371, file: !5372, line: 154, baseType: !692, size: 512, offset: 320)
!5382 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !5366, file: !263, line: 1137, baseType: !5383, size: 64, offset: 960)
!5383 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5384, size: 64)
!5384 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DynamicPaintBrushSettings", file: !5372, line: 203, size: 896, elements: !5385)
!5385 = !{!5386, !5387, !5388, !5389, !5390, !5391, !5392, !5393, !5394, !5395, !5396, !5397, !5398, !5399, !5400, !5401, !5402, !5403, !5404, !5405, !5406, !5407, !5408, !5409}
!5386 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !5384, file: !5372, line: 204, baseType: !5375, size: 64)
!5387 = !DIDerivedType(tag: DW_TAG_member, name: "dm", scope: !5384, file: !5372, line: 205, baseType: !3721, size: 64, offset: 64)
!5388 = !DIDerivedType(tag: DW_TAG_member, name: "psys", scope: !5384, file: !5372, line: 206, baseType: !3362, size: 64, offset: 128)
!5389 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !5384, file: !5372, line: 207, baseType: !3784, size: 64, offset: 192)
!5390 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5384, file: !5372, line: 209, baseType: !98, size: 32, offset: 256)
!5391 = !DIDerivedType(tag: DW_TAG_member, name: "collision", scope: !5384, file: !5372, line: 210, baseType: !98, size: 32, offset: 288)
!5392 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !5384, file: !5372, line: 212, baseType: !396, size: 32, offset: 320)
!5393 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !5384, file: !5372, line: 212, baseType: !396, size: 32, offset: 352)
!5394 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !5384, file: !5372, line: 212, baseType: !396, size: 32, offset: 384)
!5395 = !DIDerivedType(tag: DW_TAG_member, name: "alpha", scope: !5384, file: !5372, line: 212, baseType: !396, size: 32, offset: 416)
!5396 = !DIDerivedType(tag: DW_TAG_member, name: "wetness", scope: !5384, file: !5372, line: 213, baseType: !396, size: 32, offset: 448)
!5397 = !DIDerivedType(tag: DW_TAG_member, name: "particle_radius", scope: !5384, file: !5372, line: 215, baseType: !396, size: 32, offset: 480)
!5398 = !DIDerivedType(tag: DW_TAG_member, name: "particle_smooth", scope: !5384, file: !5372, line: 215, baseType: !396, size: 32, offset: 512)
!5399 = !DIDerivedType(tag: DW_TAG_member, name: "paint_distance", scope: !5384, file: !5372, line: 216, baseType: !396, size: 32, offset: 544)
!5400 = !DIDerivedType(tag: DW_TAG_member, name: "paint_ramp", scope: !5384, file: !5372, line: 219, baseType: !1740, size: 64, offset: 576)
!5401 = !DIDerivedType(tag: DW_TAG_member, name: "vel_ramp", scope: !5384, file: !5372, line: 220, baseType: !1740, size: 64, offset: 640)
!5402 = !DIDerivedType(tag: DW_TAG_member, name: "proximity_falloff", scope: !5384, file: !5372, line: 222, baseType: !399, size: 16, offset: 704)
!5403 = !DIDerivedType(tag: DW_TAG_member, name: "wave_type", scope: !5384, file: !5372, line: 223, baseType: !399, size: 16, offset: 720)
!5404 = !DIDerivedType(tag: DW_TAG_member, name: "ray_dir", scope: !5384, file: !5372, line: 224, baseType: !399, size: 16, offset: 736)
!5405 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !5384, file: !5372, line: 225, baseType: !399, size: 16, offset: 752)
!5406 = !DIDerivedType(tag: DW_TAG_member, name: "wave_factor", scope: !5384, file: !5372, line: 227, baseType: !396, size: 32, offset: 768)
!5407 = !DIDerivedType(tag: DW_TAG_member, name: "wave_clamp", scope: !5384, file: !5372, line: 227, baseType: !396, size: 32, offset: 800)
!5408 = !DIDerivedType(tag: DW_TAG_member, name: "max_velocity", scope: !5384, file: !5372, line: 228, baseType: !396, size: 32, offset: 832)
!5409 = !DIDerivedType(tag: DW_TAG_member, name: "smudge_strength", scope: !5384, file: !5372, line: 228, baseType: !396, size: 32, offset: 864)
!5410 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !5366, file: !263, line: 1138, baseType: !98, size: 32, offset: 1024)
!5411 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !5366, file: !263, line: 1139, baseType: !98, size: 32, offset: 1056)
!5412 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5413, size: 64)
!5413 = !DIDerivedType(tag: DW_TAG_typedef, name: "MeshDeformModifierData", file: !263, line: 653, baseType: !5414)
!5414 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MeshDeformModifierData", file: !263, line: 622, size: 2880, elements: !5415)
!5415 = !{!5416, !5417, !5418, !5419, !5420, !5421, !5422, !5429, !5430, !5431, !5432, !5433, !5440, !5441, !5442, !5443, !5444, !5445, !5446, !5447, !5448, !5449}
!5416 = !DIDerivedType(tag: DW_TAG_member, name: "modifier", scope: !5414, file: !263, line: 623, baseType: !3630, size: 896)
!5417 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !5414, file: !263, line: 625, baseType: !423, size: 64, offset: 896)
!5418 = !DIDerivedType(tag: DW_TAG_member, name: "defgrp_name", scope: !5414, file: !263, line: 626, baseType: !692, size: 512, offset: 960)
!5419 = !DIDerivedType(tag: DW_TAG_member, name: "gridsize", scope: !5414, file: !263, line: 628, baseType: !399, size: 16, offset: 1472)
!5420 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !5414, file: !263, line: 628, baseType: !399, size: 16, offset: 1488)
!5421 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !5414, file: !263, line: 628, baseType: !1292, size: 32, offset: 1504)
!5422 = !DIDerivedType(tag: DW_TAG_member, name: "bindinfluences", scope: !5414, file: !263, line: 631, baseType: !5423, size: 64, offset: 1536)
!5423 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5424, size: 64)
!5424 = !DIDerivedType(tag: DW_TAG_typedef, name: "MDefInfluence", file: !263, line: 615, baseType: !5425)
!5425 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MDefInfluence", file: !263, line: 612, size: 64, elements: !5426)
!5426 = !{!5427, !5428}
!5427 = !DIDerivedType(tag: DW_TAG_member, name: "vertex", scope: !5425, file: !263, line: 613, baseType: !98, size: 32)
!5428 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !5425, file: !263, line: 614, baseType: !396, size: 32, offset: 32)
!5429 = !DIDerivedType(tag: DW_TAG_member, name: "bindoffsets", scope: !5414, file: !263, line: 632, baseType: !4127, size: 64, offset: 1600)
!5430 = !DIDerivedType(tag: DW_TAG_member, name: "bindcagecos", scope: !5414, file: !263, line: 633, baseType: !975, size: 64, offset: 1664)
!5431 = !DIDerivedType(tag: DW_TAG_member, name: "totvert", scope: !5414, file: !263, line: 634, baseType: !98, size: 32, offset: 1728)
!5432 = !DIDerivedType(tag: DW_TAG_member, name: "totcagevert", scope: !5414, file: !263, line: 634, baseType: !98, size: 32, offset: 1760)
!5433 = !DIDerivedType(tag: DW_TAG_member, name: "dyngrid", scope: !5414, file: !263, line: 637, baseType: !5434, size: 64, offset: 1792)
!5434 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5435, size: 64)
!5435 = !DIDerivedType(tag: DW_TAG_typedef, name: "MDefCell", file: !263, line: 620, baseType: !5436)
!5436 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MDefCell", file: !263, line: 617, size: 64, elements: !5437)
!5437 = !{!5438, !5439}
!5438 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !5436, file: !263, line: 618, baseType: !98, size: 32)
!5439 = !DIDerivedType(tag: DW_TAG_member, name: "totinfluence", scope: !5436, file: !263, line: 619, baseType: !98, size: 32, offset: 32)
!5440 = !DIDerivedType(tag: DW_TAG_member, name: "dyninfluences", scope: !5414, file: !263, line: 638, baseType: !5423, size: 64, offset: 1856)
!5441 = !DIDerivedType(tag: DW_TAG_member, name: "dynverts", scope: !5414, file: !263, line: 639, baseType: !4127, size: 64, offset: 1920)
!5442 = !DIDerivedType(tag: DW_TAG_member, name: "dyngridsize", scope: !5414, file: !263, line: 640, baseType: !98, size: 32, offset: 1984)
!5443 = !DIDerivedType(tag: DW_TAG_member, name: "totinfluence", scope: !5414, file: !263, line: 641, baseType: !98, size: 32, offset: 2016)
!5444 = !DIDerivedType(tag: DW_TAG_member, name: "dyncellmin", scope: !5414, file: !263, line: 642, baseType: !779, size: 96, offset: 2048)
!5445 = !DIDerivedType(tag: DW_TAG_member, name: "dyncellwidth", scope: !5414, file: !263, line: 643, baseType: !396, size: 32, offset: 2144)
!5446 = !DIDerivedType(tag: DW_TAG_member, name: "bindmat", scope: !5414, file: !263, line: 644, baseType: !1752, size: 512, offset: 2176)
!5447 = !DIDerivedType(tag: DW_TAG_member, name: "bindweights", scope: !5414, file: !263, line: 647, baseType: !975, size: 64, offset: 2688)
!5448 = !DIDerivedType(tag: DW_TAG_member, name: "bindcos", scope: !5414, file: !263, line: 648, baseType: !975, size: 64, offset: 2752)
!5449 = !DIDerivedType(tag: DW_TAG_member, name: "bindfunc", scope: !5414, file: !263, line: 651, baseType: !5450, size: 64, offset: 2816)
!5450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5451, size: 64)
!5451 = !DISubroutineType(types: !5452)
!5452 = !{null, !827, !5453, !975, !98, !4217}
!5453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5414, size: 64)
!5454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5455, size: 64)
!5455 = !DIDerivedType(tag: DW_TAG_typedef, name: "WarpModifierData", file: !263, line: 958, baseType: !5456)
!5456 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "WarpModifierData", file: !263, line: 939, size: 2432, elements: !5457)
!5457 = !{!5458, !5459, !5460, !5461, !5462, !5463, !5464, !5465, !5466, !5467, !5468, !5469, !5470, !5471, !5472}
!5458 = !DIDerivedType(tag: DW_TAG_member, name: "modifier", scope: !5456, file: !263, line: 940, baseType: !3630, size: 896)
!5459 = !DIDerivedType(tag: DW_TAG_member, name: "texture", scope: !5456, file: !263, line: 942, baseType: !991, size: 64, offset: 896)
!5460 = !DIDerivedType(tag: DW_TAG_member, name: "map_object", scope: !5456, file: !263, line: 943, baseType: !423, size: 64, offset: 960)
!5461 = !DIDerivedType(tag: DW_TAG_member, name: "uvlayer_name", scope: !5456, file: !263, line: 944, baseType: !692, size: 512, offset: 1024)
!5462 = !DIDerivedType(tag: DW_TAG_member, name: "uvlayer_tmp", scope: !5456, file: !263, line: 945, baseType: !98, size: 32, offset: 1536)
!5463 = !DIDerivedType(tag: DW_TAG_member, name: "texmapping", scope: !5456, file: !263, line: 946, baseType: !98, size: 32, offset: 1568)
!5464 = !DIDerivedType(tag: DW_TAG_member, name: "object_from", scope: !5456, file: !263, line: 949, baseType: !423, size: 64, offset: 1600)
!5465 = !DIDerivedType(tag: DW_TAG_member, name: "object_to", scope: !5456, file: !263, line: 950, baseType: !423, size: 64, offset: 1664)
!5466 = !DIDerivedType(tag: DW_TAG_member, name: "curfalloff", scope: !5456, file: !263, line: 951, baseType: !1799, size: 64, offset: 1728)
!5467 = !DIDerivedType(tag: DW_TAG_member, name: "defgrp_name", scope: !5456, file: !263, line: 952, baseType: !692, size: 512, offset: 1792)
!5468 = !DIDerivedType(tag: DW_TAG_member, name: "strength", scope: !5456, file: !263, line: 953, baseType: !396, size: 32, offset: 2304)
!5469 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_radius", scope: !5456, file: !263, line: 954, baseType: !396, size: 32, offset: 2336)
!5470 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !5456, file: !263, line: 955, baseType: !375, size: 8, offset: 2368)
!5471 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_type", scope: !5456, file: !263, line: 956, baseType: !375, size: 8, offset: 2376)
!5472 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !5456, file: !263, line: 957, baseType: !2682, size: 48, offset: 2384)
!5473 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5474, size: 64)
!5474 = !DIDerivedType(tag: DW_TAG_typedef, name: "WeightVGEditModifierData", file: !263, line: 1002, baseType: !5475)
!5475 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "WeightVGEditModifierData", file: !263, line: 974, size: 2880, elements: !5476)
!5476 = !{!5477, !5478, !5479, !5480, !5481, !5482, !5483, !5484, !5485, !5486, !5487, !5488, !5489, !5490, !5491, !5492}
!5477 = !DIDerivedType(tag: DW_TAG_member, name: "modifier", scope: !5475, file: !263, line: 975, baseType: !3630, size: 896)
!5478 = !DIDerivedType(tag: DW_TAG_member, name: "defgrp_name", scope: !5475, file: !263, line: 977, baseType: !692, size: 512, offset: 896)
!5479 = !DIDerivedType(tag: DW_TAG_member, name: "edit_flags", scope: !5475, file: !263, line: 979, baseType: !399, size: 16, offset: 1408)
!5480 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_type", scope: !5475, file: !263, line: 980, baseType: !399, size: 16, offset: 1424)
!5481 = !DIDerivedType(tag: DW_TAG_member, name: "default_weight", scope: !5475, file: !263, line: 981, baseType: !396, size: 32, offset: 1440)
!5482 = !DIDerivedType(tag: DW_TAG_member, name: "cmap_curve", scope: !5475, file: !263, line: 984, baseType: !1799, size: 64, offset: 1472)
!5483 = !DIDerivedType(tag: DW_TAG_member, name: "add_threshold", scope: !5475, file: !263, line: 987, baseType: !396, size: 32, offset: 1536)
!5484 = !DIDerivedType(tag: DW_TAG_member, name: "rem_threshold", scope: !5475, file: !263, line: 987, baseType: !396, size: 32, offset: 1568)
!5485 = !DIDerivedType(tag: DW_TAG_member, name: "mask_constant", scope: !5475, file: !263, line: 990, baseType: !396, size: 32, offset: 1600)
!5486 = !DIDerivedType(tag: DW_TAG_member, name: "mask_defgrp_name", scope: !5475, file: !263, line: 991, baseType: !692, size: 512, offset: 1632)
!5487 = !DIDerivedType(tag: DW_TAG_member, name: "mask_tex_use_channel", scope: !5475, file: !263, line: 994, baseType: !98, size: 32, offset: 2144)
!5488 = !DIDerivedType(tag: DW_TAG_member, name: "mask_texture", scope: !5475, file: !263, line: 995, baseType: !991, size: 64, offset: 2176)
!5489 = !DIDerivedType(tag: DW_TAG_member, name: "mask_tex_map_obj", scope: !5475, file: !263, line: 996, baseType: !423, size: 64, offset: 2240)
!5490 = !DIDerivedType(tag: DW_TAG_member, name: "mask_tex_mapping", scope: !5475, file: !263, line: 997, baseType: !98, size: 32, offset: 2304)
!5491 = !DIDerivedType(tag: DW_TAG_member, name: "mask_tex_uvlayer_name", scope: !5475, file: !263, line: 998, baseType: !692, size: 512, offset: 2336)
!5492 = !DIDerivedType(tag: DW_TAG_member, name: "pad_i1", scope: !5475, file: !263, line: 1001, baseType: !98, size: 32, offset: 2848)
!5493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5494, size: 64)
!5494 = !DIDerivedType(tag: DW_TAG_typedef, name: "LaplacianDeformModifierData", file: !263, line: 1341, baseType: !5495)
!5495 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "LaplacianDeformModifierData", file: !263, line: 1333, size: 1664, elements: !5496)
!5496 = !{!5497, !5498, !5499, !5500, !5501, !5502, !5503, !5504}
!5497 = !DIDerivedType(tag: DW_TAG_member, name: "modifier", scope: !5495, file: !263, line: 1334, baseType: !3630, size: 896)
!5498 = !DIDerivedType(tag: DW_TAG_member, name: "anchor_grp_name", scope: !5495, file: !263, line: 1335, baseType: !692, size: 512, offset: 896)
!5499 = !DIDerivedType(tag: DW_TAG_member, name: "total_verts", scope: !5495, file: !263, line: 1336, baseType: !98, size: 32, offset: 1408)
!5500 = !DIDerivedType(tag: DW_TAG_member, name: "repeat", scope: !5495, file: !263, line: 1336, baseType: !98, size: 32, offset: 1440)
!5501 = !DIDerivedType(tag: DW_TAG_member, name: "vertexco", scope: !5495, file: !263, line: 1337, baseType: !975, size: 64, offset: 1472)
!5502 = !DIDerivedType(tag: DW_TAG_member, name: "cache_system", scope: !5495, file: !263, line: 1338, baseType: !372, size: 64, offset: 1536)
!5503 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !5495, file: !263, line: 1339, baseType: !399, size: 16, offset: 1600)
!5504 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !5495, file: !263, line: 1339, baseType: !811, size: 48, offset: 1616)
!5505 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5506, size: 64)
!5506 = !DIDerivedType(tag: DW_TAG_typedef, name: "LineStyleColorModifier_AlongStroke", file: !5507, line: 111, baseType: !5508)
!5507 = !DIFile(filename: "blender/source/blender/makesdna/DNA_linestyle_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!5508 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "LineStyleColorModifier_AlongStroke", file: !5507, line: 107, size: 832, elements: !5509)
!5509 = !{!5510, !5521}
!5510 = !DIDerivedType(tag: DW_TAG_member, name: "modifier", scope: !5508, file: !5507, line: 108, baseType: !5511, size: 768)
!5511 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "LineStyleModifier", file: !5507, line: 52, size: 768, elements: !5512)
!5512 = !{!5513, !5515, !5516, !5517, !5518, !5519, !5520}
!5513 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !5511, file: !5507, line: 53, baseType: !5514, size: 64)
!5514 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5511, size: 64)
!5515 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !5511, file: !5507, line: 53, baseType: !5514, size: 64, offset: 64)
!5516 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5511, file: !5507, line: 55, baseType: !692, size: 512, offset: 128)
!5517 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !5511, file: !5507, line: 56, baseType: !98, size: 32, offset: 640)
!5518 = !DIDerivedType(tag: DW_TAG_member, name: "influence", scope: !5511, file: !5507, line: 57, baseType: !396, size: 32, offset: 672)
!5519 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5511, file: !5507, line: 58, baseType: !98, size: 32, offset: 704)
!5520 = !DIDerivedType(tag: DW_TAG_member, name: "blend", scope: !5511, file: !5507, line: 59, baseType: !98, size: 32, offset: 736)
!5521 = !DIDerivedType(tag: DW_TAG_member, name: "color_ramp", scope: !5508, file: !5507, line: 110, baseType: !1740, size: 64, offset: 768)
!5522 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5523, size: 64)
!5523 = !DIDerivedType(tag: DW_TAG_typedef, name: "LineStyleColorModifier_DistanceFromCamera", file: !5507, line: 137, baseType: !5524)
!5524 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "LineStyleColorModifier_DistanceFromCamera", file: !5507, line: 132, size: 896, elements: !5525)
!5525 = !{!5526, !5527, !5528, !5529}
!5526 = !DIDerivedType(tag: DW_TAG_member, name: "modifier", scope: !5524, file: !5507, line: 133, baseType: !5511, size: 768)
!5527 = !DIDerivedType(tag: DW_TAG_member, name: "color_ramp", scope: !5524, file: !5507, line: 135, baseType: !1740, size: 64, offset: 768)
!5528 = !DIDerivedType(tag: DW_TAG_member, name: "range_min", scope: !5524, file: !5507, line: 136, baseType: !396, size: 32, offset: 832)
!5529 = !DIDerivedType(tag: DW_TAG_member, name: "range_max", scope: !5524, file: !5507, line: 136, baseType: !396, size: 32, offset: 864)
!5530 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5531, size: 64)
!5531 = !DIDerivedType(tag: DW_TAG_typedef, name: "LineStyleColorModifier_DistanceFromObject", file: !5507, line: 166, baseType: !5532)
!5532 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "LineStyleColorModifier_DistanceFromObject", file: !5507, line: 160, size: 960, elements: !5533)
!5533 = !{!5534, !5535, !5536, !5537, !5538}
!5534 = !DIDerivedType(tag: DW_TAG_member, name: "modifier", scope: !5532, file: !5507, line: 161, baseType: !5511, size: 768)
!5535 = !DIDerivedType(tag: DW_TAG_member, name: "target", scope: !5532, file: !5507, line: 163, baseType: !423, size: 64, offset: 768)
!5536 = !DIDerivedType(tag: DW_TAG_member, name: "color_ramp", scope: !5532, file: !5507, line: 164, baseType: !1740, size: 64, offset: 832)
!5537 = !DIDerivedType(tag: DW_TAG_member, name: "range_min", scope: !5532, file: !5507, line: 165, baseType: !396, size: 32, offset: 896)
!5538 = !DIDerivedType(tag: DW_TAG_member, name: "range_max", scope: !5532, file: !5507, line: 165, baseType: !396, size: 32, offset: 928)
!5539 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5540, size: 64)
!5540 = !DIDerivedType(tag: DW_TAG_typedef, name: "LineStyleColorModifier_Material", file: !5507, line: 214, baseType: !5541)
!5541 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "LineStyleColorModifier_Material", file: !5507, line: 208, size: 896, elements: !5542)
!5542 = !{!5543, !5544, !5545, !5546}
!5543 = !DIDerivedType(tag: DW_TAG_member, name: "modifier", scope: !5541, file: !5507, line: 209, baseType: !5511, size: 768)
!5544 = !DIDerivedType(tag: DW_TAG_member, name: "color_ramp", scope: !5541, file: !5507, line: 211, baseType: !1740, size: 64, offset: 768)
!5545 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5541, file: !5507, line: 212, baseType: !98, size: 32, offset: 832)
!5546 = !DIDerivedType(tag: DW_TAG_member, name: "mat_attr", scope: !5541, file: !5507, line: 213, baseType: !98, size: 32, offset: 864)
!5547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5548, size: 64)
!5548 = !DIDerivedType(tag: DW_TAG_typedef, name: "LineStyleAlphaModifier_AlongStroke", file: !5507, line: 119, baseType: !5549)
!5549 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "LineStyleAlphaModifier_AlongStroke", file: !5507, line: 113, size: 896, elements: !5550)
!5550 = !{!5551, !5552, !5553, !5554}
!5551 = !DIDerivedType(tag: DW_TAG_member, name: "modifier", scope: !5549, file: !5507, line: 114, baseType: !5511, size: 768)
!5552 = !DIDerivedType(tag: DW_TAG_member, name: "curve", scope: !5549, file: !5507, line: 116, baseType: !1799, size: 64, offset: 768)
!5553 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5549, file: !5507, line: 117, baseType: !98, size: 32, offset: 832)
!5554 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !5549, file: !5507, line: 118, baseType: !98, size: 32, offset: 864)
!5555 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5556, size: 64)
!5556 = !DIDerivedType(tag: DW_TAG_typedef, name: "LineStyleAlphaModifier_DistanceFromCamera", file: !5507, line: 146, baseType: !5557)
!5557 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "LineStyleAlphaModifier_DistanceFromCamera", file: !5507, line: 139, size: 960, elements: !5558)
!5558 = !{!5559, !5560, !5561, !5562, !5563, !5564}
!5559 = !DIDerivedType(tag: DW_TAG_member, name: "modifier", scope: !5557, file: !5507, line: 140, baseType: !5511, size: 768)
!5560 = !DIDerivedType(tag: DW_TAG_member, name: "curve", scope: !5557, file: !5507, line: 142, baseType: !1799, size: 64, offset: 768)
!5561 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5557, file: !5507, line: 143, baseType: !98, size: 32, offset: 832)
!5562 = !DIDerivedType(tag: DW_TAG_member, name: "range_min", scope: !5557, file: !5507, line: 144, baseType: !396, size: 32, offset: 864)
!5563 = !DIDerivedType(tag: DW_TAG_member, name: "range_max", scope: !5557, file: !5507, line: 144, baseType: !396, size: 32, offset: 896)
!5564 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !5557, file: !5507, line: 145, baseType: !98, size: 32, offset: 928)
!5565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5566, size: 64)
!5566 = !DIDerivedType(tag: DW_TAG_typedef, name: "LineStyleAlphaModifier_DistanceFromObject", file: !5507, line: 176, baseType: !5567)
!5567 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "LineStyleAlphaModifier_DistanceFromObject", file: !5507, line: 168, size: 1024, elements: !5568)
!5568 = !{!5569, !5570, !5571, !5572, !5573, !5574, !5575}
!5569 = !DIDerivedType(tag: DW_TAG_member, name: "modifier", scope: !5567, file: !5507, line: 169, baseType: !5511, size: 768)
!5570 = !DIDerivedType(tag: DW_TAG_member, name: "target", scope: !5567, file: !5507, line: 171, baseType: !423, size: 64, offset: 768)
!5571 = !DIDerivedType(tag: DW_TAG_member, name: "curve", scope: !5567, file: !5507, line: 172, baseType: !1799, size: 64, offset: 832)
!5572 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5567, file: !5507, line: 173, baseType: !98, size: 32, offset: 896)
!5573 = !DIDerivedType(tag: DW_TAG_member, name: "range_min", scope: !5567, file: !5507, line: 174, baseType: !396, size: 32, offset: 928)
!5574 = !DIDerivedType(tag: DW_TAG_member, name: "range_max", scope: !5567, file: !5507, line: 174, baseType: !396, size: 32, offset: 960)
!5575 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !5567, file: !5507, line: 175, baseType: !98, size: 32, offset: 992)
!5576 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5577, size: 64)
!5577 = !DIDerivedType(tag: DW_TAG_typedef, name: "LineStyleAlphaModifier_Material", file: !5507, line: 222, baseType: !5578)
!5578 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "LineStyleAlphaModifier_Material", file: !5507, line: 216, size: 896, elements: !5579)
!5579 = !{!5580, !5581, !5582, !5583}
!5580 = !DIDerivedType(tag: DW_TAG_member, name: "modifier", scope: !5578, file: !5507, line: 217, baseType: !5511, size: 768)
!5581 = !DIDerivedType(tag: DW_TAG_member, name: "curve", scope: !5578, file: !5507, line: 219, baseType: !1799, size: 64, offset: 768)
!5582 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5578, file: !5507, line: 220, baseType: !98, size: 32, offset: 832)
!5583 = !DIDerivedType(tag: DW_TAG_member, name: "mat_attr", scope: !5578, file: !5507, line: 221, baseType: !98, size: 32, offset: 864)
!5584 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5585, size: 64)
!5585 = !DIDerivedType(tag: DW_TAG_typedef, name: "LineStyleThicknessModifier_AlongStroke", file: !5507, line: 128, baseType: !5586)
!5586 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "LineStyleThicknessModifier_AlongStroke", file: !5507, line: 121, size: 960, elements: !5587)
!5587 = !{!5588, !5589, !5590, !5591, !5592, !5593}
!5588 = !DIDerivedType(tag: DW_TAG_member, name: "modifier", scope: !5586, file: !5507, line: 122, baseType: !5511, size: 768)
!5589 = !DIDerivedType(tag: DW_TAG_member, name: "curve", scope: !5586, file: !5507, line: 124, baseType: !1799, size: 64, offset: 768)
!5590 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5586, file: !5507, line: 125, baseType: !98, size: 32, offset: 832)
!5591 = !DIDerivedType(tag: DW_TAG_member, name: "value_min", scope: !5586, file: !5507, line: 126, baseType: !396, size: 32, offset: 864)
!5592 = !DIDerivedType(tag: DW_TAG_member, name: "value_max", scope: !5586, file: !5507, line: 126, baseType: !396, size: 32, offset: 896)
!5593 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !5586, file: !5507, line: 127, baseType: !98, size: 32, offset: 928)
!5594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5595, size: 64)
!5595 = !DIDerivedType(tag: DW_TAG_typedef, name: "LineStyleThicknessModifier_DistanceFromCamera", file: !5507, line: 156, baseType: !5596)
!5596 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "LineStyleThicknessModifier_DistanceFromCamera", file: !5507, line: 148, size: 1024, elements: !5597)
!5597 = !{!5598, !5599, !5600, !5601, !5602, !5603, !5604, !5605}
!5598 = !DIDerivedType(tag: DW_TAG_member, name: "modifier", scope: !5596, file: !5507, line: 149, baseType: !5511, size: 768)
!5599 = !DIDerivedType(tag: DW_TAG_member, name: "curve", scope: !5596, file: !5507, line: 151, baseType: !1799, size: 64, offset: 768)
!5600 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5596, file: !5507, line: 152, baseType: !98, size: 32, offset: 832)
!5601 = !DIDerivedType(tag: DW_TAG_member, name: "range_min", scope: !5596, file: !5507, line: 153, baseType: !396, size: 32, offset: 864)
!5602 = !DIDerivedType(tag: DW_TAG_member, name: "range_max", scope: !5596, file: !5507, line: 153, baseType: !396, size: 32, offset: 896)
!5603 = !DIDerivedType(tag: DW_TAG_member, name: "value_min", scope: !5596, file: !5507, line: 154, baseType: !396, size: 32, offset: 928)
!5604 = !DIDerivedType(tag: DW_TAG_member, name: "value_max", scope: !5596, file: !5507, line: 154, baseType: !396, size: 32, offset: 960)
!5605 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !5596, file: !5507, line: 155, baseType: !98, size: 32, offset: 992)
!5606 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5607, size: 64)
!5607 = !DIDerivedType(tag: DW_TAG_typedef, name: "LineStyleThicknessModifier_DistanceFromObject", file: !5507, line: 187, baseType: !5608)
!5608 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "LineStyleThicknessModifier_DistanceFromObject", file: !5507, line: 178, size: 1088, elements: !5609)
!5609 = !{!5610, !5611, !5612, !5613, !5614, !5615, !5616, !5617, !5618}
!5610 = !DIDerivedType(tag: DW_TAG_member, name: "modifier", scope: !5608, file: !5507, line: 179, baseType: !5511, size: 768)
!5611 = !DIDerivedType(tag: DW_TAG_member, name: "target", scope: !5608, file: !5507, line: 181, baseType: !423, size: 64, offset: 768)
!5612 = !DIDerivedType(tag: DW_TAG_member, name: "curve", scope: !5608, file: !5507, line: 182, baseType: !1799, size: 64, offset: 832)
!5613 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5608, file: !5507, line: 183, baseType: !98, size: 32, offset: 896)
!5614 = !DIDerivedType(tag: DW_TAG_member, name: "range_min", scope: !5608, file: !5507, line: 184, baseType: !396, size: 32, offset: 928)
!5615 = !DIDerivedType(tag: DW_TAG_member, name: "range_max", scope: !5608, file: !5507, line: 184, baseType: !396, size: 32, offset: 960)
!5616 = !DIDerivedType(tag: DW_TAG_member, name: "value_min", scope: !5608, file: !5507, line: 185, baseType: !396, size: 32, offset: 992)
!5617 = !DIDerivedType(tag: DW_TAG_member, name: "value_max", scope: !5608, file: !5507, line: 185, baseType: !396, size: 32, offset: 1024)
!5618 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !5608, file: !5507, line: 186, baseType: !98, size: 32, offset: 1056)
!5619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5620, size: 64)
!5620 = !DIDerivedType(tag: DW_TAG_typedef, name: "LineStyleThicknessModifier_Material", file: !5507, line: 231, baseType: !5621)
!5621 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "LineStyleThicknessModifier_Material", file: !5507, line: 224, size: 960, elements: !5622)
!5622 = !{!5623, !5624, !5625, !5626, !5627, !5628}
!5623 = !DIDerivedType(tag: DW_TAG_member, name: "modifier", scope: !5621, file: !5507, line: 225, baseType: !5511, size: 768)
!5624 = !DIDerivedType(tag: DW_TAG_member, name: "curve", scope: !5621, file: !5507, line: 227, baseType: !1799, size: 64, offset: 768)
!5625 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5621, file: !5507, line: 228, baseType: !98, size: 32, offset: 832)
!5626 = !DIDerivedType(tag: DW_TAG_member, name: "value_min", scope: !5621, file: !5507, line: 229, baseType: !396, size: 32, offset: 864)
!5627 = !DIDerivedType(tag: DW_TAG_member, name: "value_max", scope: !5621, file: !5507, line: 229, baseType: !396, size: 32, offset: 896)
!5628 = !DIDerivedType(tag: DW_TAG_member, name: "mat_attr", scope: !5621, file: !5507, line: 230, baseType: !98, size: 32, offset: 928)
!5629 = !{!0, !5630}
!5630 = !DIGlobalVariableExpression(var: !5631, expr: !DIExpression())
!5631 = distinct !DIGlobalVariable(name: "ptcache_extra_struct", scope: !2, file: !3, line: 1065, type: !5632, isLocal: true, isDefinition: true)
!5632 = !DICompositeType(tag: DW_TAG_array_type, baseType: !373, size: 128, elements: !1293)
!5633 = !DICompositeType(tag: DW_TAG_array_type, baseType: !373, size: 512, elements: !400)
!5634 = !{i32 7, !"Dwarf Version", i32 4}
!5635 = !{i32 2, !"Debug Info Version", i32 3}
!5636 = !{i32 1, !"wchar_size", i32 4}
!5637 = !{!"clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)"}
!5638 = distinct !DISubprogram(name: "IDP_WriteProperty_OnlyData", scope: !3, file: !3, line: 578, type: !5639, scopeLine: 579, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !5641)
!5639 = !DISubroutineType(types: !5640)
!5640 = !{null, !1094, !372}
!5641 = !{}
!5642 = !DILocalVariable(name: "prop", arg: 1, scope: !5638, file: !3, line: 578, type: !1094)
!5643 = !DILocation(line: 578, column: 45, scope: !5638)
!5644 = !DILocalVariable(name: "wd", arg: 2, scope: !5638, file: !3, line: 578, type: !372)
!5645 = !DILocation(line: 578, column: 57, scope: !5638)
!5646 = !DILocation(line: 580, column: 10, scope: !5638)
!5647 = !DILocation(line: 580, column: 16, scope: !5638)
!5648 = !DILocation(line: 580, column: 2, scope: !5638)
!5649 = !DILocation(line: 582, column: 19, scope: !5650)
!5650 = distinct !DILexicalBlock(scope: !5638, file: !3, line: 580, column: 22)
!5651 = !DILocation(line: 582, column: 25, scope: !5650)
!5652 = !DILocation(line: 582, column: 4, scope: !5650)
!5653 = !DILocation(line: 583, column: 4, scope: !5650)
!5654 = !DILocation(line: 585, column: 20, scope: !5650)
!5655 = !DILocation(line: 585, column: 26, scope: !5650)
!5656 = !DILocation(line: 585, column: 4, scope: !5650)
!5657 = !DILocation(line: 586, column: 4, scope: !5650)
!5658 = !DILocation(line: 588, column: 19, scope: !5650)
!5659 = !DILocation(line: 588, column: 25, scope: !5650)
!5660 = !DILocation(line: 588, column: 4, scope: !5650)
!5661 = !DILocation(line: 589, column: 4, scope: !5650)
!5662 = !DILocation(line: 591, column: 22, scope: !5650)
!5663 = !DILocation(line: 591, column: 28, scope: !5650)
!5664 = !DILocation(line: 591, column: 4, scope: !5650)
!5665 = !DILocation(line: 592, column: 4, scope: !5650)
!5666 = !DILocation(line: 594, column: 1, scope: !5638)
!5667 = distinct !DISubprogram(name: "IDP_WriteGroup", scope: !3, file: !3, line: 568, type: !5639, scopeLine: 569, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !5641)
!5668 = !DILocalVariable(name: "prop", arg: 1, scope: !5667, file: !3, line: 568, type: !1094)
!5669 = !DILocation(line: 568, column: 40, scope: !5667)
!5670 = !DILocalVariable(name: "wd", arg: 2, scope: !5667, file: !3, line: 568, type: !372)
!5671 = !DILocation(line: 568, column: 52, scope: !5667)
!5672 = !DILocalVariable(name: "loop", scope: !5667, file: !3, line: 570, type: !1094)
!5673 = !DILocation(line: 570, column: 14, scope: !5667)
!5674 = !DILocation(line: 572, column: 12, scope: !5675)
!5675 = distinct !DILexicalBlock(scope: !5667, file: !3, line: 572, column: 2)
!5676 = !DILocation(line: 572, column: 18, scope: !5675)
!5677 = !DILocation(line: 572, column: 23, scope: !5675)
!5678 = !DILocation(line: 572, column: 29, scope: !5675)
!5679 = !DILocation(line: 572, column: 11, scope: !5675)
!5680 = !DILocation(line: 572, column: 7, scope: !5675)
!5681 = !DILocation(line: 572, column: 36, scope: !5682)
!5682 = distinct !DILexicalBlock(scope: !5675, file: !3, line: 572, column: 2)
!5683 = !DILocation(line: 572, column: 2, scope: !5675)
!5684 = !DILocation(line: 573, column: 21, scope: !5685)
!5685 = distinct !DILexicalBlock(scope: !5682, file: !3, line: 572, column: 59)
!5686 = !DILocation(line: 573, column: 27, scope: !5685)
!5687 = !DILocation(line: 573, column: 3, scope: !5685)
!5688 = !DILocation(line: 574, column: 2, scope: !5685)
!5689 = !DILocation(line: 572, column: 47, scope: !5682)
!5690 = !DILocation(line: 572, column: 53, scope: !5682)
!5691 = !DILocation(line: 572, column: 46, scope: !5682)
!5692 = !DILocation(line: 572, column: 2, scope: !5682)
!5693 = distinct !{!5693, !5683, !5694}
!5694 = !DILocation(line: 574, column: 2, scope: !5675)
!5695 = !DILocation(line: 575, column: 1, scope: !5667)
!5696 = distinct !DISubprogram(name: "IDP_WriteString", scope: !3, file: !3, line: 562, type: !5639, scopeLine: 563, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !5641)
!5697 = !DILocalVariable(name: "prop", arg: 1, scope: !5696, file: !3, line: 562, type: !1094)
!5698 = !DILocation(line: 562, column: 41, scope: !5696)
!5699 = !DILocalVariable(name: "wd", arg: 2, scope: !5696, file: !3, line: 562, type: !372)
!5700 = !DILocation(line: 562, column: 53, scope: !5696)
!5701 = !DILocation(line: 565, column: 12, scope: !5696)
!5702 = !DILocation(line: 565, column: 22, scope: !5696)
!5703 = !DILocation(line: 565, column: 28, scope: !5696)
!5704 = !DILocation(line: 565, column: 33, scope: !5696)
!5705 = !DILocation(line: 565, column: 39, scope: !5696)
!5706 = !DILocation(line: 565, column: 44, scope: !5696)
!5707 = !DILocation(line: 565, column: 2, scope: !5696)
!5708 = !DILocation(line: 566, column: 1, scope: !5696)
!5709 = distinct !DISubprogram(name: "IDP_WriteArray", scope: !3, file: !3, line: 532, type: !5639, scopeLine: 533, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !5641)
!5710 = !DILocalVariable(name: "prop", arg: 1, scope: !5709, file: !3, line: 532, type: !1094)
!5711 = !DILocation(line: 532, column: 40, scope: !5709)
!5712 = !DILocalVariable(name: "wd", arg: 2, scope: !5709, file: !3, line: 532, type: !372)
!5713 = !DILocation(line: 532, column: 52, scope: !5709)
!5714 = !DILocation(line: 535, column: 6, scope: !5715)
!5715 = distinct !DILexicalBlock(scope: !5709, file: !3, line: 535, column: 6)
!5716 = !DILocation(line: 535, column: 12, scope: !5715)
!5717 = !DILocation(line: 535, column: 17, scope: !5715)
!5718 = !DILocation(line: 535, column: 6, scope: !5709)
!5719 = !DILocation(line: 536, column: 13, scope: !5720)
!5720 = distinct !DILexicalBlock(scope: !5715, file: !3, line: 535, column: 26)
!5721 = !DILocation(line: 536, column: 23, scope: !5720)
!5722 = !DILocation(line: 536, column: 38, scope: !5720)
!5723 = !DILocation(line: 536, column: 44, scope: !5720)
!5724 = !DILocation(line: 536, column: 49, scope: !5720)
!5725 = !DILocation(line: 536, column: 59, scope: !5720)
!5726 = !DILocation(line: 536, column: 65, scope: !5720)
!5727 = !DILocation(line: 536, column: 70, scope: !5720)
!5728 = !DILocation(line: 536, column: 3, scope: !5720)
!5729 = !DILocation(line: 538, column: 7, scope: !5730)
!5730 = distinct !DILexicalBlock(scope: !5720, file: !3, line: 538, column: 7)
!5731 = !DILocation(line: 538, column: 13, scope: !5730)
!5732 = !DILocation(line: 538, column: 21, scope: !5730)
!5733 = !DILocation(line: 538, column: 7, scope: !5720)
!5734 = !DILocalVariable(name: "array", scope: !5735, file: !3, line: 539, type: !5736)
!5735 = distinct !DILexicalBlock(scope: !5730, file: !3, line: 538, column: 35)
!5736 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1094, size: 64)
!5737 = !DILocation(line: 539, column: 17, scope: !5735)
!5738 = !DILocation(line: 539, column: 24, scope: !5735)
!5739 = !DILocation(line: 539, column: 30, scope: !5735)
!5740 = !DILocation(line: 539, column: 35, scope: !5735)
!5741 = !DILocalVariable(name: "a", scope: !5735, file: !3, line: 540, type: !98)
!5742 = !DILocation(line: 540, column: 8, scope: !5735)
!5743 = !DILocation(line: 542, column: 10, scope: !5744)
!5744 = distinct !DILexicalBlock(scope: !5735, file: !3, line: 542, column: 4)
!5745 = !DILocation(line: 542, column: 9, scope: !5744)
!5746 = !DILocation(line: 542, column: 14, scope: !5747)
!5747 = distinct !DILexicalBlock(scope: !5744, file: !3, line: 542, column: 4)
!5748 = !DILocation(line: 542, column: 16, scope: !5747)
!5749 = !DILocation(line: 542, column: 22, scope: !5747)
!5750 = !DILocation(line: 542, column: 15, scope: !5747)
!5751 = !DILocation(line: 542, column: 4, scope: !5744)
!5752 = !DILocation(line: 543, column: 23, scope: !5747)
!5753 = !DILocation(line: 543, column: 29, scope: !5747)
!5754 = !DILocation(line: 543, column: 33, scope: !5747)
!5755 = !DILocation(line: 543, column: 5, scope: !5747)
!5756 = !DILocation(line: 542, column: 28, scope: !5747)
!5757 = !DILocation(line: 542, column: 4, scope: !5747)
!5758 = distinct !{!5758, !5751, !5759}
!5759 = !DILocation(line: 543, column: 35, scope: !5744)
!5760 = !DILocation(line: 544, column: 3, scope: !5735)
!5761 = !DILocation(line: 545, column: 2, scope: !5720)
!5762 = !DILocation(line: 546, column: 1, scope: !5709)
!5763 = distinct !DISubprogram(name: "IDP_WriteIDPArray", scope: !3, file: !3, line: 548, type: !5639, scopeLine: 549, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !5641)
!5764 = !DILocalVariable(name: "prop", arg: 1, scope: !5763, file: !3, line: 548, type: !1094)
!5765 = !DILocation(line: 548, column: 43, scope: !5763)
!5766 = !DILocalVariable(name: "wd", arg: 2, scope: !5763, file: !3, line: 548, type: !372)
!5767 = !DILocation(line: 548, column: 55, scope: !5763)
!5768 = !DILocation(line: 551, column: 6, scope: !5769)
!5769 = distinct !DILexicalBlock(scope: !5763, file: !3, line: 551, column: 6)
!5770 = !DILocation(line: 551, column: 12, scope: !5769)
!5771 = !DILocation(line: 551, column: 17, scope: !5769)
!5772 = !DILocation(line: 551, column: 6, scope: !5763)
!5773 = !DILocalVariable(name: "array", scope: !5774, file: !3, line: 552, type: !1094)
!5774 = distinct !DILexicalBlock(scope: !5769, file: !3, line: 551, column: 26)
!5775 = !DILocation(line: 552, column: 15, scope: !5774)
!5776 = !DILocation(line: 552, column: 23, scope: !5774)
!5777 = !DILocation(line: 552, column: 29, scope: !5774)
!5778 = !DILocation(line: 552, column: 34, scope: !5774)
!5779 = !DILocalVariable(name: "a", scope: !5774, file: !3, line: 553, type: !98)
!5780 = !DILocation(line: 553, column: 7, scope: !5774)
!5781 = !DILocation(line: 555, column: 15, scope: !5774)
!5782 = !DILocation(line: 555, column: 39, scope: !5774)
!5783 = !DILocation(line: 555, column: 45, scope: !5774)
!5784 = !DILocation(line: 555, column: 50, scope: !5774)
!5785 = !DILocation(line: 555, column: 3, scope: !5774)
!5786 = !DILocation(line: 557, column: 9, scope: !5787)
!5787 = distinct !DILexicalBlock(scope: !5774, file: !3, line: 557, column: 3)
!5788 = !DILocation(line: 557, column: 8, scope: !5787)
!5789 = !DILocation(line: 557, column: 13, scope: !5790)
!5790 = distinct !DILexicalBlock(scope: !5787, file: !3, line: 557, column: 3)
!5791 = !DILocation(line: 557, column: 15, scope: !5790)
!5792 = !DILocation(line: 557, column: 21, scope: !5790)
!5793 = !DILocation(line: 557, column: 14, scope: !5790)
!5794 = !DILocation(line: 557, column: 3, scope: !5787)
!5795 = !DILocation(line: 558, column: 32, scope: !5790)
!5796 = !DILocation(line: 558, column: 38, scope: !5790)
!5797 = !DILocation(line: 558, column: 42, scope: !5790)
!5798 = !DILocation(line: 558, column: 4, scope: !5790)
!5799 = !DILocation(line: 557, column: 27, scope: !5790)
!5800 = !DILocation(line: 557, column: 3, scope: !5790)
!5801 = distinct !{!5801, !5794, !5802}
!5802 = !DILocation(line: 558, column: 44, scope: !5787)
!5803 = !DILocation(line: 559, column: 2, scope: !5774)
!5804 = !DILocation(line: 560, column: 1, scope: !5763)
!5805 = distinct !DISubprogram(name: "IDP_WriteProperty", scope: !3, file: !3, line: 596, type: !5639, scopeLine: 597, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !5641)
!5806 = !DILocalVariable(name: "prop", arg: 1, scope: !5805, file: !3, line: 596, type: !1094)
!5807 = !DILocation(line: 596, column: 36, scope: !5805)
!5808 = !DILocalVariable(name: "wd", arg: 2, scope: !5805, file: !3, line: 596, type: !372)
!5809 = !DILocation(line: 596, column: 48, scope: !5805)
!5810 = !DILocation(line: 598, column: 14, scope: !5805)
!5811 = !DILocation(line: 598, column: 41, scope: !5805)
!5812 = !DILocation(line: 598, column: 2, scope: !5805)
!5813 = !DILocation(line: 599, column: 29, scope: !5805)
!5814 = !DILocation(line: 599, column: 35, scope: !5805)
!5815 = !DILocation(line: 599, column: 2, scope: !5805)
!5816 = !DILocation(line: 600, column: 1, scope: !5805)
!5817 = distinct !DISubprogram(name: "writestruct", scope: !3, file: !3, line: 490, type: !5818, scopeLine: 491, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !5641)
!5818 = !DISubroutineType(types: !5819)
!5819 = !{null, !5820, !98, !373, !98, !372}
!5820 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5821, size: 64)
!5821 = !DIDerivedType(tag: DW_TAG_typedef, name: "WriteData", file: !3, line: 311, baseType: !5822)
!5822 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3, line: 294, size: 576, elements: !5823)
!5823 = !{!5824, !5825, !5826, !5827, !5830, !5831, !5832, !5833, !5834, !5835, !5857}
!5824 = !DIDerivedType(tag: DW_TAG_member, name: "sdna", scope: !5822, file: !3, line: 295, baseType: !523, size: 64)
!5825 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !5822, file: !3, line: 297, baseType: !98, size: 32, offset: 64)
!5826 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !5822, file: !3, line: 298, baseType: !473, size: 64, offset: 128)
!5827 = !DIDerivedType(tag: DW_TAG_member, name: "compare", scope: !5822, file: !3, line: 299, baseType: !5828, size: 64, offset: 192)
!5828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5829, size: 64)
!5829 = !DIDerivedType(tag: DW_TAG_typedef, name: "MemFile", file: !460, line: 47, baseType: !459)
!5830 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !5822, file: !3, line: 299, baseType: !5828, size: 64, offset: 256)
!5831 = !DIDerivedType(tag: DW_TAG_member, name: "tot", scope: !5822, file: !3, line: 301, baseType: !98, size: 32, offset: 320)
!5832 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !5822, file: !3, line: 301, baseType: !98, size: 32, offset: 352)
!5833 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !5822, file: !3, line: 301, baseType: !98, size: 32, offset: 384)
!5834 = !DIDerivedType(tag: DW_TAG_member, name: "memsize", scope: !5822, file: !3, line: 301, baseType: !98, size: 32, offset: 416)
!5835 = !DIDerivedType(tag: DW_TAG_member, name: "ww", scope: !5822, file: !3, line: 306, baseType: !5836, size: 64, offset: 448)
!5836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5837, size: 64)
!5837 = !DIDerivedType(tag: DW_TAG_typedef, name: "WriteWrap", file: !3, line: 196, baseType: !5838)
!5838 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "WriteWrap", file: !3, line: 197, size: 256, elements: !5839)
!5839 = !{!5840, !5844, !5848, !5852}
!5840 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !5838, file: !3, line: 199, baseType: !5841, size: 64)
!5841 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5842, size: 64)
!5842 = !DISubroutineType(types: !5843)
!5843 = !{!474, !5836, !373}
!5844 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !5838, file: !3, line: 200, baseType: !5845, size: 64, offset: 64)
!5845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5846, size: 64)
!5846 = !DISubroutineType(types: !5847)
!5847 = !{!474, !5836}
!5848 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !5838, file: !3, line: 201, baseType: !5849, size: 64, offset: 128)
!5849 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5850, size: 64)
!5850 = !DISubroutineType(types: !5851)
!5851 = !{!3291, !5836, !373, !3291}
!5852 = !DIDerivedType(tag: DW_TAG_member, name: "_user_data", scope: !5838, file: !3, line: 207, baseType: !5853, size: 64, offset: 192)
!5853 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5838, file: !3, line: 204, size: 64, elements: !5854)
!5854 = !{!5855, !5856}
!5855 = !DIDerivedType(tag: DW_TAG_member, name: "file_handle", scope: !5853, file: !3, line: 205, baseType: !98, size: 32)
!5856 = !DIDerivedType(tag: DW_TAG_member, name: "gz_handle", scope: !5853, file: !3, line: 206, baseType: !466, size: 64)
!5857 = !DIDerivedType(tag: DW_TAG_member, name: "use_mesh_compat", scope: !5822, file: !3, line: 309, baseType: !375, size: 8, offset: 512)
!5858 = !DILocalVariable(name: "wd", arg: 1, scope: !5817, file: !3, line: 490, type: !5820)
!5859 = !DILocation(line: 490, column: 36, scope: !5817)
!5860 = !DILocalVariable(name: "filecode", arg: 2, scope: !5817, file: !3, line: 490, type: !98)
!5861 = !DILocation(line: 490, column: 44, scope: !5817)
!5862 = !DILocalVariable(name: "structname", arg: 3, scope: !5817, file: !3, line: 490, type: !373)
!5863 = !DILocation(line: 490, column: 66, scope: !5817)
!5864 = !DILocalVariable(name: "nr", arg: 4, scope: !5817, file: !3, line: 490, type: !98)
!5865 = !DILocation(line: 490, column: 82, scope: !5817)
!5866 = !DILocalVariable(name: "adr", arg: 5, scope: !5817, file: !3, line: 490, type: !372)
!5867 = !DILocation(line: 490, column: 92, scope: !5817)
!5868 = !DILocation(line: 492, column: 25, scope: !5817)
!5869 = !DILocation(line: 492, column: 29, scope: !5817)
!5870 = !DILocation(line: 492, column: 39, scope: !5817)
!5871 = !DILocation(line: 492, column: 51, scope: !5817)
!5872 = !DILocation(line: 492, column: 55, scope: !5817)
!5873 = !DILocation(line: 492, column: 60, scope: !5817)
!5874 = !DILocation(line: 492, column: 2, scope: !5817)
!5875 = !DILocation(line: 493, column: 1, scope: !5817)
!5876 = distinct !DISubprogram(name: "BLO_write_file", scope: !3, file: !3, line: 3629, type: !5877, scopeLine: 3630, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !5641)
!5877 = !DISubroutineType(types: !5878)
!5878 = !{!98, !5879, !373, !98, !5881, !5883}
!5879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5880, size: 64)
!5880 = !DIDerivedType(tag: DW_TAG_typedef, name: "Main", file: !575, line: 104, baseType: !574)
!5881 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5882, size: 64)
!5882 = !DIDerivedType(tag: DW_TAG_typedef, name: "ReportList", file: !44, line: 112, baseType: !4389)
!5883 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5884, size: 64)
!5884 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !98)
!5885 = !DILocalVariable(name: "mainvar", arg: 1, scope: !5876, file: !3, line: 3629, type: !5879)
!5886 = !DILocation(line: 3629, column: 26, scope: !5876)
!5887 = !DILocalVariable(name: "filepath", arg: 2, scope: !5876, file: !3, line: 3629, type: !373)
!5888 = !DILocation(line: 3629, column: 47, scope: !5876)
!5889 = !DILocalVariable(name: "write_flags", arg: 3, scope: !5876, file: !3, line: 3629, type: !98)
!5890 = !DILocation(line: 3629, column: 61, scope: !5876)
!5891 = !DILocalVariable(name: "reports", arg: 4, scope: !5876, file: !3, line: 3629, type: !5881)
!5892 = !DILocation(line: 3629, column: 86, scope: !5876)
!5893 = !DILocalVariable(name: "thumb", arg: 5, scope: !5876, file: !3, line: 3629, type: !5883)
!5894 = !DILocation(line: 3629, column: 106, scope: !5876)
!5895 = !DILocalVariable(name: "tempname", scope: !5876, file: !3, line: 3631, type: !5896)
!5896 = !DICompositeType(tag: DW_TAG_array_type, baseType: !375, size: 8200, elements: !5897)
!5897 = !{!5898}
!5898 = !DISubrange(count: 1025)
!5899 = !DILocation(line: 3631, column: 7, scope: !5876)
!5900 = !DILocalVariable(name: "err", scope: !5876, file: !3, line: 3632, type: !98)
!5901 = !DILocation(line: 3632, column: 6, scope: !5876)
!5902 = !DILocalVariable(name: "write_user_block", scope: !5876, file: !3, line: 3632, type: !98)
!5903 = !DILocation(line: 3632, column: 11, scope: !5876)
!5904 = !DILocalVariable(name: "ww_type", scope: !5876, file: !3, line: 3633, type: !5905)
!5905 = !DIDerivedType(tag: DW_TAG_typedef, name: "eWriteWrapType", file: !3, line: 194, baseType: !39)
!5906 = !DILocation(line: 3633, column: 17, scope: !5876)
!5907 = !DILocalVariable(name: "ww", scope: !5876, file: !3, line: 3634, type: !5837)
!5908 = !DILocation(line: 3634, column: 12, scope: !5876)
!5909 = !DILocalVariable(name: "path_list_backup", scope: !5876, file: !3, line: 3637, type: !372)
!5910 = !DILocation(line: 3637, column: 12, scope: !5876)
!5911 = !DILocalVariable(name: "path_list_flag", scope: !5876, file: !3, line: 3638, type: !5884)
!5912 = !DILocation(line: 3638, column: 12, scope: !5876)
!5913 = !DILocation(line: 3641, column: 15, scope: !5876)
!5914 = !DILocation(line: 3641, column: 50, scope: !5876)
!5915 = !DILocation(line: 3641, column: 2, scope: !5876)
!5916 = !DILocation(line: 3643, column: 6, scope: !5917)
!5917 = distinct !DILexicalBlock(scope: !5876, file: !3, line: 3643, column: 6)
!5918 = !DILocation(line: 3643, column: 18, scope: !5917)
!5919 = !DILocation(line: 3643, column: 6, scope: !5876)
!5920 = !DILocation(line: 3644, column: 11, scope: !5921)
!5921 = distinct !DILexicalBlock(scope: !5917, file: !3, line: 3643, column: 37)
!5922 = !DILocation(line: 3645, column: 2, scope: !5921)
!5923 = !DILocation(line: 3647, column: 11, scope: !5924)
!5924 = distinct !DILexicalBlock(scope: !5917, file: !3, line: 3646, column: 7)
!5925 = !DILocation(line: 3650, column: 17, scope: !5876)
!5926 = !DILocation(line: 3650, column: 2, scope: !5876)
!5927 = !DILocation(line: 3652, column: 9, scope: !5928)
!5928 = distinct !DILexicalBlock(scope: !5876, file: !3, line: 3652, column: 6)
!5929 = !DILocation(line: 3652, column: 19, scope: !5928)
!5930 = !DILocation(line: 3652, column: 6, scope: !5928)
!5931 = !DILocation(line: 3652, column: 29, scope: !5928)
!5932 = !DILocation(line: 3652, column: 6, scope: !5876)
!5933 = !DILocation(line: 3653, column: 15, scope: !5934)
!5934 = distinct !DILexicalBlock(scope: !5928, file: !3, line: 3652, column: 39)
!5935 = !DILocation(line: 3653, column: 74, scope: !5934)
!5936 = !DILocation(line: 3653, column: 93, scope: !5934)
!5937 = !DILocation(line: 3653, column: 84, scope: !5934)
!5938 = !DILocation(line: 3653, column: 3, scope: !5934)
!5939 = !DILocation(line: 3654, column: 3, scope: !5934)
!5940 = !DILocation(line: 3658, column: 6, scope: !5941)
!5941 = distinct !DILexicalBlock(scope: !5876, file: !3, line: 3658, column: 6)
!5942 = !DILocation(line: 3658, column: 6, scope: !5876)
!5943 = !DILocation(line: 3659, column: 44, scope: !5944)
!5944 = distinct !DILexicalBlock(scope: !5941, file: !3, line: 3658, column: 91)
!5945 = !DILocation(line: 3659, column: 22, scope: !5944)
!5946 = !DILocation(line: 3659, column: 20, scope: !5944)
!5947 = !DILocation(line: 3660, column: 2, scope: !5944)
!5948 = !DILocation(line: 3663, column: 6, scope: !5949)
!5949 = distinct !DILexicalBlock(scope: !5876, file: !3, line: 3663, column: 6)
!5950 = !DILocation(line: 3663, column: 18, scope: !5949)
!5951 = !DILocation(line: 3663, column: 6, scope: !5876)
!5952 = !DILocalVariable(name: "dir1", scope: !5953, file: !3, line: 3664, type: !478)
!5953 = distinct !DILexicalBlock(scope: !5949, file: !3, line: 3663, column: 43)
!5954 = !DILocation(line: 3664, column: 8, scope: !5953)
!5955 = !DILocalVariable(name: "dir2", scope: !5953, file: !3, line: 3665, type: !478)
!5956 = !DILocation(line: 3665, column: 8, scope: !5953)
!5957 = !DILocation(line: 3666, column: 22, scope: !5953)
!5958 = !DILocation(line: 3666, column: 32, scope: !5953)
!5959 = !DILocation(line: 3666, column: 3, scope: !5953)
!5960 = !DILocation(line: 3667, column: 22, scope: !5953)
!5961 = !DILocation(line: 3667, column: 31, scope: !5953)
!5962 = !DILocation(line: 3667, column: 37, scope: !5953)
!5963 = !DILocation(line: 3667, column: 3, scope: !5953)
!5964 = !DILocation(line: 3670, column: 19, scope: !5953)
!5965 = !DILocation(line: 3670, column: 28, scope: !5953)
!5966 = !DILocation(line: 3670, column: 34, scope: !5953)
!5967 = !DILocation(line: 3670, column: 3, scope: !5953)
!5968 = !DILocation(line: 3671, column: 19, scope: !5953)
!5969 = !DILocation(line: 3671, column: 28, scope: !5953)
!5970 = !DILocation(line: 3671, column: 34, scope: !5953)
!5971 = !DILocation(line: 3671, column: 3, scope: !5953)
!5972 = !DILocation(line: 3673, column: 9, scope: !5973)
!5973 = distinct !DILexicalBlock(scope: !5953, file: !3, line: 3673, column: 7)
!5974 = !DILocation(line: 3673, column: 7, scope: !5973)
!5975 = !DILocation(line: 3673, column: 23, scope: !5973)
!5976 = !DILocation(line: 3673, column: 40, scope: !5973)
!5977 = !DILocation(line: 3673, column: 46, scope: !5973)
!5978 = !DILocation(line: 3673, column: 27, scope: !5973)
!5979 = !DILocation(line: 3673, column: 52, scope: !5973)
!5980 = !DILocation(line: 3673, column: 7, scope: !5953)
!5981 = !DILocation(line: 3674, column: 16, scope: !5982)
!5982 = distinct !DILexicalBlock(scope: !5973, file: !3, line: 3673, column: 59)
!5983 = !DILocation(line: 3675, column: 3, scope: !5982)
!5984 = !DILocation(line: 3677, column: 10, scope: !5985)
!5985 = distinct !DILexicalBlock(scope: !5986, file: !3, line: 3677, column: 8)
!5986 = distinct !DILexicalBlock(scope: !5973, file: !3, line: 3676, column: 8)
!5987 = !DILocation(line: 3677, column: 8, scope: !5985)
!5988 = !DILocation(line: 3677, column: 8, scope: !5986)
!5989 = !DILocation(line: 3682, column: 32, scope: !5990)
!5990 = distinct !DILexicalBlock(scope: !5985, file: !3, line: 3677, column: 25)
!5991 = !DILocation(line: 3682, column: 43, scope: !5990)
!5992 = !DILocation(line: 3682, column: 49, scope: !5990)
!5993 = !DILocation(line: 3682, column: 41, scope: !5990)
!5994 = !DILocation(line: 3682, column: 5, scope: !5990)
!5995 = !DILocation(line: 3683, column: 4, scope: !5990)
!5996 = !DILocation(line: 3685, column: 2, scope: !5953)
!5997 = !DILocation(line: 3687, column: 20, scope: !5876)
!5998 = !DILocation(line: 3687, column: 32, scope: !5876)
!5999 = !DILocation(line: 3687, column: 18, scope: !5876)
!6000 = !DILocation(line: 3689, column: 6, scope: !6001)
!6001 = distinct !DILexicalBlock(scope: !5876, file: !3, line: 3689, column: 6)
!6002 = !DILocation(line: 3689, column: 18, scope: !6001)
!6003 = !DILocation(line: 3689, column: 6, scope: !5876)
!6004 = !DILocation(line: 3690, column: 30, scope: !6001)
!6005 = !DILocation(line: 3690, column: 39, scope: !6001)
!6006 = !DILocation(line: 3690, column: 3, scope: !6001)
!6007 = !DILocation(line: 3693, column: 26, scope: !5876)
!6008 = !DILocation(line: 3693, column: 52, scope: !5876)
!6009 = !DILocation(line: 3693, column: 70, scope: !5876)
!6010 = !DILocation(line: 3693, column: 83, scope: !5876)
!6011 = !DILocation(line: 3693, column: 8, scope: !5876)
!6012 = !DILocation(line: 3693, column: 6, scope: !5876)
!6013 = !DILocation(line: 3695, column: 5, scope: !5876)
!6014 = !DILocation(line: 3695, column: 2, scope: !5876)
!6015 = !DILocation(line: 3697, column: 6, scope: !6016)
!6016 = distinct !DILexicalBlock(scope: !5876, file: !3, line: 3697, column: 6)
!6017 = !DILocation(line: 3697, column: 6, scope: !5876)
!6018 = !DILocation(line: 3698, column: 26, scope: !6019)
!6019 = distinct !DILexicalBlock(scope: !6016, file: !3, line: 3697, column: 34)
!6020 = !DILocation(line: 3698, column: 51, scope: !6019)
!6021 = !DILocation(line: 3698, column: 3, scope: !6019)
!6022 = !DILocation(line: 3699, column: 23, scope: !6019)
!6023 = !DILocation(line: 3699, column: 3, scope: !6019)
!6024 = !DILocation(line: 3700, column: 2, scope: !6019)
!6025 = !DILocation(line: 3702, column: 6, scope: !6026)
!6026 = distinct !DILexicalBlock(scope: !5876, file: !3, line: 3702, column: 6)
!6027 = !DILocation(line: 3702, column: 6, scope: !5876)
!6028 = !DILocation(line: 3703, column: 14, scope: !6029)
!6029 = distinct !DILexicalBlock(scope: !6026, file: !3, line: 3702, column: 11)
!6030 = !DILocation(line: 3703, column: 43, scope: !6029)
!6031 = !DILocation(line: 3703, column: 34, scope: !6029)
!6032 = !DILocation(line: 3703, column: 3, scope: !6029)
!6033 = !DILocation(line: 3704, column: 10, scope: !6029)
!6034 = !DILocation(line: 3704, column: 3, scope: !6029)
!6035 = !DILocation(line: 3706, column: 3, scope: !6029)
!6036 = !DILocation(line: 3711, column: 6, scope: !6037)
!6037 = distinct !DILexicalBlock(scope: !5876, file: !3, line: 3711, column: 6)
!6038 = !DILocation(line: 3711, column: 18, scope: !6037)
!6039 = !DILocation(line: 3711, column: 6, scope: !5876)
!6040 = !DILocalVariable(name: "err_hist", scope: !6041, file: !3, line: 3712, type: !4241)
!6041 = distinct !DILexicalBlock(scope: !6037, file: !3, line: 3711, column: 36)
!6042 = !DILocation(line: 3712, column: 14, scope: !6041)
!6043 = !DILocation(line: 3712, column: 36, scope: !6041)
!6044 = !DILocation(line: 3712, column: 46, scope: !6041)
!6045 = !DILocation(line: 3712, column: 25, scope: !6041)
!6046 = !DILocation(line: 3713, column: 7, scope: !6047)
!6047 = distinct !DILexicalBlock(scope: !6041, file: !3, line: 3713, column: 7)
!6048 = !DILocation(line: 3713, column: 7, scope: !6041)
!6049 = !DILocation(line: 3714, column: 15, scope: !6050)
!6050 = distinct !DILexicalBlock(scope: !6047, file: !3, line: 3713, column: 17)
!6051 = !DILocation(line: 3714, column: 4, scope: !6050)
!6052 = !DILocation(line: 3715, column: 4, scope: !6050)
!6053 = !DILocation(line: 3717, column: 2, scope: !6041)
!6054 = !DILocation(line: 3719, column: 17, scope: !6055)
!6055 = distinct !DILexicalBlock(scope: !5876, file: !3, line: 3719, column: 6)
!6056 = !DILocation(line: 3719, column: 27, scope: !6055)
!6057 = !DILocation(line: 3719, column: 6, scope: !6055)
!6058 = !DILocation(line: 3719, column: 37, scope: !6055)
!6059 = !DILocation(line: 3719, column: 6, scope: !5876)
!6060 = !DILocation(line: 3720, column: 14, scope: !6061)
!6061 = distinct !DILexicalBlock(scope: !6055, file: !3, line: 3719, column: 43)
!6062 = !DILocation(line: 3720, column: 3, scope: !6061)
!6063 = !DILocation(line: 3721, column: 3, scope: !6061)
!6064 = !DILocation(line: 3724, column: 2, scope: !5876)
!6065 = !DILocation(line: 3725, column: 1, scope: !5876)
!6066 = distinct !DISubprogram(name: "ww_handle_init", scope: !3, file: !3, line: 268, type: !6067, scopeLine: 269, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !5641)
!6067 = !DISubroutineType(types: !6068)
!6068 = !{null, !5905, !5836}
!6069 = !DILocalVariable(name: "ww_type", arg: 1, scope: !6066, file: !3, line: 268, type: !5905)
!6070 = !DILocation(line: 268, column: 43, scope: !6066)
!6071 = !DILocalVariable(name: "r_ww", arg: 2, scope: !6066, file: !3, line: 268, type: !5836)
!6072 = !DILocation(line: 268, column: 63, scope: !6066)
!6073 = !DILocation(line: 270, column: 9, scope: !6066)
!6074 = !DILocation(line: 270, column: 2, scope: !6066)
!6075 = !DILocation(line: 272, column: 10, scope: !6066)
!6076 = !DILocation(line: 272, column: 2, scope: !6066)
!6077 = !DILocation(line: 275, column: 4, scope: !6078)
!6078 = distinct !DILexicalBlock(scope: !6079, file: !3, line: 274, column: 3)
!6079 = distinct !DILexicalBlock(scope: !6066, file: !3, line: 272, column: 19)
!6080 = !DILocation(line: 275, column: 10, scope: !6078)
!6081 = !DILocation(line: 275, column: 16, scope: !6078)
!6082 = !DILocation(line: 276, column: 4, scope: !6078)
!6083 = !DILocation(line: 276, column: 10, scope: !6078)
!6084 = !DILocation(line: 276, column: 16, scope: !6078)
!6085 = !DILocation(line: 277, column: 4, scope: !6078)
!6086 = !DILocation(line: 277, column: 10, scope: !6078)
!6087 = !DILocation(line: 277, column: 16, scope: !6078)
!6088 = !DILocation(line: 278, column: 4, scope: !6078)
!6089 = !DILocation(line: 282, column: 4, scope: !6090)
!6090 = distinct !DILexicalBlock(scope: !6079, file: !3, line: 281, column: 3)
!6091 = !DILocation(line: 282, column: 10, scope: !6090)
!6092 = !DILocation(line: 282, column: 16, scope: !6090)
!6093 = !DILocation(line: 283, column: 4, scope: !6090)
!6094 = !DILocation(line: 283, column: 10, scope: !6090)
!6095 = !DILocation(line: 283, column: 16, scope: !6090)
!6096 = !DILocation(line: 284, column: 4, scope: !6090)
!6097 = !DILocation(line: 284, column: 10, scope: !6090)
!6098 = !DILocation(line: 284, column: 16, scope: !6090)
!6099 = !DILocation(line: 285, column: 4, scope: !6090)
!6100 = !DILocation(line: 288, column: 1, scope: !6066)
!6101 = distinct !DISubprogram(name: "write_file_handle", scope: !3, file: !3, line: 3493, type: !6102, scopeLine: 3498, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !5641)
!6102 = !DISubroutineType(types: !6103)
!6103 = !{!98, !5879, !5836, !5828, !5828, !98, !98, !5883}
!6104 = !DILocalVariable(name: "mainvar", arg: 1, scope: !6101, file: !3, line: 3494, type: !5879)
!6105 = !DILocation(line: 3494, column: 15, scope: !6101)
!6106 = !DILocalVariable(name: "ww", arg: 2, scope: !6101, file: !3, line: 3495, type: !5836)
!6107 = !DILocation(line: 3495, column: 20, scope: !6101)
!6108 = !DILocalVariable(name: "compare", arg: 3, scope: !6101, file: !3, line: 3496, type: !5828)
!6109 = !DILocation(line: 3496, column: 18, scope: !6101)
!6110 = !DILocalVariable(name: "current", arg: 4, scope: !6101, file: !3, line: 3496, type: !5828)
!6111 = !DILocation(line: 3496, column: 36, scope: !6101)
!6112 = !DILocalVariable(name: "write_user_block", arg: 5, scope: !6101, file: !3, line: 3497, type: !98)
!6113 = !DILocation(line: 3497, column: 13, scope: !6101)
!6114 = !DILocalVariable(name: "write_flags", arg: 6, scope: !6101, file: !3, line: 3497, type: !98)
!6115 = !DILocation(line: 3497, column: 35, scope: !6101)
!6116 = !DILocalVariable(name: "thumb", arg: 7, scope: !6101, file: !3, line: 3497, type: !5883)
!6117 = !DILocation(line: 3497, column: 59, scope: !6101)
!6118 = !DILocalVariable(name: "bhead", scope: !6101, file: !3, line: 3499, type: !6119)
!6119 = !DIDerivedType(tag: DW_TAG_typedef, name: "BHead", file: !525, line: 72, baseType: !6120)
!6120 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BHead", file: !525, line: 68, size: 192, elements: !6121)
!6121 = !{!6122, !6123, !6124, !6125, !6126}
!6122 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !6120, file: !525, line: 69, baseType: !98, size: 32)
!6123 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !6120, file: !525, line: 69, baseType: !98, size: 32, offset: 32)
!6124 = !DIDerivedType(tag: DW_TAG_member, name: "old", scope: !6120, file: !525, line: 70, baseType: !372, size: 64, offset: 64)
!6125 = !DIDerivedType(tag: DW_TAG_member, name: "SDNAnr", scope: !6120, file: !525, line: 71, baseType: !98, size: 32, offset: 128)
!6126 = !DIDerivedType(tag: DW_TAG_member, name: "nr", scope: !6120, file: !525, line: 71, baseType: !98, size: 32, offset: 160)
!6127 = !DILocation(line: 3499, column: 8, scope: !6101)
!6128 = !DILocalVariable(name: "mainlist", scope: !6101, file: !3, line: 3500, type: !388)
!6129 = !DILocation(line: 3500, column: 11, scope: !6101)
!6130 = !DILocalVariable(name: "buf", scope: !6101, file: !3, line: 3501, type: !590)
!6131 = !DILocation(line: 3501, column: 7, scope: !6101)
!6132 = !DILocalVariable(name: "wd", scope: !6101, file: !3, line: 3502, type: !5820)
!6133 = !DILocation(line: 3502, column: 13, scope: !6101)
!6134 = !DILocation(line: 3504, column: 28, scope: !6101)
!6135 = !DILocation(line: 3504, column: 2, scope: !6101)
!6136 = !DILocation(line: 3506, column: 16, scope: !6101)
!6137 = !DILocation(line: 3506, column: 20, scope: !6101)
!6138 = !DILocation(line: 3506, column: 29, scope: !6101)
!6139 = !DILocation(line: 3506, column: 7, scope: !6101)
!6140 = !DILocation(line: 3506, column: 5, scope: !6101)
!6141 = !DILocation(line: 3509, column: 25, scope: !6101)
!6142 = !DILocation(line: 3509, column: 37, scope: !6101)
!6143 = !DILocation(line: 3509, column: 59, scope: !6101)
!6144 = !DILocation(line: 3509, column: 24, scope: !6101)
!6145 = !DILocation(line: 3509, column: 2, scope: !6101)
!6146 = !DILocation(line: 3509, column: 6, scope: !6101)
!6147 = !DILocation(line: 3509, column: 22, scope: !6101)
!6148 = !DILocation(line: 3514, column: 7, scope: !6149)
!6149 = distinct !DILexicalBlock(scope: !6101, file: !3, line: 3514, column: 6)
!6150 = !DILocation(line: 3514, column: 6, scope: !6101)
!6151 = !DILocation(line: 3516, column: 35, scope: !6152)
!6152 = distinct !DILexicalBlock(scope: !6149, file: !3, line: 3514, column: 16)
!6153 = !DILocation(line: 3516, column: 3, scope: !6152)
!6154 = !DILocation(line: 3517, column: 2, scope: !6152)
!6155 = !DILocation(line: 3520, column: 10, scope: !6101)
!6156 = !DILocation(line: 3520, column: 2, scope: !6101)
!6157 = !DILocation(line: 3525, column: 10, scope: !6101)
!6158 = !DILocation(line: 3525, column: 14, scope: !6101)
!6159 = !DILocation(line: 3525, column: 2, scope: !6101)
!6160 = !DILocation(line: 3527, column: 19, scope: !6101)
!6161 = !DILocation(line: 3527, column: 23, scope: !6101)
!6162 = !DILocation(line: 3527, column: 2, scope: !6101)
!6163 = !DILocation(line: 3528, column: 14, scope: !6101)
!6164 = !DILocation(line: 3528, column: 18, scope: !6101)
!6165 = !DILocation(line: 3528, column: 2, scope: !6101)
!6166 = !DILocation(line: 3529, column: 15, scope: !6101)
!6167 = !DILocation(line: 3529, column: 19, scope: !6101)
!6168 = !DILocation(line: 3529, column: 32, scope: !6101)
!6169 = !DILocation(line: 3529, column: 2, scope: !6101)
!6170 = !DILocation(line: 3531, column: 23, scope: !6101)
!6171 = !DILocation(line: 3531, column: 28, scope: !6101)
!6172 = !DILocation(line: 3531, column: 37, scope: !6101)
!6173 = !DILocation(line: 3531, column: 2, scope: !6101)
!6174 = !DILocation(line: 3532, column: 18, scope: !6101)
!6175 = !DILocation(line: 3532, column: 23, scope: !6101)
!6176 = !DILocation(line: 3532, column: 32, scope: !6101)
!6177 = !DILocation(line: 3532, column: 2, scope: !6101)
!6178 = !DILocation(line: 3533, column: 20, scope: !6101)
!6179 = !DILocation(line: 3533, column: 25, scope: !6101)
!6180 = !DILocation(line: 3533, column: 34, scope: !6101)
!6181 = !DILocation(line: 3533, column: 2, scope: !6101)
!6182 = !DILocation(line: 3534, column: 18, scope: !6101)
!6183 = !DILocation(line: 3534, column: 23, scope: !6101)
!6184 = !DILocation(line: 3534, column: 32, scope: !6101)
!6185 = !DILocation(line: 3534, column: 2, scope: !6101)
!6186 = !DILocation(line: 3535, column: 18, scope: !6101)
!6187 = !DILocation(line: 3535, column: 23, scope: !6101)
!6188 = !DILocation(line: 3535, column: 32, scope: !6101)
!6189 = !DILocation(line: 3535, column: 2, scope: !6101)
!6190 = !DILocation(line: 3536, column: 18, scope: !6101)
!6191 = !DILocation(line: 3536, column: 23, scope: !6101)
!6192 = !DILocation(line: 3536, column: 32, scope: !6101)
!6193 = !DILocation(line: 3536, column: 2, scope: !6101)
!6194 = !DILocation(line: 3537, column: 18, scope: !6101)
!6195 = !DILocation(line: 3537, column: 23, scope: !6101)
!6196 = !DILocation(line: 3537, column: 32, scope: !6101)
!6197 = !DILocation(line: 3537, column: 2, scope: !6101)
!6198 = !DILocation(line: 3538, column: 18, scope: !6101)
!6199 = !DILocation(line: 3538, column: 23, scope: !6101)
!6200 = !DILocation(line: 3538, column: 32, scope: !6101)
!6201 = !DILocation(line: 3538, column: 2, scope: !6101)
!6202 = !DILocation(line: 3539, column: 18, scope: !6101)
!6203 = !DILocation(line: 3539, column: 23, scope: !6101)
!6204 = !DILocation(line: 3539, column: 32, scope: !6101)
!6205 = !DILocation(line: 3539, column: 2, scope: !6101)
!6206 = !DILocation(line: 3540, column: 18, scope: !6101)
!6207 = !DILocation(line: 3540, column: 23, scope: !6101)
!6208 = !DILocation(line: 3540, column: 32, scope: !6101)
!6209 = !DILocation(line: 3540, column: 2, scope: !6101)
!6210 = !DILocation(line: 3541, column: 18, scope: !6101)
!6211 = !DILocation(line: 3541, column: 23, scope: !6101)
!6212 = !DILocation(line: 3541, column: 32, scope: !6101)
!6213 = !DILocation(line: 3541, column: 2, scope: !6101)
!6214 = !DILocation(line: 3542, column: 18, scope: !6101)
!6215 = !DILocation(line: 3542, column: 23, scope: !6101)
!6216 = !DILocation(line: 3542, column: 32, scope: !6101)
!6217 = !DILocation(line: 3542, column: 2, scope: !6101)
!6218 = !DILocation(line: 3543, column: 18, scope: !6101)
!6219 = !DILocation(line: 3543, column: 23, scope: !6101)
!6220 = !DILocation(line: 3543, column: 32, scope: !6101)
!6221 = !DILocation(line: 3543, column: 2, scope: !6101)
!6222 = !DILocation(line: 3544, column: 18, scope: !6101)
!6223 = !DILocation(line: 3544, column: 23, scope: !6101)
!6224 = !DILocation(line: 3544, column: 32, scope: !6101)
!6225 = !DILocation(line: 3544, column: 2, scope: !6101)
!6226 = !DILocation(line: 3545, column: 18, scope: !6101)
!6227 = !DILocation(line: 3545, column: 23, scope: !6101)
!6228 = !DILocation(line: 3545, column: 32, scope: !6101)
!6229 = !DILocation(line: 3545, column: 2, scope: !6101)
!6230 = !DILocation(line: 3546, column: 18, scope: !6101)
!6231 = !DILocation(line: 3546, column: 23, scope: !6101)
!6232 = !DILocation(line: 3546, column: 32, scope: !6101)
!6233 = !DILocation(line: 3546, column: 2, scope: !6101)
!6234 = !DILocation(line: 3547, column: 18, scope: !6101)
!6235 = !DILocation(line: 3547, column: 23, scope: !6101)
!6236 = !DILocation(line: 3547, column: 32, scope: !6101)
!6237 = !DILocation(line: 3547, column: 2, scope: !6101)
!6238 = !DILocation(line: 3548, column: 18, scope: !6101)
!6239 = !DILocation(line: 3548, column: 23, scope: !6101)
!6240 = !DILocation(line: 3548, column: 32, scope: !6101)
!6241 = !DILocation(line: 3548, column: 2, scope: !6101)
!6242 = !DILocation(line: 3549, column: 18, scope: !6101)
!6243 = !DILocation(line: 3549, column: 23, scope: !6101)
!6244 = !DILocation(line: 3549, column: 32, scope: !6101)
!6245 = !DILocation(line: 3549, column: 2, scope: !6101)
!6246 = !DILocation(line: 3550, column: 18, scope: !6101)
!6247 = !DILocation(line: 3550, column: 23, scope: !6101)
!6248 = !DILocation(line: 3550, column: 32, scope: !6101)
!6249 = !DILocation(line: 3550, column: 2, scope: !6101)
!6250 = !DILocation(line: 3551, column: 18, scope: !6101)
!6251 = !DILocation(line: 3551, column: 23, scope: !6101)
!6252 = !DILocation(line: 3551, column: 32, scope: !6101)
!6253 = !DILocation(line: 3551, column: 2, scope: !6101)
!6254 = !DILocation(line: 3552, column: 18, scope: !6101)
!6255 = !DILocation(line: 3552, column: 23, scope: !6101)
!6256 = !DILocation(line: 3552, column: 32, scope: !6101)
!6257 = !DILocation(line: 3552, column: 2, scope: !6101)
!6258 = !DILocation(line: 3553, column: 18, scope: !6101)
!6259 = !DILocation(line: 3553, column: 23, scope: !6101)
!6260 = !DILocation(line: 3553, column: 32, scope: !6101)
!6261 = !DILocation(line: 3553, column: 2, scope: !6101)
!6262 = !DILocation(line: 3554, column: 18, scope: !6101)
!6263 = !DILocation(line: 3554, column: 23, scope: !6101)
!6264 = !DILocation(line: 3554, column: 32, scope: !6101)
!6265 = !DILocation(line: 3554, column: 2, scope: !6101)
!6266 = !DILocation(line: 3555, column: 25, scope: !6101)
!6267 = !DILocation(line: 3555, column: 30, scope: !6101)
!6268 = !DILocation(line: 3555, column: 39, scope: !6101)
!6269 = !DILocation(line: 3555, column: 2, scope: !6101)
!6270 = !DILocation(line: 3556, column: 18, scope: !6101)
!6271 = !DILocation(line: 3556, column: 23, scope: !6101)
!6272 = !DILocation(line: 3556, column: 32, scope: !6101)
!6273 = !DILocation(line: 3556, column: 2, scope: !6101)
!6274 = !DILocation(line: 3557, column: 18, scope: !6101)
!6275 = !DILocation(line: 3557, column: 23, scope: !6101)
!6276 = !DILocation(line: 3557, column: 32, scope: !6101)
!6277 = !DILocation(line: 3557, column: 2, scope: !6101)
!6278 = !DILocation(line: 3558, column: 18, scope: !6101)
!6279 = !DILocation(line: 3558, column: 23, scope: !6101)
!6280 = !DILocation(line: 3558, column: 32, scope: !6101)
!6281 = !DILocation(line: 3558, column: 2, scope: !6101)
!6282 = !DILocation(line: 3559, column: 21, scope: !6101)
!6283 = !DILocation(line: 3559, column: 26, scope: !6101)
!6284 = !DILocation(line: 3559, column: 35, scope: !6101)
!6285 = !DILocation(line: 3559, column: 2, scope: !6101)
!6286 = !DILocation(line: 3560, column: 18, scope: !6101)
!6287 = !DILocation(line: 3560, column: 23, scope: !6101)
!6288 = !DILocation(line: 3560, column: 32, scope: !6101)
!6289 = !DILocation(line: 3560, column: 2, scope: !6101)
!6290 = !DILocation(line: 3561, column: 18, scope: !6101)
!6291 = !DILocation(line: 3561, column: 23, scope: !6101)
!6292 = !DILocation(line: 3561, column: 32, scope: !6101)
!6293 = !DILocation(line: 3561, column: 2, scope: !6101)
!6294 = !DILocation(line: 3562, column: 19, scope: !6101)
!6295 = !DILocation(line: 3562, column: 24, scope: !6101)
!6296 = !DILocation(line: 3562, column: 33, scope: !6101)
!6297 = !DILocation(line: 3562, column: 2, scope: !6101)
!6298 = !DILocation(line: 3563, column: 18, scope: !6101)
!6299 = !DILocation(line: 3563, column: 23, scope: !6101)
!6300 = !DILocation(line: 3563, column: 32, scope: !6101)
!6301 = !DILocation(line: 3563, column: 2, scope: !6101)
!6302 = !DILocation(line: 3565, column: 6, scope: !6303)
!6303 = distinct !DILexicalBlock(scope: !6101, file: !3, line: 3565, column: 6)
!6304 = !DILocation(line: 3565, column: 6, scope: !6101)
!6305 = !DILocation(line: 3566, column: 17, scope: !6306)
!6306 = distinct !DILexicalBlock(scope: !6303, file: !3, line: 3565, column: 24)
!6307 = !DILocation(line: 3566, column: 3, scope: !6306)
!6308 = !DILocation(line: 3567, column: 2, scope: !6306)
!6309 = !DILocation(line: 3570, column: 12, scope: !6101)
!6310 = !DILocation(line: 3570, column: 22, scope: !6101)
!6311 = !DILocation(line: 3570, column: 26, scope: !6101)
!6312 = !DILocation(line: 3570, column: 32, scope: !6101)
!6313 = !DILocation(line: 3570, column: 41, scope: !6101)
!6314 = !DILocation(line: 3570, column: 45, scope: !6101)
!6315 = !DILocation(line: 3570, column: 51, scope: !6101)
!6316 = !DILocation(line: 3570, column: 2, scope: !6101)
!6317 = !DILocation(line: 3574, column: 7, scope: !6318)
!6318 = distinct !DILexicalBlock(scope: !6101, file: !3, line: 3574, column: 6)
!6319 = !DILocation(line: 3574, column: 6, scope: !6101)
!6320 = !DILocation(line: 3579, column: 36, scope: !6321)
!6321 = distinct !DILexicalBlock(scope: !6318, file: !3, line: 3574, column: 16)
!6322 = !DILocation(line: 3579, column: 3, scope: !6321)
!6323 = !DILocation(line: 3580, column: 2, scope: !6321)
!6324 = !DILocation(line: 3584, column: 2, scope: !6101)
!6325 = !DILocation(line: 3585, column: 8, scope: !6101)
!6326 = !DILocation(line: 3585, column: 12, scope: !6101)
!6327 = !DILocation(line: 3586, column: 10, scope: !6101)
!6328 = !DILocation(line: 3586, column: 14, scope: !6101)
!6329 = !DILocation(line: 3586, column: 2, scope: !6101)
!6330 = !DILocation(line: 3588, column: 2, scope: !6101)
!6331 = !DILocation(line: 3590, column: 18, scope: !6101)
!6332 = !DILocation(line: 3590, column: 9, scope: !6101)
!6333 = !DILocation(line: 3590, column: 2, scope: !6101)
!6334 = distinct !DISubprogram(name: "do_history", scope: !3, file: !3, line: 3595, type: !6335, scopeLine: 3596, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !5641)
!6335 = !DISubroutineType(types: !6336)
!6336 = !{!474, !373, !5881}
!6337 = !DILocalVariable(name: "name", arg: 1, scope: !6334, file: !3, line: 3595, type: !373)
!6338 = !DILocation(line: 3595, column: 36, scope: !6334)
!6339 = !DILocalVariable(name: "reports", arg: 2, scope: !6334, file: !3, line: 3595, type: !5881)
!6340 = !DILocation(line: 3595, column: 54, scope: !6334)
!6341 = !DILocalVariable(name: "tempname1", scope: !6334, file: !3, line: 3597, type: !478)
!6342 = !DILocation(line: 3597, column: 7, scope: !6334)
!6343 = !DILocalVariable(name: "tempname2", scope: !6334, file: !3, line: 3597, type: !478)
!6344 = !DILocation(line: 3597, column: 28, scope: !6334)
!6345 = !DILocalVariable(name: "hisnr", scope: !6334, file: !3, line: 3598, type: !98)
!6346 = !DILocation(line: 3598, column: 6, scope: !6334)
!6347 = !DILocation(line: 3598, column: 15, scope: !6334)
!6348 = !DILocation(line: 3598, column: 13, scope: !6334)
!6349 = !DILocation(line: 3600, column: 8, scope: !6350)
!6350 = distinct !DILexicalBlock(scope: !6334, file: !3, line: 3600, column: 6)
!6351 = !DILocation(line: 3600, column: 6, scope: !6350)
!6352 = !DILocation(line: 3600, column: 16, scope: !6350)
!6353 = !DILocation(line: 3600, column: 6, scope: !6334)
!6354 = !DILocation(line: 3600, column: 21, scope: !6350)
!6355 = !DILocation(line: 3601, column: 13, scope: !6356)
!6356 = distinct !DILexicalBlock(scope: !6334, file: !3, line: 3601, column: 6)
!6357 = !DILocation(line: 3601, column: 6, scope: !6356)
!6358 = !DILocation(line: 3601, column: 18, scope: !6356)
!6359 = !DILocation(line: 3601, column: 6, scope: !6334)
!6360 = !DILocation(line: 3602, column: 14, scope: !6361)
!6361 = distinct !DILexicalBlock(scope: !6356, file: !3, line: 3601, column: 22)
!6362 = !DILocation(line: 3602, column: 3, scope: !6361)
!6363 = !DILocation(line: 3603, column: 3, scope: !6361)
!6364 = !DILocation(line: 3606, column: 2, scope: !6334)
!6365 = !DILocation(line: 3606, column: 9, scope: !6334)
!6366 = !DILocation(line: 3606, column: 15, scope: !6334)
!6367 = !DILocation(line: 3607, column: 16, scope: !6368)
!6368 = distinct !DILexicalBlock(scope: !6334, file: !3, line: 3606, column: 20)
!6369 = !DILocation(line: 3607, column: 54, scope: !6368)
!6370 = !DILocation(line: 3607, column: 60, scope: !6368)
!6371 = !DILocation(line: 3607, column: 65, scope: !6368)
!6372 = !DILocation(line: 3607, column: 3, scope: !6368)
!6373 = !DILocation(line: 3608, column: 16, scope: !6368)
!6374 = !DILocation(line: 3608, column: 54, scope: !6368)
!6375 = !DILocation(line: 3608, column: 60, scope: !6368)
!6376 = !DILocation(line: 3608, column: 3, scope: !6368)
!6377 = !DILocation(line: 3610, column: 18, scope: !6378)
!6378 = distinct !DILexicalBlock(scope: !6368, file: !3, line: 3610, column: 7)
!6379 = !DILocation(line: 3610, column: 29, scope: !6378)
!6380 = !DILocation(line: 3610, column: 7, scope: !6378)
!6381 = !DILocation(line: 3610, column: 7, scope: !6368)
!6382 = !DILocation(line: 3611, column: 15, scope: !6383)
!6383 = distinct !DILexicalBlock(scope: !6378, file: !3, line: 3610, column: 41)
!6384 = !DILocation(line: 3611, column: 4, scope: !6383)
!6385 = !DILocation(line: 3612, column: 4, scope: !6383)
!6386 = !DILocation(line: 3614, column: 8, scope: !6368)
!6387 = distinct !{!6387, !6364, !6388}
!6388 = !DILocation(line: 3615, column: 2, scope: !6334)
!6389 = !DILocation(line: 3618, column: 15, scope: !6334)
!6390 = !DILocation(line: 3618, column: 53, scope: !6334)
!6391 = !DILocation(line: 3618, column: 59, scope: !6334)
!6392 = !DILocation(line: 3618, column: 2, scope: !6334)
!6393 = !DILocation(line: 3620, column: 17, scope: !6394)
!6394 = distinct !DILexicalBlock(scope: !6334, file: !3, line: 3620, column: 6)
!6395 = !DILocation(line: 3620, column: 23, scope: !6394)
!6396 = !DILocation(line: 3620, column: 6, scope: !6394)
!6397 = !DILocation(line: 3620, column: 6, scope: !6334)
!6398 = !DILocation(line: 3621, column: 14, scope: !6399)
!6399 = distinct !DILexicalBlock(scope: !6394, file: !3, line: 3620, column: 35)
!6400 = !DILocation(line: 3621, column: 3, scope: !6399)
!6401 = !DILocation(line: 3622, column: 3, scope: !6399)
!6402 = !DILocation(line: 3625, column: 2, scope: !6334)
!6403 = !DILocation(line: 3626, column: 1, scope: !6334)
!6404 = distinct !DISubprogram(name: "BLO_write_file_mem", scope: !3, file: !3, line: 3728, type: !6405, scopeLine: 3729, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !5641)
!6405 = !DISubroutineType(types: !6406)
!6406 = !{!98, !5879, !5828, !5828, !98}
!6407 = !DILocalVariable(name: "mainvar", arg: 1, scope: !6404, file: !3, line: 3728, type: !5879)
!6408 = !DILocation(line: 3728, column: 30, scope: !6404)
!6409 = !DILocalVariable(name: "compare", arg: 2, scope: !6404, file: !3, line: 3728, type: !5828)
!6410 = !DILocation(line: 3728, column: 48, scope: !6404)
!6411 = !DILocalVariable(name: "current", arg: 3, scope: !6404, file: !3, line: 3728, type: !5828)
!6412 = !DILocation(line: 3728, column: 66, scope: !6404)
!6413 = !DILocalVariable(name: "write_flags", arg: 4, scope: !6404, file: !3, line: 3728, type: !98)
!6414 = !DILocation(line: 3728, column: 79, scope: !6404)
!6415 = !DILocalVariable(name: "err", scope: !6404, file: !3, line: 3730, type: !98)
!6416 = !DILocation(line: 3730, column: 6, scope: !6404)
!6417 = !DILocation(line: 3732, column: 26, scope: !6404)
!6418 = !DILocation(line: 3732, column: 41, scope: !6404)
!6419 = !DILocation(line: 3732, column: 50, scope: !6404)
!6420 = !DILocation(line: 3732, column: 62, scope: !6404)
!6421 = !DILocation(line: 3732, column: 8, scope: !6404)
!6422 = !DILocation(line: 3732, column: 6, scope: !6404)
!6423 = !DILocation(line: 3734, column: 6, scope: !6424)
!6424 = distinct !DILexicalBlock(scope: !6404, file: !3, line: 3734, column: 6)
!6425 = !DILocation(line: 3734, column: 9, scope: !6424)
!6426 = !DILocation(line: 3734, column: 6, scope: !6404)
!6427 = !DILocation(line: 3734, column: 14, scope: !6424)
!6428 = !DILocation(line: 3735, column: 2, scope: !6404)
!6429 = !DILocation(line: 3736, column: 1, scope: !6404)
!6430 = distinct !DISubprogram(name: "writedata", scope: !3, file: !3, line: 495, type: !6431, scopeLine: 496, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !5641)
!6431 = !DISubroutineType(types: !6432)
!6432 = !{null, !5820, !98, !98, !6433}
!6433 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6434, size: 64)
!6434 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!6435 = !DILocalVariable(name: "wd", arg: 1, scope: !6430, file: !3, line: 495, type: !5820)
!6436 = !DILocation(line: 495, column: 34, scope: !6430)
!6437 = !DILocalVariable(name: "filecode", arg: 2, scope: !6430, file: !3, line: 495, type: !98)
!6438 = !DILocation(line: 495, column: 42, scope: !6430)
!6439 = !DILocalVariable(name: "len", arg: 3, scope: !6430, file: !3, line: 495, type: !98)
!6440 = !DILocation(line: 495, column: 56, scope: !6430)
!6441 = !DILocalVariable(name: "adr", arg: 4, scope: !6430, file: !3, line: 495, type: !6433)
!6442 = !DILocation(line: 495, column: 73, scope: !6430)
!6443 = !DILocalVariable(name: "bh", scope: !6430, file: !3, line: 497, type: !6119)
!6444 = !DILocation(line: 497, column: 8, scope: !6430)
!6445 = !DILocation(line: 499, column: 6, scope: !6446)
!6446 = distinct !DILexicalBlock(scope: !6430, file: !3, line: 499, column: 6)
!6447 = !DILocation(line: 499, column: 9, scope: !6446)
!6448 = !DILocation(line: 499, column: 6, scope: !6430)
!6449 = !DILocation(line: 499, column: 17, scope: !6446)
!6450 = !DILocation(line: 500, column: 6, scope: !6451)
!6451 = distinct !DILexicalBlock(scope: !6430, file: !3, line: 500, column: 6)
!6452 = !DILocation(line: 500, column: 9, scope: !6451)
!6453 = !DILocation(line: 500, column: 6, scope: !6430)
!6454 = !DILocation(line: 500, column: 14, scope: !6451)
!6455 = !DILocation(line: 503, column: 9, scope: !6430)
!6456 = !DILocation(line: 503, column: 13, scope: !6430)
!6457 = !DILocation(line: 503, column: 18, scope: !6430)
!6458 = !DILocation(line: 503, column: 6, scope: !6430)
!6459 = !DILocation(line: 506, column: 14, scope: !6430)
!6460 = !DILocation(line: 506, column: 5, scope: !6430)
!6461 = !DILocation(line: 506, column: 12, scope: !6430)
!6462 = !DILocation(line: 507, column: 22, scope: !6430)
!6463 = !DILocation(line: 507, column: 5, scope: !6430)
!6464 = !DILocation(line: 507, column: 12, scope: !6430)
!6465 = !DILocation(line: 508, column: 5, scope: !6430)
!6466 = !DILocation(line: 508, column: 12, scope: !6430)
!6467 = !DILocation(line: 509, column: 5, scope: !6430)
!6468 = !DILocation(line: 509, column: 12, scope: !6430)
!6469 = !DILocation(line: 510, column: 14, scope: !6430)
!6470 = !DILocation(line: 510, column: 5, scope: !6430)
!6471 = !DILocation(line: 510, column: 12, scope: !6430)
!6472 = !DILocation(line: 512, column: 10, scope: !6430)
!6473 = !DILocation(line: 512, column: 14, scope: !6430)
!6474 = !DILocation(line: 512, column: 2, scope: !6430)
!6475 = !DILocation(line: 513, column: 10, scope: !6430)
!6476 = !DILocation(line: 513, column: 14, scope: !6430)
!6477 = !DILocation(line: 513, column: 19, scope: !6430)
!6478 = !DILocation(line: 513, column: 2, scope: !6430)
!6479 = !DILocation(line: 514, column: 1, scope: !6430)
!6480 = distinct !DISubprogram(name: "mywrite", scope: !3, file: !3, line: 375, type: !6481, scopeLine: 376, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !5641)
!6481 = !DISubroutineType(types: !6482)
!6482 = !{null, !5820, !6433, !98}
!6483 = !DILocalVariable(name: "wd", arg: 1, scope: !6480, file: !3, line: 375, type: !5820)
!6484 = !DILocation(line: 375, column: 32, scope: !6480)
!6485 = !DILocalVariable(name: "adr", arg: 2, scope: !6480, file: !3, line: 375, type: !6433)
!6486 = !DILocation(line: 375, column: 48, scope: !6480)
!6487 = !DILocalVariable(name: "len", arg: 3, scope: !6480, file: !3, line: 375, type: !98)
!6488 = !DILocation(line: 375, column: 57, scope: !6480)
!6489 = !DILocation(line: 377, column: 6, scope: !6490)
!6490 = distinct !DILexicalBlock(scope: !6480, file: !3, line: 377, column: 6)
!6491 = !DILocation(line: 377, column: 10, scope: !6490)
!6492 = !DILocation(line: 377, column: 6, scope: !6480)
!6493 = !DILocation(line: 377, column: 17, scope: !6490)
!6494 = !DILocation(line: 380, column: 6, scope: !6495)
!6495 = distinct !DILexicalBlock(scope: !6480, file: !3, line: 380, column: 6)
!6496 = !DILocation(line: 380, column: 9, scope: !6495)
!6497 = !DILocation(line: 380, column: 6, scope: !6480)
!6498 = !DILocation(line: 381, column: 7, scope: !6499)
!6499 = distinct !DILexicalBlock(scope: !6500, file: !3, line: 381, column: 7)
!6500 = distinct !DILexicalBlock(scope: !6495, file: !3, line: 380, column: 26)
!6501 = !DILocation(line: 381, column: 11, scope: !6499)
!6502 = !DILocation(line: 381, column: 7, scope: !6500)
!6503 = !DILocation(line: 382, column: 23, scope: !6504)
!6504 = distinct !DILexicalBlock(scope: !6499, file: !3, line: 381, column: 18)
!6505 = !DILocation(line: 382, column: 27, scope: !6504)
!6506 = !DILocation(line: 382, column: 31, scope: !6504)
!6507 = !DILocation(line: 382, column: 36, scope: !6504)
!6508 = !DILocation(line: 382, column: 40, scope: !6504)
!6509 = !DILocation(line: 382, column: 4, scope: !6504)
!6510 = !DILocation(line: 383, column: 4, scope: !6504)
!6511 = !DILocation(line: 383, column: 8, scope: !6504)
!6512 = !DILocation(line: 383, column: 13, scope: !6504)
!6513 = !DILocation(line: 384, column: 3, scope: !6504)
!6514 = !DILocation(line: 385, column: 3, scope: !6500)
!6515 = !DILocation(line: 388, column: 12, scope: !6480)
!6516 = !DILocation(line: 388, column: 2, scope: !6480)
!6517 = !DILocation(line: 388, column: 6, scope: !6480)
!6518 = !DILocation(line: 388, column: 9, scope: !6480)
!6519 = !DILocation(line: 392, column: 6, scope: !6520)
!6520 = distinct !DILexicalBlock(scope: !6480, file: !3, line: 392, column: 6)
!6521 = !DILocation(line: 392, column: 9, scope: !6520)
!6522 = !DILocation(line: 392, column: 6, scope: !6480)
!6523 = !DILocation(line: 393, column: 7, scope: !6524)
!6524 = distinct !DILexicalBlock(scope: !6525, file: !3, line: 393, column: 7)
!6525 = distinct !DILexicalBlock(scope: !6520, file: !3, line: 392, column: 29)
!6526 = !DILocation(line: 393, column: 11, scope: !6524)
!6527 = !DILocation(line: 393, column: 7, scope: !6525)
!6528 = !DILocation(line: 394, column: 23, scope: !6529)
!6529 = distinct !DILexicalBlock(scope: !6524, file: !3, line: 393, column: 18)
!6530 = !DILocation(line: 394, column: 27, scope: !6529)
!6531 = !DILocation(line: 394, column: 31, scope: !6529)
!6532 = !DILocation(line: 394, column: 36, scope: !6529)
!6533 = !DILocation(line: 394, column: 40, scope: !6529)
!6534 = !DILocation(line: 394, column: 4, scope: !6529)
!6535 = !DILocation(line: 395, column: 4, scope: !6529)
!6536 = !DILocation(line: 395, column: 8, scope: !6529)
!6537 = !DILocation(line: 395, column: 13, scope: !6529)
!6538 = !DILocation(line: 396, column: 3, scope: !6529)
!6539 = !DILocation(line: 398, column: 3, scope: !6525)
!6540 = !DILocalVariable(name: "writelen", scope: !6541, file: !3, line: 399, type: !98)
!6541 = distinct !DILexicalBlock(scope: !6525, file: !3, line: 398, column: 6)
!6542 = !DILocation(line: 399, column: 8, scope: !6541)
!6543 = !DILocation(line: 399, column: 18, scope: !6541)
!6544 = !DILocation(line: 400, column: 23, scope: !6541)
!6545 = !DILocation(line: 400, column: 27, scope: !6541)
!6546 = !DILocation(line: 400, column: 32, scope: !6541)
!6547 = !DILocation(line: 400, column: 4, scope: !6541)
!6548 = !DILocation(line: 401, column: 24, scope: !6541)
!6549 = !DILocation(line: 401, column: 30, scope: !6541)
!6550 = !DILocation(line: 401, column: 28, scope: !6541)
!6551 = !DILocation(line: 401, column: 8, scope: !6541)
!6552 = !DILocation(line: 402, column: 11, scope: !6541)
!6553 = !DILocation(line: 402, column: 8, scope: !6541)
!6554 = !DILocation(line: 403, column: 3, scope: !6541)
!6555 = !DILocation(line: 403, column: 12, scope: !6525)
!6556 = !DILocation(line: 403, column: 16, scope: !6525)
!6557 = distinct !{!6557, !6539, !6558}
!6558 = !DILocation(line: 403, column: 19, scope: !6525)
!6559 = !DILocation(line: 405, column: 3, scope: !6525)
!6560 = !DILocation(line: 409, column: 6, scope: !6561)
!6561 = distinct !DILexicalBlock(scope: !6480, file: !3, line: 409, column: 6)
!6562 = !DILocation(line: 409, column: 10, scope: !6561)
!6563 = !DILocation(line: 409, column: 14, scope: !6561)
!6564 = !DILocation(line: 409, column: 9, scope: !6561)
!6565 = !DILocation(line: 409, column: 19, scope: !6561)
!6566 = !DILocation(line: 409, column: 6, scope: !6480)
!6567 = !DILocation(line: 410, column: 22, scope: !6568)
!6568 = distinct !DILexicalBlock(scope: !6561, file: !3, line: 409, column: 43)
!6569 = !DILocation(line: 410, column: 26, scope: !6568)
!6570 = !DILocation(line: 410, column: 30, scope: !6568)
!6571 = !DILocation(line: 410, column: 35, scope: !6568)
!6572 = !DILocation(line: 410, column: 39, scope: !6568)
!6573 = !DILocation(line: 410, column: 3, scope: !6568)
!6574 = !DILocation(line: 411, column: 3, scope: !6568)
!6575 = !DILocation(line: 411, column: 7, scope: !6568)
!6576 = !DILocation(line: 411, column: 12, scope: !6568)
!6577 = !DILocation(line: 412, column: 2, scope: !6568)
!6578 = !DILocation(line: 415, column: 10, scope: !6480)
!6579 = !DILocation(line: 415, column: 14, scope: !6480)
!6580 = !DILocation(line: 415, column: 18, scope: !6480)
!6581 = !DILocation(line: 415, column: 22, scope: !6480)
!6582 = !DILocation(line: 415, column: 30, scope: !6480)
!6583 = !DILocation(line: 415, column: 35, scope: !6480)
!6584 = !DILocation(line: 415, column: 2, scope: !6480)
!6585 = !DILocation(line: 416, column: 14, scope: !6480)
!6586 = !DILocation(line: 416, column: 2, scope: !6480)
!6587 = !DILocation(line: 416, column: 6, scope: !6480)
!6588 = !DILocation(line: 416, column: 11, scope: !6480)
!6589 = !DILocation(line: 417, column: 1, scope: !6480)
!6590 = distinct !DISubprogram(name: "writedata_do_write", scope: !3, file: !3, line: 340, type: !6481, scopeLine: 341, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !5641)
!6591 = !DILocalVariable(name: "wd", arg: 1, scope: !6590, file: !3, line: 340, type: !5820)
!6592 = !DILocation(line: 340, column: 43, scope: !6590)
!6593 = !DILocalVariable(name: "mem", arg: 2, scope: !6590, file: !3, line: 340, type: !6433)
!6594 = !DILocation(line: 340, column: 59, scope: !6590)
!6595 = !DILocalVariable(name: "memlen", arg: 3, scope: !6590, file: !3, line: 340, type: !98)
!6596 = !DILocation(line: 340, column: 68, scope: !6590)
!6597 = !DILocation(line: 342, column: 7, scope: !6598)
!6598 = distinct !DILexicalBlock(scope: !6590, file: !3, line: 342, column: 6)
!6599 = !DILocation(line: 342, column: 10, scope: !6598)
!6600 = !DILocation(line: 342, column: 19, scope: !6598)
!6601 = !DILocation(line: 342, column: 22, scope: !6598)
!6602 = !DILocation(line: 342, column: 26, scope: !6598)
!6603 = !DILocation(line: 342, column: 32, scope: !6598)
!6604 = !DILocation(line: 342, column: 36, scope: !6598)
!6605 = !DILocation(line: 342, column: 40, scope: !6598)
!6606 = !DILocation(line: 342, column: 49, scope: !6598)
!6607 = !DILocation(line: 342, column: 52, scope: !6598)
!6608 = !DILocation(line: 342, column: 59, scope: !6598)
!6609 = !DILocation(line: 342, column: 6, scope: !6590)
!6610 = !DILocation(line: 342, column: 64, scope: !6598)
!6611 = !DILocation(line: 343, column: 6, scope: !6612)
!6612 = distinct !DILexicalBlock(scope: !6590, file: !3, line: 343, column: 6)
!6613 = !DILocation(line: 343, column: 10, scope: !6612)
!6614 = !DILocation(line: 343, column: 6, scope: !6590)
!6615 = !DILocation(line: 343, column: 17, scope: !6612)
!6616 = !DILocation(line: 346, column: 6, scope: !6617)
!6617 = distinct !DILexicalBlock(scope: !6590, file: !3, line: 346, column: 6)
!6618 = !DILocation(line: 346, column: 10, scope: !6617)
!6619 = !DILocation(line: 346, column: 6, scope: !6590)
!6620 = !DILocation(line: 347, column: 26, scope: !6621)
!6621 = distinct !DILexicalBlock(scope: !6617, file: !3, line: 346, column: 19)
!6622 = !DILocation(line: 347, column: 30, scope: !6621)
!6623 = !DILocation(line: 347, column: 39, scope: !6621)
!6624 = !DILocation(line: 347, column: 44, scope: !6621)
!6625 = !DILocation(line: 347, column: 3, scope: !6621)
!6626 = !DILocation(line: 348, column: 2, scope: !6621)
!6627 = !DILocation(line: 350, column: 7, scope: !6628)
!6628 = distinct !DILexicalBlock(scope: !6629, file: !3, line: 350, column: 7)
!6629 = distinct !DILexicalBlock(scope: !6617, file: !3, line: 349, column: 7)
!6630 = !DILocation(line: 350, column: 11, scope: !6628)
!6631 = !DILocation(line: 350, column: 15, scope: !6628)
!6632 = !DILocation(line: 350, column: 21, scope: !6628)
!6633 = !DILocation(line: 350, column: 25, scope: !6628)
!6634 = !DILocation(line: 350, column: 29, scope: !6628)
!6635 = !DILocation(line: 350, column: 34, scope: !6628)
!6636 = !DILocation(line: 350, column: 45, scope: !6628)
!6637 = !DILocation(line: 350, column: 42, scope: !6628)
!6638 = !DILocation(line: 350, column: 7, scope: !6629)
!6639 = !DILocation(line: 351, column: 4, scope: !6640)
!6640 = distinct !DILexicalBlock(scope: !6628, file: !3, line: 350, column: 53)
!6641 = !DILocation(line: 351, column: 8, scope: !6640)
!6642 = !DILocation(line: 351, column: 14, scope: !6640)
!6643 = !DILocation(line: 352, column: 3, scope: !6640)
!6644 = !DILocation(line: 354, column: 1, scope: !6590)
!6645 = distinct !DISubprogram(name: "writestruct_at_address", scope: !3, file: !3, line: 463, type: !6646, scopeLine: 464, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !5641)
!6646 = !DISubroutineType(types: !6647)
!6647 = !{null, !5820, !98, !373, !98, !372, !372}
!6648 = !DILocalVariable(name: "wd", arg: 1, scope: !6645, file: !3, line: 463, type: !5820)
!6649 = !DILocation(line: 463, column: 47, scope: !6645)
!6650 = !DILocalVariable(name: "filecode", arg: 2, scope: !6645, file: !3, line: 463, type: !98)
!6651 = !DILocation(line: 463, column: 55, scope: !6645)
!6652 = !DILocalVariable(name: "structname", arg: 3, scope: !6645, file: !3, line: 463, type: !373)
!6653 = !DILocation(line: 463, column: 77, scope: !6645)
!6654 = !DILocalVariable(name: "nr", arg: 4, scope: !6645, file: !3, line: 463, type: !98)
!6655 = !DILocation(line: 463, column: 93, scope: !6645)
!6656 = !DILocalVariable(name: "adr", arg: 5, scope: !6645, file: !3, line: 463, type: !372)
!6657 = !DILocation(line: 463, column: 103, scope: !6645)
!6658 = !DILocalVariable(name: "data", arg: 6, scope: !6645, file: !3, line: 463, type: !372)
!6659 = !DILocation(line: 463, column: 114, scope: !6645)
!6660 = !DILocalVariable(name: "bh", scope: !6645, file: !3, line: 465, type: !6119)
!6661 = !DILocation(line: 465, column: 8, scope: !6645)
!6662 = !DILocalVariable(name: "sp", scope: !6645, file: !3, line: 466, type: !4157)
!6663 = !DILocation(line: 466, column: 15, scope: !6645)
!6664 = !DILocation(line: 468, column: 6, scope: !6665)
!6665 = distinct !DILexicalBlock(scope: !6645, file: !3, line: 468, column: 6)
!6666 = !DILocation(line: 468, column: 9, scope: !6665)
!6667 = !DILocation(line: 468, column: 16, scope: !6665)
!6668 = !DILocation(line: 468, column: 19, scope: !6665)
!6669 = !DILocation(line: 468, column: 23, scope: !6665)
!6670 = !DILocation(line: 468, column: 30, scope: !6665)
!6671 = !DILocation(line: 468, column: 33, scope: !6665)
!6672 = !DILocation(line: 468, column: 35, scope: !6665)
!6673 = !DILocation(line: 468, column: 6, scope: !6645)
!6674 = !DILocation(line: 468, column: 40, scope: !6665)
!6675 = !DILocation(line: 471, column: 11, scope: !6645)
!6676 = !DILocation(line: 471, column: 5, scope: !6645)
!6677 = !DILocation(line: 471, column: 9, scope: !6645)
!6678 = !DILocation(line: 472, column: 10, scope: !6645)
!6679 = !DILocation(line: 472, column: 5, scope: !6645)
!6680 = !DILocation(line: 472, column: 8, scope: !6645)
!6681 = !DILocation(line: 473, column: 9, scope: !6645)
!6682 = !DILocation(line: 473, column: 5, scope: !6645)
!6683 = !DILocation(line: 473, column: 7, scope: !6645)
!6684 = !DILocation(line: 475, column: 32, scope: !6645)
!6685 = !DILocation(line: 475, column: 36, scope: !6645)
!6686 = !DILocation(line: 475, column: 42, scope: !6645)
!6687 = !DILocation(line: 475, column: 13, scope: !6645)
!6688 = !DILocation(line: 475, column: 5, scope: !6645)
!6689 = !DILocation(line: 475, column: 11, scope: !6645)
!6690 = !DILocation(line: 476, column: 9, scope: !6691)
!6691 = distinct !DILexicalBlock(scope: !6645, file: !3, line: 476, column: 6)
!6692 = !DILocation(line: 476, column: 15, scope: !6691)
!6693 = !DILocation(line: 476, column: 6, scope: !6645)
!6694 = !DILocation(line: 477, column: 48, scope: !6695)
!6695 = distinct !DILexicalBlock(scope: !6691, file: !3, line: 476, column: 22)
!6696 = !DILocation(line: 477, column: 3, scope: !6695)
!6697 = !DILocation(line: 478, column: 3, scope: !6695)
!6698 = !DILocation(line: 480, column: 6, scope: !6645)
!6699 = !DILocation(line: 480, column: 10, scope: !6645)
!6700 = !DILocation(line: 480, column: 16, scope: !6645)
!6701 = !DILocation(line: 480, column: 27, scope: !6645)
!6702 = !DILocation(line: 480, column: 4, scope: !6645)
!6703 = !DILocation(line: 482, column: 10, scope: !6645)
!6704 = !DILocation(line: 482, column: 13, scope: !6645)
!6705 = !DILocation(line: 482, column: 17, scope: !6645)
!6706 = !DILocation(line: 482, column: 23, scope: !6645)
!6707 = !DILocation(line: 482, column: 32, scope: !6645)
!6708 = !DILocation(line: 482, column: 12, scope: !6645)
!6709 = !DILocation(line: 482, column: 5, scope: !6645)
!6710 = !DILocation(line: 482, column: 8, scope: !6645)
!6711 = !DILocation(line: 484, column: 9, scope: !6712)
!6712 = distinct !DILexicalBlock(scope: !6645, file: !3, line: 484, column: 6)
!6713 = !DILocation(line: 484, column: 12, scope: !6712)
!6714 = !DILocation(line: 484, column: 6, scope: !6645)
!6715 = !DILocation(line: 484, column: 17, scope: !6712)
!6716 = !DILocation(line: 486, column: 10, scope: !6645)
!6717 = !DILocation(line: 486, column: 14, scope: !6645)
!6718 = !DILocation(line: 486, column: 2, scope: !6645)
!6719 = !DILocation(line: 487, column: 10, scope: !6645)
!6720 = !DILocation(line: 487, column: 14, scope: !6645)
!6721 = !DILocation(line: 487, column: 23, scope: !6645)
!6722 = !DILocation(line: 487, column: 2, scope: !6645)
!6723 = !DILocation(line: 488, column: 1, scope: !6645)
!6724 = distinct !DISubprogram(name: "ww_open_zlib", scope: !3, file: !3, line: 242, type: !5842, scopeLine: 243, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !5641)
!6725 = !DILocalVariable(name: "ww", arg: 1, scope: !6724, file: !3, line: 242, type: !5836)
!6726 = !DILocation(line: 242, column: 37, scope: !6724)
!6727 = !DILocalVariable(name: "filepath", arg: 2, scope: !6724, file: !3, line: 242, type: !373)
!6728 = !DILocation(line: 242, column: 53, scope: !6724)
!6729 = !DILocalVariable(name: "file", scope: !6724, file: !3, line: 244, type: !466)
!6730 = !DILocation(line: 244, column: 9, scope: !6724)
!6731 = !DILocation(line: 246, column: 20, scope: !6724)
!6732 = !DILocation(line: 246, column: 9, scope: !6724)
!6733 = !DILocation(line: 246, column: 7, scope: !6724)
!6734 = !DILocation(line: 248, column: 6, scope: !6735)
!6735 = distinct !DILexicalBlock(scope: !6724, file: !3, line: 248, column: 6)
!6736 = !DILocation(line: 248, column: 11, scope: !6735)
!6737 = !DILocation(line: 248, column: 6, scope: !6724)
!6738 = !DILocation(line: 249, column: 21, scope: !6739)
!6739 = distinct !DILexicalBlock(scope: !6735, file: !3, line: 248, column: 22)
!6740 = !DILocation(line: 249, column: 3, scope: !6739)
!6741 = !DILocation(line: 249, column: 19, scope: !6739)
!6742 = !DILocation(line: 250, column: 3, scope: !6739)
!6743 = !DILocation(line: 253, column: 3, scope: !6744)
!6744 = distinct !DILexicalBlock(scope: !6735, file: !3, line: 252, column: 7)
!6745 = !DILocation(line: 255, column: 1, scope: !6724)
!6746 = distinct !DISubprogram(name: "ww_close_zlib", scope: !3, file: !3, line: 256, type: !5846, scopeLine: 257, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !5641)
!6747 = !DILocalVariable(name: "ww", arg: 1, scope: !6746, file: !3, line: 256, type: !5836)
!6748 = !DILocation(line: 256, column: 38, scope: !6746)
!6749 = !DILocation(line: 258, column: 18, scope: !6746)
!6750 = !DILocation(line: 258, column: 10, scope: !6746)
!6751 = !DILocation(line: 258, column: 35, scope: !6746)
!6752 = !DILocation(line: 258, column: 9, scope: !6746)
!6753 = !DILocation(line: 258, column: 2, scope: !6746)
!6754 = distinct !DISubprogram(name: "ww_write_zlib", scope: !3, file: !3, line: 260, type: !5850, scopeLine: 261, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !5641)
!6755 = !DILocalVariable(name: "ww", arg: 1, scope: !6754, file: !3, line: 260, type: !5836)
!6756 = !DILocation(line: 260, column: 40, scope: !6754)
!6757 = !DILocalVariable(name: "buf", arg: 2, scope: !6754, file: !3, line: 260, type: !373)
!6758 = !DILocation(line: 260, column: 56, scope: !6754)
!6759 = !DILocalVariable(name: "buf_len", arg: 3, scope: !6754, file: !3, line: 260, type: !3291)
!6760 = !DILocation(line: 260, column: 68, scope: !6754)
!6761 = !DILocation(line: 262, column: 17, scope: !6754)
!6762 = !DILocation(line: 262, column: 34, scope: !6754)
!6763 = !DILocation(line: 262, column: 39, scope: !6754)
!6764 = !DILocation(line: 262, column: 9, scope: !6754)
!6765 = !DILocation(line: 262, column: 2, scope: !6754)
!6766 = distinct !DISubprogram(name: "ww_open_none", scope: !3, file: !3, line: 214, type: !5842, scopeLine: 215, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !5641)
!6767 = !DILocalVariable(name: "ww", arg: 1, scope: !6766, file: !3, line: 214, type: !5836)
!6768 = !DILocation(line: 214, column: 37, scope: !6766)
!6769 = !DILocalVariable(name: "filepath", arg: 2, scope: !6766, file: !3, line: 214, type: !373)
!6770 = !DILocation(line: 214, column: 53, scope: !6766)
!6771 = !DILocalVariable(name: "file", scope: !6766, file: !3, line: 216, type: !98)
!6772 = !DILocation(line: 216, column: 6, scope: !6766)
!6773 = !DILocation(line: 218, column: 18, scope: !6766)
!6774 = !DILocation(line: 218, column: 9, scope: !6766)
!6775 = !DILocation(line: 218, column: 7, scope: !6766)
!6776 = !DILocation(line: 220, column: 6, scope: !6777)
!6777 = distinct !DILexicalBlock(scope: !6766, file: !3, line: 220, column: 6)
!6778 = !DILocation(line: 220, column: 11, scope: !6777)
!6779 = !DILocation(line: 220, column: 6, scope: !6766)
!6780 = !DILocation(line: 221, column: 21, scope: !6781)
!6781 = distinct !DILexicalBlock(scope: !6777, file: !3, line: 220, column: 18)
!6782 = !DILocation(line: 221, column: 3, scope: !6781)
!6783 = !DILocation(line: 221, column: 19, scope: !6781)
!6784 = !DILocation(line: 222, column: 3, scope: !6781)
!6785 = !DILocation(line: 225, column: 3, scope: !6786)
!6786 = distinct !DILexicalBlock(scope: !6777, file: !3, line: 224, column: 7)
!6787 = !DILocation(line: 227, column: 1, scope: !6766)
!6788 = distinct !DISubprogram(name: "ww_close_none", scope: !3, file: !3, line: 228, type: !5846, scopeLine: 229, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !5641)
!6789 = !DILocalVariable(name: "ww", arg: 1, scope: !6788, file: !3, line: 228, type: !5836)
!6790 = !DILocation(line: 228, column: 38, scope: !6788)
!6791 = !DILocation(line: 230, column: 16, scope: !6788)
!6792 = !DILocation(line: 230, column: 10, scope: !6788)
!6793 = !DILocation(line: 230, column: 33, scope: !6788)
!6794 = !DILocation(line: 230, column: 9, scope: !6788)
!6795 = !DILocation(line: 230, column: 2, scope: !6788)
!6796 = distinct !DISubprogram(name: "ww_write_none", scope: !3, file: !3, line: 232, type: !5850, scopeLine: 233, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !5641)
!6797 = !DILocalVariable(name: "ww", arg: 1, scope: !6796, file: !3, line: 232, type: !5836)
!6798 = !DILocation(line: 232, column: 40, scope: !6796)
!6799 = !DILocalVariable(name: "buf", arg: 2, scope: !6796, file: !3, line: 232, type: !373)
!6800 = !DILocation(line: 232, column: 56, scope: !6796)
!6801 = !DILocalVariable(name: "buf_len", arg: 3, scope: !6796, file: !3, line: 232, type: !3291)
!6802 = !DILocation(line: 232, column: 68, scope: !6796)
!6803 = !DILocation(line: 234, column: 15, scope: !6796)
!6804 = !DILocation(line: 234, column: 32, scope: !6796)
!6805 = !DILocation(line: 234, column: 37, scope: !6796)
!6806 = !DILocation(line: 234, column: 9, scope: !6796)
!6807 = !DILocation(line: 234, column: 2, scope: !6796)
!6808 = distinct !DISubprogram(name: "bgnwrite", scope: !3, file: !3, line: 426, type: !6809, scopeLine: 427, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !5641)
!6809 = !DISubroutineType(types: !6810)
!6810 = !{!5820, !5836, !5828, !5828}
!6811 = !DILocalVariable(name: "ww", arg: 1, scope: !6808, file: !3, line: 426, type: !5836)
!6812 = !DILocation(line: 426, column: 39, scope: !6808)
!6813 = !DILocalVariable(name: "compare", arg: 2, scope: !6808, file: !3, line: 426, type: !5828)
!6814 = !DILocation(line: 426, column: 52, scope: !6808)
!6815 = !DILocalVariable(name: "current", arg: 3, scope: !6808, file: !3, line: 426, type: !5828)
!6816 = !DILocation(line: 426, column: 70, scope: !6808)
!6817 = !DILocalVariable(name: "wd", scope: !6808, file: !3, line: 428, type: !5820)
!6818 = !DILocation(line: 428, column: 13, scope: !6808)
!6819 = !DILocation(line: 428, column: 31, scope: !6808)
!6820 = !DILocation(line: 428, column: 17, scope: !6808)
!6821 = !DILocation(line: 430, column: 6, scope: !6822)
!6822 = distinct !DILexicalBlock(scope: !6808, file: !3, line: 430, column: 6)
!6823 = !DILocation(line: 430, column: 9, scope: !6822)
!6824 = !DILocation(line: 430, column: 6, scope: !6808)
!6825 = !DILocation(line: 430, column: 18, scope: !6822)
!6826 = !DILocation(line: 432, column: 15, scope: !6808)
!6827 = !DILocation(line: 432, column: 2, scope: !6808)
!6828 = !DILocation(line: 432, column: 6, scope: !6808)
!6829 = !DILocation(line: 432, column: 13, scope: !6808)
!6830 = !DILocation(line: 433, column: 15, scope: !6808)
!6831 = !DILocation(line: 433, column: 2, scope: !6808)
!6832 = !DILocation(line: 433, column: 6, scope: !6808)
!6833 = !DILocation(line: 433, column: 13, scope: !6808)
!6834 = !DILocation(line: 435, column: 19, scope: !6808)
!6835 = !DILocation(line: 435, column: 2, scope: !6808)
!6836 = !DILocation(line: 437, column: 9, scope: !6808)
!6837 = !DILocation(line: 437, column: 2, scope: !6808)
!6838 = !DILocation(line: 438, column: 1, scope: !6808)
!6839 = distinct !DISubprogram(name: "customnodes_add_deprecated_data", scope: !3, file: !3, line: 2971, type: !6840, scopeLine: 2972, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !5641)
!6840 = !DISubroutineType(types: !6841)
!6841 = !{null, !5879}
!6842 = !DILocalVariable(name: "mainvar", arg: 1, scope: !6839, file: !3, line: 2971, type: !5879)
!6843 = !DILocation(line: 2971, column: 51, scope: !6839)
!6844 = !DILocalVariable(name: "_nstore", scope: !6845, file: !3, line: 2973, type: !6846)
!6845 = distinct !DILexicalBlock(scope: !6839, file: !3, line: 2973, column: 2)
!6846 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "NodeTreeIterStore", file: !1072, line: 632, size: 448, elements: !6847)
!6847 = !{!6848, !6849, !6852, !6855, !6858, !6939, !6942}
!6848 = !DIDerivedType(tag: DW_TAG_member, name: "ngroup", scope: !6846, file: !1072, line: 633, baseType: !5196, size: 64)
!6849 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !6846, file: !1072, line: 634, baseType: !6850, size: 64, offset: 64)
!6850 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6851, size: 64)
!6851 = !DIDerivedType(tag: DW_TAG_typedef, name: "Scene", file: !829, line: 1299, baseType: !828)
!6852 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !6846, file: !1072, line: 635, baseType: !6853, size: 64, offset: 128)
!6853 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6854, size: 64)
!6854 = !DIDerivedType(tag: DW_TAG_typedef, name: "Material", file: !3786, line: 203, baseType: !3785)
!6855 = !DIDerivedType(tag: DW_TAG_member, name: "tex", scope: !6846, file: !1072, line: 636, baseType: !6856, size: 64, offset: 192)
!6856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6857, size: 64)
!6857 = !DIDerivedType(tag: DW_TAG_typedef, name: "Tex", file: !754, line: 261, baseType: !992)
!6858 = !DIDerivedType(tag: DW_TAG_member, name: "lamp", scope: !6846, file: !1072, line: 637, baseType: !6859, size: 64, offset: 256)
!6859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6860, size: 64)
!6860 = !DIDerivedType(tag: DW_TAG_typedef, name: "Lamp", file: !6861, line: 113, baseType: !6862)
!6861 = !DIFile(filename: "blender/source/blender/makesdna/DNA_lamp_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!6862 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Lamp", file: !6861, line: 48, size: 4160, elements: !6863)
!6863 = !{!6864, !6865, !6866, !6867, !6868, !6869, !6870, !6871, !6872, !6873, !6874, !6875, !6876, !6877, !6878, !6879, !6880, !6881, !6882, !6883, !6884, !6885, !6886, !6887, !6888, !6889, !6890, !6891, !6892, !6893, !6894, !6895, !6896, !6897, !6898, !6899, !6900, !6901, !6902, !6903, !6904, !6905, !6906, !6907, !6908, !6909, !6910, !6911, !6912, !6913, !6914, !6915, !6916, !6917, !6918, !6919, !6920, !6921, !6922, !6923, !6924, !6925, !6926, !6927, !6928, !6929, !6930, !6931, !6932, !6933, !6934, !6935, !6936, !6937, !6938}
!6864 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !6862, file: !6861, line: 49, baseType: !427, size: 960)
!6865 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !6862, file: !6861, line: 50, baseType: !833, size: 64, offset: 960)
!6866 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !6862, file: !6861, line: 52, baseType: !399, size: 16, offset: 1024)
!6867 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !6862, file: !6861, line: 52, baseType: !399, size: 16, offset: 1040)
!6868 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !6862, file: !6861, line: 53, baseType: !98, size: 32, offset: 1056)
!6869 = !DIDerivedType(tag: DW_TAG_member, name: "colormodel", scope: !6862, file: !6861, line: 55, baseType: !399, size: 16, offset: 1088)
!6870 = !DIDerivedType(tag: DW_TAG_member, name: "totex", scope: !6862, file: !6861, line: 55, baseType: !399, size: 16, offset: 1104)
!6871 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !6862, file: !6861, line: 56, baseType: !396, size: 32, offset: 1120)
!6872 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !6862, file: !6861, line: 56, baseType: !396, size: 32, offset: 1152)
!6873 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !6862, file: !6861, line: 56, baseType: !396, size: 32, offset: 1184)
!6874 = !DIDerivedType(tag: DW_TAG_member, name: "k", scope: !6862, file: !6861, line: 56, baseType: !396, size: 32, offset: 1216)
!6875 = !DIDerivedType(tag: DW_TAG_member, name: "shdwr", scope: !6862, file: !6861, line: 57, baseType: !396, size: 32, offset: 1248)
!6876 = !DIDerivedType(tag: DW_TAG_member, name: "shdwg", scope: !6862, file: !6861, line: 57, baseType: !396, size: 32, offset: 1280)
!6877 = !DIDerivedType(tag: DW_TAG_member, name: "shdwb", scope: !6862, file: !6861, line: 57, baseType: !396, size: 32, offset: 1312)
!6878 = !DIDerivedType(tag: DW_TAG_member, name: "shdwpad", scope: !6862, file: !6861, line: 57, baseType: !396, size: 32, offset: 1344)
!6879 = !DIDerivedType(tag: DW_TAG_member, name: "energy", scope: !6862, file: !6861, line: 59, baseType: !396, size: 32, offset: 1376)
!6880 = !DIDerivedType(tag: DW_TAG_member, name: "dist", scope: !6862, file: !6861, line: 59, baseType: !396, size: 32, offset: 1408)
!6881 = !DIDerivedType(tag: DW_TAG_member, name: "spotsize", scope: !6862, file: !6861, line: 59, baseType: !396, size: 32, offset: 1440)
!6882 = !DIDerivedType(tag: DW_TAG_member, name: "spotblend", scope: !6862, file: !6861, line: 59, baseType: !396, size: 32, offset: 1472)
!6883 = !DIDerivedType(tag: DW_TAG_member, name: "haint", scope: !6862, file: !6861, line: 60, baseType: !396, size: 32, offset: 1504)
!6884 = !DIDerivedType(tag: DW_TAG_member, name: "att1", scope: !6862, file: !6861, line: 63, baseType: !396, size: 32, offset: 1536)
!6885 = !DIDerivedType(tag: DW_TAG_member, name: "att2", scope: !6862, file: !6861, line: 63, baseType: !396, size: 32, offset: 1568)
!6886 = !DIDerivedType(tag: DW_TAG_member, name: "curfalloff", scope: !6862, file: !6861, line: 64, baseType: !1799, size: 64, offset: 1600)
!6887 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_type", scope: !6862, file: !6861, line: 65, baseType: !399, size: 16, offset: 1664)
!6888 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !6862, file: !6861, line: 66, baseType: !399, size: 16, offset: 1680)
!6889 = !DIDerivedType(tag: DW_TAG_member, name: "clipsta", scope: !6862, file: !6861, line: 68, baseType: !396, size: 32, offset: 1696)
!6890 = !DIDerivedType(tag: DW_TAG_member, name: "clipend", scope: !6862, file: !6861, line: 68, baseType: !396, size: 32, offset: 1728)
!6891 = !DIDerivedType(tag: DW_TAG_member, name: "bias", scope: !6862, file: !6861, line: 69, baseType: !396, size: 32, offset: 1760)
!6892 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !6862, file: !6861, line: 69, baseType: !396, size: 32, offset: 1792)
!6893 = !DIDerivedType(tag: DW_TAG_member, name: "compressthresh", scope: !6862, file: !6861, line: 69, baseType: !396, size: 32, offset: 1824)
!6894 = !DIDerivedType(tag: DW_TAG_member, name: "bleedbias", scope: !6862, file: !6861, line: 69, baseType: !396, size: 32, offset: 1856)
!6895 = !DIDerivedType(tag: DW_TAG_member, name: "pad5", scope: !6862, file: !6861, line: 69, baseType: !396, size: 32, offset: 1888)
!6896 = !DIDerivedType(tag: DW_TAG_member, name: "bufsize", scope: !6862, file: !6861, line: 70, baseType: !399, size: 16, offset: 1920)
!6897 = !DIDerivedType(tag: DW_TAG_member, name: "samp", scope: !6862, file: !6861, line: 70, baseType: !399, size: 16, offset: 1936)
!6898 = !DIDerivedType(tag: DW_TAG_member, name: "buffers", scope: !6862, file: !6861, line: 70, baseType: !399, size: 16, offset: 1952)
!6899 = !DIDerivedType(tag: DW_TAG_member, name: "filtertype", scope: !6862, file: !6861, line: 70, baseType: !399, size: 16, offset: 1968)
!6900 = !DIDerivedType(tag: DW_TAG_member, name: "bufflag", scope: !6862, file: !6861, line: 71, baseType: !375, size: 8, offset: 1984)
!6901 = !DIDerivedType(tag: DW_TAG_member, name: "buftype", scope: !6862, file: !6861, line: 71, baseType: !375, size: 8, offset: 1992)
!6902 = !DIDerivedType(tag: DW_TAG_member, name: "ray_samp", scope: !6862, file: !6861, line: 73, baseType: !399, size: 16, offset: 2000)
!6903 = !DIDerivedType(tag: DW_TAG_member, name: "ray_sampy", scope: !6862, file: !6861, line: 73, baseType: !399, size: 16, offset: 2016)
!6904 = !DIDerivedType(tag: DW_TAG_member, name: "ray_sampz", scope: !6862, file: !6861, line: 73, baseType: !399, size: 16, offset: 2032)
!6905 = !DIDerivedType(tag: DW_TAG_member, name: "ray_samp_type", scope: !6862, file: !6861, line: 74, baseType: !399, size: 16, offset: 2048)
!6906 = !DIDerivedType(tag: DW_TAG_member, name: "area_shape", scope: !6862, file: !6861, line: 75, baseType: !399, size: 16, offset: 2064)
!6907 = !DIDerivedType(tag: DW_TAG_member, name: "area_size", scope: !6862, file: !6861, line: 76, baseType: !396, size: 32, offset: 2080)
!6908 = !DIDerivedType(tag: DW_TAG_member, name: "area_sizey", scope: !6862, file: !6861, line: 76, baseType: !396, size: 32, offset: 2112)
!6909 = !DIDerivedType(tag: DW_TAG_member, name: "area_sizez", scope: !6862, file: !6861, line: 76, baseType: !396, size: 32, offset: 2144)
!6910 = !DIDerivedType(tag: DW_TAG_member, name: "adapt_thresh", scope: !6862, file: !6861, line: 77, baseType: !396, size: 32, offset: 2176)
!6911 = !DIDerivedType(tag: DW_TAG_member, name: "ray_samp_method", scope: !6862, file: !6861, line: 78, baseType: !399, size: 16, offset: 2208)
!6912 = !DIDerivedType(tag: DW_TAG_member, name: "shadowmap_type", scope: !6862, file: !6861, line: 79, baseType: !399, size: 16, offset: 2224)
!6913 = !DIDerivedType(tag: DW_TAG_member, name: "texact", scope: !6862, file: !6861, line: 82, baseType: !399, size: 16, offset: 2240)
!6914 = !DIDerivedType(tag: DW_TAG_member, name: "shadhalostep", scope: !6862, file: !6861, line: 82, baseType: !399, size: 16, offset: 2256)
!6915 = !DIDerivedType(tag: DW_TAG_member, name: "sun_effect_type", scope: !6862, file: !6861, line: 85, baseType: !399, size: 16, offset: 2272)
!6916 = !DIDerivedType(tag: DW_TAG_member, name: "skyblendtype", scope: !6862, file: !6861, line: 86, baseType: !399, size: 16, offset: 2288)
!6917 = !DIDerivedType(tag: DW_TAG_member, name: "horizon_brightness", scope: !6862, file: !6861, line: 87, baseType: !396, size: 32, offset: 2304)
!6918 = !DIDerivedType(tag: DW_TAG_member, name: "spread", scope: !6862, file: !6861, line: 88, baseType: !396, size: 32, offset: 2336)
!6919 = !DIDerivedType(tag: DW_TAG_member, name: "sun_brightness", scope: !6862, file: !6861, line: 89, baseType: !396, size: 32, offset: 2368)
!6920 = !DIDerivedType(tag: DW_TAG_member, name: "sun_size", scope: !6862, file: !6861, line: 90, baseType: !396, size: 32, offset: 2400)
!6921 = !DIDerivedType(tag: DW_TAG_member, name: "backscattered_light", scope: !6862, file: !6861, line: 91, baseType: !396, size: 32, offset: 2432)
!6922 = !DIDerivedType(tag: DW_TAG_member, name: "sun_intensity", scope: !6862, file: !6861, line: 92, baseType: !396, size: 32, offset: 2464)
!6923 = !DIDerivedType(tag: DW_TAG_member, name: "atm_turbidity", scope: !6862, file: !6861, line: 93, baseType: !396, size: 32, offset: 2496)
!6924 = !DIDerivedType(tag: DW_TAG_member, name: "atm_inscattering_factor", scope: !6862, file: !6861, line: 94, baseType: !396, size: 32, offset: 2528)
!6925 = !DIDerivedType(tag: DW_TAG_member, name: "atm_extinction_factor", scope: !6862, file: !6861, line: 95, baseType: !396, size: 32, offset: 2560)
!6926 = !DIDerivedType(tag: DW_TAG_member, name: "atm_distance_factor", scope: !6862, file: !6861, line: 96, baseType: !396, size: 32, offset: 2592)
!6927 = !DIDerivedType(tag: DW_TAG_member, name: "skyblendfac", scope: !6862, file: !6861, line: 97, baseType: !396, size: 32, offset: 2624)
!6928 = !DIDerivedType(tag: DW_TAG_member, name: "sky_exposure", scope: !6862, file: !6861, line: 98, baseType: !396, size: 32, offset: 2656)
!6929 = !DIDerivedType(tag: DW_TAG_member, name: "shadow_frustum_size", scope: !6862, file: !6861, line: 99, baseType: !396, size: 32, offset: 2688)
!6930 = !DIDerivedType(tag: DW_TAG_member, name: "sky_colorspace", scope: !6862, file: !6861, line: 100, baseType: !399, size: 16, offset: 2720)
!6931 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !6862, file: !6861, line: 101, baseType: !2647, size: 16, offset: 2736)
!6932 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !6862, file: !6861, line: 103, baseType: !978, size: 64, offset: 2752)
!6933 = !DIDerivedType(tag: DW_TAG_member, name: "mtex", scope: !6862, file: !6861, line: 104, baseType: !981, size: 1152, offset: 2816)
!6934 = !DIDerivedType(tag: DW_TAG_member, name: "pr_texture", scope: !6862, file: !6861, line: 105, baseType: !399, size: 16, offset: 3968)
!6935 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !6862, file: !6861, line: 105, baseType: !399, size: 16, offset: 3984)
!6936 = !DIDerivedType(tag: DW_TAG_member, name: "pad6", scope: !6862, file: !6861, line: 106, baseType: !2395, size: 32, offset: 4000)
!6937 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !6862, file: !6861, line: 109, baseType: !1699, size: 64, offset: 4032)
!6938 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !6862, file: !6861, line: 112, baseType: !1064, size: 64, offset: 4096)
!6939 = !DIDerivedType(tag: DW_TAG_member, name: "world", scope: !6846, file: !1072, line: 638, baseType: !6940, size: 64, offset: 320)
!6940 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6941, size: 64)
!6941 = !DIDerivedType(tag: DW_TAG_typedef, name: "World", file: !905, line: 131, baseType: !904)
!6942 = !DIDerivedType(tag: DW_TAG_member, name: "linestyle", scope: !6846, file: !1072, line: 639, baseType: !6943, size: 64, offset: 384)
!6943 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6944, size: 64)
!6944 = !DIDerivedType(tag: DW_TAG_typedef, name: "FreestyleLineStyle", file: !5507, line: 454, baseType: !6945)
!6945 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FreestyleLineStyle", file: !5507, line: 421, size: 3712, elements: !6946)
!6946 = !{!6947, !6948, !6949, !6950, !6951, !6952, !6953, !6954, !6955, !6956, !6957, !6958, !6959, !6960, !6961, !6962, !6963, !6964, !6965, !6966, !6967, !6968, !6969, !6970, !6971, !6972, !6973, !6974, !6975, !6976, !6977, !6978, !6979, !6980, !6981, !6982, !6983, !6984, !6985, !6986, !6987, !6988, !6989, !6990, !6991}
!6947 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !6945, file: !5507, line: 422, baseType: !427, size: 960)
!6948 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !6945, file: !5507, line: 423, baseType: !833, size: 64, offset: 960)
!6949 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !6945, file: !5507, line: 425, baseType: !396, size: 32, offset: 1024)
!6950 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !6945, file: !5507, line: 425, baseType: !396, size: 32, offset: 1056)
!6951 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !6945, file: !5507, line: 425, baseType: !396, size: 32, offset: 1088)
!6952 = !DIDerivedType(tag: DW_TAG_member, name: "alpha", scope: !6945, file: !5507, line: 425, baseType: !396, size: 32, offset: 1120)
!6953 = !DIDerivedType(tag: DW_TAG_member, name: "thickness", scope: !6945, file: !5507, line: 426, baseType: !396, size: 32, offset: 1152)
!6954 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_position", scope: !6945, file: !5507, line: 427, baseType: !98, size: 32, offset: 1184)
!6955 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_ratio", scope: !6945, file: !5507, line: 428, baseType: !396, size: 32, offset: 1216)
!6956 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !6945, file: !5507, line: 429, baseType: !98, size: 32, offset: 1248)
!6957 = !DIDerivedType(tag: DW_TAG_member, name: "caps", scope: !6945, file: !5507, line: 429, baseType: !98, size: 32, offset: 1280)
!6958 = !DIDerivedType(tag: DW_TAG_member, name: "chaining", scope: !6945, file: !5507, line: 430, baseType: !98, size: 32, offset: 1312)
!6959 = !DIDerivedType(tag: DW_TAG_member, name: "rounds", scope: !6945, file: !5507, line: 431, baseType: !7, size: 32, offset: 1344)
!6960 = !DIDerivedType(tag: DW_TAG_member, name: "split_length", scope: !6945, file: !5507, line: 432, baseType: !396, size: 32, offset: 1376)
!6961 = !DIDerivedType(tag: DW_TAG_member, name: "min_angle", scope: !6945, file: !5507, line: 433, baseType: !396, size: 32, offset: 1408)
!6962 = !DIDerivedType(tag: DW_TAG_member, name: "max_angle", scope: !6945, file: !5507, line: 433, baseType: !396, size: 32, offset: 1440)
!6963 = !DIDerivedType(tag: DW_TAG_member, name: "min_length", scope: !6945, file: !5507, line: 434, baseType: !396, size: 32, offset: 1472)
!6964 = !DIDerivedType(tag: DW_TAG_member, name: "max_length", scope: !6945, file: !5507, line: 434, baseType: !396, size: 32, offset: 1504)
!6965 = !DIDerivedType(tag: DW_TAG_member, name: "chain_count", scope: !6945, file: !5507, line: 435, baseType: !7, size: 32, offset: 1536)
!6966 = !DIDerivedType(tag: DW_TAG_member, name: "split_dash1", scope: !6945, file: !5507, line: 436, baseType: !3273, size: 16, offset: 1568)
!6967 = !DIDerivedType(tag: DW_TAG_member, name: "split_gap1", scope: !6945, file: !5507, line: 436, baseType: !3273, size: 16, offset: 1584)
!6968 = !DIDerivedType(tag: DW_TAG_member, name: "split_dash2", scope: !6945, file: !5507, line: 437, baseType: !3273, size: 16, offset: 1600)
!6969 = !DIDerivedType(tag: DW_TAG_member, name: "split_gap2", scope: !6945, file: !5507, line: 437, baseType: !3273, size: 16, offset: 1616)
!6970 = !DIDerivedType(tag: DW_TAG_member, name: "split_dash3", scope: !6945, file: !5507, line: 438, baseType: !3273, size: 16, offset: 1632)
!6971 = !DIDerivedType(tag: DW_TAG_member, name: "split_gap3", scope: !6945, file: !5507, line: 438, baseType: !3273, size: 16, offset: 1648)
!6972 = !DIDerivedType(tag: DW_TAG_member, name: "sort_key", scope: !6945, file: !5507, line: 439, baseType: !98, size: 32, offset: 1664)
!6973 = !DIDerivedType(tag: DW_TAG_member, name: "integration_type", scope: !6945, file: !5507, line: 439, baseType: !98, size: 32, offset: 1696)
!6974 = !DIDerivedType(tag: DW_TAG_member, name: "texstep", scope: !6945, file: !5507, line: 440, baseType: !396, size: 32, offset: 1728)
!6975 = !DIDerivedType(tag: DW_TAG_member, name: "texact", scope: !6945, file: !5507, line: 441, baseType: !399, size: 16, offset: 1760)
!6976 = !DIDerivedType(tag: DW_TAG_member, name: "pr_texture", scope: !6945, file: !5507, line: 441, baseType: !399, size: 16, offset: 1776)
!6977 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !6945, file: !5507, line: 442, baseType: !399, size: 16, offset: 1792)
!6978 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !6945, file: !5507, line: 442, baseType: !811, size: 48, offset: 1808)
!6979 = !DIDerivedType(tag: DW_TAG_member, name: "dash1", scope: !6945, file: !5507, line: 443, baseType: !3273, size: 16, offset: 1856)
!6980 = !DIDerivedType(tag: DW_TAG_member, name: "gap1", scope: !6945, file: !5507, line: 443, baseType: !3273, size: 16, offset: 1872)
!6981 = !DIDerivedType(tag: DW_TAG_member, name: "dash2", scope: !6945, file: !5507, line: 443, baseType: !3273, size: 16, offset: 1888)
!6982 = !DIDerivedType(tag: DW_TAG_member, name: "gap2", scope: !6945, file: !5507, line: 443, baseType: !3273, size: 16, offset: 1904)
!6983 = !DIDerivedType(tag: DW_TAG_member, name: "dash3", scope: !6945, file: !5507, line: 443, baseType: !3273, size: 16, offset: 1920)
!6984 = !DIDerivedType(tag: DW_TAG_member, name: "gap3", scope: !6945, file: !5507, line: 443, baseType: !3273, size: 16, offset: 1936)
!6985 = !DIDerivedType(tag: DW_TAG_member, name: "panel", scope: !6945, file: !5507, line: 444, baseType: !98, size: 32, offset: 1952)
!6986 = !DIDerivedType(tag: DW_TAG_member, name: "mtex", scope: !6945, file: !5507, line: 446, baseType: !981, size: 1152, offset: 1984)
!6987 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !6945, file: !5507, line: 448, baseType: !1064, size: 64, offset: 3136)
!6988 = !DIDerivedType(tag: DW_TAG_member, name: "color_modifiers", scope: !6945, file: !5507, line: 450, baseType: !388, size: 128, offset: 3200)
!6989 = !DIDerivedType(tag: DW_TAG_member, name: "alpha_modifiers", scope: !6945, file: !5507, line: 451, baseType: !388, size: 128, offset: 3328)
!6990 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_modifiers", scope: !6945, file: !5507, line: 452, baseType: !388, size: 128, offset: 3456)
!6991 = !DIDerivedType(tag: DW_TAG_member, name: "geometry_modifiers", scope: !6945, file: !5507, line: 453, baseType: !388, size: 128, offset: 3584)
!6992 = !DILocation(line: 2973, column: 2, scope: !6845)
!6993 = !DILocalVariable(name: "ntree", scope: !6845, file: !3, line: 2973, type: !5196)
!6994 = !DILocalVariable(name: "id", scope: !6845, file: !3, line: 2973, type: !441)
!6995 = !DILocation(line: 2973, column: 2, scope: !6996)
!6996 = distinct !DILexicalBlock(scope: !6997, file: !3, line: 2973, column: 2)
!6997 = distinct !DILexicalBlock(scope: !6845, file: !3, line: 2973, column: 2)
!6998 = !DILocation(line: 2973, column: 2, scope: !6997)
!6999 = !DILocalVariable(name: "link", scope: !7000, file: !3, line: 2974, type: !7002)
!7000 = distinct !DILexicalBlock(scope: !7001, file: !3, line: 2973, column: 39)
!7001 = distinct !DILexicalBlock(scope: !6996, file: !3, line: 2973, column: 2)
!7002 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7003, size: 64)
!7003 = !DIDerivedType(tag: DW_TAG_typedef, name: "bNodeLink", file: !56, line: 306, baseType: !1263)
!7004 = !DILocation(line: 2974, column: 14, scope: !7000)
!7005 = !DILocalVariable(name: "last_link", scope: !7000, file: !3, line: 2974, type: !7002)
!7006 = !DILocation(line: 2974, column: 21, scope: !7000)
!7007 = !DILocation(line: 2974, column: 33, scope: !7000)
!7008 = !DILocation(line: 2974, column: 40, scope: !7000)
!7009 = !DILocation(line: 2974, column: 46, scope: !7000)
!7010 = !DILocation(line: 2977, column: 7, scope: !7011)
!7011 = distinct !DILexicalBlock(scope: !7000, file: !3, line: 2977, column: 7)
!7012 = !DILocation(line: 2977, column: 14, scope: !7011)
!7013 = !DILocation(line: 2977, column: 21, scope: !7011)
!7014 = !DILocation(line: 2977, column: 10, scope: !7011)
!7015 = !DILocation(line: 2977, column: 7, scope: !7000)
!7016 = !DILocation(line: 2978, column: 4, scope: !7011)
!7017 = distinct !{!7017, !6992, !7018}
!7018 = !DILocation(line: 3019, column: 2, scope: !6845)
!7019 = !DILocation(line: 2987, column: 15, scope: !7020)
!7020 = distinct !DILexicalBlock(scope: !7000, file: !3, line: 2987, column: 3)
!7021 = !DILocation(line: 2987, column: 22, scope: !7020)
!7022 = !DILocation(line: 2987, column: 28, scope: !7020)
!7023 = !DILocation(line: 2987, column: 13, scope: !7020)
!7024 = !DILocation(line: 2987, column: 8, scope: !7020)
!7025 = !DILocation(line: 2987, column: 35, scope: !7026)
!7026 = distinct !DILexicalBlock(scope: !7020, file: !3, line: 2987, column: 3)
!7027 = !DILocation(line: 2987, column: 3, scope: !7020)
!7028 = !DILocalVariable(name: "fromnode", scope: !7029, file: !3, line: 2988, type: !1268)
!7029 = distinct !DILexicalBlock(scope: !7026, file: !3, line: 2987, column: 60)
!7030 = !DILocation(line: 2988, column: 11, scope: !7029)
!7031 = !DILocation(line: 2988, column: 22, scope: !7029)
!7032 = !DILocation(line: 2988, column: 28, scope: !7029)
!7033 = !DILocalVariable(name: "tonode", scope: !7029, file: !3, line: 2988, type: !1268)
!7034 = !DILocation(line: 2988, column: 39, scope: !7029)
!7035 = !DILocation(line: 2988, column: 48, scope: !7029)
!7036 = !DILocation(line: 2988, column: 54, scope: !7029)
!7037 = !DILocalVariable(name: "fromsock", scope: !7029, file: !3, line: 2989, type: !1272)
!7038 = !DILocation(line: 2989, column: 17, scope: !7029)
!7039 = !DILocation(line: 2989, column: 28, scope: !7029)
!7040 = !DILocation(line: 2989, column: 34, scope: !7029)
!7041 = !DILocalVariable(name: "tosock", scope: !7029, file: !3, line: 2989, type: !1272)
!7042 = !DILocation(line: 2989, column: 45, scope: !7029)
!7043 = !DILocation(line: 2989, column: 54, scope: !7029)
!7044 = !DILocation(line: 2989, column: 60, scope: !7029)
!7045 = !DILocation(line: 2992, column: 8, scope: !7046)
!7046 = distinct !DILexicalBlock(scope: !7029, file: !3, line: 2992, column: 8)
!7047 = !DILocation(line: 2992, column: 18, scope: !7046)
!7048 = !DILocation(line: 2992, column: 23, scope: !7046)
!7049 = !DILocation(line: 2992, column: 8, scope: !7029)
!7050 = !DILocation(line: 2993, column: 14, scope: !7051)
!7051 = distinct !DILexicalBlock(scope: !7046, file: !3, line: 2992, column: 44)
!7052 = !DILocation(line: 2994, column: 41, scope: !7051)
!7053 = !DILocation(line: 2994, column: 57, scope: !7051)
!7054 = !DILocation(line: 2994, column: 67, scope: !7051)
!7055 = !DILocation(line: 2994, column: 16, scope: !7051)
!7056 = !DILocation(line: 2994, column: 14, scope: !7051)
!7057 = !DILocation(line: 2995, column: 4, scope: !7051)
!7058 = !DILocation(line: 2997, column: 8, scope: !7059)
!7059 = distinct !DILexicalBlock(scope: !7029, file: !3, line: 2997, column: 8)
!7060 = !DILocation(line: 2997, column: 16, scope: !7059)
!7061 = !DILocation(line: 2997, column: 21, scope: !7059)
!7062 = !DILocation(line: 2997, column: 42, scope: !7059)
!7063 = !DILocation(line: 2997, column: 46, scope: !7059)
!7064 = !DILocation(line: 2997, column: 54, scope: !7059)
!7065 = !DILocation(line: 2997, column: 59, scope: !7059)
!7066 = !DILocation(line: 2997, column: 8, scope: !7029)
!7067 = !DILocation(line: 2998, column: 12, scope: !7068)
!7068 = distinct !DILexicalBlock(scope: !7059, file: !3, line: 2997, column: 78)
!7069 = !DILocation(line: 2999, column: 39, scope: !7068)
!7070 = !DILocation(line: 2999, column: 56, scope: !7068)
!7071 = !DILocation(line: 2999, column: 64, scope: !7068)
!7072 = !DILocation(line: 2999, column: 14, scope: !7068)
!7073 = !DILocation(line: 2999, column: 12, scope: !7068)
!7074 = !DILocation(line: 3000, column: 4, scope: !7068)
!7075 = !DILocation(line: 3002, column: 9, scope: !7076)
!7076 = distinct !DILexicalBlock(scope: !7029, file: !3, line: 3002, column: 8)
!7077 = !DILocation(line: 3002, column: 18, scope: !7076)
!7078 = !DILocation(line: 3002, column: 22, scope: !7076)
!7079 = !DILocation(line: 3002, column: 8, scope: !7029)
!7080 = !DILocalVariable(name: "tlink", scope: !7081, file: !3, line: 3004, type: !7002)
!7081 = distinct !DILexicalBlock(scope: !7076, file: !3, line: 3002, column: 30)
!7082 = !DILocation(line: 3004, column: 16, scope: !7081)
!7083 = !DILocation(line: 3004, column: 24, scope: !7081)
!7084 = !DILocation(line: 3005, column: 23, scope: !7081)
!7085 = !DILocation(line: 3005, column: 5, scope: !7081)
!7086 = !DILocation(line: 3005, column: 12, scope: !7081)
!7087 = !DILocation(line: 3005, column: 21, scope: !7081)
!7088 = !DILocation(line: 3006, column: 23, scope: !7081)
!7089 = !DILocation(line: 3006, column: 5, scope: !7081)
!7090 = !DILocation(line: 3006, column: 12, scope: !7081)
!7091 = !DILocation(line: 3006, column: 21, scope: !7081)
!7092 = !DILocation(line: 3007, column: 21, scope: !7081)
!7093 = !DILocation(line: 3007, column: 5, scope: !7081)
!7094 = !DILocation(line: 3007, column: 12, scope: !7081)
!7095 = !DILocation(line: 3007, column: 19, scope: !7081)
!7096 = !DILocation(line: 3008, column: 20, scope: !7081)
!7097 = !DILocation(line: 3008, column: 5, scope: !7081)
!7098 = !DILocation(line: 3008, column: 12, scope: !7081)
!7099 = !DILocation(line: 3008, column: 18, scope: !7081)
!7100 = !DILocation(line: 3009, column: 20, scope: !7081)
!7101 = !DILocation(line: 3009, column: 5, scope: !7081)
!7102 = !DILocation(line: 3009, column: 13, scope: !7081)
!7103 = !DILocation(line: 3009, column: 18, scope: !7081)
!7104 = !DILocation(line: 3010, column: 5, scope: !7081)
!7105 = !DILocation(line: 3010, column: 12, scope: !7081)
!7106 = !DILocation(line: 3010, column: 17, scope: !7081)
!7107 = !DILocation(line: 3011, column: 18, scope: !7081)
!7108 = !DILocation(line: 3011, column: 25, scope: !7081)
!7109 = !DILocation(line: 3011, column: 32, scope: !7081)
!7110 = !DILocation(line: 3011, column: 5, scope: !7081)
!7111 = !DILocation(line: 3012, column: 4, scope: !7081)
!7112 = !DILocation(line: 3015, column: 8, scope: !7113)
!7113 = distinct !DILexicalBlock(scope: !7029, file: !3, line: 3015, column: 8)
!7114 = !DILocation(line: 3015, column: 16, scope: !7113)
!7115 = !DILocation(line: 3015, column: 13, scope: !7113)
!7116 = !DILocation(line: 3015, column: 8, scope: !7029)
!7117 = !DILocation(line: 3016, column: 5, scope: !7113)
!7118 = !DILocation(line: 3017, column: 3, scope: !7029)
!7119 = !DILocation(line: 2987, column: 48, scope: !7026)
!7120 = !DILocation(line: 2987, column: 54, scope: !7026)
!7121 = !DILocation(line: 2987, column: 46, scope: !7026)
!7122 = !DILocation(line: 2987, column: 3, scope: !7026)
!7123 = distinct !{!7123, !7027, !7124}
!7124 = !DILocation(line: 3017, column: 3, scope: !7020)
!7125 = !DILocation(line: 3019, column: 2, scope: !7001)
!7126 = !DILocation(line: 3020, column: 1, scope: !6839)
!7127 = distinct !DISubprogram(name: "write_renderinfo", scope: !3, file: !3, line: 944, type: !7128, scopeLine: 945, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !5641)
!7128 = !DISubroutineType(types: !7129)
!7129 = !{null, !5820, !5879}
!7130 = !DILocalVariable(name: "wd", arg: 1, scope: !7127, file: !3, line: 944, type: !5820)
!7131 = !DILocation(line: 944, column: 41, scope: !7127)
!7132 = !DILocalVariable(name: "mainvar", arg: 2, scope: !7127, file: !3, line: 944, type: !5879)
!7133 = !DILocation(line: 944, column: 51, scope: !7127)
!7134 = !DILocalVariable(name: "curscreen", scope: !7127, file: !3, line: 946, type: !7135)
!7135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7136, size: 64)
!7136 = !DIDerivedType(tag: DW_TAG_typedef, name: "bScreen", file: !86, line: 80, baseType: !819)
!7137 = !DILocation(line: 946, column: 11, scope: !7127)
!7138 = !DILocalVariable(name: "sce", scope: !7127, file: !3, line: 947, type: !6850)
!7139 = !DILocation(line: 947, column: 9, scope: !7127)
!7140 = !DILocalVariable(name: "curscene", scope: !7127, file: !3, line: 947, type: !6850)
!7141 = !DILocation(line: 947, column: 15, scope: !7127)
!7142 = !DILocalVariable(name: "data", scope: !7127, file: !3, line: 948, type: !7143)
!7143 = !DIDerivedType(tag: DW_TAG_typedef, name: "RenderInfo", file: !3, line: 939, baseType: !7144)
!7144 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderInfo", file: !3, line: 935, size: 576, elements: !7145)
!7145 = !{!7146, !7147, !7148}
!7146 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !7144, file: !3, line: 936, baseType: !98, size: 32)
!7147 = !DIDerivedType(tag: DW_TAG_member, name: "efra", scope: !7144, file: !3, line: 937, baseType: !98, size: 32, offset: 32)
!7148 = !DIDerivedType(tag: DW_TAG_member, name: "scene_name", scope: !7144, file: !3, line: 938, baseType: !692, size: 512, offset: 64)
!7149 = !DILocation(line: 948, column: 13, scope: !7127)
!7150 = !DILocation(line: 951, column: 24, scope: !7127)
!7151 = !DILocation(line: 951, column: 2, scope: !7127)
!7152 = !DILocation(line: 952, column: 6, scope: !7153)
!7153 = distinct !DILexicalBlock(scope: !7127, file: !3, line: 952, column: 6)
!7154 = !DILocation(line: 952, column: 6, scope: !7127)
!7155 = !DILocation(line: 952, column: 28, scope: !7153)
!7156 = !DILocation(line: 952, column: 39, scope: !7153)
!7157 = !DILocation(line: 952, column: 26, scope: !7153)
!7158 = !DILocation(line: 952, column: 17, scope: !7153)
!7159 = !DILocation(line: 954, column: 12, scope: !7160)
!7160 = distinct !DILexicalBlock(scope: !7127, file: !3, line: 954, column: 2)
!7161 = !DILocation(line: 954, column: 21, scope: !7160)
!7162 = !DILocation(line: 954, column: 27, scope: !7160)
!7163 = !DILocation(line: 954, column: 10, scope: !7160)
!7164 = !DILocation(line: 954, column: 7, scope: !7160)
!7165 = !DILocation(line: 954, column: 34, scope: !7166)
!7166 = distinct !DILexicalBlock(scope: !7160, file: !3, line: 954, column: 2)
!7167 = !DILocation(line: 954, column: 2, scope: !7160)
!7168 = !DILocation(line: 955, column: 7, scope: !7169)
!7169 = distinct !DILexicalBlock(scope: !7170, file: !3, line: 955, column: 7)
!7170 = distinct !DILexicalBlock(scope: !7166, file: !3, line: 954, column: 58)
!7171 = !DILocation(line: 955, column: 12, scope: !7169)
!7172 = !DILocation(line: 955, column: 15, scope: !7169)
!7173 = !DILocation(line: 955, column: 19, scope: !7169)
!7174 = !DILocation(line: 955, column: 27, scope: !7169)
!7175 = !DILocation(line: 955, column: 31, scope: !7169)
!7176 = !DILocation(line: 955, column: 38, scope: !7169)
!7177 = !DILocation(line: 955, column: 35, scope: !7169)
!7178 = !DILocation(line: 955, column: 47, scope: !7169)
!7179 = !DILocation(line: 955, column: 51, scope: !7169)
!7180 = !DILocation(line: 955, column: 56, scope: !7169)
!7181 = !DILocation(line: 955, column: 58, scope: !7169)
!7182 = !DILocation(line: 955, column: 66, scope: !7169)
!7183 = !DILocation(line: 955, column: 7, scope: !7170)
!7184 = !DILocation(line: 956, column: 16, scope: !7185)
!7185 = distinct !DILexicalBlock(scope: !7169, file: !3, line: 955, column: 83)
!7186 = !DILocation(line: 956, column: 21, scope: !7185)
!7187 = !DILocation(line: 956, column: 23, scope: !7185)
!7188 = !DILocation(line: 956, column: 9, scope: !7185)
!7189 = !DILocation(line: 956, column: 14, scope: !7185)
!7190 = !DILocation(line: 957, column: 16, scope: !7185)
!7191 = !DILocation(line: 957, column: 21, scope: !7185)
!7192 = !DILocation(line: 957, column: 23, scope: !7185)
!7193 = !DILocation(line: 957, column: 9, scope: !7185)
!7194 = !DILocation(line: 957, column: 14, scope: !7185)
!7195 = !DILocation(line: 958, column: 16, scope: !7185)
!7196 = !DILocation(line: 958, column: 4, scope: !7185)
!7197 = !DILocation(line: 960, column: 21, scope: !7185)
!7198 = !DILocation(line: 960, column: 16, scope: !7185)
!7199 = !DILocation(line: 960, column: 33, scope: !7185)
!7200 = !DILocation(line: 960, column: 38, scope: !7185)
!7201 = !DILocation(line: 960, column: 41, scope: !7185)
!7202 = !DILocation(line: 960, column: 46, scope: !7185)
!7203 = !DILocation(line: 960, column: 4, scope: !7185)
!7204 = !DILocation(line: 962, column: 14, scope: !7185)
!7205 = !DILocation(line: 962, column: 38, scope: !7185)
!7206 = !DILocation(line: 962, column: 4, scope: !7185)
!7207 = !DILocation(line: 963, column: 3, scope: !7185)
!7208 = !DILocation(line: 964, column: 2, scope: !7170)
!7209 = !DILocation(line: 954, column: 44, scope: !7166)
!7210 = !DILocation(line: 954, column: 49, scope: !7166)
!7211 = !DILocation(line: 954, column: 52, scope: !7166)
!7212 = !DILocation(line: 954, column: 42, scope: !7166)
!7213 = !DILocation(line: 954, column: 2, scope: !7166)
!7214 = distinct !{!7214, !7167, !7215}
!7215 = !DILocation(line: 964, column: 2, scope: !7160)
!7216 = !DILocation(line: 965, column: 1, scope: !7127)
!7217 = distinct !DISubprogram(name: "write_thumb", scope: !3, file: !3, line: 3486, type: !7218, scopeLine: 3487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !5641)
!7218 = !DISubroutineType(types: !7219)
!7219 = !{null, !5820, !5883}
!7220 = !DILocalVariable(name: "wd", arg: 1, scope: !7217, file: !3, line: 3486, type: !5820)
!7221 = !DILocation(line: 3486, column: 36, scope: !7217)
!7222 = !DILocalVariable(name: "img", arg: 2, scope: !7217, file: !3, line: 3486, type: !5883)
!7223 = !DILocation(line: 3486, column: 51, scope: !7217)
!7224 = !DILocation(line: 3488, column: 6, scope: !7225)
!7225 = distinct !DILexicalBlock(scope: !7217, file: !3, line: 3488, column: 6)
!7226 = !DILocation(line: 3488, column: 6, scope: !7217)
!7227 = !DILocation(line: 3489, column: 13, scope: !7225)
!7228 = !DILocation(line: 3489, column: 28, scope: !7225)
!7229 = !DILocation(line: 3489, column: 37, scope: !7225)
!7230 = !DILocation(line: 3489, column: 35, scope: !7225)
!7231 = !DILocation(line: 3489, column: 26, scope: !7225)
!7232 = !DILocation(line: 3489, column: 23, scope: !7225)
!7233 = !DILocation(line: 3489, column: 45, scope: !7225)
!7234 = !DILocation(line: 3489, column: 60, scope: !7225)
!7235 = !DILocation(line: 3489, column: 3, scope: !7225)
!7236 = !DILocation(line: 3490, column: 1, scope: !7217)
!7237 = distinct !DISubprogram(name: "write_global", scope: !3, file: !3, line: 3437, type: !7238, scopeLine: 3438, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !5641)
!7238 = !DISubroutineType(types: !7239)
!7239 = !{null, !5820, !98, !5879}
!7240 = !DILocalVariable(name: "wd", arg: 1, scope: !7237, file: !3, line: 3437, type: !5820)
!7241 = !DILocation(line: 3437, column: 37, scope: !7237)
!7242 = !DILocalVariable(name: "fileflags", arg: 2, scope: !7237, file: !3, line: 3437, type: !98)
!7243 = !DILocation(line: 3437, column: 45, scope: !7237)
!7244 = !DILocalVariable(name: "mainvar", arg: 3, scope: !7237, file: !3, line: 3437, type: !5879)
!7245 = !DILocation(line: 3437, column: 62, scope: !7237)
!7246 = !DILocalVariable(name: "fg", scope: !7237, file: !3, line: 3439, type: !7247)
!7247 = !DIDerivedType(tag: DW_TAG_typedef, name: "FileGlobal", file: !7248, line: 55, baseType: !7249)
!7248 = !DIFile(filename: "blender/source/blender/makesdna/DNA_fileglobal_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!7249 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FileGlobal", file: !7248, line: 42, size: 8704, elements: !7250)
!7250 = !{!7251, !7252, !7253, !7254, !7255, !7256, !7257, !7258, !7259, !7260, !7261, !7262, !7263, !7264}
!7251 = !DIDerivedType(tag: DW_TAG_member, name: "subvstr", scope: !7249, file: !7248, line: 43, baseType: !2395, size: 32)
!7252 = !DIDerivedType(tag: DW_TAG_member, name: "subversion", scope: !7249, file: !7248, line: 44, baseType: !399, size: 16, offset: 32)
!7253 = !DIDerivedType(tag: DW_TAG_member, name: "pads", scope: !7249, file: !7248, line: 44, baseType: !399, size: 16, offset: 48)
!7254 = !DIDerivedType(tag: DW_TAG_member, name: "minversion", scope: !7249, file: !7248, line: 45, baseType: !399, size: 16, offset: 64)
!7255 = !DIDerivedType(tag: DW_TAG_member, name: "minsubversion", scope: !7249, file: !7248, line: 45, baseType: !399, size: 16, offset: 80)
!7256 = !DIDerivedType(tag: DW_TAG_member, name: "displaymode", scope: !7249, file: !7248, line: 46, baseType: !399, size: 16, offset: 96)
!7257 = !DIDerivedType(tag: DW_TAG_member, name: "winpos", scope: !7249, file: !7248, line: 46, baseType: !399, size: 16, offset: 112)
!7258 = !DIDerivedType(tag: DW_TAG_member, name: "curscreen", scope: !7249, file: !7248, line: 47, baseType: !818, size: 64, offset: 128)
!7259 = !DIDerivedType(tag: DW_TAG_member, name: "curscene", scope: !7249, file: !7248, line: 48, baseType: !827, size: 64, offset: 192)
!7260 = !DIDerivedType(tag: DW_TAG_member, name: "fileflags", scope: !7249, file: !7248, line: 49, baseType: !98, size: 32, offset: 256)
!7261 = !DIDerivedType(tag: DW_TAG_member, name: "globalf", scope: !7249, file: !7248, line: 50, baseType: !98, size: 32, offset: 288)
!7262 = !DIDerivedType(tag: DW_TAG_member, name: "build_commit_timestamp", scope: !7249, file: !7248, line: 51, baseType: !585, size: 64, offset: 320)
!7263 = !DIDerivedType(tag: DW_TAG_member, name: "build_hash", scope: !7249, file: !7248, line: 52, baseType: !590, size: 128, offset: 384)
!7264 = !DIDerivedType(tag: DW_TAG_member, name: "filename", scope: !7249, file: !7248, line: 54, baseType: !478, size: 8192, offset: 512)
!7265 = !DILocation(line: 3439, column: 13, scope: !7237)
!7266 = !DILocalVariable(name: "screen", scope: !7237, file: !3, line: 3440, type: !7135)
!7267 = !DILocation(line: 3440, column: 11, scope: !7237)
!7268 = !DILocalVariable(name: "subvstr", scope: !7237, file: !3, line: 3441, type: !2588)
!7269 = !DILocation(line: 3441, column: 7, scope: !7237)
!7270 = !DILocation(line: 3444, column: 5, scope: !7237)
!7271 = !DILocation(line: 3444, column: 9, scope: !7237)
!7272 = !DILocation(line: 3445, column: 12, scope: !7237)
!7273 = !DILocation(line: 3445, column: 2, scope: !7237)
!7274 = !DILocation(line: 3446, column: 12, scope: !7237)
!7275 = !DILocation(line: 3446, column: 2, scope: !7237)
!7276 = !DILocation(line: 3448, column: 24, scope: !7237)
!7277 = !DILocation(line: 3448, column: 2, scope: !7237)
!7278 = !DILocation(line: 3451, column: 16, scope: !7237)
!7279 = !DILocation(line: 3451, column: 5, scope: !7237)
!7280 = !DILocation(line: 3451, column: 14, scope: !7237)
!7281 = !DILocation(line: 3452, column: 15, scope: !7237)
!7282 = !DILocation(line: 3452, column: 24, scope: !7237)
!7283 = !DILocation(line: 3452, column: 32, scope: !7237)
!7284 = !DILocation(line: 3452, column: 5, scope: !7237)
!7285 = !DILocation(line: 3452, column: 13, scope: !7237)
!7286 = !DILocation(line: 3453, column: 20, scope: !7237)
!7287 = !DILocation(line: 3453, column: 5, scope: !7237)
!7288 = !DILocation(line: 3453, column: 16, scope: !7237)
!7289 = !DILocation(line: 3454, column: 15, scope: !7237)
!7290 = !DILocation(line: 3454, column: 5, scope: !7237)
!7291 = !DILocation(line: 3454, column: 11, scope: !7237)
!7292 = !DILocation(line: 3457, column: 17, scope: !7237)
!7293 = !DILocation(line: 3457, column: 27, scope: !7237)
!7294 = !DILocation(line: 3457, column: 5, scope: !7237)
!7295 = !DILocation(line: 3457, column: 14, scope: !7237)
!7296 = !DILocation(line: 3459, column: 16, scope: !7237)
!7297 = !DILocation(line: 3459, column: 5, scope: !7237)
!7298 = !DILocation(line: 3459, column: 12, scope: !7237)
!7299 = !DILocation(line: 3460, column: 17, scope: !7237)
!7300 = !DILocation(line: 3460, column: 14, scope: !7237)
!7301 = !DILocation(line: 3460, column: 27, scope: !7237)
!7302 = !DILocation(line: 3460, column: 36, scope: !7237)
!7303 = !DILocation(line: 3460, column: 2, scope: !7237)
!7304 = !DILocation(line: 3461, column: 10, scope: !7237)
!7305 = !DILocation(line: 3461, column: 2, scope: !7237)
!7306 = !DILocation(line: 3462, column: 12, scope: !7237)
!7307 = !DILocation(line: 3462, column: 2, scope: !7237)
!7308 = !DILocation(line: 3464, column: 5, scope: !7237)
!7309 = !DILocation(line: 3464, column: 15, scope: !7237)
!7310 = !DILocation(line: 3465, column: 5, scope: !7237)
!7311 = !DILocation(line: 3465, column: 15, scope: !7237)
!7312 = !DILocation(line: 3466, column: 5, scope: !7237)
!7313 = !DILocation(line: 3466, column: 18, scope: !7237)
!7314 = !DILocation(line: 3476, column: 5, scope: !7237)
!7315 = !DILocation(line: 3476, column: 28, scope: !7237)
!7316 = !DILocation(line: 3477, column: 17, scope: !7237)
!7317 = !DILocation(line: 3477, column: 14, scope: !7237)
!7318 = !DILocation(line: 3477, column: 2, scope: !7237)
!7319 = !DILocation(line: 3479, column: 14, scope: !7237)
!7320 = !DILocation(line: 3479, column: 41, scope: !7237)
!7321 = !DILocation(line: 3479, column: 2, scope: !7237)
!7322 = !DILocation(line: 3480, column: 1, scope: !7237)
!7323 = distinct !DISubprogram(name: "write_windowmanagers", scope: !3, file: !3, line: 2498, type: !7324, scopeLine: 2499, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !5641)
!7324 = !DISubroutineType(types: !7325)
!7325 = !{null, !5820, !565}
!7326 = !DILocalVariable(name: "wd", arg: 1, scope: !7323, file: !3, line: 2498, type: !5820)
!7327 = !DILocation(line: 2498, column: 45, scope: !7323)
!7328 = !DILocalVariable(name: "lb", arg: 2, scope: !7323, file: !3, line: 2498, type: !565)
!7329 = !DILocation(line: 2498, column: 59, scope: !7323)
!7330 = !DILocalVariable(name: "wm", scope: !7323, file: !3, line: 2500, type: !7331)
!7331 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7332, size: 64)
!7332 = !DIDerivedType(tag: DW_TAG_typedef, name: "wmWindowManager", file: !44, line: 160, baseType: !7333)
!7333 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmWindowManager", file: !44, line: 128, size: 2816, elements: !7334)
!7334 = !{!7335, !7336, !7378, !7379, !7380, !7381, !7382, !7383, !7384, !7385, !7386, !7387, !7388, !7389, !7390, !7401, !7402, !7403, !7404, !7405, !7406}
!7335 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !7333, file: !44, line: 129, baseType: !427, size: 960)
!7336 = !DIDerivedType(tag: DW_TAG_member, name: "windrawable", scope: !7333, file: !44, line: 131, baseType: !7337, size: 64, offset: 960)
!7337 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7338, size: 64)
!7338 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmWindow", file: !44, line: 169, size: 2048, elements: !7339)
!7339 = !{!7340, !7341, !7342, !7343, !7344, !7345, !7346, !7347, !7348, !7349, !7350, !7351, !7352, !7353, !7354, !7355, !7356, !7357, !7358, !7359, !7360, !7361, !7364, !7367, !7370, !7371, !7372, !7373, !7374, !7375, !7376, !7377}
!7340 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !7338, file: !44, line: 170, baseType: !7337, size: 64)
!7341 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !7338, file: !44, line: 170, baseType: !7337, size: 64, offset: 64)
!7342 = !DIDerivedType(tag: DW_TAG_member, name: "ghostwin", scope: !7338, file: !44, line: 172, baseType: !372, size: 64, offset: 128)
!7343 = !DIDerivedType(tag: DW_TAG_member, name: "screen", scope: !7338, file: !44, line: 174, baseType: !818, size: 64, offset: 192)
!7344 = !DIDerivedType(tag: DW_TAG_member, name: "newscreen", scope: !7338, file: !44, line: 175, baseType: !818, size: 64, offset: 256)
!7345 = !DIDerivedType(tag: DW_TAG_member, name: "screenname", scope: !7338, file: !44, line: 176, baseType: !692, size: 512, offset: 320)
!7346 = !DIDerivedType(tag: DW_TAG_member, name: "posx", scope: !7338, file: !44, line: 178, baseType: !399, size: 16, offset: 832)
!7347 = !DIDerivedType(tag: DW_TAG_member, name: "posy", scope: !7338, file: !44, line: 178, baseType: !399, size: 16, offset: 848)
!7348 = !DIDerivedType(tag: DW_TAG_member, name: "sizex", scope: !7338, file: !44, line: 178, baseType: !399, size: 16, offset: 864)
!7349 = !DIDerivedType(tag: DW_TAG_member, name: "sizey", scope: !7338, file: !44, line: 178, baseType: !399, size: 16, offset: 880)
!7350 = !DIDerivedType(tag: DW_TAG_member, name: "windowstate", scope: !7338, file: !44, line: 179, baseType: !399, size: 16, offset: 896)
!7351 = !DIDerivedType(tag: DW_TAG_member, name: "monitor", scope: !7338, file: !44, line: 180, baseType: !399, size: 16, offset: 912)
!7352 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !7338, file: !44, line: 181, baseType: !399, size: 16, offset: 928)
!7353 = !DIDerivedType(tag: DW_TAG_member, name: "cursor", scope: !7338, file: !44, line: 182, baseType: !399, size: 16, offset: 944)
!7354 = !DIDerivedType(tag: DW_TAG_member, name: "lastcursor", scope: !7338, file: !44, line: 183, baseType: !399, size: 16, offset: 960)
!7355 = !DIDerivedType(tag: DW_TAG_member, name: "modalcursor", scope: !7338, file: !44, line: 184, baseType: !399, size: 16, offset: 976)
!7356 = !DIDerivedType(tag: DW_TAG_member, name: "grabcursor", scope: !7338, file: !44, line: 185, baseType: !399, size: 16, offset: 992)
!7357 = !DIDerivedType(tag: DW_TAG_member, name: "addmousemove", scope: !7338, file: !44, line: 186, baseType: !399, size: 16, offset: 1008)
!7358 = !DIDerivedType(tag: DW_TAG_member, name: "winid", scope: !7338, file: !44, line: 188, baseType: !98, size: 32, offset: 1024)
!7359 = !DIDerivedType(tag: DW_TAG_member, name: "lock_pie_event", scope: !7338, file: !44, line: 190, baseType: !399, size: 16, offset: 1056)
!7360 = !DIDerivedType(tag: DW_TAG_member, name: "last_pie_event", scope: !7338, file: !44, line: 191, baseType: !399, size: 16, offset: 1072)
!7361 = !DIDerivedType(tag: DW_TAG_member, name: "eventstate", scope: !7338, file: !44, line: 194, baseType: !7362, size: 64, offset: 1088)
!7362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7363, size: 64)
!7363 = !DICompositeType(tag: DW_TAG_structure_type, name: "wmEvent", file: !44, line: 43, flags: DIFlagFwdDecl)
!7364 = !DIDerivedType(tag: DW_TAG_member, name: "curswin", scope: !7338, file: !44, line: 196, baseType: !7365, size: 64, offset: 1152)
!7365 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7366, size: 64)
!7366 = !DICompositeType(tag: DW_TAG_structure_type, name: "wmSubWindow", file: !44, line: 55, flags: DIFlagFwdDecl)
!7367 = !DIDerivedType(tag: DW_TAG_member, name: "tweak", scope: !7338, file: !44, line: 198, baseType: !7368, size: 64, offset: 1216)
!7368 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7369, size: 64)
!7369 = !DICompositeType(tag: DW_TAG_structure_type, name: "wmGesture", file: !44, line: 44, flags: DIFlagFwdDecl)
!7370 = !DIDerivedType(tag: DW_TAG_member, name: "drawmethod", scope: !7338, file: !44, line: 200, baseType: !98, size: 32, offset: 1280)
!7371 = !DIDerivedType(tag: DW_TAG_member, name: "drawfail", scope: !7338, file: !44, line: 200, baseType: !98, size: 32, offset: 1312)
!7372 = !DIDerivedType(tag: DW_TAG_member, name: "drawdata", scope: !7338, file: !44, line: 201, baseType: !372, size: 64, offset: 1344)
!7373 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !7338, file: !44, line: 203, baseType: !388, size: 128, offset: 1408)
!7374 = !DIDerivedType(tag: DW_TAG_member, name: "handlers", scope: !7338, file: !44, line: 204, baseType: !388, size: 128, offset: 1536)
!7375 = !DIDerivedType(tag: DW_TAG_member, name: "modalhandlers", scope: !7338, file: !44, line: 205, baseType: !388, size: 128, offset: 1664)
!7376 = !DIDerivedType(tag: DW_TAG_member, name: "subwindows", scope: !7338, file: !44, line: 207, baseType: !388, size: 128, offset: 1792)
!7377 = !DIDerivedType(tag: DW_TAG_member, name: "gesture", scope: !7338, file: !44, line: 208, baseType: !388, size: 128, offset: 1920)
!7378 = !DIDerivedType(tag: DW_TAG_member, name: "winactive", scope: !7333, file: !44, line: 131, baseType: !7337, size: 64, offset: 1024)
!7379 = !DIDerivedType(tag: DW_TAG_member, name: "windows", scope: !7333, file: !44, line: 132, baseType: !388, size: 128, offset: 1088)
!7380 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !7333, file: !44, line: 134, baseType: !98, size: 32, offset: 1216)
!7381 = !DIDerivedType(tag: DW_TAG_member, name: "file_saved", scope: !7333, file: !44, line: 135, baseType: !399, size: 16, offset: 1248)
!7382 = !DIDerivedType(tag: DW_TAG_member, name: "op_undo_depth", scope: !7333, file: !44, line: 136, baseType: !399, size: 16, offset: 1264)
!7383 = !DIDerivedType(tag: DW_TAG_member, name: "operators", scope: !7333, file: !44, line: 138, baseType: !388, size: 128, offset: 1280)
!7384 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !7333, file: !44, line: 140, baseType: !388, size: 128, offset: 1408)
!7385 = !DIDerivedType(tag: DW_TAG_member, name: "reports", scope: !7333, file: !44, line: 142, baseType: !4389, size: 320, offset: 1536)
!7386 = !DIDerivedType(tag: DW_TAG_member, name: "jobs", scope: !7333, file: !44, line: 144, baseType: !388, size: 128, offset: 1856)
!7387 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursors", scope: !7333, file: !44, line: 146, baseType: !388, size: 128, offset: 1984)
!7388 = !DIDerivedType(tag: DW_TAG_member, name: "drags", scope: !7333, file: !44, line: 148, baseType: !388, size: 128, offset: 2112)
!7389 = !DIDerivedType(tag: DW_TAG_member, name: "keyconfigs", scope: !7333, file: !44, line: 150, baseType: !388, size: 128, offset: 2240)
!7390 = !DIDerivedType(tag: DW_TAG_member, name: "defaultconf", scope: !7333, file: !44, line: 151, baseType: !7391, size: 64, offset: 2368)
!7391 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7392, size: 64)
!7392 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmKeyConfig", file: !44, line: 310, size: 1344, elements: !7393)
!7393 = !{!7394, !7395, !7396, !7397, !7398, !7399, !7400}
!7394 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !7392, file: !44, line: 311, baseType: !7391, size: 64)
!7395 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !7392, file: !44, line: 311, baseType: !7391, size: 64, offset: 64)
!7396 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !7392, file: !44, line: 313, baseType: !692, size: 512, offset: 128)
!7397 = !DIDerivedType(tag: DW_TAG_member, name: "basename", scope: !7392, file: !44, line: 314, baseType: !692, size: 512, offset: 640)
!7398 = !DIDerivedType(tag: DW_TAG_member, name: "keymaps", scope: !7392, file: !44, line: 316, baseType: !388, size: 128, offset: 1152)
!7399 = !DIDerivedType(tag: DW_TAG_member, name: "actkeymap", scope: !7392, file: !44, line: 317, baseType: !98, size: 32, offset: 1280)
!7400 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !7392, file: !44, line: 317, baseType: !98, size: 32, offset: 1312)
!7401 = !DIDerivedType(tag: DW_TAG_member, name: "addonconf", scope: !7333, file: !44, line: 152, baseType: !7391, size: 64, offset: 2432)
!7402 = !DIDerivedType(tag: DW_TAG_member, name: "userconf", scope: !7333, file: !44, line: 153, baseType: !7391, size: 64, offset: 2496)
!7403 = !DIDerivedType(tag: DW_TAG_member, name: "timers", scope: !7333, file: !44, line: 155, baseType: !388, size: 128, offset: 2560)
!7404 = !DIDerivedType(tag: DW_TAG_member, name: "autosavetimer", scope: !7333, file: !44, line: 156, baseType: !1358, size: 64, offset: 2688)
!7405 = !DIDerivedType(tag: DW_TAG_member, name: "is_interface_locked", scope: !7333, file: !44, line: 158, baseType: !375, size: 8, offset: 2752)
!7406 = !DIDerivedType(tag: DW_TAG_member, name: "par", scope: !7333, file: !44, line: 159, baseType: !1730, size: 56, offset: 2760)
!7407 = !DILocation(line: 2500, column: 19, scope: !7323)
!7408 = !DILocalVariable(name: "win", scope: !7323, file: !3, line: 2501, type: !7409)
!7409 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7410, size: 64)
!7410 = !DIDerivedType(tag: DW_TAG_typedef, name: "wmWindow", file: !44, line: 209, baseType: !7338)
!7411 = !DILocation(line: 2501, column: 12, scope: !7323)
!7412 = !DILocation(line: 2503, column: 11, scope: !7413)
!7413 = distinct !DILexicalBlock(scope: !7323, file: !3, line: 2503, column: 2)
!7414 = !DILocation(line: 2503, column: 15, scope: !7413)
!7415 = !DILocation(line: 2503, column: 9, scope: !7413)
!7416 = !DILocation(line: 2503, column: 7, scope: !7413)
!7417 = !DILocation(line: 2503, column: 22, scope: !7418)
!7418 = distinct !DILexicalBlock(scope: !7413, file: !3, line: 2503, column: 2)
!7419 = !DILocation(line: 2503, column: 2, scope: !7413)
!7420 = !DILocation(line: 2504, column: 15, scope: !7421)
!7421 = distinct !DILexicalBlock(scope: !7418, file: !3, line: 2503, column: 43)
!7422 = !DILocation(line: 2504, column: 48, scope: !7421)
!7423 = !DILocation(line: 2504, column: 3, scope: !7421)
!7424 = !DILocation(line: 2506, column: 13, scope: !7425)
!7425 = distinct !DILexicalBlock(scope: !7421, file: !3, line: 2506, column: 3)
!7426 = !DILocation(line: 2506, column: 17, scope: !7425)
!7427 = !DILocation(line: 2506, column: 25, scope: !7425)
!7428 = !DILocation(line: 2506, column: 11, scope: !7425)
!7429 = !DILocation(line: 2506, column: 8, scope: !7425)
!7430 = !DILocation(line: 2506, column: 32, scope: !7431)
!7431 = distinct !DILexicalBlock(scope: !7425, file: !3, line: 2506, column: 3)
!7432 = !DILocation(line: 2506, column: 3, scope: !7425)
!7433 = !DILocation(line: 2507, column: 16, scope: !7431)
!7434 = !DILocation(line: 2507, column: 41, scope: !7431)
!7435 = !DILocation(line: 2507, column: 4, scope: !7431)
!7436 = !DILocation(line: 2506, column: 42, scope: !7431)
!7437 = !DILocation(line: 2506, column: 47, scope: !7431)
!7438 = !DILocation(line: 2506, column: 40, scope: !7431)
!7439 = !DILocation(line: 2506, column: 3, scope: !7431)
!7440 = distinct !{!7440, !7432, !7441}
!7441 = !DILocation(line: 2507, column: 44, scope: !7425)
!7442 = !DILocation(line: 2508, column: 2, scope: !7421)
!7443 = !DILocation(line: 2503, column: 30, scope: !7418)
!7444 = !DILocation(line: 2503, column: 34, scope: !7418)
!7445 = !DILocation(line: 2503, column: 37, scope: !7418)
!7446 = !DILocation(line: 2503, column: 28, scope: !7418)
!7447 = !DILocation(line: 2503, column: 2, scope: !7418)
!7448 = distinct !{!7448, !7419, !7449}
!7449 = !DILocation(line: 2508, column: 2, scope: !7413)
!7450 = !DILocation(line: 2509, column: 1, scope: !7323)
!7451 = distinct !DISubprogram(name: "write_screens", scope: !3, file: !3, line: 2589, type: !7324, scopeLine: 2590, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !5641)
!7452 = !DILocalVariable(name: "wd", arg: 1, scope: !7451, file: !3, line: 2589, type: !5820)
!7453 = !DILocation(line: 2589, column: 38, scope: !7451)
!7454 = !DILocalVariable(name: "scrbase", arg: 2, scope: !7451, file: !3, line: 2589, type: !565)
!7455 = !DILocation(line: 2589, column: 52, scope: !7451)
!7456 = !DILocalVariable(name: "sc", scope: !7451, file: !3, line: 2591, type: !7135)
!7457 = !DILocation(line: 2591, column: 11, scope: !7451)
!7458 = !DILocalVariable(name: "sa", scope: !7451, file: !3, line: 2592, type: !7459)
!7459 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7460, size: 64)
!7460 = !DIDerivedType(tag: DW_TAG_typedef, name: "ScrArea", file: !86, line: 228, baseType: !7461)
!7461 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ScrArea", file: !86, line: 203, size: 1280, elements: !7462)
!7462 = !{!7463, !7465, !7466, !7483, !7484, !7485, !7486, !7487, !7488, !7489, !7490, !7491, !7492, !7493, !7494, !7495, !7496, !7497, !7498, !7501, !7502, !7503, !7504}
!7463 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !7461, file: !86, line: 204, baseType: !7464, size: 64)
!7464 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7461, size: 64)
!7465 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !7461, file: !86, line: 204, baseType: !7464, size: 64, offset: 64)
!7466 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !7461, file: !86, line: 206, baseType: !7467, size: 64, offset: 128)
!7467 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7468, size: 64)
!7468 = !DIDerivedType(tag: DW_TAG_typedef, name: "ScrVert", file: !86, line: 87, baseType: !7469)
!7469 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ScrVert", file: !86, line: 82, size: 256, elements: !7470)
!7470 = !{!7471, !7473, !7474, !7475, !7481, !7482}
!7471 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !7469, file: !86, line: 83, baseType: !7472, size: 64)
!7472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7469, size: 64)
!7473 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !7469, file: !86, line: 83, baseType: !7472, size: 64, offset: 64)
!7474 = !DIDerivedType(tag: DW_TAG_member, name: "newv", scope: !7469, file: !86, line: 83, baseType: !7472, size: 64, offset: 128)
!7475 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !7469, file: !86, line: 84, baseType: !7476, size: 32, offset: 192)
!7476 = !DIDerivedType(tag: DW_TAG_typedef, name: "vec2s", file: !1316, line: 43, baseType: !7477)
!7477 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vec2s", file: !1316, line: 41, size: 32, elements: !7478)
!7478 = !{!7479, !7480}
!7479 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !7477, file: !1316, line: 42, baseType: !399, size: 16)
!7480 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !7477, file: !1316, line: 42, baseType: !399, size: 16, offset: 16)
!7481 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !7469, file: !86, line: 86, baseType: !399, size: 16, offset: 224)
!7482 = !DIDerivedType(tag: DW_TAG_member, name: "editflag", scope: !7469, file: !86, line: 86, baseType: !399, size: 16, offset: 240)
!7483 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !7461, file: !86, line: 206, baseType: !7467, size: 64, offset: 192)
!7484 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !7461, file: !86, line: 206, baseType: !7467, size: 64, offset: 256)
!7485 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !7461, file: !86, line: 206, baseType: !7467, size: 64, offset: 320)
!7486 = !DIDerivedType(tag: DW_TAG_member, name: "full", scope: !7461, file: !86, line: 207, baseType: !7135, size: 64, offset: 384)
!7487 = !DIDerivedType(tag: DW_TAG_member, name: "totrct", scope: !7461, file: !86, line: 209, baseType: !1325, size: 128, offset: 448)
!7488 = !DIDerivedType(tag: DW_TAG_member, name: "spacetype", scope: !7461, file: !86, line: 211, baseType: !375, size: 8, offset: 576)
!7489 = !DIDerivedType(tag: DW_TAG_member, name: "butspacetype", scope: !7461, file: !86, line: 211, baseType: !375, size: 8, offset: 584)
!7490 = !DIDerivedType(tag: DW_TAG_member, name: "winx", scope: !7461, file: !86, line: 212, baseType: !399, size: 16, offset: 592)
!7491 = !DIDerivedType(tag: DW_TAG_member, name: "winy", scope: !7461, file: !86, line: 212, baseType: !399, size: 16, offset: 608)
!7492 = !DIDerivedType(tag: DW_TAG_member, name: "headertype", scope: !7461, file: !86, line: 214, baseType: !399, size: 16, offset: 624)
!7493 = !DIDerivedType(tag: DW_TAG_member, name: "do_refresh", scope: !7461, file: !86, line: 215, baseType: !399, size: 16, offset: 640)
!7494 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !7461, file: !86, line: 216, baseType: !399, size: 16, offset: 656)
!7495 = !DIDerivedType(tag: DW_TAG_member, name: "region_active_win", scope: !7461, file: !86, line: 217, baseType: !399, size: 16, offset: 672)
!7496 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !7461, file: !86, line: 219, baseType: !375, size: 8, offset: 688)
!7497 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !7461, file: !86, line: 219, baseType: !375, size: 8, offset: 696)
!7498 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !7461, file: !86, line: 221, baseType: !7499, size: 64, offset: 704)
!7499 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7500, size: 64)
!7500 = !DICompositeType(tag: DW_TAG_structure_type, name: "SpaceType", file: !86, line: 39, flags: DIFlagFwdDecl)
!7501 = !DIDerivedType(tag: DW_TAG_member, name: "spacedata", scope: !7461, file: !86, line: 223, baseType: !388, size: 128, offset: 768)
!7502 = !DIDerivedType(tag: DW_TAG_member, name: "regionbase", scope: !7461, file: !86, line: 224, baseType: !388, size: 128, offset: 896)
!7503 = !DIDerivedType(tag: DW_TAG_member, name: "handlers", scope: !7461, file: !86, line: 225, baseType: !388, size: 128, offset: 1024)
!7504 = !DIDerivedType(tag: DW_TAG_member, name: "actionzones", scope: !7461, file: !86, line: 227, baseType: !388, size: 128, offset: 1152)
!7505 = !DILocation(line: 2592, column: 11, scope: !7451)
!7506 = !DILocalVariable(name: "sv", scope: !7451, file: !3, line: 2593, type: !7467)
!7507 = !DILocation(line: 2593, column: 11, scope: !7451)
!7508 = !DILocalVariable(name: "se", scope: !7451, file: !3, line: 2594, type: !7509)
!7509 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7510, size: 64)
!7510 = !DIDerivedType(tag: DW_TAG_typedef, name: "ScrEdge", file: !86, line: 95, baseType: !7511)
!7511 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ScrEdge", file: !86, line: 89, size: 320, elements: !7512)
!7512 = !{!7513, !7515, !7516, !7517, !7518, !7519, !7520}
!7513 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !7511, file: !86, line: 90, baseType: !7514, size: 64)
!7514 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7511, size: 64)
!7515 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !7511, file: !86, line: 90, baseType: !7514, size: 64, offset: 64)
!7516 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !7511, file: !86, line: 91, baseType: !7467, size: 64, offset: 128)
!7517 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !7511, file: !86, line: 91, baseType: !7467, size: 64, offset: 192)
!7518 = !DIDerivedType(tag: DW_TAG_member, name: "border", scope: !7511, file: !86, line: 92, baseType: !399, size: 16, offset: 256)
!7519 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !7511, file: !86, line: 93, baseType: !399, size: 16, offset: 272)
!7520 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !7511, file: !86, line: 94, baseType: !98, size: 32, offset: 288)
!7521 = !DILocation(line: 2594, column: 11, scope: !7451)
!7522 = !DILocalVariable(name: "tmp_mem_list", scope: !7451, file: !3, line: 2595, type: !7523)
!7523 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7524, size: 64)
!7524 = !DIDerivedType(tag: DW_TAG_typedef, name: "LinkNode", file: !3655, line: 48, baseType: !3654)
!7525 = !DILocation(line: 2595, column: 12, scope: !7451)
!7526 = !DILocation(line: 2597, column: 6, scope: !7451)
!7527 = !DILocation(line: 2597, column: 15, scope: !7451)
!7528 = !DILocation(line: 2597, column: 4, scope: !7451)
!7529 = !DILocation(line: 2598, column: 2, scope: !7451)
!7530 = !DILocation(line: 2598, column: 9, scope: !7451)
!7531 = !DILocation(line: 2602, column: 15, scope: !7532)
!7532 = distinct !DILexicalBlock(scope: !7451, file: !3, line: 2598, column: 13)
!7533 = !DILocation(line: 2602, column: 41, scope: !7532)
!7534 = !DILocation(line: 2602, column: 3, scope: !7532)
!7535 = !DILocation(line: 2603, column: 7, scope: !7536)
!7536 = distinct !DILexicalBlock(scope: !7532, file: !3, line: 2603, column: 7)
!7537 = !DILocation(line: 2603, column: 11, scope: !7536)
!7538 = !DILocation(line: 2603, column: 14, scope: !7536)
!7539 = !DILocation(line: 2603, column: 7, scope: !7532)
!7540 = !DILocation(line: 2604, column: 22, scope: !7536)
!7541 = !DILocation(line: 2604, column: 26, scope: !7536)
!7542 = !DILocation(line: 2604, column: 29, scope: !7536)
!7543 = !DILocation(line: 2604, column: 41, scope: !7536)
!7544 = !DILocation(line: 2604, column: 4, scope: !7536)
!7545 = !DILocation(line: 2607, column: 12, scope: !7546)
!7546 = distinct !DILexicalBlock(scope: !7532, file: !3, line: 2607, column: 3)
!7547 = !DILocation(line: 2607, column: 16, scope: !7546)
!7548 = !DILocation(line: 2607, column: 25, scope: !7546)
!7549 = !DILocation(line: 2607, column: 10, scope: !7546)
!7550 = !DILocation(line: 2607, column: 8, scope: !7546)
!7551 = !DILocation(line: 2607, column: 32, scope: !7552)
!7552 = distinct !DILexicalBlock(scope: !7546, file: !3, line: 2607, column: 3)
!7553 = !DILocation(line: 2607, column: 3, scope: !7546)
!7554 = !DILocation(line: 2608, column: 16, scope: !7552)
!7555 = !DILocation(line: 2608, column: 40, scope: !7552)
!7556 = !DILocation(line: 2608, column: 4, scope: !7552)
!7557 = !DILocation(line: 2607, column: 40, scope: !7552)
!7558 = !DILocation(line: 2607, column: 44, scope: !7552)
!7559 = !DILocation(line: 2607, column: 38, scope: !7552)
!7560 = !DILocation(line: 2607, column: 3, scope: !7552)
!7561 = distinct !{!7561, !7553, !7562}
!7562 = !DILocation(line: 2608, column: 42, scope: !7546)
!7563 = !DILocation(line: 2610, column: 12, scope: !7564)
!7564 = distinct !DILexicalBlock(scope: !7532, file: !3, line: 2610, column: 3)
!7565 = !DILocation(line: 2610, column: 16, scope: !7564)
!7566 = !DILocation(line: 2610, column: 25, scope: !7564)
!7567 = !DILocation(line: 2610, column: 10, scope: !7564)
!7568 = !DILocation(line: 2610, column: 8, scope: !7564)
!7569 = !DILocation(line: 2610, column: 32, scope: !7570)
!7570 = distinct !DILexicalBlock(scope: !7564, file: !3, line: 2610, column: 3)
!7571 = !DILocation(line: 2610, column: 3, scope: !7564)
!7572 = !DILocation(line: 2611, column: 16, scope: !7570)
!7573 = !DILocation(line: 2611, column: 40, scope: !7570)
!7574 = !DILocation(line: 2611, column: 4, scope: !7570)
!7575 = !DILocation(line: 2610, column: 40, scope: !7570)
!7576 = !DILocation(line: 2610, column: 44, scope: !7570)
!7577 = !DILocation(line: 2610, column: 38, scope: !7570)
!7578 = !DILocation(line: 2610, column: 3, scope: !7570)
!7579 = distinct !{!7579, !7571, !7580}
!7580 = !DILocation(line: 2611, column: 42, scope: !7564)
!7581 = !DILocation(line: 2613, column: 12, scope: !7582)
!7582 = distinct !DILexicalBlock(scope: !7532, file: !3, line: 2613, column: 3)
!7583 = !DILocation(line: 2613, column: 16, scope: !7582)
!7584 = !DILocation(line: 2613, column: 25, scope: !7582)
!7585 = !DILocation(line: 2613, column: 10, scope: !7582)
!7586 = !DILocation(line: 2613, column: 8, scope: !7582)
!7587 = !DILocation(line: 2613, column: 32, scope: !7588)
!7588 = distinct !DILexicalBlock(scope: !7582, file: !3, line: 2613, column: 3)
!7589 = !DILocation(line: 2613, column: 3, scope: !7582)
!7590 = !DILocalVariable(name: "sl", scope: !7591, file: !3, line: 2614, type: !1394)
!7591 = distinct !DILexicalBlock(scope: !7588, file: !3, line: 2613, column: 50)
!7592 = !DILocation(line: 2614, column: 15, scope: !7591)
!7593 = !DILocalVariable(name: "pa", scope: !7591, file: !3, line: 2615, type: !7594)
!7594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7595, size: 64)
!7595 = !DIDerivedType(tag: DW_TAG_typedef, name: "Panel", file: !86, line: 113, baseType: !7596)
!7596 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Panel", file: !86, line: 97, size: 2176, elements: !7597)
!7597 = !{!7598, !7600, !7601, !7604, !7605, !7606, !7607, !7608, !7609, !7610, !7611, !7612, !7613, !7614, !7615, !7616, !7617, !7618, !7619, !7620}
!7598 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !7596, file: !86, line: 98, baseType: !7599, size: 64)
!7599 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7596, size: 64)
!7600 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !7596, file: !86, line: 98, baseType: !7599, size: 64, offset: 64)
!7601 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !7596, file: !86, line: 100, baseType: !7602, size: 64, offset: 128)
!7602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7603, size: 64)
!7603 = !DICompositeType(tag: DW_TAG_structure_type, name: "PanelType", file: !86, line: 43, flags: DIFlagFwdDecl)
!7604 = !DIDerivedType(tag: DW_TAG_member, name: "layout", scope: !7596, file: !86, line: 101, baseType: !1179, size: 64, offset: 192)
!7605 = !DIDerivedType(tag: DW_TAG_member, name: "panelname", scope: !7596, file: !86, line: 103, baseType: !692, size: 512, offset: 256)
!7606 = !DIDerivedType(tag: DW_TAG_member, name: "tabname", scope: !7596, file: !86, line: 103, baseType: !692, size: 512, offset: 768)
!7607 = !DIDerivedType(tag: DW_TAG_member, name: "drawname", scope: !7596, file: !86, line: 104, baseType: !692, size: 512, offset: 1280)
!7608 = !DIDerivedType(tag: DW_TAG_member, name: "ofsx", scope: !7596, file: !86, line: 105, baseType: !98, size: 32, offset: 1792)
!7609 = !DIDerivedType(tag: DW_TAG_member, name: "ofsy", scope: !7596, file: !86, line: 105, baseType: !98, size: 32, offset: 1824)
!7610 = !DIDerivedType(tag: DW_TAG_member, name: "sizex", scope: !7596, file: !86, line: 105, baseType: !98, size: 32, offset: 1856)
!7611 = !DIDerivedType(tag: DW_TAG_member, name: "sizey", scope: !7596, file: !86, line: 105, baseType: !98, size: 32, offset: 1888)
!7612 = !DIDerivedType(tag: DW_TAG_member, name: "labelofs", scope: !7596, file: !86, line: 106, baseType: !399, size: 16, offset: 1920)
!7613 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !7596, file: !86, line: 106, baseType: !399, size: 16, offset: 1936)
!7614 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !7596, file: !86, line: 107, baseType: !399, size: 16, offset: 1952)
!7615 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_flag", scope: !7596, file: !86, line: 107, baseType: !399, size: 16, offset: 1968)
!7616 = !DIDerivedType(tag: DW_TAG_member, name: "control", scope: !7596, file: !86, line: 108, baseType: !399, size: 16, offset: 1984)
!7617 = !DIDerivedType(tag: DW_TAG_member, name: "snap", scope: !7596, file: !86, line: 109, baseType: !399, size: 16, offset: 2000)
!7618 = !DIDerivedType(tag: DW_TAG_member, name: "sortorder", scope: !7596, file: !86, line: 110, baseType: !98, size: 32, offset: 2016)
!7619 = !DIDerivedType(tag: DW_TAG_member, name: "paneltab", scope: !7596, file: !86, line: 111, baseType: !7599, size: 64, offset: 2048)
!7620 = !DIDerivedType(tag: DW_TAG_member, name: "activedata", scope: !7596, file: !86, line: 112, baseType: !372, size: 64, offset: 2112)
!7621 = !DILocation(line: 2615, column: 11, scope: !7591)
!7622 = !DILocalVariable(name: "ui_list", scope: !7591, file: !3, line: 2616, type: !7623)
!7623 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7624, size: 64)
!7624 = !DIDerivedType(tag: DW_TAG_typedef, name: "uiList", file: !86, line: 193, baseType: !7625)
!7625 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uiList", file: !86, line: 168, size: 1600, elements: !7626)
!7626 = !{!7627, !7629, !7630, !7633, !7634, !7635, !7636, !7637, !7638, !7639, !7640, !7641, !7642, !7643, !7644}
!7627 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !7625, file: !86, line: 169, baseType: !7628, size: 64)
!7628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7625, size: 64)
!7629 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !7625, file: !86, line: 169, baseType: !7628, size: 64, offset: 64)
!7630 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !7625, file: !86, line: 171, baseType: !7631, size: 64, offset: 128)
!7631 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7632, size: 64)
!7632 = !DICompositeType(tag: DW_TAG_structure_type, name: "uiListType", file: !86, line: 171, flags: DIFlagFwdDecl)
!7633 = !DIDerivedType(tag: DW_TAG_member, name: "list_id", scope: !7625, file: !86, line: 173, baseType: !692, size: 512, offset: 192)
!7634 = !DIDerivedType(tag: DW_TAG_member, name: "layout_type", scope: !7625, file: !86, line: 175, baseType: !98, size: 32, offset: 704)
!7635 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !7625, file: !86, line: 176, baseType: !98, size: 32, offset: 736)
!7636 = !DIDerivedType(tag: DW_TAG_member, name: "list_scroll", scope: !7625, file: !86, line: 178, baseType: !98, size: 32, offset: 768)
!7637 = !DIDerivedType(tag: DW_TAG_member, name: "list_grip", scope: !7625, file: !86, line: 179, baseType: !98, size: 32, offset: 800)
!7638 = !DIDerivedType(tag: DW_TAG_member, name: "list_last_len", scope: !7625, file: !86, line: 180, baseType: !98, size: 32, offset: 832)
!7639 = !DIDerivedType(tag: DW_TAG_member, name: "list_last_activei", scope: !7625, file: !86, line: 181, baseType: !98, size: 32, offset: 864)
!7640 = !DIDerivedType(tag: DW_TAG_member, name: "filter_byname", scope: !7625, file: !86, line: 184, baseType: !692, size: 512, offset: 896)
!7641 = !DIDerivedType(tag: DW_TAG_member, name: "filter_flag", scope: !7625, file: !86, line: 185, baseType: !98, size: 32, offset: 1408)
!7642 = !DIDerivedType(tag: DW_TAG_member, name: "filter_sort_flag", scope: !7625, file: !86, line: 186, baseType: !98, size: 32, offset: 1440)
!7643 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !7625, file: !86, line: 189, baseType: !1094, size: 64, offset: 1472)
!7644 = !DIDerivedType(tag: DW_TAG_member, name: "dyn_data", scope: !7625, file: !86, line: 192, baseType: !7645, size: 64, offset: 1536)
!7645 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7646, size: 64)
!7646 = !DIDerivedType(tag: DW_TAG_typedef, name: "uiListDyn", file: !86, line: 166, baseType: !7647)
!7647 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uiListDyn", file: !86, line: 149, size: 384, elements: !7648)
!7648 = !{!7649, !7650, !7651, !7652, !7653, !7654, !7655, !7656, !7657}
!7649 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !7647, file: !86, line: 150, baseType: !98, size: 32)
!7650 = !DIDerivedType(tag: DW_TAG_member, name: "visual_height", scope: !7647, file: !86, line: 151, baseType: !98, size: 32, offset: 32)
!7651 = !DIDerivedType(tag: DW_TAG_member, name: "visual_height_min", scope: !7647, file: !86, line: 152, baseType: !98, size: 32, offset: 64)
!7652 = !DIDerivedType(tag: DW_TAG_member, name: "items_len", scope: !7647, file: !86, line: 154, baseType: !98, size: 32, offset: 96)
!7653 = !DIDerivedType(tag: DW_TAG_member, name: "items_shown", scope: !7647, file: !86, line: 155, baseType: !98, size: 32, offset: 128)
!7654 = !DIDerivedType(tag: DW_TAG_member, name: "resize", scope: !7647, file: !86, line: 160, baseType: !98, size: 32, offset: 160)
!7655 = !DIDerivedType(tag: DW_TAG_member, name: "resize_prev", scope: !7647, file: !86, line: 161, baseType: !98, size: 32, offset: 192)
!7656 = !DIDerivedType(tag: DW_TAG_member, name: "items_filter_flags", scope: !7647, file: !86, line: 164, baseType: !4127, size: 64, offset: 256)
!7657 = !DIDerivedType(tag: DW_TAG_member, name: "items_filter_neworder", scope: !7647, file: !86, line: 165, baseType: !4127, size: 64, offset: 320)
!7658 = !DILocation(line: 2616, column: 12, scope: !7591)
!7659 = !DILocalVariable(name: "ui_preview", scope: !7591, file: !3, line: 2617, type: !7660)
!7660 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7661, size: 64)
!7661 = !DIDerivedType(tag: DW_TAG_typedef, name: "uiPreview", file: !86, line: 201, baseType: !7662)
!7662 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uiPreview", file: !86, line: 195, size: 704, elements: !7663)
!7663 = !{!7664, !7666, !7667, !7668, !7669}
!7664 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !7662, file: !86, line: 196, baseType: !7665, size: 64)
!7665 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7662, size: 64)
!7666 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !7662, file: !86, line: 196, baseType: !7665, size: 64, offset: 64)
!7667 = !DIDerivedType(tag: DW_TAG_member, name: "preview_id", scope: !7662, file: !86, line: 198, baseType: !692, size: 512, offset: 128)
!7668 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !7662, file: !86, line: 199, baseType: !399, size: 16, offset: 640)
!7669 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !7662, file: !86, line: 200, baseType: !811, size: 48, offset: 656)
!7670 = !DILocation(line: 2617, column: 15, scope: !7591)
!7671 = !DILocalVariable(name: "pc_act", scope: !7591, file: !3, line: 2618, type: !7672)
!7672 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7673, size: 64)
!7673 = !DIDerivedType(tag: DW_TAG_typedef, name: "PanelCategoryStack", file: !86, line: 142, baseType: !7674)
!7674 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PanelCategoryStack", file: !86, line: 139, size: 640, elements: !7675)
!7675 = !{!7676, !7678, !7679}
!7676 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !7674, file: !86, line: 140, baseType: !7677, size: 64)
!7677 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7674, size: 64)
!7678 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !7674, file: !86, line: 140, baseType: !7677, size: 64, offset: 64)
!7679 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !7674, file: !86, line: 141, baseType: !692, size: 512, offset: 128)
!7680 = !DILocation(line: 2618, column: 24, scope: !7591)
!7681 = !DILocalVariable(name: "ar", scope: !7591, file: !3, line: 2619, type: !7682)
!7682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7683, size: 64)
!7683 = !DIDerivedType(tag: DW_TAG_typedef, name: "ARegion", file: !86, line: 267, baseType: !1305)
!7684 = !DILocation(line: 2619, column: 13, scope: !7591)
!7685 = !DILocation(line: 2621, column: 16, scope: !7591)
!7686 = !DILocation(line: 2621, column: 40, scope: !7591)
!7687 = !DILocation(line: 2621, column: 4, scope: !7591)
!7688 = !DILocation(line: 2623, column: 13, scope: !7689)
!7689 = distinct !DILexicalBlock(scope: !7591, file: !3, line: 2623, column: 4)
!7690 = !DILocation(line: 2623, column: 17, scope: !7689)
!7691 = !DILocation(line: 2623, column: 28, scope: !7689)
!7692 = !DILocation(line: 2623, column: 11, scope: !7689)
!7693 = !DILocation(line: 2623, column: 9, scope: !7689)
!7694 = !DILocation(line: 2623, column: 35, scope: !7695)
!7695 = distinct !DILexicalBlock(scope: !7689, file: !3, line: 2623, column: 4)
!7696 = !DILocation(line: 2623, column: 4, scope: !7689)
!7697 = !DILocation(line: 2624, column: 18, scope: !7698)
!7698 = distinct !DILexicalBlock(scope: !7695, file: !3, line: 2623, column: 53)
!7699 = !DILocation(line: 2624, column: 22, scope: !7698)
!7700 = !DILocation(line: 2624, column: 26, scope: !7698)
!7701 = !DILocation(line: 2624, column: 30, scope: !7698)
!7702 = !DILocation(line: 2624, column: 5, scope: !7698)
!7703 = !DILocation(line: 2626, column: 14, scope: !7704)
!7704 = distinct !DILexicalBlock(scope: !7698, file: !3, line: 2626, column: 5)
!7705 = !DILocation(line: 2626, column: 18, scope: !7704)
!7706 = !DILocation(line: 2626, column: 25, scope: !7704)
!7707 = !DILocation(line: 2626, column: 12, scope: !7704)
!7708 = !DILocation(line: 2626, column: 10, scope: !7704)
!7709 = !DILocation(line: 2626, column: 32, scope: !7710)
!7710 = distinct !DILexicalBlock(scope: !7704, file: !3, line: 2626, column: 5)
!7711 = !DILocation(line: 2626, column: 5, scope: !7704)
!7712 = !DILocation(line: 2627, column: 18, scope: !7710)
!7713 = !DILocation(line: 2627, column: 40, scope: !7710)
!7714 = !DILocation(line: 2627, column: 6, scope: !7710)
!7715 = !DILocation(line: 2626, column: 40, scope: !7710)
!7716 = !DILocation(line: 2626, column: 44, scope: !7710)
!7717 = !DILocation(line: 2626, column: 38, scope: !7710)
!7718 = !DILocation(line: 2626, column: 5, scope: !7710)
!7719 = distinct !{!7719, !7711, !7720}
!7720 = !DILocation(line: 2627, column: 42, scope: !7704)
!7721 = !DILocation(line: 2629, column: 19, scope: !7722)
!7722 = distinct !DILexicalBlock(scope: !7698, file: !3, line: 2629, column: 5)
!7723 = !DILocation(line: 2629, column: 23, scope: !7722)
!7724 = !DILocation(line: 2629, column: 46, scope: !7722)
!7725 = !DILocation(line: 2629, column: 17, scope: !7722)
!7726 = !DILocation(line: 2629, column: 10, scope: !7722)
!7727 = !DILocation(line: 2629, column: 53, scope: !7728)
!7728 = distinct !DILexicalBlock(scope: !7722, file: !3, line: 2629, column: 5)
!7729 = !DILocation(line: 2629, column: 5, scope: !7722)
!7730 = !DILocation(line: 2630, column: 18, scope: !7728)
!7731 = !DILocation(line: 2630, column: 53, scope: !7728)
!7732 = !DILocation(line: 2630, column: 6, scope: !7728)
!7733 = !DILocation(line: 2629, column: 70, scope: !7728)
!7734 = !DILocation(line: 2629, column: 78, scope: !7728)
!7735 = !DILocation(line: 2629, column: 68, scope: !7728)
!7736 = !DILocation(line: 2629, column: 5, scope: !7728)
!7737 = distinct !{!7737, !7729, !7738}
!7738 = !DILocation(line: 2630, column: 59, scope: !7722)
!7739 = !DILocation(line: 2632, column: 20, scope: !7740)
!7740 = distinct !DILexicalBlock(scope: !7698, file: !3, line: 2632, column: 5)
!7741 = !DILocation(line: 2632, column: 24, scope: !7740)
!7742 = !DILocation(line: 2632, column: 33, scope: !7740)
!7743 = !DILocation(line: 2632, column: 18, scope: !7740)
!7744 = !DILocation(line: 2632, column: 10, scope: !7740)
!7745 = !DILocation(line: 2632, column: 40, scope: !7746)
!7746 = distinct !DILexicalBlock(scope: !7740, file: !3, line: 2632, column: 5)
!7747 = !DILocation(line: 2632, column: 5, scope: !7740)
!7748 = !DILocation(line: 2633, column: 19, scope: !7746)
!7749 = !DILocation(line: 2633, column: 23, scope: !7746)
!7750 = !DILocation(line: 2633, column: 6, scope: !7746)
!7751 = !DILocation(line: 2632, column: 59, scope: !7746)
!7752 = !DILocation(line: 2632, column: 68, scope: !7746)
!7753 = !DILocation(line: 2632, column: 57, scope: !7746)
!7754 = !DILocation(line: 2632, column: 5, scope: !7746)
!7755 = distinct !{!7755, !7747, !7756}
!7756 = !DILocation(line: 2633, column: 30, scope: !7740)
!7757 = !DILocation(line: 2635, column: 23, scope: !7758)
!7758 = distinct !DILexicalBlock(scope: !7698, file: !3, line: 2635, column: 5)
!7759 = !DILocation(line: 2635, column: 27, scope: !7758)
!7760 = !DILocation(line: 2635, column: 39, scope: !7758)
!7761 = !DILocation(line: 2635, column: 21, scope: !7758)
!7762 = !DILocation(line: 2635, column: 10, scope: !7758)
!7763 = !DILocation(line: 2635, column: 46, scope: !7764)
!7764 = distinct !DILexicalBlock(scope: !7758, file: !3, line: 2635, column: 5)
!7765 = !DILocation(line: 2635, column: 5, scope: !7758)
!7766 = !DILocation(line: 2636, column: 18, scope: !7764)
!7767 = !DILocation(line: 2636, column: 44, scope: !7764)
!7768 = !DILocation(line: 2636, column: 6, scope: !7764)
!7769 = !DILocation(line: 2635, column: 71, scope: !7764)
!7770 = !DILocation(line: 2635, column: 83, scope: !7764)
!7771 = !DILocation(line: 2635, column: 69, scope: !7764)
!7772 = !DILocation(line: 2635, column: 5, scope: !7764)
!7773 = distinct !{!7773, !7765, !7774}
!7774 = !DILocation(line: 2636, column: 54, scope: !7758)
!7775 = !DILocation(line: 2637, column: 4, scope: !7698)
!7776 = !DILocation(line: 2623, column: 43, scope: !7695)
!7777 = !DILocation(line: 2623, column: 47, scope: !7695)
!7778 = !DILocation(line: 2623, column: 41, scope: !7695)
!7779 = !DILocation(line: 2623, column: 4, scope: !7695)
!7780 = distinct !{!7780, !7696, !7781}
!7781 = !DILocation(line: 2637, column: 4, scope: !7689)
!7782 = !DILocation(line: 2639, column: 8, scope: !7591)
!7783 = !DILocation(line: 2639, column: 12, scope: !7591)
!7784 = !DILocation(line: 2639, column: 22, scope: !7591)
!7785 = !DILocation(line: 2639, column: 6, scope: !7591)
!7786 = !DILocation(line: 2640, column: 4, scope: !7591)
!7787 = !DILocation(line: 2640, column: 11, scope: !7591)
!7788 = !DILocation(line: 2641, column: 14, scope: !7789)
!7789 = distinct !DILexicalBlock(scope: !7790, file: !3, line: 2641, column: 5)
!7790 = distinct !DILexicalBlock(scope: !7591, file: !3, line: 2640, column: 15)
!7791 = !DILocation(line: 2641, column: 18, scope: !7789)
!7792 = !DILocation(line: 2641, column: 29, scope: !7789)
!7793 = !DILocation(line: 2641, column: 12, scope: !7789)
!7794 = !DILocation(line: 2641, column: 10, scope: !7789)
!7795 = !DILocation(line: 2641, column: 36, scope: !7796)
!7796 = distinct !DILexicalBlock(scope: !7789, file: !3, line: 2641, column: 5)
!7797 = !DILocation(line: 2641, column: 5, scope: !7789)
!7798 = !DILocation(line: 2642, column: 19, scope: !7796)
!7799 = !DILocation(line: 2642, column: 23, scope: !7796)
!7800 = !DILocation(line: 2642, column: 27, scope: !7796)
!7801 = !DILocation(line: 2642, column: 31, scope: !7796)
!7802 = !DILocation(line: 2642, column: 6, scope: !7796)
!7803 = !DILocation(line: 2641, column: 44, scope: !7796)
!7804 = !DILocation(line: 2641, column: 48, scope: !7796)
!7805 = !DILocation(line: 2641, column: 42, scope: !7796)
!7806 = !DILocation(line: 2641, column: 5, scope: !7796)
!7807 = distinct !{!7807, !7797, !7808}
!7808 = !DILocation(line: 2642, column: 40, scope: !7789)
!7809 = !DILocation(line: 2644, column: 9, scope: !7810)
!7810 = distinct !DILexicalBlock(scope: !7790, file: !3, line: 2644, column: 9)
!7811 = !DILocation(line: 2644, column: 13, scope: !7810)
!7812 = !DILocation(line: 2644, column: 22, scope: !7810)
!7813 = !DILocation(line: 2644, column: 9, scope: !7790)
!7814 = !DILocalVariable(name: "v3d", scope: !7815, file: !3, line: 2645, type: !376)
!7815 = distinct !DILexicalBlock(scope: !7810, file: !3, line: 2644, column: 38)
!7816 = !DILocation(line: 2645, column: 14, scope: !7815)
!7817 = !DILocation(line: 2645, column: 30, scope: !7815)
!7818 = !DILocation(line: 2645, column: 19, scope: !7815)
!7819 = !DILocalVariable(name: "bgpic", scope: !7815, file: !3, line: 2646, type: !7820)
!7820 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7821, size: 64)
!7821 = !DIDerivedType(tag: DW_TAG_typedef, name: "BGpic", file: !378, line: 81, baseType: !4804)
!7822 = !DILocation(line: 2646, column: 13, scope: !7815)
!7823 = !DILocation(line: 2647, column: 18, scope: !7815)
!7824 = !DILocation(line: 2647, column: 41, scope: !7815)
!7825 = !DILocation(line: 2647, column: 6, scope: !7815)
!7826 = !DILocation(line: 2648, column: 18, scope: !7827)
!7827 = distinct !DILexicalBlock(scope: !7815, file: !3, line: 2648, column: 6)
!7828 = !DILocation(line: 2648, column: 23, scope: !7827)
!7829 = !DILocation(line: 2648, column: 33, scope: !7827)
!7830 = !DILocation(line: 2648, column: 16, scope: !7827)
!7831 = !DILocation(line: 2648, column: 11, scope: !7827)
!7832 = !DILocation(line: 2648, column: 40, scope: !7833)
!7833 = distinct !DILexicalBlock(scope: !7827, file: !3, line: 2648, column: 6)
!7834 = !DILocation(line: 2648, column: 6, scope: !7827)
!7835 = !DILocation(line: 2649, column: 19, scope: !7833)
!7836 = !DILocation(line: 2649, column: 41, scope: !7833)
!7837 = !DILocation(line: 2649, column: 7, scope: !7833)
!7838 = !DILocation(line: 2648, column: 54, scope: !7833)
!7839 = !DILocation(line: 2648, column: 61, scope: !7833)
!7840 = !DILocation(line: 2648, column: 52, scope: !7833)
!7841 = !DILocation(line: 2648, column: 6, scope: !7833)
!7842 = distinct !{!7842, !7834, !7843}
!7843 = !DILocation(line: 2649, column: 46, scope: !7827)
!7844 = !DILocation(line: 2650, column: 10, scope: !7845)
!7845 = distinct !DILexicalBlock(scope: !7815, file: !3, line: 2650, column: 10)
!7846 = !DILocation(line: 2650, column: 15, scope: !7845)
!7847 = !DILocation(line: 2650, column: 10, scope: !7815)
!7848 = !DILocation(line: 2650, column: 36, scope: !7845)
!7849 = !DILocation(line: 2650, column: 59, scope: !7845)
!7850 = !DILocation(line: 2650, column: 64, scope: !7845)
!7851 = !DILocation(line: 2650, column: 24, scope: !7845)
!7852 = !DILocation(line: 2651, column: 5, scope: !7815)
!7853 = !DILocation(line: 2652, column: 14, scope: !7854)
!7854 = distinct !DILexicalBlock(scope: !7810, file: !3, line: 2652, column: 14)
!7855 = !DILocation(line: 2652, column: 18, scope: !7854)
!7856 = !DILocation(line: 2652, column: 27, scope: !7854)
!7857 = !DILocation(line: 2652, column: 14, scope: !7810)
!7858 = !DILocalVariable(name: "sipo", scope: !7859, file: !3, line: 2653, type: !4860)
!7859 = distinct !DILexicalBlock(scope: !7854, file: !3, line: 2652, column: 40)
!7860 = !DILocation(line: 2653, column: 16, scope: !7859)
!7861 = !DILocation(line: 2653, column: 34, scope: !7859)
!7862 = !DILocation(line: 2653, column: 22, scope: !7859)
!7863 = !DILocalVariable(name: "tmpGhosts", scope: !7859, file: !3, line: 2654, type: !388)
!7864 = !DILocation(line: 2654, column: 15, scope: !7859)
!7865 = !DILocation(line: 2654, column: 27, scope: !7859)
!7866 = !DILocation(line: 2654, column: 33, scope: !7859)
!7867 = !DILocation(line: 2657, column: 31, scope: !7859)
!7868 = !DILocation(line: 2657, column: 37, scope: !7859)
!7869 = !DILocation(line: 2657, column: 49, scope: !7859)
!7870 = !DILocation(line: 2657, column: 53, scope: !7859)
!7871 = !DILocation(line: 2657, column: 6, scope: !7859)
!7872 = !DILocation(line: 2657, column: 12, scope: !7859)
!7873 = !DILocation(line: 2657, column: 24, scope: !7859)
!7874 = !DILocation(line: 2657, column: 29, scope: !7859)
!7875 = !DILocation(line: 2659, column: 18, scope: !7859)
!7876 = !DILocation(line: 2659, column: 43, scope: !7859)
!7877 = !DILocation(line: 2659, column: 6, scope: !7859)
!7878 = !DILocation(line: 2660, column: 10, scope: !7879)
!7879 = distinct !DILexicalBlock(scope: !7859, file: !3, line: 2660, column: 10)
!7880 = !DILocation(line: 2660, column: 16, scope: !7879)
!7881 = !DILocation(line: 2660, column: 10, scope: !7859)
!7882 = !DILocation(line: 2660, column: 33, scope: !7879)
!7883 = !DILocation(line: 2660, column: 60, scope: !7879)
!7884 = !DILocation(line: 2660, column: 66, scope: !7879)
!7885 = !DILocation(line: 2660, column: 21, scope: !7879)
!7886 = !DILocation(line: 2663, column: 6, scope: !7859)
!7887 = !DILocation(line: 2663, column: 12, scope: !7859)
!7888 = !DILocation(line: 2663, column: 25, scope: !7859)
!7889 = !DILocation(line: 2664, column: 5, scope: !7859)
!7890 = !DILocation(line: 2665, column: 14, scope: !7891)
!7891 = distinct !DILexicalBlock(scope: !7854, file: !3, line: 2665, column: 14)
!7892 = !DILocation(line: 2665, column: 18, scope: !7891)
!7893 = !DILocation(line: 2665, column: 27, scope: !7891)
!7894 = !DILocation(line: 2665, column: 14, scope: !7854)
!7895 = !DILocation(line: 2666, column: 18, scope: !7896)
!7896 = distinct !DILexicalBlock(scope: !7891, file: !3, line: 2665, column: 41)
!7897 = !DILocation(line: 2666, column: 44, scope: !7896)
!7898 = !DILocation(line: 2666, column: 6, scope: !7896)
!7899 = !DILocation(line: 2667, column: 5, scope: !7896)
!7900 = !DILocation(line: 2668, column: 14, scope: !7901)
!7901 = distinct !DILexicalBlock(scope: !7891, file: !3, line: 2668, column: 14)
!7902 = !DILocation(line: 2668, column: 18, scope: !7901)
!7903 = !DILocation(line: 2668, column: 27, scope: !7901)
!7904 = !DILocation(line: 2668, column: 14, scope: !7891)
!7905 = !DILocalVariable(name: "sfile", scope: !7906, file: !3, line: 2669, type: !4889)
!7906 = distinct !DILexicalBlock(scope: !7901, file: !3, line: 2668, column: 41)
!7907 = !DILocation(line: 2669, column: 17, scope: !7906)
!7908 = !DILocation(line: 2669, column: 37, scope: !7906)
!7909 = !DILocation(line: 2669, column: 24, scope: !7906)
!7910 = !DILocation(line: 2671, column: 18, scope: !7906)
!7911 = !DILocation(line: 2671, column: 44, scope: !7906)
!7912 = !DILocation(line: 2671, column: 6, scope: !7906)
!7913 = !DILocation(line: 2672, column: 10, scope: !7914)
!7914 = distinct !DILexicalBlock(scope: !7906, file: !3, line: 2672, column: 10)
!7915 = !DILocation(line: 2672, column: 17, scope: !7914)
!7916 = !DILocation(line: 2672, column: 10, scope: !7906)
!7917 = !DILocation(line: 2673, column: 19, scope: !7914)
!7918 = !DILocation(line: 2673, column: 52, scope: !7914)
!7919 = !DILocation(line: 2673, column: 59, scope: !7914)
!7920 = !DILocation(line: 2673, column: 7, scope: !7914)
!7921 = !DILocation(line: 2674, column: 5, scope: !7906)
!7922 = !DILocation(line: 2675, column: 14, scope: !7923)
!7923 = distinct !DILexicalBlock(scope: !7901, file: !3, line: 2675, column: 14)
!7924 = !DILocation(line: 2675, column: 18, scope: !7923)
!7925 = !DILocation(line: 2675, column: 27, scope: !7923)
!7926 = !DILocation(line: 2675, column: 14, scope: !7901)
!7927 = !DILocation(line: 2676, column: 18, scope: !7928)
!7928 = distinct !DILexicalBlock(scope: !7923, file: !3, line: 2675, column: 40)
!7929 = !DILocation(line: 2676, column: 43, scope: !7928)
!7930 = !DILocation(line: 2676, column: 6, scope: !7928)
!7931 = !DILocation(line: 2677, column: 5, scope: !7928)
!7932 = !DILocation(line: 2678, column: 14, scope: !7933)
!7933 = distinct !DILexicalBlock(scope: !7923, file: !3, line: 2678, column: 14)
!7934 = !DILocation(line: 2678, column: 18, scope: !7933)
!7935 = !DILocation(line: 2678, column: 27, scope: !7933)
!7936 = !DILocation(line: 2678, column: 14, scope: !7923)
!7937 = !DILocalVariable(name: "so", scope: !7938, file: !3, line: 2679, type: !4957)
!7938 = distinct !DILexicalBlock(scope: !7933, file: !3, line: 2678, column: 45)
!7939 = !DILocation(line: 2679, column: 17, scope: !7938)
!7940 = !DILocation(line: 2679, column: 34, scope: !7938)
!7941 = !DILocation(line: 2679, column: 21, scope: !7938)
!7942 = !DILocation(line: 2680, column: 18, scope: !7938)
!7943 = !DILocation(line: 2680, column: 22, scope: !7938)
!7944 = !DILocation(line: 2680, column: 6, scope: !7938)
!7945 = !DILocation(line: 2681, column: 5, scope: !7938)
!7946 = !DILocation(line: 2682, column: 14, scope: !7947)
!7947 = distinct !DILexicalBlock(scope: !7933, file: !3, line: 2682, column: 14)
!7948 = !DILocation(line: 2682, column: 18, scope: !7947)
!7949 = !DILocation(line: 2682, column: 27, scope: !7947)
!7950 = !DILocation(line: 2682, column: 14, scope: !7933)
!7951 = !DILocalVariable(name: "sima", scope: !7952, file: !3, line: 2683, type: !4985)
!7952 = distinct !DILexicalBlock(scope: !7947, file: !3, line: 2682, column: 42)
!7953 = !DILocation(line: 2683, column: 18, scope: !7952)
!7954 = !DILocation(line: 2683, column: 38, scope: !7952)
!7955 = !DILocation(line: 2683, column: 24, scope: !7952)
!7956 = !DILocation(line: 2685, column: 18, scope: !7952)
!7957 = !DILocation(line: 2685, column: 45, scope: !7952)
!7958 = !DILocation(line: 2685, column: 6, scope: !7952)
!7959 = !DILocation(line: 2686, column: 10, scope: !7960)
!7960 = distinct !DILexicalBlock(scope: !7952, file: !3, line: 2686, column: 10)
!7961 = !DILocation(line: 2686, column: 16, scope: !7960)
!7962 = !DILocation(line: 2686, column: 10, scope: !7952)
!7963 = !DILocation(line: 2687, column: 26, scope: !7960)
!7964 = !DILocation(line: 2687, column: 30, scope: !7960)
!7965 = !DILocation(line: 2687, column: 36, scope: !7960)
!7966 = !DILocation(line: 2687, column: 7, scope: !7960)
!7967 = !DILocation(line: 2688, column: 5, scope: !7952)
!7968 = !DILocation(line: 2689, column: 14, scope: !7969)
!7969 = distinct !DILexicalBlock(scope: !7947, file: !3, line: 2689, column: 14)
!7970 = !DILocation(line: 2689, column: 18, scope: !7969)
!7971 = !DILocation(line: 2689, column: 27, scope: !7969)
!7972 = !DILocation(line: 2689, column: 14, scope: !7947)
!7973 = !DILocation(line: 2690, column: 18, scope: !7974)
!7974 = distinct !DILexicalBlock(scope: !7969, file: !3, line: 2689, column: 41)
!7975 = !DILocation(line: 2690, column: 44, scope: !7974)
!7976 = !DILocation(line: 2690, column: 6, scope: !7974)
!7977 = !DILocation(line: 2691, column: 5, scope: !7974)
!7978 = !DILocation(line: 2692, column: 14, scope: !7979)
!7979 = distinct !DILexicalBlock(scope: !7969, file: !3, line: 2692, column: 14)
!7980 = !DILocation(line: 2692, column: 18, scope: !7979)
!7981 = !DILocation(line: 2692, column: 27, scope: !7979)
!7982 = !DILocation(line: 2692, column: 14, scope: !7969)
!7983 = !DILocalVariable(name: "scr", scope: !7984, file: !3, line: 2693, type: !5064)
!7984 = distinct !DILexicalBlock(scope: !7979, file: !3, line: 2692, column: 43)
!7985 = !DILocation(line: 2693, column: 19, scope: !7984)
!7986 = !DILocation(line: 2693, column: 39, scope: !7984)
!7987 = !DILocation(line: 2693, column: 25, scope: !7984)
!7988 = !DILocation(line: 2694, column: 6, scope: !7984)
!7989 = !DILocation(line: 2694, column: 11, scope: !7984)
!7990 = !DILocation(line: 2694, column: 20, scope: !7984)
!7991 = !DILocation(line: 2695, column: 18, scope: !7984)
!7992 = !DILocation(line: 2695, column: 46, scope: !7984)
!7993 = !DILocation(line: 2695, column: 6, scope: !7984)
!7994 = !DILocation(line: 2696, column: 5, scope: !7984)
!7995 = !DILocation(line: 2697, column: 14, scope: !7996)
!7996 = distinct !DILexicalBlock(scope: !7979, file: !3, line: 2697, column: 14)
!7997 = !DILocation(line: 2697, column: 18, scope: !7996)
!7998 = !DILocation(line: 2697, column: 27, scope: !7996)
!7999 = !DILocation(line: 2697, column: 14, scope: !7979)
!8000 = !DILocation(line: 2698, column: 18, scope: !8001)
!8001 = distinct !DILexicalBlock(scope: !7996, file: !3, line: 2697, column: 43)
!8002 = !DILocation(line: 2698, column: 46, scope: !8001)
!8003 = !DILocation(line: 2698, column: 6, scope: !8001)
!8004 = !DILocation(line: 2699, column: 5, scope: !8001)
!8005 = !DILocation(line: 2700, column: 14, scope: !8006)
!8006 = distinct !DILexicalBlock(scope: !7996, file: !3, line: 2700, column: 14)
!8007 = !DILocation(line: 2700, column: 18, scope: !8006)
!8008 = !DILocation(line: 2700, column: 27, scope: !8006)
!8009 = !DILocation(line: 2700, column: 14, scope: !7996)
!8010 = !DILocalVariable(name: "snla", scope: !8011, file: !3, line: 2701, type: !5091)
!8011 = distinct !DILexicalBlock(scope: !8006, file: !3, line: 2700, column: 40)
!8012 = !DILocation(line: 2701, column: 16, scope: !8011)
!8013 = !DILocation(line: 2701, column: 34, scope: !8011)
!8014 = !DILocation(line: 2701, column: 22, scope: !8011)
!8015 = !DILocation(line: 2703, column: 18, scope: !8011)
!8016 = !DILocation(line: 2703, column: 43, scope: !8011)
!8017 = !DILocation(line: 2703, column: 6, scope: !8011)
!8018 = !DILocation(line: 2704, column: 10, scope: !8019)
!8019 = distinct !DILexicalBlock(scope: !8011, file: !3, line: 2704, column: 10)
!8020 = !DILocation(line: 2704, column: 16, scope: !8019)
!8021 = !DILocation(line: 2704, column: 10, scope: !8011)
!8022 = !DILocation(line: 2704, column: 33, scope: !8019)
!8023 = !DILocation(line: 2704, column: 60, scope: !8019)
!8024 = !DILocation(line: 2704, column: 66, scope: !8019)
!8025 = !DILocation(line: 2704, column: 21, scope: !8019)
!8026 = !DILocation(line: 2705, column: 5, scope: !8011)
!8027 = !DILocation(line: 2706, column: 14, scope: !8028)
!8028 = distinct !DILexicalBlock(scope: !8006, file: !3, line: 2706, column: 14)
!8029 = !DILocation(line: 2706, column: 18, scope: !8028)
!8030 = !DILocation(line: 2706, column: 27, scope: !8028)
!8031 = !DILocation(line: 2706, column: 14, scope: !8006)
!8032 = !DILocation(line: 2707, column: 18, scope: !8033)
!8033 = distinct !DILexicalBlock(scope: !8028, file: !3, line: 2706, column: 41)
!8034 = !DILocation(line: 2707, column: 44, scope: !8033)
!8035 = !DILocation(line: 2707, column: 6, scope: !8033)
!8036 = !DILocation(line: 2708, column: 5, scope: !8033)
!8037 = !DILocation(line: 2709, column: 14, scope: !8038)
!8038 = distinct !DILexicalBlock(scope: !8028, file: !3, line: 2709, column: 14)
!8039 = !DILocation(line: 2709, column: 18, scope: !8038)
!8040 = !DILocation(line: 2709, column: 27, scope: !8038)
!8041 = !DILocation(line: 2709, column: 14, scope: !8028)
!8042 = !DILocalVariable(name: "snode", scope: !8043, file: !3, line: 2710, type: !5106)
!8043 = distinct !DILexicalBlock(scope: !8038, file: !3, line: 2709, column: 41)
!8044 = !DILocation(line: 2710, column: 17, scope: !8043)
!8045 = !DILocation(line: 2710, column: 38, scope: !8043)
!8046 = !DILocation(line: 2710, column: 25, scope: !8043)
!8047 = !DILocalVariable(name: "path", scope: !8043, file: !3, line: 2711, type: !8048)
!8048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8049, size: 64)
!8049 = !DIDerivedType(tag: DW_TAG_typedef, name: "bNodeTreePath", file: !61, line: 923, baseType: !8050)
!8050 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeTreePath", file: !61, line: 914, size: 832, elements: !8051)
!8051 = !{!8052, !8054, !8055, !8056, !8057, !8058, !8059}
!8052 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !8050, file: !61, line: 915, baseType: !8053, size: 64)
!8053 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8050, size: 64)
!8054 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !8050, file: !61, line: 915, baseType: !8053, size: 64, offset: 64)
!8055 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !8050, file: !61, line: 917, baseType: !1064, size: 64, offset: 128)
!8056 = !DIDerivedType(tag: DW_TAG_member, name: "parent_key", scope: !8050, file: !61, line: 918, baseType: !1434, size: 32, offset: 192)
!8057 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !8050, file: !61, line: 919, baseType: !98, size: 32, offset: 224)
!8058 = !DIDerivedType(tag: DW_TAG_member, name: "view_center", scope: !8050, file: !61, line: 920, baseType: !1335, size: 64, offset: 256)
!8059 = !DIDerivedType(tag: DW_TAG_member, name: "node_name", scope: !8050, file: !61, line: 922, baseType: !692, size: 512, offset: 320)
!8060 = !DILocation(line: 2711, column: 21, scope: !8043)
!8061 = !DILocation(line: 2712, column: 18, scope: !8043)
!8062 = !DILocation(line: 2712, column: 44, scope: !8043)
!8063 = !DILocation(line: 2712, column: 6, scope: !8043)
!8064 = !DILocation(line: 2714, column: 16, scope: !8065)
!8065 = distinct !DILexicalBlock(scope: !8043, file: !3, line: 2714, column: 6)
!8066 = !DILocation(line: 2714, column: 23, scope: !8065)
!8067 = !DILocation(line: 2714, column: 32, scope: !8065)
!8068 = !DILocation(line: 2714, column: 15, scope: !8065)
!8069 = !DILocation(line: 2714, column: 11, scope: !8065)
!8070 = !DILocation(line: 2714, column: 39, scope: !8071)
!8071 = distinct !DILexicalBlock(scope: !8065, file: !3, line: 2714, column: 6)
!8072 = !DILocation(line: 2714, column: 6, scope: !8065)
!8073 = !DILocation(line: 2715, column: 19, scope: !8071)
!8074 = !DILocation(line: 2715, column: 49, scope: !8071)
!8075 = !DILocation(line: 2715, column: 7, scope: !8071)
!8076 = !DILocation(line: 2714, column: 50, scope: !8071)
!8077 = !DILocation(line: 2714, column: 56, scope: !8071)
!8078 = !DILocation(line: 2714, column: 49, scope: !8071)
!8079 = !DILocation(line: 2714, column: 6, scope: !8071)
!8080 = distinct !{!8080, !8072, !8081}
!8081 = !DILocation(line: 2715, column: 53, scope: !8065)
!8082 = !DILocation(line: 2716, column: 5, scope: !8043)
!8083 = !DILocation(line: 2717, column: 14, scope: !8084)
!8084 = distinct !DILexicalBlock(scope: !8038, file: !3, line: 2717, column: 14)
!8085 = !DILocation(line: 2717, column: 18, scope: !8084)
!8086 = !DILocation(line: 2717, column: 27, scope: !8084)
!8087 = !DILocation(line: 2717, column: 14, scope: !8038)
!8088 = !DILocation(line: 2718, column: 18, scope: !8089)
!8089 = distinct !DILexicalBlock(scope: !8084, file: !3, line: 2717, column: 42)
!8090 = !DILocation(line: 2718, column: 45, scope: !8089)
!8091 = !DILocation(line: 2718, column: 6, scope: !8089)
!8092 = !DILocation(line: 2719, column: 5, scope: !8089)
!8093 = !DILocation(line: 2720, column: 14, scope: !8094)
!8094 = distinct !DILexicalBlock(scope: !8084, file: !3, line: 2720, column: 14)
!8095 = !DILocation(line: 2720, column: 18, scope: !8094)
!8096 = !DILocation(line: 2720, column: 27, scope: !8094)
!8097 = !DILocation(line: 2720, column: 14, scope: !8084)
!8098 = !DILocalVariable(name: "con", scope: !8099, file: !3, line: 2721, type: !5108)
!8099 = distinct !DILexicalBlock(scope: !8094, file: !3, line: 2720, column: 44)
!8100 = !DILocation(line: 2721, column: 20, scope: !8099)
!8101 = !DILocation(line: 2721, column: 41, scope: !8099)
!8102 = !DILocation(line: 2721, column: 26, scope: !8099)
!8103 = !DILocalVariable(name: "cl", scope: !8099, file: !3, line: 2722, type: !8104)
!8104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8105, size: 64)
!8105 = !DIDerivedType(tag: DW_TAG_typedef, name: "ConsoleLine", file: !61, line: 1026, baseType: !8106)
!8106 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ConsoleLine", file: !61, line: 1016, size: 320, elements: !8107)
!8107 = !{!8108, !8110, !8111, !8112, !8113, !8114, !8115}
!8108 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !8106, file: !61, line: 1017, baseType: !8109, size: 64)
!8109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8106, size: 64)
!8110 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !8106, file: !61, line: 1017, baseType: !8109, size: 64, offset: 64)
!8111 = !DIDerivedType(tag: DW_TAG_member, name: "len_alloc", scope: !8106, file: !61, line: 1020, baseType: !98, size: 32, offset: 128)
!8112 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !8106, file: !61, line: 1021, baseType: !98, size: 32, offset: 160)
!8113 = !DIDerivedType(tag: DW_TAG_member, name: "line", scope: !8106, file: !61, line: 1022, baseType: !501, size: 64, offset: 192)
!8114 = !DIDerivedType(tag: DW_TAG_member, name: "cursor", scope: !8106, file: !61, line: 1024, baseType: !98, size: 32, offset: 256)
!8115 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !8106, file: !61, line: 1025, baseType: !98, size: 32, offset: 288)
!8116 = !DILocation(line: 2722, column: 19, scope: !8099)
!8117 = !DILocation(line: 2724, column: 14, scope: !8118)
!8118 = distinct !DILexicalBlock(scope: !8099, file: !3, line: 2724, column: 6)
!8119 = !DILocation(line: 2724, column: 19, scope: !8118)
!8120 = !DILocation(line: 2724, column: 27, scope: !8118)
!8121 = !DILocation(line: 2724, column: 13, scope: !8118)
!8122 = !DILocation(line: 2724, column: 11, scope: !8118)
!8123 = !DILocation(line: 2724, column: 34, scope: !8124)
!8124 = distinct !DILexicalBlock(scope: !8118, file: !3, line: 2724, column: 6)
!8125 = !DILocation(line: 2724, column: 6, scope: !8118)
!8126 = !DILocation(line: 2726, column: 19, scope: !8127)
!8127 = distinct !DILexicalBlock(scope: !8124, file: !3, line: 2724, column: 51)
!8128 = !DILocation(line: 2726, column: 47, scope: !8127)
!8129 = !DILocation(line: 2726, column: 7, scope: !8127)
!8130 = !DILocation(line: 2727, column: 17, scope: !8127)
!8131 = !DILocation(line: 2727, column: 27, scope: !8127)
!8132 = !DILocation(line: 2727, column: 31, scope: !8127)
!8133 = !DILocation(line: 2727, column: 34, scope: !8127)
!8134 = !DILocation(line: 2727, column: 38, scope: !8127)
!8135 = !DILocation(line: 2727, column: 42, scope: !8127)
!8136 = !DILocation(line: 2727, column: 7, scope: !8127)
!8137 = !DILocation(line: 2728, column: 6, scope: !8127)
!8138 = !DILocation(line: 2724, column: 41, scope: !8124)
!8139 = !DILocation(line: 2724, column: 45, scope: !8124)
!8140 = !DILocation(line: 2724, column: 40, scope: !8124)
!8141 = !DILocation(line: 2724, column: 6, scope: !8124)
!8142 = distinct !{!8142, !8125, !8143}
!8143 = !DILocation(line: 2728, column: 6, scope: !8118)
!8144 = !DILocation(line: 2729, column: 18, scope: !8099)
!8145 = !DILocation(line: 2729, column: 47, scope: !8099)
!8146 = !DILocation(line: 2729, column: 6, scope: !8099)
!8147 = !DILocation(line: 2731, column: 5, scope: !8099)
!8148 = !DILocation(line: 2732, column: 14, scope: !8149)
!8149 = distinct !DILexicalBlock(scope: !8094, file: !3, line: 2732, column: 14)
!8150 = !DILocation(line: 2732, column: 18, scope: !8149)
!8151 = !DILocation(line: 2732, column: 27, scope: !8149)
!8152 = !DILocation(line: 2732, column: 14, scope: !8094)
!8153 = !DILocation(line: 2733, column: 18, scope: !8154)
!8154 = distinct !DILexicalBlock(scope: !8149, file: !3, line: 2732, column: 45)
!8155 = !DILocation(line: 2733, column: 48, scope: !8154)
!8156 = !DILocation(line: 2733, column: 6, scope: !8154)
!8157 = !DILocation(line: 2734, column: 5, scope: !8154)
!8158 = !DILocation(line: 2735, column: 14, scope: !8159)
!8159 = distinct !DILexicalBlock(scope: !8149, file: !3, line: 2735, column: 14)
!8160 = !DILocation(line: 2735, column: 18, scope: !8159)
!8161 = !DILocation(line: 2735, column: 27, scope: !8159)
!8162 = !DILocation(line: 2735, column: 14, scope: !8149)
!8163 = !DILocation(line: 2736, column: 18, scope: !8164)
!8164 = distinct !DILexicalBlock(scope: !8159, file: !3, line: 2735, column: 41)
!8165 = !DILocation(line: 2736, column: 44, scope: !8164)
!8166 = !DILocation(line: 2736, column: 6, scope: !8164)
!8167 = !DILocation(line: 2737, column: 5, scope: !8164)
!8168 = !DILocation(line: 2739, column: 9, scope: !7790)
!8169 = !DILocation(line: 2739, column: 13, scope: !7790)
!8170 = !DILocation(line: 2739, column: 7, scope: !7790)
!8171 = distinct !{!8171, !7786, !8172}
!8172 = !DILocation(line: 2740, column: 4, scope: !7591)
!8173 = !DILocation(line: 2741, column: 3, scope: !7591)
!8174 = !DILocation(line: 2613, column: 40, scope: !7588)
!8175 = !DILocation(line: 2613, column: 44, scope: !7588)
!8176 = !DILocation(line: 2613, column: 38, scope: !7588)
!8177 = !DILocation(line: 2613, column: 3, scope: !7588)
!8178 = distinct !{!8178, !7589, !8179}
!8179 = !DILocation(line: 2741, column: 3, scope: !7582)
!8180 = !DILocation(line: 2743, column: 7, scope: !7532)
!8181 = !DILocation(line: 2743, column: 11, scope: !7532)
!8182 = !DILocation(line: 2743, column: 14, scope: !7532)
!8183 = !DILocation(line: 2743, column: 5, scope: !7532)
!8184 = distinct !{!8184, !7529, !8185}
!8185 = !DILocation(line: 2744, column: 2, scope: !7451)
!8186 = !DILocation(line: 2746, column: 21, scope: !7451)
!8187 = !DILocation(line: 2746, column: 2, scope: !7451)
!8188 = !DILocation(line: 2749, column: 10, scope: !7451)
!8189 = !DILocation(line: 2749, column: 2, scope: !7451)
!8190 = !DILocation(line: 2750, column: 1, scope: !7451)
!8191 = distinct !DISubprogram(name: "write_movieclips", scope: !3, file: !3, line: 3132, type: !7324, scopeLine: 3133, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !5641)
!8192 = !DILocalVariable(name: "wd", arg: 1, scope: !8191, file: !3, line: 3132, type: !5820)
!8193 = !DILocation(line: 3132, column: 41, scope: !8191)
!8194 = !DILocalVariable(name: "idbase", arg: 2, scope: !8191, file: !3, line: 3132, type: !565)
!8195 = !DILocation(line: 3132, column: 55, scope: !8191)
!8196 = !DILocalVariable(name: "clip", scope: !8191, file: !3, line: 3134, type: !8197)
!8197 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8198, size: 64)
!8198 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieClip", file: !2063, line: 101, baseType: !2062)
!8199 = !DILocation(line: 3134, column: 13, scope: !8191)
!8200 = !DILocation(line: 3136, column: 8, scope: !8191)
!8201 = !DILocation(line: 3136, column: 16, scope: !8191)
!8202 = !DILocation(line: 3136, column: 6, scope: !8191)
!8203 = !DILocation(line: 3137, column: 2, scope: !8191)
!8204 = !DILocation(line: 3137, column: 9, scope: !8191)
!8205 = !DILocation(line: 3138, column: 7, scope: !8206)
!8206 = distinct !DILexicalBlock(scope: !8207, file: !3, line: 3138, column: 7)
!8207 = distinct !DILexicalBlock(scope: !8191, file: !3, line: 3137, column: 15)
!8208 = !DILocation(line: 3138, column: 13, scope: !8206)
!8209 = !DILocation(line: 3138, column: 16, scope: !8206)
!8210 = !DILocation(line: 3138, column: 18, scope: !8206)
!8211 = !DILocation(line: 3138, column: 21, scope: !8206)
!8212 = !DILocation(line: 3138, column: 24, scope: !8206)
!8213 = !DILocation(line: 3138, column: 28, scope: !8206)
!8214 = !DILocation(line: 3138, column: 7, scope: !8207)
!8215 = !DILocalVariable(name: "tracking", scope: !8216, file: !3, line: 3139, type: !8217)
!8216 = distinct !DILexicalBlock(scope: !8206, file: !3, line: 3138, column: 37)
!8217 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8218, size: 64)
!8218 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTracking", file: !2081, line: 356, baseType: !2080)
!8219 = !DILocation(line: 3139, column: 19, scope: !8216)
!8220 = !DILocation(line: 3139, column: 30, scope: !8216)
!8221 = !DILocation(line: 3139, column: 36, scope: !8216)
!8222 = !DILocalVariable(name: "object", scope: !8216, file: !3, line: 3140, type: !8223)
!8223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8224, size: 64)
!8224 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingObject", file: !2081, line: 293, baseType: !8225)
!8225 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingObject", file: !2081, line: 280, size: 1216, elements: !8226)
!8226 = !{!8227, !8229, !8230, !8231, !8232, !8233, !8234, !8235, !8236, !8237}
!8227 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !8225, file: !2081, line: 281, baseType: !8228, size: 64)
!8228 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8225, size: 64)
!8229 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !8225, file: !2081, line: 281, baseType: !8228, size: 64, offset: 64)
!8230 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !8225, file: !2081, line: 283, baseType: !692, size: 512, offset: 128)
!8231 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !8225, file: !2081, line: 284, baseType: !98, size: 32, offset: 640)
!8232 = !DIDerivedType(tag: DW_TAG_member, name: "scale", scope: !8225, file: !2081, line: 285, baseType: !396, size: 32, offset: 672)
!8233 = !DIDerivedType(tag: DW_TAG_member, name: "tracks", scope: !8225, file: !2081, line: 287, baseType: !388, size: 128, offset: 704)
!8234 = !DIDerivedType(tag: DW_TAG_member, name: "plane_tracks", scope: !8225, file: !2081, line: 288, baseType: !388, size: 128, offset: 832)
!8235 = !DIDerivedType(tag: DW_TAG_member, name: "reconstruction", scope: !8225, file: !2081, line: 289, baseType: !2132, size: 192, offset: 960)
!8236 = !DIDerivedType(tag: DW_TAG_member, name: "keyframe1", scope: !8225, file: !2081, line: 292, baseType: !98, size: 32, offset: 1152)
!8237 = !DIDerivedType(tag: DW_TAG_member, name: "keyframe2", scope: !8225, file: !2081, line: 292, baseType: !98, size: 32, offset: 1184)
!8238 = !DILocation(line: 3140, column: 25, scope: !8216)
!8239 = !DILocation(line: 3141, column: 16, scope: !8216)
!8240 = !DILocation(line: 3141, column: 43, scope: !8216)
!8241 = !DILocation(line: 3141, column: 4, scope: !8216)
!8242 = !DILocation(line: 3143, column: 8, scope: !8243)
!8243 = distinct !DILexicalBlock(scope: !8216, file: !3, line: 3143, column: 8)
!8244 = !DILocation(line: 3143, column: 14, scope: !8243)
!8245 = !DILocation(line: 3143, column: 17, scope: !8243)
!8246 = !DILocation(line: 3143, column: 8, scope: !8216)
!8247 = !DILocation(line: 3144, column: 23, scope: !8243)
!8248 = !DILocation(line: 3144, column: 29, scope: !8243)
!8249 = !DILocation(line: 3144, column: 32, scope: !8243)
!8250 = !DILocation(line: 3144, column: 44, scope: !8243)
!8251 = !DILocation(line: 3144, column: 5, scope: !8243)
!8252 = !DILocation(line: 3146, column: 8, scope: !8253)
!8253 = distinct !DILexicalBlock(scope: !8216, file: !3, line: 3146, column: 8)
!8254 = !DILocation(line: 3146, column: 14, scope: !8253)
!8255 = !DILocation(line: 3146, column: 8, scope: !8216)
!8256 = !DILocation(line: 3147, column: 20, scope: !8253)
!8257 = !DILocation(line: 3147, column: 24, scope: !8253)
!8258 = !DILocation(line: 3147, column: 30, scope: !8253)
!8259 = !DILocation(line: 3147, column: 5, scope: !8253)
!8260 = !DILocation(line: 3149, column: 22, scope: !8216)
!8261 = !DILocation(line: 3149, column: 27, scope: !8216)
!8262 = !DILocation(line: 3149, column: 37, scope: !8216)
!8263 = !DILocation(line: 3149, column: 4, scope: !8216)
!8264 = !DILocation(line: 3150, column: 27, scope: !8216)
!8265 = !DILocation(line: 3150, column: 32, scope: !8216)
!8266 = !DILocation(line: 3150, column: 42, scope: !8216)
!8267 = !DILocation(line: 3150, column: 4, scope: !8216)
!8268 = !DILocation(line: 3151, column: 30, scope: !8216)
!8269 = !DILocation(line: 3151, column: 35, scope: !8216)
!8270 = !DILocation(line: 3151, column: 45, scope: !8216)
!8271 = !DILocation(line: 3151, column: 4, scope: !8216)
!8272 = !DILocation(line: 3153, column: 12, scope: !8216)
!8273 = !DILocation(line: 3153, column: 22, scope: !8216)
!8274 = !DILocation(line: 3153, column: 30, scope: !8216)
!8275 = !DILocation(line: 3153, column: 10, scope: !8216)
!8276 = !DILocation(line: 3154, column: 4, scope: !8216)
!8277 = !DILocation(line: 3154, column: 11, scope: !8216)
!8278 = !DILocation(line: 3155, column: 17, scope: !8279)
!8279 = distinct !DILexicalBlock(scope: !8216, file: !3, line: 3154, column: 19)
!8280 = !DILocation(line: 3155, column: 53, scope: !8279)
!8281 = !DILocation(line: 3155, column: 5, scope: !8279)
!8282 = !DILocation(line: 3157, column: 23, scope: !8279)
!8283 = !DILocation(line: 3157, column: 28, scope: !8279)
!8284 = !DILocation(line: 3157, column: 36, scope: !8279)
!8285 = !DILocation(line: 3157, column: 5, scope: !8279)
!8286 = !DILocation(line: 3158, column: 28, scope: !8279)
!8287 = !DILocation(line: 3158, column: 33, scope: !8279)
!8288 = !DILocation(line: 3158, column: 41, scope: !8279)
!8289 = !DILocation(line: 3158, column: 5, scope: !8279)
!8290 = !DILocation(line: 3159, column: 31, scope: !8279)
!8291 = !DILocation(line: 3159, column: 36, scope: !8279)
!8292 = !DILocation(line: 3159, column: 44, scope: !8279)
!8293 = !DILocation(line: 3159, column: 5, scope: !8279)
!8294 = !DILocation(line: 3161, column: 13, scope: !8279)
!8295 = !DILocation(line: 3161, column: 21, scope: !8279)
!8296 = !DILocation(line: 3161, column: 11, scope: !8279)
!8297 = distinct !{!8297, !8276, !8298}
!8298 = !DILocation(line: 3162, column: 4, scope: !8216)
!8299 = !DILocation(line: 3163, column: 3, scope: !8216)
!8300 = !DILocation(line: 3165, column: 9, scope: !8207)
!8301 = !DILocation(line: 3165, column: 15, scope: !8207)
!8302 = !DILocation(line: 3165, column: 18, scope: !8207)
!8303 = !DILocation(line: 3165, column: 7, scope: !8207)
!8304 = distinct !{!8304, !8203, !8305}
!8305 = !DILocation(line: 3166, column: 2, scope: !8191)
!8306 = !DILocation(line: 3169, column: 10, scope: !8191)
!8307 = !DILocation(line: 3169, column: 2, scope: !8191)
!8308 = !DILocation(line: 3170, column: 1, scope: !8191)
!8309 = distinct !DISubprogram(name: "write_masks", scope: !3, file: !3, line: 3172, type: !7324, scopeLine: 3173, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !5641)
!8310 = !DILocalVariable(name: "wd", arg: 1, scope: !8309, file: !3, line: 3172, type: !5820)
!8311 = !DILocation(line: 3172, column: 36, scope: !8309)
!8312 = !DILocalVariable(name: "idbase", arg: 2, scope: !8309, file: !3, line: 3172, type: !565)
!8313 = !DILocation(line: 3172, column: 50, scope: !8309)
!8314 = !DILocalVariable(name: "mask", scope: !8309, file: !3, line: 3174, type: !8315)
!8315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8316, size: 64)
!8316 = !DIDerivedType(tag: DW_TAG_typedef, name: "Mask", file: !2268, line: 57, baseType: !2267)
!8317 = !DILocation(line: 3174, column: 8, scope: !8309)
!8318 = !DILocation(line: 3176, column: 9, scope: !8309)
!8319 = !DILocation(line: 3176, column: 17, scope: !8309)
!8320 = !DILocation(line: 3176, column: 7, scope: !8309)
!8321 = !DILocation(line: 3177, column: 2, scope: !8309)
!8322 = !DILocation(line: 3177, column: 9, scope: !8309)
!8323 = !DILocation(line: 3178, column: 7, scope: !8324)
!8324 = distinct !DILexicalBlock(scope: !8325, file: !3, line: 3178, column: 7)
!8325 = distinct !DILexicalBlock(scope: !8309, file: !3, line: 3177, column: 15)
!8326 = !DILocation(line: 3178, column: 13, scope: !8324)
!8327 = !DILocation(line: 3178, column: 16, scope: !8324)
!8328 = !DILocation(line: 3178, column: 19, scope: !8324)
!8329 = !DILocation(line: 3178, column: 23, scope: !8324)
!8330 = !DILocation(line: 3178, column: 26, scope: !8324)
!8331 = !DILocation(line: 3178, column: 30, scope: !8324)
!8332 = !DILocation(line: 3178, column: 7, scope: !8325)
!8333 = !DILocalVariable(name: "masklay", scope: !8334, file: !3, line: 3179, type: !8335)
!8334 = distinct !DILexicalBlock(scope: !8324, file: !3, line: 3178, column: 39)
!8335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8336, size: 64)
!8336 = !DIDerivedType(tag: DW_TAG_typedef, name: "MaskLayer", file: !2268, line: 142, baseType: !8337)
!8337 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MaskLayer", file: !2268, line: 122, size: 1152, elements: !8338)
!8338 = !{!8339, !8341, !8342, !8343, !8344, !8345, !8384, !8386, !8387, !8388, !8389, !8390, !8391, !8392}
!8339 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !8337, file: !2268, line: 123, baseType: !8340, size: 64)
!8340 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8337, size: 64)
!8341 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !8337, file: !2268, line: 123, baseType: !8340, size: 64, offset: 64)
!8342 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !8337, file: !2268, line: 125, baseType: !692, size: 512, offset: 128)
!8343 = !DIDerivedType(tag: DW_TAG_member, name: "splines", scope: !8337, file: !2268, line: 127, baseType: !388, size: 128, offset: 640)
!8344 = !DIDerivedType(tag: DW_TAG_member, name: "splines_shapes", scope: !8337, file: !2268, line: 128, baseType: !388, size: 128, offset: 768)
!8345 = !DIDerivedType(tag: DW_TAG_member, name: "act_spline", scope: !8337, file: !2268, line: 130, baseType: !8346, size: 64, offset: 896)
!8346 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8347, size: 64)
!8347 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MaskSpline", file: !2268, line: 88, size: 1792, elements: !8348)
!8348 = !{!8349, !8350, !8351, !8352, !8353, !8354, !8355, !8382, !8383}
!8349 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !8347, file: !2268, line: 89, baseType: !8346, size: 64)
!8350 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !8347, file: !2268, line: 89, baseType: !8346, size: 64, offset: 64)
!8351 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !8347, file: !2268, line: 91, baseType: !399, size: 16, offset: 128)
!8352 = !DIDerivedType(tag: DW_TAG_member, name: "offset_mode", scope: !8347, file: !2268, line: 92, baseType: !375, size: 8, offset: 144)
!8353 = !DIDerivedType(tag: DW_TAG_member, name: "weight_interp", scope: !8347, file: !2268, line: 93, baseType: !375, size: 8, offset: 152)
!8354 = !DIDerivedType(tag: DW_TAG_member, name: "tot_point", scope: !8347, file: !2268, line: 95, baseType: !98, size: 32, offset: 160)
!8355 = !DIDerivedType(tag: DW_TAG_member, name: "points", scope: !8347, file: !2268, line: 96, baseType: !8356, size: 64, offset: 192)
!8356 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8357, size: 64)
!8357 = !DIDerivedType(tag: DW_TAG_typedef, name: "MaskSplinePoint", file: !2268, line: 86, baseType: !8358)
!8358 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MaskSplinePoint", file: !2268, line: 80, size: 2176, elements: !8359)
!8359 = !{!8360, !8361, !8362, !8363, !8371}
!8360 = !DIDerivedType(tag: DW_TAG_member, name: "bezt", scope: !8358, file: !2268, line: 81, baseType: !2375, size: 576)
!8361 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !8358, file: !2268, line: 82, baseType: !98, size: 32, offset: 576)
!8362 = !DIDerivedType(tag: DW_TAG_member, name: "tot_uw", scope: !8358, file: !2268, line: 83, baseType: !98, size: 32, offset: 608)
!8363 = !DIDerivedType(tag: DW_TAG_member, name: "uw", scope: !8358, file: !2268, line: 84, baseType: !8364, size: 64, offset: 640)
!8364 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8365, size: 64)
!8365 = !DIDerivedType(tag: DW_TAG_typedef, name: "MaskSplinePointUW", file: !2268, line: 78, baseType: !8366)
!8366 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MaskSplinePointUW", file: !2268, line: 75, size: 96, elements: !8367)
!8367 = !{!8368, !8369, !8370}
!8368 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !8366, file: !2268, line: 76, baseType: !396, size: 32)
!8369 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !8366, file: !2268, line: 76, baseType: !396, size: 32, offset: 32)
!8370 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !8366, file: !2268, line: 77, baseType: !98, size: 32, offset: 64)
!8371 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !8358, file: !2268, line: 85, baseType: !8372, size: 1472, offset: 704)
!8372 = !DIDerivedType(tag: DW_TAG_typedef, name: "MaskParent", file: !2268, line: 73, baseType: !8373)
!8373 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MaskParent", file: !2268, line: 59, size: 1472, elements: !8374)
!8374 = !{!8375, !8376, !8377, !8378, !8379, !8380, !8381}
!8375 = !DIDerivedType(tag: DW_TAG_member, name: "id_type", scope: !8373, file: !2268, line: 61, baseType: !98, size: 32)
!8376 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !8373, file: !2268, line: 62, baseType: !98, size: 32, offset: 32)
!8377 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !8373, file: !2268, line: 63, baseType: !441, size: 64, offset: 64)
!8378 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !8373, file: !2268, line: 65, baseType: !692, size: 512, offset: 128)
!8379 = !DIDerivedType(tag: DW_TAG_member, name: "sub_parent", scope: !8373, file: !2268, line: 67, baseType: !692, size: 512, offset: 640)
!8380 = !DIDerivedType(tag: DW_TAG_member, name: "parent_orig", scope: !8373, file: !2268, line: 69, baseType: !1335, size: 64, offset: 1152)
!8381 = !DIDerivedType(tag: DW_TAG_member, name: "parent_corners_orig", scope: !8373, file: !2268, line: 72, baseType: !2177, size: 256, offset: 1216)
!8382 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !8347, file: !2268, line: 97, baseType: !8372, size: 1472, offset: 256)
!8383 = !DIDerivedType(tag: DW_TAG_member, name: "points_deform", scope: !8347, file: !2268, line: 99, baseType: !8356, size: 64, offset: 1728)
!8384 = !DIDerivedType(tag: DW_TAG_member, name: "act_point", scope: !8337, file: !2268, line: 131, baseType: !8385, size: 64, offset: 960)
!8385 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8358, size: 64)
!8386 = !DIDerivedType(tag: DW_TAG_member, name: "alpha", scope: !8337, file: !2268, line: 134, baseType: !396, size: 32, offset: 1024)
!8387 = !DIDerivedType(tag: DW_TAG_member, name: "blend", scope: !8337, file: !2268, line: 135, baseType: !375, size: 8, offset: 1056)
!8388 = !DIDerivedType(tag: DW_TAG_member, name: "blend_flag", scope: !8337, file: !2268, line: 136, baseType: !375, size: 8, offset: 1064)
!8389 = !DIDerivedType(tag: DW_TAG_member, name: "falloff", scope: !8337, file: !2268, line: 137, baseType: !375, size: 8, offset: 1072)
!8390 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !8337, file: !2268, line: 138, baseType: !1730, size: 56, offset: 1080)
!8391 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !8337, file: !2268, line: 140, baseType: !375, size: 8, offset: 1136)
!8392 = !DIDerivedType(tag: DW_TAG_member, name: "restrictflag", scope: !8337, file: !2268, line: 141, baseType: !375, size: 8, offset: 1144)
!8393 = !DILocation(line: 3179, column: 15, scope: !8334)
!8394 = !DILocation(line: 3181, column: 16, scope: !8334)
!8395 = !DILocation(line: 3181, column: 39, scope: !8334)
!8396 = !DILocation(line: 3181, column: 4, scope: !8334)
!8397 = !DILocation(line: 3183, column: 8, scope: !8398)
!8398 = distinct !DILexicalBlock(scope: !8334, file: !3, line: 3183, column: 8)
!8399 = !DILocation(line: 3183, column: 14, scope: !8398)
!8400 = !DILocation(line: 3183, column: 8, scope: !8334)
!8401 = !DILocation(line: 3184, column: 20, scope: !8398)
!8402 = !DILocation(line: 3184, column: 24, scope: !8398)
!8403 = !DILocation(line: 3184, column: 30, scope: !8398)
!8404 = !DILocation(line: 3184, column: 5, scope: !8398)
!8405 = !DILocation(line: 3186, column: 19, scope: !8406)
!8406 = distinct !DILexicalBlock(scope: !8334, file: !3, line: 3186, column: 4)
!8407 = !DILocation(line: 3186, column: 25, scope: !8406)
!8408 = !DILocation(line: 3186, column: 36, scope: !8406)
!8409 = !DILocation(line: 3186, column: 17, scope: !8406)
!8410 = !DILocation(line: 3186, column: 9, scope: !8406)
!8411 = !DILocation(line: 3186, column: 43, scope: !8412)
!8412 = distinct !DILexicalBlock(scope: !8406, file: !3, line: 3186, column: 4)
!8413 = !DILocation(line: 3186, column: 4, scope: !8406)
!8414 = !DILocalVariable(name: "spline", scope: !8415, file: !3, line: 3187, type: !8416)
!8415 = distinct !DILexicalBlock(scope: !8412, file: !3, line: 3186, column: 77)
!8416 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8417, size: 64)
!8417 = !DIDerivedType(tag: DW_TAG_typedef, name: "MaskSpline", file: !2268, line: 100, baseType: !8347)
!8418 = !DILocation(line: 3187, column: 17, scope: !8415)
!8419 = !DILocalVariable(name: "masklay_shape", scope: !8415, file: !3, line: 3188, type: !8420)
!8420 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8421, size: 64)
!8421 = !DIDerivedType(tag: DW_TAG_typedef, name: "MaskLayerShape", file: !2268, line: 111, baseType: !8422)
!8422 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MaskLayerShape", file: !2268, line: 103, size: 320, elements: !8423)
!8423 = !{!8424, !8426, !8427, !8428, !8429, !8430, !8431}
!8424 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !8422, file: !2268, line: 104, baseType: !8425, size: 64)
!8425 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8422, size: 64)
!8426 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !8422, file: !2268, line: 104, baseType: !8425, size: 64, offset: 64)
!8427 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !8422, file: !2268, line: 106, baseType: !975, size: 64, offset: 128)
!8428 = !DIDerivedType(tag: DW_TAG_member, name: "tot_vert", scope: !8422, file: !2268, line: 107, baseType: !98, size: 32, offset: 192)
!8429 = !DIDerivedType(tag: DW_TAG_member, name: "frame", scope: !8422, file: !2268, line: 108, baseType: !98, size: 32, offset: 224)
!8430 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !8422, file: !2268, line: 109, baseType: !375, size: 8, offset: 256)
!8431 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !8422, file: !2268, line: 110, baseType: !1730, size: 56, offset: 264)
!8432 = !DILocation(line: 3188, column: 21, scope: !8415)
!8433 = !DILocation(line: 3190, column: 17, scope: !8415)
!8434 = !DILocation(line: 3190, column: 43, scope: !8415)
!8435 = !DILocation(line: 3190, column: 5, scope: !8415)
!8436 = !DILocation(line: 3192, column: 19, scope: !8437)
!8437 = distinct !DILexicalBlock(scope: !8415, file: !3, line: 3192, column: 5)
!8438 = !DILocation(line: 3192, column: 28, scope: !8437)
!8439 = !DILocation(line: 3192, column: 36, scope: !8437)
!8440 = !DILocation(line: 3192, column: 17, scope: !8437)
!8441 = !DILocation(line: 3192, column: 10, scope: !8437)
!8442 = !DILocation(line: 3192, column: 43, scope: !8443)
!8443 = distinct !DILexicalBlock(scope: !8437, file: !3, line: 3192, column: 5)
!8444 = !DILocation(line: 3192, column: 5, scope: !8437)
!8445 = !DILocalVariable(name: "i", scope: !8446, file: !3, line: 3193, type: !98)
!8446 = distinct !DILexicalBlock(scope: !8443, file: !3, line: 3192, column: 74)
!8447 = !DILocation(line: 3193, column: 10, scope: !8446)
!8448 = !DILocalVariable(name: "points_deform", scope: !8446, file: !3, line: 3195, type: !372)
!8449 = !DILocation(line: 3195, column: 12, scope: !8446)
!8450 = !DILocation(line: 3195, column: 28, scope: !8446)
!8451 = !DILocation(line: 3195, column: 36, scope: !8446)
!8452 = !DILocation(line: 3196, column: 6, scope: !8446)
!8453 = !DILocation(line: 3196, column: 14, scope: !8446)
!8454 = !DILocation(line: 3196, column: 28, scope: !8446)
!8455 = !DILocation(line: 3198, column: 18, scope: !8446)
!8456 = !DILocation(line: 3198, column: 45, scope: !8446)
!8457 = !DILocation(line: 3198, column: 6, scope: !8446)
!8458 = !DILocation(line: 3199, column: 18, scope: !8446)
!8459 = !DILocation(line: 3199, column: 47, scope: !8446)
!8460 = !DILocation(line: 3199, column: 55, scope: !8446)
!8461 = !DILocation(line: 3199, column: 66, scope: !8446)
!8462 = !DILocation(line: 3199, column: 74, scope: !8446)
!8463 = !DILocation(line: 3199, column: 6, scope: !8446)
!8464 = !DILocation(line: 3201, column: 30, scope: !8446)
!8465 = !DILocation(line: 3201, column: 6, scope: !8446)
!8466 = !DILocation(line: 3201, column: 14, scope: !8446)
!8467 = !DILocation(line: 3201, column: 28, scope: !8446)
!8468 = !DILocation(line: 3203, column: 13, scope: !8469)
!8469 = distinct !DILexicalBlock(scope: !8446, file: !3, line: 3203, column: 6)
!8470 = !DILocation(line: 3203, column: 11, scope: !8469)
!8471 = !DILocation(line: 3203, column: 18, scope: !8472)
!8472 = distinct !DILexicalBlock(scope: !8469, file: !3, line: 3203, column: 6)
!8473 = !DILocation(line: 3203, column: 22, scope: !8472)
!8474 = !DILocation(line: 3203, column: 30, scope: !8472)
!8475 = !DILocation(line: 3203, column: 20, scope: !8472)
!8476 = !DILocation(line: 3203, column: 6, scope: !8469)
!8477 = !DILocalVariable(name: "point", scope: !8478, file: !3, line: 3204, type: !8356)
!8478 = distinct !DILexicalBlock(scope: !8472, file: !3, line: 3203, column: 46)
!8479 = !DILocation(line: 3204, column: 24, scope: !8478)
!8480 = !DILocation(line: 3204, column: 33, scope: !8478)
!8481 = !DILocation(line: 3204, column: 41, scope: !8478)
!8482 = !DILocation(line: 3204, column: 48, scope: !8478)
!8483 = !DILocation(line: 3206, column: 11, scope: !8484)
!8484 = distinct !DILexicalBlock(scope: !8478, file: !3, line: 3206, column: 11)
!8485 = !DILocation(line: 3206, column: 18, scope: !8484)
!8486 = !DILocation(line: 3206, column: 11, scope: !8478)
!8487 = !DILocation(line: 3207, column: 20, scope: !8484)
!8488 = !DILocation(line: 3207, column: 51, scope: !8484)
!8489 = !DILocation(line: 3207, column: 58, scope: !8484)
!8490 = !DILocation(line: 3207, column: 66, scope: !8484)
!8491 = !DILocation(line: 3207, column: 73, scope: !8484)
!8492 = !DILocation(line: 3207, column: 8, scope: !8484)
!8493 = !DILocation(line: 3208, column: 6, scope: !8478)
!8494 = !DILocation(line: 3203, column: 42, scope: !8472)
!8495 = !DILocation(line: 3203, column: 6, scope: !8472)
!8496 = distinct !{!8496, !8476, !8497}
!8497 = !DILocation(line: 3208, column: 6, scope: !8469)
!8498 = !DILocation(line: 3209, column: 5, scope: !8446)
!8499 = !DILocation(line: 3192, column: 60, scope: !8443)
!8500 = !DILocation(line: 3192, column: 68, scope: !8443)
!8501 = !DILocation(line: 3192, column: 58, scope: !8443)
!8502 = !DILocation(line: 3192, column: 5, scope: !8443)
!8503 = distinct !{!8503, !8444, !8504}
!8504 = !DILocation(line: 3209, column: 5, scope: !8437)
!8505 = !DILocation(line: 3211, column: 26, scope: !8506)
!8506 = distinct !DILexicalBlock(scope: !8415, file: !3, line: 3211, column: 5)
!8507 = !DILocation(line: 3211, column: 35, scope: !8506)
!8508 = !DILocation(line: 3211, column: 50, scope: !8506)
!8509 = !DILocation(line: 3211, column: 24, scope: !8506)
!8510 = !DILocation(line: 3211, column: 10, scope: !8506)
!8511 = !DILocation(line: 3211, column: 57, scope: !8512)
!8512 = distinct !DILexicalBlock(scope: !8506, file: !3, line: 3211, column: 5)
!8513 = !DILocation(line: 3211, column: 5, scope: !8506)
!8514 = !DILocation(line: 3212, column: 18, scope: !8515)
!8515 = distinct !DILexicalBlock(scope: !8512, file: !3, line: 3211, column: 109)
!8516 = !DILocation(line: 3212, column: 49, scope: !8515)
!8517 = !DILocation(line: 3212, column: 6, scope: !8515)
!8518 = !DILocation(line: 3213, column: 16, scope: !8515)
!8519 = !DILocation(line: 3213, column: 26, scope: !8515)
!8520 = !DILocation(line: 3213, column: 41, scope: !8515)
!8521 = !DILocation(line: 3213, column: 50, scope: !8515)
!8522 = !DILocation(line: 3213, column: 66, scope: !8515)
!8523 = !DILocation(line: 3213, column: 97, scope: !8515)
!8524 = !DILocation(line: 3213, column: 112, scope: !8515)
!8525 = !DILocation(line: 3213, column: 6, scope: !8515)
!8526 = !DILocation(line: 3214, column: 5, scope: !8515)
!8527 = !DILocation(line: 3211, column: 88, scope: !8512)
!8528 = !DILocation(line: 3211, column: 103, scope: !8512)
!8529 = !DILocation(line: 3211, column: 86, scope: !8512)
!8530 = !DILocation(line: 3211, column: 5, scope: !8512)
!8531 = distinct !{!8531, !8513, !8532}
!8532 = !DILocation(line: 3214, column: 5, scope: !8506)
!8533 = !DILocation(line: 3215, column: 4, scope: !8415)
!8534 = !DILocation(line: 3186, column: 62, scope: !8412)
!8535 = !DILocation(line: 3186, column: 71, scope: !8412)
!8536 = !DILocation(line: 3186, column: 60, scope: !8412)
!8537 = !DILocation(line: 3186, column: 4, scope: !8412)
!8538 = distinct !{!8538, !8413, !8539}
!8539 = !DILocation(line: 3215, column: 4, scope: !8406)
!8540 = !DILocation(line: 3216, column: 3, scope: !8334)
!8541 = !DILocation(line: 3218, column: 10, scope: !8325)
!8542 = !DILocation(line: 3218, column: 16, scope: !8325)
!8543 = !DILocation(line: 3218, column: 19, scope: !8325)
!8544 = !DILocation(line: 3218, column: 8, scope: !8325)
!8545 = distinct !{!8545, !8321, !8546}
!8546 = !DILocation(line: 3219, column: 2, scope: !8309)
!8547 = !DILocation(line: 3222, column: 10, scope: !8309)
!8548 = !DILocation(line: 3222, column: 2, scope: !8309)
!8549 = !DILocation(line: 3223, column: 1, scope: !8309)
!8550 = distinct !DISubprogram(name: "write_scenes", scope: !3, file: !3, line: 2297, type: !7324, scopeLine: 2298, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !5641)
!8551 = !DILocalVariable(name: "wd", arg: 1, scope: !8550, file: !3, line: 2297, type: !5820)
!8552 = !DILocation(line: 2297, column: 37, scope: !8550)
!8553 = !DILocalVariable(name: "scebase", arg: 2, scope: !8550, file: !3, line: 2297, type: !565)
!8554 = !DILocation(line: 2297, column: 51, scope: !8550)
!8555 = !DILocalVariable(name: "sce", scope: !8550, file: !3, line: 2299, type: !6850)
!8556 = !DILocation(line: 2299, column: 9, scope: !8550)
!8557 = !DILocalVariable(name: "base", scope: !8550, file: !3, line: 2300, type: !8558)
!8558 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8559, size: 64)
!8559 = !DIDerivedType(tag: DW_TAG_typedef, name: "Base", file: !829, line: 75, baseType: !1938)
!8560 = !DILocation(line: 2300, column: 8, scope: !8550)
!8561 = !DILocalVariable(name: "ed", scope: !8550, file: !3, line: 2301, type: !8562)
!8562 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8563, size: 64)
!8563 = !DIDerivedType(tag: DW_TAG_typedef, name: "Editing", file: !97, line: 213, baseType: !1962)
!8564 = !DILocation(line: 2301, column: 11, scope: !8550)
!8565 = !DILocalVariable(name: "seq", scope: !8550, file: !3, line: 2302, type: !1968)
!8566 = !DILocation(line: 2302, column: 12, scope: !8550)
!8567 = !DILocalVariable(name: "ms", scope: !8550, file: !3, line: 2303, type: !8568)
!8568 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8569, size: 64)
!8569 = !DIDerivedType(tag: DW_TAG_typedef, name: "MetaStack", file: !97, line: 198, baseType: !8570)
!8570 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MetaStack", file: !97, line: 192, size: 320, elements: !8571)
!8571 = !{!8572, !8574, !8575, !8576, !8577}
!8572 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !8570, file: !97, line: 193, baseType: !8573, size: 64)
!8573 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8570, size: 64)
!8574 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !8570, file: !97, line: 193, baseType: !8573, size: 64, offset: 64)
!8575 = !DIDerivedType(tag: DW_TAG_member, name: "oldbasep", scope: !8570, file: !97, line: 194, baseType: !565, size: 64, offset: 128)
!8576 = !DIDerivedType(tag: DW_TAG_member, name: "parseq", scope: !8570, file: !97, line: 195, baseType: !1968, size: 64, offset: 192)
!8577 = !DIDerivedType(tag: DW_TAG_member, name: "disp_range", scope: !8570, file: !97, line: 197, baseType: !2071, size: 64, offset: 256)
!8578 = !DILocation(line: 2303, column: 13, scope: !8550)
!8579 = !DILocalVariable(name: "strip", scope: !8550, file: !3, line: 2304, type: !1998)
!8580 = !DILocation(line: 2304, column: 9, scope: !8550)
!8581 = !DILocalVariable(name: "marker", scope: !8550, file: !3, line: 2305, type: !8582)
!8582 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8583, size: 64)
!8583 = !DIDerivedType(tag: DW_TAG_typedef, name: "TimeMarker", file: !829, line: 805, baseType: !8584)
!8584 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "TimeMarker", file: !829, line: 799, size: 768, elements: !8585)
!8585 = !{!8586, !8588, !8589, !8590, !8591, !8592}
!8586 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !8584, file: !829, line: 800, baseType: !8587, size: 64)
!8587 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8584, size: 64)
!8588 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !8584, file: !829, line: 800, baseType: !8587, size: 64, offset: 64)
!8589 = !DIDerivedType(tag: DW_TAG_member, name: "frame", scope: !8584, file: !829, line: 801, baseType: !98, size: 32, offset: 128)
!8590 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !8584, file: !829, line: 802, baseType: !692, size: 512, offset: 160)
!8591 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !8584, file: !829, line: 803, baseType: !7, size: 32, offset: 672)
!8592 = !DIDerivedType(tag: DW_TAG_member, name: "camera", scope: !8584, file: !829, line: 804, baseType: !423, size: 64, offset: 704)
!8593 = !DILocation(line: 2305, column: 14, scope: !8550)
!8594 = !DILocalVariable(name: "ts", scope: !8550, file: !3, line: 2306, type: !8595)
!8595 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8596, size: 64)
!8596 = !DIDerivedType(tag: DW_TAG_typedef, name: "TransformOrientation", file: !829, line: 954, baseType: !8597)
!8597 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "TransformOrientation", file: !829, line: 949, size: 960, elements: !8598)
!8598 = !{!8599, !8601, !8602, !8603, !8604}
!8599 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !8597, file: !829, line: 950, baseType: !8600, size: 64)
!8600 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8597, size: 64)
!8601 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !8597, file: !829, line: 950, baseType: !8600, size: 64, offset: 64)
!8602 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !8597, file: !829, line: 951, baseType: !692, size: 512, offset: 128)
!8603 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !8597, file: !829, line: 952, baseType: !1755, size: 288, offset: 640)
!8604 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !8597, file: !829, line: 953, baseType: !98, size: 32, offset: 928)
!8605 = !DILocation(line: 2306, column: 24, scope: !8550)
!8606 = !DILocalVariable(name: "srl", scope: !8550, file: !3, line: 2307, type: !8607)
!8607 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8608, size: 64)
!8608 = !DIDerivedType(tag: DW_TAG_typedef, name: "SceneRenderLayer", file: !829, line: 194, baseType: !8609)
!8609 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SceneRenderLayer", file: !829, line: 174, size: 1472, elements: !8610)
!8610 = !{!8611, !8613, !8614, !8615, !8616, !8617, !8618, !8619, !8620, !8621, !8622, !8623, !8624, !8625}
!8611 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !8609, file: !829, line: 175, baseType: !8612, size: 64)
!8612 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8609, size: 64)
!8613 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !8609, file: !829, line: 175, baseType: !8612, size: 64, offset: 64)
!8614 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !8609, file: !829, line: 177, baseType: !692, size: 512, offset: 128)
!8615 = !DIDerivedType(tag: DW_TAG_member, name: "mat_override", scope: !8609, file: !829, line: 179, baseType: !3784, size: 64, offset: 640)
!8616 = !DIDerivedType(tag: DW_TAG_member, name: "light_override", scope: !8609, file: !829, line: 180, baseType: !3061, size: 64, offset: 704)
!8617 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !8609, file: !829, line: 182, baseType: !7, size: 32, offset: 768)
!8618 = !DIDerivedType(tag: DW_TAG_member, name: "lay_zmask", scope: !8609, file: !829, line: 183, baseType: !7, size: 32, offset: 800)
!8619 = !DIDerivedType(tag: DW_TAG_member, name: "lay_exclude", scope: !8609, file: !829, line: 184, baseType: !7, size: 32, offset: 832)
!8620 = !DIDerivedType(tag: DW_TAG_member, name: "layflag", scope: !8609, file: !829, line: 185, baseType: !98, size: 32, offset: 864)
!8621 = !DIDerivedType(tag: DW_TAG_member, name: "passflag", scope: !8609, file: !829, line: 187, baseType: !98, size: 32, offset: 896)
!8622 = !DIDerivedType(tag: DW_TAG_member, name: "pass_xor", scope: !8609, file: !829, line: 188, baseType: !98, size: 32, offset: 928)
!8623 = !DIDerivedType(tag: DW_TAG_member, name: "samples", scope: !8609, file: !829, line: 190, baseType: !98, size: 32, offset: 960)
!8624 = !DIDerivedType(tag: DW_TAG_member, name: "pass_alpha_threshold", scope: !8609, file: !829, line: 191, baseType: !396, size: 32, offset: 992)
!8625 = !DIDerivedType(tag: DW_TAG_member, name: "freestyleConfig", scope: !8609, file: !829, line: 193, baseType: !8626, size: 448, offset: 1024)
!8626 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FreestyleConfig", file: !8627, line: 127, size: 448, elements: !8628)
!8627 = !DIFile(filename: "blender/source/blender/makesdna/DNA_freestyle_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!8628 = !{!8629, !8630, !8631, !8632, !8633, !8634, !8635, !8636}
!8629 = !DIDerivedType(tag: DW_TAG_member, name: "modules", scope: !8626, file: !8627, line: 128, baseType: !388, size: 128)
!8630 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !8626, file: !8627, line: 130, baseType: !98, size: 32, offset: 128)
!8631 = !DIDerivedType(tag: DW_TAG_member, name: "raycasting_algorithm", scope: !8626, file: !8627, line: 131, baseType: !98, size: 32, offset: 160)
!8632 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !8626, file: !8627, line: 132, baseType: !98, size: 32, offset: 192)
!8633 = !DIDerivedType(tag: DW_TAG_member, name: "sphere_radius", scope: !8626, file: !8627, line: 133, baseType: !396, size: 32, offset: 224)
!8634 = !DIDerivedType(tag: DW_TAG_member, name: "dkr_epsilon", scope: !8626, file: !8627, line: 134, baseType: !396, size: 32, offset: 256)
!8635 = !DIDerivedType(tag: DW_TAG_member, name: "crease_angle", scope: !8626, file: !8627, line: 135, baseType: !396, size: 32, offset: 288)
!8636 = !DIDerivedType(tag: DW_TAG_member, name: "linesets", scope: !8626, file: !8627, line: 137, baseType: !388, size: 128, offset: 320)
!8637 = !DILocation(line: 2307, column: 20, scope: !8550)
!8638 = !DILocalVariable(name: "tos", scope: !8550, file: !3, line: 2308, type: !8639)
!8639 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8640, size: 64)
!8640 = !DIDerivedType(tag: DW_TAG_typedef, name: "ToolSettings", file: !829, line: 1180, baseType: !2331)
!8641 = !DILocation(line: 2308, column: 16, scope: !8550)
!8642 = !DILocalVariable(name: "fmc", scope: !8550, file: !3, line: 2309, type: !8643)
!8643 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8644, size: 64)
!8644 = !DIDerivedType(tag: DW_TAG_typedef, name: "FreestyleModuleConfig", file: !8627, line: 125, baseType: !8645)
!8645 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FreestyleModuleConfig", file: !8627, line: 119, size: 256, elements: !8646)
!8646 = !{!8647, !8649, !8650, !8651, !8652}
!8647 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !8645, file: !8627, line: 120, baseType: !8648, size: 64)
!8648 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8645, size: 64)
!8649 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !8645, file: !8627, line: 120, baseType: !8648, size: 64, offset: 64)
!8650 = !DIDerivedType(tag: DW_TAG_member, name: "script", scope: !8645, file: !8627, line: 122, baseType: !2877, size: 64, offset: 128)
!8651 = !DIDerivedType(tag: DW_TAG_member, name: "is_displayed", scope: !8645, file: !8627, line: 123, baseType: !399, size: 16, offset: 192)
!8652 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !8645, file: !8627, line: 124, baseType: !811, size: 48, offset: 208)
!8653 = !DILocation(line: 2309, column: 25, scope: !8550)
!8654 = !DILocalVariable(name: "fls", scope: !8550, file: !3, line: 2310, type: !8655)
!8655 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8656, size: 64)
!8656 = !DIDerivedType(tag: DW_TAG_typedef, name: "FreestyleLineSet", file: !8627, line: 117, baseType: !8657)
!8657 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FreestyleLineSet", file: !8627, line: 102, size: 1024, elements: !8658)
!8658 = !{!8659, !8661, !8662, !8663, !8664, !8665, !8666, !8667, !8668, !8669, !8670, !8671, !8672, !8673}
!8659 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !8657, file: !8627, line: 103, baseType: !8660, size: 64)
!8660 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8657, size: 64)
!8661 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !8657, file: !8627, line: 103, baseType: !8660, size: 64, offset: 64)
!8662 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !8657, file: !8627, line: 105, baseType: !692, size: 512, offset: 128)
!8663 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !8657, file: !8627, line: 106, baseType: !98, size: 32, offset: 640)
!8664 = !DIDerivedType(tag: DW_TAG_member, name: "selection", scope: !8657, file: !8627, line: 108, baseType: !98, size: 32, offset: 672)
!8665 = !DIDerivedType(tag: DW_TAG_member, name: "qi", scope: !8657, file: !8627, line: 109, baseType: !399, size: 16, offset: 704)
!8666 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !8657, file: !8627, line: 110, baseType: !399, size: 16, offset: 720)
!8667 = !DIDerivedType(tag: DW_TAG_member, name: "qi_start", scope: !8657, file: !8627, line: 111, baseType: !98, size: 32, offset: 736)
!8668 = !DIDerivedType(tag: DW_TAG_member, name: "qi_end", scope: !8657, file: !8627, line: 111, baseType: !98, size: 32, offset: 768)
!8669 = !DIDerivedType(tag: DW_TAG_member, name: "edge_types", scope: !8657, file: !8627, line: 112, baseType: !98, size: 32, offset: 800)
!8670 = !DIDerivedType(tag: DW_TAG_member, name: "exclude_edge_types", scope: !8657, file: !8627, line: 112, baseType: !98, size: 32, offset: 832)
!8671 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !8657, file: !8627, line: 113, baseType: !98, size: 32, offset: 864)
!8672 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !8657, file: !8627, line: 114, baseType: !3061, size: 64, offset: 896)
!8673 = !DIDerivedType(tag: DW_TAG_member, name: "linestyle", scope: !8657, file: !8627, line: 116, baseType: !8674, size: 64, offset: 960)
!8674 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6945, size: 64)
!8675 = !DILocation(line: 2310, column: 20, scope: !8550)
!8676 = !DILocation(line: 2312, column: 7, scope: !8550)
!8677 = !DILocation(line: 2312, column: 16, scope: !8550)
!8678 = !DILocation(line: 2312, column: 5, scope: !8550)
!8679 = !DILocation(line: 2313, column: 2, scope: !8550)
!8680 = !DILocation(line: 2313, column: 9, scope: !8550)
!8681 = !DILocation(line: 2315, column: 15, scope: !8682)
!8682 = distinct !DILexicalBlock(scope: !8550, file: !3, line: 2313, column: 14)
!8683 = !DILocation(line: 2315, column: 39, scope: !8682)
!8684 = !DILocation(line: 2315, column: 3, scope: !8682)
!8685 = !DILocation(line: 2316, column: 7, scope: !8686)
!8686 = distinct !DILexicalBlock(scope: !8682, file: !3, line: 2316, column: 7)
!8687 = !DILocation(line: 2316, column: 12, scope: !8686)
!8688 = !DILocation(line: 2316, column: 15, scope: !8686)
!8689 = !DILocation(line: 2316, column: 7, scope: !8682)
!8690 = !DILocation(line: 2316, column: 45, scope: !8686)
!8691 = !DILocation(line: 2316, column: 50, scope: !8686)
!8692 = !DILocation(line: 2316, column: 53, scope: !8686)
!8693 = !DILocation(line: 2316, column: 65, scope: !8686)
!8694 = !DILocation(line: 2316, column: 27, scope: !8686)
!8695 = !DILocation(line: 2318, column: 7, scope: !8696)
!8696 = distinct !DILexicalBlock(scope: !8682, file: !3, line: 2318, column: 7)
!8697 = !DILocation(line: 2318, column: 12, scope: !8696)
!8698 = !DILocation(line: 2318, column: 7, scope: !8682)
!8699 = !DILocation(line: 2318, column: 32, scope: !8696)
!8700 = !DILocation(line: 2318, column: 36, scope: !8696)
!8701 = !DILocation(line: 2318, column: 41, scope: !8696)
!8702 = !DILocation(line: 2318, column: 17, scope: !8696)
!8703 = !DILocation(line: 2319, column: 20, scope: !8682)
!8704 = !DILocation(line: 2319, column: 25, scope: !8682)
!8705 = !DILocation(line: 2319, column: 30, scope: !8682)
!8706 = !DILocation(line: 2319, column: 3, scope: !8682)
!8707 = !DILocation(line: 2322, column: 9, scope: !8682)
!8708 = !DILocation(line: 2322, column: 14, scope: !8682)
!8709 = !DILocation(line: 2322, column: 19, scope: !8682)
!8710 = !DILocation(line: 2322, column: 7, scope: !8682)
!8711 = !DILocation(line: 2323, column: 3, scope: !8682)
!8712 = !DILocation(line: 2323, column: 10, scope: !8682)
!8713 = !DILocation(line: 2324, column: 16, scope: !8714)
!8714 = distinct !DILexicalBlock(scope: !8682, file: !3, line: 2323, column: 16)
!8715 = !DILocation(line: 2324, column: 37, scope: !8714)
!8716 = !DILocation(line: 2324, column: 4, scope: !8714)
!8717 = !DILocation(line: 2325, column: 10, scope: !8714)
!8718 = !DILocation(line: 2325, column: 16, scope: !8714)
!8719 = !DILocation(line: 2325, column: 8, scope: !8714)
!8720 = distinct !{!8720, !8711, !8721}
!8721 = !DILocation(line: 2326, column: 3, scope: !8682)
!8722 = !DILocation(line: 2328, column: 9, scope: !8682)
!8723 = !DILocation(line: 2328, column: 14, scope: !8682)
!8724 = !DILocation(line: 2328, column: 7, scope: !8682)
!8725 = !DILocation(line: 2329, column: 15, scope: !8682)
!8726 = !DILocation(line: 2329, column: 44, scope: !8682)
!8727 = !DILocation(line: 2329, column: 3, scope: !8682)
!8728 = !DILocation(line: 2330, column: 7, scope: !8729)
!8729 = distinct !DILexicalBlock(scope: !8682, file: !3, line: 2330, column: 7)
!8730 = !DILocation(line: 2330, column: 12, scope: !8729)
!8731 = !DILocation(line: 2330, column: 7, scope: !8682)
!8732 = !DILocation(line: 2331, column: 16, scope: !8733)
!8733 = distinct !DILexicalBlock(scope: !8729, file: !3, line: 2330, column: 20)
!8734 = !DILocation(line: 2331, column: 39, scope: !8733)
!8735 = !DILocation(line: 2331, column: 44, scope: !8733)
!8736 = !DILocation(line: 2331, column: 4, scope: !8733)
!8737 = !DILocation(line: 2332, column: 3, scope: !8733)
!8738 = !DILocation(line: 2333, column: 7, scope: !8739)
!8739 = distinct !DILexicalBlock(scope: !8682, file: !3, line: 2333, column: 7)
!8740 = !DILocation(line: 2333, column: 12, scope: !8739)
!8741 = !DILocation(line: 2333, column: 7, scope: !8682)
!8742 = !DILocation(line: 2334, column: 16, scope: !8743)
!8743 = distinct !DILexicalBlock(scope: !8739, file: !3, line: 2333, column: 20)
!8744 = !DILocation(line: 2334, column: 39, scope: !8743)
!8745 = !DILocation(line: 2334, column: 44, scope: !8743)
!8746 = !DILocation(line: 2334, column: 4, scope: !8743)
!8747 = !DILocation(line: 2335, column: 3, scope: !8743)
!8748 = !DILocation(line: 2336, column: 7, scope: !8749)
!8749 = distinct !DILexicalBlock(scope: !8682, file: !3, line: 2336, column: 7)
!8750 = !DILocation(line: 2336, column: 12, scope: !8749)
!8751 = !DILocation(line: 2336, column: 7, scope: !8682)
!8752 = !DILocation(line: 2337, column: 16, scope: !8753)
!8753 = distinct !DILexicalBlock(scope: !8749, file: !3, line: 2336, column: 20)
!8754 = !DILocation(line: 2337, column: 39, scope: !8753)
!8755 = !DILocation(line: 2337, column: 44, scope: !8753)
!8756 = !DILocation(line: 2337, column: 4, scope: !8753)
!8757 = !DILocation(line: 2338, column: 3, scope: !8753)
!8758 = !DILocation(line: 2339, column: 7, scope: !8759)
!8759 = distinct !DILexicalBlock(scope: !8682, file: !3, line: 2339, column: 7)
!8760 = !DILocation(line: 2339, column: 12, scope: !8759)
!8761 = !DILocation(line: 2339, column: 7, scope: !8682)
!8762 = !DILocation(line: 2340, column: 16, scope: !8763)
!8763 = distinct !DILexicalBlock(scope: !8759, file: !3, line: 2339, column: 22)
!8764 = !DILocation(line: 2340, column: 41, scope: !8763)
!8765 = !DILocation(line: 2340, column: 46, scope: !8763)
!8766 = !DILocation(line: 2340, column: 4, scope: !8763)
!8767 = !DILocation(line: 2341, column: 3, scope: !8763)
!8768 = !DILocation(line: 2345, column: 7, scope: !8682)
!8769 = !DILocation(line: 2345, column: 12, scope: !8682)
!8770 = !DILocation(line: 2345, column: 5, scope: !8682)
!8771 = !DILocation(line: 2346, column: 7, scope: !8772)
!8772 = distinct !DILexicalBlock(scope: !8682, file: !3, line: 2346, column: 7)
!8773 = !DILocation(line: 2346, column: 7, scope: !8682)
!8774 = !DILocation(line: 2347, column: 16, scope: !8775)
!8775 = distinct !DILexicalBlock(scope: !8772, file: !3, line: 2346, column: 11)
!8776 = !DILocation(line: 2347, column: 40, scope: !8775)
!8777 = !DILocation(line: 2347, column: 4, scope: !8775)
!8778 = !DILocalVariable(name: "iter_macro", scope: !8779, file: !3, line: 2351, type: !8780)
!8779 = distinct !DILexicalBlock(scope: !8775, file: !3, line: 2351, column: 4)
!8780 = !DIDerivedType(tag: DW_TAG_typedef, name: "SeqIterator", file: !8781, line: 63, baseType: !8782)
!8781 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_sequencer.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!8782 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SeqIterator", file: !8781, line: 57, size: 256, elements: !8783)
!8783 = !{!8784, !8786, !8787, !8788, !8789}
!8784 = !DIDerivedType(tag: DW_TAG_member, name: "array", scope: !8782, file: !8781, line: 58, baseType: !8785, size: 64)
!8785 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1973, size: 64)
!8786 = !DIDerivedType(tag: DW_TAG_member, name: "tot", scope: !8782, file: !8781, line: 59, baseType: !98, size: 32, offset: 64)
!8787 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !8782, file: !8781, line: 59, baseType: !98, size: 32, offset: 96)
!8788 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !8782, file: !8781, line: 61, baseType: !1973, size: 64, offset: 128)
!8789 = !DIDerivedType(tag: DW_TAG_member, name: "valid", scope: !8782, file: !8781, line: 62, baseType: !98, size: 32, offset: 192)
!8790 = !DILocation(line: 2351, column: 4, scope: !8779)
!8791 = !DILocation(line: 2351, column: 4, scope: !8792)
!8792 = distinct !DILexicalBlock(scope: !8779, file: !3, line: 2351, column: 4)
!8793 = !DILocation(line: 2351, column: 4, scope: !8794)
!8794 = distinct !DILexicalBlock(scope: !8792, file: !3, line: 2351, column: 4)
!8795 = !DILocation(line: 2351, column: 4, scope: !8796)
!8796 = distinct !DILexicalBlock(scope: !8794, file: !3, line: 2351, column: 4)
!8797 = !DILocation(line: 2353, column: 9, scope: !8798)
!8798 = distinct !DILexicalBlock(scope: !8799, file: !3, line: 2353, column: 9)
!8799 = distinct !DILexicalBlock(scope: !8796, file: !3, line: 2352, column: 4)
!8800 = !DILocation(line: 2353, column: 14, scope: !8798)
!8801 = !DILocation(line: 2353, column: 9, scope: !8799)
!8802 = !DILocation(line: 2353, column: 21, scope: !8798)
!8803 = !DILocation(line: 2353, column: 26, scope: !8798)
!8804 = !DILocation(line: 2353, column: 33, scope: !8798)
!8805 = !DILocation(line: 2353, column: 38, scope: !8798)
!8806 = !DILocation(line: 2354, column: 17, scope: !8799)
!8807 = !DILocation(line: 2354, column: 42, scope: !8799)
!8808 = !DILocation(line: 2354, column: 5, scope: !8799)
!8809 = !DILocation(line: 2356, column: 4, scope: !8796)
!8810 = distinct !{!8810, !8791, !8811}
!8811 = !DILocation(line: 2356, column: 4, scope: !8792)
!8812 = !DILocation(line: 2356, column: 4, scope: !8779)
!8813 = !DILocalVariable(name: "iter_macro", scope: !8814, file: !3, line: 2358, type: !8780)
!8814 = distinct !DILexicalBlock(scope: !8775, file: !3, line: 2358, column: 4)
!8815 = !DILocation(line: 2358, column: 4, scope: !8814)
!8816 = !DILocation(line: 2358, column: 4, scope: !8817)
!8817 = distinct !DILexicalBlock(scope: !8814, file: !3, line: 2358, column: 4)
!8818 = !DILocation(line: 2358, column: 4, scope: !8819)
!8819 = distinct !DILexicalBlock(scope: !8817, file: !3, line: 2358, column: 4)
!8820 = !DILocation(line: 2358, column: 4, scope: !8821)
!8821 = distinct !DILexicalBlock(scope: !8819, file: !3, line: 2358, column: 4)
!8822 = !DILocation(line: 2360, column: 9, scope: !8823)
!8823 = distinct !DILexicalBlock(scope: !8824, file: !3, line: 2360, column: 9)
!8824 = distinct !DILexicalBlock(scope: !8821, file: !3, line: 2359, column: 4)
!8825 = !DILocation(line: 2360, column: 14, scope: !8823)
!8826 = !DILocation(line: 2360, column: 20, scope: !8823)
!8827 = !DILocation(line: 2360, column: 23, scope: !8823)
!8828 = !DILocation(line: 2360, column: 28, scope: !8823)
!8829 = !DILocation(line: 2360, column: 35, scope: !8823)
!8830 = !DILocation(line: 2360, column: 39, scope: !8823)
!8831 = !DILocation(line: 2360, column: 9, scope: !8824)
!8832 = !DILocation(line: 2363, column: 10, scope: !8833)
!8833 = distinct !DILexicalBlock(scope: !8834, file: !3, line: 2363, column: 10)
!8834 = distinct !DILexicalBlock(scope: !8823, file: !3, line: 2360, column: 44)
!8835 = !DILocation(line: 2363, column: 15, scope: !8833)
!8836 = !DILocation(line: 2363, column: 10, scope: !8834)
!8837 = !DILocation(line: 2364, column: 15, scope: !8838)
!8838 = distinct !DILexicalBlock(scope: !8833, file: !3, line: 2363, column: 27)
!8839 = !DILocation(line: 2364, column: 20, scope: !8838)
!8840 = !DILocation(line: 2364, column: 7, scope: !8838)
!8841 = !DILocation(line: 2366, column: 20, scope: !8842)
!8842 = distinct !DILexicalBlock(scope: !8838, file: !3, line: 2364, column: 26)
!8843 = !DILocation(line: 2366, column: 51, scope: !8842)
!8844 = !DILocation(line: 2366, column: 56, scope: !8842)
!8845 = !DILocation(line: 2366, column: 8, scope: !8842)
!8846 = !DILocation(line: 2367, column: 8, scope: !8842)
!8847 = !DILocation(line: 2369, column: 20, scope: !8842)
!8848 = !DILocation(line: 2369, column: 53, scope: !8842)
!8849 = !DILocation(line: 2369, column: 58, scope: !8842)
!8850 = !DILocation(line: 2369, column: 8, scope: !8842)
!8851 = !DILocation(line: 2370, column: 8, scope: !8842)
!8852 = !DILocation(line: 2372, column: 20, scope: !8842)
!8853 = !DILocation(line: 2372, column: 45, scope: !8842)
!8854 = !DILocation(line: 2372, column: 50, scope: !8842)
!8855 = !DILocation(line: 2372, column: 8, scope: !8842)
!8856 = !DILocation(line: 2373, column: 8, scope: !8842)
!8857 = !DILocation(line: 2375, column: 20, scope: !8842)
!8858 = !DILocation(line: 2375, column: 45, scope: !8842)
!8859 = !DILocation(line: 2375, column: 50, scope: !8842)
!8860 = !DILocation(line: 2375, column: 8, scope: !8842)
!8861 = !DILocation(line: 2376, column: 8, scope: !8842)
!8862 = !DILocation(line: 2378, column: 20, scope: !8842)
!8863 = !DILocation(line: 2378, column: 50, scope: !8842)
!8864 = !DILocation(line: 2378, column: 55, scope: !8842)
!8865 = !DILocation(line: 2378, column: 8, scope: !8842)
!8866 = !DILocation(line: 2379, column: 8, scope: !8842)
!8867 = !DILocation(line: 2381, column: 20, scope: !8842)
!8868 = !DILocation(line: 2381, column: 53, scope: !8842)
!8869 = !DILocation(line: 2381, column: 58, scope: !8842)
!8870 = !DILocation(line: 2381, column: 8, scope: !8842)
!8871 = !DILocation(line: 2382, column: 8, scope: !8842)
!8872 = !DILocation(line: 2384, column: 6, scope: !8838)
!8873 = !DILocation(line: 2386, column: 13, scope: !8834)
!8874 = !DILocation(line: 2386, column: 18, scope: !8834)
!8875 = !DILocation(line: 2386, column: 11, scope: !8834)
!8876 = !DILocation(line: 2387, column: 18, scope: !8834)
!8877 = !DILocation(line: 2387, column: 40, scope: !8834)
!8878 = !DILocation(line: 2387, column: 6, scope: !8834)
!8879 = !DILocation(line: 2388, column: 10, scope: !8880)
!8880 = distinct !DILexicalBlock(scope: !8834, file: !3, line: 2388, column: 10)
!8881 = !DILocation(line: 2388, column: 15, scope: !8880)
!8882 = !DILocation(line: 2388, column: 20, scope: !8880)
!8883 = !DILocation(line: 2388, column: 35, scope: !8880)
!8884 = !DILocation(line: 2388, column: 38, scope: !8880)
!8885 = !DILocation(line: 2388, column: 45, scope: !8880)
!8886 = !DILocation(line: 2388, column: 10, scope: !8834)
!8887 = !DILocation(line: 2389, column: 19, scope: !8888)
!8888 = distinct !DILexicalBlock(scope: !8880, file: !3, line: 2388, column: 51)
!8889 = !DILocation(line: 2389, column: 45, scope: !8888)
!8890 = !DILocation(line: 2389, column: 52, scope: !8888)
!8891 = !DILocation(line: 2389, column: 7, scope: !8888)
!8892 = !DILocation(line: 2390, column: 6, scope: !8888)
!8893 = !DILocation(line: 2391, column: 10, scope: !8894)
!8894 = distinct !DILexicalBlock(scope: !8834, file: !3, line: 2391, column: 10)
!8895 = !DILocation(line: 2391, column: 15, scope: !8894)
!8896 = !DILocation(line: 2391, column: 20, scope: !8894)
!8897 = !DILocation(line: 2391, column: 40, scope: !8894)
!8898 = !DILocation(line: 2391, column: 43, scope: !8894)
!8899 = !DILocation(line: 2391, column: 50, scope: !8894)
!8900 = !DILocation(line: 2391, column: 10, scope: !8834)
!8901 = !DILocation(line: 2392, column: 19, scope: !8902)
!8902 = distinct !DILexicalBlock(scope: !8894, file: !3, line: 2391, column: 61)
!8903 = !DILocation(line: 2392, column: 50, scope: !8902)
!8904 = !DILocation(line: 2392, column: 57, scope: !8902)
!8905 = !DILocation(line: 2392, column: 7, scope: !8902)
!8906 = !DILocation(line: 2393, column: 6, scope: !8902)
!8907 = !DILocation(line: 2394, column: 10, scope: !8908)
!8908 = distinct !DILexicalBlock(scope: !8834, file: !3, line: 2394, column: 10)
!8909 = !DILocation(line: 2394, column: 15, scope: !8908)
!8910 = !DILocation(line: 2394, column: 20, scope: !8908)
!8911 = !DILocation(line: 2394, column: 36, scope: !8908)
!8912 = !DILocation(line: 2394, column: 39, scope: !8908)
!8913 = !DILocation(line: 2394, column: 46, scope: !8908)
!8914 = !DILocation(line: 2394, column: 10, scope: !8834)
!8915 = !DILocation(line: 2395, column: 19, scope: !8916)
!8916 = distinct !DILexicalBlock(scope: !8908, file: !3, line: 2394, column: 53)
!8917 = !DILocation(line: 2395, column: 46, scope: !8916)
!8918 = !DILocation(line: 2395, column: 53, scope: !8916)
!8919 = !DILocation(line: 2395, column: 7, scope: !8916)
!8920 = !DILocation(line: 2396, column: 6, scope: !8916)
!8921 = !DILocation(line: 2397, column: 10, scope: !8922)
!8922 = distinct !DILexicalBlock(scope: !8834, file: !3, line: 2397, column: 10)
!8923 = !DILocation(line: 2397, column: 15, scope: !8922)
!8924 = !DILocation(line: 2397, column: 19, scope: !8922)
!8925 = !DILocation(line: 2397, column: 10, scope: !8834)
!8926 = !DILocation(line: 2398, column: 19, scope: !8922)
!8927 = !DILocation(line: 2398, column: 42, scope: !8922)
!8928 = !DILocation(line: 2398, column: 57, scope: !8922)
!8929 = !DILocation(line: 2398, column: 64, scope: !8922)
!8930 = !DILocation(line: 2398, column: 75, scope: !8922)
!8931 = !DILocation(line: 2398, column: 103, scope: !8922)
!8932 = !DILocation(line: 2398, column: 110, scope: !8922)
!8933 = !DILocation(line: 2398, column: 7, scope: !8922)
!8934 = !DILocation(line: 2399, column: 15, scope: !8935)
!8935 = distinct !DILexicalBlock(scope: !8922, file: !3, line: 2399, column: 15)
!8936 = !DILocation(line: 2399, column: 20, scope: !8935)
!8937 = !DILocation(line: 2399, column: 24, scope: !8935)
!8938 = !DILocation(line: 2399, column: 41, scope: !8935)
!8939 = !DILocation(line: 2399, column: 44, scope: !8935)
!8940 = !DILocation(line: 2399, column: 49, scope: !8935)
!8941 = !DILocation(line: 2399, column: 53, scope: !8935)
!8942 = !DILocation(line: 2399, column: 74, scope: !8935)
!8943 = !DILocation(line: 2399, column: 77, scope: !8935)
!8944 = !DILocation(line: 2399, column: 82, scope: !8935)
!8945 = !DILocation(line: 2399, column: 87, scope: !8935)
!8946 = !DILocation(line: 2399, column: 15, scope: !8922)
!8947 = !DILocation(line: 2400, column: 19, scope: !8935)
!8948 = !DILocation(line: 2400, column: 45, scope: !8935)
!8949 = !DILocation(line: 2400, column: 52, scope: !8935)
!8950 = !DILocation(line: 2400, column: 7, scope: !8935)
!8951 = !DILocation(line: 2402, column: 6, scope: !8834)
!8952 = !DILocation(line: 2402, column: 13, scope: !8834)
!8953 = !DILocation(line: 2402, column: 18, scope: !8834)
!8954 = !DILocation(line: 2403, column: 5, scope: !8834)
!8955 = !DILocation(line: 2405, column: 30, scope: !8824)
!8956 = !DILocation(line: 2405, column: 35, scope: !8824)
!8957 = !DILocation(line: 2405, column: 40, scope: !8824)
!8958 = !DILocation(line: 2405, column: 5, scope: !8824)
!8959 = !DILocation(line: 2407, column: 4, scope: !8821)
!8960 = distinct !{!8960, !8816, !8961}
!8961 = !DILocation(line: 2407, column: 4, scope: !8817)
!8962 = !DILocation(line: 2407, column: 4, scope: !8814)
!8963 = !DILocation(line: 2410, column: 13, scope: !8964)
!8964 = distinct !DILexicalBlock(scope: !8775, file: !3, line: 2410, column: 4)
!8965 = !DILocation(line: 2410, column: 17, scope: !8964)
!8966 = !DILocation(line: 2410, column: 27, scope: !8964)
!8967 = !DILocation(line: 2410, column: 11, scope: !8964)
!8968 = !DILocation(line: 2410, column: 9, scope: !8964)
!8969 = !DILocation(line: 2410, column: 34, scope: !8970)
!8970 = distinct !DILexicalBlock(scope: !8964, file: !3, line: 2410, column: 4)
!8971 = !DILocation(line: 2410, column: 4, scope: !8964)
!8972 = !DILocation(line: 2411, column: 17, scope: !8973)
!8973 = distinct !DILexicalBlock(scope: !8970, file: !3, line: 2410, column: 52)
!8974 = !DILocation(line: 2411, column: 43, scope: !8973)
!8975 = !DILocation(line: 2411, column: 5, scope: !8973)
!8976 = !DILocation(line: 2412, column: 4, scope: !8973)
!8977 = !DILocation(line: 2410, column: 42, scope: !8970)
!8978 = !DILocation(line: 2410, column: 46, scope: !8970)
!8979 = !DILocation(line: 2410, column: 40, scope: !8970)
!8980 = !DILocation(line: 2410, column: 4, scope: !8970)
!8981 = distinct !{!8981, !8971, !8982}
!8982 = !DILocation(line: 2412, column: 4, scope: !8964)
!8983 = !DILocation(line: 2413, column: 3, scope: !8775)
!8984 = !DILocation(line: 2415, column: 7, scope: !8985)
!8985 = distinct !DILexicalBlock(scope: !8682, file: !3, line: 2415, column: 7)
!8986 = !DILocation(line: 2415, column: 12, scope: !8985)
!8987 = !DILocation(line: 2415, column: 14, scope: !8985)
!8988 = !DILocation(line: 2415, column: 7, scope: !8682)
!8989 = !DILocation(line: 2416, column: 16, scope: !8990)
!8990 = distinct !DILexicalBlock(scope: !8985, file: !3, line: 2415, column: 28)
!8991 = !DILocation(line: 2416, column: 45, scope: !8990)
!8992 = !DILocation(line: 2416, column: 50, scope: !8990)
!8993 = !DILocation(line: 2416, column: 52, scope: !8990)
!8994 = !DILocation(line: 2416, column: 4, scope: !8990)
!8995 = !DILocation(line: 2417, column: 8, scope: !8996)
!8996 = distinct !DILexicalBlock(scope: !8990, file: !3, line: 2417, column: 8)
!8997 = !DILocation(line: 2417, column: 13, scope: !8996)
!8998 = !DILocation(line: 2417, column: 15, scope: !8996)
!8999 = !DILocation(line: 2417, column: 29, scope: !8996)
!9000 = !DILocation(line: 2417, column: 8, scope: !8990)
!9001 = !DILocation(line: 2417, column: 49, scope: !8996)
!9002 = !DILocation(line: 2417, column: 59, scope: !8996)
!9003 = !DILocation(line: 2417, column: 64, scope: !8996)
!9004 = !DILocation(line: 2417, column: 66, scope: !8996)
!9005 = !DILocation(line: 2417, column: 80, scope: !8996)
!9006 = !DILocation(line: 2417, column: 90, scope: !8996)
!9007 = !DILocation(line: 2417, column: 95, scope: !8996)
!9008 = !DILocation(line: 2417, column: 97, scope: !8996)
!9009 = !DILocation(line: 2417, column: 111, scope: !8996)
!9010 = !DILocation(line: 2417, column: 39, scope: !8996)
!9011 = !DILocation(line: 2418, column: 8, scope: !9012)
!9012 = distinct !DILexicalBlock(scope: !8990, file: !3, line: 2418, column: 8)
!9013 = !DILocation(line: 2418, column: 13, scope: !9012)
!9014 = !DILocation(line: 2418, column: 15, scope: !9012)
!9015 = !DILocation(line: 2418, column: 29, scope: !9012)
!9016 = !DILocation(line: 2418, column: 8, scope: !8990)
!9017 = !DILocation(line: 2418, column: 48, scope: !9012)
!9018 = !DILocation(line: 2418, column: 58, scope: !9012)
!9019 = !DILocation(line: 2418, column: 63, scope: !9012)
!9020 = !DILocation(line: 2418, column: 65, scope: !9012)
!9021 = !DILocation(line: 2418, column: 79, scope: !9012)
!9022 = !DILocation(line: 2418, column: 88, scope: !9012)
!9023 = !DILocation(line: 2418, column: 93, scope: !9012)
!9024 = !DILocation(line: 2418, column: 95, scope: !9012)
!9025 = !DILocation(line: 2418, column: 109, scope: !9012)
!9026 = !DILocation(line: 2418, column: 38, scope: !9012)
!9027 = !DILocation(line: 2419, column: 3, scope: !8990)
!9028 = !DILocation(line: 2421, column: 7, scope: !9029)
!9029 = distinct !DILexicalBlock(scope: !8682, file: !3, line: 2421, column: 7)
!9030 = !DILocation(line: 2421, column: 12, scope: !9029)
!9031 = !DILocation(line: 2421, column: 14, scope: !9029)
!9032 = !DILocation(line: 2421, column: 7, scope: !8682)
!9033 = !DILocation(line: 2422, column: 16, scope: !9034)
!9034 = distinct !DILexicalBlock(scope: !9029, file: !3, line: 2421, column: 27)
!9035 = !DILocation(line: 2422, column: 51, scope: !9034)
!9036 = !DILocation(line: 2422, column: 56, scope: !9034)
!9037 = !DILocation(line: 2422, column: 58, scope: !9034)
!9038 = !DILocation(line: 2422, column: 4, scope: !9034)
!9039 = !DILocation(line: 2423, column: 8, scope: !9040)
!9040 = distinct !DILexicalBlock(scope: !9034, file: !3, line: 2423, column: 8)
!9041 = !DILocation(line: 2423, column: 13, scope: !9040)
!9042 = !DILocation(line: 2423, column: 15, scope: !9040)
!9043 = !DILocation(line: 2423, column: 28, scope: !9040)
!9044 = !DILocation(line: 2423, column: 8, scope: !9034)
!9045 = !DILocation(line: 2423, column: 47, scope: !9040)
!9046 = !DILocation(line: 2423, column: 57, scope: !9040)
!9047 = !DILocation(line: 2423, column: 62, scope: !9040)
!9048 = !DILocation(line: 2423, column: 64, scope: !9040)
!9049 = !DILocation(line: 2423, column: 77, scope: !9040)
!9050 = !DILocation(line: 2423, column: 85, scope: !9040)
!9051 = !DILocation(line: 2423, column: 90, scope: !9040)
!9052 = !DILocation(line: 2423, column: 92, scope: !9040)
!9053 = !DILocation(line: 2423, column: 105, scope: !9040)
!9054 = !DILocation(line: 2423, column: 37, scope: !9040)
!9055 = !DILocation(line: 2424, column: 3, scope: !9034)
!9056 = !DILocation(line: 2425, column: 7, scope: !9057)
!9057 = distinct !DILexicalBlock(scope: !8682, file: !3, line: 2425, column: 7)
!9058 = !DILocation(line: 2425, column: 12, scope: !9057)
!9059 = !DILocation(line: 2425, column: 14, scope: !9057)
!9060 = !DILocation(line: 2425, column: 26, scope: !9057)
!9061 = !DILocation(line: 2425, column: 7, scope: !8682)
!9062 = !DILocation(line: 2426, column: 22, scope: !9063)
!9063 = distinct !DILexicalBlock(scope: !9057, file: !3, line: 2425, column: 38)
!9064 = !DILocation(line: 2426, column: 27, scope: !9063)
!9065 = !DILocation(line: 2426, column: 29, scope: !9063)
!9066 = !DILocation(line: 2426, column: 41, scope: !9063)
!9067 = !DILocation(line: 2426, column: 53, scope: !9063)
!9068 = !DILocation(line: 2426, column: 4, scope: !9063)
!9069 = !DILocation(line: 2427, column: 3, scope: !9063)
!9070 = !DILocation(line: 2430, column: 16, scope: !9071)
!9071 = distinct !DILexicalBlock(scope: !8682, file: !3, line: 2430, column: 3)
!9072 = !DILocation(line: 2430, column: 21, scope: !9071)
!9073 = !DILocation(line: 2430, column: 29, scope: !9071)
!9074 = !DILocation(line: 2430, column: 14, scope: !9071)
!9075 = !DILocation(line: 2430, column: 8, scope: !9071)
!9076 = !DILocation(line: 2430, column: 36, scope: !9077)
!9077 = distinct !DILexicalBlock(scope: !9071, file: !3, line: 2430, column: 3)
!9078 = !DILocation(line: 2430, column: 3, scope: !9071)
!9079 = !DILocation(line: 2431, column: 16, scope: !9077)
!9080 = !DILocation(line: 2431, column: 43, scope: !9077)
!9081 = !DILocation(line: 2431, column: 4, scope: !9077)
!9082 = !DILocation(line: 2430, column: 52, scope: !9077)
!9083 = !DILocation(line: 2430, column: 60, scope: !9077)
!9084 = !DILocation(line: 2430, column: 50, scope: !9077)
!9085 = !DILocation(line: 2430, column: 3, scope: !9077)
!9086 = distinct !{!9086, !9078, !9087}
!9087 = !DILocation(line: 2431, column: 49, scope: !9071)
!9088 = !DILocation(line: 2434, column: 13, scope: !9089)
!9089 = distinct !DILexicalBlock(scope: !8682, file: !3, line: 2434, column: 3)
!9090 = !DILocation(line: 2434, column: 18, scope: !9089)
!9091 = !DILocation(line: 2434, column: 35, scope: !9089)
!9092 = !DILocation(line: 2434, column: 11, scope: !9089)
!9093 = !DILocation(line: 2434, column: 8, scope: !9089)
!9094 = !DILocation(line: 2434, column: 42, scope: !9095)
!9095 = distinct !DILexicalBlock(scope: !9089, file: !3, line: 2434, column: 3)
!9096 = !DILocation(line: 2434, column: 3, scope: !9089)
!9097 = !DILocation(line: 2435, column: 16, scope: !9095)
!9098 = !DILocation(line: 2435, column: 53, scope: !9095)
!9099 = !DILocation(line: 2435, column: 4, scope: !9095)
!9100 = !DILocation(line: 2434, column: 51, scope: !9095)
!9101 = !DILocation(line: 2434, column: 55, scope: !9095)
!9102 = !DILocation(line: 2434, column: 49, scope: !9095)
!9103 = !DILocation(line: 2434, column: 3, scope: !9095)
!9104 = distinct !{!9104, !9096, !9105}
!9105 = !DILocation(line: 2435, column: 55, scope: !9089)
!9106 = !DILocation(line: 2437, column: 14, scope: !9107)
!9107 = distinct !DILexicalBlock(scope: !8682, file: !3, line: 2437, column: 3)
!9108 = !DILocation(line: 2437, column: 19, scope: !9107)
!9109 = !DILocation(line: 2437, column: 21, scope: !9107)
!9110 = !DILocation(line: 2437, column: 28, scope: !9107)
!9111 = !DILocation(line: 2437, column: 12, scope: !9107)
!9112 = !DILocation(line: 2437, column: 8, scope: !9107)
!9113 = !DILocation(line: 2437, column: 35, scope: !9114)
!9114 = distinct !DILexicalBlock(scope: !9107, file: !3, line: 2437, column: 3)
!9115 = !DILocation(line: 2437, column: 3, scope: !9107)
!9116 = !DILocation(line: 2438, column: 16, scope: !9117)
!9117 = distinct !DILexicalBlock(scope: !9114, file: !3, line: 2437, column: 57)
!9118 = !DILocation(line: 2438, column: 49, scope: !9117)
!9119 = !DILocation(line: 2438, column: 4, scope: !9117)
!9120 = !DILocation(line: 2439, column: 15, scope: !9121)
!9121 = distinct !DILexicalBlock(scope: !9117, file: !3, line: 2439, column: 4)
!9122 = !DILocation(line: 2439, column: 20, scope: !9121)
!9123 = !DILocation(line: 2439, column: 36, scope: !9121)
!9124 = !DILocation(line: 2439, column: 44, scope: !9121)
!9125 = !DILocation(line: 2439, column: 13, scope: !9121)
!9126 = !DILocation(line: 2439, column: 9, scope: !9121)
!9127 = !DILocation(line: 2439, column: 51, scope: !9128)
!9128 = distinct !DILexicalBlock(scope: !9121, file: !3, line: 2439, column: 4)
!9129 = !DILocation(line: 2439, column: 4, scope: !9121)
!9130 = !DILocation(line: 2440, column: 17, scope: !9131)
!9131 = distinct !DILexicalBlock(scope: !9128, file: !3, line: 2439, column: 73)
!9132 = !DILocation(line: 2440, column: 55, scope: !9131)
!9133 = !DILocation(line: 2440, column: 5, scope: !9131)
!9134 = !DILocation(line: 2441, column: 4, scope: !9131)
!9135 = !DILocation(line: 2439, column: 62, scope: !9128)
!9136 = !DILocation(line: 2439, column: 67, scope: !9128)
!9137 = !DILocation(line: 2439, column: 60, scope: !9128)
!9138 = !DILocation(line: 2439, column: 4, scope: !9128)
!9139 = distinct !{!9139, !9129, !9140}
!9140 = !DILocation(line: 2441, column: 4, scope: !9121)
!9141 = !DILocation(line: 2442, column: 15, scope: !9142)
!9142 = distinct !DILexicalBlock(scope: !9117, file: !3, line: 2442, column: 4)
!9143 = !DILocation(line: 2442, column: 20, scope: !9142)
!9144 = !DILocation(line: 2442, column: 36, scope: !9142)
!9145 = !DILocation(line: 2442, column: 45, scope: !9142)
!9146 = !DILocation(line: 2442, column: 13, scope: !9142)
!9147 = !DILocation(line: 2442, column: 9, scope: !9142)
!9148 = !DILocation(line: 2442, column: 52, scope: !9149)
!9149 = distinct !DILexicalBlock(scope: !9142, file: !3, line: 2442, column: 4)
!9150 = !DILocation(line: 2442, column: 4, scope: !9142)
!9151 = !DILocation(line: 2443, column: 17, scope: !9152)
!9152 = distinct !DILexicalBlock(scope: !9149, file: !3, line: 2442, column: 74)
!9153 = !DILocation(line: 2443, column: 50, scope: !9152)
!9154 = !DILocation(line: 2443, column: 5, scope: !9152)
!9155 = !DILocation(line: 2444, column: 4, scope: !9152)
!9156 = !DILocation(line: 2442, column: 63, scope: !9149)
!9157 = !DILocation(line: 2442, column: 68, scope: !9149)
!9158 = !DILocation(line: 2442, column: 61, scope: !9149)
!9159 = !DILocation(line: 2442, column: 4, scope: !9149)
!9160 = distinct !{!9160, !9150, !9161}
!9161 = !DILocation(line: 2444, column: 4, scope: !9142)
!9162 = !DILocation(line: 2445, column: 3, scope: !9117)
!9163 = !DILocation(line: 2437, column: 46, scope: !9114)
!9164 = !DILocation(line: 2437, column: 51, scope: !9114)
!9165 = !DILocation(line: 2437, column: 44, scope: !9114)
!9166 = !DILocation(line: 2437, column: 3, scope: !9114)
!9167 = distinct !{!9167, !9115, !9168}
!9168 = !DILocation(line: 2445, column: 3, scope: !9107)
!9169 = !DILocation(line: 2447, column: 7, scope: !9170)
!9170 = distinct !DILexicalBlock(scope: !8682, file: !3, line: 2447, column: 7)
!9171 = !DILocation(line: 2447, column: 12, scope: !9170)
!9172 = !DILocation(line: 2447, column: 7, scope: !8682)
!9173 = !DILocation(line: 2448, column: 16, scope: !9174)
!9174 = distinct !DILexicalBlock(scope: !9170, file: !3, line: 2447, column: 22)
!9175 = !DILocation(line: 2448, column: 42, scope: !9174)
!9176 = !DILocation(line: 2448, column: 47, scope: !9174)
!9177 = !DILocation(line: 2448, column: 4, scope: !9174)
!9178 = !DILocation(line: 2449, column: 19, scope: !9174)
!9179 = !DILocation(line: 2449, column: 23, scope: !9174)
!9180 = !DILocation(line: 2449, column: 28, scope: !9174)
!9181 = !DILocation(line: 2449, column: 4, scope: !9174)
!9182 = !DILocation(line: 2450, column: 3, scope: !9174)
!9183 = !DILocation(line: 2452, column: 23, scope: !8682)
!9184 = !DILocation(line: 2452, column: 28, scope: !8682)
!9185 = !DILocation(line: 2452, column: 33, scope: !8682)
!9186 = !DILocation(line: 2452, column: 3, scope: !8682)
!9187 = !DILocation(line: 2455, column: 7, scope: !9188)
!9188 = distinct !DILexicalBlock(scope: !8682, file: !3, line: 2455, column: 7)
!9189 = !DILocation(line: 2455, column: 12, scope: !9188)
!9190 = !DILocation(line: 2455, column: 7, scope: !8682)
!9191 = !DILocation(line: 2456, column: 16, scope: !9192)
!9192 = distinct !DILexicalBlock(scope: !9188, file: !3, line: 2455, column: 29)
!9193 = !DILocation(line: 2456, column: 47, scope: !9192)
!9194 = !DILocation(line: 2456, column: 52, scope: !9192)
!9195 = !DILocation(line: 2456, column: 4, scope: !9192)
!9196 = !DILocation(line: 2457, column: 16, scope: !9192)
!9197 = !DILocation(line: 2457, column: 48, scope: !9192)
!9198 = !DILocation(line: 2457, column: 53, scope: !9192)
!9199 = !DILocation(line: 2457, column: 70, scope: !9192)
!9200 = !DILocation(line: 2457, column: 4, scope: !9192)
!9201 = !DILocation(line: 2458, column: 22, scope: !9192)
!9202 = !DILocation(line: 2458, column: 28, scope: !9192)
!9203 = !DILocation(line: 2458, column: 33, scope: !9192)
!9204 = !DILocation(line: 2458, column: 50, scope: !9192)
!9205 = !DILocation(line: 2458, column: 4, scope: !9192)
!9206 = !DILocation(line: 2459, column: 3, scope: !9192)
!9207 = !DILocation(line: 2461, column: 8, scope: !8682)
!9208 = !DILocation(line: 2461, column: 13, scope: !8682)
!9209 = !DILocation(line: 2461, column: 16, scope: !8682)
!9210 = !DILocation(line: 2461, column: 6, scope: !8682)
!9211 = distinct !{!9211, !8679, !9212}
!9212 = !DILocation(line: 2462, column: 2, scope: !8550)
!9213 = !DILocation(line: 2464, column: 10, scope: !8550)
!9214 = !DILocation(line: 2464, column: 2, scope: !8550)
!9215 = !DILocation(line: 2465, column: 1, scope: !8550)
!9216 = distinct !DISubprogram(name: "write_curves", scope: !3, file: !3, line: 1775, type: !7324, scopeLine: 1776, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !5641)
!9217 = !DILocalVariable(name: "wd", arg: 1, scope: !9216, file: !3, line: 1775, type: !5820)
!9218 = !DILocation(line: 1775, column: 37, scope: !9216)
!9219 = !DILocalVariable(name: "idbase", arg: 2, scope: !9216, file: !3, line: 1775, type: !565)
!9220 = !DILocation(line: 1775, column: 51, scope: !9216)
!9221 = !DILocalVariable(name: "cu", scope: !9216, file: !3, line: 1777, type: !9222)
!9222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9223, size: 64)
!9223 = !DIDerivedType(tag: DW_TAG_typedef, name: "Curve", file: !2376, line: 273, baseType: !9224)
!9224 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Curve", file: !2376, line: 193, size: 4224, elements: !9225)
!9225 = !{!9226, !9227, !9228, !9229, !9230, !9239, !9240, !9241, !9242, !9243, !9283, !9284, !9285, !9286, !9287, !9288, !9289, !9290, !9291, !9292, !9293, !9294, !9295, !9296, !9297, !9298, !9299, !9300, !9301, !9302, !9303, !9304, !9305, !9306, !9307, !9308, !9309, !9310, !9311, !9312, !9313, !9314, !9315, !9316, !9317, !9318, !9319, !9320, !9321, !9322, !9323, !9324, !9325, !9326, !9329, !9330, !9342, !9343, !9344, !9345, !9353, !9354, !9355, !9364, !9365, !9366, !9367, !9368, !9369, !9370}
!9226 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !9224, file: !2376, line: 194, baseType: !427, size: 960)
!9227 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !9224, file: !2376, line: 195, baseType: !833, size: 64, offset: 960)
!9228 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !9224, file: !2376, line: 197, baseType: !4427, size: 64, offset: 1024)
!9229 = !DIDerivedType(tag: DW_TAG_member, name: "nurb", scope: !9224, file: !2376, line: 199, baseType: !388, size: 128, offset: 1088)
!9230 = !DIDerivedType(tag: DW_TAG_member, name: "editnurb", scope: !9224, file: !2376, line: 201, baseType: !9231, size: 64, offset: 1216)
!9231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9232, size: 64)
!9232 = !DIDerivedType(tag: DW_TAG_typedef, name: "EditNurb", file: !2376, line: 191, baseType: !9233)
!9233 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "EditNurb", file: !2376, line: 180, size: 256, elements: !9234)
!9234 = !{!9235, !9236, !9237, !9238}
!9235 = !DIDerivedType(tag: DW_TAG_member, name: "nurbs", scope: !9233, file: !2376, line: 182, baseType: !388, size: 128)
!9236 = !DIDerivedType(tag: DW_TAG_member, name: "keyindex", scope: !9233, file: !2376, line: 185, baseType: !542, size: 64, offset: 128)
!9237 = !DIDerivedType(tag: DW_TAG_member, name: "shapenr", scope: !9233, file: !2376, line: 188, baseType: !98, size: 32, offset: 192)
!9238 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !9233, file: !2376, line: 190, baseType: !2395, size: 32, offset: 224)
!9239 = !DIDerivedType(tag: DW_TAG_member, name: "bevobj", scope: !9224, file: !2376, line: 203, baseType: !423, size: 64, offset: 1280)
!9240 = !DIDerivedType(tag: DW_TAG_member, name: "taperobj", scope: !9224, file: !2376, line: 203, baseType: !423, size: 64, offset: 1344)
!9241 = !DIDerivedType(tag: DW_TAG_member, name: "textoncurve", scope: !9224, file: !2376, line: 203, baseType: !423, size: 64, offset: 1408)
!9242 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !9224, file: !2376, line: 204, baseType: !978, size: 64, offset: 1472)
!9243 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !9224, file: !2376, line: 205, baseType: !9244, size: 64, offset: 1536)
!9244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9245, size: 64)
!9245 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Key", file: !9246, line: 73, size: 1792, elements: !9247)
!9246 = !DIFile(filename: "blender/source/blender/makesdna/DNA_key_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!9247 = !{!9248, !9249, !9250, !9271, !9272, !9273, !9274, !9275, !9276, !9277, !9278, !9279, !9280, !9281, !9282}
!9248 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !9245, file: !9246, line: 74, baseType: !427, size: 960)
!9249 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !9245, file: !9246, line: 75, baseType: !833, size: 64, offset: 960)
!9250 = !DIDerivedType(tag: DW_TAG_member, name: "refkey", scope: !9245, file: !9246, line: 80, baseType: !9251, size: 64, offset: 1024)
!9251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9252, size: 64)
!9252 = !DIDerivedType(tag: DW_TAG_typedef, name: "KeyBlock", file: !9246, line: 70, baseType: !9253)
!9253 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "KeyBlock", file: !9246, line: 45, size: 1472, elements: !9254)
!9254 = !{!9255, !9257, !9258, !9259, !9260, !9261, !9262, !9263, !9264, !9265, !9266, !9267, !9268, !9269, !9270}
!9255 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !9253, file: !9246, line: 46, baseType: !9256, size: 64)
!9256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9253, size: 64)
!9257 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !9253, file: !9246, line: 46, baseType: !9256, size: 64, offset: 64)
!9258 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !9253, file: !9246, line: 48, baseType: !396, size: 32, offset: 128)
!9259 = !DIDerivedType(tag: DW_TAG_member, name: "curval", scope: !9253, file: !9246, line: 51, baseType: !396, size: 32, offset: 160)
!9260 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !9253, file: !9246, line: 53, baseType: !399, size: 16, offset: 192)
!9261 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !9253, file: !9246, line: 54, baseType: !399, size: 16, offset: 208)
!9262 = !DIDerivedType(tag: DW_TAG_member, name: "relative", scope: !9253, file: !9246, line: 56, baseType: !399, size: 16, offset: 224)
!9263 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !9253, file: !9246, line: 57, baseType: !399, size: 16, offset: 240)
!9264 = !DIDerivedType(tag: DW_TAG_member, name: "totelem", scope: !9253, file: !9246, line: 59, baseType: !98, size: 32, offset: 256)
!9265 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !9253, file: !9246, line: 60, baseType: !98, size: 32, offset: 288)
!9266 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !9253, file: !9246, line: 62, baseType: !372, size: 64, offset: 320)
!9267 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !9253, file: !9246, line: 63, baseType: !692, size: 512, offset: 384)
!9268 = !DIDerivedType(tag: DW_TAG_member, name: "vgroup", scope: !9253, file: !9246, line: 64, baseType: !692, size: 512, offset: 896)
!9269 = !DIDerivedType(tag: DW_TAG_member, name: "slidermin", scope: !9253, file: !9246, line: 67, baseType: !396, size: 32, offset: 1408)
!9270 = !DIDerivedType(tag: DW_TAG_member, name: "slidermax", scope: !9253, file: !9246, line: 68, baseType: !396, size: 32, offset: 1440)
!9271 = !DIDerivedType(tag: DW_TAG_member, name: "elemstr", scope: !9245, file: !9246, line: 85, baseType: !2910, size: 256, offset: 1088)
!9272 = !DIDerivedType(tag: DW_TAG_member, name: "elemsize", scope: !9245, file: !9246, line: 86, baseType: !98, size: 32, offset: 1344)
!9273 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !9245, file: !9246, line: 87, baseType: !98, size: 32, offset: 1376)
!9274 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !9245, file: !9246, line: 89, baseType: !388, size: 128, offset: 1408)
!9275 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !9245, file: !9246, line: 90, baseType: !978, size: 64, offset: 1536)
!9276 = !DIDerivedType(tag: DW_TAG_member, name: "from", scope: !9245, file: !9246, line: 92, baseType: !441, size: 64, offset: 1600)
!9277 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !9245, file: !9246, line: 94, baseType: !399, size: 16, offset: 1664)
!9278 = !DIDerivedType(tag: DW_TAG_member, name: "totkey", scope: !9245, file: !9246, line: 95, baseType: !399, size: 16, offset: 1680)
!9279 = !DIDerivedType(tag: DW_TAG_member, name: "slurph", scope: !9245, file: !9246, line: 96, baseType: !399, size: 16, offset: 1696)
!9280 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !9245, file: !9246, line: 97, baseType: !399, size: 16, offset: 1712)
!9281 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !9245, file: !9246, line: 101, baseType: !396, size: 32, offset: 1728)
!9282 = !DIDerivedType(tag: DW_TAG_member, name: "uidgen", scope: !9245, file: !9246, line: 104, baseType: !98, size: 32, offset: 1760)
!9283 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !9224, file: !2376, line: 206, baseType: !3783, size: 64, offset: 1600)
!9284 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !9224, file: !2376, line: 209, baseType: !779, size: 96, offset: 1664)
!9285 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !9224, file: !2376, line: 210, baseType: !779, size: 96, offset: 1760)
!9286 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !9224, file: !2376, line: 211, baseType: !779, size: 96, offset: 1856)
!9287 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !9224, file: !2376, line: 213, baseType: !399, size: 16, offset: 1952)
!9288 = !DIDerivedType(tag: DW_TAG_member, name: "texflag", scope: !9224, file: !2376, line: 215, baseType: !399, size: 16, offset: 1968)
!9289 = !DIDerivedType(tag: DW_TAG_member, name: "drawflag", scope: !9224, file: !2376, line: 216, baseType: !399, size: 16, offset: 1984)
!9290 = !DIDerivedType(tag: DW_TAG_member, name: "twist_mode", scope: !9224, file: !2376, line: 216, baseType: !399, size: 16, offset: 2000)
!9291 = !DIDerivedType(tag: DW_TAG_member, name: "twist_smooth", scope: !9224, file: !2376, line: 217, baseType: !396, size: 32, offset: 2016)
!9292 = !DIDerivedType(tag: DW_TAG_member, name: "smallcaps_scale", scope: !9224, file: !2376, line: 217, baseType: !396, size: 32, offset: 2048)
!9293 = !DIDerivedType(tag: DW_TAG_member, name: "pathlen", scope: !9224, file: !2376, line: 219, baseType: !98, size: 32, offset: 2080)
!9294 = !DIDerivedType(tag: DW_TAG_member, name: "bevresol", scope: !9224, file: !2376, line: 220, baseType: !399, size: 16, offset: 2112)
!9295 = !DIDerivedType(tag: DW_TAG_member, name: "totcol", scope: !9224, file: !2376, line: 220, baseType: !399, size: 16, offset: 2128)
!9296 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !9224, file: !2376, line: 221, baseType: !98, size: 32, offset: 2144)
!9297 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !9224, file: !2376, line: 222, baseType: !396, size: 32, offset: 2176)
!9298 = !DIDerivedType(tag: DW_TAG_member, name: "ext1", scope: !9224, file: !2376, line: 222, baseType: !396, size: 32, offset: 2208)
!9299 = !DIDerivedType(tag: DW_TAG_member, name: "ext2", scope: !9224, file: !2376, line: 222, baseType: !396, size: 32, offset: 2240)
!9300 = !DIDerivedType(tag: DW_TAG_member, name: "resolu", scope: !9224, file: !2376, line: 225, baseType: !399, size: 16, offset: 2272)
!9301 = !DIDerivedType(tag: DW_TAG_member, name: "resolv", scope: !9224, file: !2376, line: 225, baseType: !399, size: 16, offset: 2288)
!9302 = !DIDerivedType(tag: DW_TAG_member, name: "resolu_ren", scope: !9224, file: !2376, line: 226, baseType: !399, size: 16, offset: 2304)
!9303 = !DIDerivedType(tag: DW_TAG_member, name: "resolv_ren", scope: !9224, file: !2376, line: 226, baseType: !399, size: 16, offset: 2320)
!9304 = !DIDerivedType(tag: DW_TAG_member, name: "actnu", scope: !9224, file: !2376, line: 229, baseType: !98, size: 32, offset: 2336)
!9305 = !DIDerivedType(tag: DW_TAG_member, name: "actvert", scope: !9224, file: !2376, line: 231, baseType: !98, size: 32, offset: 2368)
!9306 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !9224, file: !2376, line: 233, baseType: !2395, size: 32, offset: 2400)
!9307 = !DIDerivedType(tag: DW_TAG_member, name: "lines", scope: !9224, file: !2376, line: 236, baseType: !399, size: 16, offset: 2432)
!9308 = !DIDerivedType(tag: DW_TAG_member, name: "spacemode", scope: !9224, file: !2376, line: 237, baseType: !375, size: 8, offset: 2448)
!9309 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !9224, file: !2376, line: 237, baseType: !375, size: 8, offset: 2456)
!9310 = !DIDerivedType(tag: DW_TAG_member, name: "spacing", scope: !9224, file: !2376, line: 238, baseType: !396, size: 32, offset: 2464)
!9311 = !DIDerivedType(tag: DW_TAG_member, name: "linedist", scope: !9224, file: !2376, line: 238, baseType: !396, size: 32, offset: 2496)
!9312 = !DIDerivedType(tag: DW_TAG_member, name: "shear", scope: !9224, file: !2376, line: 238, baseType: !396, size: 32, offset: 2528)
!9313 = !DIDerivedType(tag: DW_TAG_member, name: "fsize", scope: !9224, file: !2376, line: 238, baseType: !396, size: 32, offset: 2560)
!9314 = !DIDerivedType(tag: DW_TAG_member, name: "wordspace", scope: !9224, file: !2376, line: 238, baseType: !396, size: 32, offset: 2592)
!9315 = !DIDerivedType(tag: DW_TAG_member, name: "ulpos", scope: !9224, file: !2376, line: 238, baseType: !396, size: 32, offset: 2624)
!9316 = !DIDerivedType(tag: DW_TAG_member, name: "ulheight", scope: !9224, file: !2376, line: 238, baseType: !396, size: 32, offset: 2656)
!9317 = !DIDerivedType(tag: DW_TAG_member, name: "xof", scope: !9224, file: !2376, line: 239, baseType: !396, size: 32, offset: 2688)
!9318 = !DIDerivedType(tag: DW_TAG_member, name: "yof", scope: !9224, file: !2376, line: 239, baseType: !396, size: 32, offset: 2720)
!9319 = !DIDerivedType(tag: DW_TAG_member, name: "linewidth", scope: !9224, file: !2376, line: 240, baseType: !396, size: 32, offset: 2752)
!9320 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !9224, file: !2376, line: 244, baseType: !98, size: 32, offset: 2784)
!9321 = !DIDerivedType(tag: DW_TAG_member, name: "selstart", scope: !9224, file: !2376, line: 245, baseType: !98, size: 32, offset: 2816)
!9322 = !DIDerivedType(tag: DW_TAG_member, name: "selend", scope: !9224, file: !2376, line: 245, baseType: !98, size: 32, offset: 2848)
!9323 = !DIDerivedType(tag: DW_TAG_member, name: "len_wchar", scope: !9224, file: !2376, line: 248, baseType: !98, size: 32, offset: 2880)
!9324 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !9224, file: !2376, line: 249, baseType: !98, size: 32, offset: 2912)
!9325 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !9224, file: !2376, line: 250, baseType: !501, size: 64, offset: 2944)
!9326 = !DIDerivedType(tag: DW_TAG_member, name: "editfont", scope: !9224, file: !2376, line: 251, baseType: !9327, size: 64, offset: 3008)
!9327 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9328, size: 64)
!9328 = !DICompositeType(tag: DW_TAG_structure_type, name: "EditFont", file: !2376, line: 50, flags: DIFlagFwdDecl)
!9329 = !DIDerivedType(tag: DW_TAG_member, name: "family", scope: !9224, file: !2376, line: 253, baseType: !692, size: 512, offset: 3072)
!9330 = !DIDerivedType(tag: DW_TAG_member, name: "vfont", scope: !9224, file: !2376, line: 254, baseType: !9331, size: 64, offset: 3584)
!9331 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9332, size: 64)
!9332 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VFont", file: !9333, line: 45, size: 9344, elements: !9334)
!9333 = !DIFile(filename: "blender/source/blender/makesdna/DNA_vfont_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!9334 = !{!9335, !9336, !9337, !9340, !9341}
!9335 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !9332, file: !9333, line: 46, baseType: !427, size: 960)
!9336 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !9332, file: !9333, line: 48, baseType: !478, size: 8192, offset: 960)
!9337 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !9332, file: !9333, line: 50, baseType: !9338, size: 64, offset: 9152)
!9338 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9339, size: 64)
!9339 = !DICompositeType(tag: DW_TAG_structure_type, name: "VFontData", file: !9333, line: 43, flags: DIFlagFwdDecl)
!9340 = !DIDerivedType(tag: DW_TAG_member, name: "packedfile", scope: !9332, file: !9333, line: 51, baseType: !1691, size: 64, offset: 9216)
!9341 = !DIDerivedType(tag: DW_TAG_member, name: "temp_pf", scope: !9332, file: !9333, line: 55, baseType: !1691, size: 64, offset: 9280)
!9342 = !DIDerivedType(tag: DW_TAG_member, name: "vfontb", scope: !9224, file: !2376, line: 255, baseType: !9331, size: 64, offset: 3648)
!9343 = !DIDerivedType(tag: DW_TAG_member, name: "vfonti", scope: !9224, file: !2376, line: 256, baseType: !9331, size: 64, offset: 3712)
!9344 = !DIDerivedType(tag: DW_TAG_member, name: "vfontbi", scope: !9224, file: !2376, line: 257, baseType: !9331, size: 64, offset: 3776)
!9345 = !DIDerivedType(tag: DW_TAG_member, name: "tb", scope: !9224, file: !2376, line: 259, baseType: !9346, size: 64, offset: 3840)
!9346 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9347, size: 64)
!9347 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "TextBox", file: !2376, line: 176, size: 128, elements: !9348)
!9348 = !{!9349, !9350, !9351, !9352}
!9349 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !9347, file: !2376, line: 177, baseType: !396, size: 32)
!9350 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !9347, file: !2376, line: 177, baseType: !396, size: 32, offset: 32)
!9351 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !9347, file: !2376, line: 177, baseType: !396, size: 32, offset: 64)
!9352 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !9347, file: !2376, line: 177, baseType: !396, size: 32, offset: 96)
!9353 = !DIDerivedType(tag: DW_TAG_member, name: "totbox", scope: !9224, file: !2376, line: 260, baseType: !98, size: 32, offset: 3904)
!9354 = !DIDerivedType(tag: DW_TAG_member, name: "actbox", scope: !9224, file: !2376, line: 260, baseType: !98, size: 32, offset: 3936)
!9355 = !DIDerivedType(tag: DW_TAG_member, name: "strinfo", scope: !9224, file: !2376, line: 262, baseType: !9356, size: 64, offset: 3968)
!9356 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9357, size: 64)
!9357 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CharInfo", file: !2376, line: 168, size: 64, elements: !9358)
!9358 = !{!9359, !9360, !9361, !9362, !9363}
!9359 = !DIDerivedType(tag: DW_TAG_member, name: "kern", scope: !9357, file: !2376, line: 169, baseType: !399, size: 16)
!9360 = !DIDerivedType(tag: DW_TAG_member, name: "mat_nr", scope: !9357, file: !2376, line: 170, baseType: !399, size: 16, offset: 16)
!9361 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !9357, file: !2376, line: 171, baseType: !375, size: 8, offset: 32)
!9362 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !9357, file: !2376, line: 172, baseType: !375, size: 8, offset: 40)
!9363 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !9357, file: !2376, line: 173, baseType: !399, size: 16, offset: 48)
!9364 = !DIDerivedType(tag: DW_TAG_member, name: "curinfo", scope: !9224, file: !2376, line: 263, baseType: !9357, size: 64, offset: 4032)
!9365 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !9224, file: !2376, line: 267, baseType: !396, size: 32, offset: 4096)
!9366 = !DIDerivedType(tag: DW_TAG_member, name: "bevfac1", scope: !9224, file: !2376, line: 268, baseType: !396, size: 32, offset: 4128)
!9367 = !DIDerivedType(tag: DW_TAG_member, name: "bevfac2", scope: !9224, file: !2376, line: 268, baseType: !396, size: 32, offset: 4160)
!9368 = !DIDerivedType(tag: DW_TAG_member, name: "bevfac1_mapping", scope: !9224, file: !2376, line: 269, baseType: !375, size: 8, offset: 4192)
!9369 = !DIDerivedType(tag: DW_TAG_member, name: "bevfac2_mapping", scope: !9224, file: !2376, line: 269, baseType: !375, size: 8, offset: 4200)
!9370 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !9224, file: !2376, line: 271, baseType: !2647, size: 16, offset: 4208)
!9371 = !DILocation(line: 1777, column: 9, scope: !9216)
!9372 = !DILocalVariable(name: "nu", scope: !9216, file: !3, line: 1778, type: !9373)
!9373 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9374, size: 64)
!9374 = !DIDerivedType(tag: DW_TAG_typedef, name: "Nurb", file: !2376, line: 166, baseType: !9375)
!9375 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Nurb", file: !2376, line: 147, size: 704, elements: !9376)
!9376 = !{!9377, !9379, !9380, !9381, !9382, !9383, !9384, !9385, !9386, !9387, !9388, !9389, !9390, !9391, !9392, !9393, !9394, !9395, !9407, !9409, !9410, !9411}
!9377 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !9375, file: !2376, line: 148, baseType: !9378, size: 64)
!9378 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9375, size: 64)
!9379 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !9375, file: !2376, line: 148, baseType: !9378, size: 64, offset: 64)
!9380 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !9375, file: !2376, line: 149, baseType: !399, size: 16, offset: 128)
!9381 = !DIDerivedType(tag: DW_TAG_member, name: "mat_nr", scope: !9375, file: !2376, line: 150, baseType: !399, size: 16, offset: 144)
!9382 = !DIDerivedType(tag: DW_TAG_member, name: "hide", scope: !9375, file: !2376, line: 151, baseType: !399, size: 16, offset: 160)
!9383 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !9375, file: !2376, line: 151, baseType: !399, size: 16, offset: 176)
!9384 = !DIDerivedType(tag: DW_TAG_member, name: "pntsu", scope: !9375, file: !2376, line: 152, baseType: !98, size: 32, offset: 192)
!9385 = !DIDerivedType(tag: DW_TAG_member, name: "pntsv", scope: !9375, file: !2376, line: 152, baseType: !98, size: 32, offset: 224)
!9386 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !9375, file: !2376, line: 153, baseType: !1292, size: 32, offset: 256)
!9387 = !DIDerivedType(tag: DW_TAG_member, name: "resolu", scope: !9375, file: !2376, line: 154, baseType: !399, size: 16, offset: 288)
!9388 = !DIDerivedType(tag: DW_TAG_member, name: "resolv", scope: !9375, file: !2376, line: 154, baseType: !399, size: 16, offset: 304)
!9389 = !DIDerivedType(tag: DW_TAG_member, name: "orderu", scope: !9375, file: !2376, line: 155, baseType: !399, size: 16, offset: 320)
!9390 = !DIDerivedType(tag: DW_TAG_member, name: "orderv", scope: !9375, file: !2376, line: 155, baseType: !399, size: 16, offset: 336)
!9391 = !DIDerivedType(tag: DW_TAG_member, name: "flagu", scope: !9375, file: !2376, line: 156, baseType: !399, size: 16, offset: 352)
!9392 = !DIDerivedType(tag: DW_TAG_member, name: "flagv", scope: !9375, file: !2376, line: 156, baseType: !399, size: 16, offset: 368)
!9393 = !DIDerivedType(tag: DW_TAG_member, name: "knotsu", scope: !9375, file: !2376, line: 158, baseType: !975, size: 64, offset: 384)
!9394 = !DIDerivedType(tag: DW_TAG_member, name: "knotsv", scope: !9375, file: !2376, line: 158, baseType: !975, size: 64, offset: 448)
!9395 = !DIDerivedType(tag: DW_TAG_member, name: "bp", scope: !9375, file: !2376, line: 159, baseType: !9396, size: 64, offset: 512)
!9396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9397, size: 64)
!9397 = !DIDerivedType(tag: DW_TAG_typedef, name: "BPoint", file: !2376, line: 141, baseType: !9398)
!9398 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BPoint", file: !2376, line: 136, size: 288, elements: !9399)
!9399 = !{!9400, !9401, !9402, !9403, !9404, !9405, !9406}
!9400 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !9398, file: !2376, line: 137, baseType: !408, size: 128)
!9401 = !DIDerivedType(tag: DW_TAG_member, name: "alfa", scope: !9398, file: !2376, line: 138, baseType: !396, size: 32, offset: 128)
!9402 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !9398, file: !2376, line: 138, baseType: !396, size: 32, offset: 160)
!9403 = !DIDerivedType(tag: DW_TAG_member, name: "f1", scope: !9398, file: !2376, line: 139, baseType: !399, size: 16, offset: 192)
!9404 = !DIDerivedType(tag: DW_TAG_member, name: "hide", scope: !9398, file: !2376, line: 139, baseType: !399, size: 16, offset: 208)
!9405 = !DIDerivedType(tag: DW_TAG_member, name: "radius", scope: !9398, file: !2376, line: 140, baseType: !396, size: 32, offset: 224)
!9406 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !9398, file: !2376, line: 140, baseType: !396, size: 32, offset: 256)
!9407 = !DIDerivedType(tag: DW_TAG_member, name: "bezt", scope: !9375, file: !2376, line: 160, baseType: !9408, size: 64, offset: 576)
!9408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2375, size: 64)
!9409 = !DIDerivedType(tag: DW_TAG_member, name: "tilt_interp", scope: !9375, file: !2376, line: 162, baseType: !399, size: 16, offset: 640)
!9410 = !DIDerivedType(tag: DW_TAG_member, name: "radius_interp", scope: !9375, file: !2376, line: 163, baseType: !399, size: 16, offset: 656)
!9411 = !DIDerivedType(tag: DW_TAG_member, name: "charidx", scope: !9375, file: !2376, line: 165, baseType: !98, size: 32, offset: 672)
!9412 = !DILocation(line: 1778, column: 8, scope: !9216)
!9413 = !DILocation(line: 1780, column: 6, scope: !9216)
!9414 = !DILocation(line: 1780, column: 14, scope: !9216)
!9415 = !DILocation(line: 1780, column: 4, scope: !9216)
!9416 = !DILocation(line: 1781, column: 2, scope: !9216)
!9417 = !DILocation(line: 1781, column: 9, scope: !9216)
!9418 = !DILocation(line: 1782, column: 7, scope: !9419)
!9419 = distinct !DILexicalBlock(scope: !9420, file: !3, line: 1782, column: 7)
!9420 = distinct !DILexicalBlock(scope: !9216, file: !3, line: 1781, column: 13)
!9421 = !DILocation(line: 1782, column: 11, scope: !9419)
!9422 = !DILocation(line: 1782, column: 14, scope: !9419)
!9423 = !DILocation(line: 1782, column: 16, scope: !9419)
!9424 = !DILocation(line: 1782, column: 19, scope: !9419)
!9425 = !DILocation(line: 1782, column: 22, scope: !9419)
!9426 = !DILocation(line: 1782, column: 26, scope: !9419)
!9427 = !DILocation(line: 1782, column: 7, scope: !9420)
!9428 = !DILocation(line: 1784, column: 16, scope: !9429)
!9429 = distinct !DILexicalBlock(scope: !9419, file: !3, line: 1782, column: 35)
!9430 = !DILocation(line: 1784, column: 39, scope: !9429)
!9431 = !DILocation(line: 1784, column: 4, scope: !9429)
!9432 = !DILocation(line: 1787, column: 14, scope: !9429)
!9433 = !DILocation(line: 1787, column: 39, scope: !9429)
!9434 = !DILocation(line: 1787, column: 43, scope: !9429)
!9435 = !DILocation(line: 1787, column: 38, scope: !9429)
!9436 = !DILocation(line: 1787, column: 24, scope: !9429)
!9437 = !DILocation(line: 1787, column: 51, scope: !9429)
!9438 = !DILocation(line: 1787, column: 55, scope: !9429)
!9439 = !DILocation(line: 1787, column: 4, scope: !9429)
!9440 = !DILocation(line: 1788, column: 8, scope: !9441)
!9441 = distinct !DILexicalBlock(scope: !9429, file: !3, line: 1788, column: 8)
!9442 = !DILocation(line: 1788, column: 12, scope: !9441)
!9443 = !DILocation(line: 1788, column: 15, scope: !9441)
!9444 = !DILocation(line: 1788, column: 8, scope: !9429)
!9445 = !DILocation(line: 1788, column: 45, scope: !9441)
!9446 = !DILocation(line: 1788, column: 49, scope: !9441)
!9447 = !DILocation(line: 1788, column: 52, scope: !9441)
!9448 = !DILocation(line: 1788, column: 64, scope: !9441)
!9449 = !DILocation(line: 1788, column: 27, scope: !9441)
!9450 = !DILocation(line: 1789, column: 8, scope: !9451)
!9451 = distinct !DILexicalBlock(scope: !9429, file: !3, line: 1789, column: 8)
!9452 = !DILocation(line: 1789, column: 12, scope: !9451)
!9453 = !DILocation(line: 1789, column: 8, scope: !9429)
!9454 = !DILocation(line: 1789, column: 32, scope: !9451)
!9455 = !DILocation(line: 1789, column: 36, scope: !9451)
!9456 = !DILocation(line: 1789, column: 40, scope: !9451)
!9457 = !DILocation(line: 1789, column: 17, scope: !9451)
!9458 = !DILocation(line: 1791, column: 8, scope: !9459)
!9459 = distinct !DILexicalBlock(scope: !9429, file: !3, line: 1791, column: 8)
!9460 = !DILocation(line: 1791, column: 12, scope: !9459)
!9461 = !DILocation(line: 1791, column: 8, scope: !9429)
!9462 = !DILocation(line: 1792, column: 15, scope: !9463)
!9463 = distinct !DILexicalBlock(scope: !9459, file: !3, line: 1791, column: 19)
!9464 = !DILocation(line: 1792, column: 25, scope: !9463)
!9465 = !DILocation(line: 1792, column: 29, scope: !9463)
!9466 = !DILocation(line: 1792, column: 33, scope: !9463)
!9467 = !DILocation(line: 1792, column: 38, scope: !9463)
!9468 = !DILocation(line: 1792, column: 42, scope: !9463)
!9469 = !DILocation(line: 1792, column: 5, scope: !9463)
!9470 = !DILocation(line: 1793, column: 17, scope: !9463)
!9471 = !DILocation(line: 1793, column: 39, scope: !9463)
!9472 = !DILocation(line: 1793, column: 43, scope: !9463)
!9473 = !DILocation(line: 1793, column: 53, scope: !9463)
!9474 = !DILocation(line: 1793, column: 58, scope: !9463)
!9475 = !DILocation(line: 1793, column: 62, scope: !9463)
!9476 = !DILocation(line: 1793, column: 5, scope: !9463)
!9477 = !DILocation(line: 1794, column: 17, scope: !9463)
!9478 = !DILocation(line: 1794, column: 38, scope: !9463)
!9479 = !DILocation(line: 1794, column: 42, scope: !9463)
!9480 = !DILocation(line: 1794, column: 50, scope: !9463)
!9481 = !DILocation(line: 1794, column: 54, scope: !9463)
!9482 = !DILocation(line: 1794, column: 5, scope: !9463)
!9483 = !DILocation(line: 1795, column: 4, scope: !9463)
!9484 = !DILocation(line: 1798, column: 9, scope: !9485)
!9485 = distinct !DILexicalBlock(scope: !9459, file: !3, line: 1796, column: 9)
!9486 = !DILocation(line: 1798, column: 13, scope: !9485)
!9487 = !DILocation(line: 1798, column: 18, scope: !9485)
!9488 = !DILocation(line: 1798, column: 7, scope: !9485)
!9489 = !DILocation(line: 1799, column: 5, scope: !9485)
!9490 = !DILocation(line: 1799, column: 12, scope: !9485)
!9491 = !DILocation(line: 1800, column: 18, scope: !9492)
!9492 = distinct !DILexicalBlock(scope: !9485, file: !3, line: 1799, column: 16)
!9493 = !DILocation(line: 1800, column: 39, scope: !9492)
!9494 = !DILocation(line: 1800, column: 6, scope: !9492)
!9495 = !DILocation(line: 1801, column: 10, scope: !9492)
!9496 = !DILocation(line: 1801, column: 14, scope: !9492)
!9497 = !DILocation(line: 1801, column: 8, scope: !9492)
!9498 = distinct !{!9498, !9489, !9499}
!9499 = !DILocation(line: 1802, column: 5, scope: !9485)
!9500 = !DILocation(line: 1803, column: 9, scope: !9485)
!9501 = !DILocation(line: 1803, column: 13, scope: !9485)
!9502 = !DILocation(line: 1803, column: 18, scope: !9485)
!9503 = !DILocation(line: 1803, column: 7, scope: !9485)
!9504 = !DILocation(line: 1804, column: 5, scope: !9485)
!9505 = !DILocation(line: 1804, column: 12, scope: !9485)
!9506 = !DILocation(line: 1805, column: 10, scope: !9507)
!9507 = distinct !DILexicalBlock(scope: !9508, file: !3, line: 1805, column: 10)
!9508 = distinct !DILexicalBlock(scope: !9485, file: !3, line: 1804, column: 16)
!9509 = !DILocation(line: 1805, column: 14, scope: !9507)
!9510 = !DILocation(line: 1805, column: 19, scope: !9507)
!9511 = !DILocation(line: 1805, column: 10, scope: !9508)
!9512 = !DILocation(line: 1806, column: 19, scope: !9507)
!9513 = !DILocation(line: 1806, column: 42, scope: !9507)
!9514 = !DILocation(line: 1806, column: 46, scope: !9507)
!9515 = !DILocation(line: 1806, column: 53, scope: !9507)
!9516 = !DILocation(line: 1806, column: 57, scope: !9507)
!9517 = !DILocation(line: 1806, column: 7, scope: !9507)
!9518 = !DILocation(line: 1808, column: 19, scope: !9519)
!9519 = distinct !DILexicalBlock(scope: !9507, file: !3, line: 1807, column: 11)
!9520 = !DILocation(line: 1808, column: 39, scope: !9519)
!9521 = !DILocation(line: 1808, column: 43, scope: !9519)
!9522 = !DILocation(line: 1808, column: 49, scope: !9519)
!9523 = !DILocation(line: 1808, column: 53, scope: !9519)
!9524 = !DILocation(line: 1808, column: 48, scope: !9519)
!9525 = !DILocation(line: 1808, column: 60, scope: !9519)
!9526 = !DILocation(line: 1808, column: 64, scope: !9519)
!9527 = !DILocation(line: 1808, column: 7, scope: !9519)
!9528 = !DILocation(line: 1809, column: 11, scope: !9529)
!9529 = distinct !DILexicalBlock(scope: !9519, file: !3, line: 1809, column: 11)
!9530 = !DILocation(line: 1809, column: 15, scope: !9529)
!9531 = !DILocation(line: 1809, column: 11, scope: !9519)
!9532 = !DILocation(line: 1809, column: 33, scope: !9529)
!9533 = !DILocation(line: 1809, column: 43, scope: !9529)
!9534 = !DILocation(line: 1809, column: 53, scope: !9529)
!9535 = !DILocation(line: 1809, column: 69, scope: !9529)
!9536 = !DILocation(line: 1809, column: 73, scope: !9529)
!9537 = !DILocation(line: 1809, column: 23, scope: !9529)
!9538 = !DILocation(line: 1810, column: 11, scope: !9539)
!9539 = distinct !DILexicalBlock(scope: !9519, file: !3, line: 1810, column: 11)
!9540 = !DILocation(line: 1810, column: 15, scope: !9539)
!9541 = !DILocation(line: 1810, column: 11, scope: !9519)
!9542 = !DILocation(line: 1810, column: 33, scope: !9539)
!9543 = !DILocation(line: 1810, column: 43, scope: !9539)
!9544 = !DILocation(line: 1810, column: 53, scope: !9539)
!9545 = !DILocation(line: 1810, column: 69, scope: !9539)
!9546 = !DILocation(line: 1810, column: 73, scope: !9539)
!9547 = !DILocation(line: 1810, column: 23, scope: !9539)
!9548 = !DILocation(line: 1812, column: 10, scope: !9508)
!9549 = !DILocation(line: 1812, column: 14, scope: !9508)
!9550 = !DILocation(line: 1812, column: 8, scope: !9508)
!9551 = distinct !{!9551, !9504, !9552}
!9552 = !DILocation(line: 1813, column: 5, scope: !9485)
!9553 = !DILocation(line: 1815, column: 3, scope: !9429)
!9554 = !DILocation(line: 1816, column: 7, scope: !9420)
!9555 = !DILocation(line: 1816, column: 11, scope: !9420)
!9556 = !DILocation(line: 1816, column: 14, scope: !9420)
!9557 = !DILocation(line: 1816, column: 5, scope: !9420)
!9558 = distinct !{!9558, !9416, !9559}
!9559 = !DILocation(line: 1817, column: 2, scope: !9216)
!9560 = !DILocation(line: 1820, column: 10, scope: !9216)
!9561 = !DILocation(line: 1820, column: 2, scope: !9216)
!9562 = !DILocation(line: 1821, column: 1, scope: !9216)
!9563 = distinct !DISubprogram(name: "write_mballs", scope: !3, file: !3, line: 1749, type: !7324, scopeLine: 1750, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !5641)
!9564 = !DILocalVariable(name: "wd", arg: 1, scope: !9563, file: !3, line: 1749, type: !5820)
!9565 = !DILocation(line: 1749, column: 37, scope: !9563)
!9566 = !DILocalVariable(name: "idbase", arg: 2, scope: !9563, file: !3, line: 1749, type: !565)
!9567 = !DILocation(line: 1749, column: 51, scope: !9563)
!9568 = !DILocalVariable(name: "mb", scope: !9563, file: !3, line: 1751, type: !9569)
!9569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9570, size: 64)
!9570 = !DIDerivedType(tag: DW_TAG_typedef, name: "MetaBall", file: !9571, line: 95, baseType: !9572)
!9571 = !DIFile(filename: "blender/source/blender/makesdna/DNA_meta_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!9572 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MetaBall", file: !9571, line: 64, size: 1984, elements: !9573)
!9573 = !{!9574, !9575, !9576, !9577, !9578, !9579, !9580, !9581, !9582, !9583, !9584, !9585, !9586, !9587, !9588, !9589, !9590, !9591, !9592}
!9574 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !9572, file: !9571, line: 65, baseType: !427, size: 960)
!9575 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !9572, file: !9571, line: 66, baseType: !833, size: 64, offset: 960)
!9576 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !9572, file: !9571, line: 68, baseType: !388, size: 128, offset: 1024)
!9577 = !DIDerivedType(tag: DW_TAG_member, name: "disp", scope: !9572, file: !9571, line: 69, baseType: !388, size: 128, offset: 1152)
!9578 = !DIDerivedType(tag: DW_TAG_member, name: "editelems", scope: !9572, file: !9571, line: 70, baseType: !565, size: 64, offset: 1280)
!9579 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !9572, file: !9571, line: 71, baseType: !978, size: 64, offset: 1344)
!9580 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !9572, file: !9571, line: 74, baseType: !3783, size: 64, offset: 1408)
!9581 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !9572, file: !9571, line: 76, baseType: !375, size: 8, offset: 1472)
!9582 = !DIDerivedType(tag: DW_TAG_member, name: "flag2", scope: !9572, file: !9571, line: 76, baseType: !375, size: 8, offset: 1480)
!9583 = !DIDerivedType(tag: DW_TAG_member, name: "totcol", scope: !9572, file: !9571, line: 77, baseType: !399, size: 16, offset: 1488)
!9584 = !DIDerivedType(tag: DW_TAG_member, name: "texflag", scope: !9572, file: !9571, line: 78, baseType: !399, size: 16, offset: 1504)
!9585 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !9572, file: !9571, line: 78, baseType: !399, size: 16, offset: 1520)
!9586 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !9572, file: !9571, line: 81, baseType: !779, size: 96, offset: 1536)
!9587 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !9572, file: !9571, line: 82, baseType: !779, size: 96, offset: 1632)
!9588 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !9572, file: !9571, line: 83, baseType: !779, size: 96, offset: 1728)
!9589 = !DIDerivedType(tag: DW_TAG_member, name: "wiresize", scope: !9572, file: !9571, line: 85, baseType: !396, size: 32, offset: 1824)
!9590 = !DIDerivedType(tag: DW_TAG_member, name: "rendersize", scope: !9572, file: !9571, line: 85, baseType: !396, size: 32, offset: 1856)
!9591 = !DIDerivedType(tag: DW_TAG_member, name: "thresh", scope: !9572, file: !9571, line: 90, baseType: !396, size: 32, offset: 1888)
!9592 = !DIDerivedType(tag: DW_TAG_member, name: "lastelem", scope: !9572, file: !9571, line: 94, baseType: !9593, size: 64, offset: 1920)
!9593 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9594, size: 64)
!9594 = !DIDerivedType(tag: DW_TAG_typedef, name: "MetaElem", file: !9571, line: 62, baseType: !9595)
!9595 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MetaElem", file: !9571, line: 44, size: 832, elements: !9596)
!9596 = !{!9597, !9599, !9600, !9601, !9602, !9603, !9604, !9605, !9606, !9607, !9608, !9609, !9610, !9611, !9612, !9613, !9614, !9615, !9616, !9617}
!9597 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !9595, file: !9571, line: 45, baseType: !9598, size: 64)
!9598 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9595, size: 64)
!9599 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !9595, file: !9571, line: 45, baseType: !9598, size: 64, offset: 64)
!9600 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !9595, file: !9571, line: 47, baseType: !4427, size: 64, offset: 128)
!9601 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !9595, file: !9571, line: 49, baseType: !399, size: 16, offset: 192)
!9602 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !9595, file: !9571, line: 49, baseType: !399, size: 16, offset: 208)
!9603 = !DIDerivedType(tag: DW_TAG_member, name: "selcol1", scope: !9595, file: !9571, line: 49, baseType: !399, size: 16, offset: 224)
!9604 = !DIDerivedType(tag: DW_TAG_member, name: "selcol2", scope: !9595, file: !9571, line: 49, baseType: !399, size: 16, offset: 240)
!9605 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !9595, file: !9571, line: 50, baseType: !396, size: 32, offset: 256)
!9606 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !9595, file: !9571, line: 50, baseType: !396, size: 32, offset: 288)
!9607 = !DIDerivedType(tag: DW_TAG_member, name: "z", scope: !9595, file: !9571, line: 50, baseType: !396, size: 32, offset: 320)
!9608 = !DIDerivedType(tag: DW_TAG_member, name: "quat", scope: !9595, file: !9571, line: 51, baseType: !408, size: 128, offset: 352)
!9609 = !DIDerivedType(tag: DW_TAG_member, name: "expx", scope: !9595, file: !9571, line: 52, baseType: !396, size: 32, offset: 480)
!9610 = !DIDerivedType(tag: DW_TAG_member, name: "expy", scope: !9595, file: !9571, line: 53, baseType: !396, size: 32, offset: 512)
!9611 = !DIDerivedType(tag: DW_TAG_member, name: "expz", scope: !9595, file: !9571, line: 54, baseType: !396, size: 32, offset: 544)
!9612 = !DIDerivedType(tag: DW_TAG_member, name: "rad", scope: !9595, file: !9571, line: 55, baseType: !396, size: 32, offset: 576)
!9613 = !DIDerivedType(tag: DW_TAG_member, name: "rad2", scope: !9595, file: !9571, line: 56, baseType: !396, size: 32, offset: 608)
!9614 = !DIDerivedType(tag: DW_TAG_member, name: "s", scope: !9595, file: !9571, line: 57, baseType: !396, size: 32, offset: 640)
!9615 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !9595, file: !9571, line: 58, baseType: !396, size: 32, offset: 672)
!9616 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !9595, file: !9571, line: 60, baseType: !975, size: 64, offset: 704)
!9617 = !DIDerivedType(tag: DW_TAG_member, name: "imat", scope: !9595, file: !9571, line: 60, baseType: !975, size: 64, offset: 768)
!9618 = !DILocation(line: 1751, column: 12, scope: !9563)
!9619 = !DILocalVariable(name: "ml", scope: !9563, file: !3, line: 1752, type: !9593)
!9620 = !DILocation(line: 1752, column: 12, scope: !9563)
!9621 = !DILocation(line: 1754, column: 6, scope: !9563)
!9622 = !DILocation(line: 1754, column: 14, scope: !9563)
!9623 = !DILocation(line: 1754, column: 4, scope: !9563)
!9624 = !DILocation(line: 1755, column: 2, scope: !9563)
!9625 = !DILocation(line: 1755, column: 9, scope: !9563)
!9626 = !DILocation(line: 1756, column: 7, scope: !9627)
!9627 = distinct !DILexicalBlock(scope: !9628, file: !3, line: 1756, column: 7)
!9628 = distinct !DILexicalBlock(scope: !9563, file: !3, line: 1755, column: 13)
!9629 = !DILocation(line: 1756, column: 11, scope: !9627)
!9630 = !DILocation(line: 1756, column: 14, scope: !9627)
!9631 = !DILocation(line: 1756, column: 16, scope: !9627)
!9632 = !DILocation(line: 1756, column: 19, scope: !9627)
!9633 = !DILocation(line: 1756, column: 22, scope: !9627)
!9634 = !DILocation(line: 1756, column: 26, scope: !9627)
!9635 = !DILocation(line: 1756, column: 7, scope: !9628)
!9636 = !DILocation(line: 1758, column: 16, scope: !9637)
!9637 = distinct !DILexicalBlock(scope: !9627, file: !3, line: 1756, column: 35)
!9638 = !DILocation(line: 1758, column: 42, scope: !9637)
!9639 = !DILocation(line: 1758, column: 4, scope: !9637)
!9640 = !DILocation(line: 1759, column: 8, scope: !9641)
!9641 = distinct !DILexicalBlock(scope: !9637, file: !3, line: 1759, column: 8)
!9642 = !DILocation(line: 1759, column: 12, scope: !9641)
!9643 = !DILocation(line: 1759, column: 15, scope: !9641)
!9644 = !DILocation(line: 1759, column: 8, scope: !9637)
!9645 = !DILocation(line: 1759, column: 45, scope: !9641)
!9646 = !DILocation(line: 1759, column: 49, scope: !9641)
!9647 = !DILocation(line: 1759, column: 52, scope: !9641)
!9648 = !DILocation(line: 1759, column: 64, scope: !9641)
!9649 = !DILocation(line: 1759, column: 27, scope: !9641)
!9650 = !DILocation(line: 1762, column: 14, scope: !9637)
!9651 = !DILocation(line: 1762, column: 39, scope: !9637)
!9652 = !DILocation(line: 1762, column: 43, scope: !9637)
!9653 = !DILocation(line: 1762, column: 38, scope: !9637)
!9654 = !DILocation(line: 1762, column: 24, scope: !9637)
!9655 = !DILocation(line: 1762, column: 51, scope: !9637)
!9656 = !DILocation(line: 1762, column: 55, scope: !9637)
!9657 = !DILocation(line: 1762, column: 4, scope: !9637)
!9658 = !DILocation(line: 1763, column: 8, scope: !9659)
!9659 = distinct !DILexicalBlock(scope: !9637, file: !3, line: 1763, column: 8)
!9660 = !DILocation(line: 1763, column: 12, scope: !9659)
!9661 = !DILocation(line: 1763, column: 8, scope: !9637)
!9662 = !DILocation(line: 1763, column: 32, scope: !9659)
!9663 = !DILocation(line: 1763, column: 36, scope: !9659)
!9664 = !DILocation(line: 1763, column: 40, scope: !9659)
!9665 = !DILocation(line: 1763, column: 17, scope: !9659)
!9666 = !DILocation(line: 1765, column: 8, scope: !9637)
!9667 = !DILocation(line: 1765, column: 12, scope: !9637)
!9668 = !DILocation(line: 1765, column: 18, scope: !9637)
!9669 = !DILocation(line: 1765, column: 6, scope: !9637)
!9670 = !DILocation(line: 1766, column: 4, scope: !9637)
!9671 = !DILocation(line: 1766, column: 11, scope: !9637)
!9672 = !DILocation(line: 1767, column: 17, scope: !9673)
!9673 = distinct !DILexicalBlock(scope: !9637, file: !3, line: 1766, column: 15)
!9674 = !DILocation(line: 1767, column: 42, scope: !9673)
!9675 = !DILocation(line: 1767, column: 5, scope: !9673)
!9676 = !DILocation(line: 1768, column: 9, scope: !9673)
!9677 = !DILocation(line: 1768, column: 13, scope: !9673)
!9678 = !DILocation(line: 1768, column: 7, scope: !9673)
!9679 = distinct !{!9679, !9670, !9680}
!9680 = !DILocation(line: 1769, column: 4, scope: !9637)
!9681 = !DILocation(line: 1770, column: 3, scope: !9637)
!9682 = !DILocation(line: 1771, column: 7, scope: !9628)
!9683 = !DILocation(line: 1771, column: 11, scope: !9628)
!9684 = !DILocation(line: 1771, column: 14, scope: !9628)
!9685 = !DILocation(line: 1771, column: 5, scope: !9628)
!9686 = distinct !{!9686, !9624, !9687}
!9687 = !DILocation(line: 1772, column: 2, scope: !9563)
!9688 = !DILocation(line: 1773, column: 1, scope: !9563)
!9689 = distinct !DISubprogram(name: "write_images", scope: !3, file: !3, line: 2094, type: !7324, scopeLine: 2095, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !5641)
!9690 = !DILocalVariable(name: "wd", arg: 1, scope: !9689, file: !3, line: 2094, type: !5820)
!9691 = !DILocation(line: 2094, column: 37, scope: !9689)
!9692 = !DILocalVariable(name: "idbase", arg: 2, scope: !9689, file: !3, line: 2094, type: !565)
!9693 = !DILocation(line: 2094, column: 51, scope: !9689)
!9694 = !DILocalVariable(name: "ima", scope: !9689, file: !3, line: 2096, type: !9695)
!9695 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9696, size: 64)
!9696 = !DIDerivedType(tag: DW_TAG_typedef, name: "Image", file: !1047, line: 127, baseType: !1656)
!9697 = !DILocation(line: 2096, column: 9, scope: !9689)
!9698 = !DILocalVariable(name: "pf", scope: !9689, file: !3, line: 2097, type: !9699)
!9699 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9700, size: 64)
!9700 = !DIDerivedType(tag: DW_TAG_typedef, name: "PackedFile", file: !1693, line: 41, baseType: !1692)
!9701 = !DILocation(line: 2097, column: 15, scope: !9689)
!9702 = !DILocation(line: 2100, column: 7, scope: !9689)
!9703 = !DILocation(line: 2100, column: 15, scope: !9689)
!9704 = !DILocation(line: 2100, column: 5, scope: !9689)
!9705 = !DILocation(line: 2101, column: 2, scope: !9689)
!9706 = !DILocation(line: 2101, column: 9, scope: !9689)
!9707 = !DILocation(line: 2102, column: 7, scope: !9708)
!9708 = distinct !DILexicalBlock(scope: !9709, file: !3, line: 2102, column: 7)
!9709 = distinct !DILexicalBlock(scope: !9689, file: !3, line: 2101, column: 14)
!9710 = !DILocation(line: 2102, column: 12, scope: !9708)
!9711 = !DILocation(line: 2102, column: 15, scope: !9708)
!9712 = !DILocation(line: 2102, column: 17, scope: !9708)
!9713 = !DILocation(line: 2102, column: 20, scope: !9708)
!9714 = !DILocation(line: 2102, column: 23, scope: !9708)
!9715 = !DILocation(line: 2102, column: 27, scope: !9708)
!9716 = !DILocation(line: 2102, column: 7, scope: !9709)
!9717 = !DILocation(line: 2104, column: 16, scope: !9718)
!9718 = distinct !DILexicalBlock(scope: !9708, file: !3, line: 2102, column: 36)
!9719 = !DILocation(line: 2104, column: 39, scope: !9718)
!9720 = !DILocation(line: 2104, column: 4, scope: !9718)
!9721 = !DILocation(line: 2105, column: 8, scope: !9722)
!9722 = distinct !DILexicalBlock(scope: !9718, file: !3, line: 2105, column: 8)
!9723 = !DILocation(line: 2105, column: 13, scope: !9722)
!9724 = !DILocation(line: 2105, column: 16, scope: !9722)
!9725 = !DILocation(line: 2105, column: 8, scope: !9718)
!9726 = !DILocation(line: 2105, column: 46, scope: !9722)
!9727 = !DILocation(line: 2105, column: 51, scope: !9722)
!9728 = !DILocation(line: 2105, column: 54, scope: !9722)
!9729 = !DILocation(line: 2105, column: 66, scope: !9722)
!9730 = !DILocation(line: 2105, column: 28, scope: !9722)
!9731 = !DILocation(line: 2107, column: 8, scope: !9732)
!9732 = distinct !DILexicalBlock(scope: !9718, file: !3, line: 2107, column: 8)
!9733 = !DILocation(line: 2107, column: 13, scope: !9732)
!9734 = !DILocation(line: 2107, column: 8, scope: !9718)
!9735 = !DILocation(line: 2108, column: 10, scope: !9736)
!9736 = distinct !DILexicalBlock(scope: !9732, file: !3, line: 2107, column: 25)
!9737 = !DILocation(line: 2108, column: 15, scope: !9736)
!9738 = !DILocation(line: 2108, column: 8, scope: !9736)
!9739 = !DILocation(line: 2109, column: 17, scope: !9736)
!9740 = !DILocation(line: 2109, column: 44, scope: !9736)
!9741 = !DILocation(line: 2109, column: 5, scope: !9736)
!9742 = !DILocation(line: 2110, column: 15, scope: !9736)
!9743 = !DILocation(line: 2110, column: 25, scope: !9736)
!9744 = !DILocation(line: 2110, column: 29, scope: !9736)
!9745 = !DILocation(line: 2110, column: 35, scope: !9736)
!9746 = !DILocation(line: 2110, column: 39, scope: !9736)
!9747 = !DILocation(line: 2110, column: 5, scope: !9736)
!9748 = !DILocation(line: 2111, column: 4, scope: !9736)
!9749 = !DILocation(line: 2113, column: 19, scope: !9718)
!9750 = !DILocation(line: 2113, column: 23, scope: !9718)
!9751 = !DILocation(line: 2113, column: 28, scope: !9718)
!9752 = !DILocation(line: 2113, column: 4, scope: !9718)
!9753 = !DILocation(line: 2114, column: 3, scope: !9718)
!9754 = !DILocation(line: 2115, column: 8, scope: !9709)
!9755 = !DILocation(line: 2115, column: 13, scope: !9709)
!9756 = !DILocation(line: 2115, column: 16, scope: !9709)
!9757 = !DILocation(line: 2115, column: 6, scope: !9709)
!9758 = distinct !{!9758, !9705, !9759}
!9759 = !DILocation(line: 2116, column: 2, scope: !9689)
!9760 = !DILocation(line: 2118, column: 10, scope: !9689)
!9761 = !DILocation(line: 2118, column: 2, scope: !9689)
!9762 = !DILocation(line: 2119, column: 1, scope: !9689)
!9763 = distinct !DISubprogram(name: "write_cameras", scope: !3, file: !3, line: 1731, type: !7324, scopeLine: 1732, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !5641)
!9764 = !DILocalVariable(name: "wd", arg: 1, scope: !9763, file: !3, line: 1731, type: !5820)
!9765 = !DILocation(line: 1731, column: 38, scope: !9763)
!9766 = !DILocalVariable(name: "idbase", arg: 2, scope: !9763, file: !3, line: 1731, type: !565)
!9767 = !DILocation(line: 1731, column: 52, scope: !9763)
!9768 = !DILocalVariable(name: "cam", scope: !9763, file: !3, line: 1733, type: !9769)
!9769 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9770, size: 64)
!9770 = !DIDerivedType(tag: DW_TAG_typedef, name: "Camera", file: !9771, line: 71, baseType: !9772)
!9771 = !DIFile(filename: "blender/source/blender/makesdna/DNA_camera_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!9772 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Camera", file: !9771, line: 47, size: 1600, elements: !9773)
!9773 = !{!9774, !9775, !9776, !9777, !9778, !9779, !9780, !9781, !9782, !9783, !9784, !9785, !9786, !9787, !9788, !9789, !9790, !9791, !9792, !9793}
!9774 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !9772, file: !9771, line: 48, baseType: !427, size: 960)
!9775 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !9772, file: !9771, line: 49, baseType: !833, size: 64, offset: 960)
!9776 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !9772, file: !9771, line: 51, baseType: !375, size: 8, offset: 1024)
!9777 = !DIDerivedType(tag: DW_TAG_member, name: "dtx", scope: !9772, file: !9771, line: 52, baseType: !375, size: 8, offset: 1032)
!9778 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !9772, file: !9771, line: 53, baseType: !399, size: 16, offset: 1040)
!9779 = !DIDerivedType(tag: DW_TAG_member, name: "passepartalpha", scope: !9772, file: !9771, line: 54, baseType: !396, size: 32, offset: 1056)
!9780 = !DIDerivedType(tag: DW_TAG_member, name: "clipsta", scope: !9772, file: !9771, line: 55, baseType: !396, size: 32, offset: 1088)
!9781 = !DIDerivedType(tag: DW_TAG_member, name: "clipend", scope: !9772, file: !9771, line: 55, baseType: !396, size: 32, offset: 1120)
!9782 = !DIDerivedType(tag: DW_TAG_member, name: "lens", scope: !9772, file: !9771, line: 56, baseType: !396, size: 32, offset: 1152)
!9783 = !DIDerivedType(tag: DW_TAG_member, name: "ortho_scale", scope: !9772, file: !9771, line: 56, baseType: !396, size: 32, offset: 1184)
!9784 = !DIDerivedType(tag: DW_TAG_member, name: "drawsize", scope: !9772, file: !9771, line: 56, baseType: !396, size: 32, offset: 1216)
!9785 = !DIDerivedType(tag: DW_TAG_member, name: "sensor_x", scope: !9772, file: !9771, line: 57, baseType: !396, size: 32, offset: 1248)
!9786 = !DIDerivedType(tag: DW_TAG_member, name: "sensor_y", scope: !9772, file: !9771, line: 57, baseType: !396, size: 32, offset: 1280)
!9787 = !DIDerivedType(tag: DW_TAG_member, name: "shiftx", scope: !9772, file: !9771, line: 58, baseType: !396, size: 32, offset: 1312)
!9788 = !DIDerivedType(tag: DW_TAG_member, name: "shifty", scope: !9772, file: !9771, line: 58, baseType: !396, size: 32, offset: 1344)
!9789 = !DIDerivedType(tag: DW_TAG_member, name: "YF_dofdist", scope: !9772, file: !9771, line: 63, baseType: !396, size: 32, offset: 1376)
!9790 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !9772, file: !9771, line: 65, baseType: !978, size: 64, offset: 1408)
!9791 = !DIDerivedType(tag: DW_TAG_member, name: "dof_ob", scope: !9772, file: !9771, line: 67, baseType: !423, size: 64, offset: 1472)
!9792 = !DIDerivedType(tag: DW_TAG_member, name: "sensor_fit", scope: !9772, file: !9771, line: 69, baseType: !375, size: 8, offset: 1536)
!9793 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !9772, file: !9771, line: 70, baseType: !1730, size: 56, offset: 1544)
!9794 = !DILocation(line: 1733, column: 10, scope: !9763)
!9795 = !DILocation(line: 1735, column: 7, scope: !9763)
!9796 = !DILocation(line: 1735, column: 15, scope: !9763)
!9797 = !DILocation(line: 1735, column: 5, scope: !9763)
!9798 = !DILocation(line: 1736, column: 2, scope: !9763)
!9799 = !DILocation(line: 1736, column: 9, scope: !9763)
!9800 = !DILocation(line: 1737, column: 7, scope: !9801)
!9801 = distinct !DILexicalBlock(scope: !9802, file: !3, line: 1737, column: 7)
!9802 = distinct !DILexicalBlock(scope: !9763, file: !3, line: 1736, column: 14)
!9803 = !DILocation(line: 1737, column: 12, scope: !9801)
!9804 = !DILocation(line: 1737, column: 15, scope: !9801)
!9805 = !DILocation(line: 1737, column: 17, scope: !9801)
!9806 = !DILocation(line: 1737, column: 20, scope: !9801)
!9807 = !DILocation(line: 1737, column: 23, scope: !9801)
!9808 = !DILocation(line: 1737, column: 27, scope: !9801)
!9809 = !DILocation(line: 1737, column: 7, scope: !9802)
!9810 = !DILocation(line: 1739, column: 16, scope: !9811)
!9811 = distinct !DILexicalBlock(scope: !9801, file: !3, line: 1737, column: 36)
!9812 = !DILocation(line: 1739, column: 40, scope: !9811)
!9813 = !DILocation(line: 1739, column: 4, scope: !9811)
!9814 = !DILocation(line: 1740, column: 8, scope: !9815)
!9815 = distinct !DILexicalBlock(scope: !9811, file: !3, line: 1740, column: 8)
!9816 = !DILocation(line: 1740, column: 13, scope: !9815)
!9817 = !DILocation(line: 1740, column: 16, scope: !9815)
!9818 = !DILocation(line: 1740, column: 8, scope: !9811)
!9819 = !DILocation(line: 1740, column: 46, scope: !9815)
!9820 = !DILocation(line: 1740, column: 51, scope: !9815)
!9821 = !DILocation(line: 1740, column: 54, scope: !9815)
!9822 = !DILocation(line: 1740, column: 66, scope: !9815)
!9823 = !DILocation(line: 1740, column: 28, scope: !9815)
!9824 = !DILocation(line: 1742, column: 8, scope: !9825)
!9825 = distinct !DILexicalBlock(scope: !9811, file: !3, line: 1742, column: 8)
!9826 = !DILocation(line: 1742, column: 13, scope: !9825)
!9827 = !DILocation(line: 1742, column: 8, scope: !9811)
!9828 = !DILocation(line: 1742, column: 33, scope: !9825)
!9829 = !DILocation(line: 1742, column: 37, scope: !9825)
!9830 = !DILocation(line: 1742, column: 42, scope: !9825)
!9831 = !DILocation(line: 1742, column: 18, scope: !9825)
!9832 = !DILocation(line: 1743, column: 3, scope: !9811)
!9833 = !DILocation(line: 1745, column: 8, scope: !9802)
!9834 = !DILocation(line: 1745, column: 13, scope: !9802)
!9835 = !DILocation(line: 1745, column: 16, scope: !9802)
!9836 = !DILocation(line: 1745, column: 6, scope: !9802)
!9837 = distinct !{!9837, !9798, !9838}
!9838 = !DILocation(line: 1746, column: 2, scope: !9763)
!9839 = !DILocation(line: 1747, column: 1, scope: !9763)
!9840 = distinct !DISubprogram(name: "write_lamps", scope: !3, file: !3, line: 2228, type: !7324, scopeLine: 2229, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !5641)
!9841 = !DILocalVariable(name: "wd", arg: 1, scope: !9840, file: !3, line: 2228, type: !5820)
!9842 = !DILocation(line: 2228, column: 36, scope: !9840)
!9843 = !DILocalVariable(name: "idbase", arg: 2, scope: !9840, file: !3, line: 2228, type: !565)
!9844 = !DILocation(line: 2228, column: 50, scope: !9840)
!9845 = !DILocalVariable(name: "la", scope: !9840, file: !3, line: 2230, type: !6859)
!9846 = !DILocation(line: 2230, column: 8, scope: !9840)
!9847 = !DILocalVariable(name: "a", scope: !9840, file: !3, line: 2231, type: !98)
!9848 = !DILocation(line: 2231, column: 6, scope: !9840)
!9849 = !DILocation(line: 2233, column: 6, scope: !9840)
!9850 = !DILocation(line: 2233, column: 14, scope: !9840)
!9851 = !DILocation(line: 2233, column: 4, scope: !9840)
!9852 = !DILocation(line: 2234, column: 2, scope: !9840)
!9853 = !DILocation(line: 2234, column: 9, scope: !9840)
!9854 = !DILocation(line: 2235, column: 7, scope: !9855)
!9855 = distinct !DILexicalBlock(scope: !9856, file: !3, line: 2235, column: 7)
!9856 = distinct !DILexicalBlock(scope: !9840, file: !3, line: 2234, column: 13)
!9857 = !DILocation(line: 2235, column: 11, scope: !9855)
!9858 = !DILocation(line: 2235, column: 14, scope: !9855)
!9859 = !DILocation(line: 2235, column: 16, scope: !9855)
!9860 = !DILocation(line: 2235, column: 19, scope: !9855)
!9861 = !DILocation(line: 2235, column: 22, scope: !9855)
!9862 = !DILocation(line: 2235, column: 26, scope: !9855)
!9863 = !DILocation(line: 2235, column: 7, scope: !9856)
!9864 = !DILocation(line: 2237, column: 16, scope: !9865)
!9865 = distinct !DILexicalBlock(scope: !9855, file: !3, line: 2235, column: 35)
!9866 = !DILocation(line: 2237, column: 38, scope: !9865)
!9867 = !DILocation(line: 2237, column: 4, scope: !9865)
!9868 = !DILocation(line: 2238, column: 8, scope: !9869)
!9869 = distinct !DILexicalBlock(scope: !9865, file: !3, line: 2238, column: 8)
!9870 = !DILocation(line: 2238, column: 12, scope: !9869)
!9871 = !DILocation(line: 2238, column: 15, scope: !9869)
!9872 = !DILocation(line: 2238, column: 8, scope: !9865)
!9873 = !DILocation(line: 2238, column: 45, scope: !9869)
!9874 = !DILocation(line: 2238, column: 49, scope: !9869)
!9875 = !DILocation(line: 2238, column: 52, scope: !9869)
!9876 = !DILocation(line: 2238, column: 64, scope: !9869)
!9877 = !DILocation(line: 2238, column: 27, scope: !9869)
!9878 = !DILocation(line: 2240, column: 8, scope: !9879)
!9879 = distinct !DILexicalBlock(scope: !9865, file: !3, line: 2240, column: 8)
!9880 = !DILocation(line: 2240, column: 12, scope: !9879)
!9881 = !DILocation(line: 2240, column: 8, scope: !9865)
!9882 = !DILocation(line: 2240, column: 32, scope: !9879)
!9883 = !DILocation(line: 2240, column: 36, scope: !9879)
!9884 = !DILocation(line: 2240, column: 40, scope: !9879)
!9885 = !DILocation(line: 2240, column: 17, scope: !9879)
!9886 = !DILocation(line: 2243, column: 10, scope: !9887)
!9887 = distinct !DILexicalBlock(scope: !9865, file: !3, line: 2243, column: 4)
!9888 = !DILocation(line: 2243, column: 9, scope: !9887)
!9889 = !DILocation(line: 2243, column: 14, scope: !9890)
!9890 = distinct !DILexicalBlock(scope: !9887, file: !3, line: 2243, column: 4)
!9891 = !DILocation(line: 2243, column: 15, scope: !9890)
!9892 = !DILocation(line: 2243, column: 4, scope: !9887)
!9893 = !DILocation(line: 2244, column: 9, scope: !9894)
!9894 = distinct !DILexicalBlock(scope: !9895, file: !3, line: 2244, column: 9)
!9895 = distinct !DILexicalBlock(scope: !9890, file: !3, line: 2243, column: 31)
!9896 = !DILocation(line: 2244, column: 13, scope: !9894)
!9897 = !DILocation(line: 2244, column: 18, scope: !9894)
!9898 = !DILocation(line: 2244, column: 9, scope: !9895)
!9899 = !DILocation(line: 2244, column: 34, scope: !9894)
!9900 = !DILocation(line: 2244, column: 55, scope: !9894)
!9901 = !DILocation(line: 2244, column: 59, scope: !9894)
!9902 = !DILocation(line: 2244, column: 64, scope: !9894)
!9903 = !DILocation(line: 2244, column: 22, scope: !9894)
!9904 = !DILocation(line: 2245, column: 4, scope: !9895)
!9905 = !DILocation(line: 2243, column: 27, scope: !9890)
!9906 = !DILocation(line: 2243, column: 4, scope: !9890)
!9907 = distinct !{!9907, !9892, !9908}
!9908 = !DILocation(line: 2245, column: 4, scope: !9887)
!9909 = !DILocation(line: 2247, column: 8, scope: !9910)
!9910 = distinct !DILexicalBlock(scope: !9865, file: !3, line: 2247, column: 8)
!9911 = !DILocation(line: 2247, column: 12, scope: !9910)
!9912 = !DILocation(line: 2247, column: 8, scope: !9865)
!9913 = !DILocation(line: 2248, column: 24, scope: !9910)
!9914 = !DILocation(line: 2248, column: 28, scope: !9910)
!9915 = !DILocation(line: 2248, column: 32, scope: !9910)
!9916 = !DILocation(line: 2248, column: 5, scope: !9910)
!9917 = !DILocation(line: 2251, column: 8, scope: !9918)
!9918 = distinct !DILexicalBlock(scope: !9865, file: !3, line: 2251, column: 8)
!9919 = !DILocation(line: 2251, column: 12, scope: !9918)
!9920 = !DILocation(line: 2251, column: 8, scope: !9865)
!9921 = !DILocation(line: 2252, column: 17, scope: !9922)
!9922 = distinct !DILexicalBlock(scope: !9918, file: !3, line: 2251, column: 22)
!9923 = !DILocation(line: 2252, column: 43, scope: !9922)
!9924 = !DILocation(line: 2252, column: 47, scope: !9922)
!9925 = !DILocation(line: 2252, column: 5, scope: !9922)
!9926 = !DILocation(line: 2253, column: 20, scope: !9922)
!9927 = !DILocation(line: 2253, column: 24, scope: !9922)
!9928 = !DILocation(line: 2253, column: 28, scope: !9922)
!9929 = !DILocation(line: 2253, column: 5, scope: !9922)
!9930 = !DILocation(line: 2254, column: 4, scope: !9922)
!9931 = !DILocation(line: 2256, column: 19, scope: !9865)
!9932 = !DILocation(line: 2256, column: 23, scope: !9865)
!9933 = !DILocation(line: 2256, column: 27, scope: !9865)
!9934 = !DILocation(line: 2256, column: 4, scope: !9865)
!9935 = !DILocation(line: 2258, column: 3, scope: !9865)
!9936 = !DILocation(line: 2259, column: 7, scope: !9856)
!9937 = !DILocation(line: 2259, column: 11, scope: !9856)
!9938 = !DILocation(line: 2259, column: 14, scope: !9856)
!9939 = !DILocation(line: 2259, column: 5, scope: !9856)
!9940 = distinct !{!9940, !9852, !9941}
!9941 = !DILocation(line: 2260, column: 2, scope: !9840)
!9942 = !DILocation(line: 2261, column: 1, scope: !9840)
!9943 = distinct !DISubprogram(name: "write_lattices", scope: !3, file: !3, line: 2045, type: !7324, scopeLine: 2046, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !5641)
!9944 = !DILocalVariable(name: "wd", arg: 1, scope: !9943, file: !3, line: 2045, type: !5820)
!9945 = !DILocation(line: 2045, column: 39, scope: !9943)
!9946 = !DILocalVariable(name: "idbase", arg: 2, scope: !9943, file: !3, line: 2045, type: !565)
!9947 = !DILocation(line: 2045, column: 53, scope: !9943)
!9948 = !DILocalVariable(name: "lt", scope: !9943, file: !3, line: 2047, type: !9949)
!9949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9950, size: 64)
!9950 = !DIDerivedType(tag: DW_TAG_typedef, name: "Lattice", file: !9951, line: 72, baseType: !9952)
!9951 = !DIFile(filename: "blender/source/blender/makesdna/DNA_lattice_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!9952 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Lattice", file: !9951, line: 52, size: 2240, elements: !9953)
!9953 = !{!9954, !9955, !9956, !9957, !9958, !9959, !9960, !9961, !9962, !9963, !9964, !9965, !9966, !9967, !9968, !9969, !9970, !9971, !9972, !9973, !9974, !9975, !9977, !9978, !9979, !9980, !9981}
!9954 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !9952, file: !9951, line: 53, baseType: !427, size: 960)
!9955 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !9952, file: !9951, line: 54, baseType: !833, size: 64, offset: 960)
!9956 = !DIDerivedType(tag: DW_TAG_member, name: "pntsu", scope: !9952, file: !9951, line: 56, baseType: !399, size: 16, offset: 1024)
!9957 = !DIDerivedType(tag: DW_TAG_member, name: "pntsv", scope: !9952, file: !9951, line: 56, baseType: !399, size: 16, offset: 1040)
!9958 = !DIDerivedType(tag: DW_TAG_member, name: "pntsw", scope: !9952, file: !9951, line: 56, baseType: !399, size: 16, offset: 1056)
!9959 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !9952, file: !9951, line: 56, baseType: !399, size: 16, offset: 1072)
!9960 = !DIDerivedType(tag: DW_TAG_member, name: "opntsu", scope: !9952, file: !9951, line: 57, baseType: !399, size: 16, offset: 1088)
!9961 = !DIDerivedType(tag: DW_TAG_member, name: "opntsv", scope: !9952, file: !9951, line: 57, baseType: !399, size: 16, offset: 1104)
!9962 = !DIDerivedType(tag: DW_TAG_member, name: "opntsw", scope: !9952, file: !9951, line: 57, baseType: !399, size: 16, offset: 1120)
!9963 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !9952, file: !9951, line: 57, baseType: !399, size: 16, offset: 1136)
!9964 = !DIDerivedType(tag: DW_TAG_member, name: "typeu", scope: !9952, file: !9951, line: 58, baseType: !375, size: 8, offset: 1152)
!9965 = !DIDerivedType(tag: DW_TAG_member, name: "typev", scope: !9952, file: !9951, line: 58, baseType: !375, size: 8, offset: 1160)
!9966 = !DIDerivedType(tag: DW_TAG_member, name: "typew", scope: !9952, file: !9951, line: 58, baseType: !375, size: 8, offset: 1168)
!9967 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !9952, file: !9951, line: 58, baseType: !375, size: 8, offset: 1176)
!9968 = !DIDerivedType(tag: DW_TAG_member, name: "actbp", scope: !9952, file: !9951, line: 59, baseType: !98, size: 32, offset: 1184)
!9969 = !DIDerivedType(tag: DW_TAG_member, name: "fu", scope: !9952, file: !9951, line: 61, baseType: !396, size: 32, offset: 1216)
!9970 = !DIDerivedType(tag: DW_TAG_member, name: "fv", scope: !9952, file: !9951, line: 61, baseType: !396, size: 32, offset: 1248)
!9971 = !DIDerivedType(tag: DW_TAG_member, name: "fw", scope: !9952, file: !9951, line: 61, baseType: !396, size: 32, offset: 1280)
!9972 = !DIDerivedType(tag: DW_TAG_member, name: "du", scope: !9952, file: !9951, line: 61, baseType: !396, size: 32, offset: 1312)
!9973 = !DIDerivedType(tag: DW_TAG_member, name: "dv", scope: !9952, file: !9951, line: 61, baseType: !396, size: 32, offset: 1344)
!9974 = !DIDerivedType(tag: DW_TAG_member, name: "dw", scope: !9952, file: !9951, line: 61, baseType: !396, size: 32, offset: 1376)
!9975 = !DIDerivedType(tag: DW_TAG_member, name: "def", scope: !9952, file: !9951, line: 63, baseType: !9976, size: 64, offset: 1408)
!9976 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9398, size: 64)
!9977 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !9952, file: !9951, line: 65, baseType: !978, size: 64, offset: 1472)
!9978 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !9952, file: !9951, line: 66, baseType: !9244, size: 64, offset: 1536)
!9979 = !DIDerivedType(tag: DW_TAG_member, name: "dvert", scope: !9952, file: !9951, line: 68, baseType: !2466, size: 64, offset: 1600)
!9980 = !DIDerivedType(tag: DW_TAG_member, name: "vgroup", scope: !9952, file: !9951, line: 69, baseType: !692, size: 512, offset: 1664)
!9981 = !DIDerivedType(tag: DW_TAG_member, name: "editlatt", scope: !9952, file: !9951, line: 71, baseType: !9982, size: 64, offset: 2176)
!9982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9983, size: 64)
!9983 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "EditLatt", file: !9951, line: 44, size: 128, elements: !9984)
!9984 = !{!9985, !9987, !9988}
!9985 = !DIDerivedType(tag: DW_TAG_member, name: "latt", scope: !9983, file: !9951, line: 45, baseType: !9986, size: 64)
!9986 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9952, size: 64)
!9987 = !DIDerivedType(tag: DW_TAG_member, name: "shapenr", scope: !9983, file: !9951, line: 47, baseType: !98, size: 32, offset: 64)
!9988 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !9983, file: !9951, line: 49, baseType: !2395, size: 32, offset: 96)
!9989 = !DILocation(line: 2047, column: 11, scope: !9943)
!9990 = !DILocation(line: 2049, column: 6, scope: !9943)
!9991 = !DILocation(line: 2049, column: 14, scope: !9943)
!9992 = !DILocation(line: 2049, column: 4, scope: !9943)
!9993 = !DILocation(line: 2050, column: 2, scope: !9943)
!9994 = !DILocation(line: 2050, column: 9, scope: !9943)
!9995 = !DILocation(line: 2051, column: 7, scope: !9996)
!9996 = distinct !DILexicalBlock(scope: !9997, file: !3, line: 2051, column: 7)
!9997 = distinct !DILexicalBlock(scope: !9943, file: !3, line: 2050, column: 13)
!9998 = !DILocation(line: 2051, column: 11, scope: !9996)
!9999 = !DILocation(line: 2051, column: 14, scope: !9996)
!10000 = !DILocation(line: 2051, column: 16, scope: !9996)
!10001 = !DILocation(line: 2051, column: 19, scope: !9996)
!10002 = !DILocation(line: 2051, column: 22, scope: !9996)
!10003 = !DILocation(line: 2051, column: 26, scope: !9996)
!10004 = !DILocation(line: 2051, column: 7, scope: !9997)
!10005 = !DILocation(line: 2053, column: 16, scope: !10006)
!10006 = distinct !DILexicalBlock(scope: !9996, file: !3, line: 2051, column: 35)
!10007 = !DILocation(line: 2053, column: 41, scope: !10006)
!10008 = !DILocation(line: 2053, column: 4, scope: !10006)
!10009 = !DILocation(line: 2054, column: 8, scope: !10010)
!10010 = distinct !DILexicalBlock(scope: !10006, file: !3, line: 2054, column: 8)
!10011 = !DILocation(line: 2054, column: 12, scope: !10010)
!10012 = !DILocation(line: 2054, column: 15, scope: !10010)
!10013 = !DILocation(line: 2054, column: 8, scope: !10006)
!10014 = !DILocation(line: 2054, column: 45, scope: !10010)
!10015 = !DILocation(line: 2054, column: 49, scope: !10010)
!10016 = !DILocation(line: 2054, column: 52, scope: !10010)
!10017 = !DILocation(line: 2054, column: 64, scope: !10010)
!10018 = !DILocation(line: 2054, column: 27, scope: !10010)
!10019 = !DILocation(line: 2057, column: 8, scope: !10020)
!10020 = distinct !DILexicalBlock(scope: !10006, file: !3, line: 2057, column: 8)
!10021 = !DILocation(line: 2057, column: 12, scope: !10020)
!10022 = !DILocation(line: 2057, column: 8, scope: !10006)
!10023 = !DILocation(line: 2057, column: 32, scope: !10020)
!10024 = !DILocation(line: 2057, column: 36, scope: !10020)
!10025 = !DILocation(line: 2057, column: 40, scope: !10020)
!10026 = !DILocation(line: 2057, column: 17, scope: !10020)
!10027 = !DILocation(line: 2060, column: 16, scope: !10006)
!10028 = !DILocation(line: 2060, column: 36, scope: !10006)
!10029 = !DILocation(line: 2060, column: 40, scope: !10006)
!10030 = !DILocation(line: 2060, column: 46, scope: !10006)
!10031 = !DILocation(line: 2060, column: 50, scope: !10006)
!10032 = !DILocation(line: 2060, column: 45, scope: !10006)
!10033 = !DILocation(line: 2060, column: 56, scope: !10006)
!10034 = !DILocation(line: 2060, column: 60, scope: !10006)
!10035 = !DILocation(line: 2060, column: 55, scope: !10006)
!10036 = !DILocation(line: 2060, column: 67, scope: !10006)
!10037 = !DILocation(line: 2060, column: 71, scope: !10006)
!10038 = !DILocation(line: 2060, column: 4, scope: !10006)
!10039 = !DILocation(line: 2062, column: 17, scope: !10006)
!10040 = !DILocation(line: 2062, column: 21, scope: !10006)
!10041 = !DILocation(line: 2062, column: 25, scope: !10006)
!10042 = !DILocation(line: 2062, column: 31, scope: !10006)
!10043 = !DILocation(line: 2062, column: 35, scope: !10006)
!10044 = !DILocation(line: 2062, column: 30, scope: !10006)
!10045 = !DILocation(line: 2062, column: 41, scope: !10006)
!10046 = !DILocation(line: 2062, column: 45, scope: !10006)
!10047 = !DILocation(line: 2062, column: 40, scope: !10006)
!10048 = !DILocation(line: 2062, column: 52, scope: !10006)
!10049 = !DILocation(line: 2062, column: 56, scope: !10006)
!10050 = !DILocation(line: 2062, column: 4, scope: !10006)
!10051 = !DILocation(line: 2064, column: 3, scope: !10006)
!10052 = !DILocation(line: 2065, column: 7, scope: !9997)
!10053 = !DILocation(line: 2065, column: 11, scope: !9997)
!10054 = !DILocation(line: 2065, column: 14, scope: !9997)
!10055 = !DILocation(line: 2065, column: 5, scope: !9997)
!10056 = distinct !{!10056, !9993, !10057}
!10057 = !DILocation(line: 2066, column: 2, scope: !9943)
!10058 = !DILocation(line: 2067, column: 1, scope: !9943)
!10059 = distinct !DISubprogram(name: "write_vfonts", scope: !3, file: !3, line: 1676, type: !7324, scopeLine: 1677, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !5641)
!10060 = !DILocalVariable(name: "wd", arg: 1, scope: !10059, file: !3, line: 1676, type: !5820)
!10061 = !DILocation(line: 1676, column: 37, scope: !10059)
!10062 = !DILocalVariable(name: "idbase", arg: 2, scope: !10059, file: !3, line: 1676, type: !565)
!10063 = !DILocation(line: 1676, column: 51, scope: !10059)
!10064 = !DILocalVariable(name: "vf", scope: !10059, file: !3, line: 1678, type: !10065)
!10065 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10066, size: 64)
!10066 = !DIDerivedType(tag: DW_TAG_typedef, name: "VFont", file: !9333, line: 56, baseType: !9332)
!10067 = !DILocation(line: 1678, column: 9, scope: !10059)
!10068 = !DILocalVariable(name: "pf", scope: !10059, file: !3, line: 1679, type: !9699)
!10069 = !DILocation(line: 1679, column: 15, scope: !10059)
!10070 = !DILocation(line: 1681, column: 6, scope: !10059)
!10071 = !DILocation(line: 1681, column: 14, scope: !10059)
!10072 = !DILocation(line: 1681, column: 4, scope: !10059)
!10073 = !DILocation(line: 1682, column: 2, scope: !10059)
!10074 = !DILocation(line: 1682, column: 9, scope: !10059)
!10075 = !DILocation(line: 1683, column: 7, scope: !10076)
!10076 = distinct !DILexicalBlock(scope: !10077, file: !3, line: 1683, column: 7)
!10077 = distinct !DILexicalBlock(scope: !10059, file: !3, line: 1682, column: 13)
!10078 = !DILocation(line: 1683, column: 11, scope: !10076)
!10079 = !DILocation(line: 1683, column: 14, scope: !10076)
!10080 = !DILocation(line: 1683, column: 16, scope: !10076)
!10081 = !DILocation(line: 1683, column: 19, scope: !10076)
!10082 = !DILocation(line: 1683, column: 22, scope: !10076)
!10083 = !DILocation(line: 1683, column: 26, scope: !10076)
!10084 = !DILocation(line: 1683, column: 7, scope: !10077)
!10085 = !DILocation(line: 1685, column: 16, scope: !10086)
!10086 = distinct !DILexicalBlock(scope: !10076, file: !3, line: 1683, column: 35)
!10087 = !DILocation(line: 1685, column: 39, scope: !10086)
!10088 = !DILocation(line: 1685, column: 4, scope: !10086)
!10089 = !DILocation(line: 1686, column: 8, scope: !10090)
!10090 = distinct !DILexicalBlock(scope: !10086, file: !3, line: 1686, column: 8)
!10091 = !DILocation(line: 1686, column: 12, scope: !10090)
!10092 = !DILocation(line: 1686, column: 15, scope: !10090)
!10093 = !DILocation(line: 1686, column: 8, scope: !10086)
!10094 = !DILocation(line: 1686, column: 45, scope: !10090)
!10095 = !DILocation(line: 1686, column: 49, scope: !10090)
!10096 = !DILocation(line: 1686, column: 52, scope: !10090)
!10097 = !DILocation(line: 1686, column: 64, scope: !10090)
!10098 = !DILocation(line: 1686, column: 27, scope: !10090)
!10099 = !DILocation(line: 1690, column: 8, scope: !10100)
!10100 = distinct !DILexicalBlock(scope: !10086, file: !3, line: 1690, column: 8)
!10101 = !DILocation(line: 1690, column: 12, scope: !10100)
!10102 = !DILocation(line: 1690, column: 8, scope: !10086)
!10103 = !DILocation(line: 1691, column: 10, scope: !10104)
!10104 = distinct !DILexicalBlock(scope: !10100, file: !3, line: 1690, column: 24)
!10105 = !DILocation(line: 1691, column: 14, scope: !10104)
!10106 = !DILocation(line: 1691, column: 8, scope: !10104)
!10107 = !DILocation(line: 1692, column: 17, scope: !10104)
!10108 = !DILocation(line: 1692, column: 44, scope: !10104)
!10109 = !DILocation(line: 1692, column: 5, scope: !10104)
!10110 = !DILocation(line: 1693, column: 15, scope: !10104)
!10111 = !DILocation(line: 1693, column: 25, scope: !10104)
!10112 = !DILocation(line: 1693, column: 29, scope: !10104)
!10113 = !DILocation(line: 1693, column: 35, scope: !10104)
!10114 = !DILocation(line: 1693, column: 39, scope: !10104)
!10115 = !DILocation(line: 1693, column: 5, scope: !10104)
!10116 = !DILocation(line: 1694, column: 4, scope: !10104)
!10117 = !DILocation(line: 1695, column: 3, scope: !10086)
!10118 = !DILocation(line: 1697, column: 7, scope: !10077)
!10119 = !DILocation(line: 1697, column: 11, scope: !10077)
!10120 = !DILocation(line: 1697, column: 14, scope: !10077)
!10121 = !DILocation(line: 1697, column: 5, scope: !10077)
!10122 = distinct !{!10122, !10073, !10123}
!10123 = !DILocation(line: 1698, column: 2, scope: !10059)
!10124 = !DILocation(line: 1699, column: 1, scope: !10059)
!10125 = distinct !DISubprogram(name: "write_keys", scope: !3, file: !3, line: 1702, type: !7324, scopeLine: 1703, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !5641)
!10126 = !DILocalVariable(name: "wd", arg: 1, scope: !10125, file: !3, line: 1702, type: !5820)
!10127 = !DILocation(line: 1702, column: 35, scope: !10125)
!10128 = !DILocalVariable(name: "idbase", arg: 2, scope: !10125, file: !3, line: 1702, type: !565)
!10129 = !DILocation(line: 1702, column: 49, scope: !10125)
!10130 = !DILocalVariable(name: "key", scope: !10125, file: !3, line: 1704, type: !10131)
!10131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10132, size: 64)
!10132 = !DIDerivedType(tag: DW_TAG_typedef, name: "Key", file: !9246, line: 105, baseType: !9245)
!10133 = !DILocation(line: 1704, column: 7, scope: !10125)
!10134 = !DILocalVariable(name: "kb", scope: !10125, file: !3, line: 1705, type: !9251)
!10135 = !DILocation(line: 1705, column: 12, scope: !10125)
!10136 = !DILocation(line: 1707, column: 7, scope: !10125)
!10137 = !DILocation(line: 1707, column: 15, scope: !10125)
!10138 = !DILocation(line: 1707, column: 5, scope: !10125)
!10139 = !DILocation(line: 1708, column: 2, scope: !10125)
!10140 = !DILocation(line: 1708, column: 9, scope: !10125)
!10141 = !DILocation(line: 1709, column: 7, scope: !10142)
!10142 = distinct !DILexicalBlock(scope: !10143, file: !3, line: 1709, column: 7)
!10143 = distinct !DILexicalBlock(scope: !10125, file: !3, line: 1708, column: 14)
!10144 = !DILocation(line: 1709, column: 12, scope: !10142)
!10145 = !DILocation(line: 1709, column: 15, scope: !10142)
!10146 = !DILocation(line: 1709, column: 17, scope: !10142)
!10147 = !DILocation(line: 1709, column: 20, scope: !10142)
!10148 = !DILocation(line: 1709, column: 23, scope: !10142)
!10149 = !DILocation(line: 1709, column: 27, scope: !10142)
!10150 = !DILocation(line: 1709, column: 7, scope: !10143)
!10151 = !DILocation(line: 1711, column: 16, scope: !10152)
!10152 = distinct !DILexicalBlock(scope: !10142, file: !3, line: 1709, column: 36)
!10153 = !DILocation(line: 1711, column: 37, scope: !10152)
!10154 = !DILocation(line: 1711, column: 4, scope: !10152)
!10155 = !DILocation(line: 1712, column: 8, scope: !10156)
!10156 = distinct !DILexicalBlock(scope: !10152, file: !3, line: 1712, column: 8)
!10157 = !DILocation(line: 1712, column: 13, scope: !10156)
!10158 = !DILocation(line: 1712, column: 16, scope: !10156)
!10159 = !DILocation(line: 1712, column: 8, scope: !10152)
!10160 = !DILocation(line: 1712, column: 46, scope: !10156)
!10161 = !DILocation(line: 1712, column: 51, scope: !10156)
!10162 = !DILocation(line: 1712, column: 54, scope: !10156)
!10163 = !DILocation(line: 1712, column: 66, scope: !10156)
!10164 = !DILocation(line: 1712, column: 28, scope: !10156)
!10165 = !DILocation(line: 1714, column: 8, scope: !10166)
!10166 = distinct !DILexicalBlock(scope: !10152, file: !3, line: 1714, column: 8)
!10167 = !DILocation(line: 1714, column: 13, scope: !10166)
!10168 = !DILocation(line: 1714, column: 8, scope: !10152)
!10169 = !DILocation(line: 1714, column: 33, scope: !10166)
!10170 = !DILocation(line: 1714, column: 37, scope: !10166)
!10171 = !DILocation(line: 1714, column: 42, scope: !10166)
!10172 = !DILocation(line: 1714, column: 18, scope: !10166)
!10173 = !DILocation(line: 1717, column: 8, scope: !10152)
!10174 = !DILocation(line: 1717, column: 13, scope: !10152)
!10175 = !DILocation(line: 1717, column: 19, scope: !10152)
!10176 = !DILocation(line: 1717, column: 6, scope: !10152)
!10177 = !DILocation(line: 1718, column: 4, scope: !10152)
!10178 = !DILocation(line: 1718, column: 11, scope: !10152)
!10179 = !DILocation(line: 1719, column: 17, scope: !10180)
!10180 = distinct !DILexicalBlock(scope: !10152, file: !3, line: 1718, column: 15)
!10181 = !DILocation(line: 1719, column: 42, scope: !10180)
!10182 = !DILocation(line: 1719, column: 5, scope: !10180)
!10183 = !DILocation(line: 1720, column: 9, scope: !10184)
!10184 = distinct !DILexicalBlock(scope: !10180, file: !3, line: 1720, column: 9)
!10185 = !DILocation(line: 1720, column: 13, scope: !10184)
!10186 = !DILocation(line: 1720, column: 9, scope: !10180)
!10187 = !DILocation(line: 1720, column: 29, scope: !10184)
!10188 = !DILocation(line: 1720, column: 39, scope: !10184)
!10189 = !DILocation(line: 1720, column: 43, scope: !10184)
!10190 = !DILocation(line: 1720, column: 51, scope: !10184)
!10191 = !DILocation(line: 1720, column: 56, scope: !10184)
!10192 = !DILocation(line: 1720, column: 50, scope: !10184)
!10193 = !DILocation(line: 1720, column: 66, scope: !10184)
!10194 = !DILocation(line: 1720, column: 70, scope: !10184)
!10195 = !DILocation(line: 1720, column: 19, scope: !10184)
!10196 = !DILocation(line: 1721, column: 9, scope: !10180)
!10197 = !DILocation(line: 1721, column: 13, scope: !10180)
!10198 = !DILocation(line: 1721, column: 7, scope: !10180)
!10199 = distinct !{!10199, !10177, !10200}
!10200 = !DILocation(line: 1722, column: 4, scope: !10152)
!10201 = !DILocation(line: 1723, column: 3, scope: !10152)
!10202 = !DILocation(line: 1725, column: 8, scope: !10143)
!10203 = !DILocation(line: 1725, column: 13, scope: !10143)
!10204 = !DILocation(line: 1725, column: 16, scope: !10143)
!10205 = !DILocation(line: 1725, column: 6, scope: !10143)
!10206 = distinct !{!10206, !10139, !10207}
!10207 = !DILocation(line: 1726, column: 2, scope: !10125)
!10208 = !DILocation(line: 1728, column: 10, scope: !10125)
!10209 = !DILocation(line: 1728, column: 2, scope: !10125)
!10210 = !DILocation(line: 1729, column: 1, scope: !10125)
!10211 = distinct !DISubprogram(name: "write_worlds", scope: !3, file: !3, line: 2198, type: !7324, scopeLine: 2199, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !5641)
!10212 = !DILocalVariable(name: "wd", arg: 1, scope: !10211, file: !3, line: 2198, type: !5820)
!10213 = !DILocation(line: 2198, column: 37, scope: !10211)
!10214 = !DILocalVariable(name: "idbase", arg: 2, scope: !10211, file: !3, line: 2198, type: !565)
!10215 = !DILocation(line: 2198, column: 51, scope: !10211)
!10216 = !DILocalVariable(name: "wrld", scope: !10211, file: !3, line: 2200, type: !6940)
!10217 = !DILocation(line: 2200, column: 9, scope: !10211)
!10218 = !DILocalVariable(name: "a", scope: !10211, file: !3, line: 2201, type: !98)
!10219 = !DILocation(line: 2201, column: 6, scope: !10211)
!10220 = !DILocation(line: 2203, column: 8, scope: !10211)
!10221 = !DILocation(line: 2203, column: 16, scope: !10211)
!10222 = !DILocation(line: 2203, column: 6, scope: !10211)
!10223 = !DILocation(line: 2204, column: 2, scope: !10211)
!10224 = !DILocation(line: 2204, column: 9, scope: !10211)
!10225 = !DILocation(line: 2205, column: 7, scope: !10226)
!10226 = distinct !DILexicalBlock(scope: !10227, file: !3, line: 2205, column: 7)
!10227 = distinct !DILexicalBlock(scope: !10211, file: !3, line: 2204, column: 15)
!10228 = !DILocation(line: 2205, column: 13, scope: !10226)
!10229 = !DILocation(line: 2205, column: 16, scope: !10226)
!10230 = !DILocation(line: 2205, column: 18, scope: !10226)
!10231 = !DILocation(line: 2205, column: 21, scope: !10226)
!10232 = !DILocation(line: 2205, column: 24, scope: !10226)
!10233 = !DILocation(line: 2205, column: 28, scope: !10226)
!10234 = !DILocation(line: 2205, column: 7, scope: !10227)
!10235 = !DILocation(line: 2207, column: 16, scope: !10236)
!10236 = distinct !DILexicalBlock(scope: !10226, file: !3, line: 2205, column: 37)
!10237 = !DILocation(line: 2207, column: 39, scope: !10236)
!10238 = !DILocation(line: 2207, column: 4, scope: !10236)
!10239 = !DILocation(line: 2208, column: 8, scope: !10240)
!10240 = distinct !DILexicalBlock(scope: !10236, file: !3, line: 2208, column: 8)
!10241 = !DILocation(line: 2208, column: 14, scope: !10240)
!10242 = !DILocation(line: 2208, column: 17, scope: !10240)
!10243 = !DILocation(line: 2208, column: 8, scope: !10236)
!10244 = !DILocation(line: 2208, column: 47, scope: !10240)
!10245 = !DILocation(line: 2208, column: 53, scope: !10240)
!10246 = !DILocation(line: 2208, column: 56, scope: !10240)
!10247 = !DILocation(line: 2208, column: 68, scope: !10240)
!10248 = !DILocation(line: 2208, column: 29, scope: !10240)
!10249 = !DILocation(line: 2210, column: 8, scope: !10250)
!10250 = distinct !DILexicalBlock(scope: !10236, file: !3, line: 2210, column: 8)
!10251 = !DILocation(line: 2210, column: 14, scope: !10250)
!10252 = !DILocation(line: 2210, column: 8, scope: !10236)
!10253 = !DILocation(line: 2210, column: 34, scope: !10250)
!10254 = !DILocation(line: 2210, column: 38, scope: !10250)
!10255 = !DILocation(line: 2210, column: 44, scope: !10250)
!10256 = !DILocation(line: 2210, column: 19, scope: !10250)
!10257 = !DILocation(line: 2212, column: 10, scope: !10258)
!10258 = distinct !DILexicalBlock(scope: !10236, file: !3, line: 2212, column: 4)
!10259 = !DILocation(line: 2212, column: 9, scope: !10258)
!10260 = !DILocation(line: 2212, column: 14, scope: !10261)
!10261 = distinct !DILexicalBlock(scope: !10258, file: !3, line: 2212, column: 4)
!10262 = !DILocation(line: 2212, column: 15, scope: !10261)
!10263 = !DILocation(line: 2212, column: 4, scope: !10258)
!10264 = !DILocation(line: 2213, column: 9, scope: !10265)
!10265 = distinct !DILexicalBlock(scope: !10266, file: !3, line: 2213, column: 9)
!10266 = distinct !DILexicalBlock(scope: !10261, file: !3, line: 2212, column: 31)
!10267 = !DILocation(line: 2213, column: 15, scope: !10265)
!10268 = !DILocation(line: 2213, column: 20, scope: !10265)
!10269 = !DILocation(line: 2213, column: 9, scope: !10266)
!10270 = !DILocation(line: 2213, column: 36, scope: !10265)
!10271 = !DILocation(line: 2213, column: 57, scope: !10265)
!10272 = !DILocation(line: 2213, column: 63, scope: !10265)
!10273 = !DILocation(line: 2213, column: 68, scope: !10265)
!10274 = !DILocation(line: 2213, column: 24, scope: !10265)
!10275 = !DILocation(line: 2214, column: 4, scope: !10266)
!10276 = !DILocation(line: 2212, column: 27, scope: !10261)
!10277 = !DILocation(line: 2212, column: 4, scope: !10261)
!10278 = distinct !{!10278, !10263, !10279}
!10279 = !DILocation(line: 2214, column: 4, scope: !10258)
!10280 = !DILocation(line: 2217, column: 8, scope: !10281)
!10281 = distinct !DILexicalBlock(scope: !10236, file: !3, line: 2217, column: 8)
!10282 = !DILocation(line: 2217, column: 14, scope: !10281)
!10283 = !DILocation(line: 2217, column: 8, scope: !10236)
!10284 = !DILocation(line: 2218, column: 17, scope: !10285)
!10285 = distinct !DILexicalBlock(scope: !10281, file: !3, line: 2217, column: 24)
!10286 = !DILocation(line: 2218, column: 43, scope: !10285)
!10287 = !DILocation(line: 2218, column: 49, scope: !10285)
!10288 = !DILocation(line: 2218, column: 5, scope: !10285)
!10289 = !DILocation(line: 2219, column: 20, scope: !10285)
!10290 = !DILocation(line: 2219, column: 24, scope: !10285)
!10291 = !DILocation(line: 2219, column: 30, scope: !10285)
!10292 = !DILocation(line: 2219, column: 5, scope: !10285)
!10293 = !DILocation(line: 2220, column: 4, scope: !10285)
!10294 = !DILocation(line: 2222, column: 19, scope: !10236)
!10295 = !DILocation(line: 2222, column: 23, scope: !10236)
!10296 = !DILocation(line: 2222, column: 29, scope: !10236)
!10297 = !DILocation(line: 2222, column: 4, scope: !10236)
!10298 = !DILocation(line: 2223, column: 3, scope: !10236)
!10299 = !DILocation(line: 2224, column: 9, scope: !10227)
!10300 = !DILocation(line: 2224, column: 15, scope: !10227)
!10301 = !DILocation(line: 2224, column: 18, scope: !10227)
!10302 = !DILocation(line: 2224, column: 7, scope: !10227)
!10303 = distinct !{!10303, !10223, !10304}
!10304 = !DILocation(line: 2225, column: 2, scope: !10211)
!10305 = !DILocation(line: 2226, column: 1, scope: !10211)
!10306 = distinct !DISubprogram(name: "write_texts", scope: !3, file: !3, line: 2854, type: !7324, scopeLine: 2855, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !5641)
!10307 = !DILocalVariable(name: "wd", arg: 1, scope: !10306, file: !3, line: 2854, type: !5820)
!10308 = !DILocation(line: 2854, column: 36, scope: !10306)
!10309 = !DILocalVariable(name: "idbase", arg: 2, scope: !10306, file: !3, line: 2854, type: !565)
!10310 = !DILocation(line: 2854, column: 50, scope: !10306)
!10311 = !DILocalVariable(name: "text", scope: !10306, file: !3, line: 2856, type: !10312)
!10312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10313, size: 64)
!10313 = !DIDerivedType(tag: DW_TAG_typedef, name: "Text", file: !2879, line: 66, baseType: !2878)
!10314 = !DILocation(line: 2856, column: 8, scope: !10306)
!10315 = !DILocalVariable(name: "tmp", scope: !10306, file: !3, line: 2857, type: !2887)
!10316 = !DILocation(line: 2857, column: 12, scope: !10306)
!10317 = !DILocation(line: 2859, column: 8, scope: !10306)
!10318 = !DILocation(line: 2859, column: 16, scope: !10306)
!10319 = !DILocation(line: 2859, column: 6, scope: !10306)
!10320 = !DILocation(line: 2860, column: 2, scope: !10306)
!10321 = !DILocation(line: 2860, column: 9, scope: !10306)
!10322 = !DILocation(line: 2861, column: 9, scope: !10323)
!10323 = distinct !DILexicalBlock(scope: !10324, file: !3, line: 2861, column: 8)
!10324 = distinct !DILexicalBlock(scope: !10306, file: !3, line: 2860, column: 15)
!10325 = !DILocation(line: 2861, column: 15, scope: !10323)
!10326 = !DILocation(line: 2861, column: 21, scope: !10323)
!10327 = !DILocation(line: 2861, column: 34, scope: !10323)
!10328 = !DILocation(line: 2861, column: 38, scope: !10323)
!10329 = !DILocation(line: 2861, column: 44, scope: !10323)
!10330 = !DILocation(line: 2861, column: 50, scope: !10323)
!10331 = !DILocation(line: 2861, column: 8, scope: !10324)
!10332 = !DILocation(line: 2861, column: 64, scope: !10323)
!10333 = !DILocation(line: 2861, column: 70, scope: !10323)
!10334 = !DILocation(line: 2861, column: 76, scope: !10323)
!10335 = !DILocation(line: 2864, column: 15, scope: !10324)
!10336 = !DILocation(line: 2864, column: 38, scope: !10324)
!10337 = !DILocation(line: 2864, column: 3, scope: !10324)
!10338 = !DILocation(line: 2865, column: 7, scope: !10339)
!10339 = distinct !DILexicalBlock(scope: !10324, file: !3, line: 2865, column: 7)
!10340 = !DILocation(line: 2865, column: 13, scope: !10339)
!10341 = !DILocation(line: 2865, column: 7, scope: !10324)
!10342 = !DILocation(line: 2865, column: 29, scope: !10339)
!10343 = !DILocation(line: 2865, column: 46, scope: !10339)
!10344 = !DILocation(line: 2865, column: 52, scope: !10339)
!10345 = !DILocation(line: 2865, column: 39, scope: !10339)
!10346 = !DILocation(line: 2865, column: 57, scope: !10339)
!10347 = !DILocation(line: 2865, column: 61, scope: !10339)
!10348 = !DILocation(line: 2865, column: 67, scope: !10339)
!10349 = !DILocation(line: 2865, column: 19, scope: !10339)
!10350 = !DILocation(line: 2866, column: 7, scope: !10351)
!10351 = distinct !DILexicalBlock(scope: !10324, file: !3, line: 2866, column: 7)
!10352 = !DILocation(line: 2866, column: 13, scope: !10351)
!10353 = !DILocation(line: 2866, column: 16, scope: !10351)
!10354 = !DILocation(line: 2866, column: 7, scope: !10324)
!10355 = !DILocation(line: 2866, column: 46, scope: !10351)
!10356 = !DILocation(line: 2866, column: 52, scope: !10351)
!10357 = !DILocation(line: 2866, column: 55, scope: !10351)
!10358 = !DILocation(line: 2866, column: 67, scope: !10351)
!10359 = !DILocation(line: 2866, column: 28, scope: !10351)
!10360 = !DILocation(line: 2868, column: 9, scope: !10361)
!10361 = distinct !DILexicalBlock(scope: !10324, file: !3, line: 2868, column: 7)
!10362 = !DILocation(line: 2868, column: 15, scope: !10361)
!10363 = !DILocation(line: 2868, column: 21, scope: !10361)
!10364 = !DILocation(line: 2868, column: 7, scope: !10324)
!10365 = !DILocation(line: 2870, column: 9, scope: !10366)
!10366 = distinct !DILexicalBlock(scope: !10361, file: !3, line: 2868, column: 35)
!10367 = !DILocation(line: 2870, column: 15, scope: !10366)
!10368 = !DILocation(line: 2870, column: 21, scope: !10366)
!10369 = !DILocation(line: 2870, column: 7, scope: !10366)
!10370 = !DILocation(line: 2871, column: 4, scope: !10366)
!10371 = !DILocation(line: 2871, column: 11, scope: !10366)
!10372 = !DILocation(line: 2872, column: 17, scope: !10373)
!10373 = distinct !DILexicalBlock(scope: !10366, file: !3, line: 2871, column: 16)
!10374 = !DILocation(line: 2872, column: 42, scope: !10373)
!10375 = !DILocation(line: 2872, column: 5, scope: !10373)
!10376 = !DILocation(line: 2873, column: 10, scope: !10373)
!10377 = !DILocation(line: 2873, column: 15, scope: !10373)
!10378 = !DILocation(line: 2873, column: 8, scope: !10373)
!10379 = distinct !{!10379, !10370, !10380}
!10380 = !DILocation(line: 2874, column: 4, scope: !10366)
!10381 = !DILocation(line: 2876, column: 9, scope: !10366)
!10382 = !DILocation(line: 2876, column: 15, scope: !10366)
!10383 = !DILocation(line: 2876, column: 21, scope: !10366)
!10384 = !DILocation(line: 2876, column: 7, scope: !10366)
!10385 = !DILocation(line: 2877, column: 4, scope: !10366)
!10386 = !DILocation(line: 2877, column: 11, scope: !10366)
!10387 = !DILocation(line: 2878, column: 15, scope: !10388)
!10388 = distinct !DILexicalBlock(scope: !10366, file: !3, line: 2877, column: 16)
!10389 = !DILocation(line: 2878, column: 25, scope: !10388)
!10390 = !DILocation(line: 2878, column: 30, scope: !10388)
!10391 = !DILocation(line: 2878, column: 33, scope: !10388)
!10392 = !DILocation(line: 2878, column: 37, scope: !10388)
!10393 = !DILocation(line: 2878, column: 42, scope: !10388)
!10394 = !DILocation(line: 2878, column: 5, scope: !10388)
!10395 = !DILocation(line: 2879, column: 10, scope: !10388)
!10396 = !DILocation(line: 2879, column: 15, scope: !10388)
!10397 = !DILocation(line: 2879, column: 8, scope: !10388)
!10398 = distinct !{!10398, !10385, !10399}
!10399 = !DILocation(line: 2880, column: 4, scope: !10366)
!10400 = !DILocation(line: 2881, column: 3, scope: !10366)
!10401 = !DILocation(line: 2884, column: 9, scope: !10324)
!10402 = !DILocation(line: 2884, column: 15, scope: !10324)
!10403 = !DILocation(line: 2884, column: 18, scope: !10324)
!10404 = !DILocation(line: 2884, column: 7, scope: !10324)
!10405 = distinct !{!10405, !10320, !10406}
!10406 = !DILocation(line: 2885, column: 2, scope: !10306)
!10407 = !DILocation(line: 2888, column: 10, scope: !10306)
!10408 = !DILocation(line: 2888, column: 2, scope: !10306)
!10409 = !DILocation(line: 2889, column: 1, scope: !10306)
!10410 = distinct !DISubprogram(name: "write_speakers", scope: !3, file: !3, line: 2891, type: !7324, scopeLine: 2892, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !5641)
!10411 = !DILocalVariable(name: "wd", arg: 1, scope: !10410, file: !3, line: 2891, type: !5820)
!10412 = !DILocation(line: 2891, column: 39, scope: !10410)
!10413 = !DILocalVariable(name: "idbase", arg: 2, scope: !10410, file: !3, line: 2891, type: !565)
!10414 = !DILocation(line: 2891, column: 53, scope: !10410)
!10415 = !DILocalVariable(name: "spk", scope: !10410, file: !3, line: 2893, type: !10416)
!10416 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10417, size: 64)
!10417 = !DIDerivedType(tag: DW_TAG_typedef, name: "Speaker", file: !10418, line: 58, baseType: !10419)
!10418 = !DIFile(filename: "blender/source/blender/makesdna/DNA_speaker_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!10419 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Speaker", file: !10418, line: 35, size: 1472, elements: !10420)
!10420 = !{!10421, !10422, !10423, !10424, !10425, !10426, !10427, !10428, !10429, !10430, !10431, !10432, !10433, !10434, !10435}
!10421 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !10419, file: !10418, line: 36, baseType: !427, size: 960)
!10422 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !10419, file: !10418, line: 37, baseType: !833, size: 64, offset: 960)
!10423 = !DIDerivedType(tag: DW_TAG_member, name: "sound", scope: !10419, file: !10418, line: 39, baseType: !2287, size: 64, offset: 1024)
!10424 = !DIDerivedType(tag: DW_TAG_member, name: "volume_max", scope: !10419, file: !10418, line: 42, baseType: !396, size: 32, offset: 1088)
!10425 = !DIDerivedType(tag: DW_TAG_member, name: "volume_min", scope: !10419, file: !10418, line: 43, baseType: !396, size: 32, offset: 1120)
!10426 = !DIDerivedType(tag: DW_TAG_member, name: "distance_max", scope: !10419, file: !10418, line: 44, baseType: !396, size: 32, offset: 1152)
!10427 = !DIDerivedType(tag: DW_TAG_member, name: "distance_reference", scope: !10419, file: !10418, line: 45, baseType: !396, size: 32, offset: 1184)
!10428 = !DIDerivedType(tag: DW_TAG_member, name: "attenuation", scope: !10419, file: !10418, line: 46, baseType: !396, size: 32, offset: 1216)
!10429 = !DIDerivedType(tag: DW_TAG_member, name: "cone_angle_outer", scope: !10419, file: !10418, line: 47, baseType: !396, size: 32, offset: 1248)
!10430 = !DIDerivedType(tag: DW_TAG_member, name: "cone_angle_inner", scope: !10419, file: !10418, line: 48, baseType: !396, size: 32, offset: 1280)
!10431 = !DIDerivedType(tag: DW_TAG_member, name: "cone_volume_outer", scope: !10419, file: !10418, line: 49, baseType: !396, size: 32, offset: 1312)
!10432 = !DIDerivedType(tag: DW_TAG_member, name: "volume", scope: !10419, file: !10418, line: 52, baseType: !396, size: 32, offset: 1344)
!10433 = !DIDerivedType(tag: DW_TAG_member, name: "pitch", scope: !10419, file: !10418, line: 53, baseType: !396, size: 32, offset: 1376)
!10434 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !10419, file: !10418, line: 56, baseType: !399, size: 16, offset: 1408)
!10435 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !10419, file: !10418, line: 57, baseType: !811, size: 48, offset: 1424)
!10436 = !DILocation(line: 2893, column: 11, scope: !10410)
!10437 = !DILocation(line: 2895, column: 7, scope: !10410)
!10438 = !DILocation(line: 2895, column: 15, scope: !10410)
!10439 = !DILocation(line: 2895, column: 5, scope: !10410)
!10440 = !DILocation(line: 2896, column: 2, scope: !10410)
!10441 = !DILocation(line: 2896, column: 9, scope: !10410)
!10442 = !DILocation(line: 2897, column: 7, scope: !10443)
!10443 = distinct !DILexicalBlock(scope: !10444, file: !3, line: 2897, column: 7)
!10444 = distinct !DILexicalBlock(scope: !10410, file: !3, line: 2896, column: 14)
!10445 = !DILocation(line: 2897, column: 12, scope: !10443)
!10446 = !DILocation(line: 2897, column: 15, scope: !10443)
!10447 = !DILocation(line: 2897, column: 17, scope: !10443)
!10448 = !DILocation(line: 2897, column: 20, scope: !10443)
!10449 = !DILocation(line: 2897, column: 23, scope: !10443)
!10450 = !DILocation(line: 2897, column: 27, scope: !10443)
!10451 = !DILocation(line: 2897, column: 7, scope: !10444)
!10452 = !DILocation(line: 2899, column: 16, scope: !10453)
!10453 = distinct !DILexicalBlock(scope: !10443, file: !3, line: 2897, column: 36)
!10454 = !DILocation(line: 2899, column: 42, scope: !10453)
!10455 = !DILocation(line: 2899, column: 4, scope: !10453)
!10456 = !DILocation(line: 2900, column: 8, scope: !10457)
!10457 = distinct !DILexicalBlock(scope: !10453, file: !3, line: 2900, column: 8)
!10458 = !DILocation(line: 2900, column: 13, scope: !10457)
!10459 = !DILocation(line: 2900, column: 16, scope: !10457)
!10460 = !DILocation(line: 2900, column: 8, scope: !10453)
!10461 = !DILocation(line: 2900, column: 46, scope: !10457)
!10462 = !DILocation(line: 2900, column: 51, scope: !10457)
!10463 = !DILocation(line: 2900, column: 54, scope: !10457)
!10464 = !DILocation(line: 2900, column: 66, scope: !10457)
!10465 = !DILocation(line: 2900, column: 28, scope: !10457)
!10466 = !DILocation(line: 2902, column: 8, scope: !10467)
!10467 = distinct !DILexicalBlock(scope: !10453, file: !3, line: 2902, column: 8)
!10468 = !DILocation(line: 2902, column: 13, scope: !10467)
!10469 = !DILocation(line: 2902, column: 8, scope: !10453)
!10470 = !DILocation(line: 2902, column: 33, scope: !10467)
!10471 = !DILocation(line: 2902, column: 37, scope: !10467)
!10472 = !DILocation(line: 2902, column: 42, scope: !10467)
!10473 = !DILocation(line: 2902, column: 18, scope: !10467)
!10474 = !DILocation(line: 2903, column: 3, scope: !10453)
!10475 = !DILocation(line: 2904, column: 8, scope: !10444)
!10476 = !DILocation(line: 2904, column: 13, scope: !10444)
!10477 = !DILocation(line: 2904, column: 16, scope: !10444)
!10478 = !DILocation(line: 2904, column: 6, scope: !10444)
!10479 = distinct !{!10479, !10440, !10480}
!10480 = !DILocation(line: 2905, column: 2, scope: !10410)
!10481 = !DILocation(line: 2906, column: 1, scope: !10410)
!10482 = distinct !DISubprogram(name: "write_sounds", scope: !3, file: !3, line: 2908, type: !7324, scopeLine: 2909, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !5641)
!10483 = !DILocalVariable(name: "wd", arg: 1, scope: !10482, file: !3, line: 2908, type: !5820)
!10484 = !DILocation(line: 2908, column: 37, scope: !10482)
!10485 = !DILocalVariable(name: "idbase", arg: 2, scope: !10482, file: !3, line: 2908, type: !565)
!10486 = !DILocation(line: 2908, column: 51, scope: !10482)
!10487 = !DILocalVariable(name: "sound", scope: !10482, file: !3, line: 2910, type: !10488)
!10488 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10489, size: 64)
!10489 = !DIDerivedType(tag: DW_TAG_typedef, name: "bSound", file: !2289, line: 100, baseType: !2288)
!10490 = !DILocation(line: 2910, column: 10, scope: !10482)
!10491 = !DILocalVariable(name: "pf", scope: !10482, file: !3, line: 2912, type: !9699)
!10492 = !DILocation(line: 2912, column: 15, scope: !10482)
!10493 = !DILocation(line: 2914, column: 9, scope: !10482)
!10494 = !DILocation(line: 2914, column: 17, scope: !10482)
!10495 = !DILocation(line: 2914, column: 7, scope: !10482)
!10496 = !DILocation(line: 2915, column: 2, scope: !10482)
!10497 = !DILocation(line: 2915, column: 9, scope: !10482)
!10498 = !DILocation(line: 2916, column: 7, scope: !10499)
!10499 = distinct !DILexicalBlock(scope: !10500, file: !3, line: 2916, column: 7)
!10500 = distinct !DILexicalBlock(scope: !10482, file: !3, line: 2915, column: 16)
!10501 = !DILocation(line: 2916, column: 14, scope: !10499)
!10502 = !DILocation(line: 2916, column: 17, scope: !10499)
!10503 = !DILocation(line: 2916, column: 19, scope: !10499)
!10504 = !DILocation(line: 2916, column: 22, scope: !10499)
!10505 = !DILocation(line: 2916, column: 25, scope: !10499)
!10506 = !DILocation(line: 2916, column: 29, scope: !10499)
!10507 = !DILocation(line: 2916, column: 7, scope: !10500)
!10508 = !DILocation(line: 2918, column: 16, scope: !10509)
!10509 = distinct !DILexicalBlock(scope: !10499, file: !3, line: 2916, column: 38)
!10510 = !DILocation(line: 2918, column: 40, scope: !10509)
!10511 = !DILocation(line: 2918, column: 4, scope: !10509)
!10512 = !DILocation(line: 2919, column: 8, scope: !10513)
!10513 = distinct !DILexicalBlock(scope: !10509, file: !3, line: 2919, column: 8)
!10514 = !DILocation(line: 2919, column: 15, scope: !10513)
!10515 = !DILocation(line: 2919, column: 18, scope: !10513)
!10516 = !DILocation(line: 2919, column: 8, scope: !10509)
!10517 = !DILocation(line: 2919, column: 48, scope: !10513)
!10518 = !DILocation(line: 2919, column: 55, scope: !10513)
!10519 = !DILocation(line: 2919, column: 58, scope: !10513)
!10520 = !DILocation(line: 2919, column: 70, scope: !10513)
!10521 = !DILocation(line: 2919, column: 30, scope: !10513)
!10522 = !DILocation(line: 2921, column: 8, scope: !10523)
!10523 = distinct !DILexicalBlock(scope: !10509, file: !3, line: 2921, column: 8)
!10524 = !DILocation(line: 2921, column: 15, scope: !10523)
!10525 = !DILocation(line: 2921, column: 8, scope: !10509)
!10526 = !DILocation(line: 2922, column: 10, scope: !10527)
!10527 = distinct !DILexicalBlock(scope: !10523, file: !3, line: 2921, column: 27)
!10528 = !DILocation(line: 2922, column: 17, scope: !10527)
!10529 = !DILocation(line: 2922, column: 8, scope: !10527)
!10530 = !DILocation(line: 2923, column: 17, scope: !10527)
!10531 = !DILocation(line: 2923, column: 44, scope: !10527)
!10532 = !DILocation(line: 2923, column: 5, scope: !10527)
!10533 = !DILocation(line: 2924, column: 15, scope: !10527)
!10534 = !DILocation(line: 2924, column: 25, scope: !10527)
!10535 = !DILocation(line: 2924, column: 29, scope: !10527)
!10536 = !DILocation(line: 2924, column: 35, scope: !10527)
!10537 = !DILocation(line: 2924, column: 39, scope: !10527)
!10538 = !DILocation(line: 2924, column: 5, scope: !10527)
!10539 = !DILocation(line: 2925, column: 4, scope: !10527)
!10540 = !DILocation(line: 2926, column: 3, scope: !10509)
!10541 = !DILocation(line: 2927, column: 10, scope: !10500)
!10542 = !DILocation(line: 2927, column: 17, scope: !10500)
!10543 = !DILocation(line: 2927, column: 20, scope: !10500)
!10544 = !DILocation(line: 2927, column: 8, scope: !10500)
!10545 = distinct !{!10545, !10496, !10546}
!10546 = !DILocation(line: 2928, column: 2, scope: !10482)
!10547 = !DILocation(line: 2931, column: 10, scope: !10482)
!10548 = !DILocation(line: 2931, column: 2, scope: !10482)
!10549 = !DILocation(line: 2932, column: 1, scope: !10482)
!10550 = distinct !DISubprogram(name: "write_groups", scope: !3, file: !3, line: 2934, type: !7324, scopeLine: 2935, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !5641)
!10551 = !DILocalVariable(name: "wd", arg: 1, scope: !10550, file: !3, line: 2934, type: !5820)
!10552 = !DILocation(line: 2934, column: 37, scope: !10550)
!10553 = !DILocalVariable(name: "idbase", arg: 2, scope: !10550, file: !3, line: 2934, type: !565)
!10554 = !DILocation(line: 2934, column: 51, scope: !10550)
!10555 = !DILocalVariable(name: "group", scope: !10550, file: !3, line: 2936, type: !10556)
!10556 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10557, size: 64)
!10557 = !DIDerivedType(tag: DW_TAG_typedef, name: "Group", file: !3063, line: 61, baseType: !3062)
!10558 = !DILocation(line: 2936, column: 9, scope: !10550)
!10559 = !DILocalVariable(name: "go", scope: !10550, file: !3, line: 2937, type: !10560)
!10560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10561, size: 64)
!10561 = !DIDerivedType(tag: DW_TAG_typedef, name: "GroupObject", file: !3063, line: 48, baseType: !10562)
!10562 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GroupObject", file: !3063, line: 42, size: 320, elements: !10563)
!10563 = !{!10564, !10566, !10567, !10568, !10569, !10570}
!10564 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !10562, file: !3063, line: 43, baseType: !10565, size: 64)
!10565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10562, size: 64)
!10566 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !10562, file: !3063, line: 43, baseType: !10565, size: 64, offset: 64)
!10567 = !DIDerivedType(tag: DW_TAG_member, name: "ob", scope: !10562, file: !3063, line: 44, baseType: !423, size: 64, offset: 128)
!10568 = !DIDerivedType(tag: DW_TAG_member, name: "lampren", scope: !10562, file: !3063, line: 45, baseType: !372, size: 64, offset: 192)
!10569 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !10562, file: !3063, line: 46, baseType: !399, size: 16, offset: 256)
!10570 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !10562, file: !3063, line: 47, baseType: !2682, size: 48, offset: 272)
!10571 = !DILocation(line: 2937, column: 15, scope: !10550)
!10572 = !DILocation(line: 2939, column: 14, scope: !10573)
!10573 = distinct !DILexicalBlock(scope: !10550, file: !3, line: 2939, column: 2)
!10574 = !DILocation(line: 2939, column: 22, scope: !10573)
!10575 = !DILocation(line: 2939, column: 12, scope: !10573)
!10576 = !DILocation(line: 2939, column: 7, scope: !10573)
!10577 = !DILocation(line: 2939, column: 29, scope: !10578)
!10578 = distinct !DILexicalBlock(scope: !10573, file: !3, line: 2939, column: 2)
!10579 = !DILocation(line: 2939, column: 2, scope: !10573)
!10580 = !DILocation(line: 2940, column: 7, scope: !10581)
!10581 = distinct !DILexicalBlock(scope: !10582, file: !3, line: 2940, column: 7)
!10582 = distinct !DILexicalBlock(scope: !10578, file: !3, line: 2939, column: 59)
!10583 = !DILocation(line: 2940, column: 14, scope: !10581)
!10584 = !DILocation(line: 2940, column: 17, scope: !10581)
!10585 = !DILocation(line: 2940, column: 19, scope: !10581)
!10586 = !DILocation(line: 2940, column: 22, scope: !10581)
!10587 = !DILocation(line: 2940, column: 25, scope: !10581)
!10588 = !DILocation(line: 2940, column: 29, scope: !10581)
!10589 = !DILocation(line: 2940, column: 7, scope: !10582)
!10590 = !DILocation(line: 2942, column: 16, scope: !10591)
!10591 = distinct !DILexicalBlock(scope: !10581, file: !3, line: 2940, column: 38)
!10592 = !DILocation(line: 2942, column: 39, scope: !10591)
!10593 = !DILocation(line: 2942, column: 4, scope: !10591)
!10594 = !DILocation(line: 2943, column: 8, scope: !10595)
!10595 = distinct !DILexicalBlock(scope: !10591, file: !3, line: 2943, column: 8)
!10596 = !DILocation(line: 2943, column: 15, scope: !10595)
!10597 = !DILocation(line: 2943, column: 18, scope: !10595)
!10598 = !DILocation(line: 2943, column: 8, scope: !10591)
!10599 = !DILocation(line: 2943, column: 48, scope: !10595)
!10600 = !DILocation(line: 2943, column: 55, scope: !10595)
!10601 = !DILocation(line: 2943, column: 58, scope: !10595)
!10602 = !DILocation(line: 2943, column: 70, scope: !10595)
!10603 = !DILocation(line: 2943, column: 30, scope: !10595)
!10604 = !DILocation(line: 2945, column: 8, scope: !10591)
!10605 = !DILocation(line: 2945, column: 15, scope: !10591)
!10606 = !DILocation(line: 2945, column: 23, scope: !10591)
!10607 = !DILocation(line: 2945, column: 6, scope: !10591)
!10608 = !DILocation(line: 2946, column: 4, scope: !10591)
!10609 = !DILocation(line: 2946, column: 11, scope: !10591)
!10610 = !DILocation(line: 2947, column: 17, scope: !10611)
!10611 = distinct !DILexicalBlock(scope: !10591, file: !3, line: 2946, column: 15)
!10612 = !DILocation(line: 2947, column: 45, scope: !10611)
!10613 = !DILocation(line: 2947, column: 5, scope: !10611)
!10614 = !DILocation(line: 2948, column: 9, scope: !10611)
!10615 = !DILocation(line: 2948, column: 13, scope: !10611)
!10616 = !DILocation(line: 2948, column: 7, scope: !10611)
!10617 = distinct !{!10617, !10608, !10618}
!10618 = !DILocation(line: 2949, column: 4, scope: !10591)
!10619 = !DILocation(line: 2950, column: 3, scope: !10591)
!10620 = !DILocation(line: 2951, column: 2, scope: !10582)
!10621 = !DILocation(line: 2939, column: 43, scope: !10578)
!10622 = !DILocation(line: 2939, column: 50, scope: !10578)
!10623 = !DILocation(line: 2939, column: 53, scope: !10578)
!10624 = !DILocation(line: 2939, column: 41, scope: !10578)
!10625 = !DILocation(line: 2939, column: 2, scope: !10578)
!10626 = distinct !{!10626, !10579, !10627}
!10627 = !DILocation(line: 2951, column: 2, scope: !10573)
!10628 = !DILocation(line: 2952, column: 1, scope: !10550)
!10629 = distinct !DISubprogram(name: "write_armatures", scope: !3, file: !3, line: 2827, type: !7324, scopeLine: 2828, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !5641)
!10630 = !DILocalVariable(name: "wd", arg: 1, scope: !10629, file: !3, line: 2827, type: !5820)
!10631 = !DILocation(line: 2827, column: 40, scope: !10629)
!10632 = !DILocalVariable(name: "idbase", arg: 2, scope: !10629, file: !3, line: 2827, type: !565)
!10633 = !DILocation(line: 2827, column: 54, scope: !10629)
!10634 = !DILocalVariable(name: "arm", scope: !10629, file: !3, line: 2829, type: !10635)
!10635 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10636, size: 64)
!10636 = !DIDerivedType(tag: DW_TAG_typedef, name: "bArmature", file: !210, line: 114, baseType: !10637)
!10637 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bArmature", file: !210, line: 78, size: 2048, elements: !10638)
!10638 = !{!10639, !10640, !10641, !10642, !10643, !10644, !10679, !10682, !10683, !10684, !10685, !10686, !10687, !10688, !10689, !10690, !10691, !10692, !10693, !10694, !10695, !10696, !10697, !10698, !10699, !10700, !10701}
!10639 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !10637, file: !210, line: 79, baseType: !427, size: 960)
!10640 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !10637, file: !210, line: 80, baseType: !833, size: 64, offset: 960)
!10641 = !DIDerivedType(tag: DW_TAG_member, name: "bonebase", scope: !10637, file: !210, line: 82, baseType: !388, size: 128, offset: 1024)
!10642 = !DIDerivedType(tag: DW_TAG_member, name: "chainbase", scope: !10637, file: !210, line: 83, baseType: !388, size: 128, offset: 1152)
!10643 = !DIDerivedType(tag: DW_TAG_member, name: "edbo", scope: !10637, file: !210, line: 84, baseType: !565, size: 64, offset: 1280)
!10644 = !DIDerivedType(tag: DW_TAG_member, name: "act_bone", scope: !10637, file: !210, line: 92, baseType: !10645, size: 64, offset: 1344)
!10645 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10646, size: 64)
!10646 = !DIDerivedType(tag: DW_TAG_typedef, name: "Bone", file: !210, line: 76, baseType: !10647)
!10647 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Bone", file: !210, line: 48, size: 2624, elements: !10648)
!10648 = !{!10649, !10651, !10652, !10653, !10654, !10655, !10656, !10657, !10658, !10659, !10660, !10661, !10662, !10663, !10664, !10665, !10666, !10667, !10668, !10669, !10670, !10671, !10672, !10673, !10674, !10675, !10676, !10677}
!10649 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !10647, file: !210, line: 49, baseType: !10650, size: 64)
!10650 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10647, size: 64)
!10651 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !10647, file: !210, line: 49, baseType: !10650, size: 64, offset: 64)
!10652 = !DIDerivedType(tag: DW_TAG_member, name: "prop", scope: !10647, file: !210, line: 50, baseType: !1094, size: 64, offset: 128)
!10653 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !10647, file: !210, line: 51, baseType: !10650, size: 64, offset: 192)
!10654 = !DIDerivedType(tag: DW_TAG_member, name: "childbase", scope: !10647, file: !210, line: 52, baseType: !388, size: 128, offset: 256)
!10655 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !10647, file: !210, line: 53, baseType: !692, size: 512, offset: 384)
!10656 = !DIDerivedType(tag: DW_TAG_member, name: "roll", scope: !10647, file: !210, line: 55, baseType: !396, size: 32, offset: 896)
!10657 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !10647, file: !210, line: 56, baseType: !779, size: 96, offset: 928)
!10658 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !10647, file: !210, line: 57, baseType: !779, size: 96, offset: 1024)
!10659 = !DIDerivedType(tag: DW_TAG_member, name: "bone_mat", scope: !10647, file: !210, line: 58, baseType: !1755, size: 288, offset: 1120)
!10660 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !10647, file: !210, line: 60, baseType: !98, size: 32, offset: 1408)
!10661 = !DIDerivedType(tag: DW_TAG_member, name: "arm_head", scope: !10647, file: !210, line: 62, baseType: !779, size: 96, offset: 1440)
!10662 = !DIDerivedType(tag: DW_TAG_member, name: "arm_tail", scope: !10647, file: !210, line: 63, baseType: !779, size: 96, offset: 1536)
!10663 = !DIDerivedType(tag: DW_TAG_member, name: "arm_mat", scope: !10647, file: !210, line: 64, baseType: !1752, size: 512, offset: 1632)
!10664 = !DIDerivedType(tag: DW_TAG_member, name: "arm_roll", scope: !10647, file: !210, line: 65, baseType: !396, size: 32, offset: 2144)
!10665 = !DIDerivedType(tag: DW_TAG_member, name: "dist", scope: !10647, file: !210, line: 67, baseType: !396, size: 32, offset: 2176)
!10666 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !10647, file: !210, line: 67, baseType: !396, size: 32, offset: 2208)
!10667 = !DIDerivedType(tag: DW_TAG_member, name: "xwidth", scope: !10647, file: !210, line: 68, baseType: !396, size: 32, offset: 2240)
!10668 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !10647, file: !210, line: 68, baseType: !396, size: 32, offset: 2272)
!10669 = !DIDerivedType(tag: DW_TAG_member, name: "zwidth", scope: !10647, file: !210, line: 68, baseType: !396, size: 32, offset: 2304)
!10670 = !DIDerivedType(tag: DW_TAG_member, name: "ease1", scope: !10647, file: !210, line: 69, baseType: !396, size: 32, offset: 2336)
!10671 = !DIDerivedType(tag: DW_TAG_member, name: "ease2", scope: !10647, file: !210, line: 69, baseType: !396, size: 32, offset: 2368)
!10672 = !DIDerivedType(tag: DW_TAG_member, name: "rad_head", scope: !10647, file: !210, line: 70, baseType: !396, size: 32, offset: 2400)
!10673 = !DIDerivedType(tag: DW_TAG_member, name: "rad_tail", scope: !10647, file: !210, line: 70, baseType: !396, size: 32, offset: 2432)
!10674 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !10647, file: !210, line: 72, baseType: !779, size: 96, offset: 2464)
!10675 = !DIDerivedType(tag: DW_TAG_member, name: "layer", scope: !10647, file: !210, line: 73, baseType: !98, size: 32, offset: 2560)
!10676 = !DIDerivedType(tag: DW_TAG_member, name: "segments", scope: !10647, file: !210, line: 74, baseType: !399, size: 16, offset: 2592)
!10677 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !10647, file: !210, line: 75, baseType: !10678, size: 16, offset: 2608)
!10678 = !DICompositeType(tag: DW_TAG_array_type, baseType: !399, size: 16, elements: !763)
!10679 = !DIDerivedType(tag: DW_TAG_member, name: "act_edbone", scope: !10637, file: !210, line: 93, baseType: !10680, size: 64, offset: 1408)
!10680 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10681, size: 64)
!10681 = !DICompositeType(tag: DW_TAG_structure_type, name: "EditBone", file: !210, line: 93, flags: DIFlagFwdDecl)
!10682 = !DIDerivedType(tag: DW_TAG_member, name: "sketch", scope: !10637, file: !210, line: 95, baseType: !372, size: 64, offset: 1472)
!10683 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !10637, file: !210, line: 97, baseType: !98, size: 32, offset: 1536)
!10684 = !DIDerivedType(tag: DW_TAG_member, name: "drawtype", scope: !10637, file: !210, line: 98, baseType: !98, size: 32, offset: 1568)
!10685 = !DIDerivedType(tag: DW_TAG_member, name: "gevertdeformer", scope: !10637, file: !210, line: 99, baseType: !98, size: 32, offset: 1600)
!10686 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !10637, file: !210, line: 100, baseType: !98, size: 32, offset: 1632)
!10687 = !DIDerivedType(tag: DW_TAG_member, name: "deformflag", scope: !10637, file: !210, line: 101, baseType: !399, size: 16, offset: 1664)
!10688 = !DIDerivedType(tag: DW_TAG_member, name: "pathflag", scope: !10637, file: !210, line: 102, baseType: !399, size: 16, offset: 1680)
!10689 = !DIDerivedType(tag: DW_TAG_member, name: "layer_used", scope: !10637, file: !210, line: 104, baseType: !7, size: 32, offset: 1696)
!10690 = !DIDerivedType(tag: DW_TAG_member, name: "layer", scope: !10637, file: !210, line: 105, baseType: !7, size: 32, offset: 1728)
!10691 = !DIDerivedType(tag: DW_TAG_member, name: "layer_protected", scope: !10637, file: !210, line: 105, baseType: !7, size: 32, offset: 1760)
!10692 = !DIDerivedType(tag: DW_TAG_member, name: "ghostep", scope: !10637, file: !210, line: 108, baseType: !399, size: 16, offset: 1792)
!10693 = !DIDerivedType(tag: DW_TAG_member, name: "ghostsize", scope: !10637, file: !210, line: 108, baseType: !399, size: 16, offset: 1808)
!10694 = !DIDerivedType(tag: DW_TAG_member, name: "ghosttype", scope: !10637, file: !210, line: 109, baseType: !399, size: 16, offset: 1824)
!10695 = !DIDerivedType(tag: DW_TAG_member, name: "pathsize", scope: !10637, file: !210, line: 109, baseType: !399, size: 16, offset: 1840)
!10696 = !DIDerivedType(tag: DW_TAG_member, name: "ghostsf", scope: !10637, file: !210, line: 110, baseType: !98, size: 32, offset: 1856)
!10697 = !DIDerivedType(tag: DW_TAG_member, name: "ghostef", scope: !10637, file: !210, line: 110, baseType: !98, size: 32, offset: 1888)
!10698 = !DIDerivedType(tag: DW_TAG_member, name: "pathsf", scope: !10637, file: !210, line: 111, baseType: !98, size: 32, offset: 1920)
!10699 = !DIDerivedType(tag: DW_TAG_member, name: "pathef", scope: !10637, file: !210, line: 111, baseType: !98, size: 32, offset: 1952)
!10700 = !DIDerivedType(tag: DW_TAG_member, name: "pathbc", scope: !10637, file: !210, line: 112, baseType: !98, size: 32, offset: 1984)
!10701 = !DIDerivedType(tag: DW_TAG_member, name: "pathac", scope: !10637, file: !210, line: 112, baseType: !98, size: 32, offset: 2016)
!10702 = !DILocation(line: 2829, column: 13, scope: !10629)
!10703 = !DILocalVariable(name: "bone", scope: !10629, file: !3, line: 2830, type: !10645)
!10704 = !DILocation(line: 2830, column: 9, scope: !10629)
!10705 = !DILocation(line: 2832, column: 6, scope: !10629)
!10706 = !DILocation(line: 2832, column: 14, scope: !10629)
!10707 = !DILocation(line: 2832, column: 5, scope: !10629)
!10708 = !DILocation(line: 2833, column: 2, scope: !10629)
!10709 = !DILocation(line: 2833, column: 9, scope: !10629)
!10710 = !DILocation(line: 2834, column: 7, scope: !10711)
!10711 = distinct !DILexicalBlock(scope: !10712, file: !3, line: 2834, column: 7)
!10712 = distinct !DILexicalBlock(scope: !10629, file: !3, line: 2833, column: 14)
!10713 = !DILocation(line: 2834, column: 12, scope: !10711)
!10714 = !DILocation(line: 2834, column: 15, scope: !10711)
!10715 = !DILocation(line: 2834, column: 17, scope: !10711)
!10716 = !DILocation(line: 2834, column: 20, scope: !10711)
!10717 = !DILocation(line: 2834, column: 23, scope: !10711)
!10718 = !DILocation(line: 2834, column: 27, scope: !10711)
!10719 = !DILocation(line: 2834, column: 7, scope: !10712)
!10720 = !DILocation(line: 2835, column: 16, scope: !10721)
!10721 = distinct !DILexicalBlock(scope: !10711, file: !3, line: 2834, column: 36)
!10722 = !DILocation(line: 2835, column: 43, scope: !10721)
!10723 = !DILocation(line: 2835, column: 4, scope: !10721)
!10724 = !DILocation(line: 2836, column: 8, scope: !10725)
!10725 = distinct !DILexicalBlock(scope: !10721, file: !3, line: 2836, column: 8)
!10726 = !DILocation(line: 2836, column: 13, scope: !10725)
!10727 = !DILocation(line: 2836, column: 16, scope: !10725)
!10728 = !DILocation(line: 2836, column: 8, scope: !10721)
!10729 = !DILocation(line: 2836, column: 46, scope: !10725)
!10730 = !DILocation(line: 2836, column: 51, scope: !10725)
!10731 = !DILocation(line: 2836, column: 54, scope: !10725)
!10732 = !DILocation(line: 2836, column: 66, scope: !10725)
!10733 = !DILocation(line: 2836, column: 28, scope: !10725)
!10734 = !DILocation(line: 2838, column: 8, scope: !10735)
!10735 = distinct !DILexicalBlock(scope: !10721, file: !3, line: 2838, column: 8)
!10736 = !DILocation(line: 2838, column: 13, scope: !10735)
!10737 = !DILocation(line: 2838, column: 8, scope: !10721)
!10738 = !DILocation(line: 2838, column: 33, scope: !10735)
!10739 = !DILocation(line: 2838, column: 37, scope: !10735)
!10740 = !DILocation(line: 2838, column: 42, scope: !10735)
!10741 = !DILocation(line: 2838, column: 18, scope: !10735)
!10742 = !DILocation(line: 2841, column: 10, scope: !10721)
!10743 = !DILocation(line: 2841, column: 15, scope: !10721)
!10744 = !DILocation(line: 2841, column: 24, scope: !10721)
!10745 = !DILocation(line: 2841, column: 8, scope: !10721)
!10746 = !DILocation(line: 2842, column: 4, scope: !10721)
!10747 = !DILocation(line: 2842, column: 11, scope: !10721)
!10748 = !DILocation(line: 2843, column: 16, scope: !10749)
!10749 = distinct !DILexicalBlock(scope: !10721, file: !3, line: 2842, column: 17)
!10750 = !DILocation(line: 2843, column: 20, scope: !10749)
!10751 = !DILocation(line: 2843, column: 5, scope: !10749)
!10752 = !DILocation(line: 2844, column: 10, scope: !10749)
!10753 = !DILocation(line: 2844, column: 16, scope: !10749)
!10754 = !DILocation(line: 2844, column: 9, scope: !10749)
!10755 = distinct !{!10755, !10746, !10756}
!10756 = !DILocation(line: 2845, column: 4, scope: !10721)
!10757 = !DILocation(line: 2846, column: 3, scope: !10721)
!10758 = !DILocation(line: 2847, column: 7, scope: !10712)
!10759 = !DILocation(line: 2847, column: 12, scope: !10712)
!10760 = !DILocation(line: 2847, column: 15, scope: !10712)
!10761 = !DILocation(line: 2847, column: 6, scope: !10712)
!10762 = distinct !{!10762, !10708, !10763}
!10763 = !DILocation(line: 2848, column: 2, scope: !10629)
!10764 = !DILocation(line: 2851, column: 10, scope: !10629)
!10765 = !DILocation(line: 2851, column: 2, scope: !10629)
!10766 = !DILocation(line: 2852, column: 1, scope: !10629)
!10767 = distinct !DISubprogram(name: "write_actions", scope: !3, file: !3, line: 691, type: !7324, scopeLine: 692, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !5641)
!10768 = !DILocalVariable(name: "wd", arg: 1, scope: !10767, file: !3, line: 691, type: !5820)
!10769 = !DILocation(line: 691, column: 38, scope: !10767)
!10770 = !DILocalVariable(name: "idbase", arg: 2, scope: !10767, file: !3, line: 691, type: !565)
!10771 = !DILocation(line: 691, column: 52, scope: !10767)
!10772 = !DILocalVariable(name: "act", scope: !10767, file: !3, line: 693, type: !838)
!10773 = !DILocation(line: 693, column: 11, scope: !10767)
!10774 = !DILocalVariable(name: "grp", scope: !10767, file: !3, line: 694, type: !10775)
!10775 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10776, size: 64)
!10776 = !DIDerivedType(tag: DW_TAG_typedef, name: "bActionGroup", file: !544, line: 450, baseType: !10777)
!10777 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bActionGroup", file: !544, line: 440, size: 960, elements: !10778)
!10778 = !{!10779, !10781, !10782, !10783, !10784, !10785, !10786}
!10779 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !10777, file: !544, line: 441, baseType: !10780, size: 64)
!10780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10777, size: 64)
!10781 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !10777, file: !544, line: 441, baseType: !10780, size: 64, offset: 64)
!10782 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !10777, file: !544, line: 443, baseType: !388, size: 128, offset: 128)
!10783 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !10777, file: !544, line: 445, baseType: !98, size: 32, offset: 256)
!10784 = !DIDerivedType(tag: DW_TAG_member, name: "customCol", scope: !10777, file: !544, line: 446, baseType: !98, size: 32, offset: 288)
!10785 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !10777, file: !544, line: 447, baseType: !692, size: 512, offset: 320)
!10786 = !DIDerivedType(tag: DW_TAG_member, name: "cs", scope: !10777, file: !544, line: 449, baseType: !10787, size: 128, offset: 832)
!10787 = !DIDerivedType(tag: DW_TAG_typedef, name: "ThemeWireColor", file: !163, line: 347, baseType: !10788)
!10788 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ThemeWireColor", file: !163, line: 340, size: 128, elements: !10789)
!10789 = !{!10790, !10791, !10792, !10793, !10794}
!10790 = !DIDerivedType(tag: DW_TAG_member, name: "solid", scope: !10788, file: !163, line: 341, baseType: !2395, size: 32)
!10791 = !DIDerivedType(tag: DW_TAG_member, name: "select", scope: !10788, file: !163, line: 342, baseType: !2395, size: 32, offset: 32)
!10792 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !10788, file: !163, line: 343, baseType: !2395, size: 32, offset: 64)
!10793 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !10788, file: !163, line: 345, baseType: !399, size: 16, offset: 96)
!10794 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !10788, file: !163, line: 346, baseType: !399, size: 16, offset: 112)
!10795 = !DILocation(line: 694, column: 16, scope: !10767)
!10796 = !DILocalVariable(name: "marker", scope: !10767, file: !3, line: 695, type: !8582)
!10797 = !DILocation(line: 695, column: 14, scope: !10767)
!10798 = !DILocation(line: 697, column: 11, scope: !10799)
!10799 = distinct !DILexicalBlock(scope: !10767, file: !3, line: 697, column: 2)
!10800 = !DILocation(line: 697, column: 19, scope: !10799)
!10801 = !DILocation(line: 697, column: 10, scope: !10799)
!10802 = !DILocation(line: 697, column: 7, scope: !10799)
!10803 = !DILocation(line: 697, column: 26, scope: !10804)
!10804 = distinct !DILexicalBlock(scope: !10799, file: !3, line: 697, column: 2)
!10805 = !DILocation(line: 697, column: 2, scope: !10799)
!10806 = !DILocation(line: 698, column: 7, scope: !10807)
!10807 = distinct !DILexicalBlock(scope: !10808, file: !3, line: 698, column: 7)
!10808 = distinct !DILexicalBlock(scope: !10804, file: !3, line: 697, column: 50)
!10809 = !DILocation(line: 698, column: 12, scope: !10807)
!10810 = !DILocation(line: 698, column: 15, scope: !10807)
!10811 = !DILocation(line: 698, column: 17, scope: !10807)
!10812 = !DILocation(line: 698, column: 20, scope: !10807)
!10813 = !DILocation(line: 698, column: 23, scope: !10807)
!10814 = !DILocation(line: 698, column: 27, scope: !10807)
!10815 = !DILocation(line: 698, column: 7, scope: !10808)
!10816 = !DILocation(line: 699, column: 16, scope: !10817)
!10817 = distinct !DILexicalBlock(scope: !10807, file: !3, line: 698, column: 36)
!10818 = !DILocation(line: 699, column: 41, scope: !10817)
!10819 = !DILocation(line: 699, column: 4, scope: !10817)
!10820 = !DILocation(line: 700, column: 8, scope: !10821)
!10821 = distinct !DILexicalBlock(scope: !10817, file: !3, line: 700, column: 8)
!10822 = !DILocation(line: 700, column: 13, scope: !10821)
!10823 = !DILocation(line: 700, column: 16, scope: !10821)
!10824 = !DILocation(line: 700, column: 8, scope: !10817)
!10825 = !DILocation(line: 700, column: 46, scope: !10821)
!10826 = !DILocation(line: 700, column: 51, scope: !10821)
!10827 = !DILocation(line: 700, column: 54, scope: !10821)
!10828 = !DILocation(line: 700, column: 66, scope: !10821)
!10829 = !DILocation(line: 700, column: 28, scope: !10821)
!10830 = !DILocation(line: 702, column: 18, scope: !10817)
!10831 = !DILocation(line: 702, column: 23, scope: !10817)
!10832 = !DILocation(line: 702, column: 28, scope: !10817)
!10833 = !DILocation(line: 702, column: 4, scope: !10817)
!10834 = !DILocation(line: 704, column: 13, scope: !10835)
!10835 = distinct !DILexicalBlock(scope: !10817, file: !3, line: 704, column: 4)
!10836 = !DILocation(line: 704, column: 18, scope: !10835)
!10837 = !DILocation(line: 704, column: 25, scope: !10835)
!10838 = !DILocation(line: 704, column: 12, scope: !10835)
!10839 = !DILocation(line: 704, column: 9, scope: !10835)
!10840 = !DILocation(line: 704, column: 32, scope: !10841)
!10841 = distinct !DILexicalBlock(scope: !10835, file: !3, line: 704, column: 4)
!10842 = !DILocation(line: 704, column: 4, scope: !10835)
!10843 = !DILocation(line: 705, column: 17, scope: !10844)
!10844 = distinct !DILexicalBlock(scope: !10841, file: !3, line: 704, column: 52)
!10845 = !DILocation(line: 705, column: 46, scope: !10844)
!10846 = !DILocation(line: 705, column: 5, scope: !10844)
!10847 = !DILocation(line: 706, column: 4, scope: !10844)
!10848 = !DILocation(line: 704, column: 41, scope: !10841)
!10849 = !DILocation(line: 704, column: 46, scope: !10841)
!10850 = !DILocation(line: 704, column: 40, scope: !10841)
!10851 = !DILocation(line: 704, column: 4, scope: !10841)
!10852 = distinct !{!10852, !10842, !10853}
!10853 = !DILocation(line: 706, column: 4, scope: !10835)
!10854 = !DILocation(line: 708, column: 16, scope: !10855)
!10855 = distinct !DILexicalBlock(scope: !10817, file: !3, line: 708, column: 4)
!10856 = !DILocation(line: 708, column: 21, scope: !10855)
!10857 = !DILocation(line: 708, column: 29, scope: !10855)
!10858 = !DILocation(line: 708, column: 15, scope: !10855)
!10859 = !DILocation(line: 708, column: 9, scope: !10855)
!10860 = !DILocation(line: 708, column: 36, scope: !10861)
!10861 = distinct !DILexicalBlock(scope: !10855, file: !3, line: 708, column: 4)
!10862 = !DILocation(line: 708, column: 4, scope: !10855)
!10863 = !DILocation(line: 709, column: 17, scope: !10864)
!10864 = distinct !DILexicalBlock(scope: !10861, file: !3, line: 708, column: 65)
!10865 = !DILocation(line: 709, column: 44, scope: !10864)
!10866 = !DILocation(line: 709, column: 5, scope: !10864)
!10867 = !DILocation(line: 710, column: 4, scope: !10864)
!10868 = !DILocation(line: 708, column: 51, scope: !10861)
!10869 = !DILocation(line: 708, column: 59, scope: !10861)
!10870 = !DILocation(line: 708, column: 50, scope: !10861)
!10871 = !DILocation(line: 708, column: 4, scope: !10861)
!10872 = distinct !{!10872, !10862, !10873}
!10873 = !DILocation(line: 710, column: 4, scope: !10855)
!10874 = !DILocation(line: 711, column: 3, scope: !10817)
!10875 = !DILocation(line: 712, column: 2, scope: !10808)
!10876 = !DILocation(line: 697, column: 36, scope: !10804)
!10877 = !DILocation(line: 697, column: 41, scope: !10804)
!10878 = !DILocation(line: 697, column: 44, scope: !10804)
!10879 = !DILocation(line: 697, column: 34, scope: !10804)
!10880 = !DILocation(line: 697, column: 2, scope: !10804)
!10881 = distinct !{!10881, !10805, !10882}
!10882 = !DILocation(line: 712, column: 2, scope: !10799)
!10883 = !DILocation(line: 715, column: 10, scope: !10767)
!10884 = !DILocation(line: 715, column: 2, scope: !10767)
!10885 = !DILocation(line: 716, column: 1, scope: !10767)
!10886 = distinct !DISubprogram(name: "write_objects", scope: !3, file: !3, line: 1605, type: !7324, scopeLine: 1606, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !5641)
!10887 = !DILocalVariable(name: "wd", arg: 1, scope: !10886, file: !3, line: 1605, type: !5820)
!10888 = !DILocation(line: 1605, column: 38, scope: !10886)
!10889 = !DILocalVariable(name: "idbase", arg: 2, scope: !10886, file: !3, line: 1605, type: !565)
!10890 = !DILocation(line: 1605, column: 52, scope: !10886)
!10891 = !DILocalVariable(name: "ob", scope: !10886, file: !3, line: 1607, type: !10892)
!10892 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10893, size: 64)
!10893 = !DIDerivedType(tag: DW_TAG_typedef, name: "Object", file: !186, line: 295, baseType: !424)
!10894 = !DILocation(line: 1607, column: 10, scope: !10886)
!10895 = !DILocation(line: 1609, column: 6, scope: !10886)
!10896 = !DILocation(line: 1609, column: 14, scope: !10886)
!10897 = !DILocation(line: 1609, column: 4, scope: !10886)
!10898 = !DILocation(line: 1610, column: 2, scope: !10886)
!10899 = !DILocation(line: 1610, column: 9, scope: !10886)
!10900 = !DILocation(line: 1611, column: 7, scope: !10901)
!10901 = distinct !DILexicalBlock(scope: !10902, file: !3, line: 1611, column: 7)
!10902 = distinct !DILexicalBlock(scope: !10886, file: !3, line: 1610, column: 13)
!10903 = !DILocation(line: 1611, column: 11, scope: !10901)
!10904 = !DILocation(line: 1611, column: 14, scope: !10901)
!10905 = !DILocation(line: 1611, column: 16, scope: !10901)
!10906 = !DILocation(line: 1611, column: 19, scope: !10901)
!10907 = !DILocation(line: 1611, column: 22, scope: !10901)
!10908 = !DILocation(line: 1611, column: 26, scope: !10901)
!10909 = !DILocation(line: 1611, column: 7, scope: !10902)
!10910 = !DILocation(line: 1613, column: 16, scope: !10911)
!10911 = distinct !DILexicalBlock(scope: !10901, file: !3, line: 1611, column: 35)
!10912 = !DILocation(line: 1613, column: 40, scope: !10911)
!10913 = !DILocation(line: 1613, column: 4, scope: !10911)
!10914 = !DILocation(line: 1617, column: 8, scope: !10915)
!10915 = distinct !DILexicalBlock(scope: !10911, file: !3, line: 1617, column: 8)
!10916 = !DILocation(line: 1617, column: 12, scope: !10915)
!10917 = !DILocation(line: 1617, column: 15, scope: !10915)
!10918 = !DILocation(line: 1617, column: 8, scope: !10911)
!10919 = !DILocation(line: 1617, column: 45, scope: !10915)
!10920 = !DILocation(line: 1617, column: 49, scope: !10915)
!10921 = !DILocation(line: 1617, column: 52, scope: !10915)
!10922 = !DILocation(line: 1617, column: 64, scope: !10915)
!10923 = !DILocation(line: 1617, column: 27, scope: !10915)
!10924 = !DILocation(line: 1619, column: 8, scope: !10925)
!10925 = distinct !DILexicalBlock(scope: !10911, file: !3, line: 1619, column: 8)
!10926 = !DILocation(line: 1619, column: 12, scope: !10925)
!10927 = !DILocation(line: 1619, column: 8, scope: !10911)
!10928 = !DILocation(line: 1619, column: 32, scope: !10925)
!10929 = !DILocation(line: 1619, column: 36, scope: !10925)
!10930 = !DILocation(line: 1619, column: 40, scope: !10925)
!10931 = !DILocation(line: 1619, column: 17, scope: !10925)
!10932 = !DILocation(line: 1622, column: 14, scope: !10911)
!10933 = !DILocation(line: 1622, column: 39, scope: !10911)
!10934 = !DILocation(line: 1622, column: 43, scope: !10911)
!10935 = !DILocation(line: 1622, column: 38, scope: !10911)
!10936 = !DILocation(line: 1622, column: 24, scope: !10911)
!10937 = !DILocation(line: 1622, column: 51, scope: !10911)
!10938 = !DILocation(line: 1622, column: 55, scope: !10911)
!10939 = !DILocation(line: 1622, column: 4, scope: !10911)
!10940 = !DILocation(line: 1623, column: 14, scope: !10911)
!10941 = !DILocation(line: 1623, column: 37, scope: !10911)
!10942 = !DILocation(line: 1623, column: 41, scope: !10911)
!10943 = !DILocation(line: 1623, column: 36, scope: !10911)
!10944 = !DILocation(line: 1623, column: 24, scope: !10911)
!10945 = !DILocation(line: 1623, column: 49, scope: !10911)
!10946 = !DILocation(line: 1623, column: 53, scope: !10911)
!10947 = !DILocation(line: 1623, column: 4, scope: !10911)
!10948 = !DILocation(line: 1625, column: 21, scope: !10911)
!10949 = !DILocation(line: 1625, column: 26, scope: !10911)
!10950 = !DILocation(line: 1625, column: 30, scope: !10911)
!10951 = !DILocation(line: 1625, column: 4, scope: !10911)
!10952 = !DILocation(line: 1626, column: 18, scope: !10911)
!10953 = !DILocation(line: 1626, column: 23, scope: !10911)
!10954 = !DILocation(line: 1626, column: 27, scope: !10911)
!10955 = !DILocation(line: 1626, column: 4, scope: !10911)
!10956 = !DILocation(line: 1627, column: 22, scope: !10911)
!10957 = !DILocation(line: 1627, column: 27, scope: !10911)
!10958 = !DILocation(line: 1627, column: 31, scope: !10911)
!10959 = !DILocation(line: 1627, column: 4, scope: !10911)
!10960 = !DILocation(line: 1628, column: 20, scope: !10911)
!10961 = !DILocation(line: 1628, column: 25, scope: !10911)
!10962 = !DILocation(line: 1628, column: 29, scope: !10911)
!10963 = !DILocation(line: 1628, column: 4, scope: !10911)
!10964 = !DILocation(line: 1630, column: 8, scope: !10965)
!10965 = distinct !DILexicalBlock(scope: !10911, file: !3, line: 1630, column: 8)
!10966 = !DILocation(line: 1630, column: 12, scope: !10965)
!10967 = !DILocation(line: 1630, column: 17, scope: !10965)
!10968 = !DILocation(line: 1630, column: 8, scope: !10911)
!10969 = !DILocalVariable(name: "arm", scope: !10970, file: !3, line: 1631, type: !10635)
!10970 = distinct !DILexicalBlock(scope: !10965, file: !3, line: 1630, column: 33)
!10971 = !DILocation(line: 1631, column: 16, scope: !10970)
!10972 = !DILocation(line: 1631, column: 22, scope: !10970)
!10973 = !DILocation(line: 1631, column: 26, scope: !10970)
!10974 = !DILocation(line: 1632, column: 9, scope: !10975)
!10975 = distinct !DILexicalBlock(scope: !10970, file: !3, line: 1632, column: 9)
!10976 = !DILocation(line: 1632, column: 13, scope: !10975)
!10977 = !DILocation(line: 1632, column: 16, scope: !10975)
!10978 = !DILocation(line: 1632, column: 20, scope: !10975)
!10979 = !DILocation(line: 1632, column: 25, scope: !10975)
!10980 = !DILocation(line: 1632, column: 28, scope: !10975)
!10981 = !DILocation(line: 1632, column: 33, scope: !10975)
!10982 = !DILocation(line: 1632, column: 9, scope: !10970)
!10983 = !DILocation(line: 1633, column: 18, scope: !10984)
!10984 = distinct !DILexicalBlock(scope: !10975, file: !3, line: 1632, column: 43)
!10985 = !DILocation(line: 1633, column: 22, scope: !10984)
!10986 = !DILocation(line: 1633, column: 28, scope: !10984)
!10987 = !DILocation(line: 1633, column: 44, scope: !10984)
!10988 = !DILocation(line: 1633, column: 49, scope: !10984)
!10989 = !DILocation(line: 1633, column: 59, scope: !10984)
!10990 = !DILocation(line: 1633, column: 6, scope: !10984)
!10991 = !DILocation(line: 1634, column: 5, scope: !10984)
!10992 = !DILocation(line: 1635, column: 4, scope: !10970)
!10993 = !DILocation(line: 1637, column: 15, scope: !10911)
!10994 = !DILocation(line: 1637, column: 19, scope: !10911)
!10995 = !DILocation(line: 1637, column: 23, scope: !10911)
!10996 = !DILocation(line: 1637, column: 4, scope: !10911)
!10997 = !DILocation(line: 1638, column: 20, scope: !10911)
!10998 = !DILocation(line: 1638, column: 25, scope: !10911)
!10999 = !DILocation(line: 1638, column: 29, scope: !10911)
!11000 = !DILocation(line: 1638, column: 4, scope: !10911)
!11001 = !DILocation(line: 1639, column: 22, scope: !10911)
!11002 = !DILocation(line: 1639, column: 27, scope: !10911)
!11003 = !DILocation(line: 1639, column: 31, scope: !10911)
!11004 = !DILocation(line: 1639, column: 4, scope: !10911)
!11005 = !DILocation(line: 1640, column: 21, scope: !10911)
!11006 = !DILocation(line: 1640, column: 25, scope: !10911)
!11007 = !DILocation(line: 1640, column: 29, scope: !10911)
!11008 = !DILocation(line: 1640, column: 4, scope: !10911)
!11009 = !DILocation(line: 1642, column: 16, scope: !10911)
!11010 = !DILocation(line: 1642, column: 44, scope: !10911)
!11011 = !DILocation(line: 1642, column: 48, scope: !10911)
!11012 = !DILocation(line: 1642, column: 4, scope: !10911)
!11013 = !DILocation(line: 1643, column: 16, scope: !10911)
!11014 = !DILocation(line: 1643, column: 41, scope: !10911)
!11015 = !DILocation(line: 1643, column: 45, scope: !10911)
!11016 = !DILocation(line: 1643, column: 4, scope: !10911)
!11017 = !DILocation(line: 1644, column: 8, scope: !11018)
!11018 = distinct !DILexicalBlock(scope: !10911, file: !3, line: 1644, column: 8)
!11019 = !DILocation(line: 1644, column: 12, scope: !11018)
!11020 = !DILocation(line: 1644, column: 8, scope: !10911)
!11021 = !DILocation(line: 1645, column: 23, scope: !11022)
!11022 = distinct !DILexicalBlock(scope: !11018, file: !3, line: 1644, column: 18)
!11023 = !DILocation(line: 1645, column: 28, scope: !11022)
!11024 = !DILocation(line: 1645, column: 32, scope: !11022)
!11025 = !DILocation(line: 1645, column: 38, scope: !11022)
!11026 = !DILocation(line: 1645, column: 5, scope: !11022)
!11027 = !DILocation(line: 1646, column: 17, scope: !11022)
!11028 = !DILocation(line: 1646, column: 49, scope: !11022)
!11029 = !DILocation(line: 1646, column: 53, scope: !11022)
!11030 = !DILocation(line: 1646, column: 59, scope: !11022)
!11031 = !DILocation(line: 1646, column: 5, scope: !11022)
!11032 = !DILocation(line: 1647, column: 4, scope: !11022)
!11033 = !DILocation(line: 1648, column: 16, scope: !10911)
!11034 = !DILocation(line: 1648, column: 47, scope: !10911)
!11035 = !DILocation(line: 1648, column: 51, scope: !10911)
!11036 = !DILocation(line: 1648, column: 4, scope: !10911)
!11037 = !DILocation(line: 1650, column: 8, scope: !11038)
!11038 = distinct !DILexicalBlock(scope: !10911, file: !3, line: 1650, column: 8)
!11039 = !DILocation(line: 1650, column: 12, scope: !11038)
!11040 = !DILocation(line: 1650, column: 8, scope: !10911)
!11041 = !DILocation(line: 1652, column: 17, scope: !11042)
!11042 = distinct !DILexicalBlock(scope: !11038, file: !3, line: 1650, column: 30)
!11043 = !DILocation(line: 1652, column: 45, scope: !11042)
!11044 = !DILocation(line: 1652, column: 49, scope: !11042)
!11045 = !DILocation(line: 1652, column: 5, scope: !11042)
!11046 = !DILocation(line: 1653, column: 4, scope: !11042)
!11047 = !DILocation(line: 1654, column: 8, scope: !11048)
!11048 = distinct !DILexicalBlock(scope: !10911, file: !3, line: 1654, column: 8)
!11049 = !DILocation(line: 1654, column: 12, scope: !11048)
!11050 = !DILocation(line: 1654, column: 8, scope: !10911)
!11051 = !DILocation(line: 1655, column: 17, scope: !11052)
!11052 = distinct !DILexicalBlock(scope: !11048, file: !3, line: 1654, column: 34)
!11053 = !DILocation(line: 1655, column: 46, scope: !11052)
!11054 = !DILocation(line: 1655, column: 50, scope: !11052)
!11055 = !DILocation(line: 1655, column: 5, scope: !11052)
!11056 = !DILocation(line: 1656, column: 4, scope: !11052)
!11057 = !DILocation(line: 1658, column: 8, scope: !11058)
!11058 = distinct !DILexicalBlock(scope: !10911, file: !3, line: 1658, column: 8)
!11059 = !DILocation(line: 1658, column: 12, scope: !11058)
!11060 = !DILocation(line: 1658, column: 17, scope: !11058)
!11061 = !DILocation(line: 1658, column: 29, scope: !11058)
!11062 = !DILocation(line: 1658, column: 32, scope: !11058)
!11063 = !DILocation(line: 1658, column: 36, scope: !11058)
!11064 = !DILocation(line: 1658, column: 51, scope: !11058)
!11065 = !DILocation(line: 1658, column: 8, scope: !10911)
!11066 = !DILocation(line: 1659, column: 17, scope: !11067)
!11067 = distinct !DILexicalBlock(scope: !11058, file: !3, line: 1658, column: 70)
!11068 = !DILocation(line: 1659, column: 43, scope: !11067)
!11069 = !DILocation(line: 1659, column: 47, scope: !11067)
!11070 = !DILocation(line: 1659, column: 5, scope: !11067)
!11071 = !DILocation(line: 1660, column: 4, scope: !11067)
!11072 = !DILocation(line: 1662, column: 26, scope: !10911)
!11073 = !DILocation(line: 1662, column: 31, scope: !10911)
!11074 = !DILocation(line: 1662, column: 35, scope: !10911)
!11075 = !DILocation(line: 1662, column: 4, scope: !10911)
!11076 = !DILocation(line: 1663, column: 20, scope: !10911)
!11077 = !DILocation(line: 1663, column: 25, scope: !10911)
!11078 = !DILocation(line: 1663, column: 29, scope: !10911)
!11079 = !DILocation(line: 1663, column: 4, scope: !10911)
!11080 = !DILocation(line: 1665, column: 14, scope: !10911)
!11081 = !DILocation(line: 1665, column: 37, scope: !10911)
!11082 = !DILocation(line: 1665, column: 41, scope: !10911)
!11083 = !DILocation(line: 1665, column: 4, scope: !10911)
!11084 = !DILocation(line: 1666, column: 14, scope: !10911)
!11085 = !DILocation(line: 1666, column: 37, scope: !10911)
!11086 = !DILocation(line: 1666, column: 41, scope: !10911)
!11087 = !DILocation(line: 1666, column: 4, scope: !10911)
!11088 = !DILocation(line: 1667, column: 3, scope: !10911)
!11089 = !DILocation(line: 1668, column: 7, scope: !10902)
!11090 = !DILocation(line: 1668, column: 11, scope: !10902)
!11091 = !DILocation(line: 1668, column: 14, scope: !10902)
!11092 = !DILocation(line: 1668, column: 5, scope: !10902)
!11093 = distinct !{!11093, !10898, !11094}
!11094 = !DILocation(line: 1669, column: 2, scope: !10886)
!11095 = !DILocation(line: 1672, column: 10, scope: !10886)
!11096 = !DILocation(line: 1672, column: 2, scope: !10886)
!11097 = !DILocation(line: 1673, column: 1, scope: !10886)
!11098 = distinct !DISubprogram(name: "write_materials", scope: !3, file: !3, line: 2160, type: !7324, scopeLine: 2161, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !5641)
!11099 = !DILocalVariable(name: "wd", arg: 1, scope: !11098, file: !3, line: 2160, type: !5820)
!11100 = !DILocation(line: 2160, column: 40, scope: !11098)
!11101 = !DILocalVariable(name: "idbase", arg: 2, scope: !11098, file: !3, line: 2160, type: !565)
!11102 = !DILocation(line: 2160, column: 54, scope: !11098)
!11103 = !DILocalVariable(name: "ma", scope: !11098, file: !3, line: 2162, type: !6853)
!11104 = !DILocation(line: 2162, column: 12, scope: !11098)
!11105 = !DILocalVariable(name: "a", scope: !11098, file: !3, line: 2163, type: !98)
!11106 = !DILocation(line: 2163, column: 6, scope: !11098)
!11107 = !DILocation(line: 2165, column: 6, scope: !11098)
!11108 = !DILocation(line: 2165, column: 14, scope: !11098)
!11109 = !DILocation(line: 2165, column: 4, scope: !11098)
!11110 = !DILocation(line: 2166, column: 2, scope: !11098)
!11111 = !DILocation(line: 2166, column: 9, scope: !11098)
!11112 = !DILocation(line: 2167, column: 7, scope: !11113)
!11113 = distinct !DILexicalBlock(scope: !11114, file: !3, line: 2167, column: 7)
!11114 = distinct !DILexicalBlock(scope: !11098, file: !3, line: 2166, column: 13)
!11115 = !DILocation(line: 2167, column: 11, scope: !11113)
!11116 = !DILocation(line: 2167, column: 14, scope: !11113)
!11117 = !DILocation(line: 2167, column: 16, scope: !11113)
!11118 = !DILocation(line: 2167, column: 19, scope: !11113)
!11119 = !DILocation(line: 2167, column: 22, scope: !11113)
!11120 = !DILocation(line: 2167, column: 26, scope: !11113)
!11121 = !DILocation(line: 2167, column: 7, scope: !11114)
!11122 = !DILocation(line: 2169, column: 16, scope: !11123)
!11123 = distinct !DILexicalBlock(scope: !11113, file: !3, line: 2167, column: 35)
!11124 = !DILocation(line: 2169, column: 42, scope: !11123)
!11125 = !DILocation(line: 2169, column: 4, scope: !11123)
!11126 = !DILocation(line: 2175, column: 8, scope: !11127)
!11127 = distinct !DILexicalBlock(scope: !11123, file: !3, line: 2175, column: 8)
!11128 = !DILocation(line: 2175, column: 12, scope: !11127)
!11129 = !DILocation(line: 2175, column: 15, scope: !11127)
!11130 = !DILocation(line: 2175, column: 8, scope: !11123)
!11131 = !DILocation(line: 2175, column: 45, scope: !11127)
!11132 = !DILocation(line: 2175, column: 49, scope: !11127)
!11133 = !DILocation(line: 2175, column: 52, scope: !11127)
!11134 = !DILocation(line: 2175, column: 64, scope: !11127)
!11135 = !DILocation(line: 2175, column: 27, scope: !11127)
!11136 = !DILocation(line: 2177, column: 8, scope: !11137)
!11137 = distinct !DILexicalBlock(scope: !11123, file: !3, line: 2177, column: 8)
!11138 = !DILocation(line: 2177, column: 12, scope: !11137)
!11139 = !DILocation(line: 2177, column: 8, scope: !11123)
!11140 = !DILocation(line: 2177, column: 32, scope: !11137)
!11141 = !DILocation(line: 2177, column: 36, scope: !11137)
!11142 = !DILocation(line: 2177, column: 40, scope: !11137)
!11143 = !DILocation(line: 2177, column: 17, scope: !11137)
!11144 = !DILocation(line: 2179, column: 10, scope: !11145)
!11145 = distinct !DILexicalBlock(scope: !11123, file: !3, line: 2179, column: 4)
!11146 = !DILocation(line: 2179, column: 9, scope: !11145)
!11147 = !DILocation(line: 2179, column: 14, scope: !11148)
!11148 = distinct !DILexicalBlock(scope: !11145, file: !3, line: 2179, column: 4)
!11149 = !DILocation(line: 2179, column: 15, scope: !11148)
!11150 = !DILocation(line: 2179, column: 4, scope: !11145)
!11151 = !DILocation(line: 2180, column: 9, scope: !11152)
!11152 = distinct !DILexicalBlock(scope: !11153, file: !3, line: 2180, column: 9)
!11153 = distinct !DILexicalBlock(scope: !11148, file: !3, line: 2179, column: 31)
!11154 = !DILocation(line: 2180, column: 13, scope: !11152)
!11155 = !DILocation(line: 2180, column: 18, scope: !11152)
!11156 = !DILocation(line: 2180, column: 9, scope: !11153)
!11157 = !DILocation(line: 2180, column: 34, scope: !11152)
!11158 = !DILocation(line: 2180, column: 55, scope: !11152)
!11159 = !DILocation(line: 2180, column: 59, scope: !11152)
!11160 = !DILocation(line: 2180, column: 64, scope: !11152)
!11161 = !DILocation(line: 2180, column: 22, scope: !11152)
!11162 = !DILocation(line: 2181, column: 4, scope: !11153)
!11163 = !DILocation(line: 2179, column: 27, scope: !11148)
!11164 = !DILocation(line: 2179, column: 4, scope: !11148)
!11165 = distinct !{!11165, !11150, !11166}
!11166 = !DILocation(line: 2181, column: 4, scope: !11145)
!11167 = !DILocation(line: 2183, column: 8, scope: !11168)
!11168 = distinct !DILexicalBlock(scope: !11123, file: !3, line: 2183, column: 8)
!11169 = !DILocation(line: 2183, column: 12, scope: !11168)
!11170 = !DILocation(line: 2183, column: 8, scope: !11123)
!11171 = !DILocation(line: 2183, column: 34, scope: !11168)
!11172 = !DILocation(line: 2183, column: 60, scope: !11168)
!11173 = !DILocation(line: 2183, column: 64, scope: !11168)
!11174 = !DILocation(line: 2183, column: 22, scope: !11168)
!11175 = !DILocation(line: 2184, column: 8, scope: !11176)
!11176 = distinct !DILexicalBlock(scope: !11123, file: !3, line: 2184, column: 8)
!11177 = !DILocation(line: 2184, column: 12, scope: !11176)
!11178 = !DILocation(line: 2184, column: 8, scope: !11123)
!11179 = !DILocation(line: 2184, column: 35, scope: !11176)
!11180 = !DILocation(line: 2184, column: 61, scope: !11176)
!11181 = !DILocation(line: 2184, column: 65, scope: !11176)
!11182 = !DILocation(line: 2184, column: 23, scope: !11176)
!11183 = !DILocation(line: 2187, column: 8, scope: !11184)
!11184 = distinct !DILexicalBlock(scope: !11123, file: !3, line: 2187, column: 8)
!11185 = !DILocation(line: 2187, column: 12, scope: !11184)
!11186 = !DILocation(line: 2187, column: 8, scope: !11123)
!11187 = !DILocation(line: 2188, column: 17, scope: !11188)
!11188 = distinct !DILexicalBlock(scope: !11184, file: !3, line: 2187, column: 22)
!11189 = !DILocation(line: 2188, column: 43, scope: !11188)
!11190 = !DILocation(line: 2188, column: 47, scope: !11188)
!11191 = !DILocation(line: 2188, column: 5, scope: !11188)
!11192 = !DILocation(line: 2189, column: 20, scope: !11188)
!11193 = !DILocation(line: 2189, column: 24, scope: !11188)
!11194 = !DILocation(line: 2189, column: 28, scope: !11188)
!11195 = !DILocation(line: 2189, column: 5, scope: !11188)
!11196 = !DILocation(line: 2190, column: 4, scope: !11188)
!11197 = !DILocation(line: 2192, column: 19, scope: !11123)
!11198 = !DILocation(line: 2192, column: 23, scope: !11123)
!11199 = !DILocation(line: 2192, column: 27, scope: !11123)
!11200 = !DILocation(line: 2192, column: 4, scope: !11123)
!11201 = !DILocation(line: 2193, column: 3, scope: !11123)
!11202 = !DILocation(line: 2194, column: 7, scope: !11114)
!11203 = !DILocation(line: 2194, column: 11, scope: !11114)
!11204 = !DILocation(line: 2194, column: 14, scope: !11114)
!11205 = !DILocation(line: 2194, column: 5, scope: !11114)
!11206 = distinct !{!11206, !11110, !11207}
!11207 = !DILocation(line: 2195, column: 2, scope: !11098)
!11208 = !DILocation(line: 2196, column: 1, scope: !11098)
!11209 = distinct !DISubprogram(name: "write_textures", scope: !3, file: !3, line: 2121, type: !7324, scopeLine: 2122, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !5641)
!11210 = !DILocalVariable(name: "wd", arg: 1, scope: !11209, file: !3, line: 2121, type: !5820)
!11211 = !DILocation(line: 2121, column: 39, scope: !11209)
!11212 = !DILocalVariable(name: "idbase", arg: 2, scope: !11209, file: !3, line: 2121, type: !565)
!11213 = !DILocation(line: 2121, column: 53, scope: !11209)
!11214 = !DILocalVariable(name: "tex", scope: !11209, file: !3, line: 2123, type: !6856)
!11215 = !DILocation(line: 2123, column: 7, scope: !11209)
!11216 = !DILocation(line: 2125, column: 7, scope: !11209)
!11217 = !DILocation(line: 2125, column: 15, scope: !11209)
!11218 = !DILocation(line: 2125, column: 5, scope: !11209)
!11219 = !DILocation(line: 2126, column: 2, scope: !11209)
!11220 = !DILocation(line: 2126, column: 9, scope: !11209)
!11221 = !DILocation(line: 2127, column: 7, scope: !11222)
!11222 = distinct !DILexicalBlock(scope: !11223, file: !3, line: 2127, column: 7)
!11223 = distinct !DILexicalBlock(scope: !11209, file: !3, line: 2126, column: 14)
!11224 = !DILocation(line: 2127, column: 12, scope: !11222)
!11225 = !DILocation(line: 2127, column: 15, scope: !11222)
!11226 = !DILocation(line: 2127, column: 17, scope: !11222)
!11227 = !DILocation(line: 2127, column: 20, scope: !11222)
!11228 = !DILocation(line: 2127, column: 23, scope: !11222)
!11229 = !DILocation(line: 2127, column: 27, scope: !11222)
!11230 = !DILocation(line: 2127, column: 7, scope: !11223)
!11231 = !DILocation(line: 2129, column: 16, scope: !11232)
!11232 = distinct !DILexicalBlock(scope: !11222, file: !3, line: 2127, column: 36)
!11233 = !DILocation(line: 2129, column: 37, scope: !11232)
!11234 = !DILocation(line: 2129, column: 4, scope: !11232)
!11235 = !DILocation(line: 2130, column: 8, scope: !11236)
!11236 = distinct !DILexicalBlock(scope: !11232, file: !3, line: 2130, column: 8)
!11237 = !DILocation(line: 2130, column: 13, scope: !11236)
!11238 = !DILocation(line: 2130, column: 16, scope: !11236)
!11239 = !DILocation(line: 2130, column: 8, scope: !11232)
!11240 = !DILocation(line: 2130, column: 46, scope: !11236)
!11241 = !DILocation(line: 2130, column: 51, scope: !11236)
!11242 = !DILocation(line: 2130, column: 54, scope: !11236)
!11243 = !DILocation(line: 2130, column: 66, scope: !11236)
!11244 = !DILocation(line: 2130, column: 28, scope: !11236)
!11245 = !DILocation(line: 2132, column: 8, scope: !11246)
!11246 = distinct !DILexicalBlock(scope: !11232, file: !3, line: 2132, column: 8)
!11247 = !DILocation(line: 2132, column: 13, scope: !11246)
!11248 = !DILocation(line: 2132, column: 8, scope: !11232)
!11249 = !DILocation(line: 2132, column: 33, scope: !11246)
!11250 = !DILocation(line: 2132, column: 37, scope: !11246)
!11251 = !DILocation(line: 2132, column: 42, scope: !11246)
!11252 = !DILocation(line: 2132, column: 18, scope: !11246)
!11253 = !DILocation(line: 2135, column: 8, scope: !11254)
!11254 = distinct !DILexicalBlock(scope: !11232, file: !3, line: 2135, column: 8)
!11255 = !DILocation(line: 2135, column: 13, scope: !11254)
!11256 = !DILocation(line: 2135, column: 8, scope: !11232)
!11257 = !DILocation(line: 2135, column: 31, scope: !11254)
!11258 = !DILocation(line: 2135, column: 57, scope: !11254)
!11259 = !DILocation(line: 2135, column: 62, scope: !11254)
!11260 = !DILocation(line: 2135, column: 19, scope: !11254)
!11261 = !DILocation(line: 2136, column: 8, scope: !11262)
!11262 = distinct !DILexicalBlock(scope: !11232, file: !3, line: 2136, column: 8)
!11263 = !DILocation(line: 2136, column: 13, scope: !11262)
!11264 = !DILocation(line: 2136, column: 18, scope: !11262)
!11265 = !DILocation(line: 2136, column: 32, scope: !11262)
!11266 = !DILocation(line: 2136, column: 35, scope: !11262)
!11267 = !DILocation(line: 2136, column: 40, scope: !11262)
!11268 = !DILocation(line: 2136, column: 8, scope: !11232)
!11269 = !DILocation(line: 2136, column: 57, scope: !11262)
!11270 = !DILocation(line: 2136, column: 80, scope: !11262)
!11271 = !DILocation(line: 2136, column: 85, scope: !11262)
!11272 = !DILocation(line: 2136, column: 45, scope: !11262)
!11273 = !DILocation(line: 2137, column: 8, scope: !11274)
!11274 = distinct !DILexicalBlock(scope: !11232, file: !3, line: 2137, column: 8)
!11275 = !DILocation(line: 2137, column: 13, scope: !11274)
!11276 = !DILocation(line: 2137, column: 18, scope: !11274)
!11277 = !DILocation(line: 2137, column: 38, scope: !11274)
!11278 = !DILocation(line: 2137, column: 41, scope: !11274)
!11279 = !DILocation(line: 2137, column: 46, scope: !11274)
!11280 = !DILocation(line: 2137, column: 8, scope: !11232)
!11281 = !DILocation(line: 2138, column: 17, scope: !11282)
!11282 = distinct !DILexicalBlock(scope: !11274, file: !3, line: 2137, column: 50)
!11283 = !DILocation(line: 2138, column: 46, scope: !11282)
!11284 = !DILocation(line: 2138, column: 51, scope: !11282)
!11285 = !DILocation(line: 2138, column: 5, scope: !11282)
!11286 = !DILocation(line: 2139, column: 9, scope: !11287)
!11287 = distinct !DILexicalBlock(scope: !11282, file: !3, line: 2139, column: 9)
!11288 = !DILocation(line: 2139, column: 14, scope: !11287)
!11289 = !DILocation(line: 2139, column: 18, scope: !11287)
!11290 = !DILocation(line: 2139, column: 9, scope: !11282)
!11291 = !DILocation(line: 2139, column: 36, scope: !11287)
!11292 = !DILocation(line: 2139, column: 62, scope: !11287)
!11293 = !DILocation(line: 2139, column: 67, scope: !11287)
!11294 = !DILocation(line: 2139, column: 71, scope: !11287)
!11295 = !DILocation(line: 2139, column: 24, scope: !11287)
!11296 = !DILocation(line: 2140, column: 9, scope: !11297)
!11297 = distinct !DILexicalBlock(scope: !11282, file: !3, line: 2140, column: 9)
!11298 = !DILocation(line: 2140, column: 14, scope: !11297)
!11299 = !DILocation(line: 2140, column: 18, scope: !11297)
!11300 = !DILocation(line: 2140, column: 9, scope: !11282)
!11301 = !DILocation(line: 2140, column: 52, scope: !11297)
!11302 = !DILocation(line: 2140, column: 56, scope: !11297)
!11303 = !DILocation(line: 2140, column: 61, scope: !11297)
!11304 = !DILocation(line: 2140, column: 65, scope: !11297)
!11305 = !DILocation(line: 2140, column: 33, scope: !11297)
!11306 = !DILocation(line: 2141, column: 4, scope: !11282)
!11307 = !DILocation(line: 2142, column: 8, scope: !11308)
!11308 = distinct !DILexicalBlock(scope: !11232, file: !3, line: 2142, column: 8)
!11309 = !DILocation(line: 2142, column: 13, scope: !11308)
!11310 = !DILocation(line: 2142, column: 18, scope: !11308)
!11311 = !DILocation(line: 2142, column: 8, scope: !11232)
!11312 = !DILocation(line: 2142, column: 48, scope: !11308)
!11313 = !DILocation(line: 2142, column: 74, scope: !11308)
!11314 = !DILocation(line: 2142, column: 79, scope: !11308)
!11315 = !DILocation(line: 2142, column: 36, scope: !11308)
!11316 = !DILocation(line: 2143, column: 8, scope: !11317)
!11317 = distinct !DILexicalBlock(scope: !11232, file: !3, line: 2143, column: 8)
!11318 = !DILocation(line: 2143, column: 13, scope: !11317)
!11319 = !DILocation(line: 2143, column: 18, scope: !11317)
!11320 = !DILocation(line: 2143, column: 31, scope: !11317)
!11321 = !DILocation(line: 2143, column: 34, scope: !11317)
!11322 = !DILocation(line: 2143, column: 39, scope: !11317)
!11323 = !DILocation(line: 2143, column: 8, scope: !11232)
!11324 = !DILocation(line: 2143, column: 55, scope: !11317)
!11325 = !DILocation(line: 2143, column: 80, scope: !11317)
!11326 = !DILocation(line: 2143, column: 85, scope: !11317)
!11327 = !DILocation(line: 2143, column: 43, scope: !11317)
!11328 = !DILocation(line: 2146, column: 8, scope: !11329)
!11329 = distinct !DILexicalBlock(scope: !11232, file: !3, line: 2146, column: 8)
!11330 = !DILocation(line: 2146, column: 13, scope: !11329)
!11331 = !DILocation(line: 2146, column: 8, scope: !11232)
!11332 = !DILocation(line: 2147, column: 17, scope: !11333)
!11333 = distinct !DILexicalBlock(scope: !11329, file: !3, line: 2146, column: 23)
!11334 = !DILocation(line: 2147, column: 43, scope: !11333)
!11335 = !DILocation(line: 2147, column: 48, scope: !11333)
!11336 = !DILocation(line: 2147, column: 5, scope: !11333)
!11337 = !DILocation(line: 2148, column: 20, scope: !11333)
!11338 = !DILocation(line: 2148, column: 24, scope: !11333)
!11339 = !DILocation(line: 2148, column: 29, scope: !11333)
!11340 = !DILocation(line: 2148, column: 5, scope: !11333)
!11341 = !DILocation(line: 2149, column: 4, scope: !11333)
!11342 = !DILocation(line: 2151, column: 19, scope: !11232)
!11343 = !DILocation(line: 2151, column: 23, scope: !11232)
!11344 = !DILocation(line: 2151, column: 28, scope: !11232)
!11345 = !DILocation(line: 2151, column: 4, scope: !11232)
!11346 = !DILocation(line: 2152, column: 3, scope: !11232)
!11347 = !DILocation(line: 2153, column: 8, scope: !11223)
!11348 = !DILocation(line: 2153, column: 13, scope: !11223)
!11349 = !DILocation(line: 2153, column: 16, scope: !11223)
!11350 = !DILocation(line: 2153, column: 6, scope: !11223)
!11351 = distinct !{!11351, !11219, !11352}
!11352 = !DILocation(line: 2154, column: 2, scope: !11209)
!11353 = !DILocation(line: 2157, column: 10, scope: !11209)
!11354 = !DILocation(line: 2157, column: 2, scope: !11209)
!11355 = !DILocation(line: 2158, column: 1, scope: !11209)
!11356 = distinct !DISubprogram(name: "write_meshes", scope: !3, file: !3, line: 1939, type: !7324, scopeLine: 1940, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !5641)
!11357 = !DILocalVariable(name: "wd", arg: 1, scope: !11356, file: !3, line: 1939, type: !5820)
!11358 = !DILocation(line: 1939, column: 37, scope: !11356)
!11359 = !DILocalVariable(name: "idbase", arg: 2, scope: !11356, file: !3, line: 1939, type: !565)
!11360 = !DILocation(line: 1939, column: 51, scope: !11356)
!11361 = !DILocalVariable(name: "mesh", scope: !11356, file: !3, line: 1941, type: !11362)
!11362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11363, size: 64)
!11363 = !DIDerivedType(tag: DW_TAG_typedef, name: "Mesh", file: !11364, line: 133, baseType: !11365)
!11364 = !DIFile(filename: "blender/source/blender/makesdna/DNA_mesh_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!11365 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Mesh", file: !11364, line: 58, size: 11008, elements: !11366)
!11366 = !{!11367, !11368, !11369, !11370, !11371, !11372, !11373, !11379, !11380, !11390, !11391, !11397, !11405, !11406, !11407, !11420, !11421, !11422, !11423, !11431, !11433, !11436, !11437, !11438, !11439, !11440, !11441, !11442, !11443, !11444, !11445, !11446, !11447, !11448, !11449, !11450, !11451, !11452, !11453, !11454, !11455, !11456, !11457, !11458, !11459, !11460, !11461, !11462, !11463}
!11367 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !11365, file: !11364, line: 59, baseType: !427, size: 960)
!11368 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !11365, file: !11364, line: 60, baseType: !833, size: 64, offset: 960)
!11369 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !11365, file: !11364, line: 62, baseType: !4427, size: 64, offset: 1024)
!11370 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !11365, file: !11364, line: 64, baseType: !978, size: 64, offset: 1088)
!11371 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !11365, file: !11364, line: 65, baseType: !9244, size: 64, offset: 1152)
!11372 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !11365, file: !11364, line: 66, baseType: !3783, size: 64, offset: 1216)
!11373 = !DIDerivedType(tag: DW_TAG_member, name: "mselect", scope: !11365, file: !11364, line: 67, baseType: !11374, size: 64, offset: 1280)
!11374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11375, size: 64)
!11375 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MSelect", file: !2468, line: 154, size: 64, elements: !11376)
!11376 = !{!11377, !11378}
!11377 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !11375, file: !2468, line: 155, baseType: !98, size: 32)
!11378 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !11375, file: !2468, line: 156, baseType: !98, size: 32, offset: 32)
!11379 = !DIDerivedType(tag: DW_TAG_member, name: "mpoly", scope: !11365, file: !11364, line: 71, baseType: !4041, size: 64, offset: 1344)
!11380 = !DIDerivedType(tag: DW_TAG_member, name: "mtpoly", scope: !11365, file: !11364, line: 72, baseType: !11381, size: 64, offset: 1408)
!11381 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11382, size: 64)
!11382 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MTexPoly", file: !2468, line: 93, size: 128, elements: !11383)
!11383 = !{!11384, !11385, !11386, !11387, !11388, !11389}
!11384 = !DIDerivedType(tag: DW_TAG_member, name: "tpage", scope: !11382, file: !2468, line: 94, baseType: !1655, size: 64)
!11385 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !11382, file: !2468, line: 95, baseType: !375, size: 8, offset: 64)
!11386 = !DIDerivedType(tag: DW_TAG_member, name: "transp", scope: !11382, file: !2468, line: 95, baseType: !375, size: 8, offset: 72)
!11387 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !11382, file: !2468, line: 96, baseType: !399, size: 16, offset: 80)
!11388 = !DIDerivedType(tag: DW_TAG_member, name: "tile", scope: !11382, file: !2468, line: 96, baseType: !399, size: 16, offset: 96)
!11389 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !11382, file: !2468, line: 96, baseType: !399, size: 16, offset: 112)
!11390 = !DIDerivedType(tag: DW_TAG_member, name: "mloop", scope: !11365, file: !11364, line: 73, baseType: !4032, size: 64, offset: 1472)
!11391 = !DIDerivedType(tag: DW_TAG_member, name: "mloopuv", scope: !11365, file: !11364, line: 74, baseType: !11392, size: 64, offset: 1536)
!11392 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11393, size: 64)
!11393 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MLoopUV", file: !2468, line: 109, size: 96, elements: !11394)
!11394 = !{!11395, !11396}
!11395 = !DIDerivedType(tag: DW_TAG_member, name: "uv", scope: !11393, file: !2468, line: 110, baseType: !1335, size: 64)
!11396 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !11393, file: !2468, line: 111, baseType: !98, size: 32, offset: 64)
!11397 = !DIDerivedType(tag: DW_TAG_member, name: "mloopcol", scope: !11365, file: !11364, line: 75, baseType: !11398, size: 64, offset: 1600)
!11398 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11399, size: 64)
!11399 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MLoopCol", file: !2468, line: 129, size: 32, elements: !11400)
!11400 = !{!11401, !11402, !11403, !11404}
!11401 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !11399, file: !2468, line: 130, baseType: !375, size: 8)
!11402 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !11399, file: !2468, line: 130, baseType: !375, size: 8, offset: 8)
!11403 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !11399, file: !2468, line: 130, baseType: !375, size: 8, offset: 16)
!11404 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !11399, file: !2468, line: 130, baseType: !375, size: 8, offset: 24)
!11405 = !DIDerivedType(tag: DW_TAG_member, name: "mface", scope: !11365, file: !11364, line: 80, baseType: !4006, size: 64, offset: 1664)
!11406 = !DIDerivedType(tag: DW_TAG_member, name: "mtface", scope: !11365, file: !11364, line: 81, baseType: !4231, size: 64, offset: 1728)
!11407 = !DIDerivedType(tag: DW_TAG_member, name: "tface", scope: !11365, file: !11364, line: 82, baseType: !11408, size: 64, offset: 1792)
!11408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11409, size: 64)
!11409 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "TFace", file: !11364, line: 136, size: 512, elements: !11410)
!11410 = !{!11411, !11412, !11413, !11415, !11416, !11417, !11418, !11419}
!11411 = !DIDerivedType(tag: DW_TAG_member, name: "tpage", scope: !11409, file: !11364, line: 137, baseType: !372, size: 64)
!11412 = !DIDerivedType(tag: DW_TAG_member, name: "uv", scope: !11409, file: !11364, line: 138, baseType: !2177, size: 256, offset: 64)
!11413 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !11409, file: !11364, line: 139, baseType: !11414, size: 128, offset: 320)
!11414 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 128, elements: !409)
!11415 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !11409, file: !11364, line: 140, baseType: !375, size: 8, offset: 448)
!11416 = !DIDerivedType(tag: DW_TAG_member, name: "transp", scope: !11409, file: !11364, line: 140, baseType: !375, size: 8, offset: 456)
!11417 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !11409, file: !11364, line: 141, baseType: !399, size: 16, offset: 464)
!11418 = !DIDerivedType(tag: DW_TAG_member, name: "tile", scope: !11409, file: !11364, line: 141, baseType: !399, size: 16, offset: 480)
!11419 = !DIDerivedType(tag: DW_TAG_member, name: "unwrap", scope: !11409, file: !11364, line: 141, baseType: !399, size: 16, offset: 496)
!11420 = !DIDerivedType(tag: DW_TAG_member, name: "mvert", scope: !11365, file: !11364, line: 83, baseType: !3983, size: 64, offset: 1856)
!11421 = !DIDerivedType(tag: DW_TAG_member, name: "medge", scope: !11365, file: !11364, line: 84, baseType: !3994, size: 64, offset: 1920)
!11422 = !DIDerivedType(tag: DW_TAG_member, name: "dvert", scope: !11365, file: !11364, line: 85, baseType: !2466, size: 64, offset: 1984)
!11423 = !DIDerivedType(tag: DW_TAG_member, name: "mcol", scope: !11365, file: !11364, line: 89, baseType: !11424, size: 64, offset: 2048)
!11424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11425, size: 64)
!11425 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MCol", file: !2468, line: 74, size: 32, elements: !11426)
!11426 = !{!11427, !11428, !11429, !11430}
!11427 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !11425, file: !2468, line: 75, baseType: !375, size: 8)
!11428 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !11425, file: !2468, line: 75, baseType: !375, size: 8, offset: 8)
!11429 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !11425, file: !2468, line: 75, baseType: !375, size: 8, offset: 16)
!11430 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !11425, file: !2468, line: 75, baseType: !375, size: 8, offset: 24)
!11431 = !DIDerivedType(tag: DW_TAG_member, name: "texcomesh", scope: !11365, file: !11364, line: 90, baseType: !11432, size: 64, offset: 2112)
!11432 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11365, size: 64)
!11433 = !DIDerivedType(tag: DW_TAG_member, name: "edit_btmesh", scope: !11365, file: !11364, line: 93, baseType: !11434, size: 64, offset: 2176)
!11434 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11435, size: 64)
!11435 = !DICompositeType(tag: DW_TAG_structure_type, name: "BMEditMesh", file: !11364, line: 93, flags: DIFlagFwdDecl)
!11436 = !DIDerivedType(tag: DW_TAG_member, name: "vdata", scope: !11365, file: !11364, line: 95, baseType: !3726, size: 1600, offset: 2240)
!11437 = !DIDerivedType(tag: DW_TAG_member, name: "edata", scope: !11365, file: !11364, line: 95, baseType: !3726, size: 1600, offset: 3840)
!11438 = !DIDerivedType(tag: DW_TAG_member, name: "fdata", scope: !11365, file: !11364, line: 95, baseType: !3726, size: 1600, offset: 5440)
!11439 = !DIDerivedType(tag: DW_TAG_member, name: "pdata", scope: !11365, file: !11364, line: 98, baseType: !3726, size: 1600, offset: 7040)
!11440 = !DIDerivedType(tag: DW_TAG_member, name: "ldata", scope: !11365, file: !11364, line: 98, baseType: !3726, size: 1600, offset: 8640)
!11441 = !DIDerivedType(tag: DW_TAG_member, name: "totvert", scope: !11365, file: !11364, line: 101, baseType: !98, size: 32, offset: 10240)
!11442 = !DIDerivedType(tag: DW_TAG_member, name: "totedge", scope: !11365, file: !11364, line: 101, baseType: !98, size: 32, offset: 10272)
!11443 = !DIDerivedType(tag: DW_TAG_member, name: "totface", scope: !11365, file: !11364, line: 101, baseType: !98, size: 32, offset: 10304)
!11444 = !DIDerivedType(tag: DW_TAG_member, name: "totselect", scope: !11365, file: !11364, line: 101, baseType: !98, size: 32, offset: 10336)
!11445 = !DIDerivedType(tag: DW_TAG_member, name: "totpoly", scope: !11365, file: !11364, line: 104, baseType: !98, size: 32, offset: 10368)
!11446 = !DIDerivedType(tag: DW_TAG_member, name: "totloop", scope: !11365, file: !11364, line: 104, baseType: !98, size: 32, offset: 10400)
!11447 = !DIDerivedType(tag: DW_TAG_member, name: "act_face", scope: !11365, file: !11364, line: 111, baseType: !98, size: 32, offset: 10432)
!11448 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !11365, file: !11364, line: 114, baseType: !779, size: 96, offset: 10464)
!11449 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !11365, file: !11364, line: 115, baseType: !779, size: 96, offset: 10560)
!11450 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !11365, file: !11364, line: 116, baseType: !779, size: 96, offset: 10656)
!11451 = !DIDerivedType(tag: DW_TAG_member, name: "drawflag", scope: !11365, file: !11364, line: 118, baseType: !98, size: 32, offset: 10752)
!11452 = !DIDerivedType(tag: DW_TAG_member, name: "texflag", scope: !11365, file: !11364, line: 119, baseType: !399, size: 16, offset: 10784)
!11453 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !11365, file: !11364, line: 119, baseType: !399, size: 16, offset: 10800)
!11454 = !DIDerivedType(tag: DW_TAG_member, name: "smoothresh", scope: !11365, file: !11364, line: 120, baseType: !396, size: 32, offset: 10816)
!11455 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !11365, file: !11364, line: 121, baseType: !98, size: 32, offset: 10848)
!11456 = !DIDerivedType(tag: DW_TAG_member, name: "cd_flag", scope: !11365, file: !11364, line: 124, baseType: !375, size: 8, offset: 10880)
!11457 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !11365, file: !11364, line: 124, baseType: !375, size: 8, offset: 10888)
!11458 = !DIDerivedType(tag: DW_TAG_member, name: "subdiv", scope: !11365, file: !11364, line: 126, baseType: !375, size: 8, offset: 10896)
!11459 = !DIDerivedType(tag: DW_TAG_member, name: "subdivr", scope: !11365, file: !11364, line: 126, baseType: !375, size: 8, offset: 10904)
!11460 = !DIDerivedType(tag: DW_TAG_member, name: "subsurftype", scope: !11365, file: !11364, line: 127, baseType: !375, size: 8, offset: 10912)
!11461 = !DIDerivedType(tag: DW_TAG_member, name: "editflag", scope: !11365, file: !11364, line: 128, baseType: !375, size: 8, offset: 10920)
!11462 = !DIDerivedType(tag: DW_TAG_member, name: "totcol", scope: !11365, file: !11364, line: 130, baseType: !399, size: 16, offset: 10928)
!11463 = !DIDerivedType(tag: DW_TAG_member, name: "mr", scope: !11365, file: !11364, line: 132, baseType: !11464, size: 64, offset: 10944)
!11464 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11465, size: 64)
!11465 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Multires", file: !2468, line: 233, size: 3584, elements: !11466)
!11466 = !{!11467, !11468, !11471, !11472, !11473, !11474, !11475, !11476, !11477, !11478, !11479, !11480, !11481, !11482}
!11467 = !DIDerivedType(tag: DW_TAG_member, name: "levels", scope: !11465, file: !2468, line: 234, baseType: !388, size: 128)
!11468 = !DIDerivedType(tag: DW_TAG_member, name: "verts", scope: !11465, file: !2468, line: 235, baseType: !11469, size: 64, offset: 128)
!11469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11470, size: 64)
!11470 = !DIDerivedType(tag: DW_TAG_typedef, name: "MVert", file: !2468, line: 69, baseType: !3984)
!11471 = !DIDerivedType(tag: DW_TAG_member, name: "level_count", scope: !11465, file: !2468, line: 237, baseType: !474, size: 8, offset: 192)
!11472 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !11465, file: !2468, line: 237, baseType: !474, size: 8, offset: 200)
!11473 = !DIDerivedType(tag: DW_TAG_member, name: "newlvl", scope: !11465, file: !2468, line: 237, baseType: !474, size: 8, offset: 208)
!11474 = !DIDerivedType(tag: DW_TAG_member, name: "edgelvl", scope: !11465, file: !2468, line: 237, baseType: !474, size: 8, offset: 216)
!11475 = !DIDerivedType(tag: DW_TAG_member, name: "pinlvl", scope: !11465, file: !2468, line: 237, baseType: !474, size: 8, offset: 224)
!11476 = !DIDerivedType(tag: DW_TAG_member, name: "renderlvl", scope: !11465, file: !2468, line: 237, baseType: !474, size: 8, offset: 232)
!11477 = !DIDerivedType(tag: DW_TAG_member, name: "use_col", scope: !11465, file: !2468, line: 238, baseType: !474, size: 8, offset: 240)
!11478 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !11465, file: !2468, line: 238, baseType: !474, size: 8, offset: 248)
!11479 = !DIDerivedType(tag: DW_TAG_member, name: "vdata", scope: !11465, file: !2468, line: 241, baseType: !3725, size: 1600, offset: 256)
!11480 = !DIDerivedType(tag: DW_TAG_member, name: "fdata", scope: !11465, file: !2468, line: 242, baseType: !3725, size: 1600, offset: 1856)
!11481 = !DIDerivedType(tag: DW_TAG_member, name: "edge_flags", scope: !11465, file: !2468, line: 243, baseType: !537, size: 64, offset: 3456)
!11482 = !DIDerivedType(tag: DW_TAG_member, name: "edge_creases", scope: !11465, file: !2468, line: 244, baseType: !501, size: 64, offset: 3520)
!11483 = !DILocation(line: 1941, column: 8, scope: !11356)
!11484 = !DILocalVariable(name: "save_for_old_blender", scope: !11356, file: !3, line: 1942, type: !98)
!11485 = !DILocation(line: 1942, column: 6, scope: !11356)
!11486 = !DILocation(line: 1945, column: 25, scope: !11356)
!11487 = !DILocation(line: 1945, column: 29, scope: !11356)
!11488 = !DILocation(line: 1945, column: 23, scope: !11356)
!11489 = !DILocation(line: 1948, column: 8, scope: !11356)
!11490 = !DILocation(line: 1948, column: 16, scope: !11356)
!11491 = !DILocation(line: 1948, column: 6, scope: !11356)
!11492 = !DILocation(line: 1949, column: 2, scope: !11356)
!11493 = !DILocation(line: 1949, column: 9, scope: !11356)
!11494 = !DILocation(line: 1950, column: 7, scope: !11495)
!11495 = distinct !DILexicalBlock(scope: !11496, file: !3, line: 1950, column: 7)
!11496 = distinct !DILexicalBlock(scope: !11356, file: !3, line: 1949, column: 15)
!11497 = !DILocation(line: 1950, column: 13, scope: !11495)
!11498 = !DILocation(line: 1950, column: 16, scope: !11495)
!11499 = !DILocation(line: 1950, column: 18, scope: !11495)
!11500 = !DILocation(line: 1950, column: 21, scope: !11495)
!11501 = !DILocation(line: 1950, column: 24, scope: !11495)
!11502 = !DILocation(line: 1950, column: 28, scope: !11495)
!11503 = !DILocation(line: 1950, column: 7, scope: !11496)
!11504 = !DILocation(line: 1952, column: 9, scope: !11505)
!11505 = distinct !DILexicalBlock(scope: !11506, file: !3, line: 1952, column: 8)
!11506 = distinct !DILexicalBlock(scope: !11495, file: !3, line: 1950, column: 37)
!11507 = !DILocation(line: 1952, column: 8, scope: !11506)
!11508 = !DILocalVariable(name: "old_mesh", scope: !11509, file: !3, line: 1957, type: !11362)
!11509 = distinct !DILexicalBlock(scope: !11505, file: !3, line: 1952, column: 31)
!11510 = !DILocation(line: 1957, column: 11, scope: !11509)
!11511 = !DILocation(line: 1957, column: 22, scope: !11509)
!11512 = !DILocalVariable(name: "copy_mesh", scope: !11509, file: !3, line: 1958, type: !11363)
!11513 = !DILocation(line: 1958, column: 10, scope: !11509)
!11514 = !DILocation(line: 1958, column: 23, scope: !11509)
!11515 = !DILocation(line: 1958, column: 22, scope: !11509)
!11516 = !DILocation(line: 1959, column: 10, scope: !11509)
!11517 = !DILocation(line: 1962, column: 5, scope: !11509)
!11518 = !DILocation(line: 1962, column: 11, scope: !11509)
!11519 = !DILocation(line: 1962, column: 17, scope: !11509)
!11520 = !DILocation(line: 1963, column: 5, scope: !11509)
!11521 = !DILocation(line: 1963, column: 11, scope: !11509)
!11522 = !DILocation(line: 1963, column: 19, scope: !11509)
!11523 = !DILocation(line: 1964, column: 13, scope: !11509)
!11524 = !DILocation(line: 1964, column: 19, scope: !11509)
!11525 = !DILocation(line: 1964, column: 5, scope: !11509)
!11526 = !DILocation(line: 1966, column: 28, scope: !11509)
!11527 = !DILocation(line: 1966, column: 50, scope: !11509)
!11528 = !DILocation(line: 1966, column: 60, scope: !11509)
!11529 = !DILocation(line: 1966, column: 5, scope: !11509)
!11530 = !DILocation(line: 1972, column: 9, scope: !11531)
!11531 = distinct !DILexicalBlock(scope: !11509, file: !3, line: 1972, column: 9)
!11532 = !DILocation(line: 1972, column: 15, scope: !11531)
!11533 = !DILocation(line: 1972, column: 18, scope: !11531)
!11534 = !DILocation(line: 1972, column: 9, scope: !11509)
!11535 = !DILocation(line: 1972, column: 48, scope: !11531)
!11536 = !DILocation(line: 1972, column: 54, scope: !11531)
!11537 = !DILocation(line: 1972, column: 57, scope: !11531)
!11538 = !DILocation(line: 1972, column: 69, scope: !11531)
!11539 = !DILocation(line: 1972, column: 30, scope: !11531)
!11540 = !DILocation(line: 1973, column: 9, scope: !11541)
!11541 = distinct !DILexicalBlock(scope: !11509, file: !3, line: 1973, column: 9)
!11542 = !DILocation(line: 1973, column: 15, scope: !11541)
!11543 = !DILocation(line: 1973, column: 9, scope: !11509)
!11544 = !DILocation(line: 1973, column: 35, scope: !11541)
!11545 = !DILocation(line: 1973, column: 39, scope: !11541)
!11546 = !DILocation(line: 1973, column: 45, scope: !11541)
!11547 = !DILocation(line: 1973, column: 20, scope: !11541)
!11548 = !DILocation(line: 1975, column: 15, scope: !11509)
!11549 = !DILocation(line: 1975, column: 40, scope: !11509)
!11550 = !DILocation(line: 1975, column: 46, scope: !11509)
!11551 = !DILocation(line: 1975, column: 39, scope: !11509)
!11552 = !DILocation(line: 1975, column: 25, scope: !11509)
!11553 = !DILocation(line: 1975, column: 54, scope: !11509)
!11554 = !DILocation(line: 1975, column: 60, scope: !11509)
!11555 = !DILocation(line: 1975, column: 5, scope: !11509)
!11556 = !DILocation(line: 1976, column: 15, scope: !11509)
!11557 = !DILocation(line: 1976, column: 43, scope: !11509)
!11558 = !DILocation(line: 1976, column: 49, scope: !11509)
!11559 = !DILocation(line: 1976, column: 41, scope: !11509)
!11560 = !DILocation(line: 1976, column: 25, scope: !11509)
!11561 = !DILocation(line: 1976, column: 60, scope: !11509)
!11562 = !DILocation(line: 1976, column: 66, scope: !11509)
!11563 = !DILocation(line: 1976, column: 5, scope: !11509)
!11564 = !DILocation(line: 1978, column: 22, scope: !11509)
!11565 = !DILocation(line: 1978, column: 27, scope: !11509)
!11566 = !DILocation(line: 1978, column: 33, scope: !11509)
!11567 = !DILocation(line: 1978, column: 37, scope: !11509)
!11568 = !DILocation(line: 1978, column: 43, scope: !11509)
!11569 = !DILocation(line: 1978, column: 53, scope: !11509)
!11570 = !DILocation(line: 1978, column: 59, scope: !11509)
!11571 = !DILocation(line: 1978, column: 5, scope: !11509)
!11572 = !DILocation(line: 1979, column: 22, scope: !11509)
!11573 = !DILocation(line: 1979, column: 27, scope: !11509)
!11574 = !DILocation(line: 1979, column: 33, scope: !11509)
!11575 = !DILocation(line: 1979, column: 37, scope: !11509)
!11576 = !DILocation(line: 1979, column: 43, scope: !11509)
!11577 = !DILocation(line: 1979, column: 53, scope: !11509)
!11578 = !DILocation(line: 1979, column: 59, scope: !11509)
!11579 = !DILocation(line: 1979, column: 5, scope: !11509)
!11580 = !DILocation(line: 1981, column: 22, scope: !11509)
!11581 = !DILocation(line: 1981, column: 27, scope: !11509)
!11582 = !DILocation(line: 1981, column: 33, scope: !11509)
!11583 = !DILocation(line: 1981, column: 37, scope: !11509)
!11584 = !DILocation(line: 1981, column: 43, scope: !11509)
!11585 = !DILocation(line: 1981, column: 53, scope: !11509)
!11586 = !DILocation(line: 1981, column: 59, scope: !11509)
!11587 = !DILocation(line: 1981, column: 5, scope: !11509)
!11588 = !DILocation(line: 1982, column: 22, scope: !11509)
!11589 = !DILocation(line: 1982, column: 27, scope: !11509)
!11590 = !DILocation(line: 1982, column: 33, scope: !11509)
!11591 = !DILocation(line: 1982, column: 37, scope: !11509)
!11592 = !DILocation(line: 1982, column: 43, scope: !11509)
!11593 = !DILocation(line: 1982, column: 53, scope: !11509)
!11594 = !DILocation(line: 1982, column: 59, scope: !11509)
!11595 = !DILocation(line: 1982, column: 5, scope: !11509)
!11596 = !DILocation(line: 1983, column: 22, scope: !11509)
!11597 = !DILocation(line: 1983, column: 27, scope: !11509)
!11598 = !DILocation(line: 1983, column: 33, scope: !11509)
!11599 = !DILocation(line: 1983, column: 37, scope: !11509)
!11600 = !DILocation(line: 1983, column: 43, scope: !11509)
!11601 = !DILocation(line: 1983, column: 53, scope: !11509)
!11602 = !DILocation(line: 1983, column: 59, scope: !11509)
!11603 = !DILocation(line: 1983, column: 5, scope: !11509)
!11604 = !DILocation(line: 1987, column: 12, scope: !11509)
!11605 = !DILocation(line: 1987, column: 10, scope: !11509)
!11606 = !DILocation(line: 1990, column: 4, scope: !11509)
!11607 = !DILocalVariable(name: "old_mesh", scope: !11608, file: !3, line: 1996, type: !11362)
!11608 = distinct !DILexicalBlock(scope: !11505, file: !3, line: 1991, column: 9)
!11609 = !DILocation(line: 1996, column: 11, scope: !11608)
!11610 = !DILocation(line: 1996, column: 22, scope: !11608)
!11611 = !DILocalVariable(name: "copy_mesh", scope: !11608, file: !3, line: 1997, type: !11363)
!11612 = !DILocation(line: 1997, column: 10, scope: !11608)
!11613 = !DILocation(line: 1997, column: 23, scope: !11608)
!11614 = !DILocation(line: 1997, column: 22, scope: !11608)
!11615 = !DILocation(line: 1998, column: 10, scope: !11608)
!11616 = !DILocation(line: 2000, column: 5, scope: !11608)
!11617 = !DILocation(line: 2000, column: 11, scope: !11608)
!11618 = !DILocation(line: 2000, column: 17, scope: !11608)
!11619 = !DILocation(line: 2001, column: 5, scope: !11608)
!11620 = !DILocation(line: 2001, column: 11, scope: !11608)
!11621 = !DILocation(line: 2001, column: 17, scope: !11608)
!11622 = !DILocation(line: 2002, column: 5, scope: !11608)
!11623 = !DILocation(line: 2002, column: 11, scope: !11608)
!11624 = !DILocation(line: 2002, column: 19, scope: !11608)
!11625 = !DILocation(line: 2003, column: 5, scope: !11608)
!11626 = !DILocation(line: 2003, column: 11, scope: !11608)
!11627 = !DILocation(line: 2003, column: 19, scope: !11608)
!11628 = !DILocation(line: 2004, column: 5, scope: !11608)
!11629 = !DILocation(line: 2004, column: 11, scope: !11608)
!11630 = !DILocation(line: 2004, column: 19, scope: !11608)
!11631 = !DILocation(line: 2005, column: 23, scope: !11608)
!11632 = !DILocation(line: 2005, column: 29, scope: !11608)
!11633 = !DILocation(line: 2005, column: 5, scope: !11608)
!11634 = !DILocation(line: 2006, column: 23, scope: !11608)
!11635 = !DILocation(line: 2006, column: 29, scope: !11608)
!11636 = !DILocation(line: 2006, column: 5, scope: !11608)
!11637 = !DILocation(line: 2007, column: 23, scope: !11608)
!11638 = !DILocation(line: 2007, column: 29, scope: !11608)
!11639 = !DILocation(line: 2007, column: 5, scope: !11608)
!11640 = !DILocation(line: 2008, column: 5, scope: !11608)
!11641 = !DILocation(line: 2008, column: 11, scope: !11608)
!11642 = !DILocation(line: 2008, column: 23, scope: !11608)
!11643 = !DILocation(line: 2011, column: 46, scope: !11608)
!11644 = !DILocation(line: 2011, column: 52, scope: !11608)
!11645 = !DILocation(line: 2011, column: 60, scope: !11608)
!11646 = !DILocation(line: 2011, column: 70, scope: !11608)
!11647 = !DILocation(line: 2011, column: 78, scope: !11608)
!11648 = !DILocation(line: 2011, column: 88, scope: !11608)
!11649 = !DILocation(line: 2012, column: 45, scope: !11608)
!11650 = !DILocation(line: 2012, column: 51, scope: !11608)
!11651 = !DILocation(line: 2012, column: 60, scope: !11608)
!11652 = !DILocation(line: 2012, column: 70, scope: !11608)
!11653 = !DILocation(line: 2012, column: 79, scope: !11608)
!11654 = !DILocation(line: 2012, column: 89, scope: !11608)
!11655 = !DILocation(line: 2011, column: 21, scope: !11608)
!11656 = !DILocation(line: 2011, column: 5, scope: !11608)
!11657 = !DILocation(line: 2011, column: 11, scope: !11608)
!11658 = !DILocation(line: 2011, column: 19, scope: !11608)
!11659 = !DILocation(line: 2014, column: 41, scope: !11608)
!11660 = !DILocation(line: 2014, column: 5, scope: !11608)
!11661 = !DILocation(line: 2016, column: 28, scope: !11608)
!11662 = !DILocation(line: 2016, column: 50, scope: !11608)
!11663 = !DILocation(line: 2016, column: 60, scope: !11608)
!11664 = !DILocation(line: 2016, column: 5, scope: !11608)
!11665 = !DILocation(line: 2019, column: 9, scope: !11666)
!11666 = distinct !DILexicalBlock(scope: !11608, file: !3, line: 2019, column: 9)
!11667 = !DILocation(line: 2019, column: 15, scope: !11666)
!11668 = !DILocation(line: 2019, column: 18, scope: !11666)
!11669 = !DILocation(line: 2019, column: 9, scope: !11608)
!11670 = !DILocation(line: 2019, column: 48, scope: !11666)
!11671 = !DILocation(line: 2019, column: 54, scope: !11666)
!11672 = !DILocation(line: 2019, column: 57, scope: !11666)
!11673 = !DILocation(line: 2019, column: 69, scope: !11666)
!11674 = !DILocation(line: 2019, column: 30, scope: !11666)
!11675 = !DILocation(line: 2020, column: 9, scope: !11676)
!11676 = distinct !DILexicalBlock(scope: !11608, file: !3, line: 2020, column: 9)
!11677 = !DILocation(line: 2020, column: 15, scope: !11676)
!11678 = !DILocation(line: 2020, column: 9, scope: !11608)
!11679 = !DILocation(line: 2020, column: 35, scope: !11676)
!11680 = !DILocation(line: 2020, column: 39, scope: !11676)
!11681 = !DILocation(line: 2020, column: 45, scope: !11676)
!11682 = !DILocation(line: 2020, column: 20, scope: !11676)
!11683 = !DILocation(line: 2022, column: 15, scope: !11608)
!11684 = !DILocation(line: 2022, column: 40, scope: !11608)
!11685 = !DILocation(line: 2022, column: 46, scope: !11608)
!11686 = !DILocation(line: 2022, column: 39, scope: !11608)
!11687 = !DILocation(line: 2022, column: 25, scope: !11608)
!11688 = !DILocation(line: 2022, column: 54, scope: !11608)
!11689 = !DILocation(line: 2022, column: 60, scope: !11608)
!11690 = !DILocation(line: 2022, column: 5, scope: !11608)
!11691 = !DILocation(line: 2025, column: 22, scope: !11608)
!11692 = !DILocation(line: 2025, column: 27, scope: !11608)
!11693 = !DILocation(line: 2025, column: 33, scope: !11608)
!11694 = !DILocation(line: 2025, column: 37, scope: !11608)
!11695 = !DILocation(line: 2025, column: 43, scope: !11608)
!11696 = !DILocation(line: 2025, column: 53, scope: !11608)
!11697 = !DILocation(line: 2025, column: 59, scope: !11608)
!11698 = !DILocation(line: 2025, column: 5, scope: !11608)
!11699 = !DILocation(line: 2026, column: 22, scope: !11608)
!11700 = !DILocation(line: 2026, column: 27, scope: !11608)
!11701 = !DILocation(line: 2026, column: 33, scope: !11608)
!11702 = !DILocation(line: 2026, column: 37, scope: !11608)
!11703 = !DILocation(line: 2026, column: 43, scope: !11608)
!11704 = !DILocation(line: 2026, column: 53, scope: !11608)
!11705 = !DILocation(line: 2026, column: 59, scope: !11608)
!11706 = !DILocation(line: 2026, column: 5, scope: !11608)
!11707 = !DILocation(line: 2027, column: 22, scope: !11608)
!11708 = !DILocation(line: 2027, column: 27, scope: !11608)
!11709 = !DILocation(line: 2027, column: 33, scope: !11608)
!11710 = !DILocation(line: 2027, column: 37, scope: !11608)
!11711 = !DILocation(line: 2027, column: 43, scope: !11608)
!11712 = !DILocation(line: 2027, column: 53, scope: !11608)
!11713 = !DILocation(line: 2027, column: 59, scope: !11608)
!11714 = !DILocation(line: 2027, column: 5, scope: !11608)
!11715 = !DILocation(line: 2034, column: 22, scope: !11608)
!11716 = !DILocation(line: 2034, column: 28, scope: !11608)
!11717 = !DILocation(line: 2034, column: 35, scope: !11608)
!11718 = !DILocation(line: 2034, column: 41, scope: !11608)
!11719 = !DILocation(line: 2034, column: 5, scope: !11608)
!11720 = !DILocation(line: 2037, column: 12, scope: !11608)
!11721 = !DILocation(line: 2037, column: 10, scope: !11608)
!11722 = !DILocation(line: 2040, column: 3, scope: !11506)
!11723 = !DILocation(line: 2041, column: 9, scope: !11496)
!11724 = !DILocation(line: 2041, column: 15, scope: !11496)
!11725 = !DILocation(line: 2041, column: 18, scope: !11496)
!11726 = !DILocation(line: 2041, column: 7, scope: !11496)
!11727 = distinct !{!11727, !11492, !11728}
!11728 = !DILocation(line: 2042, column: 2, scope: !11356)
!11729 = !DILocation(line: 2043, column: 1, scope: !11356)
!11730 = distinct !DISubprogram(name: "write_particlesettings", scope: !3, file: !3, line: 1104, type: !7324, scopeLine: 1105, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !5641)
!11731 = !DILocalVariable(name: "wd", arg: 1, scope: !11730, file: !3, line: 1104, type: !5820)
!11732 = !DILocation(line: 1104, column: 47, scope: !11730)
!11733 = !DILocalVariable(name: "idbase", arg: 2, scope: !11730, file: !3, line: 1104, type: !565)
!11734 = !DILocation(line: 1104, column: 61, scope: !11730)
!11735 = !DILocalVariable(name: "part", scope: !11730, file: !3, line: 1106, type: !3368)
!11736 = !DILocation(line: 1106, column: 20, scope: !11730)
!11737 = !DILocalVariable(name: "dw", scope: !11730, file: !3, line: 1107, type: !11738)
!11738 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11739, size: 64)
!11739 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParticleDupliWeight", file: !3141, line: 93, baseType: !11740)
!11740 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleDupliWeight", file: !3141, line: 87, size: 256, elements: !11741)
!11741 = !{!11742, !11744, !11745, !11746, !11747, !11748, !11749}
!11742 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !11740, file: !3141, line: 88, baseType: !11743, size: 64)
!11743 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11740, size: 64)
!11744 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !11740, file: !3141, line: 88, baseType: !11743, size: 64, offset: 64)
!11745 = !DIDerivedType(tag: DW_TAG_member, name: "ob", scope: !11740, file: !3141, line: 89, baseType: !423, size: 64, offset: 128)
!11746 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !11740, file: !3141, line: 90, baseType: !399, size: 16, offset: 192)
!11747 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !11740, file: !3141, line: 91, baseType: !399, size: 16, offset: 208)
!11748 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !11740, file: !3141, line: 92, baseType: !399, size: 16, offset: 224)
!11749 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !11740, file: !3141, line: 92, baseType: !399, size: 16, offset: 240)
!11750 = !DILocation(line: 1107, column: 23, scope: !11730)
!11751 = !DILocalVariable(name: "go", scope: !11730, file: !3, line: 1108, type: !10560)
!11752 = !DILocation(line: 1108, column: 15, scope: !11730)
!11753 = !DILocalVariable(name: "a", scope: !11730, file: !3, line: 1109, type: !98)
!11754 = !DILocation(line: 1109, column: 6, scope: !11730)
!11755 = !DILocation(line: 1111, column: 8, scope: !11730)
!11756 = !DILocation(line: 1111, column: 16, scope: !11730)
!11757 = !DILocation(line: 1111, column: 6, scope: !11730)
!11758 = !DILocation(line: 1112, column: 2, scope: !11730)
!11759 = !DILocation(line: 1112, column: 9, scope: !11730)
!11760 = !DILocation(line: 1113, column: 7, scope: !11761)
!11761 = distinct !DILexicalBlock(scope: !11762, file: !3, line: 1113, column: 7)
!11762 = distinct !DILexicalBlock(scope: !11730, file: !3, line: 1112, column: 15)
!11763 = !DILocation(line: 1113, column: 13, scope: !11761)
!11764 = !DILocation(line: 1113, column: 16, scope: !11761)
!11765 = !DILocation(line: 1113, column: 18, scope: !11761)
!11766 = !DILocation(line: 1113, column: 21, scope: !11761)
!11767 = !DILocation(line: 1113, column: 24, scope: !11761)
!11768 = !DILocation(line: 1113, column: 28, scope: !11761)
!11769 = !DILocation(line: 1113, column: 7, scope: !11762)
!11770 = !DILocation(line: 1115, column: 16, scope: !11771)
!11771 = distinct !DILexicalBlock(scope: !11761, file: !3, line: 1113, column: 37)
!11772 = !DILocation(line: 1115, column: 50, scope: !11771)
!11773 = !DILocation(line: 1115, column: 4, scope: !11771)
!11774 = !DILocation(line: 1116, column: 8, scope: !11775)
!11775 = distinct !DILexicalBlock(scope: !11771, file: !3, line: 1116, column: 8)
!11776 = !DILocation(line: 1116, column: 14, scope: !11775)
!11777 = !DILocation(line: 1116, column: 17, scope: !11775)
!11778 = !DILocation(line: 1116, column: 8, scope: !11771)
!11779 = !DILocation(line: 1116, column: 47, scope: !11775)
!11780 = !DILocation(line: 1116, column: 53, scope: !11775)
!11781 = !DILocation(line: 1116, column: 56, scope: !11775)
!11782 = !DILocation(line: 1116, column: 68, scope: !11775)
!11783 = !DILocation(line: 1116, column: 29, scope: !11775)
!11784 = !DILocation(line: 1117, column: 8, scope: !11785)
!11785 = distinct !DILexicalBlock(scope: !11771, file: !3, line: 1117, column: 8)
!11786 = !DILocation(line: 1117, column: 14, scope: !11785)
!11787 = !DILocation(line: 1117, column: 8, scope: !11771)
!11788 = !DILocation(line: 1117, column: 34, scope: !11785)
!11789 = !DILocation(line: 1117, column: 38, scope: !11785)
!11790 = !DILocation(line: 1117, column: 44, scope: !11785)
!11791 = !DILocation(line: 1117, column: 19, scope: !11785)
!11792 = !DILocation(line: 1118, column: 16, scope: !11771)
!11793 = !DILocation(line: 1118, column: 44, scope: !11771)
!11794 = !DILocation(line: 1118, column: 50, scope: !11771)
!11795 = !DILocation(line: 1118, column: 4, scope: !11771)
!11796 = !DILocation(line: 1119, column: 16, scope: !11771)
!11797 = !DILocation(line: 1119, column: 44, scope: !11771)
!11798 = !DILocation(line: 1119, column: 50, scope: !11771)
!11799 = !DILocation(line: 1119, column: 4, scope: !11771)
!11800 = !DILocation(line: 1120, column: 16, scope: !11771)
!11801 = !DILocation(line: 1120, column: 48, scope: !11771)
!11802 = !DILocation(line: 1120, column: 54, scope: !11771)
!11803 = !DILocation(line: 1120, column: 4, scope: !11771)
!11804 = !DILocation(line: 1122, column: 9, scope: !11771)
!11805 = !DILocation(line: 1122, column: 15, scope: !11771)
!11806 = !DILocation(line: 1122, column: 28, scope: !11771)
!11807 = !DILocation(line: 1122, column: 7, scope: !11771)
!11808 = !DILocation(line: 1123, column: 4, scope: !11771)
!11809 = !DILocation(line: 1123, column: 11, scope: !11810)
!11810 = distinct !DILexicalBlock(scope: !11811, file: !3, line: 1123, column: 4)
!11811 = distinct !DILexicalBlock(scope: !11771, file: !3, line: 1123, column: 4)
!11812 = !DILocation(line: 1123, column: 4, scope: !11811)
!11813 = !DILocation(line: 1125, column: 5, scope: !11814)
!11814 = distinct !DILexicalBlock(scope: !11810, file: !3, line: 1123, column: 28)
!11815 = !DILocation(line: 1125, column: 9, scope: !11814)
!11816 = !DILocation(line: 1125, column: 15, scope: !11814)
!11817 = !DILocation(line: 1126, column: 9, scope: !11818)
!11818 = distinct !DILexicalBlock(scope: !11814, file: !3, line: 1126, column: 9)
!11819 = !DILocation(line: 1126, column: 15, scope: !11818)
!11820 = !DILocation(line: 1126, column: 9, scope: !11814)
!11821 = !DILocation(line: 1127, column: 11, scope: !11822)
!11822 = distinct !DILexicalBlock(scope: !11818, file: !3, line: 1126, column: 26)
!11823 = !DILocation(line: 1127, column: 17, scope: !11822)
!11824 = !DILocation(line: 1127, column: 28, scope: !11822)
!11825 = !DILocation(line: 1127, column: 36, scope: !11822)
!11826 = !DILocation(line: 1127, column: 9, scope: !11822)
!11827 = !DILocation(line: 1128, column: 6, scope: !11822)
!11828 = !DILocation(line: 1128, column: 13, scope: !11822)
!11829 = !DILocation(line: 1128, column: 16, scope: !11822)
!11830 = !DILocation(line: 1128, column: 19, scope: !11822)
!11831 = !DILocation(line: 1128, column: 23, scope: !11822)
!11832 = !DILocation(line: 1128, column: 29, scope: !11822)
!11833 = !DILocation(line: 1128, column: 33, scope: !11822)
!11834 = !DILocation(line: 1128, column: 26, scope: !11822)
!11835 = !DILocation(line: 0, scope: !11822)
!11836 = !DILocation(line: 1129, column: 10, scope: !11837)
!11837 = distinct !DILexicalBlock(scope: !11822, file: !3, line: 1128, column: 37)
!11838 = !DILocation(line: 1129, column: 14, scope: !11837)
!11839 = !DILocation(line: 1129, column: 9, scope: !11837)
!11840 = !DILocation(line: 1130, column: 7, scope: !11837)
!11841 = !DILocation(line: 1130, column: 11, scope: !11837)
!11842 = !DILocation(line: 1130, column: 16, scope: !11837)
!11843 = distinct !{!11843, !11827, !11844}
!11844 = !DILocation(line: 1131, column: 6, scope: !11822)
!11845 = !DILocation(line: 1132, column: 5, scope: !11822)
!11846 = !DILocation(line: 1133, column: 17, scope: !11814)
!11847 = !DILocation(line: 1133, column: 53, scope: !11814)
!11848 = !DILocation(line: 1133, column: 5, scope: !11814)
!11849 = !DILocation(line: 1134, column: 4, scope: !11814)
!11850 = !DILocation(line: 1123, column: 18, scope: !11810)
!11851 = !DILocation(line: 1123, column: 22, scope: !11810)
!11852 = !DILocation(line: 1123, column: 17, scope: !11810)
!11853 = !DILocation(line: 1123, column: 4, scope: !11810)
!11854 = distinct !{!11854, !11812, !11855}
!11855 = !DILocation(line: 1134, column: 4, scope: !11811)
!11856 = !DILocation(line: 1136, column: 8, scope: !11857)
!11857 = distinct !DILexicalBlock(scope: !11771, file: !3, line: 1136, column: 8)
!11858 = !DILocation(line: 1136, column: 14, scope: !11857)
!11859 = !DILocation(line: 1136, column: 20, scope: !11857)
!11860 = !DILocation(line: 1136, column: 23, scope: !11857)
!11861 = !DILocation(line: 1136, column: 29, scope: !11857)
!11862 = !DILocation(line: 1136, column: 38, scope: !11857)
!11863 = !DILocation(line: 1136, column: 8, scope: !11771)
!11864 = !DILocalVariable(name: "state", scope: !11865, file: !3, line: 1137, type: !11866)
!11865 = distinct !DILexicalBlock(scope: !11857, file: !3, line: 1136, column: 58)
!11866 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11867, size: 64)
!11867 = !DIDerivedType(tag: DW_TAG_typedef, name: "BoidState", file: !3173, line: 165, baseType: !11868)
!11868 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BoidState", file: !3173, line: 150, size: 1024, elements: !11869)
!11869 = !{!11870, !11872, !11873, !11874, !11875, !11876, !11877, !11878, !11879, !11880, !11881, !11882, !11883, !11884}
!11870 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !11868, file: !3173, line: 151, baseType: !11871, size: 64)
!11871 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11868, size: 64)
!11872 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !11868, file: !3173, line: 151, baseType: !11871, size: 64, offset: 64)
!11873 = !DIDerivedType(tag: DW_TAG_member, name: "rules", scope: !11868, file: !3173, line: 152, baseType: !388, size: 128, offset: 128)
!11874 = !DIDerivedType(tag: DW_TAG_member, name: "conditions", scope: !11868, file: !3173, line: 153, baseType: !388, size: 128, offset: 256)
!11875 = !DIDerivedType(tag: DW_TAG_member, name: "actions", scope: !11868, file: !3173, line: 154, baseType: !388, size: 128, offset: 384)
!11876 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !11868, file: !3173, line: 155, baseType: !2910, size: 256, offset: 512)
!11877 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !11868, file: !3173, line: 156, baseType: !98, size: 32, offset: 768)
!11878 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !11868, file: !3173, line: 156, baseType: !98, size: 32, offset: 800)
!11879 = !DIDerivedType(tag: DW_TAG_member, name: "ruleset_type", scope: !11868, file: !3173, line: 159, baseType: !98, size: 32, offset: 832)
!11880 = !DIDerivedType(tag: DW_TAG_member, name: "rule_fuzziness", scope: !11868, file: !3173, line: 160, baseType: !396, size: 32, offset: 864)
!11881 = !DIDerivedType(tag: DW_TAG_member, name: "signal_id", scope: !11868, file: !3173, line: 163, baseType: !98, size: 32, offset: 896)
!11882 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !11868, file: !3173, line: 163, baseType: !98, size: 32, offset: 928)
!11883 = !DIDerivedType(tag: DW_TAG_member, name: "volume", scope: !11868, file: !3173, line: 164, baseType: !396, size: 32, offset: 960)
!11884 = !DIDerivedType(tag: DW_TAG_member, name: "falloff", scope: !11868, file: !3173, line: 164, baseType: !396, size: 32, offset: 992)
!11885 = !DILocation(line: 1137, column: 16, scope: !11865)
!11886 = !DILocation(line: 1137, column: 24, scope: !11865)
!11887 = !DILocation(line: 1137, column: 30, scope: !11865)
!11888 = !DILocation(line: 1137, column: 37, scope: !11865)
!11889 = !DILocation(line: 1137, column: 44, scope: !11865)
!11890 = !DILocation(line: 1139, column: 17, scope: !11865)
!11891 = !DILocation(line: 1139, column: 46, scope: !11865)
!11892 = !DILocation(line: 1139, column: 52, scope: !11865)
!11893 = !DILocation(line: 1139, column: 5, scope: !11865)
!11894 = !DILocation(line: 1141, column: 5, scope: !11865)
!11895 = !DILocation(line: 1141, column: 12, scope: !11896)
!11896 = distinct !DILexicalBlock(scope: !11897, file: !3, line: 1141, column: 5)
!11897 = distinct !DILexicalBlock(scope: !11865, file: !3, line: 1141, column: 5)
!11898 = !DILocation(line: 1141, column: 5, scope: !11897)
!11899 = !DILocation(line: 1142, column: 23, scope: !11896)
!11900 = !DILocation(line: 1142, column: 27, scope: !11896)
!11901 = !DILocation(line: 1142, column: 6, scope: !11896)
!11902 = !DILocation(line: 1141, column: 25, scope: !11896)
!11903 = !DILocation(line: 1141, column: 32, scope: !11896)
!11904 = !DILocation(line: 1141, column: 24, scope: !11896)
!11905 = !DILocation(line: 1141, column: 5, scope: !11896)
!11906 = distinct !{!11906, !11898, !11907}
!11907 = !DILocation(line: 1142, column: 32, scope: !11897)
!11908 = !DILocation(line: 1143, column: 4, scope: !11865)
!11909 = !DILocation(line: 1144, column: 8, scope: !11910)
!11910 = distinct !DILexicalBlock(scope: !11771, file: !3, line: 1144, column: 8)
!11911 = !DILocation(line: 1144, column: 14, scope: !11910)
!11912 = !DILocation(line: 1144, column: 20, scope: !11910)
!11913 = !DILocation(line: 1144, column: 23, scope: !11910)
!11914 = !DILocation(line: 1144, column: 29, scope: !11910)
!11915 = !DILocation(line: 1144, column: 38, scope: !11910)
!11916 = !DILocation(line: 1144, column: 8, scope: !11771)
!11917 = !DILocation(line: 1145, column: 17, scope: !11918)
!11918 = distinct !DILexicalBlock(scope: !11910, file: !3, line: 1144, column: 58)
!11919 = !DILocation(line: 1145, column: 50, scope: !11918)
!11920 = !DILocation(line: 1145, column: 56, scope: !11918)
!11921 = !DILocation(line: 1145, column: 5, scope: !11918)
!11922 = !DILocation(line: 1146, column: 4, scope: !11918)
!11923 = !DILocation(line: 1148, column: 10, scope: !11924)
!11924 = distinct !DILexicalBlock(scope: !11771, file: !3, line: 1148, column: 4)
!11925 = !DILocation(line: 1148, column: 9, scope: !11924)
!11926 = !DILocation(line: 1148, column: 14, scope: !11927)
!11927 = distinct !DILexicalBlock(scope: !11924, file: !3, line: 1148, column: 4)
!11928 = !DILocation(line: 1148, column: 15, scope: !11927)
!11929 = !DILocation(line: 1148, column: 4, scope: !11924)
!11930 = !DILocation(line: 1149, column: 9, scope: !11931)
!11931 = distinct !DILexicalBlock(scope: !11932, file: !3, line: 1149, column: 9)
!11932 = distinct !DILexicalBlock(scope: !11927, file: !3, line: 1148, column: 31)
!11933 = !DILocation(line: 1149, column: 15, scope: !11931)
!11934 = !DILocation(line: 1149, column: 20, scope: !11931)
!11935 = !DILocation(line: 1149, column: 9, scope: !11932)
!11936 = !DILocation(line: 1149, column: 36, scope: !11931)
!11937 = !DILocation(line: 1149, column: 57, scope: !11931)
!11938 = !DILocation(line: 1149, column: 63, scope: !11931)
!11939 = !DILocation(line: 1149, column: 68, scope: !11931)
!11940 = !DILocation(line: 1149, column: 24, scope: !11931)
!11941 = !DILocation(line: 1150, column: 4, scope: !11932)
!11942 = !DILocation(line: 1148, column: 27, scope: !11927)
!11943 = !DILocation(line: 1148, column: 4, scope: !11927)
!11944 = distinct !{!11944, !11929, !11945}
!11945 = !DILocation(line: 1150, column: 4, scope: !11924)
!11946 = !DILocation(line: 1151, column: 3, scope: !11771)
!11947 = !DILocation(line: 1152, column: 9, scope: !11762)
!11948 = !DILocation(line: 1152, column: 15, scope: !11762)
!11949 = !DILocation(line: 1152, column: 18, scope: !11762)
!11950 = !DILocation(line: 1152, column: 7, scope: !11762)
!11951 = distinct !{!11951, !11758, !11952}
!11952 = !DILocation(line: 1153, column: 2, scope: !11730)
!11953 = !DILocation(line: 1154, column: 1, scope: !11730)
!11954 = distinct !DISubprogram(name: "write_nodetrees", scope: !3, file: !3, line: 2954, type: !7324, scopeLine: 2955, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !5641)
!11955 = !DILocalVariable(name: "wd", arg: 1, scope: !11954, file: !3, line: 2954, type: !5820)
!11956 = !DILocation(line: 2954, column: 40, scope: !11954)
!11957 = !DILocalVariable(name: "idbase", arg: 2, scope: !11954, file: !3, line: 2954, type: !565)
!11958 = !DILocation(line: 2954, column: 54, scope: !11954)
!11959 = !DILocalVariable(name: "ntree", scope: !11954, file: !3, line: 2956, type: !5196)
!11960 = !DILocation(line: 2956, column: 13, scope: !11954)
!11961 = !DILocation(line: 2958, column: 13, scope: !11962)
!11962 = distinct !DILexicalBlock(scope: !11954, file: !3, line: 2958, column: 2)
!11963 = !DILocation(line: 2958, column: 21, scope: !11962)
!11964 = !DILocation(line: 2958, column: 12, scope: !11962)
!11965 = !DILocation(line: 2958, column: 7, scope: !11962)
!11966 = !DILocation(line: 2958, column: 28, scope: !11967)
!11967 = distinct !DILexicalBlock(scope: !11962, file: !3, line: 2958, column: 2)
!11968 = !DILocation(line: 2958, column: 2, scope: !11962)
!11969 = !DILocation(line: 2959, column: 7, scope: !11970)
!11970 = distinct !DILexicalBlock(scope: !11971, file: !3, line: 2959, column: 7)
!11971 = distinct !DILexicalBlock(scope: !11967, file: !3, line: 2958, column: 58)
!11972 = !DILocation(line: 2959, column: 14, scope: !11970)
!11973 = !DILocation(line: 2959, column: 17, scope: !11970)
!11974 = !DILocation(line: 2959, column: 19, scope: !11970)
!11975 = !DILocation(line: 2959, column: 22, scope: !11970)
!11976 = !DILocation(line: 2959, column: 25, scope: !11970)
!11977 = !DILocation(line: 2959, column: 29, scope: !11970)
!11978 = !DILocation(line: 2959, column: 7, scope: !11971)
!11979 = !DILocation(line: 2960, column: 16, scope: !11980)
!11980 = distinct !DILexicalBlock(scope: !11970, file: !3, line: 2959, column: 38)
!11981 = !DILocation(line: 2960, column: 43, scope: !11980)
!11982 = !DILocation(line: 2960, column: 4, scope: !11980)
!11983 = !DILocation(line: 2961, column: 19, scope: !11980)
!11984 = !DILocation(line: 2961, column: 23, scope: !11980)
!11985 = !DILocation(line: 2961, column: 4, scope: !11980)
!11986 = !DILocation(line: 2963, column: 8, scope: !11987)
!11987 = distinct !DILexicalBlock(scope: !11980, file: !3, line: 2963, column: 8)
!11988 = !DILocation(line: 2963, column: 15, scope: !11987)
!11989 = !DILocation(line: 2963, column: 18, scope: !11987)
!11990 = !DILocation(line: 2963, column: 8, scope: !11980)
!11991 = !DILocation(line: 2963, column: 48, scope: !11987)
!11992 = !DILocation(line: 2963, column: 55, scope: !11987)
!11993 = !DILocation(line: 2963, column: 58, scope: !11987)
!11994 = !DILocation(line: 2963, column: 70, scope: !11987)
!11995 = !DILocation(line: 2963, column: 30, scope: !11987)
!11996 = !DILocation(line: 2965, column: 8, scope: !11997)
!11997 = distinct !DILexicalBlock(scope: !11980, file: !3, line: 2965, column: 8)
!11998 = !DILocation(line: 2965, column: 15, scope: !11997)
!11999 = !DILocation(line: 2965, column: 8, scope: !11980)
!12000 = !DILocation(line: 2965, column: 35, scope: !11997)
!12001 = !DILocation(line: 2965, column: 39, scope: !11997)
!12002 = !DILocation(line: 2965, column: 46, scope: !11997)
!12003 = !DILocation(line: 2965, column: 20, scope: !11997)
!12004 = !DILocation(line: 2966, column: 3, scope: !11980)
!12005 = !DILocation(line: 2967, column: 2, scope: !11971)
!12006 = !DILocation(line: 2958, column: 42, scope: !11967)
!12007 = !DILocation(line: 2958, column: 49, scope: !11967)
!12008 = !DILocation(line: 2958, column: 52, scope: !11967)
!12009 = !DILocation(line: 2958, column: 40, scope: !11967)
!12010 = !DILocation(line: 2958, column: 2, scope: !11967)
!12011 = distinct !{!12011, !11968, !12012}
!12012 = !DILocation(line: 2967, column: 2, scope: !11962)
!12013 = !DILocation(line: 2968, column: 1, scope: !11954)
!12014 = distinct !DISubprogram(name: "write_brushes", scope: !3, file: !3, line: 3037, type: !7324, scopeLine: 3038, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !5641)
!12015 = !DILocalVariable(name: "wd", arg: 1, scope: !12014, file: !3, line: 3037, type: !5820)
!12016 = !DILocation(line: 3037, column: 38, scope: !12014)
!12017 = !DILocalVariable(name: "idbase", arg: 2, scope: !12014, file: !3, line: 3037, type: !565)
!12018 = !DILocation(line: 3037, column: 52, scope: !12014)
!12019 = !DILocalVariable(name: "brush", scope: !12014, file: !3, line: 3039, type: !12020)
!12020 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12021, size: 64)
!12021 = !DIDerivedType(tag: DW_TAG_typedef, name: "Brush", file: !2345, line: 138, baseType: !2344)
!12022 = !DILocation(line: 3039, column: 9, scope: !12014)
!12023 = !DILocation(line: 3041, column: 13, scope: !12024)
!12024 = distinct !DILexicalBlock(scope: !12014, file: !3, line: 3041, column: 2)
!12025 = !DILocation(line: 3041, column: 21, scope: !12024)
!12026 = !DILocation(line: 3041, column: 12, scope: !12024)
!12027 = !DILocation(line: 3041, column: 7, scope: !12024)
!12028 = !DILocation(line: 3041, column: 28, scope: !12029)
!12029 = distinct !DILexicalBlock(scope: !12024, file: !3, line: 3041, column: 2)
!12030 = !DILocation(line: 3041, column: 2, scope: !12024)
!12031 = !DILocation(line: 3042, column: 7, scope: !12032)
!12032 = distinct !DILexicalBlock(scope: !12033, file: !3, line: 3042, column: 7)
!12033 = distinct !DILexicalBlock(scope: !12029, file: !3, line: 3041, column: 58)
!12034 = !DILocation(line: 3042, column: 14, scope: !12032)
!12035 = !DILocation(line: 3042, column: 17, scope: !12032)
!12036 = !DILocation(line: 3042, column: 19, scope: !12032)
!12037 = !DILocation(line: 3042, column: 22, scope: !12032)
!12038 = !DILocation(line: 3042, column: 25, scope: !12032)
!12039 = !DILocation(line: 3042, column: 29, scope: !12032)
!12040 = !DILocation(line: 3042, column: 7, scope: !12033)
!12041 = !DILocation(line: 3043, column: 16, scope: !12042)
!12042 = distinct !DILexicalBlock(scope: !12032, file: !3, line: 3042, column: 38)
!12043 = !DILocation(line: 3043, column: 39, scope: !12042)
!12044 = !DILocation(line: 3043, column: 4, scope: !12042)
!12045 = !DILocation(line: 3044, column: 8, scope: !12046)
!12046 = distinct !DILexicalBlock(scope: !12042, file: !3, line: 3044, column: 8)
!12047 = !DILocation(line: 3044, column: 15, scope: !12046)
!12048 = !DILocation(line: 3044, column: 18, scope: !12046)
!12049 = !DILocation(line: 3044, column: 8, scope: !12042)
!12050 = !DILocation(line: 3044, column: 48, scope: !12046)
!12051 = !DILocation(line: 3044, column: 55, scope: !12046)
!12052 = !DILocation(line: 3044, column: 58, scope: !12046)
!12053 = !DILocation(line: 3044, column: 70, scope: !12046)
!12054 = !DILocation(line: 3044, column: 30, scope: !12046)
!12055 = !DILocation(line: 3046, column: 8, scope: !12056)
!12056 = distinct !DILexicalBlock(scope: !12042, file: !3, line: 3046, column: 8)
!12057 = !DILocation(line: 3046, column: 15, scope: !12056)
!12058 = !DILocation(line: 3046, column: 8, scope: !12042)
!12059 = !DILocation(line: 3047, column: 24, scope: !12056)
!12060 = !DILocation(line: 3047, column: 28, scope: !12056)
!12061 = !DILocation(line: 3047, column: 35, scope: !12056)
!12062 = !DILocation(line: 3047, column: 5, scope: !12056)
!12063 = !DILocation(line: 3048, column: 8, scope: !12064)
!12064 = distinct !DILexicalBlock(scope: !12042, file: !3, line: 3048, column: 8)
!12065 = !DILocation(line: 3048, column: 15, scope: !12064)
!12066 = !DILocation(line: 3048, column: 8, scope: !12042)
!12067 = !DILocation(line: 3049, column: 17, scope: !12064)
!12068 = !DILocation(line: 3049, column: 43, scope: !12064)
!12069 = !DILocation(line: 3049, column: 50, scope: !12064)
!12070 = !DILocation(line: 3049, column: 5, scope: !12064)
!12071 = !DILocation(line: 3050, column: 3, scope: !12042)
!12072 = !DILocation(line: 3051, column: 2, scope: !12033)
!12073 = !DILocation(line: 3041, column: 42, scope: !12029)
!12074 = !DILocation(line: 3041, column: 49, scope: !12029)
!12075 = !DILocation(line: 3041, column: 52, scope: !12029)
!12076 = !DILocation(line: 3041, column: 40, scope: !12029)
!12077 = !DILocation(line: 3041, column: 2, scope: !12029)
!12078 = distinct !{!12078, !12030, !12079}
!12079 = !DILocation(line: 3051, column: 2, scope: !12024)
!12080 = !DILocation(line: 3052, column: 1, scope: !12014)
!12081 = distinct !DISubprogram(name: "write_palettes", scope: !3, file: !3, line: 3054, type: !7324, scopeLine: 3055, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !5641)
!12082 = !DILocalVariable(name: "wd", arg: 1, scope: !12081, file: !3, line: 3054, type: !5820)
!12083 = !DILocation(line: 3054, column: 39, scope: !12081)
!12084 = !DILocalVariable(name: "idbase", arg: 2, scope: !12081, file: !3, line: 3054, type: !565)
!12085 = !DILocation(line: 3054, column: 53, scope: !12081)
!12086 = !DILocalVariable(name: "palette", scope: !12081, file: !3, line: 3056, type: !12087)
!12087 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12088, size: 64)
!12088 = !DIDerivedType(tag: DW_TAG_typedef, name: "Palette", file: !2345, line: 158, baseType: !2448)
!12089 = !DILocation(line: 3056, column: 11, scope: !12081)
!12090 = !DILocation(line: 3058, column: 17, scope: !12091)
!12091 = distinct !DILexicalBlock(scope: !12081, file: !3, line: 3058, column: 2)
!12092 = !DILocation(line: 3058, column: 25, scope: !12091)
!12093 = !DILocation(line: 3058, column: 15, scope: !12091)
!12094 = !DILocation(line: 3058, column: 7, scope: !12091)
!12095 = !DILocation(line: 3058, column: 32, scope: !12096)
!12096 = distinct !DILexicalBlock(scope: !12091, file: !3, line: 3058, column: 2)
!12097 = !DILocation(line: 3058, column: 2, scope: !12091)
!12098 = !DILocation(line: 3059, column: 7, scope: !12099)
!12099 = distinct !DILexicalBlock(scope: !12100, file: !3, line: 3059, column: 7)
!12100 = distinct !DILexicalBlock(scope: !12096, file: !3, line: 3058, column: 69)
!12101 = !DILocation(line: 3059, column: 16, scope: !12099)
!12102 = !DILocation(line: 3059, column: 19, scope: !12099)
!12103 = !DILocation(line: 3059, column: 22, scope: !12099)
!12104 = !DILocation(line: 3059, column: 26, scope: !12099)
!12105 = !DILocation(line: 3059, column: 29, scope: !12099)
!12106 = !DILocation(line: 3059, column: 33, scope: !12099)
!12107 = !DILocation(line: 3059, column: 7, scope: !12100)
!12108 = !DILocalVariable(name: "color", scope: !12109, file: !3, line: 3060, type: !12110)
!12109 = distinct !DILexicalBlock(scope: !12099, file: !3, line: 3059, column: 42)
!12110 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12111, size: 64)
!12111 = !DIDerivedType(tag: DW_TAG_typedef, name: "PaletteColor", file: !2345, line: 146, baseType: !12112)
!12112 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PaletteColor", file: !2345, line: 140, size: 256, elements: !12113)
!12113 = !{!12114, !12116, !12117, !12118}
!12114 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !12112, file: !2345, line: 142, baseType: !12115, size: 64)
!12115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12112, size: 64)
!12116 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !12112, file: !2345, line: 142, baseType: !12115, size: 64, offset: 64)
!12117 = !DIDerivedType(tag: DW_TAG_member, name: "rgb", scope: !12112, file: !2345, line: 144, baseType: !779, size: 96, offset: 128)
!12118 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !12112, file: !2345, line: 145, baseType: !396, size: 32, offset: 224)
!12119 = !DILocation(line: 3060, column: 18, scope: !12109)
!12120 = !DILocation(line: 3061, column: 16, scope: !12109)
!12121 = !DILocation(line: 3061, column: 42, scope: !12109)
!12122 = !DILocation(line: 3061, column: 4, scope: !12109)
!12123 = !DILocation(line: 3062, column: 8, scope: !12124)
!12124 = distinct !DILexicalBlock(scope: !12109, file: !3, line: 3062, column: 8)
!12125 = !DILocation(line: 3062, column: 17, scope: !12124)
!12126 = !DILocation(line: 3062, column: 20, scope: !12124)
!12127 = !DILocation(line: 3062, column: 8, scope: !12109)
!12128 = !DILocation(line: 3062, column: 50, scope: !12124)
!12129 = !DILocation(line: 3062, column: 59, scope: !12124)
!12130 = !DILocation(line: 3062, column: 62, scope: !12124)
!12131 = !DILocation(line: 3062, column: 74, scope: !12124)
!12132 = !DILocation(line: 3062, column: 32, scope: !12124)
!12133 = !DILocation(line: 3064, column: 17, scope: !12134)
!12134 = distinct !DILexicalBlock(scope: !12109, file: !3, line: 3064, column: 4)
!12135 = !DILocation(line: 3064, column: 26, scope: !12134)
!12136 = !DILocation(line: 3064, column: 33, scope: !12134)
!12137 = !DILocation(line: 3064, column: 15, scope: !12134)
!12138 = !DILocation(line: 3064, column: 9, scope: !12134)
!12139 = !DILocation(line: 3064, column: 40, scope: !12140)
!12140 = distinct !DILexicalBlock(scope: !12134, file: !3, line: 3064, column: 4)
!12141 = !DILocation(line: 3064, column: 4, scope: !12134)
!12142 = !DILocation(line: 3065, column: 17, scope: !12140)
!12143 = !DILocation(line: 3065, column: 46, scope: !12140)
!12144 = !DILocation(line: 3065, column: 5, scope: !12140)
!12145 = !DILocation(line: 3064, column: 54, scope: !12140)
!12146 = !DILocation(line: 3064, column: 61, scope: !12140)
!12147 = !DILocation(line: 3064, column: 52, scope: !12140)
!12148 = !DILocation(line: 3064, column: 4, scope: !12140)
!12149 = distinct !{!12149, !12141, !12150}
!12150 = !DILocation(line: 3065, column: 51, scope: !12134)
!12151 = !DILocation(line: 3066, column: 3, scope: !12109)
!12152 = !DILocation(line: 3067, column: 2, scope: !12100)
!12153 = !DILocation(line: 3058, column: 51, scope: !12096)
!12154 = !DILocation(line: 3058, column: 60, scope: !12096)
!12155 = !DILocation(line: 3058, column: 63, scope: !12096)
!12156 = !DILocation(line: 3058, column: 49, scope: !12096)
!12157 = !DILocation(line: 3058, column: 2, scope: !12096)
!12158 = distinct !{!12158, !12097, !12159}
!12159 = !DILocation(line: 3067, column: 2, scope: !12091)
!12160 = !DILocation(line: 3068, column: 1, scope: !12081)
!12161 = distinct !DISubprogram(name: "write_paintcurves", scope: !3, file: !3, line: 3070, type: !7324, scopeLine: 3071, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !5641)
!12162 = !DILocalVariable(name: "wd", arg: 1, scope: !12161, file: !3, line: 3070, type: !5820)
!12163 = !DILocation(line: 3070, column: 42, scope: !12161)
!12164 = !DILocalVariable(name: "idbase", arg: 2, scope: !12161, file: !3, line: 3070, type: !565)
!12165 = !DILocation(line: 3070, column: 56, scope: !12161)
!12166 = !DILocalVariable(name: "pc", scope: !12161, file: !3, line: 3072, type: !12167)
!12167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12168, size: 64)
!12168 = !DIDerivedType(tag: DW_TAG_typedef, name: "PaintCurve", file: !2345, line: 172, baseType: !2366)
!12169 = !DILocation(line: 3072, column: 14, scope: !12161)
!12170 = !DILocation(line: 3074, column: 12, scope: !12171)
!12171 = distinct !DILexicalBlock(scope: !12161, file: !3, line: 3074, column: 2)
!12172 = !DILocation(line: 3074, column: 20, scope: !12171)
!12173 = !DILocation(line: 3074, column: 10, scope: !12171)
!12174 = !DILocation(line: 3074, column: 7, scope: !12171)
!12175 = !DILocation(line: 3074, column: 27, scope: !12176)
!12176 = distinct !DILexicalBlock(scope: !12171, file: !3, line: 3074, column: 2)
!12177 = !DILocation(line: 3074, column: 2, scope: !12171)
!12178 = !DILocation(line: 3075, column: 7, scope: !12179)
!12179 = distinct !DILexicalBlock(scope: !12180, file: !3, line: 3075, column: 7)
!12180 = distinct !DILexicalBlock(scope: !12176, file: !3, line: 3074, column: 49)
!12181 = !DILocation(line: 3075, column: 11, scope: !12179)
!12182 = !DILocation(line: 3075, column: 14, scope: !12179)
!12183 = !DILocation(line: 3075, column: 17, scope: !12179)
!12184 = !DILocation(line: 3075, column: 21, scope: !12179)
!12185 = !DILocation(line: 3075, column: 24, scope: !12179)
!12186 = !DILocation(line: 3075, column: 28, scope: !12179)
!12187 = !DILocation(line: 3075, column: 7, scope: !12180)
!12188 = !DILocation(line: 3076, column: 16, scope: !12189)
!12189 = distinct !DILexicalBlock(scope: !12179, file: !3, line: 3075, column: 37)
!12190 = !DILocation(line: 3076, column: 44, scope: !12189)
!12191 = !DILocation(line: 3076, column: 4, scope: !12189)
!12192 = !DILocation(line: 3078, column: 16, scope: !12189)
!12193 = !DILocation(line: 3078, column: 45, scope: !12189)
!12194 = !DILocation(line: 3078, column: 49, scope: !12189)
!12195 = !DILocation(line: 3078, column: 61, scope: !12189)
!12196 = !DILocation(line: 3078, column: 65, scope: !12189)
!12197 = !DILocation(line: 3078, column: 4, scope: !12189)
!12198 = !DILocation(line: 3079, column: 8, scope: !12199)
!12199 = distinct !DILexicalBlock(scope: !12189, file: !3, line: 3079, column: 8)
!12200 = !DILocation(line: 3079, column: 12, scope: !12199)
!12201 = !DILocation(line: 3079, column: 15, scope: !12199)
!12202 = !DILocation(line: 3079, column: 8, scope: !12189)
!12203 = !DILocation(line: 3079, column: 45, scope: !12199)
!12204 = !DILocation(line: 3079, column: 49, scope: !12199)
!12205 = !DILocation(line: 3079, column: 52, scope: !12199)
!12206 = !DILocation(line: 3079, column: 64, scope: !12199)
!12207 = !DILocation(line: 3079, column: 27, scope: !12199)
!12208 = !DILocation(line: 3080, column: 3, scope: !12189)
!12209 = !DILocation(line: 3081, column: 2, scope: !12180)
!12210 = !DILocation(line: 3074, column: 36, scope: !12176)
!12211 = !DILocation(line: 3074, column: 40, scope: !12176)
!12212 = !DILocation(line: 3074, column: 43, scope: !12176)
!12213 = !DILocation(line: 3074, column: 34, scope: !12176)
!12214 = !DILocation(line: 3074, column: 2, scope: !12176)
!12215 = distinct !{!12215, !12177, !12216}
!12216 = !DILocation(line: 3081, column: 2, scope: !12171)
!12217 = !DILocation(line: 3082, column: 1, scope: !12161)
!12218 = distinct !DISubprogram(name: "write_scripts", scope: !3, file: !3, line: 3084, type: !7324, scopeLine: 3085, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !5641)
!12219 = !DILocalVariable(name: "wd", arg: 1, scope: !12218, file: !3, line: 3084, type: !5820)
!12220 = !DILocation(line: 3084, column: 38, scope: !12218)
!12221 = !DILocalVariable(name: "idbase", arg: 2, scope: !12218, file: !3, line: 3084, type: !565)
!12222 = !DILocation(line: 3084, column: 52, scope: !12218)
!12223 = !DILocalVariable(name: "script", scope: !12218, file: !3, line: 3086, type: !12224)
!12224 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12225, size: 64)
!12225 = !DIDerivedType(tag: DW_TAG_typedef, name: "Script", file: !61, line: 893, baseType: !5075)
!12226 = !DILocation(line: 3086, column: 10, scope: !12218)
!12227 = !DILocation(line: 3088, column: 14, scope: !12228)
!12228 = distinct !DILexicalBlock(scope: !12218, file: !3, line: 3088, column: 2)
!12229 = !DILocation(line: 3088, column: 22, scope: !12228)
!12230 = !DILocation(line: 3088, column: 13, scope: !12228)
!12231 = !DILocation(line: 3088, column: 7, scope: !12228)
!12232 = !DILocation(line: 3088, column: 29, scope: !12233)
!12233 = distinct !DILexicalBlock(scope: !12228, file: !3, line: 3088, column: 2)
!12234 = !DILocation(line: 3088, column: 2, scope: !12228)
!12235 = !DILocation(line: 3089, column: 7, scope: !12236)
!12236 = distinct !DILexicalBlock(scope: !12237, file: !3, line: 3089, column: 7)
!12237 = distinct !DILexicalBlock(scope: !12233, file: !3, line: 3088, column: 62)
!12238 = !DILocation(line: 3089, column: 15, scope: !12236)
!12239 = !DILocation(line: 3089, column: 18, scope: !12236)
!12240 = !DILocation(line: 3089, column: 20, scope: !12236)
!12241 = !DILocation(line: 3089, column: 23, scope: !12236)
!12242 = !DILocation(line: 3089, column: 26, scope: !12236)
!12243 = !DILocation(line: 3089, column: 30, scope: !12236)
!12244 = !DILocation(line: 3089, column: 7, scope: !12237)
!12245 = !DILocation(line: 3090, column: 16, scope: !12246)
!12246 = distinct !DILexicalBlock(scope: !12236, file: !3, line: 3089, column: 39)
!12247 = !DILocation(line: 3090, column: 44, scope: !12246)
!12248 = !DILocation(line: 3090, column: 4, scope: !12246)
!12249 = !DILocation(line: 3091, column: 8, scope: !12250)
!12250 = distinct !DILexicalBlock(scope: !12246, file: !3, line: 3091, column: 8)
!12251 = !DILocation(line: 3091, column: 16, scope: !12250)
!12252 = !DILocation(line: 3091, column: 19, scope: !12250)
!12253 = !DILocation(line: 3091, column: 8, scope: !12246)
!12254 = !DILocation(line: 3091, column: 49, scope: !12250)
!12255 = !DILocation(line: 3091, column: 57, scope: !12250)
!12256 = !DILocation(line: 3091, column: 60, scope: !12250)
!12257 = !DILocation(line: 3091, column: 72, scope: !12250)
!12258 = !DILocation(line: 3091, column: 31, scope: !12250)
!12259 = !DILocation(line: 3092, column: 3, scope: !12246)
!12260 = !DILocation(line: 3093, column: 2, scope: !12237)
!12261 = !DILocation(line: 3088, column: 45, scope: !12233)
!12262 = !DILocation(line: 3088, column: 53, scope: !12233)
!12263 = !DILocation(line: 3088, column: 56, scope: !12233)
!12264 = !DILocation(line: 3088, column: 43, scope: !12233)
!12265 = !DILocation(line: 3088, column: 2, scope: !12233)
!12266 = distinct !{!12266, !12234, !12267}
!12267 = !DILocation(line: 3093, column: 2, scope: !12228)
!12268 = !DILocation(line: 3094, column: 1, scope: !12218)
!12269 = distinct !DISubprogram(name: "write_gpencils", scope: !3, file: !3, line: 2467, type: !7324, scopeLine: 2468, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !5641)
!12270 = !DILocalVariable(name: "wd", arg: 1, scope: !12269, file: !3, line: 2467, type: !5820)
!12271 = !DILocation(line: 2467, column: 39, scope: !12269)
!12272 = !DILocalVariable(name: "lb", arg: 2, scope: !12269, file: !3, line: 2467, type: !565)
!12273 = !DILocation(line: 2467, column: 53, scope: !12269)
!12274 = !DILocalVariable(name: "gpd", scope: !12269, file: !3, line: 2469, type: !12275)
!12275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12276, size: 64)
!12276 = !DIDerivedType(tag: DW_TAG_typedef, name: "bGPdata", file: !1426, line: 144, baseType: !1425)
!12277 = !DILocation(line: 2469, column: 11, scope: !12269)
!12278 = !DILocalVariable(name: "gpl", scope: !12269, file: !3, line: 2470, type: !12279)
!12279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12280, size: 64)
!12280 = !DIDerivedType(tag: DW_TAG_typedef, name: "bGPDlayer", file: !1426, line: 108, baseType: !12281)
!12281 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bGPDlayer", file: !1426, line: 94, size: 1536, elements: !12282)
!12282 = !{!12283, !12285, !12286, !12287, !12298, !12299, !12300, !12301, !12302}
!12283 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !12281, file: !1426, line: 95, baseType: !12284, size: 64)
!12284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12281, size: 64)
!12285 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !12281, file: !1426, line: 95, baseType: !12284, size: 64, offset: 64)
!12286 = !DIDerivedType(tag: DW_TAG_member, name: "frames", scope: !12281, file: !1426, line: 97, baseType: !388, size: 128, offset: 128)
!12287 = !DIDerivedType(tag: DW_TAG_member, name: "actframe", scope: !12281, file: !1426, line: 98, baseType: !12288, size: 64, offset: 256)
!12288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12289, size: 64)
!12289 = !DIDerivedType(tag: DW_TAG_typedef, name: "bGPDframe", file: !1426, line: 84, baseType: !12290)
!12290 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bGPDframe", file: !1426, line: 77, size: 320, elements: !12291)
!12291 = !{!12292, !12294, !12295, !12296, !12297}
!12292 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !12290, file: !1426, line: 78, baseType: !12293, size: 64)
!12293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12290, size: 64)
!12294 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !12290, file: !1426, line: 78, baseType: !12293, size: 64, offset: 64)
!12295 = !DIDerivedType(tag: DW_TAG_member, name: "strokes", scope: !12290, file: !1426, line: 80, baseType: !388, size: 128, offset: 128)
!12296 = !DIDerivedType(tag: DW_TAG_member, name: "framenum", scope: !12290, file: !1426, line: 82, baseType: !98, size: 32, offset: 256)
!12297 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !12290, file: !1426, line: 83, baseType: !98, size: 32, offset: 288)
!12298 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !12281, file: !1426, line: 100, baseType: !98, size: 32, offset: 320)
!12299 = !DIDerivedType(tag: DW_TAG_member, name: "thickness", scope: !12281, file: !1426, line: 101, baseType: !399, size: 16, offset: 352)
!12300 = !DIDerivedType(tag: DW_TAG_member, name: "gstep", scope: !12281, file: !1426, line: 102, baseType: !399, size: 16, offset: 368)
!12301 = !DIDerivedType(tag: DW_TAG_member, name: "color", scope: !12281, file: !1426, line: 104, baseType: !408, size: 128, offset: 384)
!12302 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !12281, file: !1426, line: 106, baseType: !2717, size: 1024, offset: 512)
!12303 = !DILocation(line: 2470, column: 13, scope: !12269)
!12304 = !DILocalVariable(name: "gpf", scope: !12269, file: !3, line: 2471, type: !12288)
!12305 = !DILocation(line: 2471, column: 13, scope: !12269)
!12306 = !DILocalVariable(name: "gps", scope: !12269, file: !3, line: 2472, type: !12307)
!12307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12308, size: 64)
!12308 = !DIDerivedType(tag: DW_TAG_typedef, name: "bGPDstroke", file: !1426, line: 61, baseType: !12309)
!12309 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bGPDstroke", file: !1426, line: 51, size: 384, elements: !12310)
!12310 = !{!12311, !12313, !12314, !12324, !12325, !12326, !12327, !12328}
!12311 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !12309, file: !1426, line: 52, baseType: !12312, size: 64)
!12312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12309, size: 64)
!12313 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !12309, file: !1426, line: 52, baseType: !12312, size: 64, offset: 64)
!12314 = !DIDerivedType(tag: DW_TAG_member, name: "points", scope: !12309, file: !1426, line: 53, baseType: !12315, size: 64, offset: 128)
!12315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12316, size: 64)
!12316 = !DIDerivedType(tag: DW_TAG_typedef, name: "bGPDspoint", file: !1426, line: 45, baseType: !12317)
!12317 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bGPDspoint", file: !1426, line: 41, size: 160, elements: !12318)
!12318 = !{!12319, !12320, !12321, !12322, !12323}
!12319 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !12317, file: !1426, line: 42, baseType: !396, size: 32)
!12320 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !12317, file: !1426, line: 42, baseType: !396, size: 32, offset: 32)
!12321 = !DIDerivedType(tag: DW_TAG_member, name: "z", scope: !12317, file: !1426, line: 42, baseType: !396, size: 32, offset: 64)
!12322 = !DIDerivedType(tag: DW_TAG_member, name: "pressure", scope: !12317, file: !1426, line: 43, baseType: !396, size: 32, offset: 96)
!12323 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !12317, file: !1426, line: 44, baseType: !396, size: 32, offset: 128)
!12324 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !12309, file: !1426, line: 54, baseType: !372, size: 64, offset: 192)
!12325 = !DIDerivedType(tag: DW_TAG_member, name: "totpoints", scope: !12309, file: !1426, line: 55, baseType: !98, size: 32, offset: 256)
!12326 = !DIDerivedType(tag: DW_TAG_member, name: "thickness", scope: !12309, file: !1426, line: 57, baseType: !399, size: 16, offset: 288)
!12327 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !12309, file: !1426, line: 58, baseType: !399, size: 16, offset: 304)
!12328 = !DIDerivedType(tag: DW_TAG_member, name: "inittime", scope: !12309, file: !1426, line: 60, baseType: !2906, size: 64, offset: 320)
!12329 = !DILocation(line: 2472, column: 14, scope: !12269)
!12330 = !DILocation(line: 2474, column: 12, scope: !12331)
!12331 = distinct !DILexicalBlock(scope: !12269, file: !3, line: 2474, column: 2)
!12332 = !DILocation(line: 2474, column: 16, scope: !12331)
!12333 = !DILocation(line: 2474, column: 10, scope: !12331)
!12334 = !DILocation(line: 2474, column: 7, scope: !12331)
!12335 = !DILocation(line: 2474, column: 23, scope: !12336)
!12336 = distinct !DILexicalBlock(scope: !12331, file: !3, line: 2474, column: 2)
!12337 = !DILocation(line: 2474, column: 2, scope: !12331)
!12338 = !DILocation(line: 2475, column: 7, scope: !12339)
!12339 = distinct !DILexicalBlock(scope: !12340, file: !3, line: 2475, column: 7)
!12340 = distinct !DILexicalBlock(scope: !12336, file: !3, line: 2474, column: 47)
!12341 = !DILocation(line: 2475, column: 12, scope: !12339)
!12342 = !DILocation(line: 2475, column: 15, scope: !12339)
!12343 = !DILocation(line: 2475, column: 17, scope: !12339)
!12344 = !DILocation(line: 2475, column: 20, scope: !12339)
!12345 = !DILocation(line: 2475, column: 23, scope: !12339)
!12346 = !DILocation(line: 2475, column: 27, scope: !12339)
!12347 = !DILocation(line: 2475, column: 7, scope: !12340)
!12348 = !DILocation(line: 2477, column: 16, scope: !12349)
!12349 = distinct !DILexicalBlock(scope: !12339, file: !3, line: 2475, column: 36)
!12350 = !DILocation(line: 2477, column: 41, scope: !12349)
!12351 = !DILocation(line: 2477, column: 4, scope: !12349)
!12352 = !DILocation(line: 2480, column: 14, scope: !12349)
!12353 = !DILocation(line: 2480, column: 38, scope: !12349)
!12354 = !DILocation(line: 2480, column: 43, scope: !12349)
!12355 = !DILocation(line: 2480, column: 4, scope: !12349)
!12356 = !DILocation(line: 2481, column: 14, scope: !12357)
!12357 = distinct !DILexicalBlock(scope: !12349, file: !3, line: 2481, column: 4)
!12358 = !DILocation(line: 2481, column: 19, scope: !12357)
!12359 = !DILocation(line: 2481, column: 26, scope: !12357)
!12360 = !DILocation(line: 2481, column: 12, scope: !12357)
!12361 = !DILocation(line: 2481, column: 9, scope: !12357)
!12362 = !DILocation(line: 2481, column: 33, scope: !12363)
!12363 = distinct !DILexicalBlock(scope: !12357, file: !3, line: 2481, column: 4)
!12364 = !DILocation(line: 2481, column: 4, scope: !12357)
!12365 = !DILocation(line: 2484, column: 15, scope: !12366)
!12366 = distinct !DILexicalBlock(scope: !12363, file: !3, line: 2481, column: 54)
!12367 = !DILocation(line: 2484, column: 39, scope: !12366)
!12368 = !DILocation(line: 2484, column: 44, scope: !12366)
!12369 = !DILocation(line: 2484, column: 5, scope: !12366)
!12370 = !DILocation(line: 2485, column: 15, scope: !12371)
!12371 = distinct !DILexicalBlock(scope: !12366, file: !3, line: 2485, column: 5)
!12372 = !DILocation(line: 2485, column: 20, scope: !12371)
!12373 = !DILocation(line: 2485, column: 27, scope: !12371)
!12374 = !DILocation(line: 2485, column: 13, scope: !12371)
!12375 = !DILocation(line: 2485, column: 10, scope: !12371)
!12376 = !DILocation(line: 2485, column: 34, scope: !12377)
!12377 = distinct !DILexicalBlock(scope: !12371, file: !3, line: 2485, column: 5)
!12378 = !DILocation(line: 2485, column: 5, scope: !12371)
!12379 = !DILocation(line: 2488, column: 16, scope: !12380)
!12380 = distinct !DILexicalBlock(scope: !12377, file: !3, line: 2485, column: 55)
!12381 = !DILocation(line: 2488, column: 41, scope: !12380)
!12382 = !DILocation(line: 2488, column: 46, scope: !12380)
!12383 = !DILocation(line: 2488, column: 6, scope: !12380)
!12384 = !DILocation(line: 2489, column: 16, scope: !12385)
!12385 = distinct !DILexicalBlock(scope: !12380, file: !3, line: 2489, column: 6)
!12386 = !DILocation(line: 2489, column: 21, scope: !12385)
!12387 = !DILocation(line: 2489, column: 29, scope: !12385)
!12388 = !DILocation(line: 2489, column: 14, scope: !12385)
!12389 = !DILocation(line: 2489, column: 11, scope: !12385)
!12390 = !DILocation(line: 2489, column: 36, scope: !12391)
!12391 = distinct !DILexicalBlock(scope: !12385, file: !3, line: 2489, column: 6)
!12392 = !DILocation(line: 2489, column: 6, scope: !12385)
!12393 = !DILocation(line: 2490, column: 19, scope: !12394)
!12394 = distinct !DILexicalBlock(scope: !12391, file: !3, line: 2489, column: 57)
!12395 = !DILocation(line: 2490, column: 43, scope: !12394)
!12396 = !DILocation(line: 2490, column: 48, scope: !12394)
!12397 = !DILocation(line: 2490, column: 59, scope: !12394)
!12398 = !DILocation(line: 2490, column: 64, scope: !12394)
!12399 = !DILocation(line: 2490, column: 7, scope: !12394)
!12400 = !DILocation(line: 2491, column: 6, scope: !12394)
!12401 = !DILocation(line: 2489, column: 46, scope: !12391)
!12402 = !DILocation(line: 2489, column: 51, scope: !12391)
!12403 = !DILocation(line: 2489, column: 44, scope: !12391)
!12404 = !DILocation(line: 2489, column: 6, scope: !12391)
!12405 = distinct !{!12405, !12392, !12406}
!12406 = !DILocation(line: 2491, column: 6, scope: !12385)
!12407 = !DILocation(line: 2492, column: 5, scope: !12380)
!12408 = !DILocation(line: 2485, column: 44, scope: !12377)
!12409 = !DILocation(line: 2485, column: 49, scope: !12377)
!12410 = !DILocation(line: 2485, column: 42, scope: !12377)
!12411 = !DILocation(line: 2485, column: 5, scope: !12377)
!12412 = distinct !{!12412, !12378, !12413}
!12413 = !DILocation(line: 2492, column: 5, scope: !12371)
!12414 = !DILocation(line: 2493, column: 4, scope: !12366)
!12415 = !DILocation(line: 2481, column: 43, scope: !12363)
!12416 = !DILocation(line: 2481, column: 48, scope: !12363)
!12417 = !DILocation(line: 2481, column: 41, scope: !12363)
!12418 = !DILocation(line: 2481, column: 4, scope: !12363)
!12419 = distinct !{!12419, !12364, !12420}
!12420 = !DILocation(line: 2493, column: 4, scope: !12357)
!12421 = !DILocation(line: 2494, column: 3, scope: !12349)
!12422 = !DILocation(line: 2495, column: 2, scope: !12340)
!12423 = !DILocation(line: 2474, column: 33, scope: !12336)
!12424 = !DILocation(line: 2474, column: 38, scope: !12336)
!12425 = !DILocation(line: 2474, column: 41, scope: !12336)
!12426 = !DILocation(line: 2474, column: 31, scope: !12336)
!12427 = !DILocation(line: 2474, column: 2, scope: !12336)
!12428 = distinct !{!12428, !12337, !12429}
!12429 = !DILocation(line: 2495, column: 2, scope: !12331)
!12430 = !DILocation(line: 2496, column: 1, scope: !12269)
!12431 = distinct !DISubprogram(name: "write_linestyles", scope: !3, file: !3, line: 3407, type: !7324, scopeLine: 3408, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !5641)
!12432 = !DILocalVariable(name: "wd", arg: 1, scope: !12431, file: !3, line: 3407, type: !5820)
!12433 = !DILocation(line: 3407, column: 41, scope: !12431)
!12434 = !DILocalVariable(name: "idbase", arg: 2, scope: !12431, file: !3, line: 3407, type: !565)
!12435 = !DILocation(line: 3407, column: 55, scope: !12431)
!12436 = !DILocalVariable(name: "linestyle", scope: !12431, file: !3, line: 3409, type: !6943)
!12437 = !DILocation(line: 3409, column: 22, scope: !12431)
!12438 = !DILocalVariable(name: "a", scope: !12431, file: !3, line: 3410, type: !98)
!12439 = !DILocation(line: 3410, column: 6, scope: !12431)
!12440 = !DILocation(line: 3412, column: 19, scope: !12441)
!12441 = distinct !DILexicalBlock(scope: !12431, file: !3, line: 3412, column: 2)
!12442 = !DILocation(line: 3412, column: 27, scope: !12441)
!12443 = !DILocation(line: 3412, column: 17, scope: !12441)
!12444 = !DILocation(line: 3412, column: 7, scope: !12441)
!12445 = !DILocation(line: 3412, column: 34, scope: !12446)
!12446 = distinct !DILexicalBlock(scope: !12441, file: !3, line: 3412, column: 2)
!12447 = !DILocation(line: 3412, column: 2, scope: !12441)
!12448 = !DILocation(line: 3413, column: 7, scope: !12449)
!12449 = distinct !DILexicalBlock(scope: !12450, file: !3, line: 3413, column: 7)
!12450 = distinct !DILexicalBlock(scope: !12446, file: !3, line: 3412, column: 77)
!12451 = !DILocation(line: 3413, column: 18, scope: !12449)
!12452 = !DILocation(line: 3413, column: 21, scope: !12449)
!12453 = !DILocation(line: 3413, column: 23, scope: !12449)
!12454 = !DILocation(line: 3413, column: 26, scope: !12449)
!12455 = !DILocation(line: 3413, column: 29, scope: !12449)
!12456 = !DILocation(line: 3413, column: 33, scope: !12449)
!12457 = !DILocation(line: 3413, column: 7, scope: !12450)
!12458 = !DILocation(line: 3414, column: 16, scope: !12459)
!12459 = distinct !DILexicalBlock(scope: !12449, file: !3, line: 3413, column: 42)
!12460 = !DILocation(line: 3414, column: 52, scope: !12459)
!12461 = !DILocation(line: 3414, column: 4, scope: !12459)
!12462 = !DILocation(line: 3415, column: 8, scope: !12463)
!12463 = distinct !DILexicalBlock(scope: !12459, file: !3, line: 3415, column: 8)
!12464 = !DILocation(line: 3415, column: 19, scope: !12463)
!12465 = !DILocation(line: 3415, column: 22, scope: !12463)
!12466 = !DILocation(line: 3415, column: 8, scope: !12459)
!12467 = !DILocation(line: 3416, column: 23, scope: !12463)
!12468 = !DILocation(line: 3416, column: 34, scope: !12463)
!12469 = !DILocation(line: 3416, column: 37, scope: !12463)
!12470 = !DILocation(line: 3416, column: 49, scope: !12463)
!12471 = !DILocation(line: 3416, column: 5, scope: !12463)
!12472 = !DILocation(line: 3417, column: 8, scope: !12473)
!12473 = distinct !DILexicalBlock(scope: !12459, file: !3, line: 3417, column: 8)
!12474 = !DILocation(line: 3417, column: 19, scope: !12473)
!12475 = !DILocation(line: 3417, column: 8, scope: !12459)
!12476 = !DILocation(line: 3418, column: 20, scope: !12473)
!12477 = !DILocation(line: 3418, column: 24, scope: !12473)
!12478 = !DILocation(line: 3418, column: 35, scope: !12473)
!12479 = !DILocation(line: 3418, column: 5, scope: !12473)
!12480 = !DILocation(line: 3419, column: 36, scope: !12459)
!12481 = !DILocation(line: 3419, column: 41, scope: !12459)
!12482 = !DILocation(line: 3419, column: 52, scope: !12459)
!12483 = !DILocation(line: 3419, column: 4, scope: !12459)
!12484 = !DILocation(line: 3420, column: 36, scope: !12459)
!12485 = !DILocation(line: 3420, column: 41, scope: !12459)
!12486 = !DILocation(line: 3420, column: 52, scope: !12459)
!12487 = !DILocation(line: 3420, column: 4, scope: !12459)
!12488 = !DILocation(line: 3421, column: 40, scope: !12459)
!12489 = !DILocation(line: 3421, column: 45, scope: !12459)
!12490 = !DILocation(line: 3421, column: 56, scope: !12459)
!12491 = !DILocation(line: 3421, column: 4, scope: !12459)
!12492 = !DILocation(line: 3422, column: 39, scope: !12459)
!12493 = !DILocation(line: 3422, column: 44, scope: !12459)
!12494 = !DILocation(line: 3422, column: 55, scope: !12459)
!12495 = !DILocation(line: 3422, column: 4, scope: !12459)
!12496 = !DILocation(line: 3423, column: 10, scope: !12497)
!12497 = distinct !DILexicalBlock(scope: !12459, file: !3, line: 3423, column: 4)
!12498 = !DILocation(line: 3423, column: 9, scope: !12497)
!12499 = !DILocation(line: 3423, column: 14, scope: !12500)
!12500 = distinct !DILexicalBlock(scope: !12497, file: !3, line: 3423, column: 4)
!12501 = !DILocation(line: 3423, column: 15, scope: !12500)
!12502 = !DILocation(line: 3423, column: 4, scope: !12497)
!12503 = !DILocation(line: 3424, column: 9, scope: !12504)
!12504 = distinct !DILexicalBlock(scope: !12505, file: !3, line: 3424, column: 9)
!12505 = distinct !DILexicalBlock(scope: !12500, file: !3, line: 3423, column: 31)
!12506 = !DILocation(line: 3424, column: 20, scope: !12504)
!12507 = !DILocation(line: 3424, column: 25, scope: !12504)
!12508 = !DILocation(line: 3424, column: 9, scope: !12505)
!12509 = !DILocation(line: 3424, column: 41, scope: !12504)
!12510 = !DILocation(line: 3424, column: 62, scope: !12504)
!12511 = !DILocation(line: 3424, column: 73, scope: !12504)
!12512 = !DILocation(line: 3424, column: 78, scope: !12504)
!12513 = !DILocation(line: 3424, column: 29, scope: !12504)
!12514 = !DILocation(line: 3425, column: 4, scope: !12505)
!12515 = !DILocation(line: 3423, column: 27, scope: !12500)
!12516 = !DILocation(line: 3423, column: 4, scope: !12500)
!12517 = distinct !{!12517, !12502, !12518}
!12518 = !DILocation(line: 3425, column: 4, scope: !12497)
!12519 = !DILocation(line: 3426, column: 8, scope: !12520)
!12520 = distinct !DILexicalBlock(scope: !12459, file: !3, line: 3426, column: 8)
!12521 = !DILocation(line: 3426, column: 19, scope: !12520)
!12522 = !DILocation(line: 3426, column: 8, scope: !12459)
!12523 = !DILocation(line: 3427, column: 17, scope: !12524)
!12524 = distinct !DILexicalBlock(scope: !12520, file: !3, line: 3426, column: 29)
!12525 = !DILocation(line: 3427, column: 43, scope: !12524)
!12526 = !DILocation(line: 3427, column: 54, scope: !12524)
!12527 = !DILocation(line: 3427, column: 5, scope: !12524)
!12528 = !DILocation(line: 3428, column: 20, scope: !12524)
!12529 = !DILocation(line: 3428, column: 24, scope: !12524)
!12530 = !DILocation(line: 3428, column: 35, scope: !12524)
!12531 = !DILocation(line: 3428, column: 5, scope: !12524)
!12532 = !DILocation(line: 3429, column: 4, scope: !12524)
!12533 = !DILocation(line: 3430, column: 3, scope: !12459)
!12534 = !DILocation(line: 3431, column: 2, scope: !12450)
!12535 = !DILocation(line: 3412, column: 57, scope: !12446)
!12536 = !DILocation(line: 3412, column: 68, scope: !12446)
!12537 = !DILocation(line: 3412, column: 71, scope: !12446)
!12538 = !DILocation(line: 3412, column: 55, scope: !12446)
!12539 = !DILocation(line: 3412, column: 2, scope: !12446)
!12540 = distinct !{!12540, !12447, !12541}
!12541 = !DILocation(line: 3431, column: 2, scope: !12441)
!12542 = !DILocation(line: 3432, column: 1, scope: !12431)
!12543 = distinct !DISubprogram(name: "write_libraries", scope: !3, file: !3, line: 2752, type: !7128, scopeLine: 2753, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !5641)
!12544 = !DILocalVariable(name: "wd", arg: 1, scope: !12543, file: !3, line: 2752, type: !5820)
!12545 = !DILocation(line: 2752, column: 40, scope: !12543)
!12546 = !DILocalVariable(name: "main", arg: 2, scope: !12543, file: !3, line: 2752, type: !5879)
!12547 = !DILocation(line: 2752, column: 50, scope: !12543)
!12548 = !DILocalVariable(name: "lbarray", scope: !12543, file: !3, line: 2754, type: !12549)
!12549 = !DICompositeType(tag: DW_TAG_array_type, baseType: !565, size: 2240, elements: !12550)
!12550 = !{!12551}
!12551 = !DISubrange(count: 35)
!12552 = !DILocation(line: 2754, column: 12, scope: !12543)
!12553 = !DILocalVariable(name: "id", scope: !12543, file: !3, line: 2755, type: !441)
!12554 = !DILocation(line: 2755, column: 6, scope: !12543)
!12555 = !DILocalVariable(name: "a", scope: !12543, file: !3, line: 2756, type: !98)
!12556 = !DILocation(line: 2756, column: 6, scope: !12543)
!12557 = !DILocalVariable(name: "tot", scope: !12543, file: !3, line: 2756, type: !98)
!12558 = !DILocation(line: 2756, column: 9, scope: !12543)
!12559 = !DILocalVariable(name: "found_one", scope: !12543, file: !3, line: 2757, type: !474)
!12560 = !DILocation(line: 2757, column: 7, scope: !12543)
!12561 = !DILocation(line: 2759, column: 2, scope: !12543)
!12562 = !DILocation(line: 2759, column: 9, scope: !12563)
!12563 = distinct !DILexicalBlock(scope: !12564, file: !3, line: 2759, column: 2)
!12564 = distinct !DILexicalBlock(scope: !12543, file: !3, line: 2759, column: 2)
!12565 = !DILocation(line: 2759, column: 2, scope: !12564)
!12566 = !DILocation(line: 2761, column: 31, scope: !12567)
!12567 = distinct !DILexicalBlock(scope: !12563, file: !3, line: 2759, column: 33)
!12568 = !DILocation(line: 2761, column: 37, scope: !12567)
!12569 = !DILocation(line: 2761, column: 10, scope: !12567)
!12570 = !DILocation(line: 2761, column: 8, scope: !12567)
!12571 = !DILocation(line: 2761, column: 4, scope: !12567)
!12572 = !DILocation(line: 2764, column: 7, scope: !12573)
!12573 = distinct !DILexicalBlock(scope: !12567, file: !3, line: 2764, column: 7)
!12574 = !DILocation(line: 2764, column: 13, scope: !12573)
!12575 = !DILocation(line: 2764, column: 20, scope: !12573)
!12576 = !DILocation(line: 2764, column: 23, scope: !12573)
!12577 = !DILocation(line: 2764, column: 29, scope: !12573)
!12578 = !DILocation(line: 2764, column: 37, scope: !12573)
!12579 = !DILocation(line: 2764, column: 7, scope: !12567)
!12580 = !DILocation(line: 2765, column: 14, scope: !12573)
!12581 = !DILocation(line: 2765, column: 4, scope: !12573)
!12582 = !DILocation(line: 2767, column: 14, scope: !12583)
!12583 = distinct !DILexicalBlock(scope: !12573, file: !3, line: 2766, column: 8)
!12584 = !DILocation(line: 2768, column: 4, scope: !12583)
!12585 = !DILocation(line: 2768, column: 14, scope: !12583)
!12586 = !DILocation(line: 2769, column: 22, scope: !12587)
!12587 = distinct !DILexicalBlock(scope: !12588, file: !3, line: 2769, column: 5)
!12588 = distinct !DILexicalBlock(scope: !12583, file: !3, line: 2768, column: 18)
!12589 = !DILocation(line: 2769, column: 14, scope: !12587)
!12590 = !DILocation(line: 2769, column: 28, scope: !12587)
!12591 = !DILocation(line: 2769, column: 12, scope: !12587)
!12592 = !DILocation(line: 2769, column: 10, scope: !12587)
!12593 = !DILocation(line: 2769, column: 35, scope: !12594)
!12594 = distinct !DILexicalBlock(scope: !12587, file: !3, line: 2769, column: 5)
!12595 = !DILocation(line: 2769, column: 5, scope: !12587)
!12596 = !DILocation(line: 2770, column: 10, scope: !12597)
!12597 = distinct !DILexicalBlock(scope: !12598, file: !3, line: 2770, column: 10)
!12598 = distinct !DILexicalBlock(scope: !12594, file: !3, line: 2769, column: 53)
!12599 = !DILocation(line: 2770, column: 14, scope: !12597)
!12600 = !DILocation(line: 2770, column: 16, scope: !12597)
!12601 = !DILocation(line: 2770, column: 19, scope: !12597)
!12602 = !DILocation(line: 2770, column: 23, scope: !12597)
!12603 = !DILocation(line: 2770, column: 27, scope: !12597)
!12604 = !DILocation(line: 2770, column: 32, scope: !12597)
!12605 = !DILocation(line: 2770, column: 10, scope: !12598)
!12606 = !DILocation(line: 2771, column: 17, scope: !12607)
!12607 = distinct !DILexicalBlock(scope: !12597, file: !3, line: 2770, column: 47)
!12608 = !DILocation(line: 2772, column: 7, scope: !12607)
!12609 = !DILocation(line: 2774, column: 5, scope: !12598)
!12610 = !DILocation(line: 2769, column: 43, scope: !12594)
!12611 = !DILocation(line: 2769, column: 47, scope: !12594)
!12612 = !DILocation(line: 2769, column: 41, scope: !12594)
!12613 = !DILocation(line: 2769, column: 5, scope: !12594)
!12614 = distinct !{!12614, !12595, !12615}
!12615 = !DILocation(line: 2774, column: 5, scope: !12587)
!12616 = !DILocation(line: 2775, column: 9, scope: !12617)
!12617 = distinct !DILexicalBlock(scope: !12588, file: !3, line: 2775, column: 9)
!12618 = !DILocation(line: 2775, column: 9, scope: !12588)
!12619 = !DILocation(line: 2775, column: 20, scope: !12617)
!12620 = distinct !{!12620, !12584, !12621}
!12621 = !DILocation(line: 2776, column: 4, scope: !12583)
!12622 = !DILocation(line: 2782, column: 7, scope: !12623)
!12623 = distinct !DILexicalBlock(scope: !12567, file: !3, line: 2782, column: 7)
!12624 = !DILocation(line: 2782, column: 7, scope: !12567)
!12625 = !DILocation(line: 2783, column: 16, scope: !12626)
!12626 = distinct !DILexicalBlock(scope: !12623, file: !3, line: 2782, column: 18)
!12627 = !DILocation(line: 2783, column: 41, scope: !12626)
!12628 = !DILocation(line: 2783, column: 47, scope: !12626)
!12629 = !DILocation(line: 2783, column: 4, scope: !12626)
!12630 = !DILocation(line: 2785, column: 8, scope: !12631)
!12631 = distinct !DILexicalBlock(scope: !12626, file: !3, line: 2785, column: 8)
!12632 = !DILocation(line: 2785, column: 14, scope: !12631)
!12633 = !DILocation(line: 2785, column: 22, scope: !12631)
!12634 = !DILocation(line: 2785, column: 8, scope: !12626)
!12635 = !DILocalVariable(name: "pf", scope: !12636, file: !3, line: 2786, type: !9699)
!12636 = distinct !DILexicalBlock(scope: !12631, file: !3, line: 2785, column: 34)
!12637 = !DILocation(line: 2786, column: 17, scope: !12636)
!12638 = !DILocation(line: 2786, column: 22, scope: !12636)
!12639 = !DILocation(line: 2786, column: 28, scope: !12636)
!12640 = !DILocation(line: 2786, column: 36, scope: !12636)
!12641 = !DILocation(line: 2787, column: 17, scope: !12636)
!12642 = !DILocation(line: 2787, column: 44, scope: !12636)
!12643 = !DILocation(line: 2787, column: 5, scope: !12636)
!12644 = !DILocation(line: 2788, column: 15, scope: !12636)
!12645 = !DILocation(line: 2788, column: 25, scope: !12636)
!12646 = !DILocation(line: 2788, column: 29, scope: !12636)
!12647 = !DILocation(line: 2788, column: 35, scope: !12636)
!12648 = !DILocation(line: 2788, column: 39, scope: !12636)
!12649 = !DILocation(line: 2788, column: 5, scope: !12636)
!12650 = !DILocation(line: 2789, column: 9, scope: !12651)
!12651 = distinct !DILexicalBlock(scope: !12636, file: !3, line: 2789, column: 9)
!12652 = !DILocation(line: 2789, column: 13, scope: !12651)
!12653 = !DILocation(line: 2789, column: 21, scope: !12651)
!12654 = !DILocation(line: 2789, column: 9, scope: !12636)
!12655 = !DILocation(line: 2790, column: 42, scope: !12651)
!12656 = !DILocation(line: 2790, column: 48, scope: !12651)
!12657 = !DILocation(line: 2790, column: 56, scope: !12651)
!12658 = !DILocation(line: 2790, column: 6, scope: !12651)
!12659 = !DILocation(line: 2791, column: 4, scope: !12636)
!12660 = !DILocation(line: 2793, column: 4, scope: !12626)
!12661 = !DILocation(line: 2793, column: 12, scope: !12626)
!12662 = !DILocation(line: 2794, column: 22, scope: !12663)
!12663 = distinct !DILexicalBlock(scope: !12664, file: !3, line: 2794, column: 5)
!12664 = distinct !DILexicalBlock(scope: !12626, file: !3, line: 2793, column: 16)
!12665 = !DILocation(line: 2794, column: 14, scope: !12663)
!12666 = !DILocation(line: 2794, column: 26, scope: !12663)
!12667 = !DILocation(line: 2794, column: 12, scope: !12663)
!12668 = !DILocation(line: 2794, column: 10, scope: !12663)
!12669 = !DILocation(line: 2794, column: 33, scope: !12670)
!12670 = distinct !DILexicalBlock(scope: !12663, file: !3, line: 2794, column: 5)
!12671 = !DILocation(line: 2794, column: 5, scope: !12663)
!12672 = !DILocation(line: 2795, column: 10, scope: !12673)
!12673 = distinct !DILexicalBlock(scope: !12674, file: !3, line: 2795, column: 10)
!12674 = distinct !DILexicalBlock(scope: !12670, file: !3, line: 2794, column: 51)
!12675 = !DILocation(line: 2795, column: 14, scope: !12673)
!12676 = !DILocation(line: 2795, column: 16, scope: !12673)
!12677 = !DILocation(line: 2795, column: 19, scope: !12673)
!12678 = !DILocation(line: 2795, column: 23, scope: !12673)
!12679 = !DILocation(line: 2795, column: 27, scope: !12673)
!12680 = !DILocation(line: 2795, column: 32, scope: !12673)
!12681 = !DILocation(line: 2795, column: 10, scope: !12674)
!12682 = !DILocation(line: 2796, column: 19, scope: !12683)
!12683 = distinct !DILexicalBlock(scope: !12673, file: !3, line: 2795, column: 47)
!12684 = !DILocation(line: 2796, column: 39, scope: !12683)
!12685 = !DILocation(line: 2796, column: 7, scope: !12683)
!12686 = !DILocation(line: 2797, column: 6, scope: !12683)
!12687 = !DILocation(line: 2798, column: 5, scope: !12674)
!12688 = !DILocation(line: 2794, column: 41, scope: !12670)
!12689 = !DILocation(line: 2794, column: 45, scope: !12670)
!12690 = !DILocation(line: 2794, column: 39, scope: !12670)
!12691 = !DILocation(line: 2794, column: 5, scope: !12670)
!12692 = distinct !{!12692, !12671, !12693}
!12693 = !DILocation(line: 2798, column: 5, scope: !12663)
!12694 = distinct !{!12694, !12660, !12695}
!12695 = !DILocation(line: 2799, column: 4, scope: !12626)
!12696 = !DILocation(line: 2800, column: 3, scope: !12626)
!12697 = !DILocation(line: 2801, column: 2, scope: !12567)
!12698 = !DILocation(line: 2759, column: 21, scope: !12563)
!12699 = !DILocation(line: 2759, column: 27, scope: !12563)
!12700 = !DILocation(line: 2759, column: 19, scope: !12563)
!12701 = !DILocation(line: 2759, column: 2, scope: !12563)
!12702 = distinct !{!12702, !12565, !12703}
!12703 = !DILocation(line: 2801, column: 2, scope: !12564)
!12704 = !DILocation(line: 2802, column: 1, scope: !12543)
!12705 = distinct !DISubprogram(name: "write_userdef", scope: !3, file: !3, line: 974, type: !12706, scopeLine: 975, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !5641)
!12706 = !DISubroutineType(types: !12707)
!12707 = !{null, !5820}
!12708 = !DILocalVariable(name: "wd", arg: 1, scope: !12705, file: !3, line: 974, type: !5820)
!12709 = !DILocation(line: 974, column: 38, scope: !12705)
!12710 = !DILocalVariable(name: "btheme", scope: !12705, file: !3, line: 976, type: !12711)
!12711 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12712, size: 64)
!12712 = !DIDerivedType(tag: DW_TAG_typedef, name: "bTheme", file: !163, line: 387, baseType: !12713)
!12713 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bTheme", file: !163, line: 356, size: 108224, elements: !12714)
!12714 = !{!12715, !12717, !12718, !12719, !12784, !12973, !12974, !12975, !12976, !12977, !12978, !12979, !12980, !12981, !12982, !12983, !12984, !12985, !12986, !12987, !12988, !12989, !12991, !12992}
!12715 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !12713, file: !163, line: 357, baseType: !12716, size: 64)
!12716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12713, size: 64)
!12717 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !12713, file: !163, line: 357, baseType: !12716, size: 64, offset: 64)
!12718 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !12713, file: !163, line: 358, baseType: !2910, size: 256, offset: 128)
!12719 = !DIDerivedType(tag: DW_TAG_member, name: "tui", scope: !12713, file: !163, line: 360, baseType: !12720, size: 7296, offset: 384)
!12720 = !DIDerivedType(tag: DW_TAG_typedef, name: "ThemeUI", file: !163, line: 184, baseType: !12721)
!12721 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ThemeUI", file: !163, line: 159, size: 7296, elements: !12722)
!12722 = !{!12723, !12737, !12738, !12739, !12740, !12741, !12742, !12743, !12744, !12745, !12746, !12747, !12748, !12749, !12750, !12751, !12752, !12753, !12754, !12766, !12775, !12776, !12777, !12778, !12779, !12780, !12781, !12782, !12783}
!12723 = !DIDerivedType(tag: DW_TAG_member, name: "wcol_regular", scope: !12721, file: !163, line: 161, baseType: !12724, size: 256)
!12724 = !DIDerivedType(tag: DW_TAG_typedef, name: "uiWidgetColors", file: !163, line: 132, baseType: !12725)
!12725 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uiWidgetColors", file: !163, line: 122, size: 256, elements: !12726)
!12726 = !{!12727, !12728, !12729, !12730, !12731, !12732, !12733, !12734, !12735, !12736}
!12727 = !DIDerivedType(tag: DW_TAG_member, name: "outline", scope: !12725, file: !163, line: 123, baseType: !2395, size: 32)
!12728 = !DIDerivedType(tag: DW_TAG_member, name: "inner", scope: !12725, file: !163, line: 124, baseType: !2395, size: 32, offset: 32)
!12729 = !DIDerivedType(tag: DW_TAG_member, name: "inner_sel", scope: !12725, file: !163, line: 125, baseType: !2395, size: 32, offset: 64)
!12730 = !DIDerivedType(tag: DW_TAG_member, name: "item", scope: !12725, file: !163, line: 126, baseType: !2395, size: 32, offset: 96)
!12731 = !DIDerivedType(tag: DW_TAG_member, name: "text", scope: !12725, file: !163, line: 127, baseType: !2395, size: 32, offset: 128)
!12732 = !DIDerivedType(tag: DW_TAG_member, name: "text_sel", scope: !12725, file: !163, line: 128, baseType: !2395, size: 32, offset: 160)
!12733 = !DIDerivedType(tag: DW_TAG_member, name: "shaded", scope: !12725, file: !163, line: 129, baseType: !399, size: 16, offset: 192)
!12734 = !DIDerivedType(tag: DW_TAG_member, name: "shadetop", scope: !12725, file: !163, line: 130, baseType: !399, size: 16, offset: 208)
!12735 = !DIDerivedType(tag: DW_TAG_member, name: "shadedown", scope: !12725, file: !163, line: 130, baseType: !399, size: 16, offset: 224)
!12736 = !DIDerivedType(tag: DW_TAG_member, name: "alpha_check", scope: !12725, file: !163, line: 131, baseType: !399, size: 16, offset: 240)
!12737 = !DIDerivedType(tag: DW_TAG_member, name: "wcol_tool", scope: !12721, file: !163, line: 161, baseType: !12724, size: 256, offset: 256)
!12738 = !DIDerivedType(tag: DW_TAG_member, name: "wcol_text", scope: !12721, file: !163, line: 161, baseType: !12724, size: 256, offset: 512)
!12739 = !DIDerivedType(tag: DW_TAG_member, name: "wcol_radio", scope: !12721, file: !163, line: 162, baseType: !12724, size: 256, offset: 768)
!12740 = !DIDerivedType(tag: DW_TAG_member, name: "wcol_option", scope: !12721, file: !163, line: 162, baseType: !12724, size: 256, offset: 1024)
!12741 = !DIDerivedType(tag: DW_TAG_member, name: "wcol_toggle", scope: !12721, file: !163, line: 162, baseType: !12724, size: 256, offset: 1280)
!12742 = !DIDerivedType(tag: DW_TAG_member, name: "wcol_num", scope: !12721, file: !163, line: 163, baseType: !12724, size: 256, offset: 1536)
!12743 = !DIDerivedType(tag: DW_TAG_member, name: "wcol_numslider", scope: !12721, file: !163, line: 163, baseType: !12724, size: 256, offset: 1792)
!12744 = !DIDerivedType(tag: DW_TAG_member, name: "wcol_menu", scope: !12721, file: !163, line: 164, baseType: !12724, size: 256, offset: 2048)
!12745 = !DIDerivedType(tag: DW_TAG_member, name: "wcol_pulldown", scope: !12721, file: !163, line: 164, baseType: !12724, size: 256, offset: 2304)
!12746 = !DIDerivedType(tag: DW_TAG_member, name: "wcol_menu_back", scope: !12721, file: !163, line: 164, baseType: !12724, size: 256, offset: 2560)
!12747 = !DIDerivedType(tag: DW_TAG_member, name: "wcol_menu_item", scope: !12721, file: !163, line: 164, baseType: !12724, size: 256, offset: 2816)
!12748 = !DIDerivedType(tag: DW_TAG_member, name: "wcol_tooltip", scope: !12721, file: !163, line: 164, baseType: !12724, size: 256, offset: 3072)
!12749 = !DIDerivedType(tag: DW_TAG_member, name: "wcol_box", scope: !12721, file: !163, line: 165, baseType: !12724, size: 256, offset: 3328)
!12750 = !DIDerivedType(tag: DW_TAG_member, name: "wcol_scroll", scope: !12721, file: !163, line: 165, baseType: !12724, size: 256, offset: 3584)
!12751 = !DIDerivedType(tag: DW_TAG_member, name: "wcol_progress", scope: !12721, file: !163, line: 165, baseType: !12724, size: 256, offset: 3840)
!12752 = !DIDerivedType(tag: DW_TAG_member, name: "wcol_list_item", scope: !12721, file: !163, line: 165, baseType: !12724, size: 256, offset: 4096)
!12753 = !DIDerivedType(tag: DW_TAG_member, name: "wcol_pie_menu", scope: !12721, file: !163, line: 165, baseType: !12724, size: 256, offset: 4352)
!12754 = !DIDerivedType(tag: DW_TAG_member, name: "wcol_state", scope: !12721, file: !163, line: 167, baseType: !12755, size: 256, offset: 4608)
!12755 = !DIDerivedType(tag: DW_TAG_typedef, name: "uiWidgetStateColors", file: !163, line: 142, baseType: !12756)
!12756 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uiWidgetStateColors", file: !163, line: 134, size: 256, elements: !12757)
!12757 = !{!12758, !12759, !12760, !12761, !12762, !12763, !12764, !12765}
!12758 = !DIDerivedType(tag: DW_TAG_member, name: "inner_anim", scope: !12756, file: !163, line: 135, baseType: !2395, size: 32)
!12759 = !DIDerivedType(tag: DW_TAG_member, name: "inner_anim_sel", scope: !12756, file: !163, line: 136, baseType: !2395, size: 32, offset: 32)
!12760 = !DIDerivedType(tag: DW_TAG_member, name: "inner_key", scope: !12756, file: !163, line: 137, baseType: !2395, size: 32, offset: 64)
!12761 = !DIDerivedType(tag: DW_TAG_member, name: "inner_key_sel", scope: !12756, file: !163, line: 138, baseType: !2395, size: 32, offset: 96)
!12762 = !DIDerivedType(tag: DW_TAG_member, name: "inner_driven", scope: !12756, file: !163, line: 139, baseType: !2395, size: 32, offset: 128)
!12763 = !DIDerivedType(tag: DW_TAG_member, name: "inner_driven_sel", scope: !12756, file: !163, line: 140, baseType: !2395, size: 32, offset: 160)
!12764 = !DIDerivedType(tag: DW_TAG_member, name: "blend", scope: !12756, file: !163, line: 141, baseType: !396, size: 32, offset: 192)
!12765 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !12756, file: !163, line: 141, baseType: !396, size: 32, offset: 224)
!12766 = !DIDerivedType(tag: DW_TAG_member, name: "panel", scope: !12721, file: !163, line: 169, baseType: !12767, size: 128, offset: 4864)
!12767 = !DIDerivedType(tag: DW_TAG_typedef, name: "uiPanelColors", file: !163, line: 150, baseType: !12768)
!12768 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uiPanelColors", file: !163, line: 144, size: 128, elements: !12769)
!12769 = !{!12770, !12771, !12772, !12773, !12774}
!12770 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !12768, file: !163, line: 145, baseType: !2395, size: 32)
!12771 = !DIDerivedType(tag: DW_TAG_member, name: "back", scope: !12768, file: !163, line: 146, baseType: !2395, size: 32, offset: 32)
!12772 = !DIDerivedType(tag: DW_TAG_member, name: "show_header", scope: !12768, file: !163, line: 147, baseType: !399, size: 16, offset: 64)
!12773 = !DIDerivedType(tag: DW_TAG_member, name: "show_back", scope: !12768, file: !163, line: 148, baseType: !399, size: 16, offset: 80)
!12774 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !12768, file: !163, line: 149, baseType: !98, size: 32, offset: 96)
!12775 = !DIDerivedType(tag: DW_TAG_member, name: "emboss", scope: !12721, file: !163, line: 171, baseType: !2395, size: 32, offset: 4992)
!12776 = !DIDerivedType(tag: DW_TAG_member, name: "menu_shadow_fac", scope: !12721, file: !163, line: 174, baseType: !396, size: 32, offset: 5024)
!12777 = !DIDerivedType(tag: DW_TAG_member, name: "menu_shadow_width", scope: !12721, file: !163, line: 175, baseType: !399, size: 16, offset: 5056)
!12778 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !12721, file: !163, line: 177, baseType: !811, size: 48, offset: 5072)
!12779 = !DIDerivedType(tag: DW_TAG_member, name: "iconfile", scope: !12721, file: !163, line: 179, baseType: !630, size: 2048, offset: 5120)
!12780 = !DIDerivedType(tag: DW_TAG_member, name: "icon_alpha", scope: !12721, file: !163, line: 180, baseType: !396, size: 32, offset: 7168)
!12781 = !DIDerivedType(tag: DW_TAG_member, name: "xaxis", scope: !12721, file: !163, line: 183, baseType: !2395, size: 32, offset: 7200)
!12782 = !DIDerivedType(tag: DW_TAG_member, name: "yaxis", scope: !12721, file: !163, line: 183, baseType: !2395, size: 32, offset: 7232)
!12783 = !DIDerivedType(tag: DW_TAG_member, name: "zaxis", scope: !12721, file: !163, line: 183, baseType: !2395, size: 32, offset: 7264)
!12784 = !DIDerivedType(tag: DW_TAG_member, name: "tbuts", scope: !12713, file: !163, line: 364, baseType: !12785, size: 5760, offset: 7680)
!12785 = !DIDerivedType(tag: DW_TAG_typedef, name: "ThemeSpace", file: !163, line: 336, baseType: !12786)
!12786 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ThemeSpace", file: !163, line: 189, size: 5760, elements: !12787)
!12787 = !{!12788, !12789, !12790, !12791, !12792, !12793, !12794, !12795, !12796, !12797, !12798, !12799, !12800, !12801, !12802, !12803, !12804, !12805, !12806, !12807, !12808, !12809, !12817, !12818, !12819, !12820, !12821, !12822, !12823, !12824, !12825, !12826, !12827, !12828, !12829, !12830, !12831, !12832, !12833, !12834, !12835, !12836, !12837, !12838, !12839, !12840, !12841, !12842, !12843, !12844, !12845, !12846, !12847, !12848, !12849, !12850, !12851, !12852, !12853, !12854, !12855, !12856, !12857, !12858, !12859, !12860, !12861, !12862, !12863, !12864, !12865, !12866, !12867, !12868, !12869, !12870, !12871, !12872, !12873, !12874, !12875, !12876, !12877, !12878, !12879, !12880, !12881, !12882, !12883, !12884, !12885, !12886, !12887, !12888, !12889, !12890, !12891, !12892, !12893, !12894, !12895, !12896, !12897, !12898, !12899, !12900, !12901, !12902, !12903, !12904, !12905, !12906, !12907, !12908, !12909, !12910, !12911, !12912, !12913, !12914, !12915, !12916, !12917, !12918, !12919, !12920, !12921, !12922, !12923, !12924, !12925, !12926, !12927, !12928, !12929, !12930, !12931, !12932, !12933, !12934, !12935, !12936, !12937, !12938, !12939, !12940, !12941, !12942, !12943, !12944, !12945, !12946, !12947, !12948, !12949, !12950, !12951, !12952, !12953, !12954, !12955, !12956, !12957, !12958, !12959, !12960, !12961, !12962, !12963, !12964, !12965, !12966, !12967, !12968, !12969, !12970, !12971, !12972}
!12788 = !DIDerivedType(tag: DW_TAG_member, name: "back", scope: !12786, file: !163, line: 191, baseType: !2395, size: 32)
!12789 = !DIDerivedType(tag: DW_TAG_member, name: "title", scope: !12786, file: !163, line: 192, baseType: !2395, size: 32, offset: 32)
!12790 = !DIDerivedType(tag: DW_TAG_member, name: "text", scope: !12786, file: !163, line: 193, baseType: !2395, size: 32, offset: 64)
!12791 = !DIDerivedType(tag: DW_TAG_member, name: "text_hi", scope: !12786, file: !163, line: 194, baseType: !2395, size: 32, offset: 96)
!12792 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !12786, file: !163, line: 197, baseType: !2395, size: 32, offset: 128)
!12793 = !DIDerivedType(tag: DW_TAG_member, name: "header_title", scope: !12786, file: !163, line: 198, baseType: !2395, size: 32, offset: 160)
!12794 = !DIDerivedType(tag: DW_TAG_member, name: "header_text", scope: !12786, file: !163, line: 199, baseType: !2395, size: 32, offset: 192)
!12795 = !DIDerivedType(tag: DW_TAG_member, name: "header_text_hi", scope: !12786, file: !163, line: 200, baseType: !2395, size: 32, offset: 224)
!12796 = !DIDerivedType(tag: DW_TAG_member, name: "tab_active", scope: !12786, file: !163, line: 203, baseType: !2395, size: 32, offset: 256)
!12797 = !DIDerivedType(tag: DW_TAG_member, name: "tab_inactive", scope: !12786, file: !163, line: 204, baseType: !2395, size: 32, offset: 288)
!12798 = !DIDerivedType(tag: DW_TAG_member, name: "tab_back", scope: !12786, file: !163, line: 205, baseType: !2395, size: 32, offset: 320)
!12799 = !DIDerivedType(tag: DW_TAG_member, name: "tab_outline", scope: !12786, file: !163, line: 206, baseType: !2395, size: 32, offset: 352)
!12800 = !DIDerivedType(tag: DW_TAG_member, name: "button", scope: !12786, file: !163, line: 209, baseType: !2395, size: 32, offset: 384)
!12801 = !DIDerivedType(tag: DW_TAG_member, name: "button_title", scope: !12786, file: !163, line: 210, baseType: !2395, size: 32, offset: 416)
!12802 = !DIDerivedType(tag: DW_TAG_member, name: "button_text", scope: !12786, file: !163, line: 211, baseType: !2395, size: 32, offset: 448)
!12803 = !DIDerivedType(tag: DW_TAG_member, name: "button_text_hi", scope: !12786, file: !163, line: 212, baseType: !2395, size: 32, offset: 480)
!12804 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !12786, file: !163, line: 215, baseType: !2395, size: 32, offset: 512)
!12805 = !DIDerivedType(tag: DW_TAG_member, name: "list_title", scope: !12786, file: !163, line: 216, baseType: !2395, size: 32, offset: 544)
!12806 = !DIDerivedType(tag: DW_TAG_member, name: "list_text", scope: !12786, file: !163, line: 217, baseType: !2395, size: 32, offset: 576)
!12807 = !DIDerivedType(tag: DW_TAG_member, name: "list_text_hi", scope: !12786, file: !163, line: 218, baseType: !2395, size: 32, offset: 608)
!12808 = !DIDerivedType(tag: DW_TAG_member, name: "panelcolors", scope: !12786, file: !163, line: 227, baseType: !12767, size: 128, offset: 640)
!12809 = !DIDerivedType(tag: DW_TAG_member, name: "gradients", scope: !12786, file: !163, line: 229, baseType: !12810, size: 128, offset: 768)
!12810 = !DIDerivedType(tag: DW_TAG_typedef, name: "uiGradientColors", file: !163, line: 157, baseType: !12811)
!12811 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uiGradientColors", file: !163, line: 152, size: 128, elements: !12812)
!12812 = !{!12813, !12814, !12815, !12816}
!12813 = !DIDerivedType(tag: DW_TAG_member, name: "gradient", scope: !12811, file: !163, line: 153, baseType: !2395, size: 32)
!12814 = !DIDerivedType(tag: DW_TAG_member, name: "high_gradient", scope: !12811, file: !163, line: 154, baseType: !2395, size: 32, offset: 32)
!12815 = !DIDerivedType(tag: DW_TAG_member, name: "show_grad", scope: !12811, file: !163, line: 155, baseType: !98, size: 32, offset: 64)
!12816 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !12811, file: !163, line: 156, baseType: !98, size: 32, offset: 96)
!12817 = !DIDerivedType(tag: DW_TAG_member, name: "shade1", scope: !12786, file: !163, line: 231, baseType: !2395, size: 32, offset: 896)
!12818 = !DIDerivedType(tag: DW_TAG_member, name: "shade2", scope: !12786, file: !163, line: 232, baseType: !2395, size: 32, offset: 928)
!12819 = !DIDerivedType(tag: DW_TAG_member, name: "hilite", scope: !12786, file: !163, line: 234, baseType: !2395, size: 32, offset: 960)
!12820 = !DIDerivedType(tag: DW_TAG_member, name: "grid", scope: !12786, file: !163, line: 235, baseType: !2395, size: 32, offset: 992)
!12821 = !DIDerivedType(tag: DW_TAG_member, name: "view_overlay", scope: !12786, file: !163, line: 237, baseType: !2395, size: 32, offset: 1024)
!12822 = !DIDerivedType(tag: DW_TAG_member, name: "wire", scope: !12786, file: !163, line: 239, baseType: !2395, size: 32, offset: 1056)
!12823 = !DIDerivedType(tag: DW_TAG_member, name: "wire_edit", scope: !12786, file: !163, line: 239, baseType: !2395, size: 32, offset: 1088)
!12824 = !DIDerivedType(tag: DW_TAG_member, name: "select", scope: !12786, file: !163, line: 239, baseType: !2395, size: 32, offset: 1120)
!12825 = !DIDerivedType(tag: DW_TAG_member, name: "lamp", scope: !12786, file: !163, line: 240, baseType: !2395, size: 32, offset: 1152)
!12826 = !DIDerivedType(tag: DW_TAG_member, name: "speaker", scope: !12786, file: !163, line: 240, baseType: !2395, size: 32, offset: 1184)
!12827 = !DIDerivedType(tag: DW_TAG_member, name: "empty", scope: !12786, file: !163, line: 240, baseType: !2395, size: 32, offset: 1216)
!12828 = !DIDerivedType(tag: DW_TAG_member, name: "camera", scope: !12786, file: !163, line: 240, baseType: !2395, size: 32, offset: 1248)
!12829 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !12786, file: !163, line: 241, baseType: !2395, size: 32, offset: 1280)
!12830 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !12786, file: !163, line: 241, baseType: !2395, size: 32, offset: 1312)
!12831 = !DIDerivedType(tag: DW_TAG_member, name: "group_active", scope: !12786, file: !163, line: 241, baseType: !2395, size: 32, offset: 1344)
!12832 = !DIDerivedType(tag: DW_TAG_member, name: "transform", scope: !12786, file: !163, line: 241, baseType: !2395, size: 32, offset: 1376)
!12833 = !DIDerivedType(tag: DW_TAG_member, name: "vertex", scope: !12786, file: !163, line: 242, baseType: !2395, size: 32, offset: 1408)
!12834 = !DIDerivedType(tag: DW_TAG_member, name: "vertex_select", scope: !12786, file: !163, line: 242, baseType: !2395, size: 32, offset: 1440)
!12835 = !DIDerivedType(tag: DW_TAG_member, name: "vertex_unreferenced", scope: !12786, file: !163, line: 242, baseType: !2395, size: 32, offset: 1472)
!12836 = !DIDerivedType(tag: DW_TAG_member, name: "edge", scope: !12786, file: !163, line: 243, baseType: !2395, size: 32, offset: 1504)
!12837 = !DIDerivedType(tag: DW_TAG_member, name: "edge_select", scope: !12786, file: !163, line: 243, baseType: !2395, size: 32, offset: 1536)
!12838 = !DIDerivedType(tag: DW_TAG_member, name: "edge_seam", scope: !12786, file: !163, line: 244, baseType: !2395, size: 32, offset: 1568)
!12839 = !DIDerivedType(tag: DW_TAG_member, name: "edge_sharp", scope: !12786, file: !163, line: 244, baseType: !2395, size: 32, offset: 1600)
!12840 = !DIDerivedType(tag: DW_TAG_member, name: "edge_facesel", scope: !12786, file: !163, line: 244, baseType: !2395, size: 32, offset: 1632)
!12841 = !DIDerivedType(tag: DW_TAG_member, name: "edge_crease", scope: !12786, file: !163, line: 244, baseType: !2395, size: 32, offset: 1664)
!12842 = !DIDerivedType(tag: DW_TAG_member, name: "face", scope: !12786, file: !163, line: 245, baseType: !2395, size: 32, offset: 1696)
!12843 = !DIDerivedType(tag: DW_TAG_member, name: "face_select", scope: !12786, file: !163, line: 245, baseType: !2395, size: 32, offset: 1728)
!12844 = !DIDerivedType(tag: DW_TAG_member, name: "face_dot", scope: !12786, file: !163, line: 246, baseType: !2395, size: 32, offset: 1760)
!12845 = !DIDerivedType(tag: DW_TAG_member, name: "extra_edge_len", scope: !12786, file: !163, line: 247, baseType: !2395, size: 32, offset: 1792)
!12846 = !DIDerivedType(tag: DW_TAG_member, name: "extra_edge_angle", scope: !12786, file: !163, line: 247, baseType: !2395, size: 32, offset: 1824)
!12847 = !DIDerivedType(tag: DW_TAG_member, name: "extra_face_angle", scope: !12786, file: !163, line: 247, baseType: !2395, size: 32, offset: 1856)
!12848 = !DIDerivedType(tag: DW_TAG_member, name: "extra_face_area", scope: !12786, file: !163, line: 247, baseType: !2395, size: 32, offset: 1888)
!12849 = !DIDerivedType(tag: DW_TAG_member, name: "normal", scope: !12786, file: !163, line: 248, baseType: !2395, size: 32, offset: 1920)
!12850 = !DIDerivedType(tag: DW_TAG_member, name: "vertex_normal", scope: !12786, file: !163, line: 249, baseType: !2395, size: 32, offset: 1952)
!12851 = !DIDerivedType(tag: DW_TAG_member, name: "loop_normal", scope: !12786, file: !163, line: 250, baseType: !2395, size: 32, offset: 1984)
!12852 = !DIDerivedType(tag: DW_TAG_member, name: "bone_solid", scope: !12786, file: !163, line: 251, baseType: !2395, size: 32, offset: 2016)
!12853 = !DIDerivedType(tag: DW_TAG_member, name: "bone_pose", scope: !12786, file: !163, line: 251, baseType: !2395, size: 32, offset: 2048)
!12854 = !DIDerivedType(tag: DW_TAG_member, name: "bone_pose_active", scope: !12786, file: !163, line: 251, baseType: !2395, size: 32, offset: 2080)
!12855 = !DIDerivedType(tag: DW_TAG_member, name: "strip", scope: !12786, file: !163, line: 252, baseType: !2395, size: 32, offset: 2112)
!12856 = !DIDerivedType(tag: DW_TAG_member, name: "strip_select", scope: !12786, file: !163, line: 252, baseType: !2395, size: 32, offset: 2144)
!12857 = !DIDerivedType(tag: DW_TAG_member, name: "cframe", scope: !12786, file: !163, line: 253, baseType: !2395, size: 32, offset: 2176)
!12858 = !DIDerivedType(tag: DW_TAG_member, name: "freestyle_edge_mark", scope: !12786, file: !163, line: 254, baseType: !2395, size: 32, offset: 2208)
!12859 = !DIDerivedType(tag: DW_TAG_member, name: "freestyle_face_mark", scope: !12786, file: !163, line: 254, baseType: !2395, size: 32, offset: 2240)
!12860 = !DIDerivedType(tag: DW_TAG_member, name: "nurb_uline", scope: !12786, file: !163, line: 256, baseType: !2395, size: 32, offset: 2272)
!12861 = !DIDerivedType(tag: DW_TAG_member, name: "nurb_vline", scope: !12786, file: !163, line: 256, baseType: !2395, size: 32, offset: 2304)
!12862 = !DIDerivedType(tag: DW_TAG_member, name: "act_spline", scope: !12786, file: !163, line: 257, baseType: !2395, size: 32, offset: 2336)
!12863 = !DIDerivedType(tag: DW_TAG_member, name: "nurb_sel_uline", scope: !12786, file: !163, line: 257, baseType: !2395, size: 32, offset: 2368)
!12864 = !DIDerivedType(tag: DW_TAG_member, name: "nurb_sel_vline", scope: !12786, file: !163, line: 257, baseType: !2395, size: 32, offset: 2400)
!12865 = !DIDerivedType(tag: DW_TAG_member, name: "lastsel_point", scope: !12786, file: !163, line: 257, baseType: !2395, size: 32, offset: 2432)
!12866 = !DIDerivedType(tag: DW_TAG_member, name: "handle_free", scope: !12786, file: !163, line: 259, baseType: !2395, size: 32, offset: 2464)
!12867 = !DIDerivedType(tag: DW_TAG_member, name: "handle_auto", scope: !12786, file: !163, line: 259, baseType: !2395, size: 32, offset: 2496)
!12868 = !DIDerivedType(tag: DW_TAG_member, name: "handle_vect", scope: !12786, file: !163, line: 259, baseType: !2395, size: 32, offset: 2528)
!12869 = !DIDerivedType(tag: DW_TAG_member, name: "handle_align", scope: !12786, file: !163, line: 259, baseType: !2395, size: 32, offset: 2560)
!12870 = !DIDerivedType(tag: DW_TAG_member, name: "handle_auto_clamped", scope: !12786, file: !163, line: 259, baseType: !2395, size: 32, offset: 2592)
!12871 = !DIDerivedType(tag: DW_TAG_member, name: "handle_sel_free", scope: !12786, file: !163, line: 260, baseType: !2395, size: 32, offset: 2624)
!12872 = !DIDerivedType(tag: DW_TAG_member, name: "handle_sel_auto", scope: !12786, file: !163, line: 260, baseType: !2395, size: 32, offset: 2656)
!12873 = !DIDerivedType(tag: DW_TAG_member, name: "handle_sel_vect", scope: !12786, file: !163, line: 260, baseType: !2395, size: 32, offset: 2688)
!12874 = !DIDerivedType(tag: DW_TAG_member, name: "handle_sel_align", scope: !12786, file: !163, line: 260, baseType: !2395, size: 32, offset: 2720)
!12875 = !DIDerivedType(tag: DW_TAG_member, name: "handle_sel_auto_clamped", scope: !12786, file: !163, line: 260, baseType: !2395, size: 32, offset: 2752)
!12876 = !DIDerivedType(tag: DW_TAG_member, name: "ds_channel", scope: !12786, file: !163, line: 262, baseType: !2395, size: 32, offset: 2784)
!12877 = !DIDerivedType(tag: DW_TAG_member, name: "ds_subchannel", scope: !12786, file: !163, line: 262, baseType: !2395, size: 32, offset: 2816)
!12878 = !DIDerivedType(tag: DW_TAG_member, name: "keytype_keyframe", scope: !12786, file: !163, line: 263, baseType: !2395, size: 32, offset: 2848)
!12879 = !DIDerivedType(tag: DW_TAG_member, name: "keytype_extreme", scope: !12786, file: !163, line: 263, baseType: !2395, size: 32, offset: 2880)
!12880 = !DIDerivedType(tag: DW_TAG_member, name: "keytype_breakdown", scope: !12786, file: !163, line: 263, baseType: !2395, size: 32, offset: 2912)
!12881 = !DIDerivedType(tag: DW_TAG_member, name: "keytype_jitter", scope: !12786, file: !163, line: 263, baseType: !2395, size: 32, offset: 2944)
!12882 = !DIDerivedType(tag: DW_TAG_member, name: "keytype_keyframe_select", scope: !12786, file: !163, line: 264, baseType: !2395, size: 32, offset: 2976)
!12883 = !DIDerivedType(tag: DW_TAG_member, name: "keytype_extreme_select", scope: !12786, file: !163, line: 264, baseType: !2395, size: 32, offset: 3008)
!12884 = !DIDerivedType(tag: DW_TAG_member, name: "keytype_breakdown_select", scope: !12786, file: !163, line: 264, baseType: !2395, size: 32, offset: 3040)
!12885 = !DIDerivedType(tag: DW_TAG_member, name: "keytype_jitter_select", scope: !12786, file: !163, line: 264, baseType: !2395, size: 32, offset: 3072)
!12886 = !DIDerivedType(tag: DW_TAG_member, name: "keyborder", scope: !12786, file: !163, line: 265, baseType: !2395, size: 32, offset: 3104)
!12887 = !DIDerivedType(tag: DW_TAG_member, name: "keyborder_select", scope: !12786, file: !163, line: 265, baseType: !2395, size: 32, offset: 3136)
!12888 = !DIDerivedType(tag: DW_TAG_member, name: "console_output", scope: !12786, file: !163, line: 267, baseType: !2395, size: 32, offset: 3168)
!12889 = !DIDerivedType(tag: DW_TAG_member, name: "console_input", scope: !12786, file: !163, line: 267, baseType: !2395, size: 32, offset: 3200)
!12890 = !DIDerivedType(tag: DW_TAG_member, name: "console_info", scope: !12786, file: !163, line: 267, baseType: !2395, size: 32, offset: 3232)
!12891 = !DIDerivedType(tag: DW_TAG_member, name: "console_error", scope: !12786, file: !163, line: 267, baseType: !2395, size: 32, offset: 3264)
!12892 = !DIDerivedType(tag: DW_TAG_member, name: "console_cursor", scope: !12786, file: !163, line: 268, baseType: !2395, size: 32, offset: 3296)
!12893 = !DIDerivedType(tag: DW_TAG_member, name: "console_select", scope: !12786, file: !163, line: 268, baseType: !2395, size: 32, offset: 3328)
!12894 = !DIDerivedType(tag: DW_TAG_member, name: "vertex_size", scope: !12786, file: !163, line: 270, baseType: !375, size: 8, offset: 3360)
!12895 = !DIDerivedType(tag: DW_TAG_member, name: "outline_width", scope: !12786, file: !163, line: 270, baseType: !375, size: 8, offset: 3368)
!12896 = !DIDerivedType(tag: DW_TAG_member, name: "facedot_size", scope: !12786, file: !163, line: 270, baseType: !375, size: 8, offset: 3376)
!12897 = !DIDerivedType(tag: DW_TAG_member, name: "noodle_curving", scope: !12786, file: !163, line: 271, baseType: !375, size: 8, offset: 3384)
!12898 = !DIDerivedType(tag: DW_TAG_member, name: "syntaxl", scope: !12786, file: !163, line: 274, baseType: !2395, size: 32, offset: 3392)
!12899 = !DIDerivedType(tag: DW_TAG_member, name: "syntaxs", scope: !12786, file: !163, line: 274, baseType: !2395, size: 32, offset: 3424)
!12900 = !DIDerivedType(tag: DW_TAG_member, name: "syntaxb", scope: !12786, file: !163, line: 275, baseType: !2395, size: 32, offset: 3456)
!12901 = !DIDerivedType(tag: DW_TAG_member, name: "syntaxn", scope: !12786, file: !163, line: 275, baseType: !2395, size: 32, offset: 3488)
!12902 = !DIDerivedType(tag: DW_TAG_member, name: "syntaxv", scope: !12786, file: !163, line: 276, baseType: !2395, size: 32, offset: 3520)
!12903 = !DIDerivedType(tag: DW_TAG_member, name: "syntaxc", scope: !12786, file: !163, line: 276, baseType: !2395, size: 32, offset: 3552)
!12904 = !DIDerivedType(tag: DW_TAG_member, name: "syntaxd", scope: !12786, file: !163, line: 277, baseType: !2395, size: 32, offset: 3584)
!12905 = !DIDerivedType(tag: DW_TAG_member, name: "syntaxr", scope: !12786, file: !163, line: 277, baseType: !2395, size: 32, offset: 3616)
!12906 = !DIDerivedType(tag: DW_TAG_member, name: "nodeclass_output", scope: !12786, file: !163, line: 279, baseType: !2395, size: 32, offset: 3648)
!12907 = !DIDerivedType(tag: DW_TAG_member, name: "nodeclass_filter", scope: !12786, file: !163, line: 279, baseType: !2395, size: 32, offset: 3680)
!12908 = !DIDerivedType(tag: DW_TAG_member, name: "nodeclass_vector", scope: !12786, file: !163, line: 280, baseType: !2395, size: 32, offset: 3712)
!12909 = !DIDerivedType(tag: DW_TAG_member, name: "nodeclass_texture", scope: !12786, file: !163, line: 280, baseType: !2395, size: 32, offset: 3744)
!12910 = !DIDerivedType(tag: DW_TAG_member, name: "nodeclass_shader", scope: !12786, file: !163, line: 281, baseType: !2395, size: 32, offset: 3776)
!12911 = !DIDerivedType(tag: DW_TAG_member, name: "nodeclass_script", scope: !12786, file: !163, line: 281, baseType: !2395, size: 32, offset: 3808)
!12912 = !DIDerivedType(tag: DW_TAG_member, name: "nodeclass_pattern", scope: !12786, file: !163, line: 282, baseType: !2395, size: 32, offset: 3840)
!12913 = !DIDerivedType(tag: DW_TAG_member, name: "nodeclass_layout", scope: !12786, file: !163, line: 282, baseType: !2395, size: 32, offset: 3872)
!12914 = !DIDerivedType(tag: DW_TAG_member, name: "movie", scope: !12786, file: !163, line: 284, baseType: !2395, size: 32, offset: 3904)
!12915 = !DIDerivedType(tag: DW_TAG_member, name: "movieclip", scope: !12786, file: !163, line: 284, baseType: !2395, size: 32, offset: 3936)
!12916 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !12786, file: !163, line: 284, baseType: !2395, size: 32, offset: 3968)
!12917 = !DIDerivedType(tag: DW_TAG_member, name: "image", scope: !12786, file: !163, line: 284, baseType: !2395, size: 32, offset: 4000)
!12918 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !12786, file: !163, line: 284, baseType: !2395, size: 32, offset: 4032)
!12919 = !DIDerivedType(tag: DW_TAG_member, name: "audio", scope: !12786, file: !163, line: 284, baseType: !2395, size: 32, offset: 4064)
!12920 = !DIDerivedType(tag: DW_TAG_member, name: "effect", scope: !12786, file: !163, line: 285, baseType: !2395, size: 32, offset: 4096)
!12921 = !DIDerivedType(tag: DW_TAG_member, name: "transition", scope: !12786, file: !163, line: 285, baseType: !2395, size: 32, offset: 4128)
!12922 = !DIDerivedType(tag: DW_TAG_member, name: "meta", scope: !12786, file: !163, line: 285, baseType: !2395, size: 32, offset: 4160)
!12923 = !DIDerivedType(tag: DW_TAG_member, name: "editmesh_active", scope: !12786, file: !163, line: 286, baseType: !2395, size: 32, offset: 4192)
!12924 = !DIDerivedType(tag: DW_TAG_member, name: "handle_vertex", scope: !12786, file: !163, line: 288, baseType: !2395, size: 32, offset: 4224)
!12925 = !DIDerivedType(tag: DW_TAG_member, name: "handle_vertex_select", scope: !12786, file: !163, line: 289, baseType: !2395, size: 32, offset: 4256)
!12926 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !12786, file: !163, line: 290, baseType: !2395, size: 32, offset: 4288)
!12927 = !DIDerivedType(tag: DW_TAG_member, name: "handle_vertex_size", scope: !12786, file: !163, line: 292, baseType: !375, size: 8, offset: 4320)
!12928 = !DIDerivedType(tag: DW_TAG_member, name: "marker_outline", scope: !12786, file: !163, line: 294, baseType: !2395, size: 32, offset: 4328)
!12929 = !DIDerivedType(tag: DW_TAG_member, name: "marker", scope: !12786, file: !163, line: 294, baseType: !2395, size: 32, offset: 4360)
!12930 = !DIDerivedType(tag: DW_TAG_member, name: "act_marker", scope: !12786, file: !163, line: 294, baseType: !2395, size: 32, offset: 4392)
!12931 = !DIDerivedType(tag: DW_TAG_member, name: "sel_marker", scope: !12786, file: !163, line: 294, baseType: !2395, size: 32, offset: 4424)
!12932 = !DIDerivedType(tag: DW_TAG_member, name: "dis_marker", scope: !12786, file: !163, line: 294, baseType: !2395, size: 32, offset: 4456)
!12933 = !DIDerivedType(tag: DW_TAG_member, name: "lock_marker", scope: !12786, file: !163, line: 294, baseType: !2395, size: 32, offset: 4488)
!12934 = !DIDerivedType(tag: DW_TAG_member, name: "bundle_solid", scope: !12786, file: !163, line: 295, baseType: !2395, size: 32, offset: 4520)
!12935 = !DIDerivedType(tag: DW_TAG_member, name: "path_before", scope: !12786, file: !163, line: 296, baseType: !2395, size: 32, offset: 4552)
!12936 = !DIDerivedType(tag: DW_TAG_member, name: "path_after", scope: !12786, file: !163, line: 296, baseType: !2395, size: 32, offset: 4584)
!12937 = !DIDerivedType(tag: DW_TAG_member, name: "camera_path", scope: !12786, file: !163, line: 297, baseType: !2395, size: 32, offset: 4616)
!12938 = !DIDerivedType(tag: DW_TAG_member, name: "hpad", scope: !12786, file: !163, line: 298, baseType: !415, size: 24, offset: 4648)
!12939 = !DIDerivedType(tag: DW_TAG_member, name: "preview_back", scope: !12786, file: !163, line: 300, baseType: !2395, size: 32, offset: 4672)
!12940 = !DIDerivedType(tag: DW_TAG_member, name: "preview_stitch_face", scope: !12786, file: !163, line: 301, baseType: !2395, size: 32, offset: 4704)
!12941 = !DIDerivedType(tag: DW_TAG_member, name: "preview_stitch_edge", scope: !12786, file: !163, line: 302, baseType: !2395, size: 32, offset: 4736)
!12942 = !DIDerivedType(tag: DW_TAG_member, name: "preview_stitch_vert", scope: !12786, file: !163, line: 303, baseType: !2395, size: 32, offset: 4768)
!12943 = !DIDerivedType(tag: DW_TAG_member, name: "preview_stitch_stitchable", scope: !12786, file: !163, line: 304, baseType: !2395, size: 32, offset: 4800)
!12944 = !DIDerivedType(tag: DW_TAG_member, name: "preview_stitch_unstitchable", scope: !12786, file: !163, line: 305, baseType: !2395, size: 32, offset: 4832)
!12945 = !DIDerivedType(tag: DW_TAG_member, name: "preview_stitch_active", scope: !12786, file: !163, line: 306, baseType: !2395, size: 32, offset: 4864)
!12946 = !DIDerivedType(tag: DW_TAG_member, name: "uv_shadow", scope: !12786, file: !163, line: 308, baseType: !2395, size: 32, offset: 4896)
!12947 = !DIDerivedType(tag: DW_TAG_member, name: "uv_others", scope: !12786, file: !163, line: 309, baseType: !2395, size: 32, offset: 4928)
!12948 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !12786, file: !163, line: 311, baseType: !2395, size: 32, offset: 4960)
!12949 = !DIDerivedType(tag: DW_TAG_member, name: "selected_highlight", scope: !12786, file: !163, line: 312, baseType: !2395, size: 32, offset: 4992)
!12950 = !DIDerivedType(tag: DW_TAG_member, name: "skin_root", scope: !12786, file: !163, line: 314, baseType: !2395, size: 32, offset: 5024)
!12951 = !DIDerivedType(tag: DW_TAG_member, name: "anim_active", scope: !12786, file: !163, line: 317, baseType: !2395, size: 32, offset: 5056)
!12952 = !DIDerivedType(tag: DW_TAG_member, name: "anim_non_active", scope: !12786, file: !163, line: 318, baseType: !2395, size: 32, offset: 5088)
!12953 = !DIDerivedType(tag: DW_TAG_member, name: "nla_tweaking", scope: !12786, file: !163, line: 320, baseType: !2395, size: 32, offset: 5120)
!12954 = !DIDerivedType(tag: DW_TAG_member, name: "nla_tweakdupli", scope: !12786, file: !163, line: 321, baseType: !2395, size: 32, offset: 5152)
!12955 = !DIDerivedType(tag: DW_TAG_member, name: "nla_transition", scope: !12786, file: !163, line: 323, baseType: !2395, size: 32, offset: 5184)
!12956 = !DIDerivedType(tag: DW_TAG_member, name: "nla_transition_sel", scope: !12786, file: !163, line: 323, baseType: !2395, size: 32, offset: 5216)
!12957 = !DIDerivedType(tag: DW_TAG_member, name: "nla_meta", scope: !12786, file: !163, line: 324, baseType: !2395, size: 32, offset: 5248)
!12958 = !DIDerivedType(tag: DW_TAG_member, name: "nla_meta_sel", scope: !12786, file: !163, line: 324, baseType: !2395, size: 32, offset: 5280)
!12959 = !DIDerivedType(tag: DW_TAG_member, name: "nla_sound", scope: !12786, file: !163, line: 325, baseType: !2395, size: 32, offset: 5312)
!12960 = !DIDerivedType(tag: DW_TAG_member, name: "nla_sound_sel", scope: !12786, file: !163, line: 325, baseType: !2395, size: 32, offset: 5344)
!12961 = !DIDerivedType(tag: DW_TAG_member, name: "info_selected", scope: !12786, file: !163, line: 328, baseType: !2395, size: 32, offset: 5376)
!12962 = !DIDerivedType(tag: DW_TAG_member, name: "info_selected_text", scope: !12786, file: !163, line: 328, baseType: !2395, size: 32, offset: 5408)
!12963 = !DIDerivedType(tag: DW_TAG_member, name: "info_error", scope: !12786, file: !163, line: 329, baseType: !2395, size: 32, offset: 5440)
!12964 = !DIDerivedType(tag: DW_TAG_member, name: "info_error_text", scope: !12786, file: !163, line: 329, baseType: !2395, size: 32, offset: 5472)
!12965 = !DIDerivedType(tag: DW_TAG_member, name: "info_warning", scope: !12786, file: !163, line: 330, baseType: !2395, size: 32, offset: 5504)
!12966 = !DIDerivedType(tag: DW_TAG_member, name: "info_warning_text", scope: !12786, file: !163, line: 330, baseType: !2395, size: 32, offset: 5536)
!12967 = !DIDerivedType(tag: DW_TAG_member, name: "info_info", scope: !12786, file: !163, line: 331, baseType: !2395, size: 32, offset: 5568)
!12968 = !DIDerivedType(tag: DW_TAG_member, name: "info_info_text", scope: !12786, file: !163, line: 331, baseType: !2395, size: 32, offset: 5600)
!12969 = !DIDerivedType(tag: DW_TAG_member, name: "info_debug", scope: !12786, file: !163, line: 332, baseType: !2395, size: 32, offset: 5632)
!12970 = !DIDerivedType(tag: DW_TAG_member, name: "info_debug_text", scope: !12786, file: !163, line: 332, baseType: !2395, size: 32, offset: 5664)
!12971 = !DIDerivedType(tag: DW_TAG_member, name: "paint_curve_pivot", scope: !12786, file: !163, line: 334, baseType: !2395, size: 32, offset: 5696)
!12972 = !DIDerivedType(tag: DW_TAG_member, name: "paint_curve_handle", scope: !12786, file: !163, line: 335, baseType: !2395, size: 32, offset: 5728)
!12973 = !DIDerivedType(tag: DW_TAG_member, name: "tv3d", scope: !12713, file: !163, line: 365, baseType: !12785, size: 5760, offset: 13440)
!12974 = !DIDerivedType(tag: DW_TAG_member, name: "tfile", scope: !12713, file: !163, line: 366, baseType: !12785, size: 5760, offset: 19200)
!12975 = !DIDerivedType(tag: DW_TAG_member, name: "tipo", scope: !12713, file: !163, line: 367, baseType: !12785, size: 5760, offset: 24960)
!12976 = !DIDerivedType(tag: DW_TAG_member, name: "tinfo", scope: !12713, file: !163, line: 368, baseType: !12785, size: 5760, offset: 30720)
!12977 = !DIDerivedType(tag: DW_TAG_member, name: "tact", scope: !12713, file: !163, line: 369, baseType: !12785, size: 5760, offset: 36480)
!12978 = !DIDerivedType(tag: DW_TAG_member, name: "tnla", scope: !12713, file: !163, line: 370, baseType: !12785, size: 5760, offset: 42240)
!12979 = !DIDerivedType(tag: DW_TAG_member, name: "tseq", scope: !12713, file: !163, line: 371, baseType: !12785, size: 5760, offset: 48000)
!12980 = !DIDerivedType(tag: DW_TAG_member, name: "tima", scope: !12713, file: !163, line: 372, baseType: !12785, size: 5760, offset: 53760)
!12981 = !DIDerivedType(tag: DW_TAG_member, name: "text", scope: !12713, file: !163, line: 373, baseType: !12785, size: 5760, offset: 59520)
!12982 = !DIDerivedType(tag: DW_TAG_member, name: "toops", scope: !12713, file: !163, line: 374, baseType: !12785, size: 5760, offset: 65280)
!12983 = !DIDerivedType(tag: DW_TAG_member, name: "ttime", scope: !12713, file: !163, line: 375, baseType: !12785, size: 5760, offset: 71040)
!12984 = !DIDerivedType(tag: DW_TAG_member, name: "tnode", scope: !12713, file: !163, line: 376, baseType: !12785, size: 5760, offset: 76800)
!12985 = !DIDerivedType(tag: DW_TAG_member, name: "tlogic", scope: !12713, file: !163, line: 377, baseType: !12785, size: 5760, offset: 82560)
!12986 = !DIDerivedType(tag: DW_TAG_member, name: "tuserpref", scope: !12713, file: !163, line: 378, baseType: !12785, size: 5760, offset: 88320)
!12987 = !DIDerivedType(tag: DW_TAG_member, name: "tconsole", scope: !12713, file: !163, line: 379, baseType: !12785, size: 5760, offset: 94080)
!12988 = !DIDerivedType(tag: DW_TAG_member, name: "tclip", scope: !12713, file: !163, line: 380, baseType: !12785, size: 5760, offset: 99840)
!12989 = !DIDerivedType(tag: DW_TAG_member, name: "tarm", scope: !12713, file: !163, line: 383, baseType: !12990, size: 2560, offset: 105600)
!12990 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10787, size: 2560, elements: !3296)
!12991 = !DIDerivedType(tag: DW_TAG_member, name: "active_theme_area", scope: !12713, file: !163, line: 386, baseType: !98, size: 32, offset: 108160)
!12992 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !12713, file: !163, line: 386, baseType: !98, size: 32, offset: 108192)
!12993 = !DILocation(line: 976, column: 10, scope: !12705)
!12994 = !DILocalVariable(name: "keymap", scope: !12705, file: !3, line: 977, type: !12995)
!12995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12996, size: 64)
!12996 = !DIDerivedType(tag: DW_TAG_typedef, name: "wmKeyMap", file: !44, line: 297, baseType: !12997)
!12997 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmKeyMap", file: !44, line: 281, size: 1088, elements: !12998)
!12998 = !{!12999, !13001, !13002, !13003, !13004, !13005, !13006, !13007, !13008, !13009, !13013}
!12999 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !12997, file: !44, line: 282, baseType: !13000, size: 64)
!13000 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12997, size: 64)
!13001 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !12997, file: !44, line: 282, baseType: !13000, size: 64, offset: 64)
!13002 = !DIDerivedType(tag: DW_TAG_member, name: "items", scope: !12997, file: !44, line: 284, baseType: !388, size: 128, offset: 128)
!13003 = !DIDerivedType(tag: DW_TAG_member, name: "diff_items", scope: !12997, file: !44, line: 285, baseType: !388, size: 128, offset: 256)
!13004 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !12997, file: !44, line: 287, baseType: !692, size: 512, offset: 384)
!13005 = !DIDerivedType(tag: DW_TAG_member, name: "spaceid", scope: !12997, file: !44, line: 288, baseType: !399, size: 16, offset: 896)
!13006 = !DIDerivedType(tag: DW_TAG_member, name: "regionid", scope: !12997, file: !44, line: 289, baseType: !399, size: 16, offset: 912)
!13007 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !12997, file: !44, line: 291, baseType: !399, size: 16, offset: 928)
!13008 = !DIDerivedType(tag: DW_TAG_member, name: "kmi_id", scope: !12997, file: !44, line: 292, baseType: !399, size: 16, offset: 944)
!13009 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !12997, file: !44, line: 295, baseType: !13010, size: 64, offset: 960)
!13010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13011, size: 64)
!13011 = !DISubroutineType(types: !13012)
!13012 = !{!98, !1177}
!13013 = !DIDerivedType(tag: DW_TAG_member, name: "modal_items", scope: !12997, file: !44, line: 296, baseType: !372, size: 64, offset: 1024)
!13014 = !DILocation(line: 977, column: 12, scope: !12705)
!13015 = !DILocalVariable(name: "kmi", scope: !12705, file: !3, line: 978, type: !13016)
!13016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13017, size: 64)
!13017 = !DIDerivedType(tag: DW_TAG_typedef, name: "wmKeyMapItem", file: !44, line: 252, baseType: !13018)
!13018 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmKeyMapItem", file: !44, line: 227, size: 1472, elements: !13019)
!13019 = !{!13020, !13022, !13023, !13024, !13025, !13026, !13027, !13028, !13029, !13030, !13031, !13032, !13033, !13034, !13035, !13036, !13037, !13038}
!13020 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !13018, file: !44, line: 228, baseType: !13021, size: 64)
!13021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13018, size: 64)
!13022 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !13018, file: !44, line: 228, baseType: !13021, size: 64, offset: 64)
!13023 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !13018, file: !44, line: 231, baseType: !692, size: 512, offset: 128)
!13024 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !13018, file: !44, line: 232, baseType: !1094, size: 64, offset: 640)
!13025 = !DIDerivedType(tag: DW_TAG_member, name: "propvalue_str", scope: !13018, file: !44, line: 235, baseType: !692, size: 512, offset: 704)
!13026 = !DIDerivedType(tag: DW_TAG_member, name: "propvalue", scope: !13018, file: !44, line: 236, baseType: !399, size: 16, offset: 1216)
!13027 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !13018, file: !44, line: 239, baseType: !399, size: 16, offset: 1232)
!13028 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !13018, file: !44, line: 240, baseType: !399, size: 16, offset: 1248)
!13029 = !DIDerivedType(tag: DW_TAG_member, name: "shift", scope: !13018, file: !44, line: 241, baseType: !399, size: 16, offset: 1264)
!13030 = !DIDerivedType(tag: DW_TAG_member, name: "ctrl", scope: !13018, file: !44, line: 241, baseType: !399, size: 16, offset: 1280)
!13031 = !DIDerivedType(tag: DW_TAG_member, name: "alt", scope: !13018, file: !44, line: 241, baseType: !399, size: 16, offset: 1296)
!13032 = !DIDerivedType(tag: DW_TAG_member, name: "oskey", scope: !13018, file: !44, line: 241, baseType: !399, size: 16, offset: 1312)
!13033 = !DIDerivedType(tag: DW_TAG_member, name: "keymodifier", scope: !13018, file: !44, line: 242, baseType: !399, size: 16, offset: 1328)
!13034 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !13018, file: !44, line: 245, baseType: !399, size: 16, offset: 1344)
!13035 = !DIDerivedType(tag: DW_TAG_member, name: "maptype", scope: !13018, file: !44, line: 248, baseType: !399, size: 16, offset: 1360)
!13036 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !13018, file: !44, line: 249, baseType: !399, size: 16, offset: 1376)
!13037 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !13018, file: !44, line: 250, baseType: !399, size: 16, offset: 1392)
!13038 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !13018, file: !44, line: 251, baseType: !1181, size: 64, offset: 1408)
!13039 = !DILocation(line: 978, column: 16, scope: !12705)
!13040 = !DILocalVariable(name: "kmdi", scope: !12705, file: !3, line: 979, type: !13041)
!13041 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13042, size: 64)
!13042 = !DIDerivedType(tag: DW_TAG_typedef, name: "wmKeyMapDiffItem", file: !44, line: 260, baseType: !13043)
!13043 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmKeyMapDiffItem", file: !44, line: 255, size: 256, elements: !13044)
!13044 = !{!13045, !13047, !13048, !13049}
!13045 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !13043, file: !44, line: 256, baseType: !13046, size: 64)
!13046 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13043, size: 64)
!13047 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !13043, file: !44, line: 256, baseType: !13046, size: 64, offset: 64)
!13048 = !DIDerivedType(tag: DW_TAG_member, name: "remove_item", scope: !13043, file: !44, line: 258, baseType: !13016, size: 64, offset: 128)
!13049 = !DIDerivedType(tag: DW_TAG_member, name: "add_item", scope: !13043, file: !44, line: 259, baseType: !13016, size: 64, offset: 192)
!13050 = !DILocation(line: 979, column: 20, scope: !12705)
!13051 = !DILocalVariable(name: "bext", scope: !12705, file: !3, line: 980, type: !13052)
!13052 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13053, size: 64)
!13053 = !DIDerivedType(tag: DW_TAG_typedef, name: "bAddon", file: !163, line: 397, baseType: !13054)
!13054 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bAddon", file: !163, line: 393, size: 704, elements: !13055)
!13055 = !{!13056, !13058, !13059, !13060}
!13056 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !13054, file: !163, line: 394, baseType: !13057, size: 64)
!13057 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13054, size: 64)
!13058 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !13054, file: !163, line: 394, baseType: !13057, size: 64, offset: 64)
!13059 = !DIDerivedType(tag: DW_TAG_member, name: "module", scope: !13054, file: !163, line: 395, baseType: !692, size: 512, offset: 128)
!13060 = !DIDerivedType(tag: DW_TAG_member, name: "prop", scope: !13054, file: !163, line: 396, baseType: !1094, size: 64, offset: 640)
!13061 = !DILocation(line: 980, column: 10, scope: !12705)
!13062 = !DILocalVariable(name: "path_cmp", scope: !12705, file: !3, line: 981, type: !13063)
!13063 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13064, size: 64)
!13064 = !DIDerivedType(tag: DW_TAG_typedef, name: "bPathCompare", file: !163, line: 403, baseType: !13065)
!13065 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bPathCompare", file: !163, line: 399, size: 6336, elements: !13066)
!13066 = !{!13067, !13069, !13070, !13071, !13072}
!13067 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !13065, file: !163, line: 400, baseType: !13068, size: 64)
!13068 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13065, size: 64)
!13069 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !13065, file: !163, line: 400, baseType: !13068, size: 64, offset: 64)
!13070 = !DIDerivedType(tag: DW_TAG_member, name: "path", scope: !13065, file: !163, line: 401, baseType: !649, size: 6144, offset: 128)
!13071 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !13065, file: !163, line: 402, baseType: !375, size: 8, offset: 6272)
!13072 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !13065, file: !163, line: 402, baseType: !1730, size: 56, offset: 6280)
!13073 = !DILocation(line: 981, column: 16, scope: !12705)
!13074 = !DILocalVariable(name: "style", scope: !12705, file: !3, line: 982, type: !13075)
!13075 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13076, size: 64)
!13076 = !DIDerivedType(tag: DW_TAG_typedef, name: "uiStyle", file: !163, line: 120, baseType: !13077)
!13077 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uiStyle", file: !163, line: 96, size: 1856, elements: !13078)
!13078 = !{!13079, !13081, !13082, !13083, !13099, !13100, !13101, !13102, !13103, !13104, !13105, !13106, !13107, !13108, !13109, !13110, !13111, !13112}
!13079 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !13077, file: !163, line: 97, baseType: !13080, size: 64)
!13080 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13077, size: 64)
!13081 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !13077, file: !163, line: 97, baseType: !13080, size: 64, offset: 64)
!13082 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !13077, file: !163, line: 99, baseType: !692, size: 512, offset: 128)
!13083 = !DIDerivedType(tag: DW_TAG_member, name: "paneltitle", scope: !13077, file: !163, line: 101, baseType: !13084, size: 256, offset: 640)
!13084 = !DIDerivedType(tag: DW_TAG_typedef, name: "uiFontStyle", file: !163, line: 84, baseType: !13085)
!13085 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uiFontStyle", file: !163, line: 73, size: 256, elements: !13086)
!13086 = !{!13087, !13088, !13089, !13090, !13091, !13092, !13093, !13094, !13095, !13096, !13097, !13098}
!13087 = !DIDerivedType(tag: DW_TAG_member, name: "uifont_id", scope: !13085, file: !163, line: 74, baseType: !399, size: 16)
!13088 = !DIDerivedType(tag: DW_TAG_member, name: "points", scope: !13085, file: !163, line: 75, baseType: !399, size: 16, offset: 16)
!13089 = !DIDerivedType(tag: DW_TAG_member, name: "kerning", scope: !13085, file: !163, line: 76, baseType: !399, size: 16, offset: 32)
!13090 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !13085, file: !163, line: 77, baseType: !2682, size: 48, offset: 48)
!13091 = !DIDerivedType(tag: DW_TAG_member, name: "italic", scope: !13085, file: !163, line: 78, baseType: !399, size: 16, offset: 96)
!13092 = !DIDerivedType(tag: DW_TAG_member, name: "bold", scope: !13085, file: !163, line: 78, baseType: !399, size: 16, offset: 112)
!13093 = !DIDerivedType(tag: DW_TAG_member, name: "shadow", scope: !13085, file: !163, line: 79, baseType: !399, size: 16, offset: 128)
!13094 = !DIDerivedType(tag: DW_TAG_member, name: "shadx", scope: !13085, file: !163, line: 80, baseType: !399, size: 16, offset: 144)
!13095 = !DIDerivedType(tag: DW_TAG_member, name: "shady", scope: !13085, file: !163, line: 80, baseType: !399, size: 16, offset: 160)
!13096 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !13085, file: !163, line: 81, baseType: !399, size: 16, offset: 176)
!13097 = !DIDerivedType(tag: DW_TAG_member, name: "shadowalpha", scope: !13085, file: !163, line: 82, baseType: !396, size: 32, offset: 192)
!13098 = !DIDerivedType(tag: DW_TAG_member, name: "shadowcolor", scope: !13085, file: !163, line: 83, baseType: !396, size: 32, offset: 224)
!13099 = !DIDerivedType(tag: DW_TAG_member, name: "grouplabel", scope: !13077, file: !163, line: 102, baseType: !13084, size: 256, offset: 896)
!13100 = !DIDerivedType(tag: DW_TAG_member, name: "widgetlabel", scope: !13077, file: !163, line: 103, baseType: !13084, size: 256, offset: 1152)
!13101 = !DIDerivedType(tag: DW_TAG_member, name: "widget", scope: !13077, file: !163, line: 104, baseType: !13084, size: 256, offset: 1408)
!13102 = !DIDerivedType(tag: DW_TAG_member, name: "panelzoom", scope: !13077, file: !163, line: 106, baseType: !396, size: 32, offset: 1664)
!13103 = !DIDerivedType(tag: DW_TAG_member, name: "minlabelchars", scope: !13077, file: !163, line: 108, baseType: !399, size: 16, offset: 1696)
!13104 = !DIDerivedType(tag: DW_TAG_member, name: "minwidgetchars", scope: !13077, file: !163, line: 109, baseType: !399, size: 16, offset: 1712)
!13105 = !DIDerivedType(tag: DW_TAG_member, name: "columnspace", scope: !13077, file: !163, line: 111, baseType: !399, size: 16, offset: 1728)
!13106 = !DIDerivedType(tag: DW_TAG_member, name: "templatespace", scope: !13077, file: !163, line: 112, baseType: !399, size: 16, offset: 1744)
!13107 = !DIDerivedType(tag: DW_TAG_member, name: "boxspace", scope: !13077, file: !163, line: 113, baseType: !399, size: 16, offset: 1760)
!13108 = !DIDerivedType(tag: DW_TAG_member, name: "buttonspacex", scope: !13077, file: !163, line: 114, baseType: !399, size: 16, offset: 1776)
!13109 = !DIDerivedType(tag: DW_TAG_member, name: "buttonspacey", scope: !13077, file: !163, line: 115, baseType: !399, size: 16, offset: 1792)
!13110 = !DIDerivedType(tag: DW_TAG_member, name: "panelspace", scope: !13077, file: !163, line: 116, baseType: !399, size: 16, offset: 1808)
!13111 = !DIDerivedType(tag: DW_TAG_member, name: "panelouter", scope: !13077, file: !163, line: 117, baseType: !399, size: 16, offset: 1824)
!13112 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !13077, file: !163, line: 119, baseType: !399, size: 16, offset: 1840)
!13113 = !DILocation(line: 982, column: 11, scope: !12705)
!13114 = !DILocation(line: 984, column: 14, scope: !12705)
!13115 = !DILocation(line: 984, column: 2, scope: !12705)
!13116 = !DILocation(line: 986, column: 24, scope: !13117)
!13117 = distinct !DILexicalBlock(scope: !12705, file: !3, line: 986, column: 2)
!13118 = !DILocation(line: 986, column: 15, scope: !13117)
!13119 = !DILocation(line: 986, column: 13, scope: !13117)
!13120 = !DILocation(line: 986, column: 7, scope: !13117)
!13121 = !DILocation(line: 986, column: 31, scope: !13122)
!13122 = distinct !DILexicalBlock(scope: !13117, file: !3, line: 986, column: 2)
!13123 = !DILocation(line: 986, column: 2, scope: !13117)
!13124 = !DILocation(line: 987, column: 15, scope: !13122)
!13125 = !DILocation(line: 987, column: 38, scope: !13122)
!13126 = !DILocation(line: 987, column: 3, scope: !13122)
!13127 = !DILocation(line: 986, column: 46, scope: !13122)
!13128 = !DILocation(line: 986, column: 54, scope: !13122)
!13129 = !DILocation(line: 986, column: 45, scope: !13122)
!13130 = !DILocation(line: 986, column: 2, scope: !13122)
!13131 = distinct !{!13131, !13123, !13132}
!13132 = !DILocation(line: 987, column: 44, scope: !13117)
!13133 = !DILocation(line: 989, column: 30, scope: !13134)
!13134 = distinct !DILexicalBlock(scope: !12705, file: !3, line: 989, column: 2)
!13135 = !DILocation(line: 989, column: 15, scope: !13134)
!13136 = !DILocation(line: 989, column: 13, scope: !13134)
!13137 = !DILocation(line: 989, column: 7, scope: !13134)
!13138 = !DILocation(line: 989, column: 37, scope: !13139)
!13139 = distinct !DILexicalBlock(scope: !13134, file: !3, line: 989, column: 2)
!13140 = !DILocation(line: 989, column: 2, scope: !13134)
!13141 = !DILocation(line: 990, column: 15, scope: !13142)
!13142 = distinct !DILexicalBlock(scope: !13139, file: !3, line: 989, column: 66)
!13143 = !DILocation(line: 990, column: 40, scope: !13142)
!13144 = !DILocation(line: 990, column: 3, scope: !13142)
!13145 = !DILocation(line: 992, column: 13, scope: !13146)
!13146 = distinct !DILexicalBlock(scope: !13142, file: !3, line: 992, column: 3)
!13147 = !DILocation(line: 992, column: 21, scope: !13146)
!13148 = !DILocation(line: 992, column: 32, scope: !13146)
!13149 = !DILocation(line: 992, column: 12, scope: !13146)
!13150 = !DILocation(line: 992, column: 8, scope: !13146)
!13151 = !DILocation(line: 992, column: 39, scope: !13152)
!13152 = distinct !DILexicalBlock(scope: !13146, file: !3, line: 992, column: 3)
!13153 = !DILocation(line: 992, column: 3, scope: !13146)
!13154 = !DILocation(line: 993, column: 16, scope: !13155)
!13155 = distinct !DILexicalBlock(scope: !13152, file: !3, line: 992, column: 62)
!13156 = !DILocation(line: 993, column: 49, scope: !13155)
!13157 = !DILocation(line: 993, column: 4, scope: !13155)
!13158 = !DILocation(line: 994, column: 8, scope: !13159)
!13159 = distinct !DILexicalBlock(scope: !13155, file: !3, line: 994, column: 8)
!13160 = !DILocation(line: 994, column: 14, scope: !13159)
!13161 = !DILocation(line: 994, column: 8, scope: !13155)
!13162 = !DILocation(line: 995, column: 22, scope: !13159)
!13163 = !DILocation(line: 995, column: 26, scope: !13159)
!13164 = !DILocation(line: 995, column: 32, scope: !13159)
!13165 = !DILocation(line: 995, column: 5, scope: !13159)
!13166 = !DILocation(line: 996, column: 8, scope: !13167)
!13167 = distinct !DILexicalBlock(scope: !13155, file: !3, line: 996, column: 8)
!13168 = !DILocation(line: 996, column: 14, scope: !13167)
!13169 = !DILocation(line: 996, column: 8, scope: !13155)
!13170 = !DILocation(line: 997, column: 22, scope: !13167)
!13171 = !DILocation(line: 997, column: 26, scope: !13167)
!13172 = !DILocation(line: 997, column: 32, scope: !13167)
!13173 = !DILocation(line: 997, column: 5, scope: !13167)
!13174 = !DILocation(line: 998, column: 3, scope: !13155)
!13175 = !DILocation(line: 992, column: 50, scope: !13152)
!13176 = !DILocation(line: 992, column: 56, scope: !13152)
!13177 = !DILocation(line: 992, column: 49, scope: !13152)
!13178 = !DILocation(line: 992, column: 3, scope: !13152)
!13179 = distinct !{!13179, !13153, !13180}
!13180 = !DILocation(line: 998, column: 3, scope: !13146)
!13181 = !DILocation(line: 1000, column: 12, scope: !13182)
!13182 = distinct !DILexicalBlock(scope: !13142, file: !3, line: 1000, column: 3)
!13183 = !DILocation(line: 1000, column: 20, scope: !13182)
!13184 = !DILocation(line: 1000, column: 26, scope: !13182)
!13185 = !DILocation(line: 1000, column: 11, scope: !13182)
!13186 = !DILocation(line: 1000, column: 8, scope: !13182)
!13187 = !DILocation(line: 1000, column: 33, scope: !13188)
!13188 = distinct !DILexicalBlock(scope: !13182, file: !3, line: 1000, column: 3)
!13189 = !DILocation(line: 1000, column: 3, scope: !13182)
!13190 = !DILocation(line: 1001, column: 21, scope: !13188)
!13191 = !DILocation(line: 1001, column: 25, scope: !13188)
!13192 = !DILocation(line: 1001, column: 4, scope: !13188)
!13193 = !DILocation(line: 1000, column: 42, scope: !13188)
!13194 = !DILocation(line: 1000, column: 47, scope: !13188)
!13195 = !DILocation(line: 1000, column: 41, scope: !13188)
!13196 = !DILocation(line: 1000, column: 3, scope: !13188)
!13197 = distinct !{!13197, !13189, !13198}
!13198 = !DILocation(line: 1001, column: 28, scope: !13182)
!13199 = !DILocation(line: 1002, column: 2, scope: !13142)
!13200 = !DILocation(line: 989, column: 52, scope: !13139)
!13201 = !DILocation(line: 989, column: 60, scope: !13139)
!13202 = !DILocation(line: 989, column: 51, scope: !13139)
!13203 = !DILocation(line: 989, column: 2, scope: !13139)
!13204 = distinct !{!13204, !13140, !13205}
!13205 = !DILocation(line: 1002, column: 2, scope: !13134)
!13206 = !DILocation(line: 1004, column: 22, scope: !13207)
!13207 = distinct !DILexicalBlock(scope: !12705, file: !3, line: 1004, column: 2)
!13208 = !DILocation(line: 1004, column: 13, scope: !13207)
!13209 = !DILocation(line: 1004, column: 11, scope: !13207)
!13210 = !DILocation(line: 1004, column: 7, scope: !13207)
!13211 = !DILocation(line: 1004, column: 29, scope: !13212)
!13212 = distinct !DILexicalBlock(scope: !13207, file: !3, line: 1004, column: 2)
!13213 = !DILocation(line: 1004, column: 2, scope: !13207)
!13214 = !DILocation(line: 1005, column: 15, scope: !13215)
!13215 = distinct !DILexicalBlock(scope: !13212, file: !3, line: 1004, column: 52)
!13216 = !DILocation(line: 1005, column: 38, scope: !13215)
!13217 = !DILocation(line: 1005, column: 3, scope: !13215)
!13218 = !DILocation(line: 1006, column: 7, scope: !13219)
!13219 = distinct !DILexicalBlock(scope: !13215, file: !3, line: 1006, column: 7)
!13220 = !DILocation(line: 1006, column: 13, scope: !13219)
!13221 = !DILocation(line: 1006, column: 7, scope: !13215)
!13222 = !DILocation(line: 1007, column: 22, scope: !13223)
!13223 = distinct !DILexicalBlock(scope: !13219, file: !3, line: 1006, column: 19)
!13224 = !DILocation(line: 1007, column: 28, scope: !13223)
!13225 = !DILocation(line: 1007, column: 34, scope: !13223)
!13226 = !DILocation(line: 1007, column: 4, scope: !13223)
!13227 = !DILocation(line: 1008, column: 3, scope: !13223)
!13228 = !DILocation(line: 1009, column: 2, scope: !13215)
!13229 = !DILocation(line: 1004, column: 40, scope: !13212)
!13230 = !DILocation(line: 1004, column: 46, scope: !13212)
!13231 = !DILocation(line: 1004, column: 39, scope: !13212)
!13232 = !DILocation(line: 1004, column: 2, scope: !13212)
!13233 = distinct !{!13233, !13213, !13234}
!13234 = !DILocation(line: 1009, column: 2, scope: !13207)
!13235 = !DILocation(line: 1011, column: 35, scope: !13236)
!13236 = distinct !DILexicalBlock(scope: !12705, file: !3, line: 1011, column: 2)
!13237 = !DILocation(line: 1011, column: 18, scope: !13236)
!13238 = !DILocation(line: 1011, column: 16, scope: !13236)
!13239 = !DILocation(line: 1011, column: 7, scope: !13236)
!13240 = !DILocation(line: 1011, column: 42, scope: !13241)
!13241 = distinct !DILexicalBlock(scope: !13236, file: !3, line: 1011, column: 2)
!13242 = !DILocation(line: 1011, column: 2, scope: !13236)
!13243 = !DILocation(line: 1012, column: 15, scope: !13244)
!13244 = distinct !DILexicalBlock(scope: !13241, file: !3, line: 1011, column: 79)
!13245 = !DILocation(line: 1012, column: 44, scope: !13244)
!13246 = !DILocation(line: 1012, column: 3, scope: !13244)
!13247 = !DILocation(line: 1013, column: 2, scope: !13244)
!13248 = !DILocation(line: 1011, column: 63, scope: !13241)
!13249 = !DILocation(line: 1011, column: 73, scope: !13241)
!13250 = !DILocation(line: 1011, column: 61, scope: !13241)
!13251 = !DILocation(line: 1011, column: 2, scope: !13241)
!13252 = distinct !{!13252, !13242, !13253}
!13253 = !DILocation(line: 1013, column: 2, scope: !13236)
!13254 = !DILocation(line: 1015, column: 25, scope: !13255)
!13255 = distinct !DILexicalBlock(scope: !12705, file: !3, line: 1015, column: 2)
!13256 = !DILocation(line: 1015, column: 14, scope: !13255)
!13257 = !DILocation(line: 1015, column: 12, scope: !13255)
!13258 = !DILocation(line: 1015, column: 7, scope: !13255)
!13259 = !DILocation(line: 1015, column: 32, scope: !13260)
!13260 = distinct !DILexicalBlock(scope: !13255, file: !3, line: 1015, column: 2)
!13261 = !DILocation(line: 1015, column: 2, scope: !13255)
!13262 = !DILocation(line: 1016, column: 15, scope: !13263)
!13263 = distinct !DILexicalBlock(scope: !13260, file: !3, line: 1015, column: 59)
!13264 = !DILocation(line: 1016, column: 39, scope: !13263)
!13265 = !DILocation(line: 1016, column: 3, scope: !13263)
!13266 = !DILocation(line: 1017, column: 2, scope: !13263)
!13267 = !DILocation(line: 1015, column: 46, scope: !13260)
!13268 = !DILocation(line: 1015, column: 53, scope: !13260)
!13269 = !DILocation(line: 1015, column: 44, scope: !13260)
!13270 = !DILocation(line: 1015, column: 2, scope: !13260)
!13271 = distinct !{!13271, !13261, !13272}
!13272 = !DILocation(line: 1017, column: 2, scope: !13255)
!13273 = !DILocation(line: 1018, column: 1, scope: !12705)
!13274 = distinct !DISubprogram(name: "customnodes_free_deprecated_data", scope: !3, file: !3, line: 3022, type: !6840, scopeLine: 3023, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !5641)
!13275 = !DILocalVariable(name: "mainvar", arg: 1, scope: !13274, file: !3, line: 3022, type: !5879)
!13276 = !DILocation(line: 3022, column: 52, scope: !13274)
!13277 = !DILocalVariable(name: "_nstore", scope: !13278, file: !3, line: 3024, type: !6846)
!13278 = distinct !DILexicalBlock(scope: !13274, file: !3, line: 3024, column: 2)
!13279 = !DILocation(line: 3024, column: 2, scope: !13278)
!13280 = !DILocalVariable(name: "ntree", scope: !13278, file: !3, line: 3024, type: !5196)
!13281 = !DILocalVariable(name: "id", scope: !13278, file: !3, line: 3024, type: !441)
!13282 = !DILocation(line: 3024, column: 2, scope: !13283)
!13283 = distinct !DILexicalBlock(scope: !13284, file: !3, line: 3024, column: 2)
!13284 = distinct !DILexicalBlock(scope: !13278, file: !3, line: 3024, column: 2)
!13285 = !DILocation(line: 3024, column: 2, scope: !13284)
!13286 = !DILocalVariable(name: "link", scope: !13287, file: !3, line: 3025, type: !7002)
!13287 = distinct !DILexicalBlock(scope: !13288, file: !3, line: 3024, column: 39)
!13288 = distinct !DILexicalBlock(scope: !13283, file: !3, line: 3024, column: 2)
!13289 = !DILocation(line: 3025, column: 14, scope: !13287)
!13290 = !DILocalVariable(name: "next_link", scope: !13287, file: !3, line: 3025, type: !7002)
!13291 = !DILocation(line: 3025, column: 21, scope: !13287)
!13292 = !DILocation(line: 3027, column: 15, scope: !13293)
!13293 = distinct !DILexicalBlock(scope: !13287, file: !3, line: 3027, column: 3)
!13294 = !DILocation(line: 3027, column: 22, scope: !13293)
!13295 = !DILocation(line: 3027, column: 28, scope: !13293)
!13296 = !DILocation(line: 3027, column: 13, scope: !13293)
!13297 = !DILocation(line: 3027, column: 8, scope: !13293)
!13298 = !DILocation(line: 3027, column: 35, scope: !13299)
!13299 = distinct !DILexicalBlock(scope: !13293, file: !3, line: 3027, column: 3)
!13300 = !DILocation(line: 3027, column: 3, scope: !13293)
!13301 = !DILocation(line: 3028, column: 16, scope: !13302)
!13302 = distinct !DILexicalBlock(scope: !13299, file: !3, line: 3027, column: 59)
!13303 = !DILocation(line: 3028, column: 22, scope: !13302)
!13304 = !DILocation(line: 3028, column: 14, scope: !13302)
!13305 = !DILocation(line: 3029, column: 8, scope: !13306)
!13306 = distinct !DILexicalBlock(scope: !13302, file: !3, line: 3029, column: 8)
!13307 = !DILocation(line: 3029, column: 14, scope: !13306)
!13308 = !DILocation(line: 3029, column: 23, scope: !13306)
!13309 = !DILocation(line: 3029, column: 31, scope: !13306)
!13310 = !DILocation(line: 3029, column: 34, scope: !13306)
!13311 = !DILocation(line: 3029, column: 40, scope: !13306)
!13312 = !DILocation(line: 3029, column: 47, scope: !13306)
!13313 = !DILocation(line: 3029, column: 8, scope: !13302)
!13314 = !DILocation(line: 3030, column: 17, scope: !13306)
!13315 = !DILocation(line: 3030, column: 24, scope: !13306)
!13316 = !DILocation(line: 3030, column: 5, scope: !13306)
!13317 = !DILocation(line: 3031, column: 3, scope: !13302)
!13318 = !DILocation(line: 3027, column: 48, scope: !13299)
!13319 = !DILocation(line: 3027, column: 46, scope: !13299)
!13320 = !DILocation(line: 3027, column: 3, scope: !13299)
!13321 = distinct !{!13321, !13300, !13322}
!13322 = !DILocation(line: 3031, column: 3, scope: !13293)
!13323 = !DILocation(line: 3033, column: 2, scope: !13288)
!13324 = distinct !{!13324, !13279, !13325}
!13325 = !DILocation(line: 3033, column: 2, scope: !13278)
!13326 = !DILocation(line: 3034, column: 1, scope: !13274)
!13327 = distinct !DISubprogram(name: "endwrite", scope: !3, file: !3, line: 446, type: !13328, scopeLine: 447, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !5641)
!13328 = !DISubroutineType(types: !13329)
!13329 = !{!98, !5820}
!13330 = !DILocalVariable(name: "wd", arg: 1, scope: !13327, file: !3, line: 446, type: !5820)
!13331 = !DILocation(line: 446, column: 32, scope: !13327)
!13332 = !DILocalVariable(name: "err", scope: !13327, file: !3, line: 448, type: !98)
!13333 = !DILocation(line: 448, column: 6, scope: !13327)
!13334 = !DILocation(line: 450, column: 6, scope: !13335)
!13335 = distinct !DILexicalBlock(scope: !13327, file: !3, line: 450, column: 6)
!13336 = !DILocation(line: 450, column: 10, scope: !13335)
!13337 = !DILocation(line: 450, column: 6, scope: !13327)
!13338 = !DILocation(line: 451, column: 22, scope: !13339)
!13339 = distinct !DILexicalBlock(scope: !13335, file: !3, line: 450, column: 17)
!13340 = !DILocation(line: 451, column: 26, scope: !13339)
!13341 = !DILocation(line: 451, column: 30, scope: !13339)
!13342 = !DILocation(line: 451, column: 35, scope: !13339)
!13343 = !DILocation(line: 451, column: 39, scope: !13339)
!13344 = !DILocation(line: 451, column: 3, scope: !13339)
!13345 = !DILocation(line: 452, column: 3, scope: !13339)
!13346 = !DILocation(line: 452, column: 7, scope: !13339)
!13347 = !DILocation(line: 452, column: 12, scope: !13339)
!13348 = !DILocation(line: 453, column: 2, scope: !13339)
!13349 = !DILocation(line: 455, column: 7, scope: !13327)
!13350 = !DILocation(line: 455, column: 11, scope: !13327)
!13351 = !DILocation(line: 455, column: 5, scope: !13327)
!13352 = !DILocation(line: 456, column: 17, scope: !13327)
!13353 = !DILocation(line: 456, column: 2, scope: !13327)
!13354 = !DILocation(line: 458, column: 9, scope: !13327)
!13355 = !DILocation(line: 458, column: 2, scope: !13327)
!13356 = distinct !DISubprogram(name: "writedata_new", scope: !3, file: !3, line: 313, type: !13357, scopeLine: 314, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !5641)
!13357 = !DISubroutineType(types: !13358)
!13358 = !{!5820, !5836}
!13359 = !DILocalVariable(name: "ww", arg: 1, scope: !13356, file: !3, line: 313, type: !5836)
!13360 = !DILocation(line: 313, column: 44, scope: !13356)
!13361 = !DILocalVariable(name: "wd", scope: !13356, file: !3, line: 315, type: !5820)
!13362 = !DILocation(line: 315, column: 13, scope: !13356)
!13363 = !DILocation(line: 315, column: 17, scope: !13356)
!13364 = !DILocation(line: 321, column: 6, scope: !13365)
!13365 = distinct !DILexicalBlock(scope: !13356, file: !3, line: 321, column: 6)
!13366 = !DILocation(line: 321, column: 9, scope: !13365)
!13367 = !DILocation(line: 321, column: 6, scope: !13356)
!13368 = !DILocation(line: 321, column: 18, scope: !13365)
!13369 = !DILocalVariable(name: "do_endian_swap", scope: !13356, file: !3, line: 326, type: !4241)
!13370 = !DILocation(line: 326, column: 20, scope: !13356)
!13371 = !DILocation(line: 330, column: 40, scope: !13356)
!13372 = !DILocation(line: 330, column: 13, scope: !13356)
!13373 = !DILocation(line: 330, column: 2, scope: !13356)
!13374 = !DILocation(line: 330, column: 6, scope: !13356)
!13375 = !DILocation(line: 330, column: 11, scope: !13356)
!13376 = !DILocation(line: 333, column: 11, scope: !13356)
!13377 = !DILocation(line: 333, column: 2, scope: !13356)
!13378 = !DILocation(line: 333, column: 6, scope: !13356)
!13379 = !DILocation(line: 333, column: 9, scope: !13356)
!13380 = !DILocation(line: 335, column: 11, scope: !13356)
!13381 = !DILocation(line: 335, column: 2, scope: !13356)
!13382 = !DILocation(line: 335, column: 6, scope: !13356)
!13383 = !DILocation(line: 335, column: 9, scope: !13356)
!13384 = !DILocation(line: 337, column: 9, scope: !13356)
!13385 = !DILocation(line: 337, column: 2, scope: !13356)
!13386 = !DILocation(line: 338, column: 1, scope: !13356)
!13387 = distinct !DISubprogram(name: "current_screen_compat", scope: !3, file: !3, line: 923, type: !13388, scopeLine: 924, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !5641)
!13388 = !DISubroutineType(types: !13389)
!13389 = !{null, !5879, !13390}
!13390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7135, size: 64)
!13391 = !DILocalVariable(name: "mainvar", arg: 1, scope: !13387, file: !3, line: 923, type: !5879)
!13392 = !DILocation(line: 923, column: 41, scope: !13387)
!13393 = !DILocalVariable(name: "screen", arg: 2, scope: !13387, file: !3, line: 923, type: !13390)
!13394 = !DILocation(line: 923, column: 60, scope: !13387)
!13395 = !DILocalVariable(name: "wm", scope: !13387, file: !3, line: 925, type: !7331)
!13396 = !DILocation(line: 925, column: 19, scope: !13387)
!13397 = !DILocalVariable(name: "window", scope: !13387, file: !3, line: 926, type: !7409)
!13398 = !DILocation(line: 926, column: 12, scope: !13387)
!13399 = !DILocation(line: 930, column: 7, scope: !13387)
!13400 = !DILocation(line: 930, column: 16, scope: !13387)
!13401 = !DILocation(line: 930, column: 19, scope: !13387)
!13402 = !DILocation(line: 930, column: 5, scope: !13387)
!13403 = !DILocation(line: 931, column: 12, scope: !13387)
!13404 = !DILocation(line: 931, column: 11, scope: !13387)
!13405 = !DILocation(line: 931, column: 18, scope: !13387)
!13406 = !DILocation(line: 931, column: 22, scope: !13387)
!13407 = !DILocation(line: 931, column: 30, scope: !13387)
!13408 = !DILocation(line: 931, column: 9, scope: !13387)
!13409 = !DILocation(line: 932, column: 13, scope: !13387)
!13410 = !DILocation(line: 932, column: 12, scope: !13387)
!13411 = !DILocation(line: 932, column: 23, scope: !13387)
!13412 = !DILocation(line: 932, column: 31, scope: !13387)
!13413 = !DILocation(line: 932, column: 3, scope: !13387)
!13414 = !DILocation(line: 932, column: 10, scope: !13387)
!13415 = !DILocation(line: 933, column: 1, scope: !13387)
!13416 = distinct !DISubprogram(name: "write_region", scope: !3, file: !3, line: 2511, type: !13417, scopeLine: 2512, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !5641)
!13417 = !DISubroutineType(types: !13418)
!13418 = !{null, !5820, !7682, !98}
!13419 = !DILocalVariable(name: "wd", arg: 1, scope: !13416, file: !3, line: 2511, type: !5820)
!13420 = !DILocation(line: 2511, column: 37, scope: !13416)
!13421 = !DILocalVariable(name: "ar", arg: 2, scope: !13416, file: !3, line: 2511, type: !7682)
!13422 = !DILocation(line: 2511, column: 50, scope: !13416)
!13423 = !DILocalVariable(name: "spacetype", arg: 3, scope: !13416, file: !3, line: 2511, type: !98)
!13424 = !DILocation(line: 2511, column: 58, scope: !13416)
!13425 = !DILocation(line: 2513, column: 14, scope: !13416)
!13426 = !DILocation(line: 2513, column: 38, scope: !13416)
!13427 = !DILocation(line: 2513, column: 2, scope: !13416)
!13428 = !DILocation(line: 2515, column: 6, scope: !13429)
!13429 = distinct !DILexicalBlock(scope: !13416, file: !3, line: 2515, column: 6)
!13430 = !DILocation(line: 2515, column: 10, scope: !13429)
!13431 = !DILocation(line: 2515, column: 6, scope: !13416)
!13432 = !DILocation(line: 2516, column: 11, scope: !13433)
!13433 = distinct !DILexicalBlock(scope: !13429, file: !3, line: 2515, column: 22)
!13434 = !DILocation(line: 2516, column: 3, scope: !13433)
!13435 = !DILocation(line: 2518, column: 9, scope: !13436)
!13436 = distinct !DILexicalBlock(scope: !13437, file: !3, line: 2518, column: 9)
!13437 = distinct !DILexicalBlock(scope: !13433, file: !3, line: 2516, column: 22)
!13438 = !DILocation(line: 2518, column: 13, scope: !13436)
!13439 = !DILocation(line: 2518, column: 23, scope: !13436)
!13440 = !DILocation(line: 2518, column: 9, scope: !13437)
!13441 = !DILocalVariable(name: "rv3d", scope: !13442, file: !3, line: 2519, type: !13443)
!13442 = distinct !DILexicalBlock(scope: !13436, file: !3, line: 2518, column: 42)
!13443 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13444, size: 64)
!13444 = !DIDerivedType(tag: DW_TAG_typedef, name: "RegionView3D", file: !378, line: 148, baseType: !13445)
!13445 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RegionView3D", file: !378, line: 85, size: 7040, elements: !13446)
!13446 = !{!13447, !13448, !13449, !13450, !13451, !13452, !13453, !13454, !13457, !13458, !13459, !13461, !13464, !13467, !13468, !13471, !13472, !13473, !13474, !13475, !13476, !13477, !13478, !13479, !13480, !13481, !13482, !13483, !13484, !13485, !13486, !13487, !13488, !13489, !13490, !13491, !13492, !13493, !13494, !13495}
!13447 = !DIDerivedType(tag: DW_TAG_member, name: "winmat", scope: !13445, file: !378, line: 87, baseType: !1752, size: 512)
!13448 = !DIDerivedType(tag: DW_TAG_member, name: "viewmat", scope: !13445, file: !378, line: 88, baseType: !1752, size: 512, offset: 512)
!13449 = !DIDerivedType(tag: DW_TAG_member, name: "viewinv", scope: !13445, file: !378, line: 89, baseType: !1752, size: 512, offset: 1024)
!13450 = !DIDerivedType(tag: DW_TAG_member, name: "persmat", scope: !13445, file: !378, line: 90, baseType: !1752, size: 512, offset: 1536)
!13451 = !DIDerivedType(tag: DW_TAG_member, name: "persinv", scope: !13445, file: !378, line: 91, baseType: !1752, size: 512, offset: 2048)
!13452 = !DIDerivedType(tag: DW_TAG_member, name: "viewmatob", scope: !13445, file: !378, line: 94, baseType: !1752, size: 512, offset: 2560)
!13453 = !DIDerivedType(tag: DW_TAG_member, name: "persmatob", scope: !13445, file: !378, line: 95, baseType: !1752, size: 512, offset: 3072)
!13454 = !DIDerivedType(tag: DW_TAG_member, name: "clip", scope: !13445, file: !378, line: 99, baseType: !13455, size: 768, offset: 3584)
!13455 = !DICompositeType(tag: DW_TAG_array_type, baseType: !396, size: 768, elements: !13456)
!13456 = !{!1750, !410}
!13457 = !DIDerivedType(tag: DW_TAG_member, name: "clip_local", scope: !13445, file: !378, line: 100, baseType: !13455, size: 768, offset: 4352)
!13458 = !DIDerivedType(tag: DW_TAG_member, name: "clipbb", scope: !13445, file: !378, line: 101, baseType: !4427, size: 64, offset: 5120)
!13459 = !DIDerivedType(tag: DW_TAG_member, name: "localvd", scope: !13445, file: !378, line: 103, baseType: !13460, size: 64, offset: 5184)
!13460 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13445, size: 64)
!13461 = !DIDerivedType(tag: DW_TAG_member, name: "render_engine", scope: !13445, file: !378, line: 104, baseType: !13462, size: 64, offset: 5248)
!13462 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13463, size: 64)
!13463 = !DICompositeType(tag: DW_TAG_structure_type, name: "RenderEngine", file: !378, line: 44, flags: DIFlagFwdDecl)
!13464 = !DIDerivedType(tag: DW_TAG_member, name: "depths", scope: !13445, file: !378, line: 105, baseType: !13465, size: 64, offset: 5312)
!13465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13466, size: 64)
!13466 = !DICompositeType(tag: DW_TAG_structure_type, name: "ViewDepths", file: !378, line: 35, flags: DIFlagFwdDecl)
!13467 = !DIDerivedType(tag: DW_TAG_member, name: "gpuoffscreen", scope: !13445, file: !378, line: 106, baseType: !372, size: 64, offset: 5376)
!13468 = !DIDerivedType(tag: DW_TAG_member, name: "sms", scope: !13445, file: !378, line: 109, baseType: !13469, size: 64, offset: 5440)
!13469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13470, size: 64)
!13470 = !DICompositeType(tag: DW_TAG_structure_type, name: "SmoothView3DStore", file: !378, line: 46, flags: DIFlagFwdDecl)
!13471 = !DIDerivedType(tag: DW_TAG_member, name: "smooth_timer", scope: !13445, file: !378, line: 110, baseType: !1358, size: 64, offset: 5504)
!13472 = !DIDerivedType(tag: DW_TAG_member, name: "twmat", scope: !13445, file: !378, line: 114, baseType: !1752, size: 512, offset: 5568)
!13473 = !DIDerivedType(tag: DW_TAG_member, name: "viewquat", scope: !13445, file: !378, line: 116, baseType: !408, size: 128, offset: 6080)
!13474 = !DIDerivedType(tag: DW_TAG_member, name: "dist", scope: !13445, file: !378, line: 117, baseType: !396, size: 32, offset: 6208)
!13475 = !DIDerivedType(tag: DW_TAG_member, name: "camdx", scope: !13445, file: !378, line: 118, baseType: !396, size: 32, offset: 6240)
!13476 = !DIDerivedType(tag: DW_TAG_member, name: "camdy", scope: !13445, file: !378, line: 118, baseType: !396, size: 32, offset: 6272)
!13477 = !DIDerivedType(tag: DW_TAG_member, name: "pixsize", scope: !13445, file: !378, line: 119, baseType: !396, size: 32, offset: 6304)
!13478 = !DIDerivedType(tag: DW_TAG_member, name: "ofs", scope: !13445, file: !378, line: 120, baseType: !779, size: 96, offset: 6336)
!13479 = !DIDerivedType(tag: DW_TAG_member, name: "camzoom", scope: !13445, file: !378, line: 122, baseType: !396, size: 32, offset: 6432)
!13480 = !DIDerivedType(tag: DW_TAG_member, name: "is_persp", scope: !13445, file: !378, line: 123, baseType: !375, size: 8, offset: 6464)
!13481 = !DIDerivedType(tag: DW_TAG_member, name: "persp", scope: !13445, file: !378, line: 125, baseType: !375, size: 8, offset: 6472)
!13482 = !DIDerivedType(tag: DW_TAG_member, name: "view", scope: !13445, file: !378, line: 126, baseType: !375, size: 8, offset: 6480)
!13483 = !DIDerivedType(tag: DW_TAG_member, name: "viewlock", scope: !13445, file: !378, line: 127, baseType: !375, size: 8, offset: 6488)
!13484 = !DIDerivedType(tag: DW_TAG_member, name: "viewlock_quad", scope: !13445, file: !378, line: 128, baseType: !375, size: 8, offset: 6496)
!13485 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !13445, file: !378, line: 129, baseType: !415, size: 24, offset: 6504)
!13486 = !DIDerivedType(tag: DW_TAG_member, name: "ofs_lock", scope: !13445, file: !378, line: 130, baseType: !1335, size: 64, offset: 6528)
!13487 = !DIDerivedType(tag: DW_TAG_member, name: "twdrawflag", scope: !13445, file: !378, line: 132, baseType: !399, size: 16, offset: 6592)
!13488 = !DIDerivedType(tag: DW_TAG_member, name: "rflag", scope: !13445, file: !378, line: 133, baseType: !399, size: 16, offset: 6608)
!13489 = !DIDerivedType(tag: DW_TAG_member, name: "lviewquat", scope: !13445, file: !378, line: 137, baseType: !408, size: 128, offset: 6624)
!13490 = !DIDerivedType(tag: DW_TAG_member, name: "lpersp", scope: !13445, file: !378, line: 138, baseType: !399, size: 16, offset: 6752)
!13491 = !DIDerivedType(tag: DW_TAG_member, name: "lview", scope: !13445, file: !378, line: 138, baseType: !399, size: 16, offset: 6768)
!13492 = !DIDerivedType(tag: DW_TAG_member, name: "gridview", scope: !13445, file: !378, line: 140, baseType: !396, size: 32, offset: 6784)
!13493 = !DIDerivedType(tag: DW_TAG_member, name: "tw_idot", scope: !13445, file: !378, line: 141, baseType: !779, size: 96, offset: 6816)
!13494 = !DIDerivedType(tag: DW_TAG_member, name: "rot_angle", scope: !13445, file: !378, line: 145, baseType: !396, size: 32, offset: 6912)
!13495 = !DIDerivedType(tag: DW_TAG_member, name: "rot_axis", scope: !13445, file: !378, line: 146, baseType: !779, size: 96, offset: 6944)
!13496 = !DILocation(line: 2519, column: 20, scope: !13442)
!13497 = !DILocation(line: 2519, column: 26, scope: !13442)
!13498 = !DILocation(line: 2519, column: 30, scope: !13442)
!13499 = !DILocation(line: 2520, column: 18, scope: !13442)
!13500 = !DILocation(line: 2520, column: 47, scope: !13442)
!13501 = !DILocation(line: 2520, column: 6, scope: !13442)
!13502 = !DILocation(line: 2522, column: 10, scope: !13503)
!13503 = distinct !DILexicalBlock(scope: !13442, file: !3, line: 2522, column: 10)
!13504 = !DILocation(line: 2522, column: 16, scope: !13503)
!13505 = !DILocation(line: 2522, column: 10, scope: !13442)
!13506 = !DILocation(line: 2523, column: 19, scope: !13503)
!13507 = !DILocation(line: 2523, column: 48, scope: !13503)
!13508 = !DILocation(line: 2523, column: 54, scope: !13503)
!13509 = !DILocation(line: 2523, column: 7, scope: !13503)
!13510 = !DILocation(line: 2524, column: 10, scope: !13511)
!13511 = distinct !DILexicalBlock(scope: !13442, file: !3, line: 2524, column: 10)
!13512 = !DILocation(line: 2524, column: 16, scope: !13511)
!13513 = !DILocation(line: 2524, column: 10, scope: !13442)
!13514 = !DILocation(line: 2525, column: 19, scope: !13511)
!13515 = !DILocation(line: 2525, column: 44, scope: !13511)
!13516 = !DILocation(line: 2525, column: 50, scope: !13511)
!13517 = !DILocation(line: 2525, column: 7, scope: !13511)
!13518 = !DILocation(line: 2527, column: 5, scope: !13442)
!13519 = !DILocation(line: 2529, column: 6, scope: !13436)
!13520 = !DILocation(line: 2530, column: 5, scope: !13437)
!13521 = !DILocation(line: 2532, column: 5, scope: !13437)
!13522 = !DILocation(line: 2533, column: 3, scope: !13437)
!13523 = !DILocation(line: 2534, column: 2, scope: !13433)
!13524 = !DILocation(line: 2535, column: 1, scope: !13416)
!13525 = distinct !DISubprogram(name: "write_uilist", scope: !3, file: !3, line: 2537, type: !13526, scopeLine: 2538, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !5641)
!13526 = !DISubroutineType(types: !13527)
!13527 = !{null, !5820, !7623}
!13528 = !DILocalVariable(name: "wd", arg: 1, scope: !13525, file: !3, line: 2537, type: !5820)
!13529 = !DILocation(line: 2537, column: 37, scope: !13525)
!13530 = !DILocalVariable(name: "ui_list", arg: 2, scope: !13525, file: !3, line: 2537, type: !7623)
!13531 = !DILocation(line: 2537, column: 49, scope: !13525)
!13532 = !DILocation(line: 2539, column: 14, scope: !13525)
!13533 = !DILocation(line: 2539, column: 37, scope: !13525)
!13534 = !DILocation(line: 2539, column: 2, scope: !13525)
!13535 = !DILocation(line: 2541, column: 6, scope: !13536)
!13536 = distinct !DILexicalBlock(scope: !13525, file: !3, line: 2541, column: 6)
!13537 = !DILocation(line: 2541, column: 15, scope: !13536)
!13538 = !DILocation(line: 2541, column: 6, scope: !13525)
!13539 = !DILocation(line: 2542, column: 21, scope: !13540)
!13540 = distinct !DILexicalBlock(scope: !13536, file: !3, line: 2541, column: 27)
!13541 = !DILocation(line: 2542, column: 30, scope: !13540)
!13542 = !DILocation(line: 2542, column: 42, scope: !13540)
!13543 = !DILocation(line: 2542, column: 3, scope: !13540)
!13544 = !DILocation(line: 2543, column: 2, scope: !13540)
!13545 = !DILocation(line: 2544, column: 1, scope: !13525)
!13546 = distinct !DISubprogram(name: "write_soops", scope: !3, file: !3, line: 2546, type: !13547, scopeLine: 2547, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !5641)
!13547 = !DISubroutineType(types: !13548)
!13548 = !{null, !5820, !4957, !13549}
!13549 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7523, size: 64)
!13550 = !DILocalVariable(name: "wd", arg: 1, scope: !13546, file: !3, line: 2546, type: !5820)
!13551 = !DILocation(line: 2546, column: 36, scope: !13546)
!13552 = !DILocalVariable(name: "so", arg: 2, scope: !13546, file: !3, line: 2546, type: !4957)
!13553 = !DILocation(line: 2546, column: 51, scope: !13546)
!13554 = !DILocalVariable(name: "tmp_mem_list", arg: 3, scope: !13546, file: !3, line: 2546, type: !13549)
!13555 = !DILocation(line: 2546, column: 66, scope: !13546)
!13556 = !DILocalVariable(name: "ts", scope: !13546, file: !3, line: 2548, type: !5126)
!13557 = !DILocation(line: 2548, column: 15, scope: !13546)
!13558 = !DILocation(line: 2548, column: 20, scope: !13546)
!13559 = !DILocation(line: 2548, column: 24, scope: !13546)
!13560 = !DILocation(line: 2550, column: 6, scope: !13561)
!13561 = distinct !DILexicalBlock(scope: !13546, file: !3, line: 2550, column: 6)
!13562 = !DILocation(line: 2550, column: 6, scope: !13546)
!13563 = !DILocalVariable(name: "elems", scope: !13564, file: !3, line: 2551, type: !98)
!13564 = distinct !DILexicalBlock(scope: !13561, file: !3, line: 2550, column: 10)
!13565 = !DILocation(line: 2551, column: 7, scope: !13564)
!13566 = !DILocation(line: 2551, column: 33, scope: !13564)
!13567 = !DILocation(line: 2551, column: 15, scope: !13564)
!13568 = !DILocalVariable(name: "data", scope: !13564, file: !3, line: 2553, type: !13569)
!13569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13570, size: 64)
!13570 = !DIDerivedType(tag: DW_TAG_typedef, name: "TreeStoreElem", file: !4973, line: 42, baseType: !4972)
!13571 = !DILocation(line: 2553, column: 18, scope: !13564)
!13572 = !DILocation(line: 2553, column: 25, scope: !13564)
!13573 = !DILocation(line: 2553, column: 55, scope: !13564)
!13574 = !DILocation(line: 2553, column: 33, scope: !13564)
!13575 = !DILocation(line: 2555, column: 7, scope: !13576)
!13576 = distinct !DILexicalBlock(scope: !13564, file: !3, line: 2555, column: 7)
!13577 = !DILocation(line: 2555, column: 7, scope: !13564)
!13578 = !DILocalVariable(name: "ts_flat", scope: !13579, file: !3, line: 2556, type: !13580)
!13579 = distinct !DILexicalBlock(scope: !13576, file: !3, line: 2555, column: 13)
!13580 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13581, size: 64)
!13581 = !DIDerivedType(tag: DW_TAG_typedef, name: "TreeStore", file: !4973, line: 50, baseType: !13582)
!13582 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "TreeStore", file: !4973, line: 45, size: 128, elements: !13583)
!13583 = !{!13584, !13585, !13586}
!13584 = !DIDerivedType(tag: DW_TAG_member, name: "totelem", scope: !13582, file: !4973, line: 46, baseType: !98, size: 32)
!13585 = !DIDerivedType(tag: DW_TAG_member, name: "usedelem", scope: !13582, file: !4973, line: 47, baseType: !98, size: 32, offset: 32)
!13586 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !13582, file: !4973, line: 48, baseType: !13569, size: 64, offset: 64)
!13587 = !DILocation(line: 2556, column: 15, scope: !13579)
!13588 = !DILocation(line: 2556, column: 25, scope: !13579)
!13589 = !DILocation(line: 2558, column: 24, scope: !13579)
!13590 = !DILocation(line: 2558, column: 4, scope: !13579)
!13591 = !DILocation(line: 2558, column: 13, scope: !13579)
!13592 = !DILocation(line: 2558, column: 22, scope: !13579)
!13593 = !DILocation(line: 2559, column: 23, scope: !13579)
!13594 = !DILocation(line: 2559, column: 4, scope: !13579)
!13595 = !DILocation(line: 2559, column: 13, scope: !13579)
!13596 = !DILocation(line: 2559, column: 21, scope: !13579)
!13597 = !DILocation(line: 2560, column: 20, scope: !13579)
!13598 = !DILocation(line: 2560, column: 4, scope: !13579)
!13599 = !DILocation(line: 2560, column: 13, scope: !13579)
!13600 = !DILocation(line: 2560, column: 18, scope: !13579)
!13601 = !DILocation(line: 2563, column: 35, scope: !13579)
!13602 = !DILocation(line: 2563, column: 20, scope: !13579)
!13603 = !DILocation(line: 2563, column: 4, scope: !13579)
!13604 = !DILocation(line: 2563, column: 8, scope: !13579)
!13605 = !DILocation(line: 2563, column: 18, scope: !13579)
!13606 = !DILocation(line: 2564, column: 16, scope: !13579)
!13607 = !DILocation(line: 2564, column: 42, scope: !13579)
!13608 = !DILocation(line: 2564, column: 4, scope: !13579)
!13609 = !DILocation(line: 2566, column: 16, scope: !13579)
!13610 = !DILocation(line: 2566, column: 42, scope: !13579)
!13611 = !DILocation(line: 2566, column: 4, scope: !13579)
!13612 = !DILocation(line: 2567, column: 16, scope: !13579)
!13613 = !DILocation(line: 2567, column: 43, scope: !13579)
!13614 = !DILocation(line: 2567, column: 50, scope: !13579)
!13615 = !DILocation(line: 2567, column: 4, scope: !13579)
!13616 = !DILocation(line: 2573, column: 25, scope: !13579)
!13617 = !DILocation(line: 2573, column: 39, scope: !13579)
!13618 = !DILocation(line: 2573, column: 4, scope: !13579)
!13619 = !DILocation(line: 2574, column: 25, scope: !13579)
!13620 = !DILocation(line: 2574, column: 39, scope: !13579)
!13621 = !DILocation(line: 2574, column: 4, scope: !13579)
!13622 = !DILocation(line: 2575, column: 3, scope: !13579)
!13623 = !DILocation(line: 2577, column: 4, scope: !13624)
!13624 = distinct !DILexicalBlock(scope: !13576, file: !3, line: 2576, column: 8)
!13625 = !DILocation(line: 2577, column: 8, scope: !13624)
!13626 = !DILocation(line: 2577, column: 18, scope: !13624)
!13627 = !DILocation(line: 2578, column: 16, scope: !13624)
!13628 = !DILocation(line: 2578, column: 42, scope: !13624)
!13629 = !DILocation(line: 2578, column: 4, scope: !13624)
!13630 = !DILocation(line: 2582, column: 19, scope: !13564)
!13631 = !DILocation(line: 2582, column: 3, scope: !13564)
!13632 = !DILocation(line: 2582, column: 7, scope: !13564)
!13633 = !DILocation(line: 2582, column: 17, scope: !13564)
!13634 = !DILocation(line: 2583, column: 2, scope: !13564)
!13635 = !DILocation(line: 2585, column: 15, scope: !13636)
!13636 = distinct !DILexicalBlock(scope: !13561, file: !3, line: 2584, column: 7)
!13637 = !DILocation(line: 2585, column: 41, scope: !13636)
!13638 = !DILocation(line: 2585, column: 3, scope: !13636)
!13639 = !DILocation(line: 2587, column: 1, scope: !13546)
!13640 = distinct !DISubprogram(name: "write_curvemapping", scope: !3, file: !3, line: 799, type: !13641, scopeLine: 800, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !5641)
!13641 = !DISubroutineType(types: !13642)
!13642 = !{null, !5820, !13643}
!13643 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13644, size: 64)
!13644 = !DIDerivedType(tag: DW_TAG_typedef, name: "CurveMapping", file: !1453, line: 84, baseType: !1800)
!13645 = !DILocalVariable(name: "wd", arg: 1, scope: !13640, file: !3, line: 799, type: !5820)
!13646 = !DILocation(line: 799, column: 43, scope: !13640)
!13647 = !DILocalVariable(name: "cumap", arg: 2, scope: !13640, file: !3, line: 799, type: !13643)
!13648 = !DILocation(line: 799, column: 61, scope: !13640)
!13649 = !DILocation(line: 801, column: 14, scope: !13640)
!13650 = !DILocation(line: 801, column: 43, scope: !13640)
!13651 = !DILocation(line: 801, column: 2, scope: !13640)
!13652 = !DILocation(line: 803, column: 28, scope: !13640)
!13653 = !DILocation(line: 803, column: 32, scope: !13640)
!13654 = !DILocation(line: 803, column: 2, scope: !13640)
!13655 = !DILocation(line: 804, column: 1, scope: !13640)
!13656 = distinct !DISubprogram(name: "write_curvemapping_curves", scope: !3, file: !3, line: 791, type: !13641, scopeLine: 792, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !5641)
!13657 = !DILocalVariable(name: "wd", arg: 1, scope: !13656, file: !3, line: 791, type: !5820)
!13658 = !DILocation(line: 791, column: 50, scope: !13656)
!13659 = !DILocalVariable(name: "cumap", arg: 2, scope: !13656, file: !3, line: 791, type: !13643)
!13660 = !DILocation(line: 791, column: 68, scope: !13656)
!13661 = !DILocalVariable(name: "a", scope: !13656, file: !3, line: 793, type: !98)
!13662 = !DILocation(line: 793, column: 6, scope: !13656)
!13663 = !DILocation(line: 795, column: 9, scope: !13664)
!13664 = distinct !DILexicalBlock(scope: !13656, file: !3, line: 795, column: 2)
!13665 = !DILocation(line: 795, column: 7, scope: !13664)
!13666 = !DILocation(line: 795, column: 14, scope: !13667)
!13667 = distinct !DILexicalBlock(scope: !13664, file: !3, line: 795, column: 2)
!13668 = !DILocation(line: 795, column: 16, scope: !13667)
!13669 = !DILocation(line: 795, column: 2, scope: !13664)
!13670 = !DILocation(line: 796, column: 15, scope: !13667)
!13671 = !DILocation(line: 796, column: 42, scope: !13667)
!13672 = !DILocation(line: 796, column: 49, scope: !13667)
!13673 = !DILocation(line: 796, column: 52, scope: !13667)
!13674 = !DILocation(line: 796, column: 55, scope: !13667)
!13675 = !DILocation(line: 796, column: 65, scope: !13667)
!13676 = !DILocation(line: 796, column: 72, scope: !13667)
!13677 = !DILocation(line: 796, column: 75, scope: !13667)
!13678 = !DILocation(line: 796, column: 78, scope: !13667)
!13679 = !DILocation(line: 796, column: 3, scope: !13667)
!13680 = !DILocation(line: 795, column: 27, scope: !13667)
!13681 = !DILocation(line: 795, column: 2, scope: !13667)
!13682 = distinct !{!13682, !13669, !13683}
!13683 = !DILocation(line: 796, column: 83, scope: !13664)
!13684 = !DILocation(line: 797, column: 1, scope: !13656)
!13685 = distinct !DISubprogram(name: "write_animdata", scope: !3, file: !3, line: 767, type: !13686, scopeLine: 768, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !5641)
!13686 = !DISubroutineType(types: !13687)
!13687 = !{null, !5820, !13688}
!13688 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13689, size: 64)
!13689 = !DIDerivedType(tag: DW_TAG_typedef, name: "AnimData", file: !835, line: 869, baseType: !834)
!13690 = !DILocalVariable(name: "wd", arg: 1, scope: !13685, file: !3, line: 767, type: !5820)
!13691 = !DILocation(line: 767, column: 39, scope: !13685)
!13692 = !DILocalVariable(name: "adt", arg: 2, scope: !13685, file: !3, line: 767, type: !13688)
!13693 = !DILocation(line: 767, column: 53, scope: !13685)
!13694 = !DILocalVariable(name: "aor", scope: !13685, file: !3, line: 769, type: !13695)
!13695 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13696, size: 64)
!13696 = !DIDerivedType(tag: DW_TAG_typedef, name: "AnimOverride", file: !835, line: 822, baseType: !13697)
!13697 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AnimOverride", file: !835, line: 815, size: 256, elements: !13698)
!13698 = !{!13699, !13701, !13702, !13703, !13704}
!13699 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !13697, file: !835, line: 816, baseType: !13700, size: 64)
!13700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13697, size: 64)
!13701 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !13697, file: !835, line: 816, baseType: !13700, size: 64, offset: 64)
!13702 = !DIDerivedType(tag: DW_TAG_member, name: "rna_path", scope: !13697, file: !835, line: 818, baseType: !501, size: 64, offset: 128)
!13703 = !DIDerivedType(tag: DW_TAG_member, name: "array_index", scope: !13697, file: !835, line: 819, baseType: !98, size: 32, offset: 192)
!13704 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !13697, file: !835, line: 821, baseType: !396, size: 32, offset: 224)
!13705 = !DILocation(line: 769, column: 16, scope: !13685)
!13706 = !DILocation(line: 772, column: 14, scope: !13685)
!13707 = !DILocation(line: 772, column: 39, scope: !13685)
!13708 = !DILocation(line: 772, column: 2, scope: !13685)
!13709 = !DILocation(line: 775, column: 16, scope: !13685)
!13710 = !DILocation(line: 775, column: 21, scope: !13685)
!13711 = !DILocation(line: 775, column: 26, scope: !13685)
!13712 = !DILocation(line: 775, column: 2, scope: !13685)
!13713 = !DILocation(line: 779, column: 12, scope: !13714)
!13714 = distinct !DILexicalBlock(scope: !13685, file: !3, line: 779, column: 2)
!13715 = !DILocation(line: 779, column: 17, scope: !13714)
!13716 = !DILocation(line: 779, column: 27, scope: !13714)
!13717 = !DILocation(line: 779, column: 10, scope: !13714)
!13718 = !DILocation(line: 779, column: 7, scope: !13714)
!13719 = !DILocation(line: 779, column: 34, scope: !13720)
!13720 = distinct !DILexicalBlock(scope: !13714, file: !3, line: 779, column: 2)
!13721 = !DILocation(line: 779, column: 2, scope: !13714)
!13722 = !DILocation(line: 781, column: 15, scope: !13723)
!13723 = distinct !DILexicalBlock(scope: !13720, file: !3, line: 779, column: 55)
!13724 = !DILocation(line: 781, column: 44, scope: !13723)
!13725 = !DILocation(line: 781, column: 3, scope: !13723)
!13726 = !DILocation(line: 782, column: 13, scope: !13723)
!13727 = !DILocation(line: 782, column: 30, scope: !13723)
!13728 = !DILocation(line: 782, column: 35, scope: !13723)
!13729 = !DILocation(line: 782, column: 23, scope: !13723)
!13730 = !DILocation(line: 782, column: 44, scope: !13723)
!13731 = !DILocation(line: 782, column: 48, scope: !13723)
!13732 = !DILocation(line: 782, column: 53, scope: !13723)
!13733 = !DILocation(line: 782, column: 3, scope: !13723)
!13734 = !DILocation(line: 783, column: 2, scope: !13723)
!13735 = !DILocation(line: 779, column: 44, scope: !13720)
!13736 = !DILocation(line: 779, column: 49, scope: !13720)
!13737 = !DILocation(line: 779, column: 42, scope: !13720)
!13738 = !DILocation(line: 779, column: 2, scope: !13720)
!13739 = distinct !{!13739, !13721, !13740}
!13740 = !DILocation(line: 783, column: 2, scope: !13714)
!13741 = !DILocation(line: 788, column: 16, scope: !13685)
!13742 = !DILocation(line: 788, column: 21, scope: !13685)
!13743 = !DILocation(line: 788, column: 26, scope: !13685)
!13744 = !DILocation(line: 788, column: 2, scope: !13685)
!13745 = !DILocation(line: 789, column: 1, scope: !13685)
!13746 = distinct !DISubprogram(name: "write_movieTracks", scope: !3, file: !3, line: 3096, type: !7324, scopeLine: 3097, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !5641)
!13747 = !DILocalVariable(name: "wd", arg: 1, scope: !13746, file: !3, line: 3096, type: !5820)
!13748 = !DILocation(line: 3096, column: 42, scope: !13746)
!13749 = !DILocalVariable(name: "tracks", arg: 2, scope: !13746, file: !3, line: 3096, type: !565)
!13750 = !DILocation(line: 3096, column: 56, scope: !13746)
!13751 = !DILocalVariable(name: "track", scope: !13746, file: !3, line: 3098, type: !2155)
!13752 = !DILocation(line: 3098, column: 22, scope: !13746)
!13753 = !DILocation(line: 3100, column: 9, scope: !13746)
!13754 = !DILocation(line: 3100, column: 17, scope: !13746)
!13755 = !DILocation(line: 3100, column: 7, scope: !13746)
!13756 = !DILocation(line: 3101, column: 2, scope: !13746)
!13757 = !DILocation(line: 3101, column: 9, scope: !13746)
!13758 = !DILocation(line: 3102, column: 15, scope: !13759)
!13759 = distinct !DILexicalBlock(scope: !13746, file: !3, line: 3101, column: 16)
!13760 = !DILocation(line: 3102, column: 50, scope: !13759)
!13761 = !DILocation(line: 3102, column: 3, scope: !13759)
!13762 = !DILocation(line: 3104, column: 7, scope: !13763)
!13763 = distinct !DILexicalBlock(scope: !13759, file: !3, line: 3104, column: 7)
!13764 = !DILocation(line: 3104, column: 14, scope: !13763)
!13765 = !DILocation(line: 3104, column: 7, scope: !13759)
!13766 = !DILocation(line: 3105, column: 16, scope: !13763)
!13767 = !DILocation(line: 3105, column: 49, scope: !13763)
!13768 = !DILocation(line: 3105, column: 56, scope: !13763)
!13769 = !DILocation(line: 3105, column: 67, scope: !13763)
!13770 = !DILocation(line: 3105, column: 74, scope: !13763)
!13771 = !DILocation(line: 3105, column: 4, scope: !13763)
!13772 = !DILocation(line: 3107, column: 10, scope: !13759)
!13773 = !DILocation(line: 3107, column: 17, scope: !13759)
!13774 = !DILocation(line: 3107, column: 8, scope: !13759)
!13775 = distinct !{!13775, !13756, !13776}
!13776 = !DILocation(line: 3108, column: 2, scope: !13746)
!13777 = !DILocation(line: 3109, column: 1, scope: !13746)
!13778 = distinct !DISubprogram(name: "write_moviePlaneTracks", scope: !3, file: !3, line: 3111, type: !7324, scopeLine: 3112, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !5641)
!13779 = !DILocalVariable(name: "wd", arg: 1, scope: !13778, file: !3, line: 3111, type: !5820)
!13780 = !DILocation(line: 3111, column: 47, scope: !13778)
!13781 = !DILocalVariable(name: "plane_tracks_base", arg: 2, scope: !13778, file: !3, line: 3111, type: !565)
!13782 = !DILocation(line: 3111, column: 61, scope: !13778)
!13783 = !DILocalVariable(name: "plane_track", scope: !13778, file: !3, line: 3113, type: !2206)
!13784 = !DILocation(line: 3113, column: 27, scope: !13778)
!13785 = !DILocation(line: 3115, column: 21, scope: !13786)
!13786 = distinct !DILexicalBlock(scope: !13778, file: !3, line: 3115, column: 2)
!13787 = !DILocation(line: 3115, column: 40, scope: !13786)
!13788 = !DILocation(line: 3115, column: 19, scope: !13786)
!13789 = !DILocation(line: 3115, column: 7, scope: !13786)
!13790 = !DILocation(line: 3116, column: 7, scope: !13791)
!13791 = distinct !DILexicalBlock(scope: !13786, file: !3, line: 3115, column: 2)
!13792 = !DILocation(line: 3115, column: 2, scope: !13786)
!13793 = !DILocation(line: 3119, column: 15, scope: !13794)
!13794 = distinct !DILexicalBlock(scope: !13791, file: !3, line: 3118, column: 2)
!13795 = !DILocation(line: 3119, column: 55, scope: !13794)
!13796 = !DILocation(line: 3119, column: 3, scope: !13794)
!13797 = !DILocation(line: 3121, column: 13, scope: !13794)
!13798 = !DILocation(line: 3121, column: 54, scope: !13794)
!13799 = !DILocation(line: 3121, column: 67, scope: !13794)
!13800 = !DILocation(line: 3121, column: 52, scope: !13794)
!13801 = !DILocation(line: 3121, column: 23, scope: !13794)
!13802 = !DILocation(line: 3121, column: 83, scope: !13794)
!13803 = !DILocation(line: 3121, column: 96, scope: !13794)
!13804 = !DILocation(line: 3121, column: 3, scope: !13794)
!13805 = !DILocation(line: 3122, column: 15, scope: !13794)
!13806 = !DILocation(line: 3122, column: 53, scope: !13794)
!13807 = !DILocation(line: 3122, column: 66, scope: !13794)
!13808 = !DILocation(line: 3122, column: 77, scope: !13794)
!13809 = !DILocation(line: 3122, column: 90, scope: !13794)
!13810 = !DILocation(line: 3122, column: 3, scope: !13794)
!13811 = !DILocation(line: 3123, column: 2, scope: !13794)
!13812 = !DILocation(line: 3117, column: 21, scope: !13791)
!13813 = !DILocation(line: 3117, column: 34, scope: !13791)
!13814 = !DILocation(line: 3117, column: 19, scope: !13791)
!13815 = !DILocation(line: 3115, column: 2, scope: !13791)
!13816 = distinct !{!13816, !13792, !13817}
!13817 = !DILocation(line: 3123, column: 2, scope: !13786)
!13818 = !DILocation(line: 3124, column: 1, scope: !13778)
!13819 = distinct !DISubprogram(name: "write_movieReconstruction", scope: !3, file: !3, line: 3126, type: !13820, scopeLine: 3127, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !5641)
!13820 = !DISubroutineType(types: !13821)
!13821 = !{null, !5820, !13822}
!13822 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2132, size: 64)
!13823 = !DILocalVariable(name: "wd", arg: 1, scope: !13819, file: !3, line: 3126, type: !5820)
!13824 = !DILocation(line: 3126, column: 50, scope: !13819)
!13825 = !DILocalVariable(name: "reconstruction", arg: 2, scope: !13819, file: !3, line: 3126, type: !13822)
!13826 = !DILocation(line: 3126, column: 83, scope: !13819)
!13827 = !DILocation(line: 3128, column: 6, scope: !13828)
!13828 = distinct !DILexicalBlock(scope: !13819, file: !3, line: 3128, column: 6)
!13829 = !DILocation(line: 3128, column: 22, scope: !13828)
!13830 = !DILocation(line: 3128, column: 6, scope: !13819)
!13831 = !DILocation(line: 3129, column: 15, scope: !13828)
!13832 = !DILocation(line: 3129, column: 53, scope: !13828)
!13833 = !DILocation(line: 3129, column: 69, scope: !13828)
!13834 = !DILocation(line: 3129, column: 76, scope: !13828)
!13835 = !DILocation(line: 3129, column: 92, scope: !13828)
!13836 = !DILocation(line: 3129, column: 3, scope: !13828)
!13837 = !DILocation(line: 3130, column: 1, scope: !13819)
!13838 = distinct !DISubprogram(name: "write_fcurves", scope: !3, file: !3, line: 652, type: !7324, scopeLine: 653, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !5641)
!13839 = !DILocalVariable(name: "wd", arg: 1, scope: !13838, file: !3, line: 652, type: !5820)
!13840 = !DILocation(line: 652, column: 38, scope: !13838)
!13841 = !DILocalVariable(name: "fcurves", arg: 2, scope: !13838, file: !3, line: 652, type: !565)
!13842 = !DILocation(line: 652, column: 52, scope: !13838)
!13843 = !DILocalVariable(name: "fcu", scope: !13838, file: !3, line: 654, type: !13844)
!13844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13845, size: 64)
!13845 = !DIDerivedType(tag: DW_TAG_typedef, name: "FCurve", file: !835, line: 463, baseType: !13846)
!13846 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FCurve", file: !835, line: 433, size: 896, elements: !13847)
!13847 = !{!13848, !13850, !13851, !13852, !13864, !13865, !13866, !13874, !13875, !13876, !13877, !13878, !13879, !13880, !13881, !13882, !13883}
!13848 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !13846, file: !835, line: 434, baseType: !13849, size: 64)
!13849 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13846, size: 64)
!13850 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !13846, file: !835, line: 434, baseType: !13849, size: 64, offset: 64)
!13851 = !DIDerivedType(tag: DW_TAG_member, name: "grp", scope: !13846, file: !835, line: 437, baseType: !10775, size: 64, offset: 128)
!13852 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !13846, file: !835, line: 440, baseType: !13853, size: 64, offset: 192)
!13853 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13854, size: 64)
!13854 = !DIDerivedType(tag: DW_TAG_typedef, name: "ChannelDriver", file: !835, line: 386, baseType: !13855)
!13855 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ChannelDriver", file: !835, line: 371, size: 2368, elements: !13856)
!13856 = !{!13857, !13858, !13859, !13860, !13861, !13862, !13863}
!13857 = !DIDerivedType(tag: DW_TAG_member, name: "variables", scope: !13855, file: !835, line: 372, baseType: !388, size: 128)
!13858 = !DIDerivedType(tag: DW_TAG_member, name: "expression", scope: !13855, file: !835, line: 377, baseType: !630, size: 2048, offset: 128)
!13859 = !DIDerivedType(tag: DW_TAG_member, name: "expr_comp", scope: !13855, file: !835, line: 378, baseType: !372, size: 64, offset: 2176)
!13860 = !DIDerivedType(tag: DW_TAG_member, name: "curval", scope: !13855, file: !835, line: 380, baseType: !396, size: 32, offset: 2240)
!13861 = !DIDerivedType(tag: DW_TAG_member, name: "influence", scope: !13855, file: !835, line: 381, baseType: !396, size: 32, offset: 2272)
!13862 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !13855, file: !835, line: 384, baseType: !98, size: 32, offset: 2304)
!13863 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !13855, file: !835, line: 385, baseType: !98, size: 32, offset: 2336)
!13864 = !DIDerivedType(tag: DW_TAG_member, name: "modifiers", scope: !13846, file: !835, line: 442, baseType: !388, size: 128, offset: 256)
!13865 = !DIDerivedType(tag: DW_TAG_member, name: "bezt", scope: !13846, file: !835, line: 445, baseType: !9408, size: 64, offset: 384)
!13866 = !DIDerivedType(tag: DW_TAG_member, name: "fpt", scope: !13846, file: !835, line: 446, baseType: !13867, size: 64, offset: 448)
!13867 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13868, size: 64)
!13868 = !DIDerivedType(tag: DW_TAG_typedef, name: "FPoint", file: !835, line: 430, baseType: !13869)
!13869 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FPoint", file: !835, line: 426, size: 128, elements: !13870)
!13870 = !{!13871, !13872, !13873}
!13871 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !13869, file: !835, line: 427, baseType: !1335, size: 64)
!13872 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !13869, file: !835, line: 428, baseType: !98, size: 32, offset: 64)
!13873 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !13869, file: !835, line: 429, baseType: !98, size: 32, offset: 96)
!13874 = !DIDerivedType(tag: DW_TAG_member, name: "totvert", scope: !13846, file: !835, line: 447, baseType: !7, size: 32, offset: 512)
!13875 = !DIDerivedType(tag: DW_TAG_member, name: "curval", scope: !13846, file: !835, line: 450, baseType: !396, size: 32, offset: 544)
!13876 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !13846, file: !835, line: 451, baseType: !399, size: 16, offset: 576)
!13877 = !DIDerivedType(tag: DW_TAG_member, name: "extend", scope: !13846, file: !835, line: 452, baseType: !399, size: 16, offset: 592)
!13878 = !DIDerivedType(tag: DW_TAG_member, name: "array_index", scope: !13846, file: !835, line: 455, baseType: !98, size: 32, offset: 608)
!13879 = !DIDerivedType(tag: DW_TAG_member, name: "rna_path", scope: !13846, file: !835, line: 456, baseType: !501, size: 64, offset: 640)
!13880 = !DIDerivedType(tag: DW_TAG_member, name: "color_mode", scope: !13846, file: !835, line: 459, baseType: !98, size: 32, offset: 704)
!13881 = !DIDerivedType(tag: DW_TAG_member, name: "color", scope: !13846, file: !835, line: 460, baseType: !779, size: 96, offset: 736)
!13882 = !DIDerivedType(tag: DW_TAG_member, name: "prev_norm_factor", scope: !13846, file: !835, line: 462, baseType: !396, size: 32, offset: 832)
!13883 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !13846, file: !835, line: 462, baseType: !396, size: 32, offset: 864)
!13884 = !DILocation(line: 654, column: 10, scope: !13838)
!13885 = !DILocation(line: 656, column: 12, scope: !13838)
!13886 = !DILocation(line: 656, column: 32, scope: !13838)
!13887 = !DILocation(line: 656, column: 2, scope: !13838)
!13888 = !DILocation(line: 657, column: 11, scope: !13889)
!13889 = distinct !DILexicalBlock(scope: !13838, file: !3, line: 657, column: 2)
!13890 = !DILocation(line: 657, column: 20, scope: !13889)
!13891 = !DILocation(line: 657, column: 10, scope: !13889)
!13892 = !DILocation(line: 657, column: 7, scope: !13889)
!13893 = !DILocation(line: 657, column: 27, scope: !13894)
!13894 = distinct !DILexicalBlock(scope: !13889, file: !3, line: 657, column: 2)
!13895 = !DILocation(line: 657, column: 2, scope: !13889)
!13896 = !DILocation(line: 659, column: 7, scope: !13897)
!13897 = distinct !DILexicalBlock(scope: !13898, file: !3, line: 659, column: 7)
!13898 = distinct !DILexicalBlock(scope: !13894, file: !3, line: 657, column: 47)
!13899 = !DILocation(line: 659, column: 12, scope: !13897)
!13900 = !DILocation(line: 659, column: 7, scope: !13898)
!13901 = !DILocation(line: 660, column: 16, scope: !13897)
!13902 = !DILocation(line: 660, column: 39, scope: !13897)
!13903 = !DILocation(line: 660, column: 44, scope: !13897)
!13904 = !DILocation(line: 660, column: 53, scope: !13897)
!13905 = !DILocation(line: 660, column: 58, scope: !13897)
!13906 = !DILocation(line: 660, column: 4, scope: !13897)
!13907 = !DILocation(line: 661, column: 7, scope: !13908)
!13908 = distinct !DILexicalBlock(scope: !13898, file: !3, line: 661, column: 7)
!13909 = !DILocation(line: 661, column: 12, scope: !13908)
!13910 = !DILocation(line: 661, column: 7, scope: !13898)
!13911 = !DILocation(line: 662, column: 16, scope: !13908)
!13912 = !DILocation(line: 662, column: 36, scope: !13908)
!13913 = !DILocation(line: 662, column: 41, scope: !13908)
!13914 = !DILocation(line: 662, column: 50, scope: !13908)
!13915 = !DILocation(line: 662, column: 55, scope: !13908)
!13916 = !DILocation(line: 662, column: 4, scope: !13908)
!13917 = !DILocation(line: 664, column: 7, scope: !13918)
!13918 = distinct !DILexicalBlock(scope: !13898, file: !3, line: 664, column: 7)
!13919 = !DILocation(line: 664, column: 12, scope: !13918)
!13920 = !DILocation(line: 664, column: 7, scope: !13898)
!13921 = !DILocation(line: 665, column: 14, scope: !13918)
!13922 = !DILocation(line: 665, column: 31, scope: !13918)
!13923 = !DILocation(line: 665, column: 36, scope: !13918)
!13924 = !DILocation(line: 665, column: 24, scope: !13918)
!13925 = !DILocation(line: 665, column: 45, scope: !13918)
!13926 = !DILocation(line: 665, column: 49, scope: !13918)
!13927 = !DILocation(line: 665, column: 54, scope: !13918)
!13928 = !DILocation(line: 665, column: 4, scope: !13918)
!13929 = !DILocation(line: 668, column: 7, scope: !13930)
!13930 = distinct !DILexicalBlock(scope: !13898, file: !3, line: 668, column: 7)
!13931 = !DILocation(line: 668, column: 12, scope: !13930)
!13932 = !DILocation(line: 668, column: 7, scope: !13898)
!13933 = !DILocalVariable(name: "driver", scope: !13934, file: !3, line: 669, type: !13853)
!13934 = distinct !DILexicalBlock(scope: !13930, file: !3, line: 668, column: 20)
!13935 = !DILocation(line: 669, column: 19, scope: !13934)
!13936 = !DILocation(line: 669, column: 27, scope: !13934)
!13937 = !DILocation(line: 669, column: 32, scope: !13934)
!13938 = !DILocalVariable(name: "dvar", scope: !13934, file: !3, line: 670, type: !13939)
!13939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13940, size: 64)
!13940 = !DIDerivedType(tag: DW_TAG_typedef, name: "DriverVar", file: !835, line: 338, baseType: !13941)
!13941 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DriverVar", file: !835, line: 328, size: 4288, elements: !13942)
!13942 = !{!13943, !13945, !13946, !13947, !13958, !13959, !13960}
!13943 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !13941, file: !835, line: 329, baseType: !13944, size: 64)
!13944 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13941, size: 64)
!13945 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !13941, file: !835, line: 329, baseType: !13944, size: 64, offset: 64)
!13946 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !13941, file: !835, line: 331, baseType: !692, size: 512, offset: 128)
!13947 = !DIDerivedType(tag: DW_TAG_member, name: "targets", scope: !13941, file: !835, line: 333, baseType: !13948, size: 3584, offset: 640)
!13948 = !DICompositeType(tag: DW_TAG_array_type, baseType: !13949, size: 3584, elements: !400)
!13949 = !DIDerivedType(tag: DW_TAG_typedef, name: "DriverTarget", file: !835, line: 279, baseType: !13950)
!13950 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DriverTarget", file: !835, line: 269, size: 448, elements: !13951)
!13951 = !{!13952, !13953, !13954, !13955, !13956, !13957}
!13952 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !13950, file: !835, line: 270, baseType: !441, size: 64)
!13953 = !DIDerivedType(tag: DW_TAG_member, name: "rna_path", scope: !13950, file: !835, line: 272, baseType: !501, size: 64, offset: 64)
!13954 = !DIDerivedType(tag: DW_TAG_member, name: "pchan_name", scope: !13950, file: !835, line: 274, baseType: !2910, size: 256, offset: 128)
!13955 = !DIDerivedType(tag: DW_TAG_member, name: "transChan", scope: !13950, file: !835, line: 275, baseType: !399, size: 16, offset: 384)
!13956 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !13950, file: !835, line: 277, baseType: !399, size: 16, offset: 400)
!13957 = !DIDerivedType(tag: DW_TAG_member, name: "idtype", scope: !13950, file: !835, line: 278, baseType: !98, size: 32, offset: 416)
!13958 = !DIDerivedType(tag: DW_TAG_member, name: "num_targets", scope: !13941, file: !835, line: 334, baseType: !399, size: 16, offset: 4224)
!13959 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !13941, file: !835, line: 336, baseType: !399, size: 16, offset: 4240)
!13960 = !DIDerivedType(tag: DW_TAG_member, name: "curval", scope: !13941, file: !835, line: 337, baseType: !396, size: 32, offset: 4256)
!13961 = !DILocation(line: 670, column: 15, scope: !13934)
!13962 = !DILocation(line: 672, column: 16, scope: !13934)
!13963 = !DILocation(line: 672, column: 46, scope: !13934)
!13964 = !DILocation(line: 672, column: 4, scope: !13934)
!13965 = !DILocation(line: 675, column: 14, scope: !13934)
!13966 = !DILocation(line: 675, column: 38, scope: !13934)
!13967 = !DILocation(line: 675, column: 46, scope: !13934)
!13968 = !DILocation(line: 675, column: 4, scope: !13934)
!13969 = !DILocation(line: 676, column: 15, scope: !13970)
!13970 = distinct !DILexicalBlock(scope: !13934, file: !3, line: 676, column: 4)
!13971 = !DILocation(line: 676, column: 23, scope: !13970)
!13972 = !DILocation(line: 676, column: 33, scope: !13970)
!13973 = !DILocation(line: 676, column: 13, scope: !13970)
!13974 = !DILocation(line: 676, column: 9, scope: !13970)
!13975 = !DILocation(line: 676, column: 40, scope: !13976)
!13976 = distinct !DILexicalBlock(scope: !13970, file: !3, line: 676, column: 4)
!13977 = !DILocation(line: 676, column: 4, scope: !13970)
!13978 = !DILocalVariable(name: "dtar", scope: !13979, file: !3, line: 677, type: !13981)
!13979 = distinct !DILexicalBlock(scope: !13980, file: !3, line: 677, column: 5)
!13980 = distinct !DILexicalBlock(scope: !13976, file: !3, line: 676, column: 64)
!13981 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13949, size: 64)
!13982 = !DILocation(line: 677, column: 5, scope: !13979)
!13983 = !DILocalVariable(name: "tarIndex", scope: !13979, file: !3, line: 677, type: !98)
!13984 = !DILocation(line: 677, column: 5, scope: !13985)
!13985 = distinct !DILexicalBlock(scope: !13986, file: !3, line: 677, column: 5)
!13986 = distinct !DILexicalBlock(scope: !13979, file: !3, line: 677, column: 5)
!13987 = !DILocation(line: 677, column: 5, scope: !13986)
!13988 = !DILocation(line: 679, column: 10, scope: !13989)
!13989 = distinct !DILexicalBlock(scope: !13990, file: !3, line: 679, column: 10)
!13990 = distinct !DILexicalBlock(scope: !13985, file: !3, line: 678, column: 5)
!13991 = !DILocation(line: 679, column: 16, scope: !13989)
!13992 = !DILocation(line: 679, column: 10, scope: !13990)
!13993 = !DILocation(line: 680, column: 17, scope: !13989)
!13994 = !DILocation(line: 680, column: 34, scope: !13989)
!13995 = !DILocation(line: 680, column: 40, scope: !13989)
!13996 = !DILocation(line: 680, column: 27, scope: !13989)
!13997 = !DILocation(line: 680, column: 49, scope: !13989)
!13998 = !DILocation(line: 680, column: 53, scope: !13989)
!13999 = !DILocation(line: 680, column: 59, scope: !13989)
!14000 = !DILocation(line: 680, column: 7, scope: !13989)
!14001 = !DILocation(line: 681, column: 5, scope: !13990)
!14002 = distinct !{!14002, !13987, !14003}
!14003 = !DILocation(line: 681, column: 5, scope: !13986)
!14004 = !DILocation(line: 683, column: 4, scope: !13980)
!14005 = !DILocation(line: 676, column: 52, scope: !13976)
!14006 = !DILocation(line: 676, column: 58, scope: !13976)
!14007 = !DILocation(line: 676, column: 50, scope: !13976)
!14008 = !DILocation(line: 676, column: 4, scope: !13976)
!14009 = distinct !{!14009, !13977, !14010}
!14010 = !DILocation(line: 683, column: 4, scope: !13970)
!14011 = !DILocation(line: 684, column: 3, scope: !13934)
!14012 = !DILocation(line: 687, column: 20, scope: !13898)
!14013 = !DILocation(line: 687, column: 25, scope: !13898)
!14014 = !DILocation(line: 687, column: 30, scope: !13898)
!14015 = !DILocation(line: 687, column: 3, scope: !13898)
!14016 = !DILocation(line: 688, column: 2, scope: !13898)
!14017 = !DILocation(line: 657, column: 36, scope: !13894)
!14018 = !DILocation(line: 657, column: 41, scope: !13894)
!14019 = !DILocation(line: 657, column: 35, scope: !13894)
!14020 = !DILocation(line: 657, column: 2, scope: !13894)
!14021 = distinct !{!14021, !13895, !14022}
!14022 = !DILocation(line: 688, column: 2, scope: !13889)
!14023 = !DILocation(line: 689, column: 1, scope: !13838)
!14024 = distinct !DISubprogram(name: "write_nladata", scope: !3, file: !3, line: 753, type: !7324, scopeLine: 754, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !5641)
!14025 = !DILocalVariable(name: "wd", arg: 1, scope: !14024, file: !3, line: 753, type: !5820)
!14026 = !DILocation(line: 753, column: 38, scope: !14024)
!14027 = !DILocalVariable(name: "nlabase", arg: 2, scope: !14024, file: !3, line: 753, type: !565)
!14028 = !DILocation(line: 753, column: 52, scope: !14024)
!14029 = !DILocalVariable(name: "nlt", scope: !14024, file: !3, line: 755, type: !14030)
!14030 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14031, size: 64)
!14031 = !DIDerivedType(tag: DW_TAG_typedef, name: "NlaTrack", file: !835, line: 682, baseType: !14032)
!14032 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "NlaTrack", file: !835, line: 673, size: 832, elements: !14033)
!14033 = !{!14034, !14036, !14037, !14038, !14039, !14040}
!14034 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !14032, file: !835, line: 674, baseType: !14035, size: 64)
!14035 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14032, size: 64)
!14036 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !14032, file: !835, line: 674, baseType: !14035, size: 64, offset: 64)
!14037 = !DIDerivedType(tag: DW_TAG_member, name: "strips", scope: !14032, file: !835, line: 676, baseType: !388, size: 128, offset: 128)
!14038 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !14032, file: !835, line: 678, baseType: !98, size: 32, offset: 256)
!14039 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !14032, file: !835, line: 679, baseType: !98, size: 32, offset: 288)
!14040 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !14032, file: !835, line: 681, baseType: !692, size: 512, offset: 320)
!14041 = !DILocation(line: 755, column: 12, scope: !14024)
!14042 = !DILocation(line: 758, column: 12, scope: !14043)
!14043 = distinct !DILexicalBlock(scope: !14024, file: !3, line: 758, column: 2)
!14044 = !DILocation(line: 758, column: 21, scope: !14043)
!14045 = !DILocation(line: 758, column: 10, scope: !14043)
!14046 = !DILocation(line: 758, column: 7, scope: !14043)
!14047 = !DILocation(line: 758, column: 28, scope: !14048)
!14048 = distinct !DILexicalBlock(scope: !14043, file: !3, line: 758, column: 2)
!14049 = !DILocation(line: 758, column: 2, scope: !14043)
!14050 = !DILocation(line: 760, column: 15, scope: !14051)
!14051 = distinct !DILexicalBlock(scope: !14048, file: !3, line: 758, column: 49)
!14052 = !DILocation(line: 760, column: 40, scope: !14051)
!14053 = !DILocation(line: 760, column: 3, scope: !14051)
!14054 = !DILocation(line: 763, column: 19, scope: !14051)
!14055 = !DILocation(line: 763, column: 24, scope: !14051)
!14056 = !DILocation(line: 763, column: 29, scope: !14051)
!14057 = !DILocation(line: 763, column: 3, scope: !14051)
!14058 = !DILocation(line: 764, column: 2, scope: !14051)
!14059 = !DILocation(line: 758, column: 38, scope: !14048)
!14060 = !DILocation(line: 758, column: 43, scope: !14048)
!14061 = !DILocation(line: 758, column: 36, scope: !14048)
!14062 = !DILocation(line: 758, column: 2, scope: !14048)
!14063 = distinct !{!14063, !14049, !14064}
!14064 = !DILocation(line: 764, column: 2, scope: !14043)
!14065 = !DILocation(line: 765, column: 1, scope: !14024)
!14066 = distinct !DISubprogram(name: "writelist", scope: !3, file: !3, line: 517, type: !14067, scopeLine: 518, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !5641)
!14067 = !DISubroutineType(types: !14068)
!14068 = !{null, !5820, !98, !373, !565}
!14069 = !DILocalVariable(name: "wd", arg: 1, scope: !14066, file: !3, line: 517, type: !5820)
!14070 = !DILocation(line: 517, column: 34, scope: !14066)
!14071 = !DILocalVariable(name: "filecode", arg: 2, scope: !14066, file: !3, line: 517, type: !98)
!14072 = !DILocation(line: 517, column: 42, scope: !14066)
!14073 = !DILocalVariable(name: "structname", arg: 3, scope: !14066, file: !3, line: 517, type: !373)
!14074 = !DILocation(line: 517, column: 64, scope: !14066)
!14075 = !DILocalVariable(name: "lb", arg: 4, scope: !14066, file: !3, line: 517, type: !565)
!14076 = !DILocation(line: 517, column: 86, scope: !14066)
!14077 = !DILocalVariable(name: "link", scope: !14066, file: !3, line: 519, type: !14078)
!14078 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14079, size: 64)
!14079 = !DIDerivedType(tag: DW_TAG_typedef, name: "Link", file: !389, line: 59, baseType: !14080)
!14080 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Link", file: !389, line: 57, size: 128, elements: !14081)
!14081 = !{!14082, !14084}
!14082 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !14080, file: !389, line: 58, baseType: !14083, size: 64)
!14083 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14080, size: 64)
!14084 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !14080, file: !389, line: 58, baseType: !14083, size: 64, offset: 64)
!14085 = !DILocation(line: 519, column: 8, scope: !14066)
!14086 = !DILocation(line: 519, column: 15, scope: !14066)
!14087 = !DILocation(line: 519, column: 19, scope: !14066)
!14088 = !DILocation(line: 521, column: 2, scope: !14066)
!14089 = !DILocation(line: 521, column: 9, scope: !14066)
!14090 = !DILocation(line: 522, column: 15, scope: !14091)
!14091 = distinct !DILexicalBlock(scope: !14066, file: !3, line: 521, column: 15)
!14092 = !DILocation(line: 522, column: 19, scope: !14091)
!14093 = !DILocation(line: 522, column: 29, scope: !14091)
!14094 = !DILocation(line: 522, column: 44, scope: !14091)
!14095 = !DILocation(line: 522, column: 3, scope: !14091)
!14096 = !DILocation(line: 523, column: 10, scope: !14091)
!14097 = !DILocation(line: 523, column: 16, scope: !14091)
!14098 = !DILocation(line: 523, column: 8, scope: !14091)
!14099 = distinct !{!14099, !14088, !14100}
!14100 = !DILocation(line: 524, column: 2, scope: !14066)
!14101 = !DILocation(line: 525, column: 1, scope: !14066)
!14102 = distinct !DISubprogram(name: "write_fmodifiers", scope: !3, file: !3, line: 602, type: !7324, scopeLine: 603, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !5641)
!14103 = !DILocalVariable(name: "wd", arg: 1, scope: !14102, file: !3, line: 602, type: !5820)
!14104 = !DILocation(line: 602, column: 41, scope: !14102)
!14105 = !DILocalVariable(name: "fmodifiers", arg: 2, scope: !14102, file: !3, line: 602, type: !565)
!14106 = !DILocation(line: 602, column: 55, scope: !14102)
!14107 = !DILocalVariable(name: "fcm", scope: !14102, file: !3, line: 604, type: !14108)
!14108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14109, size: 64)
!14109 = !DIDerivedType(tag: DW_TAG_typedef, name: "FModifier", file: !835, line: 67, baseType: !14110)
!14110 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FModifier", file: !835, line: 52, size: 896, elements: !14111)
!14111 = !{!14112, !14114, !14115, !14116, !14117, !14118, !14119, !14120, !14121, !14122, !14123}
!14112 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !14110, file: !835, line: 53, baseType: !14113, size: 64)
!14113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14110, size: 64)
!14114 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !14110, file: !835, line: 53, baseType: !14113, size: 64, offset: 64)
!14115 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !14110, file: !835, line: 55, baseType: !372, size: 64, offset: 128)
!14116 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !14110, file: !835, line: 57, baseType: !692, size: 512, offset: 192)
!14117 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !14110, file: !835, line: 58, baseType: !399, size: 16, offset: 704)
!14118 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !14110, file: !835, line: 59, baseType: !399, size: 16, offset: 720)
!14119 = !DIDerivedType(tag: DW_TAG_member, name: "influence", scope: !14110, file: !835, line: 61, baseType: !396, size: 32, offset: 736)
!14120 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !14110, file: !835, line: 63, baseType: !396, size: 32, offset: 768)
!14121 = !DIDerivedType(tag: DW_TAG_member, name: "efra", scope: !14110, file: !835, line: 64, baseType: !396, size: 32, offset: 800)
!14122 = !DIDerivedType(tag: DW_TAG_member, name: "blendin", scope: !14110, file: !835, line: 65, baseType: !396, size: 32, offset: 832)
!14123 = !DIDerivedType(tag: DW_TAG_member, name: "blendout", scope: !14110, file: !835, line: 66, baseType: !396, size: 32, offset: 864)
!14124 = !DILocation(line: 604, column: 13, scope: !14102)
!14125 = !DILocation(line: 607, column: 12, scope: !14102)
!14126 = !DILocation(line: 607, column: 35, scope: !14102)
!14127 = !DILocation(line: 607, column: 2, scope: !14102)
!14128 = !DILocation(line: 610, column: 12, scope: !14129)
!14129 = distinct !DILexicalBlock(scope: !14102, file: !3, line: 610, column: 2)
!14130 = !DILocation(line: 610, column: 24, scope: !14129)
!14131 = !DILocation(line: 610, column: 10, scope: !14129)
!14132 = !DILocation(line: 610, column: 7, scope: !14129)
!14133 = !DILocation(line: 610, column: 31, scope: !14134)
!14134 = distinct !DILexicalBlock(scope: !14129, file: !3, line: 610, column: 2)
!14135 = !DILocation(line: 610, column: 2, scope: !14129)
!14136 = !DILocalVariable(name: "fmi", scope: !14137, file: !3, line: 611, type: !14138)
!14137 = distinct !DILexicalBlock(scope: !14134, file: !3, line: 610, column: 52)
!14138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14139, size: 64)
!14139 = !DIDerivedType(tag: DW_TAG_typedef, name: "FModifierTypeInfo", file: !14140, line: 144, baseType: !14141)
!14140 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_fcurve.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!14141 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FModifierTypeInfo", file: !14140, line: 116, size: 1600, elements: !14142)
!14142 = !{!14143, !14144, !14145, !14146, !14147, !14148, !14149, !14153, !14157, !14158, !14159, !14163, !14167, !14173}
!14143 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !14141, file: !14140, line: 118, baseType: !399, size: 16)
!14144 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !14141, file: !14140, line: 119, baseType: !399, size: 16, offset: 16)
!14145 = !DIDerivedType(tag: DW_TAG_member, name: "acttype", scope: !14141, file: !14140, line: 120, baseType: !399, size: 16, offset: 32)
!14146 = !DIDerivedType(tag: DW_TAG_member, name: "requires", scope: !14141, file: !14140, line: 121, baseType: !399, size: 16, offset: 48)
!14147 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !14141, file: !14140, line: 122, baseType: !692, size: 512, offset: 64)
!14148 = !DIDerivedType(tag: DW_TAG_member, name: "structName", scope: !14141, file: !14140, line: 123, baseType: !692, size: 512, offset: 576)
!14149 = !DIDerivedType(tag: DW_TAG_member, name: "free_data", scope: !14141, file: !14140, line: 127, baseType: !14150, size: 64, offset: 1088)
!14150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14151, size: 64)
!14151 = !DISubroutineType(types: !14152)
!14152 = !{null, !14113}
!14153 = !DIDerivedType(tag: DW_TAG_member, name: "copy_data", scope: !14141, file: !14140, line: 129, baseType: !14154, size: 64, offset: 1152)
!14154 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14155, size: 64)
!14155 = !DISubroutineType(types: !14156)
!14156 = !{null, !14113, !14113}
!14157 = !DIDerivedType(tag: DW_TAG_member, name: "new_data", scope: !14141, file: !14140, line: 131, baseType: !1244, size: 64, offset: 1216)
!14158 = !DIDerivedType(tag: DW_TAG_member, name: "verify_data", scope: !14141, file: !14140, line: 133, baseType: !14150, size: 64, offset: 1280)
!14159 = !DIDerivedType(tag: DW_TAG_member, name: "evaluate_modifier_time", scope: !14141, file: !14140, line: 137, baseType: !14160, size: 64, offset: 1344)
!14160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14161, size: 64)
!14161 = !DISubroutineType(types: !14162)
!14162 = !{!396, !13849, !14113, !396, !396}
!14163 = !DIDerivedType(tag: DW_TAG_member, name: "evaluate_modifier", scope: !14141, file: !14140, line: 139, baseType: !14164, size: 64, offset: 1408)
!14164 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14165, size: 64)
!14165 = !DISubroutineType(types: !14166)
!14166 = !{null, !13849, !14113, !975, !396}
!14167 = !DIDerivedType(tag: DW_TAG_member, name: "evaluate_modifier_time_storage", scope: !14141, file: !14140, line: 142, baseType: !14168, size: 64, offset: 1472)
!14168 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14169, size: 64)
!14169 = !DISubroutineType(types: !14170)
!14170 = !{!396, !14171, !13849, !14113, !396, !396}
!14171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14172, size: 64)
!14172 = !DIDerivedType(tag: DW_TAG_typedef, name: "FModifierStackStorage", file: !14140, line: 103, baseType: !543)
!14173 = !DIDerivedType(tag: DW_TAG_member, name: "evaluate_modifier_storage", scope: !14141, file: !14140, line: 143, baseType: !14174, size: 64, offset: 1536)
!14174 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14175, size: 64)
!14175 = !DISubroutineType(types: !14176)
!14176 = !{null, !14171, !13849, !14113, !975, !396}
!14177 = !DILocation(line: 611, column: 22, scope: !14137)
!14178 = !DILocation(line: 611, column: 50, scope: !14137)
!14179 = !DILocation(line: 611, column: 27, scope: !14137)
!14180 = !DILocation(line: 614, column: 7, scope: !14181)
!14181 = distinct !DILexicalBlock(scope: !14137, file: !3, line: 614, column: 7)
!14182 = !DILocation(line: 614, column: 11, scope: !14181)
!14183 = !DILocation(line: 614, column: 14, scope: !14181)
!14184 = !DILocation(line: 614, column: 19, scope: !14181)
!14185 = !DILocation(line: 614, column: 7, scope: !14137)
!14186 = !DILocation(line: 616, column: 16, scope: !14187)
!14187 = distinct !DILexicalBlock(scope: !14181, file: !3, line: 614, column: 25)
!14188 = !DILocation(line: 616, column: 26, scope: !14187)
!14189 = !DILocation(line: 616, column: 31, scope: !14187)
!14190 = !DILocation(line: 616, column: 46, scope: !14187)
!14191 = !DILocation(line: 616, column: 51, scope: !14187)
!14192 = !DILocation(line: 616, column: 4, scope: !14187)
!14193 = !DILocation(line: 619, column: 12, scope: !14187)
!14194 = !DILocation(line: 619, column: 17, scope: !14187)
!14195 = !DILocation(line: 619, column: 4, scope: !14187)
!14196 = !DILocalVariable(name: "data", scope: !14197, file: !3, line: 622, type: !5129)
!14197 = distinct !DILexicalBlock(scope: !14198, file: !3, line: 621, column: 5)
!14198 = distinct !DILexicalBlock(scope: !14187, file: !3, line: 619, column: 23)
!14199 = !DILocation(line: 622, column: 22, scope: !14197)
!14200 = !DILocation(line: 622, column: 46, scope: !14197)
!14201 = !DILocation(line: 622, column: 51, scope: !14197)
!14202 = !DILocation(line: 622, column: 28, scope: !14197)
!14203 = !DILocation(line: 625, column: 10, scope: !14204)
!14204 = distinct !DILexicalBlock(scope: !14197, file: !3, line: 625, column: 10)
!14205 = !DILocation(line: 625, column: 16, scope: !14204)
!14206 = !DILocation(line: 625, column: 10, scope: !14197)
!14207 = !DILocation(line: 626, column: 17, scope: !14204)
!14208 = !DILocation(line: 626, column: 42, scope: !14204)
!14209 = !DILocation(line: 626, column: 48, scope: !14204)
!14210 = !DILocation(line: 626, column: 41, scope: !14204)
!14211 = !DILocation(line: 626, column: 40, scope: !14204)
!14212 = !DILocation(line: 626, column: 27, scope: !14204)
!14213 = !DILocation(line: 626, column: 60, scope: !14204)
!14214 = !DILocation(line: 626, column: 66, scope: !14204)
!14215 = !DILocation(line: 626, column: 7, scope: !14204)
!14216 = !DILocation(line: 628, column: 6, scope: !14198)
!14217 = !DILocalVariable(name: "data", scope: !14218, file: !3, line: 631, type: !5138)
!14218 = distinct !DILexicalBlock(scope: !14198, file: !3, line: 630, column: 5)
!14219 = !DILocation(line: 631, column: 21, scope: !14218)
!14220 = !DILocation(line: 631, column: 44, scope: !14218)
!14221 = !DILocation(line: 631, column: 49, scope: !14218)
!14222 = !DILocation(line: 631, column: 27, scope: !14218)
!14223 = !DILocation(line: 634, column: 10, scope: !14224)
!14224 = distinct !DILexicalBlock(scope: !14218, file: !3, line: 634, column: 10)
!14225 = !DILocation(line: 634, column: 16, scope: !14224)
!14226 = !DILocation(line: 634, column: 10, scope: !14218)
!14227 = !DILocation(line: 635, column: 19, scope: !14224)
!14228 = !DILocation(line: 635, column: 49, scope: !14224)
!14229 = !DILocation(line: 635, column: 55, scope: !14224)
!14230 = !DILocation(line: 635, column: 64, scope: !14224)
!14231 = !DILocation(line: 635, column: 70, scope: !14224)
!14232 = !DILocation(line: 635, column: 7, scope: !14224)
!14233 = !DILocation(line: 637, column: 6, scope: !14198)
!14234 = !DILocalVariable(name: "data", scope: !14235, file: !3, line: 640, type: !5156)
!14235 = distinct !DILexicalBlock(scope: !14198, file: !3, line: 639, column: 5)
!14236 = !DILocation(line: 640, column: 19, scope: !14235)
!14237 = !DILocation(line: 640, column: 41, scope: !14235)
!14238 = !DILocation(line: 640, column: 46, scope: !14235)
!14239 = !DILocation(line: 640, column: 26, scope: !14235)
!14240 = !DILocation(line: 644, column: 24, scope: !14235)
!14241 = !DILocation(line: 644, column: 30, scope: !14235)
!14242 = !DILocation(line: 644, column: 36, scope: !14235)
!14243 = !DILocation(line: 644, column: 6, scope: !14235)
!14244 = !DILocation(line: 646, column: 6, scope: !14198)
!14245 = !DILocation(line: 648, column: 3, scope: !14187)
!14246 = !DILocation(line: 649, column: 2, scope: !14137)
!14247 = !DILocation(line: 610, column: 41, scope: !14134)
!14248 = !DILocation(line: 610, column: 46, scope: !14134)
!14249 = !DILocation(line: 610, column: 39, scope: !14134)
!14250 = !DILocation(line: 610, column: 2, scope: !14134)
!14251 = distinct !{!14251, !14135, !14252}
!14252 = !DILocation(line: 649, column: 2, scope: !14129)
!14253 = !DILocation(line: 650, column: 1, scope: !14102)
!14254 = distinct !DISubprogram(name: "write_nlastrips", scope: !3, file: !3, line: 738, type: !7324, scopeLine: 739, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !5641)
!14255 = !DILocalVariable(name: "wd", arg: 1, scope: !14254, file: !3, line: 738, type: !5820)
!14256 = !DILocation(line: 738, column: 40, scope: !14254)
!14257 = !DILocalVariable(name: "strips", arg: 2, scope: !14254, file: !3, line: 738, type: !565)
!14258 = !DILocation(line: 738, column: 54, scope: !14254)
!14259 = !DILocalVariable(name: "strip", scope: !14254, file: !3, line: 740, type: !864)
!14260 = !DILocation(line: 740, column: 12, scope: !14254)
!14261 = !DILocation(line: 742, column: 12, scope: !14254)
!14262 = !DILocation(line: 742, column: 34, scope: !14254)
!14263 = !DILocation(line: 742, column: 2, scope: !14254)
!14264 = !DILocation(line: 743, column: 14, scope: !14265)
!14265 = distinct !DILexicalBlock(scope: !14254, file: !3, line: 743, column: 2)
!14266 = !DILocation(line: 743, column: 22, scope: !14265)
!14267 = !DILocation(line: 743, column: 12, scope: !14265)
!14268 = !DILocation(line: 743, column: 7, scope: !14265)
!14269 = !DILocation(line: 743, column: 29, scope: !14270)
!14270 = distinct !DILexicalBlock(scope: !14265, file: !3, line: 743, column: 2)
!14271 = !DILocation(line: 743, column: 2, scope: !14265)
!14272 = !DILocation(line: 745, column: 17, scope: !14273)
!14273 = distinct !DILexicalBlock(scope: !14270, file: !3, line: 743, column: 56)
!14274 = !DILocation(line: 745, column: 22, scope: !14273)
!14275 = !DILocation(line: 745, column: 29, scope: !14273)
!14276 = !DILocation(line: 745, column: 3, scope: !14273)
!14277 = !DILocation(line: 746, column: 20, scope: !14273)
!14278 = !DILocation(line: 746, column: 25, scope: !14273)
!14279 = !DILocation(line: 746, column: 32, scope: !14273)
!14280 = !DILocation(line: 746, column: 3, scope: !14273)
!14281 = !DILocation(line: 749, column: 19, scope: !14273)
!14282 = !DILocation(line: 749, column: 24, scope: !14273)
!14283 = !DILocation(line: 749, column: 31, scope: !14273)
!14284 = !DILocation(line: 749, column: 3, scope: !14273)
!14285 = !DILocation(line: 750, column: 2, scope: !14273)
!14286 = !DILocation(line: 743, column: 43, scope: !14270)
!14287 = !DILocation(line: 743, column: 50, scope: !14270)
!14288 = !DILocation(line: 743, column: 41, scope: !14270)
!14289 = !DILocation(line: 743, column: 2, scope: !14270)
!14290 = distinct !{!14290, !14271, !14291}
!14291 = !DILocation(line: 750, column: 2, scope: !14265)
!14292 = !DILocation(line: 751, column: 1, scope: !14254)
!14293 = distinct !DISubprogram(name: "write_keyingsets", scope: !3, file: !3, line: 718, type: !7324, scopeLine: 719, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !5641)
!14294 = !DILocalVariable(name: "wd", arg: 1, scope: !14293, file: !3, line: 718, type: !5820)
!14295 = !DILocation(line: 718, column: 41, scope: !14293)
!14296 = !DILocalVariable(name: "list", arg: 2, scope: !14293, file: !3, line: 718, type: !565)
!14297 = !DILocation(line: 718, column: 55, scope: !14293)
!14298 = !DILocalVariable(name: "ks", scope: !14293, file: !3, line: 720, type: !14299)
!14299 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14300, size: 64)
!14300 = !DIDerivedType(tag: DW_TAG_typedef, name: "KeyingSet", file: !835, line: 777, baseType: !14301)
!14301 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "KeyingSet", file: !835, line: 763, size: 3776, elements: !14302)
!14302 = !{!14303, !14305, !14306, !14307, !14308, !14309, !14313, !14314, !14315, !14316}
!14303 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !14301, file: !835, line: 764, baseType: !14304, size: 64)
!14304 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14301, size: 64)
!14305 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !14301, file: !835, line: 764, baseType: !14304, size: 64, offset: 64)
!14306 = !DIDerivedType(tag: DW_TAG_member, name: "paths", scope: !14301, file: !835, line: 766, baseType: !388, size: 128, offset: 128)
!14307 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !14301, file: !835, line: 768, baseType: !692, size: 512, offset: 256)
!14308 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !14301, file: !835, line: 769, baseType: !692, size: 512, offset: 768)
!14309 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !14301, file: !835, line: 770, baseType: !14310, size: 1920, offset: 1280)
!14310 = !DICompositeType(tag: DW_TAG_array_type, baseType: !375, size: 1920, elements: !14311)
!14311 = !{!14312}
!14312 = !DISubrange(count: 240)
!14313 = !DIDerivedType(tag: DW_TAG_member, name: "typeinfo", scope: !14301, file: !835, line: 771, baseType: !692, size: 512, offset: 3200)
!14314 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !14301, file: !835, line: 773, baseType: !399, size: 16, offset: 3712)
!14315 = !DIDerivedType(tag: DW_TAG_member, name: "keyingflag", scope: !14301, file: !835, line: 774, baseType: !399, size: 16, offset: 3728)
!14316 = !DIDerivedType(tag: DW_TAG_member, name: "active_path", scope: !14301, file: !835, line: 776, baseType: !98, size: 32, offset: 3744)
!14317 = !DILocation(line: 720, column: 13, scope: !14293)
!14318 = !DILocalVariable(name: "ksp", scope: !14293, file: !3, line: 721, type: !14319)
!14319 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14320, size: 64)
!14320 = !DIDerivedType(tag: DW_TAG_typedef, name: "KS_Path", file: !835, line: 729, baseType: !14321)
!14321 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "KS_Path", file: !835, line: 713, size: 896, elements: !14322)
!14322 = !{!14323, !14325, !14326, !14327, !14328, !14329, !14330, !14331, !14332, !14333, !14334}
!14323 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !14321, file: !835, line: 714, baseType: !14324, size: 64)
!14324 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14321, size: 64)
!14325 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !14321, file: !835, line: 714, baseType: !14324, size: 64, offset: 64)
!14326 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !14321, file: !835, line: 716, baseType: !441, size: 64, offset: 128)
!14327 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !14321, file: !835, line: 717, baseType: !692, size: 512, offset: 192)
!14328 = !DIDerivedType(tag: DW_TAG_member, name: "idtype", scope: !14321, file: !835, line: 719, baseType: !98, size: 32, offset: 704)
!14329 = !DIDerivedType(tag: DW_TAG_member, name: "groupmode", scope: !14321, file: !835, line: 721, baseType: !399, size: 16, offset: 736)
!14330 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !14321, file: !835, line: 722, baseType: !399, size: 16, offset: 752)
!14331 = !DIDerivedType(tag: DW_TAG_member, name: "rna_path", scope: !14321, file: !835, line: 724, baseType: !501, size: 64, offset: 768)
!14332 = !DIDerivedType(tag: DW_TAG_member, name: "array_index", scope: !14321, file: !835, line: 725, baseType: !98, size: 32, offset: 832)
!14333 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !14321, file: !835, line: 727, baseType: !399, size: 16, offset: 864)
!14334 = !DIDerivedType(tag: DW_TAG_member, name: "keyingflag", scope: !14321, file: !835, line: 728, baseType: !399, size: 16, offset: 880)
!14335 = !DILocation(line: 721, column: 11, scope: !14293)
!14336 = !DILocation(line: 723, column: 11, scope: !14337)
!14337 = distinct !DILexicalBlock(scope: !14293, file: !3, line: 723, column: 2)
!14338 = !DILocation(line: 723, column: 17, scope: !14337)
!14339 = !DILocation(line: 723, column: 9, scope: !14337)
!14340 = !DILocation(line: 723, column: 7, scope: !14337)
!14341 = !DILocation(line: 723, column: 24, scope: !14342)
!14342 = distinct !DILexicalBlock(scope: !14337, file: !3, line: 723, column: 2)
!14343 = !DILocation(line: 723, column: 2, scope: !14337)
!14344 = !DILocation(line: 725, column: 15, scope: !14345)
!14345 = distinct !DILexicalBlock(scope: !14342, file: !3, line: 723, column: 42)
!14346 = !DILocation(line: 725, column: 41, scope: !14345)
!14347 = !DILocation(line: 725, column: 3, scope: !14345)
!14348 = !DILocation(line: 728, column: 13, scope: !14349)
!14349 = distinct !DILexicalBlock(scope: !14345, file: !3, line: 728, column: 3)
!14350 = !DILocation(line: 728, column: 17, scope: !14349)
!14351 = !DILocation(line: 728, column: 23, scope: !14349)
!14352 = !DILocation(line: 728, column: 11, scope: !14349)
!14353 = !DILocation(line: 728, column: 8, scope: !14349)
!14354 = !DILocation(line: 728, column: 30, scope: !14355)
!14355 = distinct !DILexicalBlock(scope: !14349, file: !3, line: 728, column: 3)
!14356 = !DILocation(line: 728, column: 3, scope: !14349)
!14357 = !DILocation(line: 730, column: 16, scope: !14358)
!14358 = distinct !DILexicalBlock(scope: !14355, file: !3, line: 728, column: 51)
!14359 = !DILocation(line: 730, column: 40, scope: !14358)
!14360 = !DILocation(line: 730, column: 4, scope: !14358)
!14361 = !DILocation(line: 732, column: 8, scope: !14362)
!14362 = distinct !DILexicalBlock(scope: !14358, file: !3, line: 732, column: 8)
!14363 = !DILocation(line: 732, column: 13, scope: !14362)
!14364 = !DILocation(line: 732, column: 8, scope: !14358)
!14365 = !DILocation(line: 733, column: 15, scope: !14362)
!14366 = !DILocation(line: 733, column: 32, scope: !14362)
!14367 = !DILocation(line: 733, column: 37, scope: !14362)
!14368 = !DILocation(line: 733, column: 25, scope: !14362)
!14369 = !DILocation(line: 733, column: 46, scope: !14362)
!14370 = !DILocation(line: 733, column: 50, scope: !14362)
!14371 = !DILocation(line: 733, column: 55, scope: !14362)
!14372 = !DILocation(line: 733, column: 5, scope: !14362)
!14373 = !DILocation(line: 734, column: 3, scope: !14358)
!14374 = !DILocation(line: 728, column: 40, scope: !14355)
!14375 = !DILocation(line: 728, column: 45, scope: !14355)
!14376 = !DILocation(line: 728, column: 38, scope: !14355)
!14377 = !DILocation(line: 728, column: 3, scope: !14355)
!14378 = distinct !{!14378, !14356, !14379}
!14379 = !DILocation(line: 734, column: 3, scope: !14349)
!14380 = !DILocation(line: 735, column: 2, scope: !14345)
!14381 = !DILocation(line: 723, column: 32, scope: !14342)
!14382 = !DILocation(line: 723, column: 36, scope: !14342)
!14383 = !DILocation(line: 723, column: 30, scope: !14342)
!14384 = !DILocation(line: 723, column: 2, scope: !14342)
!14385 = distinct !{!14385, !14343, !14386}
!14386 = !DILocation(line: 735, column: 2, scope: !14337)
!14387 = !DILocation(line: 736, column: 1, scope: !14293)
!14388 = distinct !DISubprogram(name: "write_sequence_modifiers", scope: !3, file: !3, line: 2263, type: !7324, scopeLine: 2264, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !5641)
!14389 = !DILocalVariable(name: "wd", arg: 1, scope: !14388, file: !3, line: 2263, type: !5820)
!14390 = !DILocation(line: 2263, column: 49, scope: !14388)
!14391 = !DILocalVariable(name: "modbase", arg: 2, scope: !14388, file: !3, line: 2263, type: !565)
!14392 = !DILocation(line: 2263, column: 63, scope: !14388)
!14393 = !DILocalVariable(name: "smd", scope: !14388, file: !3, line: 2265, type: !14394)
!14394 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5167, size: 64)
!14395 = !DILocation(line: 2265, column: 24, scope: !14388)
!14396 = !DILocation(line: 2267, column: 13, scope: !14397)
!14397 = distinct !DILexicalBlock(scope: !14388, file: !3, line: 2267, column: 2)
!14398 = !DILocation(line: 2267, column: 22, scope: !14397)
!14399 = !DILocation(line: 2267, column: 11, scope: !14397)
!14400 = !DILocation(line: 2267, column: 7, scope: !14397)
!14401 = !DILocation(line: 2267, column: 29, scope: !14402)
!14402 = distinct !DILexicalBlock(scope: !14397, file: !3, line: 2267, column: 2)
!14403 = !DILocation(line: 2267, column: 2, scope: !14397)
!14404 = !DILocalVariable(name: "smti", scope: !14405, file: !3, line: 2268, type: !14406)
!14405 = distinct !DILexicalBlock(scope: !14402, file: !3, line: 2267, column: 51)
!14406 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14407, size: 64)
!14407 = !DIDerivedType(tag: DW_TAG_typedef, name: "SequenceModifierTypeInfo", file: !8781, line: 417, baseType: !14408)
!14408 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SequenceModifierTypeInfo", file: !8781, line: 393, size: 1344, elements: !14409)
!14409 = !{!14410, !14411, !14412, !14413, !14417, !14418, !14422}
!14410 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !14408, file: !8781, line: 395, baseType: !692, size: 512)
!14411 = !DIDerivedType(tag: DW_TAG_member, name: "struct_name", scope: !14408, file: !8781, line: 398, baseType: !692, size: 512, offset: 512)
!14412 = !DIDerivedType(tag: DW_TAG_member, name: "struct_size", scope: !14408, file: !8781, line: 401, baseType: !98, size: 32, offset: 1024)
!14413 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !14408, file: !8781, line: 404, baseType: !14414, size: 64, offset: 1088)
!14414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14415, size: 64)
!14415 = !DISubroutineType(types: !14416)
!14416 = !{null, !5171}
!14417 = !DIDerivedType(tag: DW_TAG_member, name: "free_data", scope: !14408, file: !8781, line: 410, baseType: !14414, size: 64, offset: 1152)
!14418 = !DIDerivedType(tag: DW_TAG_member, name: "copy_data", scope: !14408, file: !8781, line: 413, baseType: !14419, size: 64, offset: 1216)
!14419 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14420, size: 64)
!14420 = !DISubroutineType(types: !14421)
!14421 = !{null, !5171, !5171}
!14422 = !DIDerivedType(tag: DW_TAG_member, name: "apply", scope: !14408, file: !8781, line: 416, baseType: !14423, size: 64, offset: 1280)
!14423 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14424, size: 64)
!14424 = !DISubroutineType(types: !14425)
!14425 = !{null, !5171, !1451, !1451}
!14426 = !DILocation(line: 2268, column: 29, scope: !14405)
!14427 = !DILocation(line: 2268, column: 72, scope: !14405)
!14428 = !DILocation(line: 2268, column: 77, scope: !14405)
!14429 = !DILocation(line: 2268, column: 36, scope: !14405)
!14430 = !DILocation(line: 2270, column: 7, scope: !14431)
!14431 = distinct !DILexicalBlock(scope: !14405, file: !3, line: 2270, column: 7)
!14432 = !DILocation(line: 2270, column: 7, scope: !14405)
!14433 = !DILocation(line: 2271, column: 16, scope: !14434)
!14434 = distinct !DILexicalBlock(scope: !14431, file: !3, line: 2270, column: 13)
!14435 = !DILocation(line: 2271, column: 26, scope: !14434)
!14436 = !DILocation(line: 2271, column: 32, scope: !14434)
!14437 = !DILocation(line: 2271, column: 48, scope: !14434)
!14438 = !DILocation(line: 2271, column: 4, scope: !14434)
!14439 = !DILocation(line: 2273, column: 8, scope: !14440)
!14440 = distinct !DILexicalBlock(scope: !14434, file: !3, line: 2273, column: 8)
!14441 = !DILocation(line: 2273, column: 13, scope: !14440)
!14442 = !DILocation(line: 2273, column: 18, scope: !14440)
!14443 = !DILocation(line: 2273, column: 8, scope: !14434)
!14444 = !DILocalVariable(name: "cmd", scope: !14445, file: !3, line: 2274, type: !5162)
!14445 = distinct !DILexicalBlock(scope: !14440, file: !3, line: 2273, column: 45)
!14446 = !DILocation(line: 2274, column: 25, scope: !14445)
!14447 = !DILocation(line: 2274, column: 54, scope: !14445)
!14448 = !DILocation(line: 2274, column: 31, scope: !14445)
!14449 = !DILocation(line: 2276, column: 24, scope: !14445)
!14450 = !DILocation(line: 2276, column: 29, scope: !14445)
!14451 = !DILocation(line: 2276, column: 34, scope: !14445)
!14452 = !DILocation(line: 2276, column: 5, scope: !14445)
!14453 = !DILocation(line: 2277, column: 4, scope: !14445)
!14454 = !DILocation(line: 2278, column: 13, scope: !14455)
!14455 = distinct !DILexicalBlock(scope: !14440, file: !3, line: 2278, column: 13)
!14456 = !DILocation(line: 2278, column: 18, scope: !14455)
!14457 = !DILocation(line: 2278, column: 23, scope: !14455)
!14458 = !DILocation(line: 2278, column: 13, scope: !14440)
!14459 = !DILocalVariable(name: "hcmd", scope: !14460, file: !3, line: 2279, type: !5181)
!14460 = distinct !DILexicalBlock(scope: !14455, file: !3, line: 2278, column: 54)
!14461 = !DILocation(line: 2279, column: 29, scope: !14460)
!14462 = !DILocation(line: 2279, column: 63, scope: !14460)
!14463 = !DILocation(line: 2279, column: 36, scope: !14460)
!14464 = !DILocation(line: 2281, column: 24, scope: !14460)
!14465 = !DILocation(line: 2281, column: 29, scope: !14460)
!14466 = !DILocation(line: 2281, column: 35, scope: !14460)
!14467 = !DILocation(line: 2281, column: 5, scope: !14460)
!14468 = !DILocation(line: 2282, column: 4, scope: !14460)
!14469 = !DILocation(line: 2283, column: 3, scope: !14434)
!14470 = !DILocation(line: 2285, column: 16, scope: !14471)
!14471 = distinct !DILexicalBlock(scope: !14431, file: !3, line: 2284, column: 8)
!14472 = !DILocation(line: 2285, column: 53, scope: !14471)
!14473 = !DILocation(line: 2285, column: 4, scope: !14471)
!14474 = !DILocation(line: 2287, column: 2, scope: !14405)
!14475 = !DILocation(line: 2267, column: 40, scope: !14402)
!14476 = !DILocation(line: 2267, column: 45, scope: !14402)
!14477 = !DILocation(line: 2267, column: 38, scope: !14402)
!14478 = !DILocation(line: 2267, column: 2, scope: !14402)
!14479 = distinct !{!14479, !14403, !14480}
!14480 = !DILocation(line: 2287, column: 2, scope: !14397)
!14481 = !DILocation(line: 2288, column: 1, scope: !14388)
!14482 = distinct !DISubprogram(name: "write_nodetree", scope: !3, file: !3, line: 858, type: !14483, scopeLine: 859, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !5641)
!14483 = !DISubroutineType(types: !14484)
!14484 = !{null, !5820, !5196}
!14485 = !DILocalVariable(name: "wd", arg: 1, scope: !14482, file: !3, line: 858, type: !5820)
!14486 = !DILocation(line: 858, column: 39, scope: !14482)
!14487 = !DILocalVariable(name: "ntree", arg: 2, scope: !14482, file: !3, line: 858, type: !5196)
!14488 = !DILocation(line: 858, column: 54, scope: !14482)
!14489 = !DILocalVariable(name: "node", scope: !14482, file: !3, line: 860, type: !1268)
!14490 = !DILocation(line: 860, column: 9, scope: !14482)
!14491 = !DILocalVariable(name: "sock", scope: !14482, file: !3, line: 861, type: !1272)
!14492 = !DILocation(line: 861, column: 15, scope: !14482)
!14493 = !DILocalVariable(name: "link", scope: !14482, file: !3, line: 862, type: !7002)
!14494 = !DILocation(line: 862, column: 13, scope: !14482)
!14495 = !DILocation(line: 866, column: 6, scope: !14496)
!14496 = distinct !DILexicalBlock(scope: !14482, file: !3, line: 866, column: 6)
!14497 = !DILocation(line: 866, column: 13, scope: !14496)
!14498 = !DILocation(line: 866, column: 6, scope: !14482)
!14499 = !DILocation(line: 866, column: 33, scope: !14496)
!14500 = !DILocation(line: 866, column: 37, scope: !14496)
!14501 = !DILocation(line: 866, column: 44, scope: !14496)
!14502 = !DILocation(line: 866, column: 18, scope: !14496)
!14503 = !DILocation(line: 868, column: 14, scope: !14504)
!14504 = distinct !DILexicalBlock(scope: !14482, file: !3, line: 868, column: 2)
!14505 = !DILocation(line: 868, column: 21, scope: !14504)
!14506 = !DILocation(line: 868, column: 27, scope: !14504)
!14507 = !DILocation(line: 868, column: 12, scope: !14504)
!14508 = !DILocation(line: 868, column: 7, scope: !14504)
!14509 = !DILocation(line: 868, column: 34, scope: !14510)
!14510 = distinct !DILexicalBlock(scope: !14504, file: !3, line: 868, column: 2)
!14511 = !DILocation(line: 868, column: 2, scope: !14504)
!14512 = !DILocation(line: 869, column: 15, scope: !14513)
!14513 = distinct !DILexicalBlock(scope: !14510, file: !3, line: 868, column: 59)
!14514 = !DILocation(line: 869, column: 37, scope: !14513)
!14515 = !DILocation(line: 869, column: 3, scope: !14513)
!14516 = !DILocation(line: 871, column: 7, scope: !14517)
!14517 = distinct !DILexicalBlock(scope: !14513, file: !3, line: 871, column: 7)
!14518 = !DILocation(line: 871, column: 13, scope: !14517)
!14519 = !DILocation(line: 871, column: 7, scope: !14513)
!14520 = !DILocation(line: 872, column: 22, scope: !14517)
!14521 = !DILocation(line: 872, column: 28, scope: !14517)
!14522 = !DILocation(line: 872, column: 34, scope: !14517)
!14523 = !DILocation(line: 872, column: 4, scope: !14517)
!14524 = !DILocation(line: 874, column: 14, scope: !14525)
!14525 = distinct !DILexicalBlock(scope: !14513, file: !3, line: 874, column: 3)
!14526 = !DILocation(line: 874, column: 20, scope: !14525)
!14527 = !DILocation(line: 874, column: 27, scope: !14525)
!14528 = !DILocation(line: 874, column: 12, scope: !14525)
!14529 = !DILocation(line: 874, column: 8, scope: !14525)
!14530 = !DILocation(line: 874, column: 34, scope: !14531)
!14531 = distinct !DILexicalBlock(scope: !14525, file: !3, line: 874, column: 3)
!14532 = !DILocation(line: 874, column: 3, scope: !14525)
!14533 = !DILocation(line: 875, column: 22, scope: !14531)
!14534 = !DILocation(line: 875, column: 26, scope: !14531)
!14535 = !DILocation(line: 875, column: 33, scope: !14531)
!14536 = !DILocation(line: 875, column: 39, scope: !14531)
!14537 = !DILocation(line: 875, column: 4, scope: !14531)
!14538 = !DILocation(line: 874, column: 46, scope: !14531)
!14539 = !DILocation(line: 874, column: 52, scope: !14531)
!14540 = !DILocation(line: 874, column: 44, scope: !14531)
!14541 = !DILocation(line: 874, column: 3, scope: !14531)
!14542 = distinct !{!14542, !14532, !14543}
!14543 = !DILocation(line: 875, column: 43, scope: !14525)
!14544 = !DILocation(line: 876, column: 14, scope: !14545)
!14545 = distinct !DILexicalBlock(scope: !14513, file: !3, line: 876, column: 3)
!14546 = !DILocation(line: 876, column: 20, scope: !14545)
!14547 = !DILocation(line: 876, column: 28, scope: !14545)
!14548 = !DILocation(line: 876, column: 12, scope: !14545)
!14549 = !DILocation(line: 876, column: 8, scope: !14545)
!14550 = !DILocation(line: 876, column: 35, scope: !14551)
!14551 = distinct !DILexicalBlock(scope: !14545, file: !3, line: 876, column: 3)
!14552 = !DILocation(line: 876, column: 3, scope: !14545)
!14553 = !DILocation(line: 877, column: 22, scope: !14551)
!14554 = !DILocation(line: 877, column: 26, scope: !14551)
!14555 = !DILocation(line: 877, column: 33, scope: !14551)
!14556 = !DILocation(line: 877, column: 39, scope: !14551)
!14557 = !DILocation(line: 877, column: 4, scope: !14551)
!14558 = !DILocation(line: 876, column: 47, scope: !14551)
!14559 = !DILocation(line: 876, column: 53, scope: !14551)
!14560 = !DILocation(line: 876, column: 45, scope: !14551)
!14561 = !DILocation(line: 876, column: 3, scope: !14551)
!14562 = distinct !{!14562, !14552, !14563}
!14563 = !DILocation(line: 877, column: 43, scope: !14545)
!14564 = !DILocation(line: 879, column: 15, scope: !14565)
!14565 = distinct !DILexicalBlock(scope: !14513, file: !3, line: 879, column: 3)
!14566 = !DILocation(line: 879, column: 21, scope: !14565)
!14567 = !DILocation(line: 879, column: 36, scope: !14565)
!14568 = !DILocation(line: 879, column: 13, scope: !14565)
!14569 = !DILocation(line: 879, column: 8, scope: !14565)
!14570 = !DILocation(line: 879, column: 43, scope: !14571)
!14571 = distinct !DILexicalBlock(scope: !14565, file: !3, line: 879, column: 3)
!14572 = !DILocation(line: 879, column: 3, scope: !14565)
!14573 = !DILocation(line: 880, column: 16, scope: !14571)
!14574 = !DILocation(line: 880, column: 42, scope: !14571)
!14575 = !DILocation(line: 880, column: 4, scope: !14571)
!14576 = !DILocation(line: 879, column: 56, scope: !14571)
!14577 = !DILocation(line: 879, column: 62, scope: !14571)
!14578 = !DILocation(line: 879, column: 54, scope: !14571)
!14579 = !DILocation(line: 879, column: 3, scope: !14571)
!14580 = distinct !{!14580, !14572, !14581}
!14581 = !DILocation(line: 880, column: 46, scope: !14565)
!14582 = !DILocation(line: 881, column: 7, scope: !14583)
!14583 = distinct !DILexicalBlock(scope: !14513, file: !3, line: 881, column: 7)
!14584 = !DILocation(line: 881, column: 13, scope: !14583)
!14585 = !DILocation(line: 881, column: 7, scope: !14513)
!14586 = !DILocation(line: 883, column: 8, scope: !14587)
!14587 = distinct !DILexicalBlock(scope: !14588, file: !3, line: 883, column: 8)
!14588 = distinct !DILexicalBlock(scope: !14583, file: !3, line: 881, column: 22)
!14589 = !DILocation(line: 883, column: 15, scope: !14587)
!14590 = !DILocation(line: 883, column: 19, scope: !14587)
!14591 = !DILocation(line: 883, column: 34, scope: !14587)
!14592 = !DILocation(line: 883, column: 38, scope: !14587)
!14593 = !DILocation(line: 883, column: 44, scope: !14587)
!14594 = !DILocation(line: 883, column: 48, scope: !14587)
!14595 = !DILocation(line: 883, column: 68, scope: !14587)
!14596 = !DILocation(line: 883, column: 71, scope: !14587)
!14597 = !DILocation(line: 883, column: 77, scope: !14587)
!14598 = !DILocation(line: 883, column: 81, scope: !14587)
!14599 = !DILocation(line: 883, column: 8, scope: !14588)
!14600 = !DILocation(line: 884, column: 24, scope: !14587)
!14601 = !DILocation(line: 884, column: 28, scope: !14587)
!14602 = !DILocation(line: 884, column: 34, scope: !14587)
!14603 = !DILocation(line: 884, column: 5, scope: !14587)
!14604 = !DILocation(line: 885, column: 13, scope: !14605)
!14605 = distinct !DILexicalBlock(scope: !14587, file: !3, line: 885, column: 13)
!14606 = !DILocation(line: 885, column: 20, scope: !14605)
!14607 = !DILocation(line: 885, column: 24, scope: !14605)
!14608 = !DILocation(line: 885, column: 39, scope: !14605)
!14609 = !DILocation(line: 885, column: 42, scope: !14605)
!14610 = !DILocation(line: 885, column: 48, scope: !14605)
!14611 = !DILocation(line: 885, column: 52, scope: !14605)
!14612 = !DILocation(line: 885, column: 13, scope: !14587)
!14613 = !DILocalVariable(name: "nss", scope: !14614, file: !3, line: 886, type: !5187)
!14614 = distinct !DILexicalBlock(scope: !14605, file: !3, line: 885, column: 70)
!14615 = !DILocation(line: 886, column: 23, scope: !14614)
!14616 = !DILocation(line: 886, column: 49, scope: !14614)
!14617 = !DILocation(line: 886, column: 55, scope: !14614)
!14618 = !DILocation(line: 886, column: 29, scope: !14614)
!14619 = !DILocation(line: 887, column: 9, scope: !14620)
!14620 = distinct !DILexicalBlock(scope: !14614, file: !3, line: 887, column: 9)
!14621 = !DILocation(line: 887, column: 14, scope: !14620)
!14622 = !DILocation(line: 887, column: 9, scope: !14614)
!14623 = !DILocation(line: 888, column: 16, scope: !14620)
!14624 = !DILocation(line: 888, column: 33, scope: !14620)
!14625 = !DILocation(line: 888, column: 38, scope: !14620)
!14626 = !DILocation(line: 888, column: 26, scope: !14620)
!14627 = !DILocation(line: 888, column: 47, scope: !14620)
!14628 = !DILocation(line: 888, column: 51, scope: !14620)
!14629 = !DILocation(line: 888, column: 56, scope: !14620)
!14630 = !DILocation(line: 888, column: 6, scope: !14620)
!14631 = !DILocation(line: 889, column: 17, scope: !14614)
!14632 = !DILocation(line: 889, column: 27, scope: !14614)
!14633 = !DILocation(line: 889, column: 33, scope: !14614)
!14634 = !DILocation(line: 889, column: 43, scope: !14614)
!14635 = !DILocation(line: 889, column: 59, scope: !14614)
!14636 = !DILocation(line: 889, column: 65, scope: !14614)
!14637 = !DILocation(line: 889, column: 5, scope: !14614)
!14638 = !DILocation(line: 890, column: 4, scope: !14614)
!14639 = !DILocation(line: 891, column: 13, scope: !14640)
!14640 = distinct !DILexicalBlock(scope: !14605, file: !3, line: 891, column: 13)
!14641 = !DILocation(line: 891, column: 20, scope: !14640)
!14642 = !DILocation(line: 891, column: 24, scope: !14640)
!14643 = !DILocation(line: 891, column: 41, scope: !14640)
!14644 = !DILocation(line: 891, column: 44, scope: !14640)
!14645 = !DILocation(line: 891, column: 13, scope: !14605)
!14646 = !DILocation(line: 892, column: 24, scope: !14640)
!14647 = !DILocation(line: 892, column: 28, scope: !14640)
!14648 = !DILocation(line: 892, column: 34, scope: !14640)
!14649 = !DILocation(line: 892, column: 5, scope: !14640)
!14650 = !DILocation(line: 893, column: 13, scope: !14651)
!14651 = distinct !DILexicalBlock(scope: !14640, file: !3, line: 893, column: 13)
!14652 = !DILocation(line: 893, column: 20, scope: !14651)
!14653 = !DILocation(line: 893, column: 24, scope: !14651)
!14654 = !DILocation(line: 893, column: 40, scope: !14651)
!14655 = !DILocation(line: 893, column: 44, scope: !14651)
!14656 = !DILocation(line: 893, column: 50, scope: !14651)
!14657 = !DILocation(line: 893, column: 54, scope: !14651)
!14658 = !DILocation(line: 893, column: 75, scope: !14651)
!14659 = !DILocation(line: 893, column: 78, scope: !14651)
!14660 = !DILocation(line: 893, column: 84, scope: !14651)
!14661 = !DILocation(line: 893, column: 88, scope: !14651)
!14662 = !DILocation(line: 893, column: 13, scope: !14640)
!14663 = !DILocation(line: 894, column: 24, scope: !14651)
!14664 = !DILocation(line: 894, column: 28, scope: !14651)
!14665 = !DILocation(line: 894, column: 34, scope: !14651)
!14666 = !DILocation(line: 894, column: 5, scope: !14651)
!14667 = !DILocation(line: 895, column: 13, scope: !14668)
!14668 = distinct !DILexicalBlock(scope: !14651, file: !3, line: 895, column: 13)
!14669 = !DILocation(line: 895, column: 20, scope: !14668)
!14670 = !DILocation(line: 895, column: 24, scope: !14668)
!14671 = !DILocation(line: 895, column: 41, scope: !14668)
!14672 = !DILocation(line: 895, column: 44, scope: !14668)
!14673 = !DILocation(line: 895, column: 50, scope: !14668)
!14674 = !DILocation(line: 895, column: 54, scope: !14668)
!14675 = !DILocation(line: 895, column: 13, scope: !14651)
!14676 = !DILocation(line: 897, column: 4, scope: !14677)
!14677 = distinct !DILexicalBlock(scope: !14668, file: !3, line: 895, column: 82)
!14678 = !DILocation(line: 899, column: 17, scope: !14668)
!14679 = !DILocation(line: 899, column: 27, scope: !14668)
!14680 = !DILocation(line: 899, column: 33, scope: !14668)
!14681 = !DILocation(line: 899, column: 43, scope: !14668)
!14682 = !DILocation(line: 899, column: 59, scope: !14668)
!14683 = !DILocation(line: 899, column: 65, scope: !14668)
!14684 = !DILocation(line: 899, column: 5, scope: !14668)
!14685 = !DILocation(line: 900, column: 3, scope: !14588)
!14686 = !DILocation(line: 902, column: 7, scope: !14687)
!14687 = distinct !DILexicalBlock(scope: !14513, file: !3, line: 902, column: 7)
!14688 = !DILocation(line: 902, column: 13, scope: !14687)
!14689 = !DILocation(line: 902, column: 17, scope: !14687)
!14690 = !DILocation(line: 902, column: 7, scope: !14513)
!14691 = !DILocation(line: 904, column: 16, scope: !14692)
!14692 = distinct !DILexicalBlock(scope: !14693, file: !3, line: 904, column: 4)
!14693 = distinct !DILexicalBlock(scope: !14687, file: !3, line: 902, column: 41)
!14694 = !DILocation(line: 904, column: 22, scope: !14692)
!14695 = !DILocation(line: 904, column: 29, scope: !14692)
!14696 = !DILocation(line: 904, column: 14, scope: !14692)
!14697 = !DILocation(line: 904, column: 9, scope: !14692)
!14698 = !DILocation(line: 904, column: 36, scope: !14699)
!14699 = distinct !DILexicalBlock(scope: !14692, file: !3, line: 904, column: 4)
!14700 = !DILocation(line: 904, column: 4, scope: !14692)
!14701 = !DILocation(line: 905, column: 17, scope: !14699)
!14702 = !DILocation(line: 905, column: 58, scope: !14699)
!14703 = !DILocation(line: 905, column: 64, scope: !14699)
!14704 = !DILocation(line: 905, column: 5, scope: !14699)
!14705 = !DILocation(line: 904, column: 49, scope: !14699)
!14706 = !DILocation(line: 904, column: 55, scope: !14699)
!14707 = !DILocation(line: 904, column: 47, scope: !14699)
!14708 = !DILocation(line: 904, column: 4, scope: !14699)
!14709 = distinct !{!14709, !14700, !14710}
!14710 = !DILocation(line: 905, column: 71, scope: !14692)
!14711 = !DILocation(line: 906, column: 3, scope: !14693)
!14712 = !DILocation(line: 907, column: 7, scope: !14713)
!14713 = distinct !DILexicalBlock(scope: !14513, file: !3, line: 907, column: 7)
!14714 = !DILocation(line: 907, column: 13, scope: !14713)
!14715 = !DILocation(line: 907, column: 17, scope: !14713)
!14716 = !DILocation(line: 907, column: 7, scope: !14513)
!14717 = !DILocation(line: 909, column: 16, scope: !14718)
!14718 = distinct !DILexicalBlock(scope: !14719, file: !3, line: 909, column: 4)
!14719 = distinct !DILexicalBlock(scope: !14713, file: !3, line: 907, column: 35)
!14720 = !DILocation(line: 909, column: 22, scope: !14718)
!14721 = !DILocation(line: 909, column: 30, scope: !14718)
!14722 = !DILocation(line: 909, column: 14, scope: !14718)
!14723 = !DILocation(line: 909, column: 9, scope: !14718)
!14724 = !DILocation(line: 909, column: 37, scope: !14725)
!14725 = distinct !DILexicalBlock(scope: !14718, file: !3, line: 909, column: 4)
!14726 = !DILocation(line: 909, column: 4, scope: !14718)
!14727 = !DILocation(line: 910, column: 17, scope: !14725)
!14728 = !DILocation(line: 910, column: 48, scope: !14725)
!14729 = !DILocation(line: 910, column: 54, scope: !14725)
!14730 = !DILocation(line: 910, column: 5, scope: !14725)
!14731 = !DILocation(line: 909, column: 50, scope: !14725)
!14732 = !DILocation(line: 909, column: 56, scope: !14725)
!14733 = !DILocation(line: 909, column: 48, scope: !14725)
!14734 = !DILocation(line: 909, column: 4, scope: !14725)
!14735 = distinct !{!14735, !14726, !14736}
!14736 = !DILocation(line: 910, column: 61, scope: !14718)
!14737 = !DILocation(line: 911, column: 3, scope: !14719)
!14738 = !DILocation(line: 912, column: 2, scope: !14513)
!14739 = !DILocation(line: 868, column: 47, scope: !14510)
!14740 = !DILocation(line: 868, column: 53, scope: !14510)
!14741 = !DILocation(line: 868, column: 45, scope: !14510)
!14742 = !DILocation(line: 868, column: 2, scope: !14510)
!14743 = distinct !{!14743, !14511, !14744}
!14744 = !DILocation(line: 912, column: 2, scope: !14504)
!14745 = !DILocation(line: 914, column: 13, scope: !14746)
!14746 = distinct !DILexicalBlock(scope: !14482, file: !3, line: 914, column: 2)
!14747 = !DILocation(line: 914, column: 20, scope: !14746)
!14748 = !DILocation(line: 914, column: 26, scope: !14746)
!14749 = !DILocation(line: 914, column: 11, scope: !14746)
!14750 = !DILocation(line: 914, column: 7, scope: !14746)
!14751 = !DILocation(line: 914, column: 33, scope: !14752)
!14752 = distinct !DILexicalBlock(scope: !14746, file: !3, line: 914, column: 2)
!14753 = !DILocation(line: 914, column: 2, scope: !14746)
!14754 = !DILocation(line: 915, column: 15, scope: !14752)
!14755 = !DILocation(line: 915, column: 41, scope: !14752)
!14756 = !DILocation(line: 915, column: 3, scope: !14752)
!14757 = !DILocation(line: 914, column: 45, scope: !14752)
!14758 = !DILocation(line: 914, column: 51, scope: !14752)
!14759 = !DILocation(line: 914, column: 43, scope: !14752)
!14760 = !DILocation(line: 914, column: 2, scope: !14752)
!14761 = distinct !{!14761, !14753, !14762}
!14762 = !DILocation(line: 915, column: 45, scope: !14746)
!14763 = !DILocation(line: 917, column: 14, scope: !14764)
!14764 = distinct !DILexicalBlock(scope: !14482, file: !3, line: 917, column: 2)
!14765 = !DILocation(line: 917, column: 21, scope: !14764)
!14766 = !DILocation(line: 917, column: 28, scope: !14764)
!14767 = !DILocation(line: 917, column: 12, scope: !14764)
!14768 = !DILocation(line: 917, column: 7, scope: !14764)
!14769 = !DILocation(line: 917, column: 35, scope: !14770)
!14770 = distinct !DILexicalBlock(scope: !14764, file: !3, line: 917, column: 2)
!14771 = !DILocation(line: 917, column: 2, scope: !14764)
!14772 = !DILocation(line: 918, column: 31, scope: !14770)
!14773 = !DILocation(line: 918, column: 35, scope: !14770)
!14774 = !DILocation(line: 918, column: 42, scope: !14770)
!14775 = !DILocation(line: 918, column: 3, scope: !14770)
!14776 = !DILocation(line: 917, column: 48, scope: !14770)
!14777 = !DILocation(line: 917, column: 54, scope: !14770)
!14778 = !DILocation(line: 917, column: 46, scope: !14770)
!14779 = !DILocation(line: 917, column: 2, scope: !14770)
!14780 = distinct !{!14780, !14771, !14781}
!14781 = !DILocation(line: 918, column: 46, scope: !14764)
!14782 = !DILocation(line: 919, column: 14, scope: !14783)
!14783 = distinct !DILexicalBlock(scope: !14482, file: !3, line: 919, column: 2)
!14784 = !DILocation(line: 919, column: 21, scope: !14783)
!14785 = !DILocation(line: 919, column: 29, scope: !14783)
!14786 = !DILocation(line: 919, column: 12, scope: !14783)
!14787 = !DILocation(line: 919, column: 7, scope: !14783)
!14788 = !DILocation(line: 919, column: 36, scope: !14789)
!14789 = distinct !DILexicalBlock(scope: !14783, file: !3, line: 919, column: 2)
!14790 = !DILocation(line: 919, column: 2, scope: !14783)
!14791 = !DILocation(line: 920, column: 31, scope: !14789)
!14792 = !DILocation(line: 920, column: 35, scope: !14789)
!14793 = !DILocation(line: 920, column: 42, scope: !14789)
!14794 = !DILocation(line: 920, column: 3, scope: !14789)
!14795 = !DILocation(line: 919, column: 49, scope: !14789)
!14796 = !DILocation(line: 919, column: 55, scope: !14789)
!14797 = !DILocation(line: 919, column: 47, scope: !14789)
!14798 = !DILocation(line: 919, column: 2, scope: !14789)
!14799 = distinct !{!14799, !14790, !14800}
!14800 = !DILocation(line: 920, column: 46, scope: !14783)
!14801 = !DILocation(line: 921, column: 1, scope: !14482)
!14802 = distinct !DISubprogram(name: "write_view_settings", scope: !3, file: !3, line: 2290, type: !14803, scopeLine: 2291, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !5641)
!14803 = !DISubroutineType(types: !14804)
!14804 = !{null, !5820, !14805}
!14805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2684, size: 64)
!14806 = !DILocalVariable(name: "wd", arg: 1, scope: !14802, file: !3, line: 2290, type: !5820)
!14807 = !DILocation(line: 2290, column: 44, scope: !14802)
!14808 = !DILocalVariable(name: "view_settings", arg: 2, scope: !14802, file: !3, line: 2290, type: !14805)
!14809 = !DILocation(line: 2290, column: 74, scope: !14802)
!14810 = !DILocation(line: 2292, column: 6, scope: !14811)
!14811 = distinct !DILexicalBlock(scope: !14802, file: !3, line: 2292, column: 6)
!14812 = !DILocation(line: 2292, column: 21, scope: !14811)
!14813 = !DILocation(line: 2292, column: 6, scope: !14802)
!14814 = !DILocation(line: 2293, column: 22, scope: !14815)
!14815 = distinct !DILexicalBlock(scope: !14811, file: !3, line: 2292, column: 36)
!14816 = !DILocation(line: 2293, column: 26, scope: !14815)
!14817 = !DILocation(line: 2293, column: 41, scope: !14815)
!14818 = !DILocation(line: 2293, column: 3, scope: !14815)
!14819 = !DILocation(line: 2294, column: 2, scope: !14815)
!14820 = !DILocation(line: 2295, column: 1, scope: !14802)
!14821 = distinct !DISubprogram(name: "write_pointcaches", scope: !3, file: !3, line: 1069, type: !7324, scopeLine: 1070, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !5641)
!14822 = !DILocalVariable(name: "wd", arg: 1, scope: !14821, file: !3, line: 1069, type: !5820)
!14823 = !DILocation(line: 1069, column: 42, scope: !14821)
!14824 = !DILocalVariable(name: "ptcaches", arg: 2, scope: !14821, file: !3, line: 1069, type: !565)
!14825 = !DILocation(line: 1069, column: 56, scope: !14821)
!14826 = !DILocalVariable(name: "cache", scope: !14821, file: !3, line: 1071, type: !14827)
!14827 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14828, size: 64)
!14828 = !DIDerivedType(tag: DW_TAG_typedef, name: "PointCache", file: !3058, line: 209, baseType: !3085)
!14829 = !DILocation(line: 1071, column: 14, scope: !14821)
!14830 = !DILocation(line: 1071, column: 22, scope: !14821)
!14831 = !DILocation(line: 1071, column: 32, scope: !14821)
!14832 = !DILocalVariable(name: "i", scope: !14821, file: !3, line: 1072, type: !98)
!14833 = !DILocation(line: 1072, column: 6, scope: !14821)
!14834 = !DILocation(line: 1074, column: 2, scope: !14821)
!14835 = !DILocation(line: 1074, column: 9, scope: !14836)
!14836 = distinct !DILexicalBlock(scope: !14837, file: !3, line: 1074, column: 2)
!14837 = distinct !DILexicalBlock(scope: !14821, file: !3, line: 1074, column: 2)
!14838 = !DILocation(line: 1074, column: 2, scope: !14837)
!14839 = !DILocation(line: 1075, column: 15, scope: !14840)
!14840 = distinct !DILexicalBlock(scope: !14836, file: !3, line: 1074, column: 35)
!14841 = !DILocation(line: 1075, column: 42, scope: !14840)
!14842 = !DILocation(line: 1075, column: 3, scope: !14840)
!14843 = !DILocation(line: 1077, column: 8, scope: !14844)
!14844 = distinct !DILexicalBlock(scope: !14840, file: !3, line: 1077, column: 7)
!14845 = !DILocation(line: 1077, column: 15, scope: !14844)
!14846 = !DILocation(line: 1077, column: 20, scope: !14844)
!14847 = !DILocation(line: 1077, column: 41, scope: !14844)
!14848 = !DILocation(line: 1077, column: 7, scope: !14840)
!14849 = !DILocalVariable(name: "pm", scope: !14850, file: !3, line: 1078, type: !14851)
!14850 = distinct !DILexicalBlock(scope: !14844, file: !3, line: 1077, column: 46)
!14851 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14852, size: 64)
!14852 = !DIDerivedType(tag: DW_TAG_typedef, name: "PTCacheMem", file: !3058, line: 168, baseType: !3323)
!14853 = !DILocation(line: 1078, column: 16, scope: !14850)
!14854 = !DILocation(line: 1078, column: 21, scope: !14850)
!14855 = !DILocation(line: 1078, column: 28, scope: !14850)
!14856 = !DILocation(line: 1078, column: 38, scope: !14850)
!14857 = !DILocation(line: 1080, column: 4, scope: !14850)
!14858 = !DILocation(line: 1080, column: 11, scope: !14859)
!14859 = distinct !DILexicalBlock(scope: !14860, file: !3, line: 1080, column: 4)
!14860 = distinct !DILexicalBlock(scope: !14850, file: !3, line: 1080, column: 4)
!14861 = !DILocation(line: 1080, column: 4, scope: !14860)
!14862 = !DILocalVariable(name: "extra", scope: !14863, file: !3, line: 1081, type: !14864)
!14863 = distinct !DILexicalBlock(scope: !14859, file: !3, line: 1080, column: 28)
!14864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14865, size: 64)
!14865 = !DIDerivedType(tag: DW_TAG_typedef, name: "PTCacheExtra", file: !3058, line: 157, baseType: !14866)
!14866 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PTCacheExtra", file: !3058, line: 153, size: 256, elements: !14867)
!14867 = !{!14868, !14870, !14871, !14872, !14873}
!14868 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !14866, file: !3058, line: 154, baseType: !14869, size: 64)
!14869 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14866, size: 64)
!14870 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !14866, file: !3058, line: 154, baseType: !14869, size: 64, offset: 64)
!14871 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !14866, file: !3058, line: 155, baseType: !7, size: 32, offset: 128)
!14872 = !DIDerivedType(tag: DW_TAG_member, name: "totdata", scope: !14866, file: !3058, line: 155, baseType: !7, size: 32, offset: 160)
!14873 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !14866, file: !3058, line: 156, baseType: !372, size: 64, offset: 192)
!14874 = !DILocation(line: 1081, column: 19, scope: !14863)
!14875 = !DILocation(line: 1081, column: 27, scope: !14863)
!14876 = !DILocation(line: 1081, column: 31, scope: !14863)
!14877 = !DILocation(line: 1081, column: 41, scope: !14863)
!14878 = !DILocation(line: 1083, column: 17, scope: !14863)
!14879 = !DILocation(line: 1083, column: 44, scope: !14863)
!14880 = !DILocation(line: 1083, column: 5, scope: !14863)
!14881 = !DILocation(line: 1085, column: 11, scope: !14882)
!14882 = distinct !DILexicalBlock(scope: !14863, file: !3, line: 1085, column: 5)
!14883 = !DILocation(line: 1085, column: 10, scope: !14882)
!14884 = !DILocation(line: 1085, column: 15, scope: !14885)
!14885 = distinct !DILexicalBlock(scope: !14882, file: !3, line: 1085, column: 5)
!14886 = !DILocation(line: 1085, column: 16, scope: !14885)
!14887 = !DILocation(line: 1085, column: 5, scope: !14882)
!14888 = !DILocation(line: 1086, column: 10, scope: !14889)
!14889 = distinct !DILexicalBlock(scope: !14890, file: !3, line: 1086, column: 10)
!14890 = distinct !DILexicalBlock(scope: !14885, file: !3, line: 1085, column: 38)
!14891 = !DILocation(line: 1086, column: 14, scope: !14889)
!14892 = !DILocation(line: 1086, column: 19, scope: !14889)
!14893 = !DILocation(line: 1086, column: 22, scope: !14889)
!14894 = !DILocation(line: 1086, column: 25, scope: !14889)
!14895 = !DILocation(line: 1086, column: 29, scope: !14889)
!14896 = !DILocation(line: 1086, column: 46, scope: !14889)
!14897 = !DILocation(line: 1086, column: 44, scope: !14889)
!14898 = !DILocation(line: 1086, column: 40, scope: !14889)
!14899 = !DILocation(line: 1086, column: 10, scope: !14890)
!14900 = !DILocation(line: 1087, column: 31, scope: !14901)
!14901 = distinct !DILexicalBlock(scope: !14902, file: !3, line: 1087, column: 11)
!14902 = distinct !DILexicalBlock(scope: !14889, file: !3, line: 1086, column: 50)
!14903 = !DILocation(line: 1087, column: 11, scope: !14901)
!14904 = !DILocation(line: 1087, column: 36, scope: !14901)
!14905 = !DILocation(line: 1087, column: 11, scope: !14902)
!14906 = !DILocation(line: 1088, column: 18, scope: !14901)
!14907 = !DILocation(line: 1088, column: 28, scope: !14901)
!14908 = !DILocation(line: 1088, column: 43, scope: !14901)
!14909 = !DILocation(line: 1088, column: 47, scope: !14901)
!14910 = !DILocation(line: 1088, column: 52, scope: !14901)
!14911 = !DILocation(line: 1088, column: 57, scope: !14901)
!14912 = !DILocation(line: 1088, column: 61, scope: !14901)
!14913 = !DILocation(line: 1088, column: 66, scope: !14901)
!14914 = !DILocation(line: 1088, column: 8, scope: !14901)
!14915 = !DILocation(line: 1090, column: 20, scope: !14901)
!14916 = !DILocation(line: 1090, column: 50, scope: !14901)
!14917 = !DILocation(line: 1090, column: 30, scope: !14901)
!14918 = !DILocation(line: 1090, column: 54, scope: !14901)
!14919 = !DILocation(line: 1090, column: 58, scope: !14901)
!14920 = !DILocation(line: 1090, column: 68, scope: !14901)
!14921 = !DILocation(line: 1090, column: 72, scope: !14901)
!14922 = !DILocation(line: 1090, column: 77, scope: !14901)
!14923 = !DILocation(line: 1090, column: 8, scope: !14901)
!14924 = !DILocation(line: 1091, column: 6, scope: !14902)
!14925 = !DILocation(line: 1092, column: 5, scope: !14890)
!14926 = !DILocation(line: 1085, column: 34, scope: !14885)
!14927 = !DILocation(line: 1085, column: 5, scope: !14885)
!14928 = distinct !{!14928, !14887, !14929}
!14929 = !DILocation(line: 1092, column: 5, scope: !14882)
!14930 = !DILocation(line: 1094, column: 5, scope: !14863)
!14931 = !DILocation(line: 1094, column: 12, scope: !14932)
!14932 = distinct !DILexicalBlock(scope: !14933, file: !3, line: 1094, column: 5)
!14933 = distinct !DILexicalBlock(scope: !14863, file: !3, line: 1094, column: 5)
!14934 = !DILocation(line: 1094, column: 5, scope: !14933)
!14935 = !DILocation(line: 1095, column: 31, scope: !14936)
!14936 = distinct !DILexicalBlock(scope: !14937, file: !3, line: 1095, column: 10)
!14937 = distinct !DILexicalBlock(scope: !14932, file: !3, line: 1094, column: 38)
!14938 = !DILocation(line: 1095, column: 38, scope: !14936)
!14939 = !DILocation(line: 1095, column: 10, scope: !14936)
!14940 = !DILocation(line: 1095, column: 46, scope: !14936)
!14941 = !DILocation(line: 1095, column: 10, scope: !14937)
!14942 = !DILocation(line: 1096, column: 7, scope: !14936)
!14943 = !DILocation(line: 1097, column: 18, scope: !14937)
!14944 = !DILocation(line: 1097, column: 47, scope: !14937)
!14945 = !DILocation(line: 1097, column: 6, scope: !14937)
!14946 = !DILocation(line: 1098, column: 18, scope: !14937)
!14947 = !DILocation(line: 1098, column: 49, scope: !14937)
!14948 = !DILocation(line: 1098, column: 56, scope: !14937)
!14949 = !DILocation(line: 1098, column: 28, scope: !14937)
!14950 = !DILocation(line: 1098, column: 63, scope: !14937)
!14951 = !DILocation(line: 1098, column: 70, scope: !14937)
!14952 = !DILocation(line: 1098, column: 79, scope: !14937)
!14953 = !DILocation(line: 1098, column: 86, scope: !14937)
!14954 = !DILocation(line: 1098, column: 6, scope: !14937)
!14955 = !DILocation(line: 1099, column: 5, scope: !14937)
!14956 = !DILocation(line: 1094, column: 25, scope: !14932)
!14957 = !DILocation(line: 1094, column: 32, scope: !14932)
!14958 = !DILocation(line: 1094, column: 24, scope: !14932)
!14959 = !DILocation(line: 1094, column: 5, scope: !14932)
!14960 = distinct !{!14960, !14934, !14961}
!14961 = !DILocation(line: 1099, column: 5, scope: !14933)
!14962 = !DILocation(line: 1100, column: 4, scope: !14863)
!14963 = !DILocation(line: 1080, column: 18, scope: !14859)
!14964 = !DILocation(line: 1080, column: 22, scope: !14859)
!14965 = !DILocation(line: 1080, column: 17, scope: !14859)
!14966 = !DILocation(line: 1080, column: 4, scope: !14859)
!14967 = distinct !{!14967, !14861, !14968}
!14968 = !DILocation(line: 1100, column: 4, scope: !14860)
!14969 = !DILocation(line: 1101, column: 3, scope: !14850)
!14970 = !DILocation(line: 1102, column: 2, scope: !14840)
!14971 = !DILocation(line: 1074, column: 22, scope: !14836)
!14972 = !DILocation(line: 1074, column: 29, scope: !14836)
!14973 = !DILocation(line: 1074, column: 21, scope: !14836)
!14974 = !DILocation(line: 1074, column: 2, scope: !14836)
!14975 = distinct !{!14975, !14838, !14976}
!14976 = !DILocation(line: 1102, column: 2, scope: !14837)
!14977 = !DILocation(line: 1103, column: 1, scope: !14821)
!14978 = distinct !DISubprogram(name: "write_node_socket", scope: !3, file: !3, line: 806, type: !14979, scopeLine: 807, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !5641)
!14979 = !DISubroutineType(types: !14980)
!14980 = !{null, !5820, !5196, !1268, !1272}
!14981 = !DILocalVariable(name: "wd", arg: 1, scope: !14978, file: !3, line: 806, type: !5820)
!14982 = !DILocation(line: 806, column: 42, scope: !14978)
!14983 = !DILocalVariable(name: "UNUSED_ntree", arg: 2, scope: !14978, file: !3, line: 806, type: !5196)
!14984 = !DILocation(line: 806, column: 57, scope: !14978)
!14985 = !DILocalVariable(name: "node", arg: 3, scope: !14978, file: !3, line: 806, type: !1268)
!14986 = !DILocation(line: 806, column: 79, scope: !14978)
!14987 = !DILocalVariable(name: "sock", arg: 4, scope: !14978, file: !3, line: 806, type: !1272)
!14988 = !DILocation(line: 806, column: 98, scope: !14978)
!14989 = !DILocation(line: 810, column: 2, scope: !14978)
!14990 = !DILocation(line: 810, column: 8, scope: !14978)
!14991 = !DILocation(line: 810, column: 19, scope: !14978)
!14992 = !DILocation(line: 812, column: 6, scope: !14993)
!14993 = distinct !DILexicalBlock(scope: !14978, file: !3, line: 812, column: 6)
!14994 = !DILocation(line: 812, column: 12, scope: !14993)
!14995 = !DILocation(line: 812, column: 17, scope: !14993)
!14996 = !DILocation(line: 812, column: 6, scope: !14978)
!14997 = !DILocalVariable(name: "ngroup", scope: !14998, file: !3, line: 813, type: !5196)
!14998 = distinct !DILexicalBlock(scope: !14993, file: !3, line: 812, column: 32)
!14999 = !DILocation(line: 813, column: 14, scope: !14998)
!15000 = !DILocation(line: 813, column: 36, scope: !14998)
!15001 = !DILocation(line: 813, column: 42, scope: !14998)
!15002 = !DILocation(line: 813, column: 23, scope: !14998)
!15003 = !DILocation(line: 814, column: 7, scope: !15004)
!15004 = distinct !DILexicalBlock(scope: !14998, file: !3, line: 814, column: 7)
!15005 = !DILocation(line: 814, column: 7, scope: !14998)
!15006 = !DILocation(line: 816, column: 47, scope: !15007)
!15007 = distinct !DILexicalBlock(scope: !15004, file: !3, line: 814, column: 15)
!15008 = !DILocation(line: 816, column: 55, scope: !15007)
!15009 = !DILocation(line: 816, column: 61, scope: !15007)
!15010 = !DILocation(line: 816, column: 69, scope: !15007)
!15011 = !DILocation(line: 816, column: 75, scope: !15007)
!15012 = !DILocation(line: 816, column: 22, scope: !15007)
!15013 = !DILocation(line: 816, column: 4, scope: !15007)
!15014 = !DILocation(line: 816, column: 10, scope: !15007)
!15015 = !DILocation(line: 816, column: 20, scope: !15007)
!15016 = !DILocation(line: 822, column: 22, scope: !15007)
!15017 = !DILocation(line: 822, column: 28, scope: !15007)
!15018 = !DILocation(line: 822, column: 39, scope: !15007)
!15019 = !DILocation(line: 822, column: 4, scope: !15007)
!15020 = !DILocation(line: 822, column: 10, scope: !15007)
!15021 = !DILocation(line: 822, column: 20, scope: !15007)
!15022 = !DILocation(line: 823, column: 3, scope: !15007)
!15023 = !DILocation(line: 824, column: 2, scope: !14998)
!15024 = !DILocation(line: 828, column: 14, scope: !14978)
!15025 = !DILocation(line: 828, column: 42, scope: !14978)
!15026 = !DILocation(line: 828, column: 2, scope: !14978)
!15027 = !DILocation(line: 830, column: 6, scope: !15028)
!15028 = distinct !DILexicalBlock(scope: !14978, file: !3, line: 830, column: 6)
!15029 = !DILocation(line: 830, column: 12, scope: !15028)
!15030 = !DILocation(line: 830, column: 6, scope: !14978)
!15031 = !DILocation(line: 831, column: 21, scope: !15028)
!15032 = !DILocation(line: 831, column: 27, scope: !15028)
!15033 = !DILocation(line: 831, column: 33, scope: !15028)
!15034 = !DILocation(line: 831, column: 3, scope: !15028)
!15035 = !DILocation(line: 833, column: 6, scope: !15036)
!15036 = distinct !DILexicalBlock(scope: !14978, file: !3, line: 833, column: 6)
!15037 = !DILocation(line: 833, column: 12, scope: !15036)
!15038 = !DILocation(line: 833, column: 6, scope: !14978)
!15039 = !DILocation(line: 834, column: 13, scope: !15036)
!15040 = !DILocation(line: 834, column: 23, scope: !15036)
!15041 = !DILocation(line: 834, column: 38, scope: !15036)
!15042 = !DILocation(line: 834, column: 44, scope: !15036)
!15043 = !DILocation(line: 834, column: 60, scope: !15036)
!15044 = !DILocation(line: 834, column: 66, scope: !15036)
!15045 = !DILocation(line: 834, column: 3, scope: !15036)
!15046 = !DILocation(line: 835, column: 1, scope: !14978)
!15047 = distinct !DISubprogram(name: "write_node_socket_interface", scope: !3, file: !3, line: 836, type: !15048, scopeLine: 837, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !5641)
!15048 = !DISubroutineType(types: !15049)
!15049 = !{null, !5820, !5196, !1272}
!15050 = !DILocalVariable(name: "wd", arg: 1, scope: !15047, file: !3, line: 836, type: !5820)
!15051 = !DILocation(line: 836, column: 52, scope: !15047)
!15052 = !DILocalVariable(name: "UNUSED_ntree", arg: 2, scope: !15047, file: !3, line: 836, type: !5196)
!15053 = !DILocation(line: 836, column: 67, scope: !15047)
!15054 = !DILocalVariable(name: "sock", arg: 3, scope: !15047, file: !3, line: 836, type: !1272)
!15055 = !DILocation(line: 836, column: 95, scope: !15047)
!15056 = !DILocation(line: 840, column: 2, scope: !15047)
!15057 = !DILocation(line: 840, column: 8, scope: !15047)
!15058 = !DILocation(line: 840, column: 19, scope: !15047)
!15059 = !DILocation(line: 843, column: 6, scope: !15060)
!15060 = distinct !DILexicalBlock(scope: !15047, file: !3, line: 843, column: 6)
!15061 = !DILocation(line: 843, column: 12, scope: !15060)
!15062 = !DILocation(line: 843, column: 26, scope: !15060)
!15063 = !DILocation(line: 843, column: 34, scope: !15060)
!15064 = !DILocation(line: 843, column: 37, scope: !15060)
!15065 = !DILocation(line: 843, column: 43, scope: !15060)
!15066 = !DILocation(line: 843, column: 6, scope: !15047)
!15067 = !DILocation(line: 844, column: 34, scope: !15068)
!15068 = distinct !DILexicalBlock(scope: !15060, file: !3, line: 843, column: 53)
!15069 = !DILocation(line: 844, column: 3, scope: !15068)
!15070 = !DILocation(line: 845, column: 2, scope: !15068)
!15071 = !DILocation(line: 849, column: 14, scope: !15047)
!15072 = !DILocation(line: 849, column: 42, scope: !15047)
!15073 = !DILocation(line: 849, column: 2, scope: !15047)
!15074 = !DILocation(line: 851, column: 6, scope: !15075)
!15075 = distinct !DILexicalBlock(scope: !15047, file: !3, line: 851, column: 6)
!15076 = !DILocation(line: 851, column: 12, scope: !15075)
!15077 = !DILocation(line: 851, column: 6, scope: !15047)
!15078 = !DILocation(line: 852, column: 21, scope: !15075)
!15079 = !DILocation(line: 852, column: 27, scope: !15075)
!15080 = !DILocation(line: 852, column: 33, scope: !15075)
!15081 = !DILocation(line: 852, column: 3, scope: !15075)
!15082 = !DILocation(line: 854, column: 6, scope: !15083)
!15083 = distinct !DILexicalBlock(scope: !15047, file: !3, line: 854, column: 6)
!15084 = !DILocation(line: 854, column: 12, scope: !15083)
!15085 = !DILocation(line: 854, column: 6, scope: !15047)
!15086 = !DILocation(line: 855, column: 13, scope: !15083)
!15087 = !DILocation(line: 855, column: 23, scope: !15083)
!15088 = !DILocation(line: 855, column: 38, scope: !15083)
!15089 = !DILocation(line: 855, column: 44, scope: !15083)
!15090 = !DILocation(line: 855, column: 60, scope: !15083)
!15091 = !DILocation(line: 855, column: 66, scope: !15083)
!15092 = !DILocation(line: 855, column: 3, scope: !15083)
!15093 = !DILocation(line: 856, column: 1, scope: !15047)
!15094 = distinct !DISubprogram(name: "write_previews", scope: !3, file: !3, line: 2069, type: !15095, scopeLine: 2070, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !5641)
!15095 = !DISubroutineType(types: !15096)
!15096 = !{null, !5820, !2361}
!15097 = !DILocalVariable(name: "wd", arg: 1, scope: !15094, file: !3, line: 2069, type: !5820)
!15098 = !DILocation(line: 2069, column: 39, scope: !15094)
!15099 = !DILocalVariable(name: "prv", arg: 2, scope: !15094, file: !3, line: 2069, type: !2361)
!15100 = !DILocation(line: 2069, column: 57, scope: !15094)
!15101 = !DILocation(line: 2071, column: 6, scope: !15102)
!15102 = distinct !DILexicalBlock(scope: !15094, file: !3, line: 2071, column: 6)
!15103 = !DILocation(line: 2071, column: 6, scope: !15094)
!15104 = !DILocalVariable(name: "w", scope: !15105, file: !3, line: 2072, type: !399)
!15105 = distinct !DILexicalBlock(scope: !15102, file: !3, line: 2071, column: 11)
!15106 = !DILocation(line: 2072, column: 9, scope: !15105)
!15107 = !DILocation(line: 2072, column: 13, scope: !15105)
!15108 = !DILocation(line: 2072, column: 18, scope: !15105)
!15109 = !DILocalVariable(name: "h", scope: !15105, file: !3, line: 2073, type: !399)
!15110 = !DILocation(line: 2073, column: 9, scope: !15105)
!15111 = !DILocation(line: 2073, column: 13, scope: !15105)
!15112 = !DILocation(line: 2073, column: 18, scope: !15105)
!15113 = !DILocalVariable(name: "rect", scope: !15105, file: !3, line: 2074, type: !1689)
!15114 = !DILocation(line: 2074, column: 17, scope: !15105)
!15115 = !DILocation(line: 2074, column: 24, scope: !15105)
!15116 = !DILocation(line: 2074, column: 29, scope: !15105)
!15117 = !DILocation(line: 2076, column: 11, scope: !15118)
!15118 = distinct !DILexicalBlock(scope: !15105, file: !3, line: 2076, column: 7)
!15119 = !DILocation(line: 2076, column: 16, scope: !15118)
!15120 = !DILocation(line: 2076, column: 7, scope: !15105)
!15121 = !DILocation(line: 2077, column: 4, scope: !15122)
!15122 = distinct !DILexicalBlock(scope: !15118, file: !3, line: 2076, column: 39)
!15123 = !DILocation(line: 2077, column: 9, scope: !15122)
!15124 = !DILocation(line: 2077, column: 14, scope: !15122)
!15125 = !DILocation(line: 2078, column: 4, scope: !15122)
!15126 = !DILocation(line: 2078, column: 9, scope: !15122)
!15127 = !DILocation(line: 2078, column: 14, scope: !15122)
!15128 = !DILocation(line: 2079, column: 4, scope: !15122)
!15129 = !DILocation(line: 2079, column: 9, scope: !15122)
!15130 = !DILocation(line: 2079, column: 17, scope: !15122)
!15131 = !DILocation(line: 2080, column: 3, scope: !15122)
!15132 = !DILocation(line: 2081, column: 15, scope: !15105)
!15133 = !DILocation(line: 2081, column: 44, scope: !15105)
!15134 = !DILocation(line: 2081, column: 3, scope: !15105)
!15135 = !DILocation(line: 2082, column: 7, scope: !15136)
!15136 = distinct !DILexicalBlock(scope: !15105, file: !3, line: 2082, column: 7)
!15137 = !DILocation(line: 2082, column: 12, scope: !15136)
!15138 = !DILocation(line: 2082, column: 7, scope: !15105)
!15139 = !DILocation(line: 2082, column: 31, scope: !15136)
!15140 = !DILocation(line: 2082, column: 41, scope: !15136)
!15141 = !DILocation(line: 2082, column: 46, scope: !15136)
!15142 = !DILocation(line: 2082, column: 51, scope: !15136)
!15143 = !DILocation(line: 2082, column: 56, scope: !15136)
!15144 = !DILocation(line: 2082, column: 50, scope: !15136)
!15145 = !DILocation(line: 2082, column: 60, scope: !15136)
!15146 = !DILocation(line: 2082, column: 83, scope: !15136)
!15147 = !DILocation(line: 2082, column: 88, scope: !15136)
!15148 = !DILocation(line: 2082, column: 21, scope: !15136)
!15149 = !DILocation(line: 2083, column: 7, scope: !15150)
!15150 = distinct !DILexicalBlock(scope: !15105, file: !3, line: 2083, column: 7)
!15151 = !DILocation(line: 2083, column: 12, scope: !15150)
!15152 = !DILocation(line: 2083, column: 7, scope: !15105)
!15153 = !DILocation(line: 2083, column: 31, scope: !15150)
!15154 = !DILocation(line: 2083, column: 41, scope: !15150)
!15155 = !DILocation(line: 2083, column: 46, scope: !15150)
!15156 = !DILocation(line: 2083, column: 51, scope: !15150)
!15157 = !DILocation(line: 2083, column: 56, scope: !15150)
!15158 = !DILocation(line: 2083, column: 50, scope: !15150)
!15159 = !DILocation(line: 2083, column: 60, scope: !15150)
!15160 = !DILocation(line: 2083, column: 83, scope: !15150)
!15161 = !DILocation(line: 2083, column: 88, scope: !15150)
!15162 = !DILocation(line: 2083, column: 21, scope: !15150)
!15163 = !DILocation(line: 2086, column: 11, scope: !15164)
!15164 = distinct !DILexicalBlock(scope: !15105, file: !3, line: 2086, column: 7)
!15165 = !DILocation(line: 2086, column: 16, scope: !15164)
!15166 = !DILocation(line: 2086, column: 7, scope: !15105)
!15167 = !DILocation(line: 2087, column: 16, scope: !15168)
!15168 = distinct !DILexicalBlock(scope: !15164, file: !3, line: 2086, column: 40)
!15169 = !DILocation(line: 2087, column: 4, scope: !15168)
!15170 = !DILocation(line: 2087, column: 9, scope: !15168)
!15171 = !DILocation(line: 2087, column: 14, scope: !15168)
!15172 = !DILocation(line: 2088, column: 16, scope: !15168)
!15173 = !DILocation(line: 2088, column: 4, scope: !15168)
!15174 = !DILocation(line: 2088, column: 9, scope: !15168)
!15175 = !DILocation(line: 2088, column: 14, scope: !15168)
!15176 = !DILocation(line: 2089, column: 19, scope: !15168)
!15177 = !DILocation(line: 2089, column: 4, scope: !15168)
!15178 = !DILocation(line: 2089, column: 9, scope: !15168)
!15179 = !DILocation(line: 2089, column: 17, scope: !15168)
!15180 = !DILocation(line: 2090, column: 3, scope: !15168)
!15181 = !DILocation(line: 2091, column: 2, scope: !15105)
!15182 = !DILocation(line: 2092, column: 1, scope: !15094)
!15183 = distinct !DISubprogram(name: "write_dverts", scope: !3, file: !3, line: 1823, type: !15184, scopeLine: 1824, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !5641)
!15184 = !DISubroutineType(types: !15185)
!15185 = !{null, !5820, !98, !15186}
!15186 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15187, size: 64)
!15187 = !DIDerivedType(tag: DW_TAG_typedef, name: "MDeformVert", file: !2468, line: 63, baseType: !2467)
!15188 = !DILocalVariable(name: "wd", arg: 1, scope: !15183, file: !3, line: 1823, type: !5820)
!15189 = !DILocation(line: 1823, column: 37, scope: !15183)
!15190 = !DILocalVariable(name: "count", arg: 2, scope: !15183, file: !3, line: 1823, type: !98)
!15191 = !DILocation(line: 1823, column: 45, scope: !15183)
!15192 = !DILocalVariable(name: "dvlist", arg: 3, scope: !15183, file: !3, line: 1823, type: !15186)
!15193 = !DILocation(line: 1823, column: 65, scope: !15183)
!15194 = !DILocation(line: 1825, column: 6, scope: !15195)
!15195 = distinct !DILexicalBlock(scope: !15183, file: !3, line: 1825, column: 6)
!15196 = !DILocation(line: 1825, column: 6, scope: !15183)
!15197 = !DILocalVariable(name: "i", scope: !15198, file: !3, line: 1826, type: !98)
!15198 = distinct !DILexicalBlock(scope: !15195, file: !3, line: 1825, column: 14)
!15199 = !DILocation(line: 1826, column: 7, scope: !15198)
!15200 = !DILocation(line: 1829, column: 15, scope: !15198)
!15201 = !DILocation(line: 1829, column: 40, scope: !15198)
!15202 = !DILocation(line: 1829, column: 47, scope: !15198)
!15203 = !DILocation(line: 1829, column: 3, scope: !15198)
!15204 = !DILocation(line: 1832, column: 9, scope: !15205)
!15205 = distinct !DILexicalBlock(scope: !15198, file: !3, line: 1832, column: 3)
!15206 = !DILocation(line: 1832, column: 8, scope: !15205)
!15207 = !DILocation(line: 1832, column: 13, scope: !15208)
!15208 = distinct !DILexicalBlock(scope: !15205, file: !3, line: 1832, column: 3)
!15209 = !DILocation(line: 1832, column: 15, scope: !15208)
!15210 = !DILocation(line: 1832, column: 14, scope: !15208)
!15211 = !DILocation(line: 1832, column: 3, scope: !15205)
!15212 = !DILocation(line: 1833, column: 8, scope: !15213)
!15213 = distinct !DILexicalBlock(scope: !15214, file: !3, line: 1833, column: 8)
!15214 = distinct !DILexicalBlock(scope: !15208, file: !3, line: 1832, column: 27)
!15215 = !DILocation(line: 1833, column: 15, scope: !15213)
!15216 = !DILocation(line: 1833, column: 18, scope: !15213)
!15217 = !DILocation(line: 1833, column: 8, scope: !15214)
!15218 = !DILocation(line: 1834, column: 17, scope: !15213)
!15219 = !DILocation(line: 1834, column: 44, scope: !15213)
!15220 = !DILocation(line: 1834, column: 51, scope: !15213)
!15221 = !DILocation(line: 1834, column: 54, scope: !15213)
!15222 = !DILocation(line: 1834, column: 65, scope: !15213)
!15223 = !DILocation(line: 1834, column: 72, scope: !15213)
!15224 = !DILocation(line: 1834, column: 75, scope: !15213)
!15225 = !DILocation(line: 1834, column: 5, scope: !15213)
!15226 = !DILocation(line: 1835, column: 3, scope: !15214)
!15227 = !DILocation(line: 1832, column: 23, scope: !15208)
!15228 = !DILocation(line: 1832, column: 3, scope: !15208)
!15229 = distinct !{!15229, !15211, !15230}
!15230 = !DILocation(line: 1835, column: 3, scope: !15205)
!15231 = !DILocation(line: 1836, column: 2, scope: !15198)
!15232 = !DILocation(line: 1837, column: 1, scope: !15183)
!15233 = distinct !DISubprogram(name: "write_bone", scope: !3, file: !3, line: 2804, type: !15234, scopeLine: 2805, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !5641)
!15234 = !DISubroutineType(types: !15235)
!15235 = !{null, !5820, !10645}
!15236 = !DILocalVariable(name: "wd", arg: 1, scope: !15233, file: !3, line: 2804, type: !5820)
!15237 = !DILocation(line: 2804, column: 35, scope: !15233)
!15238 = !DILocalVariable(name: "bone", arg: 2, scope: !15233, file: !3, line: 2804, type: !10645)
!15239 = !DILocation(line: 2804, column: 45, scope: !15233)
!15240 = !DILocalVariable(name: "cbone", scope: !15233, file: !3, line: 2806, type: !10645)
!15241 = !DILocation(line: 2806, column: 8, scope: !15233)
!15242 = !DILocation(line: 2809, column: 34, scope: !15233)
!15243 = !DILocation(line: 2809, column: 40, scope: !15233)
!15244 = !DILocation(line: 2809, column: 48, scope: !15233)
!15245 = !DILocation(line: 2809, column: 18, scope: !15233)
!15246 = !DILocation(line: 2809, column: 24, scope: !15233)
!15247 = !DILocation(line: 2809, column: 32, scope: !15233)
!15248 = !DILocation(line: 2809, column: 2, scope: !15233)
!15249 = !DILocation(line: 2809, column: 8, scope: !15233)
!15250 = !DILocation(line: 2809, column: 16, scope: !15233)
!15251 = !DILocation(line: 2812, column: 14, scope: !15233)
!15252 = !DILocation(line: 2812, column: 35, scope: !15233)
!15253 = !DILocation(line: 2812, column: 2, scope: !15233)
!15254 = !DILocation(line: 2816, column: 6, scope: !15255)
!15255 = distinct !DILexicalBlock(scope: !15233, file: !3, line: 2816, column: 6)
!15256 = !DILocation(line: 2816, column: 12, scope: !15255)
!15257 = !DILocation(line: 2816, column: 6, scope: !15233)
!15258 = !DILocation(line: 2817, column: 21, scope: !15255)
!15259 = !DILocation(line: 2817, column: 27, scope: !15255)
!15260 = !DILocation(line: 2817, column: 33, scope: !15255)
!15261 = !DILocation(line: 2817, column: 3, scope: !15255)
!15262 = !DILocation(line: 2820, column: 9, scope: !15233)
!15263 = !DILocation(line: 2820, column: 15, scope: !15233)
!15264 = !DILocation(line: 2820, column: 25, scope: !15233)
!15265 = !DILocation(line: 2820, column: 7, scope: !15233)
!15266 = !DILocation(line: 2821, column: 2, scope: !15233)
!15267 = !DILocation(line: 2821, column: 9, scope: !15233)
!15268 = !DILocation(line: 2822, column: 14, scope: !15269)
!15269 = distinct !DILexicalBlock(scope: !15233, file: !3, line: 2821, column: 16)
!15270 = !DILocation(line: 2822, column: 18, scope: !15269)
!15271 = !DILocation(line: 2822, column: 3, scope: !15269)
!15272 = !DILocation(line: 2823, column: 10, scope: !15269)
!15273 = !DILocation(line: 2823, column: 17, scope: !15269)
!15274 = !DILocation(line: 2823, column: 8, scope: !15269)
!15275 = distinct !{!15275, !15266, !15276}
!15276 = !DILocation(line: 2824, column: 2, scope: !15233)
!15277 = !DILocation(line: 2825, column: 1, scope: !15233)
!15278 = distinct !DISubprogram(name: "write_properties", scope: !3, file: !3, line: 1196, type: !7324, scopeLine: 1197, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !5641)
!15279 = !DILocalVariable(name: "wd", arg: 1, scope: !15278, file: !3, line: 1196, type: !5820)
!15280 = !DILocation(line: 1196, column: 41, scope: !15278)
!15281 = !DILocalVariable(name: "lb", arg: 2, scope: !15278, file: !3, line: 1196, type: !565)
!15282 = !DILocation(line: 1196, column: 55, scope: !15278)
!15283 = !DILocalVariable(name: "prop", scope: !15278, file: !3, line: 1198, type: !15284)
!15284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15285, size: 64)
!15285 = !DIDerivedType(tag: DW_TAG_typedef, name: "bProperty", file: !15286, line: 50, baseType: !15287)
!15286 = !DIFile(filename: "blender/source/blender/makesdna/DNA_property_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!15287 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bProperty", file: !15286, line: 43, size: 768, elements: !15288)
!15288 = !{!15289, !15291, !15292, !15293, !15294, !15295, !15296}
!15289 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !15287, file: !15286, line: 44, baseType: !15290, size: 64)
!15290 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15287, size: 64)
!15291 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !15287, file: !15286, line: 44, baseType: !15290, size: 64, offset: 64)
!15292 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !15287, file: !15286, line: 45, baseType: !692, size: 512, offset: 128)
!15293 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !15287, file: !15286, line: 46, baseType: !399, size: 16, offset: 640)
!15294 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !15287, file: !15286, line: 46, baseType: !399, size: 16, offset: 656)
!15295 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !15287, file: !15286, line: 47, baseType: !98, size: 32, offset: 672)
!15296 = !DIDerivedType(tag: DW_TAG_member, name: "poin", scope: !15287, file: !15286, line: 48, baseType: !372, size: 64, offset: 704)
!15297 = !DILocation(line: 1198, column: 13, scope: !15278)
!15298 = !DILocation(line: 1200, column: 8, scope: !15278)
!15299 = !DILocation(line: 1200, column: 12, scope: !15278)
!15300 = !DILocation(line: 1200, column: 6, scope: !15278)
!15301 = !DILocation(line: 1201, column: 2, scope: !15278)
!15302 = !DILocation(line: 1201, column: 9, scope: !15278)
!15303 = !DILocation(line: 1202, column: 15, scope: !15304)
!15304 = distinct !DILexicalBlock(scope: !15278, file: !3, line: 1201, column: 15)
!15305 = !DILocation(line: 1202, column: 41, scope: !15304)
!15306 = !DILocation(line: 1202, column: 3, scope: !15304)
!15307 = !DILocation(line: 1204, column: 7, scope: !15308)
!15308 = distinct !DILexicalBlock(scope: !15304, file: !3, line: 1204, column: 7)
!15309 = !DILocation(line: 1204, column: 13, scope: !15308)
!15310 = !DILocation(line: 1204, column: 18, scope: !15308)
!15311 = !DILocation(line: 1204, column: 21, scope: !15308)
!15312 = !DILocation(line: 1204, column: 27, scope: !15308)
!15313 = !DILocation(line: 1204, column: 36, scope: !15308)
!15314 = !DILocation(line: 1204, column: 42, scope: !15308)
!15315 = !DILocation(line: 1204, column: 35, scope: !15308)
!15316 = !DILocation(line: 1204, column: 32, scope: !15308)
!15317 = !DILocation(line: 1204, column: 7, scope: !15304)
!15318 = !DILocation(line: 1205, column: 14, scope: !15308)
!15319 = !DILocation(line: 1205, column: 24, scope: !15308)
!15320 = !DILocation(line: 1205, column: 39, scope: !15308)
!15321 = !DILocation(line: 1205, column: 45, scope: !15308)
!15322 = !DILocation(line: 1205, column: 52, scope: !15308)
!15323 = !DILocation(line: 1205, column: 58, scope: !15308)
!15324 = !DILocation(line: 1205, column: 4, scope: !15308)
!15325 = !DILocation(line: 1207, column: 9, scope: !15304)
!15326 = !DILocation(line: 1207, column: 15, scope: !15304)
!15327 = !DILocation(line: 1207, column: 7, scope: !15304)
!15328 = distinct !{!15328, !15301, !15329}
!15329 = !DILocation(line: 1208, column: 2, scope: !15278)
!15330 = !DILocation(line: 1209, column: 1, scope: !15278)
!15331 = distinct !DISubprogram(name: "write_sensors", scope: !3, file: !3, line: 1211, type: !7324, scopeLine: 1212, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !5641)
!15332 = !DILocalVariable(name: "wd", arg: 1, scope: !15331, file: !3, line: 1211, type: !5820)
!15333 = !DILocation(line: 1211, column: 38, scope: !15331)
!15334 = !DILocalVariable(name: "lb", arg: 2, scope: !15331, file: !3, line: 1211, type: !565)
!15335 = !DILocation(line: 1211, column: 52, scope: !15331)
!15336 = !DILocalVariable(name: "sens", scope: !15331, file: !3, line: 1213, type: !15337)
!15337 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15338, size: 64)
!15338 = !DIDerivedType(tag: DW_TAG_typedef, name: "bSensor", file: !15339, line: 180, baseType: !15340)
!15339 = !DIFile(filename: "blender/source/blender/makesdna/DNA_sensor_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!15340 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bSensor", file: !15339, line: 163, size: 1024, elements: !15341)
!15341 = !{!15342, !15344, !15345, !15346, !15347, !15348, !15349, !15350, !15351, !15352, !15353, !15354, !15355, !15395, !15396, !15397, !15398, !15399}
!15342 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !15340, file: !15339, line: 164, baseType: !15343, size: 64)
!15343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15340, size: 64)
!15344 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !15340, file: !15339, line: 164, baseType: !15343, size: 64, offset: 64)
!15345 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !15340, file: !15339, line: 166, baseType: !399, size: 16, offset: 128)
!15346 = !DIDerivedType(tag: DW_TAG_member, name: "otype", scope: !15340, file: !15339, line: 166, baseType: !399, size: 16, offset: 144)
!15347 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !15340, file: !15339, line: 166, baseType: !399, size: 16, offset: 160)
!15348 = !DIDerivedType(tag: DW_TAG_member, name: "pulse", scope: !15340, file: !15339, line: 166, baseType: !399, size: 16, offset: 176)
!15349 = !DIDerivedType(tag: DW_TAG_member, name: "freq", scope: !15340, file: !15339, line: 167, baseType: !399, size: 16, offset: 192)
!15350 = !DIDerivedType(tag: DW_TAG_member, name: "totlinks", scope: !15340, file: !15339, line: 167, baseType: !399, size: 16, offset: 208)
!15351 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !15340, file: !15339, line: 167, baseType: !399, size: 16, offset: 224)
!15352 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !15340, file: !15339, line: 167, baseType: !399, size: 16, offset: 240)
!15353 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !15340, file: !15339, line: 168, baseType: !692, size: 512, offset: 256)
!15354 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !15340, file: !15339, line: 169, baseType: !372, size: 64, offset: 768)
!15355 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !15340, file: !15339, line: 171, baseType: !15356, size: 64, offset: 832)
!15356 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15357, size: 64)
!15357 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15358, size: 64)
!15358 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bController", file: !15359, line: 54, size: 1088, elements: !15360)
!15359 = !DIFile(filename: "blender/source/blender/makesdna/DNA_controller_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!15360 = !{!15361, !15362, !15363, !15364, !15365, !15366, !15367, !15368, !15369, !15370, !15371, !15372, !15373, !15374, !15390, !15392, !15393, !15394}
!15361 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !15358, file: !15359, line: 55, baseType: !15357, size: 64)
!15362 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !15358, file: !15359, line: 55, baseType: !15357, size: 64, offset: 64)
!15363 = !DIDerivedType(tag: DW_TAG_member, name: "mynew", scope: !15358, file: !15359, line: 55, baseType: !15357, size: 64, offset: 128)
!15364 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !15358, file: !15359, line: 56, baseType: !399, size: 16, offset: 192)
!15365 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !15358, file: !15359, line: 56, baseType: !399, size: 16, offset: 208)
!15366 = !DIDerivedType(tag: DW_TAG_member, name: "inputs", scope: !15358, file: !15359, line: 56, baseType: !399, size: 16, offset: 224)
!15367 = !DIDerivedType(tag: DW_TAG_member, name: "totlinks", scope: !15358, file: !15359, line: 56, baseType: !399, size: 16, offset: 240)
!15368 = !DIDerivedType(tag: DW_TAG_member, name: "otype", scope: !15358, file: !15359, line: 57, baseType: !399, size: 16, offset: 256)
!15369 = !DIDerivedType(tag: DW_TAG_member, name: "totslinks", scope: !15358, file: !15359, line: 57, baseType: !399, size: 16, offset: 272)
!15370 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !15358, file: !15359, line: 57, baseType: !399, size: 16, offset: 288)
!15371 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !15358, file: !15359, line: 57, baseType: !399, size: 16, offset: 304)
!15372 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !15358, file: !15359, line: 59, baseType: !692, size: 512, offset: 320)
!15373 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !15358, file: !15359, line: 60, baseType: !372, size: 64, offset: 832)
!15374 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !15358, file: !15359, line: 62, baseType: !15375, size: 64, offset: 896)
!15375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15376, size: 64)
!15376 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15377, size: 64)
!15377 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bActuator", file: !15378, line: 262, size: 896, elements: !15379)
!15378 = !DIFile(filename: "blender/source/blender/makesdna/DNA_actuator_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!15379 = !{!15380, !15381, !15382, !15383, !15384, !15385, !15386, !15387, !15388, !15389}
!15380 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !15377, file: !15378, line: 263, baseType: !15376, size: 64)
!15381 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !15377, file: !15378, line: 263, baseType: !15376, size: 64, offset: 64)
!15382 = !DIDerivedType(tag: DW_TAG_member, name: "mynew", scope: !15377, file: !15378, line: 263, baseType: !15376, size: 64, offset: 128)
!15383 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !15377, file: !15378, line: 264, baseType: !399, size: 16, offset: 192)
!15384 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !15377, file: !15378, line: 268, baseType: !399, size: 16, offset: 208)
!15385 = !DIDerivedType(tag: DW_TAG_member, name: "otype", scope: !15377, file: !15378, line: 269, baseType: !399, size: 16, offset: 224)
!15386 = !DIDerivedType(tag: DW_TAG_member, name: "go", scope: !15377, file: !15378, line: 269, baseType: !399, size: 16, offset: 240)
!15387 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !15377, file: !15378, line: 270, baseType: !692, size: 512, offset: 256)
!15388 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !15377, file: !15378, line: 275, baseType: !372, size: 64, offset: 768)
!15389 = !DIDerivedType(tag: DW_TAG_member, name: "ob", scope: !15377, file: !15378, line: 280, baseType: !423, size: 64, offset: 832)
!15390 = !DIDerivedType(tag: DW_TAG_member, name: "slinks", scope: !15358, file: !15359, line: 64, baseType: !15391, size: 64, offset: 960)
!15391 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15343, size: 64)
!15392 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !15358, file: !15359, line: 65, baseType: !399, size: 16, offset: 1024)
!15393 = !DIDerivedType(tag: DW_TAG_member, name: "valo", scope: !15358, file: !15359, line: 65, baseType: !399, size: 16, offset: 1040)
!15394 = !DIDerivedType(tag: DW_TAG_member, name: "state_mask", scope: !15358, file: !15359, line: 66, baseType: !7, size: 32, offset: 1056)
!15395 = !DIDerivedType(tag: DW_TAG_member, name: "ob", scope: !15340, file: !15339, line: 173, baseType: !423, size: 64, offset: 896)
!15396 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !15340, file: !15339, line: 176, baseType: !399, size: 16, offset: 960)
!15397 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !15340, file: !15339, line: 177, baseType: !399, size: 16, offset: 976)
!15398 = !DIDerivedType(tag: DW_TAG_member, name: "tap", scope: !15340, file: !15339, line: 178, baseType: !399, size: 16, offset: 992)
!15399 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !15340, file: !15339, line: 179, baseType: !399, size: 16, offset: 1008)
!15400 = !DILocation(line: 1213, column: 11, scope: !15331)
!15401 = !DILocation(line: 1215, column: 8, scope: !15331)
!15402 = !DILocation(line: 1215, column: 12, scope: !15331)
!15403 = !DILocation(line: 1215, column: 6, scope: !15331)
!15404 = !DILocation(line: 1216, column: 2, scope: !15331)
!15405 = !DILocation(line: 1216, column: 9, scope: !15331)
!15406 = !DILocation(line: 1217, column: 15, scope: !15407)
!15407 = distinct !DILexicalBlock(scope: !15331, file: !3, line: 1216, column: 15)
!15408 = !DILocation(line: 1217, column: 39, scope: !15407)
!15409 = !DILocation(line: 1217, column: 3, scope: !15407)
!15410 = !DILocation(line: 1219, column: 13, scope: !15407)
!15411 = !DILocation(line: 1219, column: 38, scope: !15407)
!15412 = !DILocation(line: 1219, column: 44, scope: !15407)
!15413 = !DILocation(line: 1219, column: 37, scope: !15407)
!15414 = !DILocation(line: 1219, column: 23, scope: !15407)
!15415 = !DILocation(line: 1219, column: 54, scope: !15407)
!15416 = !DILocation(line: 1219, column: 60, scope: !15407)
!15417 = !DILocation(line: 1219, column: 3, scope: !15407)
!15418 = !DILocation(line: 1221, column: 11, scope: !15407)
!15419 = !DILocation(line: 1221, column: 17, scope: !15407)
!15420 = !DILocation(line: 1221, column: 3, scope: !15407)
!15421 = !DILocation(line: 1223, column: 16, scope: !15422)
!15422 = distinct !DILexicalBlock(scope: !15407, file: !3, line: 1221, column: 23)
!15423 = !DILocation(line: 1223, column: 44, scope: !15422)
!15424 = !DILocation(line: 1223, column: 50, scope: !15422)
!15425 = !DILocation(line: 1223, column: 4, scope: !15422)
!15426 = !DILocation(line: 1224, column: 4, scope: !15422)
!15427 = !DILocation(line: 1226, column: 16, scope: !15422)
!15428 = !DILocation(line: 1226, column: 45, scope: !15422)
!15429 = !DILocation(line: 1226, column: 51, scope: !15422)
!15430 = !DILocation(line: 1226, column: 4, scope: !15422)
!15431 = !DILocation(line: 1227, column: 4, scope: !15422)
!15432 = !DILocation(line: 1229, column: 16, scope: !15422)
!15433 = !DILocation(line: 1229, column: 48, scope: !15422)
!15434 = !DILocation(line: 1229, column: 54, scope: !15422)
!15435 = !DILocation(line: 1229, column: 4, scope: !15422)
!15436 = !DILocation(line: 1230, column: 4, scope: !15422)
!15437 = !DILocation(line: 1232, column: 16, scope: !15422)
!15438 = !DILocation(line: 1232, column: 48, scope: !15422)
!15439 = !DILocation(line: 1232, column: 54, scope: !15422)
!15440 = !DILocation(line: 1232, column: 4, scope: !15422)
!15441 = !DILocation(line: 1233, column: 4, scope: !15422)
!15442 = !DILocation(line: 1235, column: 16, scope: !15422)
!15443 = !DILocation(line: 1235, column: 48, scope: !15422)
!15444 = !DILocation(line: 1235, column: 54, scope: !15422)
!15445 = !DILocation(line: 1235, column: 4, scope: !15422)
!15446 = !DILocation(line: 1236, column: 4, scope: !15422)
!15447 = !DILocation(line: 1238, column: 16, scope: !15422)
!15448 = !DILocation(line: 1238, column: 48, scope: !15422)
!15449 = !DILocation(line: 1238, column: 54, scope: !15422)
!15450 = !DILocation(line: 1238, column: 4, scope: !15422)
!15451 = !DILocation(line: 1239, column: 4, scope: !15422)
!15452 = !DILocation(line: 1241, column: 16, scope: !15422)
!15453 = !DILocation(line: 1241, column: 45, scope: !15422)
!15454 = !DILocation(line: 1241, column: 51, scope: !15422)
!15455 = !DILocation(line: 1241, column: 4, scope: !15422)
!15456 = !DILocation(line: 1242, column: 4, scope: !15422)
!15457 = !DILocation(line: 1244, column: 16, scope: !15422)
!15458 = !DILocation(line: 1244, column: 49, scope: !15422)
!15459 = !DILocation(line: 1244, column: 55, scope: !15422)
!15460 = !DILocation(line: 1244, column: 4, scope: !15422)
!15461 = !DILocation(line: 1245, column: 4, scope: !15422)
!15462 = !DILocation(line: 1247, column: 16, scope: !15422)
!15463 = !DILocation(line: 1247, column: 45, scope: !15422)
!15464 = !DILocation(line: 1247, column: 51, scope: !15422)
!15465 = !DILocation(line: 1247, column: 4, scope: !15422)
!15466 = !DILocation(line: 1248, column: 4, scope: !15422)
!15467 = !DILocation(line: 1250, column: 16, scope: !15422)
!15468 = !DILocation(line: 1250, column: 46, scope: !15422)
!15469 = !DILocation(line: 1250, column: 52, scope: !15422)
!15470 = !DILocation(line: 1250, column: 4, scope: !15422)
!15471 = !DILocation(line: 1251, column: 4, scope: !15422)
!15472 = !DILocation(line: 1253, column: 16, scope: !15422)
!15473 = !DILocation(line: 1253, column: 43, scope: !15422)
!15474 = !DILocation(line: 1253, column: 49, scope: !15422)
!15475 = !DILocation(line: 1253, column: 4, scope: !15422)
!15476 = !DILocation(line: 1254, column: 4, scope: !15422)
!15477 = !DILocation(line: 1256, column: 16, scope: !15422)
!15478 = !DILocation(line: 1256, column: 47, scope: !15422)
!15479 = !DILocation(line: 1256, column: 53, scope: !15422)
!15480 = !DILocation(line: 1256, column: 4, scope: !15422)
!15481 = !DILocation(line: 1257, column: 4, scope: !15422)
!15482 = !DILocation(line: 1259, column: 16, scope: !15422)
!15483 = !DILocation(line: 1259, column: 48, scope: !15422)
!15484 = !DILocation(line: 1259, column: 54, scope: !15422)
!15485 = !DILocation(line: 1259, column: 4, scope: !15422)
!15486 = !DILocation(line: 1260, column: 4, scope: !15422)
!15487 = !DILocation(line: 1263, column: 3, scope: !15422)
!15488 = !DILocation(line: 1265, column: 9, scope: !15407)
!15489 = !DILocation(line: 1265, column: 15, scope: !15407)
!15490 = !DILocation(line: 1265, column: 7, scope: !15407)
!15491 = distinct !{!15491, !15404, !15492}
!15492 = !DILocation(line: 1266, column: 2, scope: !15331)
!15493 = !DILocation(line: 1267, column: 1, scope: !15331)
!15494 = distinct !DISubprogram(name: "write_controllers", scope: !3, file: !3, line: 1269, type: !7324, scopeLine: 1270, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !5641)
!15495 = !DILocalVariable(name: "wd", arg: 1, scope: !15494, file: !3, line: 1269, type: !5820)
!15496 = !DILocation(line: 1269, column: 42, scope: !15494)
!15497 = !DILocalVariable(name: "lb", arg: 2, scope: !15494, file: !3, line: 1269, type: !565)
!15498 = !DILocation(line: 1269, column: 56, scope: !15494)
!15499 = !DILocalVariable(name: "cont", scope: !15494, file: !3, line: 1271, type: !15500)
!15500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15501, size: 64)
!15501 = !DIDerivedType(tag: DW_TAG_typedef, name: "bController", file: !15359, line: 68, baseType: !15358)
!15502 = !DILocation(line: 1271, column: 15, scope: !15494)
!15503 = !DILocation(line: 1273, column: 8, scope: !15494)
!15504 = !DILocation(line: 1273, column: 12, scope: !15494)
!15505 = !DILocation(line: 1273, column: 6, scope: !15494)
!15506 = !DILocation(line: 1274, column: 2, scope: !15494)
!15507 = !DILocation(line: 1274, column: 9, scope: !15494)
!15508 = !DILocation(line: 1275, column: 15, scope: !15509)
!15509 = distinct !DILexicalBlock(scope: !15494, file: !3, line: 1274, column: 15)
!15510 = !DILocation(line: 1275, column: 43, scope: !15509)
!15511 = !DILocation(line: 1275, column: 3, scope: !15509)
!15512 = !DILocation(line: 1277, column: 13, scope: !15509)
!15513 = !DILocation(line: 1277, column: 38, scope: !15509)
!15514 = !DILocation(line: 1277, column: 44, scope: !15509)
!15515 = !DILocation(line: 1277, column: 37, scope: !15509)
!15516 = !DILocation(line: 1277, column: 23, scope: !15509)
!15517 = !DILocation(line: 1277, column: 54, scope: !15509)
!15518 = !DILocation(line: 1277, column: 60, scope: !15509)
!15519 = !DILocation(line: 1277, column: 3, scope: !15509)
!15520 = !DILocation(line: 1279, column: 11, scope: !15509)
!15521 = !DILocation(line: 1279, column: 17, scope: !15509)
!15522 = !DILocation(line: 1279, column: 3, scope: !15509)
!15523 = !DILocation(line: 1281, column: 16, scope: !15524)
!15524 = distinct !DILexicalBlock(scope: !15509, file: !3, line: 1279, column: 23)
!15525 = !DILocation(line: 1281, column: 48, scope: !15524)
!15526 = !DILocation(line: 1281, column: 54, scope: !15524)
!15527 = !DILocation(line: 1281, column: 4, scope: !15524)
!15528 = !DILocation(line: 1282, column: 4, scope: !15524)
!15529 = !DILocation(line: 1284, column: 16, scope: !15524)
!15530 = !DILocation(line: 1284, column: 44, scope: !15524)
!15531 = !DILocation(line: 1284, column: 50, scope: !15524)
!15532 = !DILocation(line: 1284, column: 4, scope: !15524)
!15533 = !DILocation(line: 1285, column: 4, scope: !15524)
!15534 = !DILocation(line: 1288, column: 3, scope: !15524)
!15535 = !DILocation(line: 1290, column: 9, scope: !15509)
!15536 = !DILocation(line: 1290, column: 15, scope: !15509)
!15537 = !DILocation(line: 1290, column: 7, scope: !15509)
!15538 = distinct !{!15538, !15506, !15539}
!15539 = !DILocation(line: 1291, column: 2, scope: !15494)
!15540 = !DILocation(line: 1292, column: 1, scope: !15494)
!15541 = distinct !DISubprogram(name: "write_actuators", scope: !3, file: !3, line: 1294, type: !7324, scopeLine: 1295, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !5641)
!15542 = !DILocalVariable(name: "wd", arg: 1, scope: !15541, file: !3, line: 1294, type: !5820)
!15543 = !DILocation(line: 1294, column: 40, scope: !15541)
!15544 = !DILocalVariable(name: "lb", arg: 2, scope: !15541, file: !3, line: 1294, type: !565)
!15545 = !DILocation(line: 1294, column: 54, scope: !15541)
!15546 = !DILocalVariable(name: "act", scope: !15541, file: !3, line: 1296, type: !15547)
!15547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15548, size: 64)
!15548 = !DIDerivedType(tag: DW_TAG_typedef, name: "bActuator", file: !15378, line: 282, baseType: !15377)
!15549 = !DILocation(line: 1296, column: 13, scope: !15541)
!15550 = !DILocation(line: 1298, column: 7, scope: !15541)
!15551 = !DILocation(line: 1298, column: 11, scope: !15541)
!15552 = !DILocation(line: 1298, column: 5, scope: !15541)
!15553 = !DILocation(line: 1299, column: 2, scope: !15541)
!15554 = !DILocation(line: 1299, column: 9, scope: !15541)
!15555 = !DILocation(line: 1300, column: 15, scope: !15556)
!15556 = distinct !DILexicalBlock(scope: !15541, file: !3, line: 1299, column: 14)
!15557 = !DILocation(line: 1300, column: 41, scope: !15556)
!15558 = !DILocation(line: 1300, column: 3, scope: !15556)
!15559 = !DILocation(line: 1302, column: 11, scope: !15556)
!15560 = !DILocation(line: 1302, column: 16, scope: !15556)
!15561 = !DILocation(line: 1302, column: 3, scope: !15556)
!15562 = !DILocation(line: 1305, column: 16, scope: !15563)
!15563 = distinct !DILexicalBlock(scope: !15556, file: !3, line: 1302, column: 22)
!15564 = !DILocation(line: 1305, column: 48, scope: !15563)
!15565 = !DILocation(line: 1305, column: 53, scope: !15563)
!15566 = !DILocation(line: 1305, column: 4, scope: !15563)
!15567 = !DILocation(line: 1306, column: 4, scope: !15563)
!15568 = !DILocation(line: 1308, column: 16, scope: !15563)
!15569 = !DILocation(line: 1308, column: 47, scope: !15563)
!15570 = !DILocation(line: 1308, column: 52, scope: !15563)
!15571 = !DILocation(line: 1308, column: 4, scope: !15563)
!15572 = !DILocation(line: 1309, column: 4, scope: !15563)
!15573 = !DILocation(line: 1311, column: 16, scope: !15563)
!15574 = !DILocation(line: 1311, column: 48, scope: !15563)
!15575 = !DILocation(line: 1311, column: 53, scope: !15563)
!15576 = !DILocation(line: 1311, column: 4, scope: !15563)
!15577 = !DILocation(line: 1312, column: 4, scope: !15563)
!15578 = !DILocation(line: 1314, column: 16, scope: !15563)
!15579 = !DILocation(line: 1314, column: 45, scope: !15563)
!15580 = !DILocation(line: 1314, column: 50, scope: !15563)
!15581 = !DILocation(line: 1314, column: 4, scope: !15563)
!15582 = !DILocation(line: 1315, column: 4, scope: !15563)
!15583 = !DILocation(line: 1317, column: 16, scope: !15563)
!15584 = !DILocation(line: 1317, column: 50, scope: !15563)
!15585 = !DILocation(line: 1317, column: 55, scope: !15563)
!15586 = !DILocation(line: 1317, column: 4, scope: !15563)
!15587 = !DILocation(line: 1318, column: 4, scope: !15563)
!15588 = !DILocation(line: 1320, column: 16, scope: !15563)
!15589 = !DILocation(line: 1320, column: 48, scope: !15563)
!15590 = !DILocation(line: 1320, column: 53, scope: !15563)
!15591 = !DILocation(line: 1320, column: 4, scope: !15563)
!15592 = !DILocation(line: 1321, column: 4, scope: !15563)
!15593 = !DILocation(line: 1323, column: 16, scope: !15563)
!15594 = !DILocation(line: 1323, column: 52, scope: !15563)
!15595 = !DILocation(line: 1323, column: 57, scope: !15563)
!15596 = !DILocation(line: 1323, column: 4, scope: !15563)
!15597 = !DILocation(line: 1324, column: 4, scope: !15563)
!15598 = !DILocation(line: 1326, column: 16, scope: !15563)
!15599 = !DILocation(line: 1326, column: 52, scope: !15563)
!15600 = !DILocation(line: 1326, column: 57, scope: !15563)
!15601 = !DILocation(line: 1326, column: 4, scope: !15563)
!15602 = !DILocation(line: 1327, column: 4, scope: !15563)
!15603 = !DILocation(line: 1329, column: 16, scope: !15563)
!15604 = !DILocation(line: 1329, column: 47, scope: !15563)
!15605 = !DILocation(line: 1329, column: 52, scope: !15563)
!15606 = !DILocation(line: 1329, column: 4, scope: !15563)
!15607 = !DILocation(line: 1330, column: 4, scope: !15563)
!15608 = !DILocation(line: 1332, column: 16, scope: !15563)
!15609 = !DILocation(line: 1332, column: 47, scope: !15563)
!15610 = !DILocation(line: 1332, column: 52, scope: !15563)
!15611 = !DILocation(line: 1332, column: 4, scope: !15563)
!15612 = !DILocation(line: 1333, column: 4, scope: !15563)
!15613 = !DILocation(line: 1335, column: 16, scope: !15563)
!15614 = !DILocation(line: 1335, column: 48, scope: !15563)
!15615 = !DILocation(line: 1335, column: 53, scope: !15563)
!15616 = !DILocation(line: 1335, column: 4, scope: !15563)
!15617 = !DILocation(line: 1336, column: 4, scope: !15563)
!15618 = !DILocation(line: 1338, column: 16, scope: !15563)
!15619 = !DILocation(line: 1338, column: 49, scope: !15563)
!15620 = !DILocation(line: 1338, column: 54, scope: !15563)
!15621 = !DILocation(line: 1338, column: 4, scope: !15563)
!15622 = !DILocation(line: 1339, column: 4, scope: !15563)
!15623 = !DILocation(line: 1341, column: 16, scope: !15563)
!15624 = !DILocation(line: 1341, column: 46, scope: !15563)
!15625 = !DILocation(line: 1341, column: 51, scope: !15563)
!15626 = !DILocation(line: 1341, column: 4, scope: !15563)
!15627 = !DILocation(line: 1342, column: 4, scope: !15563)
!15628 = !DILocation(line: 1344, column: 16, scope: !15563)
!15629 = !DILocation(line: 1344, column: 52, scope: !15563)
!15630 = !DILocation(line: 1344, column: 57, scope: !15563)
!15631 = !DILocation(line: 1344, column: 4, scope: !15563)
!15632 = !DILocation(line: 1345, column: 4, scope: !15563)
!15633 = !DILocation(line: 1347, column: 16, scope: !15563)
!15634 = !DILocation(line: 1347, column: 52, scope: !15563)
!15635 = !DILocation(line: 1347, column: 57, scope: !15563)
!15636 = !DILocation(line: 1347, column: 4, scope: !15563)
!15637 = !DILocation(line: 1348, column: 4, scope: !15563)
!15638 = !DILocation(line: 1350, column: 16, scope: !15563)
!15639 = !DILocation(line: 1350, column: 48, scope: !15563)
!15640 = !DILocation(line: 1350, column: 53, scope: !15563)
!15641 = !DILocation(line: 1350, column: 4, scope: !15563)
!15642 = !DILocation(line: 1351, column: 4, scope: !15563)
!15643 = !DILocation(line: 1353, column: 16, scope: !15563)
!15644 = !DILocation(line: 1353, column: 47, scope: !15563)
!15645 = !DILocation(line: 1353, column: 52, scope: !15563)
!15646 = !DILocation(line: 1353, column: 4, scope: !15563)
!15647 = !DILocation(line: 1354, column: 4, scope: !15563)
!15648 = !DILocation(line: 1356, column: 16, scope: !15563)
!15649 = !DILocation(line: 1356, column: 50, scope: !15563)
!15650 = !DILocation(line: 1356, column: 55, scope: !15563)
!15651 = !DILocation(line: 1356, column: 4, scope: !15563)
!15652 = !DILocation(line: 1357, column: 4, scope: !15563)
!15653 = !DILocation(line: 1359, column: 16, scope: !15563)
!15654 = !DILocation(line: 1359, column: 50, scope: !15563)
!15655 = !DILocation(line: 1359, column: 55, scope: !15563)
!15656 = !DILocation(line: 1359, column: 4, scope: !15563)
!15657 = !DILocation(line: 1360, column: 4, scope: !15563)
!15658 = !DILocation(line: 1362, column: 16, scope: !15563)
!15659 = !DILocation(line: 1362, column: 47, scope: !15563)
!15660 = !DILocation(line: 1362, column: 52, scope: !15563)
!15661 = !DILocation(line: 1362, column: 4, scope: !15563)
!15662 = !DILocation(line: 1363, column: 4, scope: !15563)
!15663 = !DILocation(line: 1366, column: 3, scope: !15563)
!15664 = !DILocation(line: 1368, column: 8, scope: !15556)
!15665 = !DILocation(line: 1368, column: 13, scope: !15556)
!15666 = !DILocation(line: 1368, column: 6, scope: !15556)
!15667 = distinct !{!15667, !15553, !15668}
!15668 = !DILocation(line: 1369, column: 2, scope: !15541)
!15669 = !DILocation(line: 1370, column: 1, scope: !15541)
!15670 = distinct !DISubprogram(name: "write_pose", scope: !3, file: !3, line: 1429, type: !15671, scopeLine: 1430, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !5641)
!15671 = !DISubroutineType(types: !15672)
!15672 = !{null, !5820, !15673}
!15673 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15674, size: 64)
!15674 = !DIDerivedType(tag: DW_TAG_typedef, name: "bPose", file: !544, line: 356, baseType: !4440)
!15675 = !DILocalVariable(name: "wd", arg: 1, scope: !15670, file: !3, line: 1429, type: !5820)
!15676 = !DILocation(line: 1429, column: 35, scope: !15670)
!15677 = !DILocalVariable(name: "pose", arg: 2, scope: !15670, file: !3, line: 1429, type: !15673)
!15678 = !DILocation(line: 1429, column: 46, scope: !15670)
!15679 = !DILocalVariable(name: "chan", scope: !15670, file: !3, line: 1431, type: !15680)
!15680 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15681, size: 64)
!15681 = !DIDerivedType(tag: DW_TAG_typedef, name: "bPoseChannel", file: !544, line: 243, baseType: !15682)
!15682 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bPoseChannel", file: !544, line: 187, size: 4352, elements: !15683)
!15683 = !{!15684, !15686, !15687, !15688, !15689, !15690, !15691, !15692, !15693, !15694, !15695, !15696, !15697, !15698, !15699, !15700, !15701, !15702, !15703, !15704, !15705, !15706, !15707, !15708, !15709, !15710, !15711, !15712, !15713, !15714, !15715, !15716, !15717, !15718, !15719, !15720, !15721, !15722, !15723, !15724}
!15684 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !15682, file: !544, line: 188, baseType: !15685, size: 64)
!15685 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15682, size: 64)
!15686 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !15682, file: !544, line: 188, baseType: !15685, size: 64, offset: 64)
!15687 = !DIDerivedType(tag: DW_TAG_member, name: "prop", scope: !15682, file: !544, line: 190, baseType: !1094, size: 64, offset: 128)
!15688 = !DIDerivedType(tag: DW_TAG_member, name: "constraints", scope: !15682, file: !544, line: 192, baseType: !388, size: 128, offset: 192)
!15689 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !15682, file: !544, line: 193, baseType: !692, size: 512, offset: 320)
!15690 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !15682, file: !544, line: 195, baseType: !399, size: 16, offset: 832)
!15691 = !DIDerivedType(tag: DW_TAG_member, name: "ikflag", scope: !15682, file: !544, line: 196, baseType: !399, size: 16, offset: 848)
!15692 = !DIDerivedType(tag: DW_TAG_member, name: "protectflag", scope: !15682, file: !544, line: 197, baseType: !399, size: 16, offset: 864)
!15693 = !DIDerivedType(tag: DW_TAG_member, name: "agrp_index", scope: !15682, file: !544, line: 198, baseType: !399, size: 16, offset: 880)
!15694 = !DIDerivedType(tag: DW_TAG_member, name: "constflag", scope: !15682, file: !544, line: 199, baseType: !375, size: 8, offset: 896)
!15695 = !DIDerivedType(tag: DW_TAG_member, name: "selectflag", scope: !15682, file: !544, line: 200, baseType: !375, size: 8, offset: 904)
!15696 = !DIDerivedType(tag: DW_TAG_member, name: "pad0", scope: !15682, file: !544, line: 201, baseType: !2682, size: 48, offset: 912)
!15697 = !DIDerivedType(tag: DW_TAG_member, name: "bone", scope: !15682, file: !544, line: 203, baseType: !10650, size: 64, offset: 960)
!15698 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !15682, file: !544, line: 204, baseType: !15685, size: 64, offset: 1024)
!15699 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !15682, file: !544, line: 205, baseType: !15685, size: 64, offset: 1088)
!15700 = !DIDerivedType(tag: DW_TAG_member, name: "iktree", scope: !15682, file: !544, line: 207, baseType: !390, size: 128, offset: 1152)
!15701 = !DIDerivedType(tag: DW_TAG_member, name: "siktree", scope: !15682, file: !544, line: 208, baseType: !390, size: 128, offset: 1280)
!15702 = !DIDerivedType(tag: DW_TAG_member, name: "mpath", scope: !15682, file: !544, line: 210, baseType: !4481, size: 64, offset: 1408)
!15703 = !DIDerivedType(tag: DW_TAG_member, name: "custom", scope: !15682, file: !544, line: 211, baseType: !423, size: 64, offset: 1472)
!15704 = !DIDerivedType(tag: DW_TAG_member, name: "custom_tx", scope: !15682, file: !544, line: 212, baseType: !15685, size: 64, offset: 1536)
!15705 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !15682, file: !544, line: 217, baseType: !779, size: 96, offset: 1600)
!15706 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !15682, file: !544, line: 218, baseType: !779, size: 96, offset: 1696)
!15707 = !DIDerivedType(tag: DW_TAG_member, name: "eul", scope: !15682, file: !544, line: 221, baseType: !779, size: 96, offset: 1792)
!15708 = !DIDerivedType(tag: DW_TAG_member, name: "quat", scope: !15682, file: !544, line: 222, baseType: !408, size: 128, offset: 1888)
!15709 = !DIDerivedType(tag: DW_TAG_member, name: "rotAxis", scope: !15682, file: !544, line: 223, baseType: !779, size: 96, offset: 2016)
!15710 = !DIDerivedType(tag: DW_TAG_member, name: "rotAngle", scope: !15682, file: !544, line: 223, baseType: !396, size: 32, offset: 2112)
!15711 = !DIDerivedType(tag: DW_TAG_member, name: "rotmode", scope: !15682, file: !544, line: 224, baseType: !399, size: 16, offset: 2144)
!15712 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !15682, file: !544, line: 225, baseType: !399, size: 16, offset: 2160)
!15713 = !DIDerivedType(tag: DW_TAG_member, name: "chan_mat", scope: !15682, file: !544, line: 227, baseType: !1752, size: 512, offset: 2176)
!15714 = !DIDerivedType(tag: DW_TAG_member, name: "pose_mat", scope: !15682, file: !544, line: 228, baseType: !1752, size: 512, offset: 2688)
!15715 = !DIDerivedType(tag: DW_TAG_member, name: "constinv", scope: !15682, file: !544, line: 230, baseType: !1752, size: 512, offset: 3200)
!15716 = !DIDerivedType(tag: DW_TAG_member, name: "pose_head", scope: !15682, file: !544, line: 233, baseType: !779, size: 96, offset: 3712)
!15717 = !DIDerivedType(tag: DW_TAG_member, name: "pose_tail", scope: !15682, file: !544, line: 234, baseType: !779, size: 96, offset: 3808)
!15718 = !DIDerivedType(tag: DW_TAG_member, name: "limitmin", scope: !15682, file: !544, line: 236, baseType: !779, size: 96, offset: 3904)
!15719 = !DIDerivedType(tag: DW_TAG_member, name: "limitmax", scope: !15682, file: !544, line: 236, baseType: !779, size: 96, offset: 4000)
!15720 = !DIDerivedType(tag: DW_TAG_member, name: "stiffness", scope: !15682, file: !544, line: 237, baseType: !779, size: 96, offset: 4096)
!15721 = !DIDerivedType(tag: DW_TAG_member, name: "ikstretch", scope: !15682, file: !544, line: 238, baseType: !396, size: 32, offset: 4192)
!15722 = !DIDerivedType(tag: DW_TAG_member, name: "ikrotweight", scope: !15682, file: !544, line: 239, baseType: !396, size: 32, offset: 4224)
!15723 = !DIDerivedType(tag: DW_TAG_member, name: "iklinweight", scope: !15682, file: !544, line: 240, baseType: !396, size: 32, offset: 4256)
!15724 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !15682, file: !544, line: 242, baseType: !372, size: 64, offset: 4288)
!15725 = !DILocation(line: 1431, column: 16, scope: !15670)
!15726 = !DILocalVariable(name: "grp", scope: !15670, file: !3, line: 1432, type: !10775)
!15727 = !DILocation(line: 1432, column: 16, scope: !15670)
!15728 = !DILocation(line: 1435, column: 7, scope: !15729)
!15729 = distinct !DILexicalBlock(scope: !15670, file: !3, line: 1435, column: 6)
!15730 = !DILocation(line: 1435, column: 6, scope: !15670)
!15731 = !DILocation(line: 1436, column: 3, scope: !15729)
!15732 = !DILocation(line: 1439, column: 12, scope: !15733)
!15733 = distinct !DILexicalBlock(scope: !15670, file: !3, line: 1439, column: 2)
!15734 = !DILocation(line: 1439, column: 18, scope: !15733)
!15735 = !DILocation(line: 1439, column: 27, scope: !15733)
!15736 = !DILocation(line: 1439, column: 11, scope: !15733)
!15737 = !DILocation(line: 1439, column: 7, scope: !15733)
!15738 = !DILocation(line: 1439, column: 34, scope: !15739)
!15739 = distinct !DILexicalBlock(scope: !15733, file: !3, line: 1439, column: 2)
!15740 = !DILocation(line: 1439, column: 2, scope: !15733)
!15741 = !DILocation(line: 1442, column: 7, scope: !15742)
!15742 = distinct !DILexicalBlock(scope: !15743, file: !3, line: 1442, column: 7)
!15743 = distinct !DILexicalBlock(scope: !15739, file: !3, line: 1439, column: 57)
!15744 = !DILocation(line: 1442, column: 13, scope: !15742)
!15745 = !DILocation(line: 1442, column: 7, scope: !15743)
!15746 = !DILocation(line: 1443, column: 22, scope: !15742)
!15747 = !DILocation(line: 1443, column: 28, scope: !15742)
!15748 = !DILocation(line: 1443, column: 34, scope: !15742)
!15749 = !DILocation(line: 1443, column: 4, scope: !15742)
!15750 = !DILocation(line: 1445, column: 21, scope: !15743)
!15751 = !DILocation(line: 1445, column: 26, scope: !15743)
!15752 = !DILocation(line: 1445, column: 32, scope: !15743)
!15753 = !DILocation(line: 1445, column: 3, scope: !15743)
!15754 = !DILocation(line: 1447, column: 20, scope: !15743)
!15755 = !DILocation(line: 1447, column: 24, scope: !15743)
!15756 = !DILocation(line: 1447, column: 30, scope: !15743)
!15757 = !DILocation(line: 1447, column: 3, scope: !15743)
!15758 = !DILocation(line: 1450, column: 7, scope: !15759)
!15759 = distinct !DILexicalBlock(scope: !15743, file: !3, line: 1450, column: 7)
!15760 = !DILocation(line: 1450, column: 13, scope: !15759)
!15761 = !DILocation(line: 1450, column: 7, scope: !15743)
!15762 = !DILocation(line: 1451, column: 22, scope: !15759)
!15763 = !DILocation(line: 1451, column: 28, scope: !15759)
!15764 = !DILocation(line: 1451, column: 34, scope: !15759)
!15765 = !DILocation(line: 1451, column: 39, scope: !15759)
!15766 = !DILocation(line: 1451, column: 4, scope: !15759)
!15767 = !DILocation(line: 1451, column: 10, scope: !15759)
!15768 = !DILocation(line: 1451, column: 20, scope: !15759)
!15769 = !DILocation(line: 1453, column: 15, scope: !15743)
!15770 = !DILocation(line: 1453, column: 44, scope: !15743)
!15771 = !DILocation(line: 1453, column: 3, scope: !15743)
!15772 = !DILocation(line: 1454, column: 2, scope: !15743)
!15773 = !DILocation(line: 1439, column: 45, scope: !15739)
!15774 = !DILocation(line: 1439, column: 51, scope: !15739)
!15775 = !DILocation(line: 1439, column: 44, scope: !15739)
!15776 = !DILocation(line: 1439, column: 2, scope: !15739)
!15777 = distinct !{!15777, !15740, !15778}
!15778 = !DILocation(line: 1454, column: 2, scope: !15733)
!15779 = !DILocation(line: 1457, column: 11, scope: !15780)
!15780 = distinct !DILexicalBlock(scope: !15670, file: !3, line: 1457, column: 2)
!15781 = !DILocation(line: 1457, column: 17, scope: !15780)
!15782 = !DILocation(line: 1457, column: 25, scope: !15780)
!15783 = !DILocation(line: 1457, column: 10, scope: !15780)
!15784 = !DILocation(line: 1457, column: 7, scope: !15780)
!15785 = !DILocation(line: 1457, column: 32, scope: !15786)
!15786 = distinct !DILexicalBlock(scope: !15780, file: !3, line: 1457, column: 2)
!15787 = !DILocation(line: 1457, column: 2, scope: !15780)
!15788 = !DILocation(line: 1458, column: 15, scope: !15786)
!15789 = !DILocation(line: 1458, column: 44, scope: !15786)
!15790 = !DILocation(line: 1458, column: 3, scope: !15786)
!15791 = !DILocation(line: 1457, column: 41, scope: !15786)
!15792 = !DILocation(line: 1457, column: 46, scope: !15786)
!15793 = !DILocation(line: 1457, column: 40, scope: !15786)
!15794 = !DILocation(line: 1457, column: 2, scope: !15786)
!15795 = distinct !{!15795, !15787, !15796}
!15796 = !DILocation(line: 1458, column: 47, scope: !15780)
!15797 = !DILocation(line: 1461, column: 6, scope: !15798)
!15798 = distinct !DILexicalBlock(scope: !15670, file: !3, line: 1461, column: 6)
!15799 = !DILocation(line: 1461, column: 12, scope: !15798)
!15800 = !DILocation(line: 1461, column: 6, scope: !15670)
!15801 = !DILocalVariable(name: "structname", scope: !15802, file: !3, line: 1462, type: !373)
!15802 = distinct !DILexicalBlock(scope: !15798, file: !3, line: 1461, column: 21)
!15803 = !DILocation(line: 1462, column: 15, scope: !15802)
!15804 = !DILocation(line: 1462, column: 62, scope: !15802)
!15805 = !DILocation(line: 1462, column: 36, scope: !15802)
!15806 = !DILocation(line: 1463, column: 7, scope: !15807)
!15807 = distinct !DILexicalBlock(scope: !15802, file: !3, line: 1463, column: 7)
!15808 = !DILocation(line: 1463, column: 7, scope: !15802)
!15809 = !DILocation(line: 1464, column: 16, scope: !15807)
!15810 = !DILocation(line: 1464, column: 26, scope: !15807)
!15811 = !DILocation(line: 1464, column: 41, scope: !15807)
!15812 = !DILocation(line: 1464, column: 47, scope: !15807)
!15813 = !DILocation(line: 1464, column: 4, scope: !15807)
!15814 = !DILocation(line: 1465, column: 2, scope: !15802)
!15815 = !DILocation(line: 1468, column: 14, scope: !15670)
!15816 = !DILocation(line: 1468, column: 36, scope: !15670)
!15817 = !DILocation(line: 1468, column: 2, scope: !15670)
!15818 = !DILocation(line: 1470, column: 1, scope: !15670)
!15819 = distinct !DISubprogram(name: "write_defgroups", scope: !3, file: !3, line: 1472, type: !7324, scopeLine: 1473, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !5641)
!15820 = !DILocalVariable(name: "wd", arg: 1, scope: !15819, file: !3, line: 1472, type: !5820)
!15821 = !DILocation(line: 1472, column: 40, scope: !15819)
!15822 = !DILocalVariable(name: "defbase", arg: 2, scope: !15819, file: !3, line: 1472, type: !565)
!15823 = !DILocation(line: 1472, column: 54, scope: !15819)
!15824 = !DILocalVariable(name: "defgroup", scope: !15819, file: !3, line: 1474, type: !15825)
!15825 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15826, size: 64)
!15826 = !DIDerivedType(tag: DW_TAG_typedef, name: "bDeformGroup", file: !186, line: 68, baseType: !15827)
!15827 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bDeformGroup", file: !186, line: 63, size: 704, elements: !15828)
!15828 = !{!15829, !15831, !15832, !15833, !15834}
!15829 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !15827, file: !186, line: 64, baseType: !15830, size: 64)
!15830 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15827, size: 64)
!15831 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !15827, file: !186, line: 64, baseType: !15830, size: 64, offset: 64)
!15832 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !15827, file: !186, line: 65, baseType: !692, size: 512, offset: 128)
!15833 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !15827, file: !186, line: 67, baseType: !375, size: 8, offset: 640)
!15834 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !15827, file: !186, line: 67, baseType: !1730, size: 56, offset: 648)
!15835 = !DILocation(line: 1474, column: 16, scope: !15819)
!15836 = !DILocation(line: 1476, column: 16, scope: !15837)
!15837 = distinct !DILexicalBlock(scope: !15819, file: !3, line: 1476, column: 2)
!15838 = !DILocation(line: 1476, column: 25, scope: !15837)
!15839 = !DILocation(line: 1476, column: 15, scope: !15837)
!15840 = !DILocation(line: 1476, column: 7, scope: !15837)
!15841 = !DILocation(line: 1476, column: 32, scope: !15842)
!15842 = distinct !DILexicalBlock(scope: !15837, file: !3, line: 1476, column: 2)
!15843 = !DILocation(line: 1476, column: 2, scope: !15837)
!15844 = !DILocation(line: 1477, column: 15, scope: !15842)
!15845 = !DILocation(line: 1477, column: 44, scope: !15842)
!15846 = !DILocation(line: 1477, column: 3, scope: !15842)
!15847 = !DILocation(line: 1476, column: 51, scope: !15842)
!15848 = !DILocation(line: 1476, column: 61, scope: !15842)
!15849 = !DILocation(line: 1476, column: 50, scope: !15842)
!15850 = !DILocation(line: 1476, column: 2, scope: !15842)
!15851 = distinct !{!15851, !15843, !15852}
!15852 = !DILocation(line: 1477, column: 52, scope: !15837)
!15853 = !DILocation(line: 1478, column: 1, scope: !15819)
!15854 = distinct !DISubprogram(name: "write_constraints", scope: !3, file: !3, line: 1385, type: !7324, scopeLine: 1386, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !5641)
!15855 = !DILocalVariable(name: "wd", arg: 1, scope: !15854, file: !3, line: 1385, type: !5820)
!15856 = !DILocation(line: 1385, column: 42, scope: !15854)
!15857 = !DILocalVariable(name: "conlist", arg: 2, scope: !15854, file: !3, line: 1385, type: !565)
!15858 = !DILocation(line: 1385, column: 56, scope: !15854)
!15859 = !DILocalVariable(name: "con", scope: !15854, file: !3, line: 1387, type: !15860)
!15860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15861, size: 64)
!15861 = !DIDerivedType(tag: DW_TAG_typedef, name: "bConstraint", file: !5200, line: 76, baseType: !15862)
!15862 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bConstraint", file: !5200, line: 54, size: 960, elements: !15863)
!15863 = !{!15864, !15866, !15867, !15868, !15869, !15870, !15871, !15872, !15873, !15874, !15875, !15876, !15877, !15878}
!15864 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !15862, file: !5200, line: 55, baseType: !15865, size: 64)
!15865 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15862, size: 64)
!15866 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !15862, file: !5200, line: 55, baseType: !15865, size: 64, offset: 64)
!15867 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !15862, file: !5200, line: 57, baseType: !372, size: 64, offset: 128)
!15868 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !15862, file: !5200, line: 58, baseType: !399, size: 16, offset: 192)
!15869 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !15862, file: !5200, line: 59, baseType: !399, size: 16, offset: 208)
!15870 = !DIDerivedType(tag: DW_TAG_member, name: "ownspace", scope: !15862, file: !5200, line: 61, baseType: !375, size: 8, offset: 224)
!15871 = !DIDerivedType(tag: DW_TAG_member, name: "tarspace", scope: !15862, file: !5200, line: 62, baseType: !375, size: 8, offset: 232)
!15872 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !15862, file: !5200, line: 64, baseType: !692, size: 512, offset: 240)
!15873 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !15862, file: !5200, line: 66, baseType: !399, size: 16, offset: 752)
!15874 = !DIDerivedType(tag: DW_TAG_member, name: "enforce", scope: !15862, file: !5200, line: 68, baseType: !396, size: 32, offset: 768)
!15875 = !DIDerivedType(tag: DW_TAG_member, name: "headtail", scope: !15862, file: !5200, line: 69, baseType: !396, size: 32, offset: 800)
!15876 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !15862, file: !5200, line: 71, baseType: !978, size: 64, offset: 832)
!15877 = !DIDerivedType(tag: DW_TAG_member, name: "lin_error", scope: !15862, file: !5200, line: 74, baseType: !396, size: 32, offset: 896)
!15878 = !DIDerivedType(tag: DW_TAG_member, name: "rot_error", scope: !15862, file: !5200, line: 75, baseType: !396, size: 32, offset: 928)
!15879 = !DILocation(line: 1387, column: 15, scope: !15854)
!15880 = !DILocation(line: 1389, column: 11, scope: !15881)
!15881 = distinct !DILexicalBlock(scope: !15854, file: !3, line: 1389, column: 2)
!15882 = !DILocation(line: 1389, column: 20, scope: !15881)
!15883 = !DILocation(line: 1389, column: 10, scope: !15881)
!15884 = !DILocation(line: 1389, column: 7, scope: !15881)
!15885 = !DILocation(line: 1389, column: 27, scope: !15886)
!15886 = distinct !DILexicalBlock(scope: !15881, file: !3, line: 1389, column: 2)
!15887 = !DILocation(line: 1389, column: 2, scope: !15881)
!15888 = !DILocalVariable(name: "cti", scope: !15889, file: !3, line: 1390, type: !15890)
!15889 = distinct !DILexicalBlock(scope: !15886, file: !3, line: 1389, column: 47)
!15890 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15891, size: 64)
!15891 = !DIDerivedType(tag: DW_TAG_typedef, name: "bConstraintTypeInfo", file: !15892, line: 108, baseType: !15893)
!15892 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_constraint.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!15893 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bConstraintTypeInfo", file: !15892, line: 80, size: 1088, elements: !15894)
!15894 = !{!15895, !15896, !15897, !15898, !15899, !15903, !15911, !15915, !15916, !15920, !15924, !15950}
!15895 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !15893, file: !15892, line: 82, baseType: !399, size: 16)
!15896 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !15893, file: !15892, line: 83, baseType: !399, size: 16, offset: 16)
!15897 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !15893, file: !15892, line: 84, baseType: !2910, size: 256, offset: 32)
!15898 = !DIDerivedType(tag: DW_TAG_member, name: "structName", scope: !15893, file: !15892, line: 85, baseType: !2910, size: 256, offset: 288)
!15899 = !DIDerivedType(tag: DW_TAG_member, name: "free_data", scope: !15893, file: !15892, line: 89, baseType: !15900, size: 64, offset: 576)
!15900 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15901, size: 64)
!15901 = !DISubroutineType(types: !15902)
!15902 = !{null, !15865}
!15903 = !DIDerivedType(tag: DW_TAG_member, name: "id_looper", scope: !15893, file: !15892, line: 91, baseType: !15904, size: 64, offset: 640)
!15904 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15905, size: 64)
!15905 = !DISubroutineType(types: !15906)
!15906 = !{null, !15865, !15907, !372}
!15907 = !DIDerivedType(tag: DW_TAG_typedef, name: "ConstraintIDFunc", file: !15892, line: 65, baseType: !15908)
!15908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15909, size: 64)
!15909 = !DISubroutineType(types: !15910)
!15910 = !{null, !15865, !1588, !474, !372}
!15911 = !DIDerivedType(tag: DW_TAG_member, name: "copy_data", scope: !15893, file: !15892, line: 93, baseType: !15912, size: 64, offset: 704)
!15912 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15913, size: 64)
!15913 = !DISubroutineType(types: !15914)
!15914 = !{null, !15865, !15865}
!15915 = !DIDerivedType(tag: DW_TAG_member, name: "new_data", scope: !15893, file: !15892, line: 95, baseType: !1244, size: 64, offset: 768)
!15916 = !DIDerivedType(tag: DW_TAG_member, name: "get_constraint_targets", scope: !15893, file: !15892, line: 99, baseType: !15917, size: 64, offset: 832)
!15917 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15918, size: 64)
!15918 = !DISubroutineType(types: !15919)
!15919 = !{!98, !15865, !3360}
!15920 = !DIDerivedType(tag: DW_TAG_member, name: "flush_constraint_targets", scope: !15893, file: !15892, line: 101, baseType: !15921, size: 64, offset: 896)
!15921 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15922, size: 64)
!15922 = !DISubroutineType(types: !15923)
!15923 = !{null, !15865, !3360, !474}
!15924 = !DIDerivedType(tag: DW_TAG_member, name: "get_target_matrix", scope: !15893, file: !15892, line: 105, baseType: !15925, size: 64, offset: 960)
!15925 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15926, size: 64)
!15926 = !DISubroutineType(types: !15927)
!15927 = !{null, !15865, !15928, !15938, !396}
!15928 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15929, size: 64)
!15929 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bConstraintOb", file: !15892, line: 50, size: 1280, elements: !15930)
!15930 = !{!15931, !15932, !15933, !15934, !15935, !15936, !15937}
!15931 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !15929, file: !15892, line: 51, baseType: !827, size: 64)
!15932 = !DIDerivedType(tag: DW_TAG_member, name: "ob", scope: !15929, file: !15892, line: 52, baseType: !423, size: 64, offset: 64)
!15933 = !DIDerivedType(tag: DW_TAG_member, name: "pchan", scope: !15929, file: !15892, line: 53, baseType: !15685, size: 64, offset: 128)
!15934 = !DIDerivedType(tag: DW_TAG_member, name: "matrix", scope: !15929, file: !15892, line: 55, baseType: !1752, size: 512, offset: 192)
!15935 = !DIDerivedType(tag: DW_TAG_member, name: "startmat", scope: !15929, file: !15892, line: 56, baseType: !1752, size: 512, offset: 704)
!15936 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !15929, file: !15892, line: 58, baseType: !399, size: 16, offset: 1216)
!15937 = !DIDerivedType(tag: DW_TAG_member, name: "rotOrder", scope: !15929, file: !15892, line: 59, baseType: !399, size: 16, offset: 1232)
!15938 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15939, size: 64)
!15939 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bConstraintTarget", file: !5200, line: 85, size: 1280, elements: !15940)
!15940 = !{!15941, !15942, !15943, !15944, !15945, !15946, !15947, !15948, !15949}
!15941 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !15939, file: !5200, line: 86, baseType: !15938, size: 64)
!15942 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !15939, file: !5200, line: 86, baseType: !15938, size: 64, offset: 64)
!15943 = !DIDerivedType(tag: DW_TAG_member, name: "tar", scope: !15939, file: !5200, line: 88, baseType: !423, size: 64, offset: 128)
!15944 = !DIDerivedType(tag: DW_TAG_member, name: "subtarget", scope: !15939, file: !5200, line: 89, baseType: !692, size: 512, offset: 192)
!15945 = !DIDerivedType(tag: DW_TAG_member, name: "matrix", scope: !15939, file: !5200, line: 91, baseType: !1752, size: 512, offset: 704)
!15946 = !DIDerivedType(tag: DW_TAG_member, name: "space", scope: !15939, file: !5200, line: 93, baseType: !399, size: 16, offset: 1216)
!15947 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !15939, file: !5200, line: 94, baseType: !399, size: 16, offset: 1232)
!15948 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !15939, file: !5200, line: 95, baseType: !399, size: 16, offset: 1248)
!15949 = !DIDerivedType(tag: DW_TAG_member, name: "rotOrder", scope: !15939, file: !5200, line: 96, baseType: !399, size: 16, offset: 1264)
!15950 = !DIDerivedType(tag: DW_TAG_member, name: "evaluate_constraint", scope: !15893, file: !15892, line: 107, baseType: !15951, size: 64, offset: 1024)
!15951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15952, size: 64)
!15952 = !DISubroutineType(types: !15953)
!15953 = !{null, !15865, !15928, !3360}
!15954 = !DILocation(line: 1390, column: 24, scope: !15889)
!15955 = !DILocation(line: 1390, column: 57, scope: !15889)
!15956 = !DILocation(line: 1390, column: 29, scope: !15889)
!15957 = !DILocation(line: 1393, column: 7, scope: !15958)
!15958 = distinct !DILexicalBlock(scope: !15889, file: !3, line: 1393, column: 7)
!15959 = !DILocation(line: 1393, column: 11, scope: !15958)
!15960 = !DILocation(line: 1393, column: 14, scope: !15958)
!15961 = !DILocation(line: 1393, column: 19, scope: !15958)
!15962 = !DILocation(line: 1393, column: 7, scope: !15889)
!15963 = !DILocation(line: 1395, column: 16, scope: !15964)
!15964 = distinct !DILexicalBlock(scope: !15958, file: !3, line: 1393, column: 25)
!15965 = !DILocation(line: 1395, column: 26, scope: !15964)
!15966 = !DILocation(line: 1395, column: 31, scope: !15964)
!15967 = !DILocation(line: 1395, column: 46, scope: !15964)
!15968 = !DILocation(line: 1395, column: 51, scope: !15964)
!15969 = !DILocation(line: 1395, column: 4, scope: !15964)
!15970 = !DILocation(line: 1398, column: 12, scope: !15964)
!15971 = !DILocation(line: 1398, column: 17, scope: !15964)
!15972 = !DILocation(line: 1398, column: 4, scope: !15964)
!15973 = !DILocalVariable(name: "data", scope: !15974, file: !3, line: 1401, type: !5198)
!15974 = distinct !DILexicalBlock(scope: !15975, file: !3, line: 1400, column: 5)
!15975 = distinct !DILexicalBlock(scope: !15964, file: !3, line: 1398, column: 23)
!15976 = !DILocation(line: 1401, column: 25, scope: !15974)
!15977 = !DILocation(line: 1401, column: 53, scope: !15974)
!15978 = !DILocation(line: 1401, column: 58, scope: !15974)
!15979 = !DILocation(line: 1401, column: 32, scope: !15974)
!15980 = !DILocalVariable(name: "ct", scope: !15974, file: !3, line: 1402, type: !15981)
!15981 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15982, size: 64)
!15982 = !DIDerivedType(tag: DW_TAG_typedef, name: "bConstraintTarget", file: !5200, line: 97, baseType: !15939)
!15983 = !DILocation(line: 1402, column: 25, scope: !15974)
!15984 = !DILocation(line: 1405, column: 15, scope: !15985)
!15985 = distinct !DILexicalBlock(scope: !15974, file: !3, line: 1405, column: 6)
!15986 = !DILocation(line: 1405, column: 21, scope: !15985)
!15987 = !DILocation(line: 1405, column: 29, scope: !15985)
!15988 = !DILocation(line: 1405, column: 13, scope: !15985)
!15989 = !DILocation(line: 1405, column: 11, scope: !15985)
!15990 = !DILocation(line: 1405, column: 36, scope: !15991)
!15991 = distinct !DILexicalBlock(scope: !15985, file: !3, line: 1405, column: 6)
!15992 = !DILocation(line: 1405, column: 6, scope: !15985)
!15993 = !DILocation(line: 1406, column: 19, scope: !15991)
!15994 = !DILocation(line: 1406, column: 53, scope: !15991)
!15995 = !DILocation(line: 1406, column: 7, scope: !15991)
!15996 = !DILocation(line: 1405, column: 44, scope: !15991)
!15997 = !DILocation(line: 1405, column: 48, scope: !15991)
!15998 = !DILocation(line: 1405, column: 42, scope: !15991)
!15999 = !DILocation(line: 1405, column: 6, scope: !15991)
!16000 = distinct !{!16000, !15992, !16001}
!16001 = !DILocation(line: 1406, column: 55, scope: !15985)
!16002 = !DILocation(line: 1410, column: 24, scope: !15974)
!16003 = !DILocation(line: 1410, column: 30, scope: !15974)
!16004 = !DILocation(line: 1410, column: 36, scope: !15974)
!16005 = !DILocation(line: 1410, column: 6, scope: !15974)
!16006 = !DILocation(line: 1412, column: 6, scope: !15975)
!16007 = !DILocalVariable(name: "data", scope: !16008, file: !3, line: 1415, type: !5210)
!16008 = distinct !DILexicalBlock(scope: !15975, file: !3, line: 1414, column: 5)
!16009 = !DILocation(line: 1415, column: 27, scope: !16008)
!16010 = !DILocation(line: 1415, column: 57, scope: !16008)
!16011 = !DILocation(line: 1415, column: 62, scope: !16008)
!16012 = !DILocation(line: 1415, column: 34, scope: !16008)
!16013 = !DILocation(line: 1418, column: 16, scope: !16008)
!16014 = !DILocation(line: 1418, column: 41, scope: !16008)
!16015 = !DILocation(line: 1418, column: 47, scope: !16008)
!16016 = !DILocation(line: 1418, column: 40, scope: !16008)
!16017 = !DILocation(line: 1418, column: 39, scope: !16008)
!16018 = !DILocation(line: 1418, column: 26, scope: !16008)
!16019 = !DILocation(line: 1418, column: 59, scope: !16008)
!16020 = !DILocation(line: 1418, column: 65, scope: !16008)
!16021 = !DILocation(line: 1418, column: 6, scope: !16008)
!16022 = !DILocation(line: 1420, column: 6, scope: !15975)
!16023 = !DILocation(line: 1422, column: 3, scope: !15964)
!16024 = !DILocation(line: 1425, column: 15, scope: !15889)
!16025 = !DILocation(line: 1425, column: 43, scope: !15889)
!16026 = !DILocation(line: 1425, column: 3, scope: !15889)
!16027 = !DILocation(line: 1426, column: 2, scope: !15889)
!16028 = !DILocation(line: 1389, column: 36, scope: !15886)
!16029 = !DILocation(line: 1389, column: 41, scope: !15886)
!16030 = !DILocation(line: 1389, column: 35, scope: !15886)
!16031 = !DILocation(line: 1389, column: 2, scope: !15886)
!16032 = distinct !{!16032, !15887, !16033}
!16033 = !DILocation(line: 1426, column: 2, scope: !15881)
!16034 = !DILocation(line: 1427, column: 1, scope: !15854)
!16035 = distinct !DISubprogram(name: "write_motionpath", scope: !3, file: !3, line: 1372, type: !16036, scopeLine: 1373, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !5641)
!16036 = !DISubroutineType(types: !16037)
!16037 = !{null, !5820, !4481}
!16038 = !DILocalVariable(name: "wd", arg: 1, scope: !16035, file: !3, line: 1372, type: !5820)
!16039 = !DILocation(line: 1372, column: 41, scope: !16035)
!16040 = !DILocalVariable(name: "mpath", arg: 2, scope: !16035, file: !3, line: 1372, type: !4481)
!16041 = !DILocation(line: 1372, column: 58, scope: !16035)
!16042 = !DILocation(line: 1375, column: 6, scope: !16043)
!16043 = distinct !DILexicalBlock(scope: !16035, file: !3, line: 1375, column: 6)
!16044 = !DILocation(line: 1375, column: 12, scope: !16043)
!16045 = !DILocation(line: 1375, column: 6, scope: !16035)
!16046 = !DILocation(line: 1376, column: 3, scope: !16043)
!16047 = !DILocation(line: 1379, column: 14, scope: !16035)
!16048 = !DILocation(line: 1379, column: 42, scope: !16035)
!16049 = !DILocation(line: 1379, column: 2, scope: !16035)
!16050 = !DILocation(line: 1382, column: 14, scope: !16035)
!16051 = !DILocation(line: 1382, column: 43, scope: !16035)
!16052 = !DILocation(line: 1382, column: 50, scope: !16035)
!16053 = !DILocation(line: 1382, column: 58, scope: !16035)
!16054 = !DILocation(line: 1382, column: 65, scope: !16035)
!16055 = !DILocation(line: 1382, column: 2, scope: !16035)
!16056 = !DILocation(line: 1383, column: 1, scope: !16035)
!16057 = distinct !DISubprogram(name: "write_particlesystems", scope: !3, file: !3, line: 1155, type: !7324, scopeLine: 1156, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !5641)
!16058 = !DILocalVariable(name: "wd", arg: 1, scope: !16057, file: !3, line: 1155, type: !5820)
!16059 = !DILocation(line: 1155, column: 46, scope: !16057)
!16060 = !DILocalVariable(name: "particles", arg: 2, scope: !16057, file: !3, line: 1155, type: !565)
!16061 = !DILocation(line: 1155, column: 60, scope: !16057)
!16062 = !DILocalVariable(name: "psys", scope: !16057, file: !3, line: 1157, type: !16063)
!16063 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16064, size: 64)
!16064 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParticleSystem", file: !3141, line: 314, baseType: !3363)
!16065 = !DILocation(line: 1157, column: 18, scope: !16057)
!16066 = !DILocation(line: 1157, column: 24, scope: !16057)
!16067 = !DILocation(line: 1157, column: 35, scope: !16057)
!16068 = !DILocalVariable(name: "pt", scope: !16057, file: !3, line: 1158, type: !16069)
!16069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16070, size: 64)
!16070 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParticleTarget", file: !3141, line: 85, baseType: !16071)
!16071 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleTarget", file: !3141, line: 79, size: 320, elements: !16072)
!16072 = !{!16073, !16075, !16076, !16077, !16078, !16079, !16080, !16081}
!16073 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !16071, file: !3141, line: 80, baseType: !16074, size: 64)
!16074 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16071, size: 64)
!16075 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !16071, file: !3141, line: 80, baseType: !16074, size: 64, offset: 64)
!16076 = !DIDerivedType(tag: DW_TAG_member, name: "ob", scope: !16071, file: !3141, line: 81, baseType: !423, size: 64, offset: 128)
!16077 = !DIDerivedType(tag: DW_TAG_member, name: "psys", scope: !16071, file: !3141, line: 82, baseType: !98, size: 32, offset: 192)
!16078 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !16071, file: !3141, line: 83, baseType: !399, size: 16, offset: 224)
!16079 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !16071, file: !3141, line: 83, baseType: !399, size: 16, offset: 240)
!16080 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !16071, file: !3141, line: 84, baseType: !396, size: 32, offset: 256)
!16081 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !16071, file: !3141, line: 84, baseType: !396, size: 32, offset: 288)
!16082 = !DILocation(line: 1158, column: 18, scope: !16057)
!16083 = !DILocalVariable(name: "a", scope: !16057, file: !3, line: 1159, type: !98)
!16084 = !DILocation(line: 1159, column: 6, scope: !16057)
!16085 = !DILocation(line: 1161, column: 2, scope: !16057)
!16086 = !DILocation(line: 1161, column: 9, scope: !16087)
!16087 = distinct !DILexicalBlock(scope: !16088, file: !3, line: 1161, column: 2)
!16088 = distinct !DILexicalBlock(scope: !16057, file: !3, line: 1161, column: 2)
!16089 = !DILocation(line: 1161, column: 2, scope: !16088)
!16090 = !DILocation(line: 1162, column: 15, scope: !16091)
!16091 = distinct !DILexicalBlock(scope: !16087, file: !3, line: 1161, column: 32)
!16092 = !DILocation(line: 1162, column: 46, scope: !16091)
!16093 = !DILocation(line: 1162, column: 3, scope: !16091)
!16094 = !DILocation(line: 1164, column: 7, scope: !16095)
!16095 = distinct !DILexicalBlock(scope: !16091, file: !3, line: 1164, column: 7)
!16096 = !DILocation(line: 1164, column: 13, scope: !16095)
!16097 = !DILocation(line: 1164, column: 7, scope: !16091)
!16098 = !DILocation(line: 1165, column: 16, scope: !16099)
!16099 = distinct !DILexicalBlock(scope: !16095, file: !3, line: 1164, column: 24)
!16100 = !DILocation(line: 1165, column: 42, scope: !16099)
!16101 = !DILocation(line: 1165, column: 48, scope: !16099)
!16102 = !DILocation(line: 1165, column: 57, scope: !16099)
!16103 = !DILocation(line: 1165, column: 63, scope: !16099)
!16104 = !DILocation(line: 1165, column: 4, scope: !16099)
!16105 = !DILocation(line: 1167, column: 8, scope: !16106)
!16106 = distinct !DILexicalBlock(scope: !16099, file: !3, line: 1167, column: 8)
!16107 = !DILocation(line: 1167, column: 14, scope: !16106)
!16108 = !DILocation(line: 1167, column: 25, scope: !16106)
!16109 = !DILocation(line: 1167, column: 8, scope: !16099)
!16110 = !DILocalVariable(name: "pa", scope: !16111, file: !3, line: 1168, type: !3598)
!16111 = distinct !DILexicalBlock(scope: !16106, file: !3, line: 1167, column: 31)
!16112 = !DILocation(line: 1168, column: 19, scope: !16111)
!16113 = !DILocation(line: 1168, column: 24, scope: !16111)
!16114 = !DILocation(line: 1168, column: 30, scope: !16111)
!16115 = !DILocation(line: 1170, column: 11, scope: !16116)
!16116 = distinct !DILexicalBlock(scope: !16111, file: !3, line: 1170, column: 5)
!16117 = !DILocation(line: 1170, column: 10, scope: !16116)
!16118 = !DILocation(line: 1170, column: 15, scope: !16119)
!16119 = distinct !DILexicalBlock(scope: !16116, file: !3, line: 1170, column: 5)
!16120 = !DILocation(line: 1170, column: 17, scope: !16119)
!16121 = !DILocation(line: 1170, column: 23, scope: !16119)
!16122 = !DILocation(line: 1170, column: 16, scope: !16119)
!16123 = !DILocation(line: 1170, column: 5, scope: !16116)
!16124 = !DILocation(line: 1171, column: 18, scope: !16119)
!16125 = !DILocation(line: 1171, column: 39, scope: !16119)
!16126 = !DILocation(line: 1171, column: 43, scope: !16119)
!16127 = !DILocation(line: 1171, column: 51, scope: !16119)
!16128 = !DILocation(line: 1171, column: 55, scope: !16119)
!16129 = !DILocation(line: 1171, column: 6, scope: !16119)
!16130 = !DILocation(line: 1170, column: 33, scope: !16119)
!16131 = !DILocation(line: 1170, column: 39, scope: !16119)
!16132 = !DILocation(line: 1170, column: 5, scope: !16119)
!16133 = distinct !{!16133, !16123, !16134}
!16134 = !DILocation(line: 1171, column: 59, scope: !16116)
!16135 = !DILocation(line: 1172, column: 4, scope: !16111)
!16136 = !DILocation(line: 1174, column: 8, scope: !16137)
!16137 = distinct !DILexicalBlock(scope: !16099, file: !3, line: 1174, column: 8)
!16138 = !DILocation(line: 1174, column: 14, scope: !16137)
!16139 = !DILocation(line: 1174, column: 25, scope: !16137)
!16140 = !DILocation(line: 1174, column: 30, scope: !16137)
!16141 = !DILocation(line: 1174, column: 33, scope: !16137)
!16142 = !DILocation(line: 1174, column: 39, scope: !16137)
!16143 = !DILocation(line: 1174, column: 45, scope: !16137)
!16144 = !DILocation(line: 1174, column: 54, scope: !16137)
!16145 = !DILocation(line: 1174, column: 8, scope: !16099)
!16146 = !DILocation(line: 1175, column: 17, scope: !16137)
!16147 = !DILocation(line: 1175, column: 43, scope: !16137)
!16148 = !DILocation(line: 1175, column: 49, scope: !16137)
!16149 = !DILocation(line: 1175, column: 58, scope: !16137)
!16150 = !DILocation(line: 1175, column: 64, scope: !16137)
!16151 = !DILocation(line: 1175, column: 75, scope: !16137)
!16152 = !DILocation(line: 1175, column: 5, scope: !16137)
!16153 = !DILocation(line: 1177, column: 8, scope: !16154)
!16154 = distinct !DILexicalBlock(scope: !16099, file: !3, line: 1177, column: 8)
!16155 = !DILocation(line: 1177, column: 14, scope: !16154)
!16156 = !DILocation(line: 1177, column: 20, scope: !16154)
!16157 = !DILocation(line: 1177, column: 26, scope: !16154)
!16158 = !DILocation(line: 1177, column: 29, scope: !16154)
!16159 = !DILocation(line: 1177, column: 35, scope: !16154)
!16160 = !DILocation(line: 1177, column: 41, scope: !16154)
!16161 = !DILocation(line: 1177, column: 50, scope: !16154)
!16162 = !DILocation(line: 1177, column: 69, scope: !16154)
!16163 = !DILocation(line: 1177, column: 73, scope: !16154)
!16164 = !DILocation(line: 1177, column: 79, scope: !16154)
!16165 = !DILocation(line: 1177, column: 85, scope: !16154)
!16166 = !DILocation(line: 1177, column: 92, scope: !16154)
!16167 = !DILocation(line: 1177, column: 97, scope: !16154)
!16168 = !DILocation(line: 1177, column: 8, scope: !16099)
!16169 = !DILocation(line: 1178, column: 17, scope: !16154)
!16170 = !DILocation(line: 1178, column: 45, scope: !16154)
!16171 = !DILocation(line: 1178, column: 51, scope: !16154)
!16172 = !DILocation(line: 1178, column: 69, scope: !16154)
!16173 = !DILocation(line: 1178, column: 75, scope: !16154)
!16174 = !DILocation(line: 1178, column: 5, scope: !16154)
!16175 = !DILocation(line: 1179, column: 3, scope: !16099)
!16176 = !DILocation(line: 1180, column: 8, scope: !16091)
!16177 = !DILocation(line: 1180, column: 14, scope: !16091)
!16178 = !DILocation(line: 1180, column: 22, scope: !16091)
!16179 = !DILocation(line: 1180, column: 6, scope: !16091)
!16180 = !DILocation(line: 1181, column: 3, scope: !16091)
!16181 = !DILocation(line: 1181, column: 10, scope: !16182)
!16182 = distinct !DILexicalBlock(scope: !16183, file: !3, line: 1181, column: 3)
!16183 = distinct !DILexicalBlock(scope: !16091, file: !3, line: 1181, column: 3)
!16184 = !DILocation(line: 1181, column: 3, scope: !16183)
!16185 = !DILocation(line: 1182, column: 16, scope: !16182)
!16186 = !DILocation(line: 1182, column: 47, scope: !16182)
!16187 = !DILocation(line: 1182, column: 4, scope: !16182)
!16188 = !DILocation(line: 1181, column: 17, scope: !16182)
!16189 = !DILocation(line: 1181, column: 21, scope: !16182)
!16190 = !DILocation(line: 1181, column: 16, scope: !16182)
!16191 = !DILocation(line: 1181, column: 3, scope: !16182)
!16192 = distinct !{!16192, !16184, !16193}
!16193 = !DILocation(line: 1182, column: 49, scope: !16183)
!16194 = !DILocation(line: 1184, column: 7, scope: !16195)
!16195 = distinct !DILexicalBlock(scope: !16091, file: !3, line: 1184, column: 7)
!16196 = !DILocation(line: 1184, column: 13, scope: !16195)
!16197 = !DILocation(line: 1184, column: 7, scope: !16091)
!16198 = !DILocation(line: 1184, column: 32, scope: !16195)
!16199 = !DILocation(line: 1184, column: 59, scope: !16195)
!16200 = !DILocation(line: 1184, column: 65, scope: !16195)
!16201 = !DILocation(line: 1184, column: 75, scope: !16195)
!16202 = !DILocation(line: 1184, column: 81, scope: !16195)
!16203 = !DILocation(line: 1184, column: 20, scope: !16195)
!16204 = !DILocation(line: 1186, column: 7, scope: !16205)
!16205 = distinct !DILexicalBlock(scope: !16091, file: !3, line: 1186, column: 7)
!16206 = !DILocation(line: 1186, column: 13, scope: !16205)
!16207 = !DILocation(line: 1186, column: 7, scope: !16091)
!16208 = !DILocation(line: 1187, column: 16, scope: !16209)
!16209 = distinct !DILexicalBlock(scope: !16205, file: !3, line: 1186, column: 19)
!16210 = !DILocation(line: 1187, column: 50, scope: !16209)
!16211 = !DILocation(line: 1187, column: 56, scope: !16209)
!16212 = !DILocation(line: 1187, column: 4, scope: !16209)
!16213 = !DILocation(line: 1188, column: 16, scope: !16209)
!16214 = !DILocation(line: 1188, column: 49, scope: !16209)
!16215 = !DILocation(line: 1188, column: 55, scope: !16209)
!16216 = !DILocation(line: 1188, column: 61, scope: !16209)
!16217 = !DILocation(line: 1188, column: 4, scope: !16209)
!16218 = !DILocation(line: 1189, column: 16, scope: !16209)
!16219 = !DILocation(line: 1189, column: 50, scope: !16209)
!16220 = !DILocation(line: 1189, column: 56, scope: !16209)
!16221 = !DILocation(line: 1189, column: 62, scope: !16209)
!16222 = !DILocation(line: 1189, column: 4, scope: !16209)
!16223 = !DILocation(line: 1190, column: 3, scope: !16209)
!16224 = !DILocation(line: 1192, column: 21, scope: !16091)
!16225 = !DILocation(line: 1192, column: 26, scope: !16091)
!16226 = !DILocation(line: 1192, column: 32, scope: !16091)
!16227 = !DILocation(line: 1192, column: 3, scope: !16091)
!16228 = !DILocation(line: 1193, column: 2, scope: !16091)
!16229 = !DILocation(line: 1161, column: 20, scope: !16087)
!16230 = !DILocation(line: 1161, column: 26, scope: !16087)
!16231 = !DILocation(line: 1161, column: 19, scope: !16087)
!16232 = !DILocation(line: 1161, column: 2, scope: !16087)
!16233 = distinct !{!16233, !16089, !16234}
!16234 = !DILocation(line: 1193, column: 2, scope: !16088)
!16235 = !DILocation(line: 1194, column: 1, scope: !16057)
!16236 = distinct !DISubprogram(name: "write_modifiers", scope: !3, file: !3, line: 1480, type: !7324, scopeLine: 1481, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !5641)
!16237 = !DILocalVariable(name: "wd", arg: 1, scope: !16236, file: !3, line: 1480, type: !5820)
!16238 = !DILocation(line: 1480, column: 40, scope: !16236)
!16239 = !DILocalVariable(name: "modbase", arg: 2, scope: !16236, file: !3, line: 1480, type: !565)
!16240 = !DILocation(line: 1480, column: 54, scope: !16236)
!16241 = !DILocalVariable(name: "md", scope: !16236, file: !3, line: 1482, type: !16242)
!16242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3630, size: 64)
!16243 = !DILocation(line: 1482, column: 16, scope: !16236)
!16244 = !DILocation(line: 1484, column: 6, scope: !16245)
!16245 = distinct !DILexicalBlock(scope: !16236, file: !3, line: 1484, column: 6)
!16246 = !DILocation(line: 1484, column: 14, scope: !16245)
!16247 = !DILocation(line: 1484, column: 6, scope: !16236)
!16248 = !DILocation(line: 1484, column: 23, scope: !16245)
!16249 = !DILocation(line: 1485, column: 10, scope: !16250)
!16250 = distinct !DILexicalBlock(scope: !16236, file: !3, line: 1485, column: 2)
!16251 = !DILocation(line: 1485, column: 19, scope: !16250)
!16252 = !DILocation(line: 1485, column: 9, scope: !16250)
!16253 = !DILocation(line: 1485, column: 7, scope: !16250)
!16254 = !DILocation(line: 1485, column: 26, scope: !16255)
!16255 = distinct !DILexicalBlock(scope: !16250, file: !3, line: 1485, column: 2)
!16256 = !DILocation(line: 1485, column: 2, scope: !16250)
!16257 = !DILocalVariable(name: "mti", scope: !16258, file: !3, line: 1486, type: !16259)
!16258 = distinct !DILexicalBlock(scope: !16255, file: !3, line: 1485, column: 44)
!16259 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16260, size: 64)
!16260 = !DIDerivedType(tag: DW_TAG_typedef, name: "ModifierTypeInfo", file: !236, line: 309, baseType: !16261)
!16261 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ModifierTypeInfo", file: !236, line: 121, size: 1728, elements: !16262)
!16262 = !{!16263, !16264, !16265, !16266, !16268, !16270, !16274, !16279, !16284, !16288, !16292, !16296, !16300, !16304, !16310, !16311, !16315, !16321, !16325, !16326, !16334, !16342}
!16263 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !16261, file: !236, line: 123, baseType: !2910, size: 256)
!16264 = !DIDerivedType(tag: DW_TAG_member, name: "structName", scope: !16261, file: !236, line: 128, baseType: !2910, size: 256, offset: 256)
!16265 = !DIDerivedType(tag: DW_TAG_member, name: "structSize", scope: !16261, file: !236, line: 131, baseType: !98, size: 32, offset: 512)
!16266 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !16261, file: !236, line: 133, baseType: !16267, size: 32, offset: 544)
!16267 = !DIDerivedType(tag: DW_TAG_typedef, name: "ModifierTypeType", file: !236, line: 71, baseType: !235)
!16268 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !16261, file: !236, line: 134, baseType: !16269, size: 32, offset: 576)
!16269 = !DIDerivedType(tag: DW_TAG_typedef, name: "ModifierTypeFlag", file: !236, line: 104, baseType: !244)
!16270 = !DIDerivedType(tag: DW_TAG_member, name: "copyData", scope: !16261, file: !236, line: 142, baseType: !16271, size: 64, offset: 640)
!16271 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16272, size: 64)
!16272 = !DISubroutineType(types: !16273)
!16273 = !{null, !3634, !3634}
!16274 = !DIDerivedType(tag: DW_TAG_member, name: "deformVerts", scope: !16261, file: !236, line: 151, baseType: !16275, size: 64, offset: 704)
!16275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16276, size: 64)
!16276 = !DISubroutineType(types: !16277)
!16277 = !{null, !3634, !423, !3721, !4190, !98, !16278}
!16278 = !DIDerivedType(tag: DW_TAG_typedef, name: "ModifierApplyFlag", file: !236, line: 118, baseType: !256)
!16279 = !DIDerivedType(tag: DW_TAG_member, name: "deformMatrices", scope: !16261, file: !236, line: 157, baseType: !16280, size: 64, offset: 768)
!16280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16281, size: 64)
!16281 = !DISubroutineType(types: !16282)
!16282 = !{null, !3634, !423, !3721, !4190, !16283, !98}
!16283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1755, size: 64)
!16284 = !DIDerivedType(tag: DW_TAG_member, name: "deformVertsEM", scope: !16261, file: !236, line: 163, baseType: !16285, size: 64, offset: 832)
!16285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16286, size: 64)
!16286 = !DISubroutineType(types: !16287)
!16287 = !{null, !3634, !423, !11434, !3721, !4190, !98}
!16288 = !DIDerivedType(tag: DW_TAG_member, name: "deformMatricesEM", scope: !16261, file: !236, line: 168, baseType: !16289, size: 64, offset: 896)
!16289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16290, size: 64)
!16290 = !DISubroutineType(types: !16291)
!16291 = !{null, !3634, !423, !11434, !3721, !4190, !16283, !98}
!16292 = !DIDerivedType(tag: DW_TAG_member, name: "applyModifier", scope: !16261, file: !236, line: 193, baseType: !16293, size: 64, offset: 960)
!16293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16294, size: 64)
!16294 = !DISubroutineType(types: !16295)
!16295 = !{!3721, !3634, !423, !3721, !16278}
!16296 = !DIDerivedType(tag: DW_TAG_member, name: "applyModifierEM", scope: !16261, file: !236, line: 204, baseType: !16297, size: 64, offset: 1024)
!16297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16298, size: 64)
!16298 = !DISubroutineType(types: !16299)
!16299 = !{!3721, !3634, !423, !11434, !3721, !16278}
!16300 = !DIDerivedType(tag: DW_TAG_member, name: "initData", scope: !16261, file: !236, line: 217, baseType: !16301, size: 64, offset: 1088)
!16301 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16302, size: 64)
!16302 = !DISubroutineType(types: !16303)
!16303 = !{null, !3634}
!16304 = !DIDerivedType(tag: DW_TAG_member, name: "requiredDataMask", scope: !16261, file: !236, line: 235, baseType: !16305, size: 64, offset: 1152)
!16305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16306, size: 64)
!16306 = !DISubroutineType(types: !16307)
!16307 = !{!16308, !423, !3634}
!16308 = !DIDerivedType(tag: DW_TAG_typedef, name: "CustomDataMask", file: !16309, line: 48, baseType: !585)
!16309 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_customdata.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!16310 = !DIDerivedType(tag: DW_TAG_member, name: "freeData", scope: !16261, file: !236, line: 242, baseType: !16301, size: 64, offset: 1216)
!16311 = !DIDerivedType(tag: DW_TAG_member, name: "isDisabled", scope: !16261, file: !236, line: 252, baseType: !16312, size: 64, offset: 1280)
!16312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16313, size: 64)
!16313 = !DISubroutineType(types: !16314)
!16314 = !{!474, !3634, !98}
!16315 = !DIDerivedType(tag: DW_TAG_member, name: "updateDepgraph", scope: !16261, file: !236, line: 259, baseType: !16316, size: 64, offset: 1344)
!16316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16317, size: 64)
!16317 = !DISubroutineType(types: !16318)
!16318 = !{null, !3634, !2949, !827, !423, !16319}
!16319 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16320, size: 64)
!16320 = !DICompositeType(tag: DW_TAG_structure_type, name: "DagNode", file: !236, line: 38, flags: DIFlagFwdDecl)
!16321 = !DIDerivedType(tag: DW_TAG_member, name: "dependsOnTime", scope: !16261, file: !236, line: 267, baseType: !16322, size: 64, offset: 1408)
!16322 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16323, size: 64)
!16323 = !DISubroutineType(types: !16324)
!16324 = !{!474, !3634}
!16325 = !DIDerivedType(tag: DW_TAG_member, name: "dependsOnNormals", scope: !16261, file: !236, line: 277, baseType: !16322, size: 64, offset: 1472)
!16326 = !DIDerivedType(tag: DW_TAG_member, name: "foreachObjectLink", scope: !16261, file: !236, line: 286, baseType: !16327, size: 64, offset: 1536)
!16327 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16328, size: 64)
!16328 = !DISubroutineType(types: !16329)
!16329 = !{null, !3634, !423, !16330, !372}
!16330 = !DIDerivedType(tag: DW_TAG_typedef, name: "ObjectWalkFunc", file: !236, line: 106, baseType: !16331)
!16331 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16332, size: 64)
!16332 = !DISubroutineType(types: !16333)
!16333 = !{null, !372, !423, !3079}
!16334 = !DIDerivedType(tag: DW_TAG_member, name: "foreachIDLink", scope: !16261, file: !236, line: 297, baseType: !16335, size: 64, offset: 1600)
!16335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16336, size: 64)
!16336 = !DISubroutineType(types: !16337)
!16337 = !{null, !3634, !423, !16338, !372}
!16338 = !DIDerivedType(tag: DW_TAG_typedef, name: "IDWalkFunc", file: !236, line: 107, baseType: !16339)
!16339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16340, size: 64)
!16340 = !DISubroutineType(types: !16341)
!16341 = !{null, !372, !423, !1588}
!16342 = !DIDerivedType(tag: DW_TAG_member, name: "foreachTexLink", scope: !16261, file: !236, line: 307, baseType: !16343, size: 64, offset: 1664)
!16343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16344, size: 64)
!16344 = !DISubroutineType(types: !16345)
!16345 = !{null, !3634, !423, !16346, !372}
!16346 = !DIDerivedType(tag: DW_TAG_typedef, name: "TexWalkFunc", file: !236, line: 108, baseType: !16347)
!16347 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16348, size: 64)
!16348 = !DISubroutineType(types: !16349)
!16349 = !{null, !372, !423, !3634, !373}
!16350 = !DILocation(line: 1486, column: 21, scope: !16258)
!16351 = !DILocation(line: 1486, column: 48, scope: !16258)
!16352 = !DILocation(line: 1486, column: 52, scope: !16258)
!16353 = !DILocation(line: 1486, column: 27, scope: !16258)
!16354 = !DILocation(line: 1487, column: 7, scope: !16355)
!16355 = distinct !DILexicalBlock(scope: !16258, file: !3, line: 1487, column: 7)
!16356 = !DILocation(line: 1487, column: 11, scope: !16355)
!16357 = !DILocation(line: 1487, column: 7, scope: !16258)
!16358 = !DILocation(line: 1487, column: 20, scope: !16355)
!16359 = !DILocation(line: 1489, column: 15, scope: !16258)
!16360 = !DILocation(line: 1489, column: 25, scope: !16258)
!16361 = !DILocation(line: 1489, column: 30, scope: !16258)
!16362 = !DILocation(line: 1489, column: 45, scope: !16258)
!16363 = !DILocation(line: 1489, column: 3, scope: !16258)
!16364 = !DILocation(line: 1491, column: 7, scope: !16365)
!16365 = distinct !DILexicalBlock(scope: !16258, file: !3, line: 1491, column: 7)
!16366 = !DILocation(line: 1491, column: 11, scope: !16365)
!16367 = !DILocation(line: 1491, column: 15, scope: !16365)
!16368 = !DILocation(line: 1491, column: 7, scope: !16258)
!16369 = !DILocalVariable(name: "hmd", scope: !16370, file: !3, line: 1492, type: !5220)
!16370 = distinct !DILexicalBlock(scope: !16365, file: !3, line: 1491, column: 37)
!16371 = !DILocation(line: 1492, column: 22, scope: !16370)
!16372 = !DILocation(line: 1492, column: 48, scope: !16370)
!16373 = !DILocation(line: 1492, column: 28, scope: !16370)
!16374 = !DILocation(line: 1494, column: 14, scope: !16370)
!16375 = !DILocation(line: 1494, column: 36, scope: !16370)
!16376 = !DILocation(line: 1494, column: 41, scope: !16370)
!16377 = !DILocation(line: 1494, column: 35, scope: !16370)
!16378 = !DILocation(line: 1494, column: 24, scope: !16370)
!16379 = !DILocation(line: 1494, column: 51, scope: !16370)
!16380 = !DILocation(line: 1494, column: 56, scope: !16370)
!16381 = !DILocation(line: 1494, column: 4, scope: !16370)
!16382 = !DILocation(line: 1495, column: 3, scope: !16370)
!16383 = !DILocation(line: 1496, column: 12, scope: !16384)
!16384 = distinct !DILexicalBlock(scope: !16365, file: !3, line: 1496, column: 12)
!16385 = !DILocation(line: 1496, column: 16, scope: !16384)
!16386 = !DILocation(line: 1496, column: 20, scope: !16384)
!16387 = !DILocation(line: 1496, column: 12, scope: !16365)
!16388 = !DILocalVariable(name: "clmd", scope: !16389, file: !3, line: 1497, type: !5234)
!16389 = distinct !DILexicalBlock(scope: !16384, file: !3, line: 1496, column: 43)
!16390 = !DILocation(line: 1497, column: 23, scope: !16389)
!16391 = !DILocation(line: 1497, column: 51, scope: !16389)
!16392 = !DILocation(line: 1497, column: 30, scope: !16389)
!16393 = !DILocation(line: 1499, column: 16, scope: !16389)
!16394 = !DILocation(line: 1499, column: 49, scope: !16389)
!16395 = !DILocation(line: 1499, column: 55, scope: !16389)
!16396 = !DILocation(line: 1499, column: 4, scope: !16389)
!16397 = !DILocation(line: 1500, column: 16, scope: !16389)
!16398 = !DILocation(line: 1500, column: 50, scope: !16389)
!16399 = !DILocation(line: 1500, column: 56, scope: !16389)
!16400 = !DILocation(line: 1500, column: 4, scope: !16389)
!16401 = !DILocation(line: 1501, column: 16, scope: !16389)
!16402 = !DILocation(line: 1501, column: 48, scope: !16389)
!16403 = !DILocation(line: 1501, column: 54, scope: !16389)
!16404 = !DILocation(line: 1501, column: 65, scope: !16389)
!16405 = !DILocation(line: 1501, column: 4, scope: !16389)
!16406 = !DILocation(line: 1502, column: 22, scope: !16389)
!16407 = !DILocation(line: 1502, column: 27, scope: !16389)
!16408 = !DILocation(line: 1502, column: 33, scope: !16389)
!16409 = !DILocation(line: 1502, column: 4, scope: !16389)
!16410 = !DILocation(line: 1503, column: 3, scope: !16389)
!16411 = !DILocation(line: 1504, column: 12, scope: !16412)
!16412 = distinct !DILexicalBlock(scope: !16384, file: !3, line: 1504, column: 12)
!16413 = !DILocation(line: 1504, column: 16, scope: !16412)
!16414 = !DILocation(line: 1504, column: 20, scope: !16412)
!16415 = !DILocation(line: 1504, column: 12, scope: !16384)
!16416 = !DILocalVariable(name: "smd", scope: !16417, file: !3, line: 1505, type: !5236)
!16417 = distinct !DILexicalBlock(scope: !16412, file: !3, line: 1504, column: 43)
!16418 = !DILocation(line: 1505, column: 23, scope: !16417)
!16419 = !DILocation(line: 1505, column: 50, scope: !16417)
!16420 = !DILocation(line: 1505, column: 29, scope: !16417)
!16421 = !DILocation(line: 1507, column: 8, scope: !16422)
!16422 = distinct !DILexicalBlock(scope: !16417, file: !3, line: 1507, column: 8)
!16423 = !DILocation(line: 1507, column: 13, scope: !16422)
!16424 = !DILocation(line: 1507, column: 18, scope: !16422)
!16425 = !DILocation(line: 1507, column: 8, scope: !16417)
!16426 = !DILocation(line: 1508, column: 9, scope: !16427)
!16427 = distinct !DILexicalBlock(scope: !16428, file: !3, line: 1508, column: 9)
!16428 = distinct !DILexicalBlock(scope: !16422, file: !3, line: 1507, column: 43)
!16429 = !DILocation(line: 1508, column: 14, scope: !16427)
!16430 = !DILocation(line: 1508, column: 9, scope: !16428)
!16431 = !DILocation(line: 1509, column: 24, scope: !16432)
!16432 = distinct !DILexicalBlock(scope: !16427, file: !3, line: 1508, column: 22)
!16433 = !DILocation(line: 1509, column: 30, scope: !16432)
!16434 = !DILocation(line: 1509, column: 35, scope: !16432)
!16435 = !DILocation(line: 1509, column: 43, scope: !16432)
!16436 = !DILocation(line: 1509, column: 6, scope: !16432)
!16437 = !DILocation(line: 1512, column: 53, scope: !16432)
!16438 = !DILocation(line: 1512, column: 58, scope: !16432)
!16439 = !DILocation(line: 1512, column: 66, scope: !16432)
!16440 = !DILocation(line: 1512, column: 36, scope: !16432)
!16441 = !DILocation(line: 1512, column: 6, scope: !16432)
!16442 = !DILocation(line: 1512, column: 11, scope: !16432)
!16443 = !DILocation(line: 1512, column: 19, scope: !16432)
!16444 = !DILocation(line: 1512, column: 34, scope: !16432)
!16445 = !DILocation(line: 1513, column: 6, scope: !16432)
!16446 = !DILocation(line: 1513, column: 11, scope: !16432)
!16447 = !DILocation(line: 1513, column: 19, scope: !16432)
!16448 = !DILocation(line: 1513, column: 35, scope: !16432)
!16449 = !DILocation(line: 1513, column: 40, scope: !16432)
!16450 = !DILocation(line: 1514, column: 6, scope: !16432)
!16451 = !DILocation(line: 1514, column: 11, scope: !16432)
!16452 = !DILocation(line: 1514, column: 19, scope: !16432)
!16453 = !DILocation(line: 1514, column: 35, scope: !16432)
!16454 = !DILocation(line: 1514, column: 40, scope: !16432)
!16455 = !DILocation(line: 1516, column: 24, scope: !16432)
!16456 = !DILocation(line: 1516, column: 30, scope: !16432)
!16457 = !DILocation(line: 1516, column: 35, scope: !16432)
!16458 = !DILocation(line: 1516, column: 43, scope: !16432)
!16459 = !DILocation(line: 1516, column: 6, scope: !16432)
!16460 = !DILocation(line: 1517, column: 5, scope: !16432)
!16461 = !DILocation(line: 1519, column: 17, scope: !16428)
!16462 = !DILocation(line: 1519, column: 53, scope: !16428)
!16463 = !DILocation(line: 1519, column: 58, scope: !16428)
!16464 = !DILocation(line: 1519, column: 5, scope: !16428)
!16465 = !DILocation(line: 1521, column: 9, scope: !16466)
!16466 = distinct !DILexicalBlock(scope: !16428, file: !3, line: 1521, column: 9)
!16467 = !DILocation(line: 1521, column: 14, scope: !16466)
!16468 = !DILocation(line: 1521, column: 9, scope: !16428)
!16469 = !DILocation(line: 1523, column: 29, scope: !16470)
!16470 = distinct !DILexicalBlock(scope: !16466, file: !3, line: 1521, column: 22)
!16471 = !DILocation(line: 1523, column: 34, scope: !16470)
!16472 = !DILocation(line: 1523, column: 42, scope: !16470)
!16473 = !DILocation(line: 1523, column: 6, scope: !16470)
!16474 = !DILocation(line: 1524, column: 6, scope: !16470)
!16475 = !DILocation(line: 1524, column: 11, scope: !16470)
!16476 = !DILocation(line: 1524, column: 19, scope: !16470)
!16477 = !DILocation(line: 1524, column: 34, scope: !16470)
!16478 = !DILocation(line: 1526, column: 18, scope: !16470)
!16479 = !DILocation(line: 1526, column: 50, scope: !16470)
!16480 = !DILocation(line: 1526, column: 55, scope: !16470)
!16481 = !DILocation(line: 1526, column: 63, scope: !16470)
!16482 = !DILocation(line: 1526, column: 6, scope: !16470)
!16483 = !DILocation(line: 1527, column: 5, scope: !16470)
!16484 = !DILocation(line: 1528, column: 4, scope: !16428)
!16485 = !DILocation(line: 1529, column: 13, scope: !16486)
!16486 = distinct !DILexicalBlock(scope: !16422, file: !3, line: 1529, column: 13)
!16487 = !DILocation(line: 1529, column: 18, scope: !16486)
!16488 = !DILocation(line: 1529, column: 23, scope: !16486)
!16489 = !DILocation(line: 1529, column: 13, scope: !16422)
!16490 = !DILocation(line: 1530, column: 17, scope: !16486)
!16491 = !DILocation(line: 1530, column: 51, scope: !16486)
!16492 = !DILocation(line: 1530, column: 56, scope: !16486)
!16493 = !DILocation(line: 1530, column: 5, scope: !16486)
!16494 = !DILocation(line: 1531, column: 13, scope: !16495)
!16495 = distinct !DILexicalBlock(scope: !16486, file: !3, line: 1531, column: 13)
!16496 = !DILocation(line: 1531, column: 18, scope: !16495)
!16497 = !DILocation(line: 1531, column: 23, scope: !16495)
!16498 = !DILocation(line: 1531, column: 13, scope: !16486)
!16499 = !DILocation(line: 1532, column: 17, scope: !16495)
!16500 = !DILocation(line: 1532, column: 51, scope: !16495)
!16501 = !DILocation(line: 1532, column: 56, scope: !16495)
!16502 = !DILocation(line: 1532, column: 5, scope: !16495)
!16503 = !DILocation(line: 1533, column: 3, scope: !16417)
!16504 = !DILocation(line: 1534, column: 12, scope: !16505)
!16505 = distinct !DILexicalBlock(scope: !16412, file: !3, line: 1534, column: 12)
!16506 = !DILocation(line: 1534, column: 16, scope: !16505)
!16507 = !DILocation(line: 1534, column: 20, scope: !16505)
!16508 = !DILocation(line: 1534, column: 12, scope: !16412)
!16509 = !DILocalVariable(name: "fluidmd", scope: !16510, file: !3, line: 1535, type: !5357)
!16510 = distinct !DILexicalBlock(scope: !16505, file: !3, line: 1534, column: 46)
!16511 = !DILocation(line: 1535, column: 26, scope: !16510)
!16512 = !DILocation(line: 1535, column: 60, scope: !16510)
!16513 = !DILocation(line: 1535, column: 36, scope: !16510)
!16514 = !DILocation(line: 1537, column: 16, scope: !16510)
!16515 = !DILocation(line: 1537, column: 49, scope: !16510)
!16516 = !DILocation(line: 1537, column: 58, scope: !16510)
!16517 = !DILocation(line: 1537, column: 4, scope: !16510)
!16518 = !DILocation(line: 1538, column: 3, scope: !16510)
!16519 = !DILocation(line: 1539, column: 12, scope: !16520)
!16520 = distinct !DILexicalBlock(scope: !16505, file: !3, line: 1539, column: 12)
!16521 = !DILocation(line: 1539, column: 16, scope: !16520)
!16522 = !DILocation(line: 1539, column: 20, scope: !16520)
!16523 = !DILocation(line: 1539, column: 12, scope: !16505)
!16524 = !DILocalVariable(name: "pmd", scope: !16525, file: !3, line: 1540, type: !5364)
!16525 = distinct !DILexicalBlock(scope: !16520, file: !3, line: 1539, column: 50)
!16526 = !DILocation(line: 1540, column: 30, scope: !16525)
!16527 = !DILocation(line: 1540, column: 64, scope: !16525)
!16528 = !DILocation(line: 1540, column: 36, scope: !16525)
!16529 = !DILocation(line: 1542, column: 8, scope: !16530)
!16530 = distinct !DILexicalBlock(scope: !16525, file: !3, line: 1542, column: 8)
!16531 = !DILocation(line: 1542, column: 13, scope: !16530)
!16532 = !DILocation(line: 1542, column: 8, scope: !16525)
!16533 = !DILocalVariable(name: "surface", scope: !16534, file: !3, line: 1543, type: !16535)
!16534 = distinct !DILexicalBlock(scope: !16530, file: !3, line: 1542, column: 21)
!16535 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16536, size: 64)
!16536 = !DIDerivedType(tag: DW_TAG_typedef, name: "DynamicPaintSurface", file: !5372, line: 136, baseType: !16537)
!16537 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DynamicPaintSurface", file: !5372, line: 86, size: 12480, elements: !16538)
!16538 = !{!16539, !16541, !16542, !16543, !16546, !16547, !16548, !16549, !16550, !16551, !16552, !16553, !16554, !16555, !16556, !16557, !16558, !16559, !16560, !16561, !16562, !16563, !16564, !16565, !16566, !16567, !16568, !16569, !16570, !16571, !16572, !16573, !16574, !16575, !16576, !16577, !16578, !16579, !16580, !16581, !16582, !16583, !16584, !16585, !16586, !16587, !16588, !16589, !16590, !16591}
!16539 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !16537, file: !5372, line: 88, baseType: !16540, size: 64)
!16540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16537, size: 64)
!16541 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !16537, file: !5372, line: 88, baseType: !16540, size: 64, offset: 64)
!16542 = !DIDerivedType(tag: DW_TAG_member, name: "canvas", scope: !16537, file: !5372, line: 89, baseType: !5370, size: 64, offset: 128)
!16543 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !16537, file: !5372, line: 90, baseType: !16544, size: 64, offset: 192)
!16544 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16545, size: 64)
!16545 = !DICompositeType(tag: DW_TAG_structure_type, name: "PaintSurfaceData", file: !5372, line: 33, flags: DIFlagFwdDecl)
!16546 = !DIDerivedType(tag: DW_TAG_member, name: "brush_group", scope: !16537, file: !5372, line: 92, baseType: !3061, size: 64, offset: 256)
!16547 = !DIDerivedType(tag: DW_TAG_member, name: "effector_weights", scope: !16537, file: !5372, line: 93, baseType: !3056, size: 64, offset: 320)
!16548 = !DIDerivedType(tag: DW_TAG_member, name: "pointcache", scope: !16537, file: !5372, line: 96, baseType: !3084, size: 64, offset: 384)
!16549 = !DIDerivedType(tag: DW_TAG_member, name: "ptcaches", scope: !16537, file: !5372, line: 97, baseType: !390, size: 128, offset: 448)
!16550 = !DIDerivedType(tag: DW_TAG_member, name: "current_frame", scope: !16537, file: !5372, line: 98, baseType: !98, size: 32, offset: 576)
!16551 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !16537, file: !5372, line: 101, baseType: !692, size: 512, offset: 608)
!16552 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !16537, file: !5372, line: 102, baseType: !399, size: 16, offset: 1120)
!16553 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !16537, file: !5372, line: 102, baseType: !399, size: 16, offset: 1136)
!16554 = !DIDerivedType(tag: DW_TAG_member, name: "disp_type", scope: !16537, file: !5372, line: 103, baseType: !399, size: 16, offset: 1152)
!16555 = !DIDerivedType(tag: DW_TAG_member, name: "image_fileformat", scope: !16537, file: !5372, line: 103, baseType: !399, size: 16, offset: 1168)
!16556 = !DIDerivedType(tag: DW_TAG_member, name: "effect_ui", scope: !16537, file: !5372, line: 104, baseType: !399, size: 16, offset: 1184)
!16557 = !DIDerivedType(tag: DW_TAG_member, name: "preview_id", scope: !16537, file: !5372, line: 105, baseType: !399, size: 16, offset: 1200)
!16558 = !DIDerivedType(tag: DW_TAG_member, name: "init_color_type", scope: !16537, file: !5372, line: 106, baseType: !399, size: 16, offset: 1216)
!16559 = !DIDerivedType(tag: DW_TAG_member, name: "pad_s", scope: !16537, file: !5372, line: 106, baseType: !399, size: 16, offset: 1232)
!16560 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !16537, file: !5372, line: 107, baseType: !98, size: 32, offset: 1248)
!16561 = !DIDerivedType(tag: DW_TAG_member, name: "effect", scope: !16537, file: !5372, line: 107, baseType: !98, size: 32, offset: 1280)
!16562 = !DIDerivedType(tag: DW_TAG_member, name: "image_resolution", scope: !16537, file: !5372, line: 109, baseType: !98, size: 32, offset: 1312)
!16563 = !DIDerivedType(tag: DW_TAG_member, name: "substeps", scope: !16537, file: !5372, line: 109, baseType: !98, size: 32, offset: 1344)
!16564 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !16537, file: !5372, line: 110, baseType: !98, size: 32, offset: 1376)
!16565 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame", scope: !16537, file: !5372, line: 110, baseType: !98, size: 32, offset: 1408)
!16566 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !16537, file: !5372, line: 110, baseType: !98, size: 32, offset: 1440)
!16567 = !DIDerivedType(tag: DW_TAG_member, name: "init_color", scope: !16537, file: !5372, line: 113, baseType: !408, size: 128, offset: 1472)
!16568 = !DIDerivedType(tag: DW_TAG_member, name: "init_texture", scope: !16537, file: !5372, line: 114, baseType: !991, size: 64, offset: 1600)
!16569 = !DIDerivedType(tag: DW_TAG_member, name: "init_layername", scope: !16537, file: !5372, line: 115, baseType: !692, size: 512, offset: 1664)
!16570 = !DIDerivedType(tag: DW_TAG_member, name: "dry_speed", scope: !16537, file: !5372, line: 117, baseType: !98, size: 32, offset: 2176)
!16571 = !DIDerivedType(tag: DW_TAG_member, name: "diss_speed", scope: !16537, file: !5372, line: 117, baseType: !98, size: 32, offset: 2208)
!16572 = !DIDerivedType(tag: DW_TAG_member, name: "color_dry_threshold", scope: !16537, file: !5372, line: 118, baseType: !396, size: 32, offset: 2240)
!16573 = !DIDerivedType(tag: DW_TAG_member, name: "depth_clamp", scope: !16537, file: !5372, line: 119, baseType: !396, size: 32, offset: 2272)
!16574 = !DIDerivedType(tag: DW_TAG_member, name: "disp_factor", scope: !16537, file: !5372, line: 119, baseType: !396, size: 32, offset: 2304)
!16575 = !DIDerivedType(tag: DW_TAG_member, name: "spread_speed", scope: !16537, file: !5372, line: 121, baseType: !396, size: 32, offset: 2336)
!16576 = !DIDerivedType(tag: DW_TAG_member, name: "color_spread_speed", scope: !16537, file: !5372, line: 121, baseType: !396, size: 32, offset: 2368)
!16577 = !DIDerivedType(tag: DW_TAG_member, name: "shrink_speed", scope: !16537, file: !5372, line: 121, baseType: !396, size: 32, offset: 2400)
!16578 = !DIDerivedType(tag: DW_TAG_member, name: "drip_vel", scope: !16537, file: !5372, line: 122, baseType: !396, size: 32, offset: 2432)
!16579 = !DIDerivedType(tag: DW_TAG_member, name: "drip_acc", scope: !16537, file: !5372, line: 122, baseType: !396, size: 32, offset: 2464)
!16580 = !DIDerivedType(tag: DW_TAG_member, name: "influence_scale", scope: !16537, file: !5372, line: 125, baseType: !396, size: 32, offset: 2496)
!16581 = !DIDerivedType(tag: DW_TAG_member, name: "radius_scale", scope: !16537, file: !5372, line: 125, baseType: !396, size: 32, offset: 2528)
!16582 = !DIDerivedType(tag: DW_TAG_member, name: "wave_damping", scope: !16537, file: !5372, line: 128, baseType: !396, size: 32, offset: 2560)
!16583 = !DIDerivedType(tag: DW_TAG_member, name: "wave_speed", scope: !16537, file: !5372, line: 128, baseType: !396, size: 32, offset: 2592)
!16584 = !DIDerivedType(tag: DW_TAG_member, name: "wave_timescale", scope: !16537, file: !5372, line: 128, baseType: !396, size: 32, offset: 2624)
!16585 = !DIDerivedType(tag: DW_TAG_member, name: "wave_spring", scope: !16537, file: !5372, line: 128, baseType: !396, size: 32, offset: 2656)
!16586 = !DIDerivedType(tag: DW_TAG_member, name: "wave_smoothness", scope: !16537, file: !5372, line: 128, baseType: !396, size: 32, offset: 2688)
!16587 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !16537, file: !5372, line: 129, baseType: !98, size: 32, offset: 2720)
!16588 = !DIDerivedType(tag: DW_TAG_member, name: "uvlayer_name", scope: !16537, file: !5372, line: 131, baseType: !692, size: 512, offset: 2752)
!16589 = !DIDerivedType(tag: DW_TAG_member, name: "image_output_path", scope: !16537, file: !5372, line: 132, baseType: !478, size: 8192, offset: 3264)
!16590 = !DIDerivedType(tag: DW_TAG_member, name: "output_name", scope: !16537, file: !5372, line: 133, baseType: !692, size: 512, offset: 11456)
!16591 = !DIDerivedType(tag: DW_TAG_member, name: "output_name2", scope: !16537, file: !5372, line: 134, baseType: !692, size: 512, offset: 11968)
!16592 = !DILocation(line: 1543, column: 26, scope: !16534)
!16593 = !DILocation(line: 1544, column: 17, scope: !16534)
!16594 = !DILocation(line: 1544, column: 60, scope: !16534)
!16595 = !DILocation(line: 1544, column: 65, scope: !16534)
!16596 = !DILocation(line: 1544, column: 5, scope: !16534)
!16597 = !DILocation(line: 1547, column: 18, scope: !16598)
!16598 = distinct !DILexicalBlock(scope: !16534, file: !3, line: 1547, column: 5)
!16599 = !DILocation(line: 1547, column: 23, scope: !16598)
!16600 = !DILocation(line: 1547, column: 31, scope: !16598)
!16601 = !DILocation(line: 1547, column: 40, scope: !16598)
!16602 = !DILocation(line: 1547, column: 17, scope: !16598)
!16603 = !DILocation(line: 1547, column: 10, scope: !16598)
!16604 = !DILocation(line: 1547, column: 47, scope: !16605)
!16605 = distinct !DILexicalBlock(scope: !16598, file: !3, line: 1547, column: 5)
!16606 = !DILocation(line: 1547, column: 5, scope: !16598)
!16607 = !DILocation(line: 1548, column: 18, scope: !16605)
!16608 = !DILocation(line: 1548, column: 54, scope: !16605)
!16609 = !DILocation(line: 1548, column: 6, scope: !16605)
!16610 = !DILocation(line: 1547, column: 64, scope: !16605)
!16611 = !DILocation(line: 1547, column: 73, scope: !16605)
!16612 = !DILocation(line: 1547, column: 63, scope: !16605)
!16613 = !DILocation(line: 1547, column: 5, scope: !16605)
!16614 = distinct !{!16614, !16606, !16615}
!16615 = !DILocation(line: 1548, column: 61, scope: !16598)
!16616 = !DILocation(line: 1550, column: 18, scope: !16617)
!16617 = distinct !DILexicalBlock(scope: !16534, file: !3, line: 1550, column: 5)
!16618 = !DILocation(line: 1550, column: 23, scope: !16617)
!16619 = !DILocation(line: 1550, column: 31, scope: !16617)
!16620 = !DILocation(line: 1550, column: 40, scope: !16617)
!16621 = !DILocation(line: 1550, column: 17, scope: !16617)
!16622 = !DILocation(line: 1550, column: 10, scope: !16617)
!16623 = !DILocation(line: 1550, column: 47, scope: !16624)
!16624 = distinct !DILexicalBlock(scope: !16617, file: !3, line: 1550, column: 5)
!16625 = !DILocation(line: 1550, column: 5, scope: !16617)
!16626 = !DILocation(line: 1551, column: 24, scope: !16627)
!16627 = distinct !DILexicalBlock(scope: !16624, file: !3, line: 1550, column: 79)
!16628 = !DILocation(line: 1551, column: 30, scope: !16627)
!16629 = !DILocation(line: 1551, column: 39, scope: !16627)
!16630 = !DILocation(line: 1551, column: 6, scope: !16627)
!16631 = !DILocation(line: 1553, column: 18, scope: !16627)
!16632 = !DILocation(line: 1553, column: 50, scope: !16627)
!16633 = !DILocation(line: 1553, column: 59, scope: !16627)
!16634 = !DILocation(line: 1553, column: 6, scope: !16627)
!16635 = !DILocation(line: 1554, column: 5, scope: !16627)
!16636 = !DILocation(line: 1550, column: 64, scope: !16624)
!16637 = !DILocation(line: 1550, column: 73, scope: !16624)
!16638 = !DILocation(line: 1550, column: 63, scope: !16624)
!16639 = !DILocation(line: 1550, column: 5, scope: !16624)
!16640 = distinct !{!16640, !16625, !16641}
!16641 = !DILocation(line: 1554, column: 5, scope: !16617)
!16642 = !DILocation(line: 1555, column: 4, scope: !16534)
!16643 = !DILocation(line: 1556, column: 8, scope: !16644)
!16644 = distinct !DILexicalBlock(scope: !16525, file: !3, line: 1556, column: 8)
!16645 = !DILocation(line: 1556, column: 13, scope: !16644)
!16646 = !DILocation(line: 1556, column: 8, scope: !16525)
!16647 = !DILocation(line: 1557, column: 17, scope: !16648)
!16648 = distinct !DILexicalBlock(scope: !16644, file: !3, line: 1556, column: 20)
!16649 = !DILocation(line: 1557, column: 59, scope: !16648)
!16650 = !DILocation(line: 1557, column: 64, scope: !16648)
!16651 = !DILocation(line: 1557, column: 5, scope: !16648)
!16652 = !DILocation(line: 1558, column: 17, scope: !16648)
!16653 = !DILocation(line: 1558, column: 43, scope: !16648)
!16654 = !DILocation(line: 1558, column: 48, scope: !16648)
!16655 = !DILocation(line: 1558, column: 55, scope: !16648)
!16656 = !DILocation(line: 1558, column: 5, scope: !16648)
!16657 = !DILocation(line: 1559, column: 17, scope: !16648)
!16658 = !DILocation(line: 1559, column: 43, scope: !16648)
!16659 = !DILocation(line: 1559, column: 48, scope: !16648)
!16660 = !DILocation(line: 1559, column: 55, scope: !16648)
!16661 = !DILocation(line: 1559, column: 5, scope: !16648)
!16662 = !DILocation(line: 1560, column: 4, scope: !16648)
!16663 = !DILocation(line: 1561, column: 3, scope: !16525)
!16664 = !DILocation(line: 1562, column: 12, scope: !16665)
!16665 = distinct !DILexicalBlock(scope: !16520, file: !3, line: 1562, column: 12)
!16666 = !DILocation(line: 1562, column: 16, scope: !16665)
!16667 = !DILocation(line: 1562, column: 20, scope: !16665)
!16668 = !DILocation(line: 1562, column: 12, scope: !16520)
!16669 = !DILocation(line: 1572, column: 3, scope: !16670)
!16670 = distinct !DILexicalBlock(scope: !16665, file: !3, line: 1562, column: 47)
!16671 = !DILocation(line: 1573, column: 12, scope: !16672)
!16672 = distinct !DILexicalBlock(scope: !16665, file: !3, line: 1573, column: 12)
!16673 = !DILocation(line: 1573, column: 16, scope: !16672)
!16674 = !DILocation(line: 1573, column: 20, scope: !16672)
!16675 = !DILocation(line: 1573, column: 12, scope: !16665)
!16676 = !DILocalVariable(name: "mmd", scope: !16677, file: !3, line: 1574, type: !5412)
!16677 = distinct !DILexicalBlock(scope: !16672, file: !3, line: 1573, column: 48)
!16678 = !DILocation(line: 1574, column: 28, scope: !16677)
!16679 = !DILocation(line: 1574, column: 60, scope: !16677)
!16680 = !DILocation(line: 1574, column: 34, scope: !16677)
!16681 = !DILocalVariable(name: "size", scope: !16677, file: !3, line: 1575, type: !98)
!16682 = !DILocation(line: 1575, column: 8, scope: !16677)
!16683 = !DILocation(line: 1575, column: 15, scope: !16677)
!16684 = !DILocation(line: 1575, column: 20, scope: !16677)
!16685 = !DILocation(line: 1577, column: 16, scope: !16677)
!16686 = !DILocation(line: 1577, column: 43, scope: !16677)
!16687 = !DILocation(line: 1577, column: 48, scope: !16677)
!16688 = !DILocation(line: 1577, column: 62, scope: !16677)
!16689 = !DILocation(line: 1577, column: 67, scope: !16677)
!16690 = !DILocation(line: 1577, column: 4, scope: !16677)
!16691 = !DILocation(line: 1578, column: 14, scope: !16677)
!16692 = !DILocation(line: 1578, column: 39, scope: !16677)
!16693 = !DILocation(line: 1578, column: 44, scope: !16677)
!16694 = !DILocation(line: 1578, column: 52, scope: !16677)
!16695 = !DILocation(line: 1578, column: 38, scope: !16677)
!16696 = !DILocation(line: 1578, column: 36, scope: !16677)
!16697 = !DILocation(line: 1578, column: 24, scope: !16677)
!16698 = !DILocation(line: 1578, column: 58, scope: !16677)
!16699 = !DILocation(line: 1578, column: 63, scope: !16677)
!16700 = !DILocation(line: 1578, column: 4, scope: !16677)
!16701 = !DILocation(line: 1579, column: 14, scope: !16677)
!16702 = !DILocation(line: 1579, column: 44, scope: !16677)
!16703 = !DILocation(line: 1579, column: 49, scope: !16677)
!16704 = !DILocation(line: 1579, column: 42, scope: !16677)
!16705 = !DILocation(line: 1579, column: 24, scope: !16677)
!16706 = !DILocation(line: 1580, column: 5, scope: !16677)
!16707 = !DILocation(line: 1580, column: 10, scope: !16677)
!16708 = !DILocation(line: 1579, column: 4, scope: !16677)
!16709 = !DILocation(line: 1581, column: 16, scope: !16677)
!16710 = !DILocation(line: 1581, column: 38, scope: !16677)
!16711 = !DILocation(line: 1581, column: 43, scope: !16677)
!16712 = !DILocation(line: 1581, column: 42, scope: !16677)
!16713 = !DILocation(line: 1581, column: 48, scope: !16677)
!16714 = !DILocation(line: 1581, column: 47, scope: !16677)
!16715 = !DILocation(line: 1581, column: 54, scope: !16677)
!16716 = !DILocation(line: 1581, column: 59, scope: !16677)
!16717 = !DILocation(line: 1581, column: 4, scope: !16677)
!16718 = !DILocation(line: 1582, column: 16, scope: !16677)
!16719 = !DILocation(line: 1582, column: 43, scope: !16677)
!16720 = !DILocation(line: 1582, column: 48, scope: !16677)
!16721 = !DILocation(line: 1582, column: 62, scope: !16677)
!16722 = !DILocation(line: 1582, column: 67, scope: !16677)
!16723 = !DILocation(line: 1582, column: 4, scope: !16677)
!16724 = !DILocation(line: 1583, column: 14, scope: !16677)
!16725 = !DILocation(line: 1583, column: 36, scope: !16677)
!16726 = !DILocation(line: 1583, column: 41, scope: !16677)
!16727 = !DILocation(line: 1583, column: 35, scope: !16677)
!16728 = !DILocation(line: 1583, column: 24, scope: !16677)
!16729 = !DILocation(line: 1583, column: 50, scope: !16677)
!16730 = !DILocation(line: 1583, column: 55, scope: !16677)
!16731 = !DILocation(line: 1583, column: 4, scope: !16677)
!16732 = !DILocation(line: 1584, column: 3, scope: !16677)
!16733 = !DILocation(line: 1585, column: 12, scope: !16734)
!16734 = distinct !DILexicalBlock(scope: !16672, file: !3, line: 1585, column: 12)
!16735 = !DILocation(line: 1585, column: 16, scope: !16734)
!16736 = !DILocation(line: 1585, column: 20, scope: !16734)
!16737 = !DILocation(line: 1585, column: 12, scope: !16672)
!16738 = !DILocalVariable(name: "tmd", scope: !16739, file: !3, line: 1586, type: !5454)
!16739 = distinct !DILexicalBlock(scope: !16734, file: !3, line: 1585, column: 42)
!16740 = !DILocation(line: 1586, column: 22, scope: !16739)
!16741 = !DILocation(line: 1586, column: 48, scope: !16739)
!16742 = !DILocation(line: 1586, column: 28, scope: !16739)
!16743 = !DILocation(line: 1587, column: 8, scope: !16744)
!16744 = distinct !DILexicalBlock(scope: !16739, file: !3, line: 1587, column: 8)
!16745 = !DILocation(line: 1587, column: 13, scope: !16744)
!16746 = !DILocation(line: 1587, column: 8, scope: !16739)
!16747 = !DILocation(line: 1588, column: 24, scope: !16748)
!16748 = distinct !DILexicalBlock(scope: !16744, file: !3, line: 1587, column: 25)
!16749 = !DILocation(line: 1588, column: 28, scope: !16748)
!16750 = !DILocation(line: 1588, column: 33, scope: !16748)
!16751 = !DILocation(line: 1588, column: 5, scope: !16748)
!16752 = !DILocation(line: 1589, column: 4, scope: !16748)
!16753 = !DILocation(line: 1590, column: 3, scope: !16739)
!16754 = !DILocation(line: 1591, column: 12, scope: !16755)
!16755 = distinct !DILexicalBlock(scope: !16734, file: !3, line: 1591, column: 12)
!16756 = !DILocation(line: 1591, column: 16, scope: !16755)
!16757 = !DILocation(line: 1591, column: 20, scope: !16755)
!16758 = !DILocation(line: 1591, column: 12, scope: !16734)
!16759 = !DILocalVariable(name: "wmd", scope: !16760, file: !3, line: 1592, type: !5473)
!16760 = distinct !DILexicalBlock(scope: !16755, file: !3, line: 1591, column: 50)
!16761 = !DILocation(line: 1592, column: 30, scope: !16760)
!16762 = !DILocation(line: 1592, column: 64, scope: !16760)
!16763 = !DILocation(line: 1592, column: 36, scope: !16760)
!16764 = !DILocation(line: 1594, column: 8, scope: !16765)
!16765 = distinct !DILexicalBlock(scope: !16760, file: !3, line: 1594, column: 8)
!16766 = !DILocation(line: 1594, column: 13, scope: !16765)
!16767 = !DILocation(line: 1594, column: 8, scope: !16760)
!16768 = !DILocation(line: 1595, column: 24, scope: !16765)
!16769 = !DILocation(line: 1595, column: 28, scope: !16765)
!16770 = !DILocation(line: 1595, column: 33, scope: !16765)
!16771 = !DILocation(line: 1595, column: 5, scope: !16765)
!16772 = !DILocation(line: 1596, column: 3, scope: !16760)
!16773 = !DILocation(line: 1597, column: 12, scope: !16774)
!16774 = distinct !DILexicalBlock(scope: !16755, file: !3, line: 1597, column: 12)
!16775 = !DILocation(line: 1597, column: 16, scope: !16774)
!16776 = !DILocation(line: 1597, column: 20, scope: !16774)
!16777 = !DILocation(line: 1597, column: 12, scope: !16755)
!16778 = !DILocalVariable(name: "lmd", scope: !16779, file: !3, line: 1598, type: !5493)
!16779 = distinct !DILexicalBlock(scope: !16774, file: !3, line: 1597, column: 53)
!16780 = !DILocation(line: 1598, column: 33, scope: !16779)
!16781 = !DILocation(line: 1598, column: 70, scope: !16779)
!16782 = !DILocation(line: 1598, column: 39, scope: !16779)
!16783 = !DILocation(line: 1600, column: 14, scope: !16779)
!16784 = !DILocation(line: 1600, column: 38, scope: !16779)
!16785 = !DILocation(line: 1600, column: 43, scope: !16779)
!16786 = !DILocation(line: 1600, column: 37, scope: !16779)
!16787 = !DILocation(line: 1600, column: 55, scope: !16779)
!16788 = !DILocation(line: 1600, column: 24, scope: !16779)
!16789 = !DILocation(line: 1600, column: 60, scope: !16779)
!16790 = !DILocation(line: 1600, column: 65, scope: !16779)
!16791 = !DILocation(line: 1600, column: 4, scope: !16779)
!16792 = !DILocation(line: 1601, column: 3, scope: !16779)
!16793 = !DILocation(line: 1602, column: 2, scope: !16258)
!16794 = !DILocation(line: 1485, column: 34, scope: !16255)
!16795 = !DILocation(line: 1485, column: 38, scope: !16255)
!16796 = !DILocation(line: 1485, column: 32, scope: !16255)
!16797 = !DILocation(line: 1485, column: 2, scope: !16255)
!16798 = distinct !{!16798, !16256, !16799}
!16799 = !DILocation(line: 1602, column: 2, scope: !16250)
!16800 = !DILocation(line: 1603, column: 1, scope: !16236)
!16801 = distinct !DISubprogram(name: "write_customdata", scope: !3, file: !3, line: 1876, type: !16802, scopeLine: 1877, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !5641)
!16802 = !DISubroutineType(types: !16803)
!16803 = !{null, !5820, !441, !98, !4093, !98, !98}
!16804 = !DILocalVariable(name: "wd", arg: 1, scope: !16801, file: !3, line: 1876, type: !5820)
!16805 = !DILocation(line: 1876, column: 41, scope: !16801)
!16806 = !DILocalVariable(name: "id", arg: 2, scope: !16801, file: !3, line: 1876, type: !441)
!16807 = !DILocation(line: 1876, column: 49, scope: !16801)
!16808 = !DILocalVariable(name: "count", arg: 3, scope: !16801, file: !3, line: 1876, type: !98)
!16809 = !DILocation(line: 1876, column: 57, scope: !16801)
!16810 = !DILocalVariable(name: "data", arg: 4, scope: !16801, file: !3, line: 1876, type: !4093)
!16811 = !DILocation(line: 1876, column: 76, scope: !16801)
!16812 = !DILocalVariable(name: "partial_type", arg: 5, scope: !16801, file: !3, line: 1876, type: !98)
!16813 = !DILocation(line: 1876, column: 86, scope: !16801)
!16814 = !DILocalVariable(name: "partial_count", arg: 6, scope: !16801, file: !3, line: 1876, type: !98)
!16815 = !DILocation(line: 1876, column: 104, scope: !16801)
!16816 = !DILocalVariable(name: "data_tmp", scope: !16801, file: !3, line: 1878, type: !3725)
!16817 = !DILocation(line: 1878, column: 13, scope: !16801)
!16818 = !DILocalVariable(name: "i", scope: !16801, file: !3, line: 1879, type: !98)
!16819 = !DILocation(line: 1879, column: 6, scope: !16801)
!16820 = !DILocation(line: 1882, column: 18, scope: !16801)
!16821 = !DILocation(line: 1882, column: 35, scope: !16801)
!16822 = !DILocation(line: 1882, column: 69, scope: !16801)
!16823 = !DILocation(line: 1882, column: 2, scope: !16801)
!16824 = !DILocation(line: 1885, column: 15, scope: !16825)
!16825 = distinct !DILexicalBlock(scope: !16801, file: !3, line: 1885, column: 6)
!16826 = !DILocation(line: 1885, column: 6, scope: !16825)
!16827 = !DILocation(line: 1885, column: 24, scope: !16825)
!16828 = !DILocation(line: 1885, column: 28, scope: !16825)
!16829 = !DILocation(line: 1885, column: 32, scope: !16825)
!16830 = !DILocation(line: 1885, column: 6, scope: !16801)
!16831 = !DILocation(line: 1886, column: 40, scope: !16825)
!16832 = !DILocation(line: 1886, column: 44, scope: !16825)
!16833 = !DILocation(line: 1886, column: 58, scope: !16825)
!16834 = !DILocation(line: 1886, column: 3, scope: !16825)
!16835 = !DILocation(line: 1888, column: 9, scope: !16836)
!16836 = distinct !DILexicalBlock(scope: !16801, file: !3, line: 1888, column: 2)
!16837 = !DILocation(line: 1888, column: 7, scope: !16836)
!16838 = !DILocation(line: 1888, column: 14, scope: !16839)
!16839 = distinct !DILexicalBlock(scope: !16836, file: !3, line: 1888, column: 2)
!16840 = !DILocation(line: 1888, column: 27, scope: !16839)
!16841 = !DILocation(line: 1888, column: 16, scope: !16839)
!16842 = !DILocation(line: 1888, column: 2, scope: !16836)
!16843 = !DILocation(line: 1889, column: 12, scope: !16839)
!16844 = !DILocation(line: 1889, column: 19, scope: !16839)
!16845 = !DILocation(line: 1889, column: 3, scope: !16839)
!16846 = !DILocation(line: 1889, column: 22, scope: !16839)
!16847 = !DILocation(line: 1889, column: 27, scope: !16839)
!16848 = !DILocation(line: 1888, column: 38, scope: !16839)
!16849 = !DILocation(line: 1888, column: 2, scope: !16839)
!16850 = distinct !{!16850, !16842, !16851}
!16851 = !DILocation(line: 1889, column: 31, scope: !16836)
!16852 = !DILocation(line: 1891, column: 25, scope: !16801)
!16853 = !DILocation(line: 1891, column: 63, scope: !16801)
!16854 = !DILocation(line: 1891, column: 73, scope: !16801)
!16855 = !DILocation(line: 1891, column: 79, scope: !16801)
!16856 = !DILocation(line: 1891, column: 96, scope: !16801)
!16857 = !DILocation(line: 1891, column: 87, scope: !16801)
!16858 = !DILocation(line: 1891, column: 2, scope: !16801)
!16859 = !DILocation(line: 1893, column: 9, scope: !16860)
!16860 = distinct !DILexicalBlock(scope: !16801, file: !3, line: 1893, column: 2)
!16861 = !DILocation(line: 1893, column: 7, scope: !16860)
!16862 = !DILocation(line: 1893, column: 14, scope: !16863)
!16863 = distinct !DILexicalBlock(scope: !16860, file: !3, line: 1893, column: 2)
!16864 = !DILocation(line: 1893, column: 27, scope: !16863)
!16865 = !DILocation(line: 1893, column: 16, scope: !16863)
!16866 = !DILocation(line: 1893, column: 2, scope: !16860)
!16867 = !DILocation(line: 1894, column: 12, scope: !16863)
!16868 = !DILocation(line: 1894, column: 19, scope: !16863)
!16869 = !DILocation(line: 1894, column: 3, scope: !16863)
!16870 = !DILocation(line: 1894, column: 22, scope: !16863)
!16871 = !DILocation(line: 1894, column: 27, scope: !16863)
!16872 = !DILocation(line: 1893, column: 38, scope: !16863)
!16873 = !DILocation(line: 1893, column: 2, scope: !16863)
!16874 = distinct !{!16874, !16866, !16875}
!16875 = !DILocation(line: 1894, column: 30, scope: !16860)
!16876 = !DILocation(line: 1896, column: 9, scope: !16877)
!16877 = distinct !DILexicalBlock(scope: !16801, file: !3, line: 1896, column: 2)
!16878 = !DILocation(line: 1896, column: 7, scope: !16877)
!16879 = !DILocation(line: 1896, column: 14, scope: !16880)
!16880 = distinct !DILexicalBlock(scope: !16877, file: !3, line: 1896, column: 2)
!16881 = !DILocation(line: 1896, column: 27, scope: !16880)
!16882 = !DILocation(line: 1896, column: 16, scope: !16880)
!16883 = !DILocation(line: 1896, column: 2, scope: !16877)
!16884 = !DILocalVariable(name: "layer", scope: !16885, file: !3, line: 1897, type: !3729)
!16885 = distinct !DILexicalBlock(scope: !16880, file: !3, line: 1896, column: 42)
!16886 = !DILocation(line: 1897, column: 20, scope: !16885)
!16887 = !DILocation(line: 1897, column: 37, scope: !16885)
!16888 = !DILocation(line: 1897, column: 44, scope: !16885)
!16889 = !DILocation(line: 1897, column: 28, scope: !16885)
!16890 = !DILocalVariable(name: "structname", scope: !16885, file: !3, line: 1898, type: !373)
!16891 = !DILocation(line: 1898, column: 15, scope: !16885)
!16892 = !DILocalVariable(name: "structnum", scope: !16885, file: !3, line: 1899, type: !98)
!16893 = !DILocation(line: 1899, column: 7, scope: !16885)
!16894 = !DILocalVariable(name: "datasize", scope: !16885, file: !3, line: 1899, type: !98)
!16895 = !DILocation(line: 1899, column: 18, scope: !16885)
!16896 = !DILocation(line: 1901, column: 7, scope: !16897)
!16897 = distinct !DILexicalBlock(scope: !16885, file: !3, line: 1901, column: 7)
!16898 = !DILocation(line: 1901, column: 14, scope: !16897)
!16899 = !DILocation(line: 1901, column: 19, scope: !16897)
!16900 = !DILocation(line: 1901, column: 7, scope: !16885)
!16901 = !DILocation(line: 1903, column: 17, scope: !16902)
!16902 = distinct !DILexicalBlock(scope: !16897, file: !3, line: 1901, column: 38)
!16903 = !DILocation(line: 1903, column: 21, scope: !16902)
!16904 = !DILocation(line: 1903, column: 28, scope: !16902)
!16905 = !DILocation(line: 1903, column: 35, scope: !16902)
!16906 = !DILocation(line: 1903, column: 4, scope: !16902)
!16907 = !DILocation(line: 1904, column: 3, scope: !16902)
!16908 = !DILocation(line: 1905, column: 12, scope: !16909)
!16909 = distinct !DILexicalBlock(scope: !16897, file: !3, line: 1905, column: 12)
!16910 = !DILocation(line: 1905, column: 19, scope: !16909)
!16911 = !DILocation(line: 1905, column: 24, scope: !16909)
!16912 = !DILocation(line: 1905, column: 12, scope: !16897)
!16913 = !DILocation(line: 1906, column: 17, scope: !16914)
!16914 = distinct !DILexicalBlock(scope: !16909, file: !3, line: 1905, column: 38)
!16915 = !DILocation(line: 1906, column: 21, scope: !16914)
!16916 = !DILocation(line: 1906, column: 28, scope: !16914)
!16917 = !DILocation(line: 1906, column: 35, scope: !16914)
!16918 = !DILocation(line: 1906, column: 41, scope: !16914)
!16919 = !DILocation(line: 1906, column: 48, scope: !16914)
!16920 = !DILocation(line: 1906, column: 53, scope: !16914)
!16921 = !DILocation(line: 1906, column: 4, scope: !16914)
!16922 = !DILocation(line: 1907, column: 3, scope: !16914)
!16923 = !DILocation(line: 1908, column: 12, scope: !16924)
!16924 = distinct !DILexicalBlock(scope: !16909, file: !3, line: 1908, column: 12)
!16925 = !DILocation(line: 1908, column: 19, scope: !16924)
!16926 = !DILocation(line: 1908, column: 24, scope: !16924)
!16927 = !DILocation(line: 1908, column: 12, scope: !16909)
!16928 = !DILocalVariable(name: "layer_data", scope: !16929, file: !3, line: 1909, type: !4156)
!16929 = distinct !DILexicalBlock(scope: !16924, file: !3, line: 1908, column: 42)
!16930 = !DILocation(line: 1909, column: 17, scope: !16929)
!16931 = !DILocation(line: 1909, column: 30, scope: !16929)
!16932 = !DILocation(line: 1909, column: 37, scope: !16929)
!16933 = !DILocation(line: 1910, column: 14, scope: !16929)
!16934 = !DILocation(line: 1910, column: 46, scope: !16929)
!16935 = !DILocation(line: 1910, column: 44, scope: !16929)
!16936 = !DILocation(line: 1910, column: 24, scope: !16929)
!16937 = !DILocation(line: 1910, column: 53, scope: !16929)
!16938 = !DILocation(line: 1910, column: 4, scope: !16929)
!16939 = !DILocation(line: 1911, column: 3, scope: !16929)
!16940 = !DILocation(line: 1912, column: 12, scope: !16941)
!16941 = distinct !DILexicalBlock(scope: !16924, file: !3, line: 1912, column: 12)
!16942 = !DILocation(line: 1912, column: 19, scope: !16941)
!16943 = !DILocation(line: 1912, column: 24, scope: !16941)
!16944 = !DILocation(line: 1912, column: 12, scope: !16924)
!16945 = !DILocation(line: 1913, column: 26, scope: !16946)
!16946 = distinct !DILexicalBlock(scope: !16941, file: !3, line: 1912, column: 47)
!16947 = !DILocation(line: 1913, column: 30, scope: !16946)
!16948 = !DILocation(line: 1913, column: 37, scope: !16946)
!16949 = !DILocation(line: 1913, column: 44, scope: !16946)
!16950 = !DILocation(line: 1913, column: 4, scope: !16946)
!16951 = !DILocation(line: 1914, column: 3, scope: !16946)
!16952 = !DILocation(line: 1916, column: 31, scope: !16953)
!16953 = distinct !DILexicalBlock(scope: !16941, file: !3, line: 1915, column: 8)
!16954 = !DILocation(line: 1916, column: 38, scope: !16953)
!16955 = !DILocation(line: 1916, column: 4, scope: !16953)
!16956 = !DILocation(line: 1917, column: 8, scope: !16957)
!16957 = distinct !DILexicalBlock(scope: !16953, file: !3, line: 1917, column: 8)
!16958 = !DILocation(line: 1917, column: 8, scope: !16953)
!16959 = !DILocation(line: 1921, column: 9, scope: !16960)
!16960 = distinct !DILexicalBlock(scope: !16961, file: !3, line: 1921, column: 9)
!16961 = distinct !DILexicalBlock(scope: !16957, file: !3, line: 1917, column: 19)
!16962 = !DILocation(line: 1921, column: 16, scope: !16960)
!16963 = !DILocation(line: 1921, column: 24, scope: !16960)
!16964 = !DILocation(line: 1921, column: 21, scope: !16960)
!16965 = !DILocation(line: 1921, column: 9, scope: !16961)
!16966 = !DILocation(line: 1921, column: 48, scope: !16960)
!16967 = !DILocation(line: 1921, column: 58, scope: !16960)
!16968 = !DILocation(line: 1921, column: 57, scope: !16960)
!16969 = !DILocation(line: 1921, column: 46, scope: !16960)
!16970 = !DILocation(line: 1921, column: 38, scope: !16960)
!16971 = !DILocation(line: 1922, column: 20, scope: !16960)
!16972 = !DILocation(line: 1922, column: 30, scope: !16960)
!16973 = !DILocation(line: 1922, column: 29, scope: !16960)
!16974 = !DILocation(line: 1922, column: 18, scope: !16960)
!16975 = !DILocation(line: 1924, column: 17, scope: !16961)
!16976 = !DILocation(line: 1924, column: 27, scope: !16961)
!16977 = !DILocation(line: 1924, column: 39, scope: !16961)
!16978 = !DILocation(line: 1924, column: 49, scope: !16961)
!16979 = !DILocation(line: 1924, column: 56, scope: !16961)
!16980 = !DILocation(line: 1924, column: 5, scope: !16961)
!16981 = !DILocation(line: 1925, column: 4, scope: !16961)
!16982 = !DILocation(line: 1928, column: 22, scope: !16983)
!16983 = distinct !DILexicalBlock(scope: !16957, file: !3, line: 1926, column: 9)
!16984 = !DILocation(line: 1928, column: 34, scope: !16983)
!16985 = !DILocation(line: 1928, column: 41, scope: !16983)
!16986 = !DILocation(line: 1927, column: 5, scope: !16983)
!16987 = !DILocation(line: 1931, column: 2, scope: !16885)
!16988 = !DILocation(line: 1896, column: 38, scope: !16880)
!16989 = !DILocation(line: 1896, column: 2, scope: !16880)
!16990 = distinct !{!16990, !16883, !16991}
!16991 = !DILocation(line: 1931, column: 2, scope: !16877)
!16992 = !DILocation(line: 1933, column: 15, scope: !16993)
!16993 = distinct !DILexicalBlock(scope: !16801, file: !3, line: 1933, column: 6)
!16994 = !DILocation(line: 1933, column: 6, scope: !16993)
!16995 = !DILocation(line: 1933, column: 6, scope: !16801)
!16996 = !DILocation(line: 1934, column: 26, scope: !16993)
!16997 = !DILocation(line: 1934, column: 61, scope: !16993)
!16998 = !DILocation(line: 1934, column: 67, scope: !16993)
!16999 = !DILocation(line: 1934, column: 86, scope: !16993)
!17000 = !DILocation(line: 1934, column: 77, scope: !16993)
!17001 = !DILocation(line: 1934, column: 3, scope: !16993)
!17002 = !DILocation(line: 1936, column: 29, scope: !16801)
!17003 = !DILocation(line: 1936, column: 2, scope: !16801)
!17004 = !DILocation(line: 1937, column: 1, scope: !16801)
!17005 = distinct !DISubprogram(name: "write_mdisps", scope: !3, file: !3, line: 1839, type: !17006, scopeLine: 1840, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !5641)
!17006 = !DISubroutineType(types: !17007)
!17007 = !{null, !5820, !98, !17008, !98}
!17008 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17009, size: 64)
!17009 = !DIDerivedType(tag: DW_TAG_typedef, name: "MDisps", file: !2468, line: 196, baseType: !17010)
!17010 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MDisps", file: !2468, line: 186, size: 192, elements: !17011)
!17011 = !{!17012, !17013, !17014, !17015}
!17012 = !DIDerivedType(tag: DW_TAG_member, name: "totdisp", scope: !17010, file: !2468, line: 188, baseType: !98, size: 32)
!17013 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !17010, file: !2468, line: 189, baseType: !98, size: 32, offset: 32)
!17014 = !DIDerivedType(tag: DW_TAG_member, name: "disps", scope: !17010, file: !2468, line: 190, baseType: !4190, size: 64, offset: 64)
!17015 = !DIDerivedType(tag: DW_TAG_member, name: "hidden", scope: !17010, file: !2468, line: 195, baseType: !1689, size: 64, offset: 128)
!17016 = !DILocalVariable(name: "wd", arg: 1, scope: !17005, file: !3, line: 1839, type: !5820)
!17017 = !DILocation(line: 1839, column: 37, scope: !17005)
!17018 = !DILocalVariable(name: "count", arg: 2, scope: !17005, file: !3, line: 1839, type: !98)
!17019 = !DILocation(line: 1839, column: 45, scope: !17005)
!17020 = !DILocalVariable(name: "mdlist", arg: 3, scope: !17005, file: !3, line: 1839, type: !17008)
!17021 = !DILocation(line: 1839, column: 60, scope: !17005)
!17022 = !DILocalVariable(name: "external", arg: 4, scope: !17005, file: !3, line: 1839, type: !98)
!17023 = !DILocation(line: 1839, column: 72, scope: !17005)
!17024 = !DILocation(line: 1841, column: 6, scope: !17025)
!17025 = distinct !DILexicalBlock(scope: !17005, file: !3, line: 1841, column: 6)
!17026 = !DILocation(line: 1841, column: 6, scope: !17005)
!17027 = !DILocalVariable(name: "i", scope: !17028, file: !3, line: 1842, type: !98)
!17028 = distinct !DILexicalBlock(scope: !17025, file: !3, line: 1841, column: 14)
!17029 = !DILocation(line: 1842, column: 7, scope: !17028)
!17030 = !DILocation(line: 1844, column: 15, scope: !17028)
!17031 = !DILocation(line: 1844, column: 35, scope: !17028)
!17032 = !DILocation(line: 1844, column: 42, scope: !17028)
!17033 = !DILocation(line: 1844, column: 3, scope: !17028)
!17034 = !DILocation(line: 1845, column: 10, scope: !17035)
!17035 = distinct !DILexicalBlock(scope: !17028, file: !3, line: 1845, column: 3)
!17036 = !DILocation(line: 1845, column: 8, scope: !17035)
!17037 = !DILocation(line: 1845, column: 15, scope: !17038)
!17038 = distinct !DILexicalBlock(scope: !17035, file: !3, line: 1845, column: 3)
!17039 = !DILocation(line: 1845, column: 19, scope: !17038)
!17040 = !DILocation(line: 1845, column: 17, scope: !17038)
!17041 = !DILocation(line: 1845, column: 3, scope: !17035)
!17042 = !DILocalVariable(name: "md", scope: !17043, file: !3, line: 1846, type: !17008)
!17043 = distinct !DILexicalBlock(scope: !17038, file: !3, line: 1845, column: 31)
!17044 = !DILocation(line: 1846, column: 12, scope: !17043)
!17045 = !DILocation(line: 1846, column: 18, scope: !17043)
!17046 = !DILocation(line: 1846, column: 25, scope: !17043)
!17047 = !DILocation(line: 1847, column: 8, scope: !17048)
!17048 = distinct !DILexicalBlock(scope: !17043, file: !3, line: 1847, column: 8)
!17049 = !DILocation(line: 1847, column: 12, scope: !17048)
!17050 = !DILocation(line: 1847, column: 8, scope: !17043)
!17051 = !DILocation(line: 1848, column: 10, scope: !17052)
!17052 = distinct !DILexicalBlock(scope: !17053, file: !3, line: 1848, column: 9)
!17053 = distinct !DILexicalBlock(scope: !17048, file: !3, line: 1847, column: 19)
!17054 = !DILocation(line: 1848, column: 9, scope: !17053)
!17055 = !DILocation(line: 1849, column: 16, scope: !17052)
!17056 = !DILocation(line: 1849, column: 46, scope: !17052)
!17057 = !DILocation(line: 1849, column: 50, scope: !17052)
!17058 = !DILocation(line: 1849, column: 44, scope: !17052)
!17059 = !DILocation(line: 1849, column: 26, scope: !17052)
!17060 = !DILocation(line: 1849, column: 59, scope: !17052)
!17061 = !DILocation(line: 1849, column: 63, scope: !17052)
!17062 = !DILocation(line: 1849, column: 6, scope: !17052)
!17063 = !DILocation(line: 1850, column: 4, scope: !17053)
!17064 = !DILocation(line: 1852, column: 8, scope: !17065)
!17065 = distinct !DILexicalBlock(scope: !17043, file: !3, line: 1852, column: 8)
!17066 = !DILocation(line: 1852, column: 12, scope: !17065)
!17067 = !DILocation(line: 1852, column: 8, scope: !17043)
!17068 = !DILocation(line: 1853, column: 15, scope: !17065)
!17069 = !DILocation(line: 1853, column: 25, scope: !17065)
!17070 = !DILocation(line: 1853, column: 55, scope: !17065)
!17071 = !DILocation(line: 1853, column: 59, scope: !17065)
!17072 = !DILocation(line: 1853, column: 5, scope: !17065)
!17073 = !DILocation(line: 1854, column: 3, scope: !17043)
!17074 = !DILocation(line: 1845, column: 26, scope: !17038)
!17075 = !DILocation(line: 1845, column: 3, scope: !17038)
!17076 = distinct !{!17076, !17041, !17077}
!17077 = !DILocation(line: 1854, column: 3, scope: !17035)
!17078 = !DILocation(line: 1855, column: 2, scope: !17028)
!17079 = !DILocation(line: 1856, column: 1, scope: !17005)
!17080 = distinct !DISubprogram(name: "write_grid_paint_mask", scope: !3, file: !3, line: 1858, type: !17081, scopeLine: 1859, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !5641)
!17081 = !DISubroutineType(types: !17082)
!17082 = !{null, !5820, !98, !17083}
!17083 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17084, size: 64)
!17084 = !DIDerivedType(tag: DW_TAG_typedef, name: "GridPaintMask", file: !2468, line: 261, baseType: !17085)
!17085 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GridPaintMask", file: !2468, line: 253, size: 128, elements: !17086)
!17086 = !{!17087, !17088, !17089}
!17087 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !17085, file: !2468, line: 255, baseType: !975, size: 64)
!17088 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !17085, file: !2468, line: 258, baseType: !7, size: 32, offset: 64)
!17089 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !17085, file: !2468, line: 260, baseType: !98, size: 32, offset: 96)
!17090 = !DILocalVariable(name: "wd", arg: 1, scope: !17080, file: !3, line: 1858, type: !5820)
!17091 = !DILocation(line: 1858, column: 46, scope: !17080)
!17092 = !DILocalVariable(name: "count", arg: 2, scope: !17080, file: !3, line: 1858, type: !98)
!17093 = !DILocation(line: 1858, column: 54, scope: !17080)
!17094 = !DILocalVariable(name: "grid_paint_mask", arg: 3, scope: !17080, file: !3, line: 1858, type: !17083)
!17095 = !DILocation(line: 1858, column: 76, scope: !17080)
!17096 = !DILocation(line: 1860, column: 6, scope: !17097)
!17097 = distinct !DILexicalBlock(scope: !17080, file: !3, line: 1860, column: 6)
!17098 = !DILocation(line: 1860, column: 6, scope: !17080)
!17099 = !DILocalVariable(name: "i", scope: !17100, file: !3, line: 1861, type: !98)
!17100 = distinct !DILexicalBlock(scope: !17097, file: !3, line: 1860, column: 23)
!17101 = !DILocation(line: 1861, column: 7, scope: !17100)
!17102 = !DILocation(line: 1863, column: 15, scope: !17100)
!17103 = !DILocation(line: 1863, column: 42, scope: !17100)
!17104 = !DILocation(line: 1863, column: 49, scope: !17100)
!17105 = !DILocation(line: 1863, column: 3, scope: !17100)
!17106 = !DILocation(line: 1864, column: 10, scope: !17107)
!17107 = distinct !DILexicalBlock(scope: !17100, file: !3, line: 1864, column: 3)
!17108 = !DILocation(line: 1864, column: 8, scope: !17107)
!17109 = !DILocation(line: 1864, column: 15, scope: !17110)
!17110 = distinct !DILexicalBlock(scope: !17107, file: !3, line: 1864, column: 3)
!17111 = !DILocation(line: 1864, column: 19, scope: !17110)
!17112 = !DILocation(line: 1864, column: 17, scope: !17110)
!17113 = !DILocation(line: 1864, column: 3, scope: !17107)
!17114 = !DILocalVariable(name: "gpm", scope: !17115, file: !3, line: 1865, type: !17083)
!17115 = distinct !DILexicalBlock(scope: !17110, file: !3, line: 1864, column: 31)
!17116 = !DILocation(line: 1865, column: 19, scope: !17115)
!17117 = !DILocation(line: 1865, column: 26, scope: !17115)
!17118 = !DILocation(line: 1865, column: 42, scope: !17115)
!17119 = !DILocation(line: 1866, column: 8, scope: !17120)
!17120 = distinct !DILexicalBlock(scope: !17115, file: !3, line: 1866, column: 8)
!17121 = !DILocation(line: 1866, column: 13, scope: !17120)
!17122 = !DILocation(line: 1866, column: 8, scope: !17115)
!17123 = !DILocalVariable(name: "gridsize", scope: !17124, file: !3, line: 1867, type: !5884)
!17124 = distinct !DILexicalBlock(scope: !17120, file: !3, line: 1866, column: 19)
!17125 = !DILocation(line: 1867, column: 15, scope: !17124)
!17126 = !DILocation(line: 1867, column: 43, scope: !17124)
!17127 = !DILocation(line: 1867, column: 48, scope: !17124)
!17128 = !DILocation(line: 1867, column: 26, scope: !17124)
!17129 = !DILocation(line: 1868, column: 15, scope: !17124)
!17130 = !DILocation(line: 1869, column: 36, scope: !17124)
!17131 = !DILocation(line: 1869, column: 34, scope: !17124)
!17132 = !DILocation(line: 1869, column: 47, scope: !17124)
!17133 = !DILocation(line: 1869, column: 45, scope: !17124)
!17134 = !DILocation(line: 1869, column: 15, scope: !17124)
!17135 = !DILocation(line: 1870, column: 15, scope: !17124)
!17136 = !DILocation(line: 1870, column: 20, scope: !17124)
!17137 = !DILocation(line: 1868, column: 5, scope: !17124)
!17138 = !DILocation(line: 1871, column: 4, scope: !17124)
!17139 = !DILocation(line: 1872, column: 3, scope: !17115)
!17140 = !DILocation(line: 1864, column: 26, scope: !17110)
!17141 = !DILocation(line: 1864, column: 3, scope: !17110)
!17142 = distinct !{!17142, !17113, !17143}
!17143 = !DILocation(line: 1872, column: 3, scope: !17107)
!17144 = !DILocation(line: 1873, column: 2, scope: !17100)
!17145 = !DILocation(line: 1874, column: 1, scope: !17080)
!17146 = distinct !DISubprogram(name: "write_boid_state", scope: !3, file: !3, line: 1020, type: !17147, scopeLine: 1021, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !5641)
!17147 = !DISubroutineType(types: !17148)
!17148 = !{null, !5820, !11866}
!17149 = !DILocalVariable(name: "wd", arg: 1, scope: !17146, file: !3, line: 1020, type: !5820)
!17150 = !DILocation(line: 1020, column: 41, scope: !17146)
!17151 = !DILocalVariable(name: "state", arg: 2, scope: !17146, file: !3, line: 1020, type: !11866)
!17152 = !DILocation(line: 1020, column: 56, scope: !17146)
!17153 = !DILocalVariable(name: "rule", scope: !17146, file: !3, line: 1022, type: !17154)
!17154 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17155, size: 64)
!17155 = !DIDerivedType(tag: DW_TAG_typedef, name: "BoidRule", file: !3173, line: 62, baseType: !17156)
!17156 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BoidRule", file: !3173, line: 58, size: 448, elements: !17157)
!17157 = !{!17158, !17160, !17161, !17162, !17163}
!17158 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !17156, file: !3173, line: 59, baseType: !17159, size: 64)
!17159 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17156, size: 64)
!17160 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !17156, file: !3173, line: 59, baseType: !17159, size: 64, offset: 64)
!17161 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !17156, file: !3173, line: 60, baseType: !98, size: 32, offset: 128)
!17162 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !17156, file: !3173, line: 60, baseType: !98, size: 32, offset: 160)
!17163 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !17156, file: !3173, line: 61, baseType: !2910, size: 256, offset: 192)
!17164 = !DILocation(line: 1022, column: 12, scope: !17146)
!17165 = !DILocation(line: 1022, column: 19, scope: !17146)
!17166 = !DILocation(line: 1022, column: 26, scope: !17146)
!17167 = !DILocation(line: 1022, column: 32, scope: !17146)
!17168 = !DILocation(line: 1025, column: 14, scope: !17146)
!17169 = !DILocation(line: 1025, column: 40, scope: !17146)
!17170 = !DILocation(line: 1025, column: 2, scope: !17146)
!17171 = !DILocation(line: 1027, column: 2, scope: !17146)
!17172 = !DILocation(line: 1027, column: 9, scope: !17173)
!17173 = distinct !DILexicalBlock(scope: !17174, file: !3, line: 1027, column: 2)
!17174 = distinct !DILexicalBlock(scope: !17146, file: !3, line: 1027, column: 2)
!17175 = !DILocation(line: 1027, column: 2, scope: !17174)
!17176 = !DILocation(line: 1028, column: 11, scope: !17177)
!17177 = distinct !DILexicalBlock(scope: !17173, file: !3, line: 1027, column: 32)
!17178 = !DILocation(line: 1028, column: 17, scope: !17177)
!17179 = !DILocation(line: 1028, column: 3, scope: !17177)
!17180 = !DILocation(line: 1031, column: 17, scope: !17181)
!17181 = distinct !DILexicalBlock(scope: !17177, file: !3, line: 1028, column: 23)
!17182 = !DILocation(line: 1031, column: 51, scope: !17181)
!17183 = !DILocation(line: 1031, column: 5, scope: !17181)
!17184 = !DILocation(line: 1032, column: 5, scope: !17181)
!17185 = !DILocation(line: 1034, column: 17, scope: !17181)
!17186 = !DILocation(line: 1034, column: 56, scope: !17181)
!17187 = !DILocation(line: 1034, column: 5, scope: !17181)
!17188 = !DILocation(line: 1035, column: 5, scope: !17181)
!17189 = !DILocation(line: 1037, column: 17, scope: !17181)
!17190 = !DILocation(line: 1037, column: 54, scope: !17181)
!17191 = !DILocation(line: 1037, column: 5, scope: !17181)
!17192 = !DILocation(line: 1038, column: 5, scope: !17181)
!17193 = !DILocation(line: 1040, column: 17, scope: !17181)
!17194 = !DILocation(line: 1040, column: 54, scope: !17181)
!17195 = !DILocation(line: 1040, column: 5, scope: !17181)
!17196 = !DILocation(line: 1041, column: 5, scope: !17181)
!17197 = !DILocation(line: 1043, column: 17, scope: !17181)
!17198 = !DILocation(line: 1043, column: 47, scope: !17181)
!17199 = !DILocation(line: 1043, column: 5, scope: !17181)
!17200 = !DILocation(line: 1044, column: 5, scope: !17181)
!17201 = !DILocation(line: 1046, column: 17, scope: !17181)
!17202 = !DILocation(line: 1046, column: 42, scope: !17181)
!17203 = !DILocation(line: 1046, column: 5, scope: !17181)
!17204 = !DILocation(line: 1047, column: 5, scope: !17181)
!17205 = !DILocation(line: 1049, column: 2, scope: !17177)
!17206 = !DILocation(line: 1027, column: 20, scope: !17173)
!17207 = !DILocation(line: 1027, column: 26, scope: !17173)
!17208 = !DILocation(line: 1027, column: 19, scope: !17173)
!17209 = !DILocation(line: 1027, column: 2, scope: !17173)
!17210 = distinct !{!17210, !17175, !17211}
!17211 = !DILocation(line: 1049, column: 2, scope: !17174)
!17212 = !DILocation(line: 1052, column: 1, scope: !17146)
!17213 = distinct !DISubprogram(name: "write_linestyle_color_modifiers", scope: !3, file: !3, line: 3225, type: !7324, scopeLine: 3226, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !5641)
!17214 = !DILocalVariable(name: "wd", arg: 1, scope: !17213, file: !3, line: 3225, type: !5820)
!17215 = !DILocation(line: 3225, column: 56, scope: !17213)
!17216 = !DILocalVariable(name: "modifiers", arg: 2, scope: !17213, file: !3, line: 3225, type: !565)
!17217 = !DILocation(line: 3225, column: 70, scope: !17213)
!17218 = !DILocalVariable(name: "m", scope: !17213, file: !3, line: 3227, type: !17219)
!17219 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17220, size: 64)
!17220 = !DIDerivedType(tag: DW_TAG_typedef, name: "LineStyleModifier", file: !5507, line: 61, baseType: !5511)
!17221 = !DILocation(line: 3227, column: 21, scope: !17213)
!17222 = !DILocalVariable(name: "struct_name", scope: !17213, file: !3, line: 3228, type: !373)
!17223 = !DILocation(line: 3228, column: 14, scope: !17213)
!17224 = !DILocation(line: 3230, column: 11, scope: !17225)
!17225 = distinct !DILexicalBlock(scope: !17213, file: !3, line: 3230, column: 2)
!17226 = !DILocation(line: 3230, column: 22, scope: !17225)
!17227 = !DILocation(line: 3230, column: 9, scope: !17225)
!17228 = !DILocation(line: 3230, column: 7, scope: !17225)
!17229 = !DILocation(line: 3230, column: 29, scope: !17230)
!17230 = distinct !DILexicalBlock(scope: !17225, file: !3, line: 3230, column: 2)
!17231 = !DILocation(line: 3230, column: 2, scope: !17225)
!17232 = !DILocation(line: 3231, column: 11, scope: !17233)
!17233 = distinct !DILexicalBlock(scope: !17230, file: !3, line: 3230, column: 45)
!17234 = !DILocation(line: 3231, column: 14, scope: !17233)
!17235 = !DILocation(line: 3231, column: 3, scope: !17233)
!17236 = !DILocation(line: 3233, column: 16, scope: !17237)
!17237 = distinct !DILexicalBlock(scope: !17233, file: !3, line: 3231, column: 20)
!17238 = !DILocation(line: 3234, column: 4, scope: !17237)
!17239 = !DILocation(line: 3236, column: 16, scope: !17237)
!17240 = !DILocation(line: 3237, column: 4, scope: !17237)
!17241 = !DILocation(line: 3239, column: 16, scope: !17237)
!17242 = !DILocation(line: 3240, column: 4, scope: !17237)
!17243 = !DILocation(line: 3242, column: 16, scope: !17237)
!17244 = !DILocation(line: 3243, column: 4, scope: !17237)
!17245 = !DILocation(line: 3245, column: 16, scope: !17237)
!17246 = !DILocation(line: 3246, column: 3, scope: !17237)
!17247 = !DILocation(line: 3247, column: 15, scope: !17233)
!17248 = !DILocation(line: 3247, column: 25, scope: !17233)
!17249 = !DILocation(line: 3247, column: 41, scope: !17233)
!17250 = !DILocation(line: 3247, column: 3, scope: !17233)
!17251 = !DILocation(line: 3248, column: 2, scope: !17233)
!17252 = !DILocation(line: 3230, column: 36, scope: !17230)
!17253 = !DILocation(line: 3230, column: 39, scope: !17230)
!17254 = !DILocation(line: 3230, column: 34, scope: !17230)
!17255 = !DILocation(line: 3230, column: 2, scope: !17230)
!17256 = distinct !{!17256, !17231, !17257}
!17257 = !DILocation(line: 3248, column: 2, scope: !17225)
!17258 = !DILocation(line: 3249, column: 11, scope: !17259)
!17259 = distinct !DILexicalBlock(scope: !17213, file: !3, line: 3249, column: 2)
!17260 = !DILocation(line: 3249, column: 22, scope: !17259)
!17261 = !DILocation(line: 3249, column: 9, scope: !17259)
!17262 = !DILocation(line: 3249, column: 7, scope: !17259)
!17263 = !DILocation(line: 3249, column: 29, scope: !17264)
!17264 = distinct !DILexicalBlock(scope: !17259, file: !3, line: 3249, column: 2)
!17265 = !DILocation(line: 3249, column: 2, scope: !17259)
!17266 = !DILocation(line: 3250, column: 11, scope: !17267)
!17267 = distinct !DILexicalBlock(scope: !17264, file: !3, line: 3249, column: 45)
!17268 = !DILocation(line: 3250, column: 14, scope: !17267)
!17269 = !DILocation(line: 3250, column: 3, scope: !17267)
!17270 = !DILocation(line: 3252, column: 16, scope: !17271)
!17271 = distinct !DILexicalBlock(scope: !17267, file: !3, line: 3250, column: 20)
!17272 = !DILocation(line: 3252, column: 81, scope: !17271)
!17273 = !DILocation(line: 3252, column: 85, scope: !17271)
!17274 = !DILocation(line: 3252, column: 42, scope: !17271)
!17275 = !DILocation(line: 3252, column: 4, scope: !17271)
!17276 = !DILocation(line: 3253, column: 4, scope: !17271)
!17277 = !DILocation(line: 3255, column: 16, scope: !17271)
!17278 = !DILocation(line: 3255, column: 88, scope: !17271)
!17279 = !DILocation(line: 3255, column: 92, scope: !17271)
!17280 = !DILocation(line: 3255, column: 42, scope: !17271)
!17281 = !DILocation(line: 3255, column: 4, scope: !17271)
!17282 = !DILocation(line: 3256, column: 4, scope: !17271)
!17283 = !DILocation(line: 3258, column: 16, scope: !17271)
!17284 = !DILocation(line: 3258, column: 88, scope: !17271)
!17285 = !DILocation(line: 3258, column: 92, scope: !17271)
!17286 = !DILocation(line: 3258, column: 42, scope: !17271)
!17287 = !DILocation(line: 3258, column: 4, scope: !17271)
!17288 = !DILocation(line: 3259, column: 4, scope: !17271)
!17289 = !DILocation(line: 3261, column: 16, scope: !17271)
!17290 = !DILocation(line: 3261, column: 78, scope: !17271)
!17291 = !DILocation(line: 3261, column: 82, scope: !17271)
!17292 = !DILocation(line: 3261, column: 42, scope: !17271)
!17293 = !DILocation(line: 3261, column: 4, scope: !17271)
!17294 = !DILocation(line: 3262, column: 4, scope: !17271)
!17295 = !DILocation(line: 3264, column: 2, scope: !17267)
!17296 = !DILocation(line: 3249, column: 36, scope: !17264)
!17297 = !DILocation(line: 3249, column: 39, scope: !17264)
!17298 = !DILocation(line: 3249, column: 34, scope: !17264)
!17299 = !DILocation(line: 3249, column: 2, scope: !17264)
!17300 = distinct !{!17300, !17265, !17301}
!17301 = !DILocation(line: 3264, column: 2, scope: !17259)
!17302 = !DILocation(line: 3265, column: 1, scope: !17213)
!17303 = distinct !DISubprogram(name: "write_linestyle_alpha_modifiers", scope: !3, file: !3, line: 3267, type: !7324, scopeLine: 3268, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !5641)
!17304 = !DILocalVariable(name: "wd", arg: 1, scope: !17303, file: !3, line: 3267, type: !5820)
!17305 = !DILocation(line: 3267, column: 56, scope: !17303)
!17306 = !DILocalVariable(name: "modifiers", arg: 2, scope: !17303, file: !3, line: 3267, type: !565)
!17307 = !DILocation(line: 3267, column: 70, scope: !17303)
!17308 = !DILocalVariable(name: "m", scope: !17303, file: !3, line: 3269, type: !17219)
!17309 = !DILocation(line: 3269, column: 21, scope: !17303)
!17310 = !DILocalVariable(name: "struct_name", scope: !17303, file: !3, line: 3270, type: !373)
!17311 = !DILocation(line: 3270, column: 14, scope: !17303)
!17312 = !DILocation(line: 3272, column: 11, scope: !17313)
!17313 = distinct !DILexicalBlock(scope: !17303, file: !3, line: 3272, column: 2)
!17314 = !DILocation(line: 3272, column: 22, scope: !17313)
!17315 = !DILocation(line: 3272, column: 9, scope: !17313)
!17316 = !DILocation(line: 3272, column: 7, scope: !17313)
!17317 = !DILocation(line: 3272, column: 29, scope: !17318)
!17318 = distinct !DILexicalBlock(scope: !17313, file: !3, line: 3272, column: 2)
!17319 = !DILocation(line: 3272, column: 2, scope: !17313)
!17320 = !DILocation(line: 3273, column: 11, scope: !17321)
!17321 = distinct !DILexicalBlock(scope: !17318, file: !3, line: 3272, column: 45)
!17322 = !DILocation(line: 3273, column: 14, scope: !17321)
!17323 = !DILocation(line: 3273, column: 3, scope: !17321)
!17324 = !DILocation(line: 3275, column: 16, scope: !17325)
!17325 = distinct !DILexicalBlock(scope: !17321, file: !3, line: 3273, column: 20)
!17326 = !DILocation(line: 3276, column: 4, scope: !17325)
!17327 = !DILocation(line: 3278, column: 16, scope: !17325)
!17328 = !DILocation(line: 3279, column: 4, scope: !17325)
!17329 = !DILocation(line: 3281, column: 16, scope: !17325)
!17330 = !DILocation(line: 3282, column: 4, scope: !17325)
!17331 = !DILocation(line: 3284, column: 16, scope: !17325)
!17332 = !DILocation(line: 3285, column: 4, scope: !17325)
!17333 = !DILocation(line: 3287, column: 16, scope: !17325)
!17334 = !DILocation(line: 3288, column: 3, scope: !17325)
!17335 = !DILocation(line: 3289, column: 15, scope: !17321)
!17336 = !DILocation(line: 3289, column: 25, scope: !17321)
!17337 = !DILocation(line: 3289, column: 41, scope: !17321)
!17338 = !DILocation(line: 3289, column: 3, scope: !17321)
!17339 = !DILocation(line: 3290, column: 2, scope: !17321)
!17340 = !DILocation(line: 3272, column: 36, scope: !17318)
!17341 = !DILocation(line: 3272, column: 39, scope: !17318)
!17342 = !DILocation(line: 3272, column: 34, scope: !17318)
!17343 = !DILocation(line: 3272, column: 2, scope: !17318)
!17344 = distinct !{!17344, !17319, !17345}
!17345 = !DILocation(line: 3290, column: 2, scope: !17313)
!17346 = !DILocation(line: 3291, column: 11, scope: !17347)
!17347 = distinct !DILexicalBlock(scope: !17303, file: !3, line: 3291, column: 2)
!17348 = !DILocation(line: 3291, column: 22, scope: !17347)
!17349 = !DILocation(line: 3291, column: 9, scope: !17347)
!17350 = !DILocation(line: 3291, column: 7, scope: !17347)
!17351 = !DILocation(line: 3291, column: 29, scope: !17352)
!17352 = distinct !DILexicalBlock(scope: !17347, file: !3, line: 3291, column: 2)
!17353 = !DILocation(line: 3291, column: 2, scope: !17347)
!17354 = !DILocation(line: 3292, column: 11, scope: !17355)
!17355 = distinct !DILexicalBlock(scope: !17352, file: !3, line: 3291, column: 45)
!17356 = !DILocation(line: 3292, column: 14, scope: !17355)
!17357 = !DILocation(line: 3292, column: 3, scope: !17355)
!17358 = !DILocation(line: 3294, column: 23, scope: !17359)
!17359 = distinct !DILexicalBlock(scope: !17355, file: !3, line: 3292, column: 20)
!17360 = !DILocation(line: 3294, column: 66, scope: !17359)
!17361 = !DILocation(line: 3294, column: 70, scope: !17359)
!17362 = !DILocation(line: 3294, column: 4, scope: !17359)
!17363 = !DILocation(line: 3295, column: 4, scope: !17359)
!17364 = !DILocation(line: 3297, column: 23, scope: !17359)
!17365 = !DILocation(line: 3297, column: 73, scope: !17359)
!17366 = !DILocation(line: 3297, column: 77, scope: !17359)
!17367 = !DILocation(line: 3297, column: 4, scope: !17359)
!17368 = !DILocation(line: 3298, column: 4, scope: !17359)
!17369 = !DILocation(line: 3300, column: 23, scope: !17359)
!17370 = !DILocation(line: 3300, column: 73, scope: !17359)
!17371 = !DILocation(line: 3300, column: 77, scope: !17359)
!17372 = !DILocation(line: 3300, column: 4, scope: !17359)
!17373 = !DILocation(line: 3301, column: 4, scope: !17359)
!17374 = !DILocation(line: 3303, column: 23, scope: !17359)
!17375 = !DILocation(line: 3303, column: 63, scope: !17359)
!17376 = !DILocation(line: 3303, column: 67, scope: !17359)
!17377 = !DILocation(line: 3303, column: 4, scope: !17359)
!17378 = !DILocation(line: 3304, column: 4, scope: !17359)
!17379 = !DILocation(line: 3306, column: 2, scope: !17355)
!17380 = !DILocation(line: 3291, column: 36, scope: !17352)
!17381 = !DILocation(line: 3291, column: 39, scope: !17352)
!17382 = !DILocation(line: 3291, column: 34, scope: !17352)
!17383 = !DILocation(line: 3291, column: 2, scope: !17352)
!17384 = distinct !{!17384, !17353, !17385}
!17385 = !DILocation(line: 3306, column: 2, scope: !17347)
!17386 = !DILocation(line: 3307, column: 1, scope: !17303)
!17387 = distinct !DISubprogram(name: "write_linestyle_thickness_modifiers", scope: !3, file: !3, line: 3309, type: !7324, scopeLine: 3310, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !5641)
!17388 = !DILocalVariable(name: "wd", arg: 1, scope: !17387, file: !3, line: 3309, type: !5820)
!17389 = !DILocation(line: 3309, column: 60, scope: !17387)
!17390 = !DILocalVariable(name: "modifiers", arg: 2, scope: !17387, file: !3, line: 3309, type: !565)
!17391 = !DILocation(line: 3309, column: 74, scope: !17387)
!17392 = !DILocalVariable(name: "m", scope: !17387, file: !3, line: 3311, type: !17219)
!17393 = !DILocation(line: 3311, column: 21, scope: !17387)
!17394 = !DILocalVariable(name: "struct_name", scope: !17387, file: !3, line: 3312, type: !373)
!17395 = !DILocation(line: 3312, column: 14, scope: !17387)
!17396 = !DILocation(line: 3314, column: 11, scope: !17397)
!17397 = distinct !DILexicalBlock(scope: !17387, file: !3, line: 3314, column: 2)
!17398 = !DILocation(line: 3314, column: 22, scope: !17397)
!17399 = !DILocation(line: 3314, column: 9, scope: !17397)
!17400 = !DILocation(line: 3314, column: 7, scope: !17397)
!17401 = !DILocation(line: 3314, column: 29, scope: !17402)
!17402 = distinct !DILexicalBlock(scope: !17397, file: !3, line: 3314, column: 2)
!17403 = !DILocation(line: 3314, column: 2, scope: !17397)
!17404 = !DILocation(line: 3315, column: 11, scope: !17405)
!17405 = distinct !DILexicalBlock(scope: !17402, file: !3, line: 3314, column: 45)
!17406 = !DILocation(line: 3315, column: 14, scope: !17405)
!17407 = !DILocation(line: 3315, column: 3, scope: !17405)
!17408 = !DILocation(line: 3317, column: 16, scope: !17409)
!17409 = distinct !DILexicalBlock(scope: !17405, file: !3, line: 3315, column: 20)
!17410 = !DILocation(line: 3318, column: 4, scope: !17409)
!17411 = !DILocation(line: 3320, column: 16, scope: !17409)
!17412 = !DILocation(line: 3321, column: 4, scope: !17409)
!17413 = !DILocation(line: 3323, column: 16, scope: !17409)
!17414 = !DILocation(line: 3324, column: 4, scope: !17409)
!17415 = !DILocation(line: 3326, column: 16, scope: !17409)
!17416 = !DILocation(line: 3327, column: 4, scope: !17409)
!17417 = !DILocation(line: 3329, column: 16, scope: !17409)
!17418 = !DILocation(line: 3330, column: 4, scope: !17409)
!17419 = !DILocation(line: 3332, column: 16, scope: !17409)
!17420 = !DILocation(line: 3333, column: 3, scope: !17409)
!17421 = !DILocation(line: 3334, column: 15, scope: !17405)
!17422 = !DILocation(line: 3334, column: 25, scope: !17405)
!17423 = !DILocation(line: 3334, column: 41, scope: !17405)
!17424 = !DILocation(line: 3334, column: 3, scope: !17405)
!17425 = !DILocation(line: 3335, column: 2, scope: !17405)
!17426 = !DILocation(line: 3314, column: 36, scope: !17402)
!17427 = !DILocation(line: 3314, column: 39, scope: !17402)
!17428 = !DILocation(line: 3314, column: 34, scope: !17402)
!17429 = !DILocation(line: 3314, column: 2, scope: !17402)
!17430 = distinct !{!17430, !17403, !17431}
!17431 = !DILocation(line: 3335, column: 2, scope: !17397)
!17432 = !DILocation(line: 3336, column: 11, scope: !17433)
!17433 = distinct !DILexicalBlock(scope: !17387, file: !3, line: 3336, column: 2)
!17434 = !DILocation(line: 3336, column: 22, scope: !17433)
!17435 = !DILocation(line: 3336, column: 9, scope: !17433)
!17436 = !DILocation(line: 3336, column: 7, scope: !17433)
!17437 = !DILocation(line: 3336, column: 29, scope: !17438)
!17438 = distinct !DILexicalBlock(scope: !17433, file: !3, line: 3336, column: 2)
!17439 = !DILocation(line: 3336, column: 2, scope: !17433)
!17440 = !DILocation(line: 3337, column: 11, scope: !17441)
!17441 = distinct !DILexicalBlock(scope: !17438, file: !3, line: 3336, column: 45)
!17442 = !DILocation(line: 3337, column: 14, scope: !17441)
!17443 = !DILocation(line: 3337, column: 3, scope: !17441)
!17444 = !DILocation(line: 3339, column: 23, scope: !17445)
!17445 = distinct !DILexicalBlock(scope: !17441, file: !3, line: 3337, column: 20)
!17446 = !DILocation(line: 3339, column: 70, scope: !17445)
!17447 = !DILocation(line: 3339, column: 74, scope: !17445)
!17448 = !DILocation(line: 3339, column: 4, scope: !17445)
!17449 = !DILocation(line: 3340, column: 4, scope: !17445)
!17450 = !DILocation(line: 3342, column: 23, scope: !17445)
!17451 = !DILocation(line: 3342, column: 77, scope: !17445)
!17452 = !DILocation(line: 3342, column: 81, scope: !17445)
!17453 = !DILocation(line: 3342, column: 4, scope: !17445)
!17454 = !DILocation(line: 3343, column: 4, scope: !17445)
!17455 = !DILocation(line: 3345, column: 23, scope: !17445)
!17456 = !DILocation(line: 3345, column: 77, scope: !17445)
!17457 = !DILocation(line: 3345, column: 81, scope: !17445)
!17458 = !DILocation(line: 3345, column: 4, scope: !17445)
!17459 = !DILocation(line: 3346, column: 4, scope: !17445)
!17460 = !DILocation(line: 3348, column: 23, scope: !17445)
!17461 = !DILocation(line: 3348, column: 67, scope: !17445)
!17462 = !DILocation(line: 3348, column: 71, scope: !17445)
!17463 = !DILocation(line: 3348, column: 4, scope: !17445)
!17464 = !DILocation(line: 3349, column: 4, scope: !17445)
!17465 = !DILocation(line: 3351, column: 2, scope: !17441)
!17466 = !DILocation(line: 3336, column: 36, scope: !17438)
!17467 = !DILocation(line: 3336, column: 39, scope: !17438)
!17468 = !DILocation(line: 3336, column: 34, scope: !17438)
!17469 = !DILocation(line: 3336, column: 2, scope: !17438)
!17470 = distinct !{!17470, !17439, !17471}
!17471 = !DILocation(line: 3351, column: 2, scope: !17433)
!17472 = !DILocation(line: 3352, column: 1, scope: !17387)
!17473 = distinct !DISubprogram(name: "write_linestyle_geometry_modifiers", scope: !3, file: !3, line: 3354, type: !7324, scopeLine: 3355, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !5641)
!17474 = !DILocalVariable(name: "wd", arg: 1, scope: !17473, file: !3, line: 3354, type: !5820)
!17475 = !DILocation(line: 3354, column: 59, scope: !17473)
!17476 = !DILocalVariable(name: "modifiers", arg: 2, scope: !17473, file: !3, line: 3354, type: !565)
!17477 = !DILocation(line: 3354, column: 73, scope: !17473)
!17478 = !DILocalVariable(name: "m", scope: !17473, file: !3, line: 3356, type: !17219)
!17479 = !DILocation(line: 3356, column: 21, scope: !17473)
!17480 = !DILocalVariable(name: "struct_name", scope: !17473, file: !3, line: 3357, type: !373)
!17481 = !DILocation(line: 3357, column: 14, scope: !17473)
!17482 = !DILocation(line: 3359, column: 11, scope: !17483)
!17483 = distinct !DILexicalBlock(scope: !17473, file: !3, line: 3359, column: 2)
!17484 = !DILocation(line: 3359, column: 22, scope: !17483)
!17485 = !DILocation(line: 3359, column: 9, scope: !17483)
!17486 = !DILocation(line: 3359, column: 7, scope: !17483)
!17487 = !DILocation(line: 3359, column: 29, scope: !17488)
!17488 = distinct !DILexicalBlock(scope: !17483, file: !3, line: 3359, column: 2)
!17489 = !DILocation(line: 3359, column: 2, scope: !17483)
!17490 = !DILocation(line: 3360, column: 11, scope: !17491)
!17491 = distinct !DILexicalBlock(scope: !17488, file: !3, line: 3359, column: 45)
!17492 = !DILocation(line: 3360, column: 14, scope: !17491)
!17493 = !DILocation(line: 3360, column: 3, scope: !17491)
!17494 = !DILocation(line: 3362, column: 16, scope: !17495)
!17495 = distinct !DILexicalBlock(scope: !17491, file: !3, line: 3360, column: 20)
!17496 = !DILocation(line: 3363, column: 4, scope: !17495)
!17497 = !DILocation(line: 3365, column: 16, scope: !17495)
!17498 = !DILocation(line: 3366, column: 4, scope: !17495)
!17499 = !DILocation(line: 3368, column: 16, scope: !17495)
!17500 = !DILocation(line: 3369, column: 4, scope: !17495)
!17501 = !DILocation(line: 3371, column: 16, scope: !17495)
!17502 = !DILocation(line: 3372, column: 4, scope: !17495)
!17503 = !DILocation(line: 3374, column: 16, scope: !17495)
!17504 = !DILocation(line: 3375, column: 4, scope: !17495)
!17505 = !DILocation(line: 3377, column: 16, scope: !17495)
!17506 = !DILocation(line: 3378, column: 4, scope: !17495)
!17507 = !DILocation(line: 3380, column: 16, scope: !17495)
!17508 = !DILocation(line: 3381, column: 4, scope: !17495)
!17509 = !DILocation(line: 3383, column: 16, scope: !17495)
!17510 = !DILocation(line: 3384, column: 4, scope: !17495)
!17511 = !DILocation(line: 3386, column: 16, scope: !17495)
!17512 = !DILocation(line: 3387, column: 4, scope: !17495)
!17513 = !DILocation(line: 3389, column: 16, scope: !17495)
!17514 = !DILocation(line: 3390, column: 4, scope: !17495)
!17515 = !DILocation(line: 3392, column: 16, scope: !17495)
!17516 = !DILocation(line: 3393, column: 4, scope: !17495)
!17517 = !DILocation(line: 3395, column: 16, scope: !17495)
!17518 = !DILocation(line: 3396, column: 4, scope: !17495)
!17519 = !DILocation(line: 3398, column: 16, scope: !17495)
!17520 = !DILocation(line: 3399, column: 4, scope: !17495)
!17521 = !DILocation(line: 3401, column: 16, scope: !17495)
!17522 = !DILocation(line: 3402, column: 3, scope: !17495)
!17523 = !DILocation(line: 3403, column: 15, scope: !17491)
!17524 = !DILocation(line: 3403, column: 25, scope: !17491)
!17525 = !DILocation(line: 3403, column: 41, scope: !17491)
!17526 = !DILocation(line: 3403, column: 3, scope: !17491)
!17527 = !DILocation(line: 3404, column: 2, scope: !17491)
!17528 = !DILocation(line: 3359, column: 36, scope: !17488)
!17529 = !DILocation(line: 3359, column: 39, scope: !17488)
!17530 = !DILocation(line: 3359, column: 34, scope: !17488)
!17531 = !DILocation(line: 3359, column: 2, scope: !17488)
!17532 = distinct !{!17532, !17489, !17533}
!17533 = !DILocation(line: 3404, column: 2, scope: !17483)
!17534 = !DILocation(line: 3405, column: 1, scope: !17473)
!17535 = distinct !DISubprogram(name: "write_keymapitem", scope: !3, file: !3, line: 967, type: !17536, scopeLine: 968, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !5641)
!17536 = !DISubroutineType(types: !17537)
!17537 = !{null, !5820, !13016}
!17538 = !DILocalVariable(name: "wd", arg: 1, scope: !17535, file: !3, line: 967, type: !5820)
!17539 = !DILocation(line: 967, column: 41, scope: !17535)
!17540 = !DILocalVariable(name: "kmi", arg: 2, scope: !17535, file: !3, line: 967, type: !13016)
!17541 = !DILocation(line: 967, column: 59, scope: !17535)
!17542 = !DILocation(line: 969, column: 14, scope: !17535)
!17543 = !DILocation(line: 969, column: 43, scope: !17535)
!17544 = !DILocation(line: 969, column: 2, scope: !17535)
!17545 = !DILocation(line: 970, column: 6, scope: !17546)
!17546 = distinct !DILexicalBlock(scope: !17535, file: !3, line: 970, column: 6)
!17547 = !DILocation(line: 970, column: 11, scope: !17546)
!17548 = !DILocation(line: 970, column: 6, scope: !17535)
!17549 = !DILocation(line: 971, column: 21, scope: !17546)
!17550 = !DILocation(line: 971, column: 26, scope: !17546)
!17551 = !DILocation(line: 971, column: 38, scope: !17546)
!17552 = !DILocation(line: 971, column: 3, scope: !17546)
!17553 = !DILocation(line: 972, column: 1, scope: !17535)
!17554 = distinct !DISubprogram(name: "writedata_free", scope: !3, file: !3, line: 356, type: !12706, scopeLine: 357, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !5641)
!17555 = !DILocalVariable(name: "wd", arg: 1, scope: !17554, file: !3, line: 356, type: !5820)
!17556 = !DILocation(line: 356, column: 39, scope: !17554)
!17557 = !DILocation(line: 358, column: 16, scope: !17554)
!17558 = !DILocation(line: 358, column: 20, scope: !17554)
!17559 = !DILocation(line: 358, column: 2, scope: !17554)
!17560 = !DILocation(line: 360, column: 2, scope: !17554)
!17561 = !DILocation(line: 360, column: 12, scope: !17554)
!17562 = !DILocation(line: 360, column: 16, scope: !17554)
!17563 = !DILocation(line: 361, column: 2, scope: !17554)
!17564 = !DILocation(line: 361, column: 12, scope: !17554)
!17565 = !DILocation(line: 362, column: 1, scope: !17554)
