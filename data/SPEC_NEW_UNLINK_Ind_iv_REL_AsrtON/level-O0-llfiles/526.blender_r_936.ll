; ModuleID = 'blender/source/blender/editors/mask/mask_ops.c'
source_filename = "blender/source/blender/editors/mask/mask_ops.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.EnumPropertyItem = type { i32, i8*, i32, i8*, i8* }
%struct.UserDef = type { i32, i32, i32, i32, i32, [768 x i8], [768 x i8], [1024 x i8], [768 x i8], [768 x i8], [768 x i8], [768 x i8], [768 x i8], [1024 x i8], [1024 x i8], i32, i16, i16, i16, i16, i16, i16, i32, i32, i32, i16, i16, i32, i32, i32, i32, i32, i32, i32, i16, i16, i16, i16, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, [64 x i8], i16, i16, i16, i16, i16, i16, i16, i16, [3 x %struct.SolidLight], i16, i16, i16, i16, i16, i16, i16, i16, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i8, i8, i8, i8, i16, i16, i16, i16, i16, i16, float, float, i32, i16, i16, float, i16, i16, i16, i16, %struct.ColorBand, [3 x float], [4 x float], i16, i8, i8, [80 x i8], [1024 x i8], i32, i32, float, float, i32, i16, i16, i16, i16, i16, i16, %struct.WalkNavigation }
%struct.ListBase = type { i8*, i8* }
%struct.SolidLight = type { i32, i32, [4 x float], [4 x float], [4 x float] }
%struct.ColorBand = type { i16, i16, i8, i8, i8, [1 x i8], [32 x %struct.CBData] }
%struct.CBData = type { float, float, float, float, float, i32 }
%struct.WalkNavigation = type { float, float, float, float, float, float, i16, [3 x i16] }
%struct.MaskSplinePoint = type { %struct.BezTriple, i32, i32, %struct.MaskSplinePointUW*, %struct.MaskParent }
%struct.BezTriple = type { [3 x [3 x float]], float, float, float, i8, i8, i8, i8, i8, i8, i8, i8, float, float, float, [4 x i8] }
%struct.MaskSplinePointUW = type { float, float, i32 }
%struct.MaskParent = type { i32, i32, %struct.ID*, [64 x i8], [64 x i8], [2 x float], [4 x [2 x float]] }
%struct.ID = type { i8*, i8*, %struct.ID*, %struct.Library*, [66 x i8], i16, i32, i32, i32, %struct.IDProperty* }
%struct.Library = type { %struct.ID, %struct.ID*, %struct.FileData*, [1024 x i8], [1024 x i8], %struct.Library*, %struct.PackedFile* }
%struct.FileData = type opaque
%struct.PackedFile = type opaque
%struct.IDProperty = type { %struct.IDProperty*, %struct.IDProperty*, i8, i8, i16, [64 x i8], i32, %struct.IDPropertyData, i32, i32 }
%struct.IDPropertyData = type { i8*, %struct.ListBase, i32, i32 }
%struct.bContext = type opaque
%struct.Mask = type { %struct.ID, %struct.AnimData*, %struct.ListBase, i32, i32, i32, i32, i32, i32 }
%struct.AnimData = type opaque
%struct.MaskLayer = type { %struct.MaskLayer*, %struct.MaskLayer*, [64 x i8], %struct.ListBase, %struct.ListBase, %struct.MaskSpline*, %struct.MaskSplinePoint*, float, i8, i8, i8, [7 x i8], i8, i8 }
%struct.MaskSpline = type { %struct.MaskSpline*, %struct.MaskSpline*, i16, i8, i8, i32, %struct.MaskSplinePoint*, %struct.MaskParent, %struct.MaskSplinePoint* }
%struct.ScrArea = type { %struct.ScrArea*, %struct.ScrArea*, %struct.ScrVert*, %struct.ScrVert*, %struct.ScrVert*, %struct.ScrVert*, %struct.bScreen*, %struct.rcti, i8, i8, i16, i16, i16, i16, i16, i16, i8, i8, %struct.SpaceType*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase }
%struct.ScrVert = type { %struct.ScrVert*, %struct.ScrVert*, %struct.ScrVert*, %struct.vec2s, i16, i16 }
%struct.vec2s = type { i16, i16 }
%struct.bScreen = type { %struct.ID, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.Scene*, %struct.Scene*, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, %struct.wmTimer*, i8* }
%struct.Scene = type { %struct.ID, %struct.AnimData*, %struct.Object*, %struct.World*, %struct.Scene*, %struct.ListBase, %struct.Base*, %struct.Object*, [3 x float], [3 x float], [3 x float], [3 x float], i32, i32, i32, i16, i8, [1 x i8], %struct.bNodeTree*, %struct.Editing*, %struct.ToolSettings*, %struct.SceneStats*, %struct.RenderData, %struct.AudioData, %struct.ListBase, %struct.ListBase, i8*, i8*, i8*, i8*, i8*, %struct.DagForest*, i16, i16, i32, %struct.ListBase, %struct.GameFraming, %struct.GameData, %struct.UnitSettings, %struct.bGPdata*, %struct.PhysicsSettings, %struct.MovieClip*, i64, i64, %struct.ColorManagedViewSettings, %struct.ColorManagedDisplaySettings, %struct.ColorManagedColorspaceSettings, %struct.RigidBodyWorld* }
%struct.World = type opaque
%struct.Base = type { %struct.Base*, %struct.Base*, i32, i32, i32, i16, i16, %struct.Object* }
%struct.Object = type { %struct.ID, %struct.AnimData*, %struct.SculptSession*, i16, i16, i32, i32, i32, [64 x i8], %struct.Object*, %struct.Object*, %struct.Object*, %struct.Object*, %struct.Object*, %struct.Ipo*, %struct.BoundBox*, %struct.bAction*, %struct.bAction*, %struct.bPose*, i8*, %struct.bGPdata*, %struct.bAnimVizSettings, %struct.bMotionPath*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, i32, i32, %struct.Material**, i8*, i32, i32, [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [4 x float], [4 x float], [3 x float], [3 x float], float, float, [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i8, i8, i32, i32, i32, i32, i32, float, float, float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i8, i8, i16, i8, i8, float, float, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, float, i16, i16, [4 x float], i32, i32, %struct.BulletSoftBody*, i8, i8, i16, [3 x float], %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.PartDeflect*, %struct.SoftBody*, %struct.Group*, i8, i8, i16, float, %struct.FluidsimSettings*, %struct.CurveCache*, %struct.DerivedMesh*, %struct.DerivedMesh*, i64, i64, i32, i32, %struct.ListBase, %struct.ListBase, %struct.ListBase*, %struct.RigidBodyOb*, %struct.RigidBodyCon*, [2 x float], %struct.ImageUser*, %struct.ListBase, %struct.LodLevel* }
%struct.SculptSession = type opaque
%struct.Ipo = type opaque
%struct.BoundBox = type { [8 x [3 x float]], i32, i32 }
%struct.bAction = type { %struct.ID, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, i32, i32, i32, i32 }
%struct.bPose = type { %struct.ListBase, %struct.GHash*, i16, i16, i32, i32, float, [3 x float], [3 x float], %struct.ListBase, i32, i32, i8*, i8*, %struct.bAnimVizSettings, [64 x i8] }
%struct.GHash = type opaque
%struct.bAnimVizSettings = type { i32, i32, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i32, i32, i32, i32 }
%struct.bMotionPath = type { %struct.bMotionPathVert*, i32, i32, i32, i32 }
%struct.bMotionPathVert = type { [3 x float], i32 }
%struct.Material = type opaque
%struct.BulletSoftBody = type opaque
%struct.PartDeflect = type opaque
%struct.SoftBody = type opaque
%struct.Group = type opaque
%struct.FluidsimSettings = type opaque
%struct.CurveCache = type opaque
%struct.DerivedMesh = type opaque
%struct.RigidBodyOb = type opaque
%struct.RigidBodyCon = type opaque
%struct.ImageUser = type { %struct.Scene*, i32, i32, i32, i32, i8, i8, i8, i8, i16, i16, i16, i16, i32 }
%struct.LodLevel = type { %struct.LodLevel*, %struct.LodLevel*, %struct.Object*, i32, float }
%struct.bNodeTree = type { %struct.ID, %struct.AnimData*, %struct.bNodeTreeType*, [64 x i8], %struct.StructRNA*, %struct.bGPdata*, [2 x float], %struct.ListBase, %struct.ListBase, i32, i32, i32, i32, i32, i16, i16, i32, i32, i16, i16, i32, %struct.rctf, %struct.ListBase, %struct.ListBase, %struct.bNodeInstanceHash*, %struct.bNodeInstanceKey, i32, %struct.bNodeTreeExec*, void (i8*, float)*, void (i8*, i8*)*, i32 (i8*)*, void (i8*)*, i8*, i8*, i8*, i8* }
%struct.bNodeTreeType = type opaque
%struct.StructRNA = type opaque
%struct.rctf = type { float, float, float, float }
%struct.bNodeInstanceHash = type opaque
%struct.bNodeInstanceKey = type { i32 }
%struct.bNodeTreeExec = type opaque
%struct.Editing = type { %struct.ListBase*, %struct.ListBase, %struct.ListBase, %struct.Sequence*, [1024 x i8], [1024 x i8], i32, i32, i32, i32, %struct.rctf }
%struct.Sequence = type { %struct.Sequence*, %struct.Sequence*, i8*, i8*, [64 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, float, float, i16, i16, i32, i32, %struct.Strip*, %struct.Ipo*, %struct.Scene*, %struct.Object*, %struct.MovieClip*, %struct.Mask*, %struct.anim*, float, float, %struct.Sequence*, %struct.Sequence*, %struct.Sequence*, %struct.ListBase, %struct.bSound*, i8*, float, float, float, float, i8*, i32, i32, i32, float, i32, i8, [3 x i8], %struct.ListBase }
%struct.Strip = type { %struct.Strip*, %struct.Strip*, i32, i32, i32, i32, %struct.StripElem*, [768 x i8], %struct.StripProxy*, %struct.StripCrop*, %struct.StripTransform*, %struct.StripColorBalance*, %struct.ColorManagedColorspaceSettings }
%struct.StripElem = type { [256 x i8], i32, i32 }
%struct.StripProxy = type { [768 x i8], [256 x i8], %struct.anim*, i16, i16, i16, i16 }
%struct.StripCrop = type { i32, i32, i32, i32 }
%struct.StripTransform = type { i32, i32 }
%struct.StripColorBalance = type { [3 x float], [3 x float], [3 x float], i32, i32 }
%struct.anim = type opaque
%struct.bSound = type opaque
%struct.ToolSettings = type { %struct.VPaint*, %struct.VPaint*, %struct.Sculpt*, %struct.UvSculpt*, float, float, float, i16, i16, i8, i8, i8, i8, float, i16, i8, [5 x i8], %struct.ImagePaintSettings, %struct.ParticleEditSettings, float, float, i16, i16, i8, [1 x i8], i16, float, float, float, float, float, float, float, float, float, float, i16, i8, i8, [3 x i8], i8, %struct.Object*, i8, i8, i8, i8, i8, [8 x i8], [8 x i8], i8, i8, i8, i8, i8, i16, i16, i16, i16, i8, i8, i8, i8, i8, i8, i32, i32, i32, i32, i16, i16, i32, float, float, %struct.UnifiedPaintSettings, %struct.MeshStatVis }
%struct.VPaint = type { %struct.Paint, i16, i16, i32, i32*, %struct.MDeformVert*, i8* }
%struct.Paint = type { %struct.Brush*, %struct.Palette*, i8*, [4 x i8], i32, i32, i32 }
%struct.Brush = type opaque
%struct.Palette = type opaque
%struct.MDeformVert = type opaque
%struct.Sculpt = type { %struct.Paint, i32, [3 x i32], float, i32, float, float, %struct.Object*, i8* }
%struct.UvSculpt = type { %struct.Paint }
%struct.ImagePaintSettings = type { %struct.Paint, i16, i16, i16, i16, [2 x i16], i32, i8*, %struct.Image*, %struct.Image*, %struct.Image*, [3 x float], float }
%struct.Image = type { %struct.ID, [1024 x i8], %struct.MovieCache*, %struct.GPUTexture*, %struct.anim*, %struct.RenderResult*, [8 x %struct.RenderResult*], i16, i16, i16, i16, i16, i16, i32, i16, i16, i16, i16, i16, i16, i32, i32*, %struct.PackedFile*, %struct.PreviewImage*, float, i32, i16, i16, i32, i32, i8, i8, i16, [4 x float], float, float, %struct.ColorManagedColorspaceSettings, i8, [7 x i8], [8 x %struct.RenderSlot] }
%struct.MovieCache = type opaque
%struct.GPUTexture = type opaque
%struct.RenderResult = type opaque
%struct.PreviewImage = type { [2 x i32], [2 x i32], [2 x i16], [2 x i16], [2 x i32*], [2 x %struct.GPUTexture*] }
%struct.RenderSlot = type { [64 x i8] }
%struct.ParticleEditSettings = type { i16, i16, i16, i16, [7 x %struct.ParticleBrushData], i8*, float, float, i32, i32, i32, i32, %struct.Scene*, %struct.Object* }
%struct.ParticleBrushData = type { i16, i16, i16, i16, i32, float }
%struct.UnifiedPaintSettings = type { i32, float, float, float, [3 x float], [3 x float], i32, [2 x float], float, i32, i32, i8, [7 x i8], float, [2 x float], i32, float, [2 x float], [2 x float], i32, %struct.ColorSpace*, float, i32 }
%struct.ColorSpace = type opaque
%struct.MeshStatVis = type { i8, [2 x i8], i8, float, float, float, float, i8, [3 x i8], float, float, float, float }
%struct.SceneStats = type opaque
%struct.RenderData = type { %struct.ImageFormatData, %struct.AviCodecData*, %struct.QuicktimeCodecData*, %struct.QuicktimeCodecSettings, %struct.FFMpegCodecData, i32, i32, i32, float, i32, i32, i32, i32, i16, i16, float, float, float, float, float, i16, i16, i16, i16, i16, i16, i32, i16, i16, i16, i16, i16, i16, i32, i32, i16, i16, i32, i32, i16, i16, i16, i16, i16, i8, i8, i32, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, %struct.rctf, %struct.rctf, %struct.rcti, %struct.ListBase, i16, i16, float, float, float, float, i32, float, float, float, float, i16, i16, i16, i16, i16, i16, float, float, i16, i16, float, float, [1024 x i8], i32, i16, i16, [768 x i8], [4 x float], [4 x float], i8, i8, i8, [5 x i8], i32, i16, i16, float, float, i16, i16, float, i16, i16, i32, i16, i16, i16, i16, float, float, %struct.Text*, i32, float, [32 x i8], %struct.BakeData, i32, i32 }
%struct.ImageFormatData = type { i8, i8, i8, i8, i8, i8, i8, i8, i16, i16, float, i8, i8, [6 x i8], %struct.ColorManagedViewSettings, %struct.ColorManagedDisplaySettings }
%struct.AviCodecData = type { i8*, i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [128 x i8] }
%struct.QuicktimeCodecData = type { i8*, i8*, i32, i32, [128 x i8] }
%struct.QuicktimeCodecSettings = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32, i32 }
%struct.FFMpegCodecData = type { i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, i32, i32, i32, %struct.IDProperty* }
%struct.Text = type opaque
%struct.BakeData = type { %struct.ImageFormatData, [1024 x i8], i16, i16, i16, i16, float, float, [3 x i8], i8, i8, [3 x i8], [64 x i8] }
%struct.AudioData = type { i32, float, float, float, i32, i16, i16, float, float }
%struct.DagForest = type opaque
%struct.GameFraming = type { [3 x float], i8, i8, i8, i8 }
%struct.GameData = type { %struct.GameFraming, i16, i16, i16, i16, i16, i16, i16, i16, i16, [3 x i16], %struct.GameDome, i16, i16, float, %struct.RecastData, float, float, i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, float, float, float, float, float }
%struct.GameDome = type { i16, i16, i16, i16, float, float, %struct.Text* }
%struct.RecastData = type { float, float, float, float, float, float, float, float, float, float, i32, float, float, i16, i16 }
%struct.UnitSettings = type { float, i8, i8, i16 }
%struct.bGPdata = type opaque
%struct.PhysicsSettings = type { [3 x float], i32, i32, i32 }
%struct.MovieClip = type { %struct.ID, %struct.AnimData*, [1024 x i8], i32, i32, [2 x i32], float, float, %struct.anim*, %struct.MovieClipCache*, %struct.bGPdata*, %struct.MovieTracking, i8*, %struct.MovieClipProxy, i32, i32, i32, i32, %struct.ColorManagedColorspaceSettings }
%struct.MovieClipCache = type opaque
%struct.MovieTracking = type { %struct.MovieTrackingSettings, %struct.MovieTrackingCamera, %struct.ListBase, %struct.ListBase, %struct.MovieTrackingReconstruction, %struct.MovieTrackingStabilization, %struct.MovieTrackingTrack*, %struct.MovieTrackingPlaneTrack*, %struct.ListBase, i32, i32, %struct.MovieTrackingStats*, %struct.MovieTrackingDopesheet }
%struct.MovieTrackingSettings = type { i32, i16, i16, float, i16, i16, i16, i16, i16, i16, float, i16, i16, i32, i32, i32, i16, i16, float, i32, i32, float, float, i32 }
%struct.MovieTrackingCamera = type { i8*, i16, i16, float, float, float, i16, i16, [2 x float], float, float, float, float, float }
%struct.MovieTrackingReconstruction = type { i32, float, i32, i32, %struct.MovieReconstructedCamera* }
%struct.MovieReconstructedCamera = type { i32, float, [4 x [4 x float]] }
%struct.MovieTrackingStabilization = type { i32, i32, i32, float, %struct.MovieTrackingTrack*, float, float, float, i32, i32, float }
%struct.MovieTrackingTrack = type { %struct.MovieTrackingTrack*, %struct.MovieTrackingTrack*, [64 x i8], [2 x float], [2 x float], [2 x float], [2 x float], [2 x float], i32, i32, %struct.MovieTrackingMarker*, [3 x float], float, i32, i32, i32, [3 x float], i16, i16, i16, i16, i32, float, %struct.bGPdata*, float, float }
%struct.MovieTrackingMarker = type { [2 x float], [4 x [2 x float]], [2 x float], [2 x float], i32, i32 }
%struct.MovieTrackingPlaneTrack = type { %struct.MovieTrackingPlaneTrack*, %struct.MovieTrackingPlaneTrack*, [64 x i8], %struct.MovieTrackingTrack**, i32, i32, %struct.MovieTrackingPlaneMarker*, i32, i32, %struct.Image*, float, i32 }
%struct.MovieTrackingPlaneMarker = type { [4 x [2 x float]], i32, i32 }
%struct.MovieTrackingStats = type { [256 x i8] }
%struct.MovieTrackingDopesheet = type { i32, i16, i16, %struct.ListBase, %struct.ListBase, i32, i32 }
%struct.MovieClipProxy = type { [768 x i8], i16, i16, i16, i16 }
%struct.ColorManagedViewSettings = type { i32, i32, [64 x i8], [64 x i8], float, float, %struct.CurveMapping*, i8* }
%struct.CurveMapping = type { i32, i32, i32, i32, %struct.rctf, %struct.rctf, [4 x %struct.CurveMap], [3 x float], [3 x float], [3 x float], [3 x float] }
%struct.CurveMap = type { i16, i16, float, float, float, [2 x float], [2 x float], %struct.CurveMapPoint*, %struct.CurveMapPoint*, %struct.CurveMapPoint*, [2 x float], [2 x float] }
%struct.CurveMapPoint = type { float, float, i16, i16 }
%struct.ColorManagedDisplaySettings = type { [64 x i8] }
%struct.ColorManagedColorspaceSettings = type { [64 x i8] }
%struct.RigidBodyWorld = type opaque
%struct.wmTimer = type { %struct.wmTimer*, %struct.wmTimer*, %struct.wmWindow*, double, i32, i8*, double, double, double, double, double, i32 }
%struct.wmWindow = type { %struct.wmWindow*, %struct.wmWindow*, i8*, %struct.bScreen*, %struct.bScreen*, [64 x i8], i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i32, i16, i16, %struct.wmEvent*, %struct.wmSubWindow*, %struct.wmGesture*, i32, i32, i8*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase }
%struct.wmEvent = type { %struct.wmEvent*, %struct.wmEvent*, i16, i16, i32, i32, [2 x i32], [6 x i8], i8, i8, i16, i16, i32, i32, double, i32, i32, i16, i16, i16, i16, i16, i16, i8*, %struct.wmTabletData*, i16, i16, i32, i8* }
%struct.wmTabletData = type { i32, float, float, float }
%struct.wmSubWindow = type opaque
%struct.wmGesture = type { %struct.wmGesture*, %struct.wmGesture*, i32, i32, i32, i32, i32, i32, i8*, i8* }
%struct.rcti = type { i32, i32, i32, i32 }
%struct.SpaceType = type opaque
%struct.ARegion = type { %struct.ARegion*, %struct.ARegion*, %struct.View2D, %struct.rcti, %struct.rcti, i16, i16, i16, i16, i16, i16, float, i16, i16, i16, i16, i16, i16, i16, i16, %struct.ARegionType*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.wmTimer*, i8*, i8* }
%struct.View2D = type { %struct.rctf, %struct.rctf, %struct.rcti, %struct.rcti, %struct.rcti, [2 x float], [2 x float], float, float, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, float*, i32, i32, %struct.SmoothView2DStore*, %struct.wmTimer* }
%struct.SmoothView2DStore = type opaque
%struct.ARegionType = type opaque
%struct.Main = type { %struct.Main*, %struct.Main*, [1024 x i8], i16, i16, i16, i16, i64, [16 x i8], i16, %struct.Library*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, [256 x i8], %struct.EvaluationContext*, %struct.MainLock* }
%struct.EvaluationContext = type { i32 }
%struct.MainLock = type opaque
%struct.SpaceClip = type { %struct.SpaceLink*, %struct.SpaceLink*, %struct.ListBase, i32, float, float, float, float, float, %struct.MovieClipUser, %struct.MovieClip*, %struct.MovieClipScopes, i32, i16, i16, i32, [2 x float], float, float, i32, [4 x [4 x float]], [4 x [4 x float]], i32, i16, i16, i32, i32, [2 x float], %struct.MaskSpaceInfo }
%struct.SpaceLink = type { %struct.SpaceLink*, %struct.SpaceLink*, %struct.ListBase, i32, float, [8 x i16] }
%struct.MovieClipUser = type { i32, i16, i16 }
%struct.MovieClipScopes = type { i16, i16, i32, i32, i32, %struct.MovieTrackingMarker, %struct.ImBuf*, %struct.ImBuf*, [2 x float], i16, i16, i32, %struct.MovieTrackingTrack*, %struct.MovieTrackingMarker*, [2 x float] }
%struct.ImBuf = type opaque
%struct.MaskSpaceInfo = type { %struct.Mask*, i8, i8, i8, [5 x i8] }
%struct.SpaceImage = type { %struct.SpaceLink*, %struct.SpaceLink*, %struct.ListBase, i32, i32, %struct.Image*, %struct.ImageUser, %struct.CurveMapping*, %struct.Scopes, %struct.Histogram, %struct.bGPdata*, [2 x float], float, float, float, float, float, i8, i8, i16, i16, i16, i8, i8, i8, i8, %struct.MaskSpaceInfo }
%struct.Scopes = type { i32, i32, i32, float, i32, float, float, i32, float, i32, [3 x [2 x float]], %struct.Histogram, float*, float*, float*, float*, i32, i32 }
%struct.Histogram = type { i32, i32, [256 x float], [256 x float], [256 x float], [256 x float], [256 x float], float, float, i16, i16, i32, [2 x [2 x float]] }
%struct.wmOperatorType = type { i8*, i8*, i8*, i8*, i32 (%struct.bContext*, %struct.wmOperator*)*, i8 (%struct.bContext*, %struct.wmOperator*)*, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)*, void (%struct.bContext*, %struct.wmOperator*)*, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)*, i32 (%struct.bContext*)*, void (%struct.bContext*, %struct.wmOperator*)*, %struct.StructRNA*, %struct.IDProperty*, %struct.PropertyRNA*, %struct.ListBase, %struct.wmKeyMap*, i8*, i32 (%struct.bContext*, %struct.wmOperatorType*)*, %struct.ExtensionRNA, i16 }
%struct.wmOperator = type { %struct.wmOperator*, %struct.wmOperator*, [64 x i8], %struct.IDProperty*, %struct.wmOperatorType*, i8*, i8*, %struct.PointerRNA*, %struct.ReportList*, %struct.ListBase, %struct.wmOperator*, %struct.uiLayout*, i16, [3 x i16] }
%struct.PointerRNA = type { %struct.anon, %struct.StructRNA*, i8* }
%struct.anon = type { i8* }
%struct.ReportList = type { %struct.ListBase, i32, i32, i32, i32, %struct.wmTimer* }
%struct.uiLayout = type opaque
%struct.PropertyRNA = type opaque
%struct.wmKeyMap = type { %struct.wmKeyMap*, %struct.wmKeyMap*, %struct.ListBase, %struct.ListBase, [64 x i8], i16, i16, i16, i16, i32 (%struct.bContext*)*, i8* }
%struct.ExtensionRNA = type { i8*, %struct.StructRNA*, i32 (%struct.bContext*, %struct.PointerRNA*, %struct.FunctionRNA*, %struct.ParameterList*)*, void (i8*)* }
%struct.FunctionRNA = type opaque
%struct.ParameterList = type { i8*, %struct.FunctionRNA*, i32, i32, i32 }
%struct.SlidePointData = type { i16, i32, %struct.Mask*, %struct.MaskLayer*, %struct.MaskSpline*, %struct.MaskSpline*, %struct.MaskSplinePoint*, %struct.MaskSplinePointUW*, i32, i32, i32, [2 x float], [2 x float], i8, i8, i8, i8, i8, [3 x [3 x float]], i8, i8, [2 x float], [2 x float], [2 x float], float, float }
%struct.wmEventHandler = type opaque
%struct.SlideSplineCurvatureData = type { i16, %struct.Mask*, %struct.MaskLayer*, %struct.MaskSpline*, %struct.MaskSplinePoint*, float, i8, %struct.BezTriple*, %struct.BezTriple*, %struct.BezTriple, %struct.BezTriple, [2 x float], [2 x float], [2 x float], [2 x float], [2 x float], [3 x float] }

@MEM_freeN = external dso_local global void (i8*)*, align 8
@.str = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.1 = private unnamed_addr constant [9 x i8] c"New Mask\00", align 1
@.str.2 = private unnamed_addr constant [16 x i8] c"Create new mask\00", align 1
@.str.3 = private unnamed_addr constant [12 x i8] c"MASK_OT_new\00", align 1
@.str.4 = private unnamed_addr constant [5 x i8] c"name\00", align 1
@.str.5 = private unnamed_addr constant [5 x i8] c"Name\00", align 1
@.str.6 = private unnamed_addr constant [17 x i8] c"Name of new mask\00", align 1
@.str.7 = private unnamed_addr constant [15 x i8] c"Add Mask Layer\00", align 1
@.str.8 = private unnamed_addr constant [31 x i8] c"Add new mask layer for masking\00", align 1
@.str.9 = private unnamed_addr constant [18 x i8] c"MASK_OT_layer_new\00", align 1
@.str.10 = private unnamed_addr constant [23 x i8] c"Name of new mask layer\00", align 1
@.str.11 = private unnamed_addr constant [18 x i8] c"Remove Mask Layer\00", align 1
@.str.12 = private unnamed_addr constant [18 x i8] c"Remove mask layer\00", align 1
@.str.13 = private unnamed_addr constant [21 x i8] c"MASK_OT_layer_remove\00", align 1
@.str.14 = private unnamed_addr constant [12 x i8] c"Slide Point\00", align 1
@.str.15 = private unnamed_addr constant [21 x i8] c"Slide control points\00", align 1
@.str.16 = private unnamed_addr constant [20 x i8] c"MASK_OT_slide_point\00", align 1
@.str.17 = private unnamed_addr constant [14 x i8] c"slide_feather\00", align 1
@.str.18 = private unnamed_addr constant [14 x i8] c"Slide Feather\00", align 1
@.str.19 = private unnamed_addr constant [45 x i8] c"First try to slide feather instead of vertex\00", align 1
@.str.20 = private unnamed_addr constant [13 x i8] c"is_new_point\00", align 1
@.str.21 = private unnamed_addr constant [16 x i8] c"Slide New Point\00", align 1
@.str.22 = private unnamed_addr constant [35 x i8] c"Newly created vertex is being slid\00", align 1
@.str.23 = private unnamed_addr constant [23 x i8] c"Slide Spline Curvature\00", align 1
@.str.24 = private unnamed_addr constant [53 x i8] c"Slide a point on the spline to define it's curvature\00", align 1
@.str.25 = private unnamed_addr constant [31 x i8] c"MASK_OT_slide_spline_curvature\00", align 1
@.str.26 = private unnamed_addr constant [14 x i8] c"Toggle Cyclic\00", align 1
@.str.27 = private unnamed_addr constant [35 x i8] c"Toggle cyclic for selected splines\00", align 1
@.str.28 = private unnamed_addr constant [22 x i8] c"MASK_OT_cyclic_toggle\00", align 1
@.str.29 = private unnamed_addr constant [7 x i8] c"Delete\00", align 1
@.str.30 = private unnamed_addr constant [42 x i8] c"Delete selected control points or splines\00", align 1
@.str.31 = private unnamed_addr constant [15 x i8] c"MASK_OT_delete\00", align 1
@.str.32 = private unnamed_addr constant [17 x i8] c"Switch Direction\00", align 1
@.str.33 = private unnamed_addr constant [37 x i8] c"Switch direction of selected splines\00", align 1
@.str.34 = private unnamed_addr constant [25 x i8] c"MASK_OT_switch_direction\00", align 1
@.str.35 = private unnamed_addr constant [15 x i8] c"Recalc Normals\00", align 1
@.str.36 = private unnamed_addr constant [47 x i8] c"Re-calculate the direction of selected handles\00", align 1
@.str.37 = private unnamed_addr constant [32 x i8] c"MASK_OT_normals_make_consistent\00", align 1
@MASK_OT_handle_type_set.editcurve_handle_type_items = internal global [6 x %struct.EnumPropertyItem] [%struct.EnumPropertyItem { i32 1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.38, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.39, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 2, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.40, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.41, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 3, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.42, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.43, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 5, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.44, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.45, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.46, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.47, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0) }, %struct.EnumPropertyItem zeroinitializer], align 16, !dbg !0
@.str.38 = private unnamed_addr constant [5 x i8] c"AUTO\00", align 1
@.str.39 = private unnamed_addr constant [5 x i8] c"Auto\00", align 1
@.str.40 = private unnamed_addr constant [7 x i8] c"VECTOR\00", align 1
@.str.41 = private unnamed_addr constant [7 x i8] c"Vector\00", align 1
@.str.42 = private unnamed_addr constant [8 x i8] c"ALIGNED\00", align 1
@.str.43 = private unnamed_addr constant [15 x i8] c"Aligned Single\00", align 1
@.str.44 = private unnamed_addr constant [19 x i8] c"ALIGNED_DOUBLESIDE\00", align 1
@.str.45 = private unnamed_addr constant [8 x i8] c"Aligned\00", align 1
@.str.46 = private unnamed_addr constant [5 x i8] c"FREE\00", align 1
@.str.47 = private unnamed_addr constant [5 x i8] c"Free\00", align 1
@.str.48 = private unnamed_addr constant [16 x i8] c"Set Handle Type\00", align 1
@.str.49 = private unnamed_addr constant [48 x i8] c"Set type of handles for selected control points\00", align 1
@.str.50 = private unnamed_addr constant [24 x i8] c"MASK_OT_handle_type_set\00", align 1
@.str.51 = private unnamed_addr constant [5 x i8] c"type\00", align 1
@.str.52 = private unnamed_addr constant [5 x i8] c"Type\00", align 1
@.str.53 = private unnamed_addr constant [12 x i8] c"Spline type\00", align 1
@.str.54 = private unnamed_addr constant [20 x i8] c"Clear Restrict View\00", align 1
@.str.55 = private unnamed_addr constant [42 x i8] c"Reveal the layer by setting the hide flag\00", align 1
@.str.56 = private unnamed_addr constant [24 x i8] c"MASK_OT_hide_view_clear\00", align 1
@.str.57 = private unnamed_addr constant [18 x i8] c"Set Restrict View\00", align 1
@.str.58 = private unnamed_addr constant [40 x i8] c"Hide the layer by setting the hide flag\00", align 1
@.str.59 = private unnamed_addr constant [22 x i8] c"MASK_OT_hide_view_set\00", align 1
@.str.60 = private unnamed_addr constant [11 x i8] c"unselected\00", align 1
@.str.61 = private unnamed_addr constant [11 x i8] c"Unselected\00", align 1
@.str.62 = private unnamed_addr constant [44 x i8] c"Hide unselected rather than selected layers\00", align 1
@.str.63 = private unnamed_addr constant [21 x i8] c"Clear Feather Weight\00", align 1
@.str.64 = private unnamed_addr constant [33 x i8] c"Reset the feather weight to zero\00", align 1
@.str.65 = private unnamed_addr constant [29 x i8] c"MASK_OT_feather_weight_clear\00", align 1
@MASK_OT_layer_move.direction_items = internal global [3 x %struct.EnumPropertyItem] [%struct.EnumPropertyItem { i32 -1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.66, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.67, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.68, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.69, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0) }, %struct.EnumPropertyItem zeroinitializer], align 16, !dbg !2251
@.str.66 = private unnamed_addr constant [3 x i8] c"UP\00", align 1
@.str.67 = private unnamed_addr constant [3 x i8] c"Up\00", align 1
@.str.68 = private unnamed_addr constant [5 x i8] c"DOWN\00", align 1
@.str.69 = private unnamed_addr constant [5 x i8] c"Down\00", align 1
@.str.70 = private unnamed_addr constant [11 x i8] c"Move Layer\00", align 1
@.str.71 = private unnamed_addr constant [42 x i8] c"Move the active layer up/down in the list\00", align 1
@.str.72 = private unnamed_addr constant [19 x i8] c"MASK_OT_layer_move\00", align 1
@.str.73 = private unnamed_addr constant [10 x i8] c"direction\00", align 1
@.str.74 = private unnamed_addr constant [10 x i8] c"Direction\00", align 1
@.str.75 = private unnamed_addr constant [35 x i8] c"Direction to move the active layer\00", align 1
@.str.76 = private unnamed_addr constant [15 x i8] c"Duplicate Mask\00", align 1
@.str.77 = private unnamed_addr constant [60 x i8] c"Duplicate selected control points and segments between them\00", align 1
@.str.78 = private unnamed_addr constant [18 x i8] c"MASK_OT_duplicate\00", align 1
@.str.79 = private unnamed_addr constant [13 x i8] c"Copy Splines\00", align 1
@.str.80 = private unnamed_addr constant [35 x i8] c"Copy selected splines to clipboard\00", align 1
@.str.81 = private unnamed_addr constant [21 x i8] c"MASK_OT_copy_splines\00", align 1
@.str.82 = private unnamed_addr constant [14 x i8] c"Paste Splines\00", align 1
@.str.83 = private unnamed_addr constant [29 x i8] c"Paste splines from clipboard\00", align 1
@.str.84 = private unnamed_addr constant [22 x i8] c"MASK_OT_paste_splines\00", align 1
@MEM_callocN = external dso_local global i8* (i64, i8*)*, align 8
@.str.85 = private unnamed_addr constant [22 x i8] c"mask slide point data\00", align 1
@U = external dso_local global %struct.UserDef, align 8
@.str.86 = private unnamed_addr constant [22 x i8] c"slide curvature slide\00", align 1
@.str.87 = private unnamed_addr constant [17 x i8] c"deleteMaskPoints\00", align 1
@.str.88 = private unnamed_addr constant [19 x i8] c"new mask uw points\00", align 1
@MEM_mallocN = external dso_local global i8* (i64, i8*)*, align 8
@.str.89 = private unnamed_addr constant [23 x i8] c"duplicated mask points\00", align 1
@MEM_dupallocN = external dso_local global i8* (i8*)*, align 8

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.MaskSplinePoint* @ED_mask_point_find_nearest(%struct.bContext* %C, %struct.Mask* %mask, float* %normal_co, float %threshold, %struct.MaskLayer** %masklay_r, %struct.MaskSpline** %spline_r, i32* %which_handle_r, float* %score) #0 !dbg !2269 {
entry:
  %retval = alloca %struct.MaskSplinePoint*, align 8
  %C.addr = alloca %struct.bContext*, align 8
  %mask.addr = alloca %struct.Mask*, align 8
  %normal_co.addr = alloca float*, align 8
  %threshold.addr = alloca float, align 4
  %masklay_r.addr = alloca %struct.MaskLayer**, align 8
  %spline_r.addr = alloca %struct.MaskSpline**, align 8
  %which_handle_r.addr = alloca i32*, align 8
  %score.addr = alloca float*, align 8
  %sa = alloca %struct.ScrArea*, align 8
  %ar = alloca %struct.ARegion*, align 8
  %masklay = alloca %struct.MaskLayer*, align 8
  %point_masklay = alloca %struct.MaskLayer*, align 8
  %point_spline = alloca %struct.MaskSpline*, align 8
  %point = alloca %struct.MaskSplinePoint*, align 8
  %co = alloca [2 x float], align 4
  %threshold_sq = alloca float, align 4
  %len_sq = alloca float, align 4
  %scalex = alloca float, align 4
  %scaley = alloca float, align 4
  %which_handle = alloca i32, align 4
  %width = alloca i32, align 4
  %height = alloca i32, align 4
  %spline = alloca %struct.MaskSpline*, align 8
  %points_array = alloca %struct.MaskSplinePoint*, align 8
  %i = alloca i32, align 4
  %cur_point = alloca %struct.MaskSplinePoint*, align 8
  %cur_point_deform = alloca %struct.MaskSplinePoint*, align 8
  %cur_which_handle = alloca i32, align 4
  %bezt = alloca %struct.BezTriple*, align 8
  %cur_len_sq = alloca float, align 4
  %vec = alloca [2 x float], align 4
  %handle = alloca [2 x float], align 4
  %handle_left = alloca [2 x float], align 4
  %handle_right = alloca [2 x float], align 4
  %len_left_sq = alloca float, align 4
  %len_right_sq = alloca float, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !2281, metadata !DIExpression()), !dbg !2282
  store %struct.Mask* %mask, %struct.Mask** %mask.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Mask** %mask.addr, metadata !2283, metadata !DIExpression()), !dbg !2284
  store float* %normal_co, float** %normal_co.addr, align 8
  call void @llvm.dbg.declare(metadata float** %normal_co.addr, metadata !2285, metadata !DIExpression()), !dbg !2286
  store float %threshold, float* %threshold.addr, align 4
  call void @llvm.dbg.declare(metadata float* %threshold.addr, metadata !2287, metadata !DIExpression()), !dbg !2288
  store %struct.MaskLayer** %masklay_r, %struct.MaskLayer*** %masklay_r.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MaskLayer*** %masklay_r.addr, metadata !2289, metadata !DIExpression()), !dbg !2290
  store %struct.MaskSpline** %spline_r, %struct.MaskSpline*** %spline_r.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MaskSpline*** %spline_r.addr, metadata !2291, metadata !DIExpression()), !dbg !2292
  store i32* %which_handle_r, i32** %which_handle_r.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %which_handle_r.addr, metadata !2293, metadata !DIExpression()), !dbg !2294
  store float* %score, float** %score.addr, align 8
  call void @llvm.dbg.declare(metadata float** %score.addr, metadata !2295, metadata !DIExpression()), !dbg !2296
  call void @llvm.dbg.declare(metadata %struct.ScrArea** %sa, metadata !2297, metadata !DIExpression()), !dbg !2346
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !2347
  %call = call %struct.ScrArea* @CTX_wm_area(%struct.bContext* %0), !dbg !2348
  store %struct.ScrArea* %call, %struct.ScrArea** %sa, align 8, !dbg !2346
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar, metadata !2349, metadata !DIExpression()), !dbg !2420
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !2421
  %call1 = call %struct.ARegion* @CTX_wm_region(%struct.bContext* %1), !dbg !2422
  store %struct.ARegion* %call1, %struct.ARegion** %ar, align 8, !dbg !2420
  call void @llvm.dbg.declare(metadata %struct.MaskLayer** %masklay, metadata !2423, metadata !DIExpression()), !dbg !2424
  call void @llvm.dbg.declare(metadata %struct.MaskLayer** %point_masklay, metadata !2425, metadata !DIExpression()), !dbg !2426
  store %struct.MaskLayer* null, %struct.MaskLayer** %point_masklay, align 8, !dbg !2426
  call void @llvm.dbg.declare(metadata %struct.MaskSpline** %point_spline, metadata !2427, metadata !DIExpression()), !dbg !2428
  store %struct.MaskSpline* null, %struct.MaskSpline** %point_spline, align 8, !dbg !2428
  call void @llvm.dbg.declare(metadata %struct.MaskSplinePoint** %point, metadata !2429, metadata !DIExpression()), !dbg !2430
  store %struct.MaskSplinePoint* null, %struct.MaskSplinePoint** %point, align 8, !dbg !2430
  call void @llvm.dbg.declare(metadata [2 x float]* %co, metadata !2431, metadata !DIExpression()), !dbg !2432
  call void @llvm.dbg.declare(metadata float* %threshold_sq, metadata !2433, metadata !DIExpression()), !dbg !2434
  %2 = load float, float* %threshold.addr, align 4, !dbg !2435
  %3 = load float, float* %threshold.addr, align 4, !dbg !2436
  %mul = fmul float %2, %3, !dbg !2437
  store float %mul, float* %threshold_sq, align 4, !dbg !2434
  call void @llvm.dbg.declare(metadata float* %len_sq, metadata !2438, metadata !DIExpression()), !dbg !2439
  store float 0x47EFFFFFE0000000, float* %len_sq, align 4, !dbg !2439
  call void @llvm.dbg.declare(metadata float* %scalex, metadata !2440, metadata !DIExpression()), !dbg !2441
  call void @llvm.dbg.declare(metadata float* %scaley, metadata !2442, metadata !DIExpression()), !dbg !2443
  call void @llvm.dbg.declare(metadata i32* %which_handle, metadata !2444, metadata !DIExpression()), !dbg !2445
  store i32 0, i32* %which_handle, align 4, !dbg !2445
  call void @llvm.dbg.declare(metadata i32* %width, metadata !2446, metadata !DIExpression()), !dbg !2447
  call void @llvm.dbg.declare(metadata i32* %height, metadata !2448, metadata !DIExpression()), !dbg !2449
  %4 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !2450
  call void @ED_mask_get_size(%struct.ScrArea* %4, i32* %width, i32* %height), !dbg !2451
  %5 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !2452
  %6 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !2453
  call void @ED_mask_pixelspace_factor(%struct.ScrArea* %5, %struct.ARegion* %6, float* %scalex, float* %scaley), !dbg !2454
  %7 = load float*, float** %normal_co.addr, align 8, !dbg !2455
  %arrayidx = getelementptr inbounds float, float* %7, i64 0, !dbg !2455
  %8 = load float, float* %arrayidx, align 4, !dbg !2455
  %9 = load float, float* %scalex, align 4, !dbg !2456
  %mul2 = fmul float %8, %9, !dbg !2457
  %arrayidx3 = getelementptr inbounds [2 x float], [2 x float]* %co, i64 0, i64 0, !dbg !2458
  store float %mul2, float* %arrayidx3, align 4, !dbg !2459
  %10 = load float*, float** %normal_co.addr, align 8, !dbg !2460
  %arrayidx4 = getelementptr inbounds float, float* %10, i64 1, !dbg !2460
  %11 = load float, float* %arrayidx4, align 4, !dbg !2460
  %12 = load float, float* %scaley, align 4, !dbg !2461
  %mul5 = fmul float %11, %12, !dbg !2462
  %arrayidx6 = getelementptr inbounds [2 x float], [2 x float]* %co, i64 0, i64 1, !dbg !2463
  store float %mul5, float* %arrayidx6, align 4, !dbg !2464
  %13 = load %struct.Mask*, %struct.Mask** %mask.addr, align 8, !dbg !2465
  %masklayers = getelementptr inbounds %struct.Mask, %struct.Mask* %13, i32 0, i32 2, !dbg !2467
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %masklayers, i32 0, i32 0, !dbg !2468
  %14 = load i8*, i8** %first, align 8, !dbg !2468
  %15 = bitcast i8* %14 to %struct.MaskLayer*, !dbg !2465
  store %struct.MaskLayer* %15, %struct.MaskLayer** %masklay, align 8, !dbg !2469
  br label %for.cond, !dbg !2470

for.cond:                                         ; preds = %for.inc98, %entry
  %16 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay, align 8, !dbg !2471
  %tobool = icmp ne %struct.MaskLayer* %16, null, !dbg !2473
  br i1 %tobool, label %for.body, label %for.end100, !dbg !2473

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.MaskSpline** %spline, metadata !2474, metadata !DIExpression()), !dbg !2476
  %17 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay, align 8, !dbg !2477
  %restrictflag = getelementptr inbounds %struct.MaskLayer, %struct.MaskLayer* %17, i32 0, i32 13, !dbg !2479
  %18 = load i8, i8* %restrictflag, align 1, !dbg !2479
  %conv = zext i8 %18 to i32, !dbg !2477
  %and = and i32 %conv, 3, !dbg !2480
  %tobool7 = icmp ne i32 %and, 0, !dbg !2480
  br i1 %tobool7, label %if.then, label %if.end, !dbg !2481

if.then:                                          ; preds = %for.body
  br label %for.inc98, !dbg !2482

if.end:                                           ; preds = %for.body
  %19 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay, align 8, !dbg !2484
  %splines = getelementptr inbounds %struct.MaskLayer, %struct.MaskLayer* %19, i32 0, i32 3, !dbg !2486
  %first8 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %splines, i32 0, i32 0, !dbg !2487
  %20 = load i8*, i8** %first8, align 8, !dbg !2487
  %21 = bitcast i8* %20 to %struct.MaskSpline*, !dbg !2484
  store %struct.MaskSpline* %21, %struct.MaskSpline** %spline, align 8, !dbg !2488
  br label %for.cond9, !dbg !2489

for.cond9:                                        ; preds = %for.inc96, %if.end
  %22 = load %struct.MaskSpline*, %struct.MaskSpline** %spline, align 8, !dbg !2490
  %tobool10 = icmp ne %struct.MaskSpline* %22, null, !dbg !2492
  br i1 %tobool10, label %for.body11, label %for.end97, !dbg !2492

for.body11:                                       ; preds = %for.cond9
  call void @llvm.dbg.declare(metadata %struct.MaskSplinePoint** %points_array, metadata !2493, metadata !DIExpression()), !dbg !2495
  %23 = load %struct.MaskSpline*, %struct.MaskSpline** %spline, align 8, !dbg !2496
  %call12 = call %struct.MaskSplinePoint* @BKE_mask_spline_point_array(%struct.MaskSpline* %23), !dbg !2497
  store %struct.MaskSplinePoint* %call12, %struct.MaskSplinePoint** %points_array, align 8, !dbg !2495
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2498, metadata !DIExpression()), !dbg !2499
  store i32 0, i32* %i, align 4, !dbg !2500
  br label %for.cond13, !dbg !2502

for.cond13:                                       ; preds = %for.inc, %for.body11
  %24 = load i32, i32* %i, align 4, !dbg !2503
  %25 = load %struct.MaskSpline*, %struct.MaskSpline** %spline, align 8, !dbg !2505
  %tot_point = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %25, i32 0, i32 5, !dbg !2506
  %26 = load i32, i32* %tot_point, align 4, !dbg !2506
  %cmp = icmp slt i32 %24, %26, !dbg !2507
  br i1 %cmp, label %for.body15, label %for.end, !dbg !2508

for.body15:                                       ; preds = %for.cond13
  call void @llvm.dbg.declare(metadata %struct.MaskSplinePoint** %cur_point, metadata !2509, metadata !DIExpression()), !dbg !2511
  %27 = load %struct.MaskSpline*, %struct.MaskSpline** %spline, align 8, !dbg !2512
  %points = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %27, i32 0, i32 6, !dbg !2513
  %28 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %points, align 8, !dbg !2513
  %29 = load i32, i32* %i, align 4, !dbg !2514
  %idxprom = sext i32 %29 to i64, !dbg !2512
  %arrayidx16 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %28, i64 %idxprom, !dbg !2512
  store %struct.MaskSplinePoint* %arrayidx16, %struct.MaskSplinePoint** %cur_point, align 8, !dbg !2511
  call void @llvm.dbg.declare(metadata %struct.MaskSplinePoint** %cur_point_deform, metadata !2515, metadata !DIExpression()), !dbg !2516
  %30 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %points_array, align 8, !dbg !2517
  %31 = load i32, i32* %i, align 4, !dbg !2518
  %idxprom17 = sext i32 %31 to i64, !dbg !2517
  %arrayidx18 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %30, i64 %idxprom17, !dbg !2517
  store %struct.MaskSplinePoint* %arrayidx18, %struct.MaskSplinePoint** %cur_point_deform, align 8, !dbg !2516
  call void @llvm.dbg.declare(metadata i32* %cur_which_handle, metadata !2519, metadata !DIExpression()), !dbg !2520
  store i32 0, i32* %cur_which_handle, align 4, !dbg !2520
  call void @llvm.dbg.declare(metadata %struct.BezTriple** %bezt, metadata !2521, metadata !DIExpression()), !dbg !2522
  %32 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %cur_point_deform, align 8, !dbg !2523
  %bezt19 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %32, i32 0, i32 0, !dbg !2524
  store %struct.BezTriple* %bezt19, %struct.BezTriple** %bezt, align 8, !dbg !2522
  call void @llvm.dbg.declare(metadata float* %cur_len_sq, metadata !2525, metadata !DIExpression()), !dbg !2526
  call void @llvm.dbg.declare(metadata [2 x float]* %vec, metadata !2527, metadata !DIExpression()), !dbg !2528
  %33 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !2529
  %vec20 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %33, i32 0, i32 0, !dbg !2530
  %arrayidx21 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec20, i64 0, i64 1, !dbg !2529
  %arrayidx22 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx21, i64 0, i64 0, !dbg !2529
  %34 = load float, float* %arrayidx22, align 4, !dbg !2529
  %35 = load float, float* %scalex, align 4, !dbg !2531
  %mul23 = fmul float %34, %35, !dbg !2532
  %arrayidx24 = getelementptr inbounds [2 x float], [2 x float]* %vec, i64 0, i64 0, !dbg !2533
  store float %mul23, float* %arrayidx24, align 4, !dbg !2534
  %36 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !2535
  %vec25 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %36, i32 0, i32 0, !dbg !2536
  %arrayidx26 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec25, i64 0, i64 1, !dbg !2535
  %arrayidx27 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx26, i64 0, i64 1, !dbg !2535
  %37 = load float, float* %arrayidx27, align 4, !dbg !2535
  %38 = load float, float* %scaley, align 4, !dbg !2537
  %mul28 = fmul float %37, %38, !dbg !2538
  %arrayidx29 = getelementptr inbounds [2 x float], [2 x float]* %vec, i64 0, i64 1, !dbg !2539
  store float %mul28, float* %arrayidx29, align 4, !dbg !2540
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %co, i64 0, i64 0, !dbg !2541
  %arraydecay30 = getelementptr inbounds [2 x float], [2 x float]* %vec, i64 0, i64 0, !dbg !2542
  %call31 = call float @len_squared_v2v2(float* %arraydecay, float* %arraydecay30), !dbg !2543
  store float %call31, float* %cur_len_sq, align 4, !dbg !2544
  %39 = load float, float* %cur_len_sq, align 4, !dbg !2545
  %40 = load float, float* %len_sq, align 4, !dbg !2547
  %cmp32 = fcmp olt float %39, %40, !dbg !2548
  br i1 %cmp32, label %if.then34, label %if.end35, !dbg !2549

if.then34:                                        ; preds = %for.body15
  %41 = load %struct.MaskSpline*, %struct.MaskSpline** %spline, align 8, !dbg !2550
  store %struct.MaskSpline* %41, %struct.MaskSpline** %point_spline, align 8, !dbg !2552
  %42 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay, align 8, !dbg !2553
  store %struct.MaskLayer* %42, %struct.MaskLayer** %point_masklay, align 8, !dbg !2554
  %43 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %cur_point, align 8, !dbg !2555
  store %struct.MaskSplinePoint* %43, %struct.MaskSplinePoint** %point, align 8, !dbg !2556
  %44 = load float, float* %cur_len_sq, align 4, !dbg !2557
  store float %44, float* %len_sq, align 4, !dbg !2558
  store i32 0, i32* %which_handle, align 4, !dbg !2559
  br label %if.end35, !dbg !2560

if.end35:                                         ; preds = %if.then34, %for.body15
  %45 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %cur_point_deform, align 8, !dbg !2561
  %call36 = call i32 @BKE_mask_point_handles_mode_get(%struct.MaskSplinePoint* %45), !dbg !2563
  %cmp37 = icmp eq i32 %call36, 1, !dbg !2564
  br i1 %cmp37, label %if.then39, label %if.else, !dbg !2565

if.then39:                                        ; preds = %if.end35
  call void @llvm.dbg.declare(metadata [2 x float]* %handle, metadata !2566, metadata !DIExpression()), !dbg !2568
  %46 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %cur_point_deform, align 8, !dbg !2569
  %47 = load float, float* %scalex, align 4, !dbg !2570
  %48 = load float, float* %scaley, align 4, !dbg !2571
  %arraydecay40 = getelementptr inbounds [2 x float], [2 x float]* %handle, i64 0, i64 0, !dbg !2572
  call void @mask_point_scaled_handle(%struct.MaskSplinePoint* %46, i32 1, float %47, float %48, float* %arraydecay40), !dbg !2573
  %arraydecay41 = getelementptr inbounds [2 x float], [2 x float]* %co, i64 0, i64 0, !dbg !2574
  %arraydecay42 = getelementptr inbounds [2 x float], [2 x float]* %handle, i64 0, i64 0, !dbg !2575
  %call43 = call float @len_squared_v2v2(float* %arraydecay41, float* %arraydecay42), !dbg !2576
  store float %call43, float* %cur_len_sq, align 4, !dbg !2577
  store i32 1, i32* %cur_which_handle, align 4, !dbg !2578
  br label %if.end89, !dbg !2579

if.else:                                          ; preds = %if.end35
  call void @llvm.dbg.declare(metadata [2 x float]* %handle_left, metadata !2580, metadata !DIExpression()), !dbg !2582
  call void @llvm.dbg.declare(metadata [2 x float]* %handle_right, metadata !2583, metadata !DIExpression()), !dbg !2584
  call void @llvm.dbg.declare(metadata float* %len_left_sq, metadata !2585, metadata !DIExpression()), !dbg !2586
  call void @llvm.dbg.declare(metadata float* %len_right_sq, metadata !2587, metadata !DIExpression()), !dbg !2588
  %49 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %cur_point_deform, align 8, !dbg !2589
  %50 = load float, float* %scalex, align 4, !dbg !2590
  %51 = load float, float* %scaley, align 4, !dbg !2591
  %arraydecay44 = getelementptr inbounds [2 x float], [2 x float]* %handle_left, i64 0, i64 0, !dbg !2592
  call void @mask_point_scaled_handle(%struct.MaskSplinePoint* %49, i32 2, float %50, float %51, float* %arraydecay44), !dbg !2593
  %52 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %cur_point_deform, align 8, !dbg !2594
  %53 = load float, float* %scalex, align 4, !dbg !2595
  %54 = load float, float* %scaley, align 4, !dbg !2596
  %arraydecay45 = getelementptr inbounds [2 x float], [2 x float]* %handle_right, i64 0, i64 0, !dbg !2597
  call void @mask_point_scaled_handle(%struct.MaskSplinePoint* %52, i32 3, float %53, float %54, float* %arraydecay45), !dbg !2598
  %arraydecay46 = getelementptr inbounds [2 x float], [2 x float]* %co, i64 0, i64 0, !dbg !2599
  %arraydecay47 = getelementptr inbounds [2 x float], [2 x float]* %handle_left, i64 0, i64 0, !dbg !2600
  %call48 = call float @len_squared_v2v2(float* %arraydecay46, float* %arraydecay47), !dbg !2601
  store float %call48, float* %len_left_sq, align 4, !dbg !2602
  %arraydecay49 = getelementptr inbounds [2 x float], [2 x float]* %co, i64 0, i64 0, !dbg !2603
  %arraydecay50 = getelementptr inbounds [2 x float], [2 x float]* %handle_right, i64 0, i64 0, !dbg !2604
  %call51 = call float @len_squared_v2v2(float* %arraydecay49, float* %arraydecay50), !dbg !2605
  store float %call51, float* %len_right_sq, align 4, !dbg !2606
  %55 = load i32, i32* %i, align 4, !dbg !2607
  %cmp52 = icmp eq i32 %55, 0, !dbg !2609
  br i1 %cmp52, label %if.then54, label %if.else70, !dbg !2610

if.then54:                                        ; preds = %if.else
  %56 = load float, float* %len_left_sq, align 4, !dbg !2611
  %57 = load float, float* %len_right_sq, align 4, !dbg !2614
  %cmp55 = fcmp ole float %56, %57, !dbg !2615
  br i1 %cmp55, label %if.then57, label %if.else63, !dbg !2616

if.then57:                                        ; preds = %if.then54
  %58 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !2617
  %h1 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %58, i32 0, i32 5, !dbg !2620
  %59 = load i8, i8* %h1, align 1, !dbg !2620
  %conv58 = zext i8 %59 to i32, !dbg !2617
  %cmp59 = icmp ne i32 %conv58, 2, !dbg !2621
  br i1 %cmp59, label %if.then61, label %if.end62, !dbg !2622

if.then61:                                        ; preds = %if.then57
  store i32 2, i32* %cur_which_handle, align 4, !dbg !2623
  %60 = load float, float* %len_left_sq, align 4, !dbg !2625
  store float %60, float* %cur_len_sq, align 4, !dbg !2626
  br label %if.end62, !dbg !2627

if.end62:                                         ; preds = %if.then61, %if.then57
  br label %if.end69, !dbg !2628

if.else63:                                        ; preds = %if.then54
  %61 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !2629
  %h2 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %61, i32 0, i32 6, !dbg !2631
  %62 = load i8, i8* %h2, align 2, !dbg !2631
  %conv64 = zext i8 %62 to i32, !dbg !2629
  %cmp65 = icmp ne i32 %conv64, 2, !dbg !2632
  br i1 %cmp65, label %if.then67, label %if.end68, !dbg !2633

if.then67:                                        ; preds = %if.else63
  store i32 3, i32* %cur_which_handle, align 4, !dbg !2634
  %63 = load float, float* %len_right_sq, align 4, !dbg !2636
  store float %63, float* %cur_len_sq, align 4, !dbg !2637
  br label %if.end68, !dbg !2638

if.end68:                                         ; preds = %if.then67, %if.else63
  br label %if.end69

if.end69:                                         ; preds = %if.end68, %if.end62
  br label %if.end88, !dbg !2639

if.else70:                                        ; preds = %if.else
  %64 = load float, float* %len_right_sq, align 4, !dbg !2640
  %65 = load float, float* %len_left_sq, align 4, !dbg !2643
  %cmp71 = fcmp ole float %64, %65, !dbg !2644
  br i1 %cmp71, label %if.then73, label %if.else80, !dbg !2645

if.then73:                                        ; preds = %if.else70
  %66 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !2646
  %h274 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %66, i32 0, i32 6, !dbg !2649
  %67 = load i8, i8* %h274, align 2, !dbg !2649
  %conv75 = zext i8 %67 to i32, !dbg !2646
  %cmp76 = icmp ne i32 %conv75, 2, !dbg !2650
  br i1 %cmp76, label %if.then78, label %if.end79, !dbg !2651

if.then78:                                        ; preds = %if.then73
  store i32 3, i32* %cur_which_handle, align 4, !dbg !2652
  %68 = load float, float* %len_right_sq, align 4, !dbg !2654
  store float %68, float* %cur_len_sq, align 4, !dbg !2655
  br label %if.end79, !dbg !2656

if.end79:                                         ; preds = %if.then78, %if.then73
  br label %if.end87, !dbg !2657

if.else80:                                        ; preds = %if.else70
  %69 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !2658
  %h181 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %69, i32 0, i32 5, !dbg !2660
  %70 = load i8, i8* %h181, align 1, !dbg !2660
  %conv82 = zext i8 %70 to i32, !dbg !2658
  %cmp83 = icmp ne i32 %conv82, 2, !dbg !2661
  br i1 %cmp83, label %if.then85, label %if.end86, !dbg !2662

if.then85:                                        ; preds = %if.else80
  store i32 2, i32* %cur_which_handle, align 4, !dbg !2663
  %71 = load float, float* %len_left_sq, align 4, !dbg !2665
  store float %71, float* %cur_len_sq, align 4, !dbg !2666
  br label %if.end86, !dbg !2667

if.end86:                                         ; preds = %if.then85, %if.else80
  br label %if.end87

if.end87:                                         ; preds = %if.end86, %if.end79
  br label %if.end88

if.end88:                                         ; preds = %if.end87, %if.end69
  br label %if.end89

if.end89:                                         ; preds = %if.end88, %if.then39
  %72 = load float, float* %cur_len_sq, align 4, !dbg !2668
  %73 = load float, float* %len_sq, align 4, !dbg !2670
  %cmp90 = fcmp ole float %72, %73, !dbg !2671
  br i1 %cmp90, label %land.lhs.true, label %if.end95, !dbg !2672

land.lhs.true:                                    ; preds = %if.end89
  %74 = load i32, i32* %cur_which_handle, align 4, !dbg !2673
  %cmp92 = icmp ne i32 %74, 0, !dbg !2674
  br i1 %cmp92, label %if.then94, label %if.end95, !dbg !2675

if.then94:                                        ; preds = %land.lhs.true
  %75 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay, align 8, !dbg !2676
  store %struct.MaskLayer* %75, %struct.MaskLayer** %point_masklay, align 8, !dbg !2678
  %76 = load %struct.MaskSpline*, %struct.MaskSpline** %spline, align 8, !dbg !2679
  store %struct.MaskSpline* %76, %struct.MaskSpline** %point_spline, align 8, !dbg !2680
  %77 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %cur_point, align 8, !dbg !2681
  store %struct.MaskSplinePoint* %77, %struct.MaskSplinePoint** %point, align 8, !dbg !2682
  %78 = load float, float* %cur_len_sq, align 4, !dbg !2683
  store float %78, float* %len_sq, align 4, !dbg !2684
  %79 = load i32, i32* %cur_which_handle, align 4, !dbg !2685
  store i32 %79, i32* %which_handle, align 4, !dbg !2686
  br label %if.end95, !dbg !2687

if.end95:                                         ; preds = %if.then94, %land.lhs.true, %if.end89
  br label %for.inc, !dbg !2688

for.inc:                                          ; preds = %if.end95
  %80 = load i32, i32* %i, align 4, !dbg !2689
  %inc = add nsw i32 %80, 1, !dbg !2689
  store i32 %inc, i32* %i, align 4, !dbg !2689
  br label %for.cond13, !dbg !2690, !llvm.loop !2691

for.end:                                          ; preds = %for.cond13
  br label %for.inc96, !dbg !2693

for.inc96:                                        ; preds = %for.end
  %81 = load %struct.MaskSpline*, %struct.MaskSpline** %spline, align 8, !dbg !2694
  %next = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %81, i32 0, i32 0, !dbg !2695
  %82 = load %struct.MaskSpline*, %struct.MaskSpline** %next, align 8, !dbg !2695
  store %struct.MaskSpline* %82, %struct.MaskSpline** %spline, align 8, !dbg !2696
  br label %for.cond9, !dbg !2697, !llvm.loop !2698

for.end97:                                        ; preds = %for.cond9
  br label %for.inc98, !dbg !2700

for.inc98:                                        ; preds = %for.end97, %if.then
  %83 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay, align 8, !dbg !2701
  %next99 = getelementptr inbounds %struct.MaskLayer, %struct.MaskLayer* %83, i32 0, i32 0, !dbg !2702
  %84 = load %struct.MaskLayer*, %struct.MaskLayer** %next99, align 8, !dbg !2702
  store %struct.MaskLayer* %84, %struct.MaskLayer** %masklay, align 8, !dbg !2703
  br label %for.cond, !dbg !2704, !llvm.loop !2705

for.end100:                                       ; preds = %for.cond
  %85 = load float, float* %len_sq, align 4, !dbg !2707
  %86 = load float, float* %threshold_sq, align 4, !dbg !2709
  %cmp101 = fcmp olt float %85, %86, !dbg !2710
  br i1 %cmp101, label %if.then103, label %if.end117, !dbg !2711

if.then103:                                       ; preds = %for.end100
  %87 = load %struct.MaskLayer**, %struct.MaskLayer*** %masklay_r.addr, align 8, !dbg !2712
  %tobool104 = icmp ne %struct.MaskLayer** %87, null, !dbg !2712
  br i1 %tobool104, label %if.then105, label %if.end106, !dbg !2715

if.then105:                                       ; preds = %if.then103
  %88 = load %struct.MaskLayer*, %struct.MaskLayer** %point_masklay, align 8, !dbg !2716
  %89 = load %struct.MaskLayer**, %struct.MaskLayer*** %masklay_r.addr, align 8, !dbg !2717
  store %struct.MaskLayer* %88, %struct.MaskLayer** %89, align 8, !dbg !2718
  br label %if.end106, !dbg !2719

if.end106:                                        ; preds = %if.then105, %if.then103
  %90 = load %struct.MaskSpline**, %struct.MaskSpline*** %spline_r.addr, align 8, !dbg !2720
  %tobool107 = icmp ne %struct.MaskSpline** %90, null, !dbg !2720
  br i1 %tobool107, label %if.then108, label %if.end109, !dbg !2722

if.then108:                                       ; preds = %if.end106
  %91 = load %struct.MaskSpline*, %struct.MaskSpline** %point_spline, align 8, !dbg !2723
  %92 = load %struct.MaskSpline**, %struct.MaskSpline*** %spline_r.addr, align 8, !dbg !2724
  store %struct.MaskSpline* %91, %struct.MaskSpline** %92, align 8, !dbg !2725
  br label %if.end109, !dbg !2726

if.end109:                                        ; preds = %if.then108, %if.end106
  %93 = load i32*, i32** %which_handle_r.addr, align 8, !dbg !2727
  %tobool110 = icmp ne i32* %93, null, !dbg !2727
  br i1 %tobool110, label %if.then111, label %if.end112, !dbg !2729

if.then111:                                       ; preds = %if.end109
  %94 = load i32, i32* %which_handle, align 4, !dbg !2730
  %95 = load i32*, i32** %which_handle_r.addr, align 8, !dbg !2731
  store i32 %94, i32* %95, align 4, !dbg !2732
  br label %if.end112, !dbg !2733

if.end112:                                        ; preds = %if.then111, %if.end109
  %96 = load float*, float** %score.addr, align 8, !dbg !2734
  %tobool113 = icmp ne float* %96, null, !dbg !2734
  br i1 %tobool113, label %if.then114, label %if.end116, !dbg !2736

if.then114:                                       ; preds = %if.end112
  %97 = load float, float* %len_sq, align 4, !dbg !2737
  %call115 = call float @sqrtf(float %97) #5, !dbg !2738
  %98 = load float*, float** %score.addr, align 8, !dbg !2739
  store float %call115, float* %98, align 4, !dbg !2740
  br label %if.end116, !dbg !2741

if.end116:                                        ; preds = %if.then114, %if.end112
  %99 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point, align 8, !dbg !2742
  store %struct.MaskSplinePoint* %99, %struct.MaskSplinePoint** %retval, align 8, !dbg !2743
  br label %return, !dbg !2743

if.end117:                                        ; preds = %for.end100
  %100 = load %struct.MaskLayer**, %struct.MaskLayer*** %masklay_r.addr, align 8, !dbg !2744
  %tobool118 = icmp ne %struct.MaskLayer** %100, null, !dbg !2744
  br i1 %tobool118, label %if.then119, label %if.end120, !dbg !2746

if.then119:                                       ; preds = %if.end117
  %101 = load %struct.MaskLayer**, %struct.MaskLayer*** %masklay_r.addr, align 8, !dbg !2747
  store %struct.MaskLayer* null, %struct.MaskLayer** %101, align 8, !dbg !2748
  br label %if.end120, !dbg !2749

if.end120:                                        ; preds = %if.then119, %if.end117
  %102 = load %struct.MaskSpline**, %struct.MaskSpline*** %spline_r.addr, align 8, !dbg !2750
  %tobool121 = icmp ne %struct.MaskSpline** %102, null, !dbg !2750
  br i1 %tobool121, label %if.then122, label %if.end123, !dbg !2752

if.then122:                                       ; preds = %if.end120
  %103 = load %struct.MaskSpline**, %struct.MaskSpline*** %spline_r.addr, align 8, !dbg !2753
  store %struct.MaskSpline* null, %struct.MaskSpline** %103, align 8, !dbg !2754
  br label %if.end123, !dbg !2755

if.end123:                                        ; preds = %if.then122, %if.end120
  %104 = load i32*, i32** %which_handle_r.addr, align 8, !dbg !2756
  %tobool124 = icmp ne i32* %104, null, !dbg !2756
  br i1 %tobool124, label %if.then125, label %if.end126, !dbg !2758

if.then125:                                       ; preds = %if.end123
  %105 = load i32*, i32** %which_handle_r.addr, align 8, !dbg !2759
  store i32 0, i32* %105, align 4, !dbg !2760
  br label %if.end126, !dbg !2761

if.end126:                                        ; preds = %if.then125, %if.end123
  store %struct.MaskSplinePoint* null, %struct.MaskSplinePoint** %retval, align 8, !dbg !2762
  br label %return, !dbg !2762

return:                                           ; preds = %if.end126, %if.end116
  %106 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %retval, align 8, !dbg !2763
  ret %struct.MaskSplinePoint* %106, !dbg !2763
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

declare dso_local %struct.ScrArea* @CTX_wm_area(%struct.bContext*) #2

declare dso_local %struct.ARegion* @CTX_wm_region(%struct.bContext*) #2

declare dso_local void @ED_mask_get_size(%struct.ScrArea*, i32*, i32*) #2

declare dso_local void @ED_mask_pixelspace_factor(%struct.ScrArea*, %struct.ARegion*, float*, float*) #2

declare dso_local %struct.MaskSplinePoint* @BKE_mask_spline_point_array(%struct.MaskSpline*) #2

; Function Attrs: noinline nounwind uwtable
define internal float @len_squared_v2v2(float* %a, float* %b) #0 !dbg !2764 {
entry:
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  %d = alloca [2 x float], align 4
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !2768, metadata !DIExpression()), !dbg !2769
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !2770, metadata !DIExpression()), !dbg !2771
  call void @llvm.dbg.declare(metadata [2 x float]* %d, metadata !2772, metadata !DIExpression()), !dbg !2773
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %d, i64 0, i64 0, !dbg !2774
  %0 = load float*, float** %b.addr, align 8, !dbg !2775
  %1 = load float*, float** %a.addr, align 8, !dbg !2776
  call void @sub_v2_v2v2(float* %arraydecay, float* %0, float* %1), !dbg !2777
  %arraydecay1 = getelementptr inbounds [2 x float], [2 x float]* %d, i64 0, i64 0, !dbg !2778
  %arraydecay2 = getelementptr inbounds [2 x float], [2 x float]* %d, i64 0, i64 0, !dbg !2779
  %call = call float @dot_v2v2(float* %arraydecay1, float* %arraydecay2), !dbg !2780
  ret float %call, !dbg !2781
}

declare dso_local i32 @BKE_mask_point_handles_mode_get(%struct.MaskSplinePoint*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @mask_point_scaled_handle(%struct.MaskSplinePoint* %point, i32 %which_handle, float %scalex, float %scaley, float* %handle) #0 !dbg !2782 {
entry:
  %point.addr = alloca %struct.MaskSplinePoint*, align 8
  %which_handle.addr = alloca i32, align 4
  %scalex.addr = alloca float, align 4
  %scaley.addr = alloca float, align 4
  %handle.addr = alloca float*, align 8
  store %struct.MaskSplinePoint* %point, %struct.MaskSplinePoint** %point.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MaskSplinePoint** %point.addr, metadata !2785, metadata !DIExpression()), !dbg !2786
  store i32 %which_handle, i32* %which_handle.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %which_handle.addr, metadata !2787, metadata !DIExpression()), !dbg !2788
  store float %scalex, float* %scalex.addr, align 4
  call void @llvm.dbg.declare(metadata float* %scalex.addr, metadata !2789, metadata !DIExpression()), !dbg !2790
  store float %scaley, float* %scaley.addr, align 4
  call void @llvm.dbg.declare(metadata float* %scaley.addr, metadata !2791, metadata !DIExpression()), !dbg !2792
  store float* %handle, float** %handle.addr, align 8
  call void @llvm.dbg.declare(metadata float** %handle.addr, metadata !2793, metadata !DIExpression()), !dbg !2794
  %0 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point.addr, align 8, !dbg !2795
  %1 = load i32, i32* %which_handle.addr, align 4, !dbg !2796
  %2 = load float*, float** %handle.addr, align 8, !dbg !2797
  call void @BKE_mask_point_handle(%struct.MaskSplinePoint* %0, i32 %1, float* %2), !dbg !2798
  %3 = load float, float* %scalex.addr, align 4, !dbg !2799
  %4 = load float*, float** %handle.addr, align 8, !dbg !2800
  %arrayidx = getelementptr inbounds float, float* %4, i64 0, !dbg !2800
  %5 = load float, float* %arrayidx, align 4, !dbg !2801
  %mul = fmul float %5, %3, !dbg !2801
  store float %mul, float* %arrayidx, align 4, !dbg !2801
  %6 = load float, float* %scaley.addr, align 4, !dbg !2802
  %7 = load float*, float** %handle.addr, align 8, !dbg !2803
  %arrayidx1 = getelementptr inbounds float, float* %7, i64 1, !dbg !2803
  %8 = load float, float* %arrayidx1, align 4, !dbg !2804
  %mul2 = fmul float %8, %6, !dbg !2804
  store float %mul2, float* %arrayidx1, align 4, !dbg !2804
  ret void, !dbg !2805
}

; Function Attrs: nounwind
declare dso_local float @sqrtf(float) #3

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @ED_mask_feather_find_nearest(%struct.bContext* %C, %struct.Mask* %mask, float* %normal_co, float %threshold, %struct.MaskLayer** %masklay_r, %struct.MaskSpline** %spline_r, %struct.MaskSplinePoint** %point_r, %struct.MaskSplinePointUW** %uw_r, float* %score) #0 !dbg !2806 {
entry:
  %retval = alloca i8, align 1
  %C.addr = alloca %struct.bContext*, align 8
  %mask.addr = alloca %struct.Mask*, align 8
  %normal_co.addr = alloca float*, align 8
  %threshold.addr = alloca float, align 4
  %masklay_r.addr = alloca %struct.MaskLayer**, align 8
  %spline_r.addr = alloca %struct.MaskSpline**, align 8
  %point_r.addr = alloca %struct.MaskSplinePoint**, align 8
  %uw_r.addr = alloca %struct.MaskSplinePointUW**, align 8
  %score.addr = alloca float*, align 8
  %sa = alloca %struct.ScrArea*, align 8
  %ar = alloca %struct.ARegion*, align 8
  %masklay = alloca %struct.MaskLayer*, align 8
  %point_masklay = alloca %struct.MaskLayer*, align 8
  %point_spline = alloca %struct.MaskSpline*, align 8
  %point = alloca %struct.MaskSplinePoint*, align 8
  %uw = alloca %struct.MaskSplinePointUW*, align 8
  %threshold_sq = alloca float, align 4
  %len = alloca float, align 4
  %co = alloca [2 x float], align 4
  %scalex = alloca float, align 4
  %scaley = alloca float, align 4
  %width = alloca i32, align 4
  %height = alloca i32, align 4
  %spline = alloca %struct.MaskSpline*, align 8
  %i = alloca i32, align 4
  %tot_feather_point = alloca i32, align 4
  %feather_points = alloca [2 x float]*, align 8
  %fp = alloca [2 x float]*, align 8
  %j = alloca i32, align 4
  %cur_point = alloca %struct.MaskSplinePoint*, align 8
  %cur_len_sq = alloca float, align 4
  %vec = alloca [2 x float], align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !2811, metadata !DIExpression()), !dbg !2812
  store %struct.Mask* %mask, %struct.Mask** %mask.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Mask** %mask.addr, metadata !2813, metadata !DIExpression()), !dbg !2814
  store float* %normal_co, float** %normal_co.addr, align 8
  call void @llvm.dbg.declare(metadata float** %normal_co.addr, metadata !2815, metadata !DIExpression()), !dbg !2816
  store float %threshold, float* %threshold.addr, align 4
  call void @llvm.dbg.declare(metadata float* %threshold.addr, metadata !2817, metadata !DIExpression()), !dbg !2818
  store %struct.MaskLayer** %masklay_r, %struct.MaskLayer*** %masklay_r.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MaskLayer*** %masklay_r.addr, metadata !2819, metadata !DIExpression()), !dbg !2820
  store %struct.MaskSpline** %spline_r, %struct.MaskSpline*** %spline_r.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MaskSpline*** %spline_r.addr, metadata !2821, metadata !DIExpression()), !dbg !2822
  store %struct.MaskSplinePoint** %point_r, %struct.MaskSplinePoint*** %point_r.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MaskSplinePoint*** %point_r.addr, metadata !2823, metadata !DIExpression()), !dbg !2824
  store %struct.MaskSplinePointUW** %uw_r, %struct.MaskSplinePointUW*** %uw_r.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MaskSplinePointUW*** %uw_r.addr, metadata !2825, metadata !DIExpression()), !dbg !2826
  store float* %score, float** %score.addr, align 8
  call void @llvm.dbg.declare(metadata float** %score.addr, metadata !2827, metadata !DIExpression()), !dbg !2828
  call void @llvm.dbg.declare(metadata %struct.ScrArea** %sa, metadata !2829, metadata !DIExpression()), !dbg !2830
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !2831
  %call = call %struct.ScrArea* @CTX_wm_area(%struct.bContext* %0), !dbg !2832
  store %struct.ScrArea* %call, %struct.ScrArea** %sa, align 8, !dbg !2830
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar, metadata !2833, metadata !DIExpression()), !dbg !2834
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !2835
  %call1 = call %struct.ARegion* @CTX_wm_region(%struct.bContext* %1), !dbg !2836
  store %struct.ARegion* %call1, %struct.ARegion** %ar, align 8, !dbg !2834
  call void @llvm.dbg.declare(metadata %struct.MaskLayer** %masklay, metadata !2837, metadata !DIExpression()), !dbg !2838
  call void @llvm.dbg.declare(metadata %struct.MaskLayer** %point_masklay, metadata !2839, metadata !DIExpression()), !dbg !2840
  store %struct.MaskLayer* null, %struct.MaskLayer** %point_masklay, align 8, !dbg !2840
  call void @llvm.dbg.declare(metadata %struct.MaskSpline** %point_spline, metadata !2841, metadata !DIExpression()), !dbg !2842
  store %struct.MaskSpline* null, %struct.MaskSpline** %point_spline, align 8, !dbg !2842
  call void @llvm.dbg.declare(metadata %struct.MaskSplinePoint** %point, metadata !2843, metadata !DIExpression()), !dbg !2844
  store %struct.MaskSplinePoint* null, %struct.MaskSplinePoint** %point, align 8, !dbg !2844
  call void @llvm.dbg.declare(metadata %struct.MaskSplinePointUW** %uw, metadata !2845, metadata !DIExpression()), !dbg !2846
  store %struct.MaskSplinePointUW* null, %struct.MaskSplinePointUW** %uw, align 8, !dbg !2846
  call void @llvm.dbg.declare(metadata float* %threshold_sq, metadata !2847, metadata !DIExpression()), !dbg !2848
  %2 = load float, float* %threshold.addr, align 4, !dbg !2849
  %3 = load float, float* %threshold.addr, align 4, !dbg !2850
  %mul = fmul float %2, %3, !dbg !2851
  store float %mul, float* %threshold_sq, align 4, !dbg !2848
  call void @llvm.dbg.declare(metadata float* %len, metadata !2852, metadata !DIExpression()), !dbg !2853
  store float 0x47EFFFFFE0000000, float* %len, align 4, !dbg !2853
  call void @llvm.dbg.declare(metadata [2 x float]* %co, metadata !2854, metadata !DIExpression()), !dbg !2855
  call void @llvm.dbg.declare(metadata float* %scalex, metadata !2856, metadata !DIExpression()), !dbg !2857
  call void @llvm.dbg.declare(metadata float* %scaley, metadata !2858, metadata !DIExpression()), !dbg !2859
  call void @llvm.dbg.declare(metadata i32* %width, metadata !2860, metadata !DIExpression()), !dbg !2861
  call void @llvm.dbg.declare(metadata i32* %height, metadata !2862, metadata !DIExpression()), !dbg !2863
  %4 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !2864
  call void @ED_mask_get_size(%struct.ScrArea* %4, i32* %width, i32* %height), !dbg !2865
  %5 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !2866
  %6 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !2867
  call void @ED_mask_pixelspace_factor(%struct.ScrArea* %5, %struct.ARegion* %6, float* %scalex, float* %scaley), !dbg !2868
  %7 = load float*, float** %normal_co.addr, align 8, !dbg !2869
  %arrayidx = getelementptr inbounds float, float* %7, i64 0, !dbg !2869
  %8 = load float, float* %arrayidx, align 4, !dbg !2869
  %9 = load float, float* %scalex, align 4, !dbg !2870
  %mul2 = fmul float %8, %9, !dbg !2871
  %arrayidx3 = getelementptr inbounds [2 x float], [2 x float]* %co, i64 0, i64 0, !dbg !2872
  store float %mul2, float* %arrayidx3, align 4, !dbg !2873
  %10 = load float*, float** %normal_co.addr, align 8, !dbg !2874
  %arrayidx4 = getelementptr inbounds float, float* %10, i64 1, !dbg !2874
  %11 = load float, float* %arrayidx4, align 4, !dbg !2874
  %12 = load float, float* %scaley, align 4, !dbg !2875
  %mul5 = fmul float %11, %12, !dbg !2876
  %arrayidx6 = getelementptr inbounds [2 x float], [2 x float]* %co, i64 0, i64 1, !dbg !2877
  store float %mul5, float* %arrayidx6, align 4, !dbg !2878
  %13 = load %struct.Mask*, %struct.Mask** %mask.addr, align 8, !dbg !2879
  %masklayers = getelementptr inbounds %struct.Mask, %struct.Mask* %13, i32 0, i32 2, !dbg !2881
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %masklayers, i32 0, i32 0, !dbg !2882
  %14 = load i8*, i8** %first, align 8, !dbg !2882
  %15 = bitcast i8* %14 to %struct.MaskLayer*, !dbg !2879
  store %struct.MaskLayer* %15, %struct.MaskLayer** %masklay, align 8, !dbg !2883
  br label %for.cond, !dbg !2884

for.cond:                                         ; preds = %for.inc47, %entry
  %16 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay, align 8, !dbg !2885
  %tobool = icmp ne %struct.MaskLayer* %16, null, !dbg !2887
  br i1 %tobool, label %for.body, label %for.end49, !dbg !2887

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.MaskSpline** %spline, metadata !2888, metadata !DIExpression()), !dbg !2890
  %17 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay, align 8, !dbg !2891
  %splines = getelementptr inbounds %struct.MaskLayer, %struct.MaskLayer* %17, i32 0, i32 3, !dbg !2893
  %first7 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %splines, i32 0, i32 0, !dbg !2894
  %18 = load i8*, i8** %first7, align 8, !dbg !2894
  %19 = bitcast i8* %18 to %struct.MaskSpline*, !dbg !2891
  store %struct.MaskSpline* %19, %struct.MaskSpline** %spline, align 8, !dbg !2895
  br label %for.cond8, !dbg !2896

for.cond8:                                        ; preds = %for.inc45, %for.body
  %20 = load %struct.MaskSpline*, %struct.MaskSpline** %spline, align 8, !dbg !2897
  %tobool9 = icmp ne %struct.MaskSpline* %20, null, !dbg !2899
  br i1 %tobool9, label %for.body10, label %for.end46, !dbg !2899

for.body10:                                       ; preds = %for.cond8
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2900, metadata !DIExpression()), !dbg !2902
  call void @llvm.dbg.declare(metadata i32* %tot_feather_point, metadata !2903, metadata !DIExpression()), !dbg !2904
  call void @llvm.dbg.declare(metadata [2 x float]** %feather_points, metadata !2905, metadata !DIExpression()), !dbg !2907
  call void @llvm.dbg.declare(metadata [2 x float]** %fp, metadata !2908, metadata !DIExpression()), !dbg !2909
  %21 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay, align 8, !dbg !2910
  %restrictflag = getelementptr inbounds %struct.MaskLayer, %struct.MaskLayer* %21, i32 0, i32 13, !dbg !2912
  %22 = load i8, i8* %restrictflag, align 1, !dbg !2912
  %conv = zext i8 %22 to i32, !dbg !2910
  %and = and i32 %conv, 3, !dbg !2913
  %tobool11 = icmp ne i32 %and, 0, !dbg !2913
  br i1 %tobool11, label %if.then, label %if.end, !dbg !2914

if.then:                                          ; preds = %for.body10
  br label %for.inc45, !dbg !2915

if.end:                                           ; preds = %for.body10
  %23 = load %struct.MaskSpline*, %struct.MaskSpline** %spline, align 8, !dbg !2917
  %call12 = call [2 x float]* @BKE_mask_spline_feather_points(%struct.MaskSpline* %23, i32* %tot_feather_point), !dbg !2918
  store [2 x float]* %call12, [2 x float]** %fp, align 8, !dbg !2919
  store [2 x float]* %call12, [2 x float]** %feather_points, align 8, !dbg !2920
  store i32 0, i32* %i, align 4, !dbg !2921
  br label %for.cond13, !dbg !2923

for.cond13:                                       ; preds = %for.inc42, %if.end
  %24 = load i32, i32* %i, align 4, !dbg !2924
  %25 = load %struct.MaskSpline*, %struct.MaskSpline** %spline, align 8, !dbg !2926
  %tot_point = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %25, i32 0, i32 5, !dbg !2927
  %26 = load i32, i32* %tot_point, align 4, !dbg !2927
  %cmp = icmp slt i32 %24, %26, !dbg !2928
  br i1 %cmp, label %for.body15, label %for.end44, !dbg !2929

for.body15:                                       ; preds = %for.cond13
  call void @llvm.dbg.declare(metadata i32* %j, metadata !2930, metadata !DIExpression()), !dbg !2932
  call void @llvm.dbg.declare(metadata %struct.MaskSplinePoint** %cur_point, metadata !2933, metadata !DIExpression()), !dbg !2934
  %27 = load %struct.MaskSpline*, %struct.MaskSpline** %spline, align 8, !dbg !2935
  %points = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %27, i32 0, i32 6, !dbg !2936
  %28 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %points, align 8, !dbg !2936
  %29 = load i32, i32* %i, align 4, !dbg !2937
  %idxprom = sext i32 %29 to i64, !dbg !2935
  %arrayidx16 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %28, i64 %idxprom, !dbg !2935
  store %struct.MaskSplinePoint* %arrayidx16, %struct.MaskSplinePoint** %cur_point, align 8, !dbg !2934
  store i32 0, i32* %j, align 4, !dbg !2938
  br label %for.cond17, !dbg !2940

for.cond17:                                       ; preds = %for.inc, %for.body15
  %30 = load i32, i32* %j, align 4, !dbg !2941
  %31 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %cur_point, align 8, !dbg !2943
  %tot_uw = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %31, i32 0, i32 2, !dbg !2944
  %32 = load i32, i32* %tot_uw, align 4, !dbg !2944
  %cmp18 = icmp sle i32 %30, %32, !dbg !2945
  br i1 %cmp18, label %for.body20, label %for.end, !dbg !2946

for.body20:                                       ; preds = %for.cond17
  call void @llvm.dbg.declare(metadata float* %cur_len_sq, metadata !2947, metadata !DIExpression()), !dbg !2949
  call void @llvm.dbg.declare(metadata [2 x float]* %vec, metadata !2950, metadata !DIExpression()), !dbg !2951
  %33 = load [2 x float]*, [2 x float]** %fp, align 8, !dbg !2952
  %arrayidx21 = getelementptr inbounds [2 x float], [2 x float]* %33, i64 0, i64 0, !dbg !2953
  %34 = load float, float* %arrayidx21, align 4, !dbg !2953
  %35 = load float, float* %scalex, align 4, !dbg !2954
  %mul22 = fmul float %34, %35, !dbg !2955
  %arrayidx23 = getelementptr inbounds [2 x float], [2 x float]* %vec, i64 0, i64 0, !dbg !2956
  store float %mul22, float* %arrayidx23, align 4, !dbg !2957
  %36 = load [2 x float]*, [2 x float]** %fp, align 8, !dbg !2958
  %arrayidx24 = getelementptr inbounds [2 x float], [2 x float]* %36, i64 0, i64 1, !dbg !2959
  %37 = load float, float* %arrayidx24, align 4, !dbg !2959
  %38 = load float, float* %scaley, align 4, !dbg !2960
  %mul25 = fmul float %37, %38, !dbg !2961
  %arrayidx26 = getelementptr inbounds [2 x float], [2 x float]* %vec, i64 0, i64 1, !dbg !2962
  store float %mul25, float* %arrayidx26, align 4, !dbg !2963
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %vec, i64 0, i64 0, !dbg !2964
  %arraydecay27 = getelementptr inbounds [2 x float], [2 x float]* %co, i64 0, i64 0, !dbg !2965
  %call28 = call float @len_squared_v2v2(float* %arraydecay, float* %arraydecay27), !dbg !2966
  store float %call28, float* %cur_len_sq, align 4, !dbg !2967
  %39 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point, align 8, !dbg !2968
  %cmp29 = icmp eq %struct.MaskSplinePoint* %39, null, !dbg !2970
  br i1 %cmp29, label %if.then33, label %lor.lhs.false, !dbg !2971

lor.lhs.false:                                    ; preds = %for.body20
  %40 = load float, float* %cur_len_sq, align 4, !dbg !2972
  %41 = load float, float* %len, align 4, !dbg !2973
  %cmp31 = fcmp olt float %40, %41, !dbg !2974
  br i1 %cmp31, label %if.then33, label %if.end41, !dbg !2975

if.then33:                                        ; preds = %lor.lhs.false, %for.body20
  %42 = load i32, i32* %j, align 4, !dbg !2976
  %cmp34 = icmp eq i32 %42, 0, !dbg !2979
  br i1 %cmp34, label %if.then36, label %if.else, !dbg !2980

if.then36:                                        ; preds = %if.then33
  store %struct.MaskSplinePointUW* null, %struct.MaskSplinePointUW** %uw, align 8, !dbg !2981
  br label %if.end40, !dbg !2982

if.else:                                          ; preds = %if.then33
  %43 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %cur_point, align 8, !dbg !2983
  %uw37 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %43, i32 0, i32 3, !dbg !2984
  %44 = load %struct.MaskSplinePointUW*, %struct.MaskSplinePointUW** %uw37, align 8, !dbg !2984
  %45 = load i32, i32* %j, align 4, !dbg !2985
  %sub = sub nsw i32 %45, 1, !dbg !2986
  %idxprom38 = sext i32 %sub to i64, !dbg !2983
  %arrayidx39 = getelementptr inbounds %struct.MaskSplinePointUW, %struct.MaskSplinePointUW* %44, i64 %idxprom38, !dbg !2983
  store %struct.MaskSplinePointUW* %arrayidx39, %struct.MaskSplinePointUW** %uw, align 8, !dbg !2987
  br label %if.end40

if.end40:                                         ; preds = %if.else, %if.then36
  %46 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay, align 8, !dbg !2988
  store %struct.MaskLayer* %46, %struct.MaskLayer** %point_masklay, align 8, !dbg !2989
  %47 = load %struct.MaskSpline*, %struct.MaskSpline** %spline, align 8, !dbg !2990
  store %struct.MaskSpline* %47, %struct.MaskSpline** %point_spline, align 8, !dbg !2991
  %48 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %cur_point, align 8, !dbg !2992
  store %struct.MaskSplinePoint* %48, %struct.MaskSplinePoint** %point, align 8, !dbg !2993
  %49 = load float, float* %cur_len_sq, align 4, !dbg !2994
  store float %49, float* %len, align 4, !dbg !2995
  br label %if.end41, !dbg !2996

if.end41:                                         ; preds = %if.end40, %lor.lhs.false
  %50 = load [2 x float]*, [2 x float]** %fp, align 8, !dbg !2997
  %incdec.ptr = getelementptr inbounds [2 x float], [2 x float]* %50, i32 1, !dbg !2997
  store [2 x float]* %incdec.ptr, [2 x float]** %fp, align 8, !dbg !2997
  br label %for.inc, !dbg !2998

for.inc:                                          ; preds = %if.end41
  %51 = load i32, i32* %j, align 4, !dbg !2999
  %inc = add nsw i32 %51, 1, !dbg !2999
  store i32 %inc, i32* %j, align 4, !dbg !2999
  br label %for.cond17, !dbg !3000, !llvm.loop !3001

for.end:                                          ; preds = %for.cond17
  br label %for.inc42, !dbg !3003

for.inc42:                                        ; preds = %for.end
  %52 = load i32, i32* %i, align 4, !dbg !3004
  %inc43 = add nsw i32 %52, 1, !dbg !3004
  store i32 %inc43, i32* %i, align 4, !dbg !3004
  br label %for.cond13, !dbg !3005, !llvm.loop !3006

for.end44:                                        ; preds = %for.cond13
  %53 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !3008
  %54 = load [2 x float]*, [2 x float]** %feather_points, align 8, !dbg !3009
  %55 = bitcast [2 x float]* %54 to i8*, !dbg !3009
  call void %53(i8* %55), !dbg !3008
  br label %for.inc45, !dbg !3010

for.inc45:                                        ; preds = %for.end44, %if.then
  %56 = load %struct.MaskSpline*, %struct.MaskSpline** %spline, align 8, !dbg !3011
  %next = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %56, i32 0, i32 0, !dbg !3012
  %57 = load %struct.MaskSpline*, %struct.MaskSpline** %next, align 8, !dbg !3012
  store %struct.MaskSpline* %57, %struct.MaskSpline** %spline, align 8, !dbg !3013
  br label %for.cond8, !dbg !3014, !llvm.loop !3015

for.end46:                                        ; preds = %for.cond8
  br label %for.inc47, !dbg !3017

for.inc47:                                        ; preds = %for.end46
  %58 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay, align 8, !dbg !3018
  %next48 = getelementptr inbounds %struct.MaskLayer, %struct.MaskLayer* %58, i32 0, i32 0, !dbg !3019
  %59 = load %struct.MaskLayer*, %struct.MaskLayer** %next48, align 8, !dbg !3019
  store %struct.MaskLayer* %59, %struct.MaskLayer** %masklay, align 8, !dbg !3020
  br label %for.cond, !dbg !3021, !llvm.loop !3022

for.end49:                                        ; preds = %for.cond
  %60 = load float, float* %len, align 4, !dbg !3024
  %61 = load float, float* %threshold_sq, align 4, !dbg !3026
  %cmp50 = fcmp olt float %60, %61, !dbg !3027
  br i1 %cmp50, label %if.then52, label %if.end69, !dbg !3028

if.then52:                                        ; preds = %for.end49
  %62 = load %struct.MaskLayer**, %struct.MaskLayer*** %masklay_r.addr, align 8, !dbg !3029
  %tobool53 = icmp ne %struct.MaskLayer** %62, null, !dbg !3029
  br i1 %tobool53, label %if.then54, label %if.end55, !dbg !3032

if.then54:                                        ; preds = %if.then52
  %63 = load %struct.MaskLayer*, %struct.MaskLayer** %point_masklay, align 8, !dbg !3033
  %64 = load %struct.MaskLayer**, %struct.MaskLayer*** %masklay_r.addr, align 8, !dbg !3034
  store %struct.MaskLayer* %63, %struct.MaskLayer** %64, align 8, !dbg !3035
  br label %if.end55, !dbg !3036

if.end55:                                         ; preds = %if.then54, %if.then52
  %65 = load %struct.MaskSpline**, %struct.MaskSpline*** %spline_r.addr, align 8, !dbg !3037
  %tobool56 = icmp ne %struct.MaskSpline** %65, null, !dbg !3037
  br i1 %tobool56, label %if.then57, label %if.end58, !dbg !3039

if.then57:                                        ; preds = %if.end55
  %66 = load %struct.MaskSpline*, %struct.MaskSpline** %point_spline, align 8, !dbg !3040
  %67 = load %struct.MaskSpline**, %struct.MaskSpline*** %spline_r.addr, align 8, !dbg !3041
  store %struct.MaskSpline* %66, %struct.MaskSpline** %67, align 8, !dbg !3042
  br label %if.end58, !dbg !3043

if.end58:                                         ; preds = %if.then57, %if.end55
  %68 = load %struct.MaskSplinePoint**, %struct.MaskSplinePoint*** %point_r.addr, align 8, !dbg !3044
  %tobool59 = icmp ne %struct.MaskSplinePoint** %68, null, !dbg !3044
  br i1 %tobool59, label %if.then60, label %if.end61, !dbg !3046

if.then60:                                        ; preds = %if.end58
  %69 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point, align 8, !dbg !3047
  %70 = load %struct.MaskSplinePoint**, %struct.MaskSplinePoint*** %point_r.addr, align 8, !dbg !3048
  store %struct.MaskSplinePoint* %69, %struct.MaskSplinePoint** %70, align 8, !dbg !3049
  br label %if.end61, !dbg !3050

if.end61:                                         ; preds = %if.then60, %if.end58
  %71 = load %struct.MaskSplinePointUW**, %struct.MaskSplinePointUW*** %uw_r.addr, align 8, !dbg !3051
  %tobool62 = icmp ne %struct.MaskSplinePointUW** %71, null, !dbg !3051
  br i1 %tobool62, label %if.then63, label %if.end64, !dbg !3053

if.then63:                                        ; preds = %if.end61
  %72 = load %struct.MaskSplinePointUW*, %struct.MaskSplinePointUW** %uw, align 8, !dbg !3054
  %73 = load %struct.MaskSplinePointUW**, %struct.MaskSplinePointUW*** %uw_r.addr, align 8, !dbg !3055
  store %struct.MaskSplinePointUW* %72, %struct.MaskSplinePointUW** %73, align 8, !dbg !3056
  br label %if.end64, !dbg !3057

if.end64:                                         ; preds = %if.then63, %if.end61
  %74 = load float*, float** %score.addr, align 8, !dbg !3058
  %tobool65 = icmp ne float* %74, null, !dbg !3058
  br i1 %tobool65, label %if.then66, label %if.end68, !dbg !3060

if.then66:                                        ; preds = %if.end64
  %75 = load float, float* %len, align 4, !dbg !3061
  %call67 = call float @sqrtf(float %75) #5, !dbg !3062
  %76 = load float*, float** %score.addr, align 8, !dbg !3063
  store float %call67, float* %76, align 4, !dbg !3064
  br label %if.end68, !dbg !3065

if.end68:                                         ; preds = %if.then66, %if.end64
  store i8 1, i8* %retval, align 1, !dbg !3066
  br label %return, !dbg !3066

if.end69:                                         ; preds = %for.end49
  %77 = load %struct.MaskLayer**, %struct.MaskLayer*** %masklay_r.addr, align 8, !dbg !3067
  %tobool70 = icmp ne %struct.MaskLayer** %77, null, !dbg !3067
  br i1 %tobool70, label %if.then71, label %if.end72, !dbg !3069

if.then71:                                        ; preds = %if.end69
  %78 = load %struct.MaskLayer**, %struct.MaskLayer*** %masklay_r.addr, align 8, !dbg !3070
  store %struct.MaskLayer* null, %struct.MaskLayer** %78, align 8, !dbg !3071
  br label %if.end72, !dbg !3072

if.end72:                                         ; preds = %if.then71, %if.end69
  %79 = load %struct.MaskSpline**, %struct.MaskSpline*** %spline_r.addr, align 8, !dbg !3073
  %tobool73 = icmp ne %struct.MaskSpline** %79, null, !dbg !3073
  br i1 %tobool73, label %if.then74, label %if.end75, !dbg !3075

if.then74:                                        ; preds = %if.end72
  %80 = load %struct.MaskSpline**, %struct.MaskSpline*** %spline_r.addr, align 8, !dbg !3076
  store %struct.MaskSpline* null, %struct.MaskSpline** %80, align 8, !dbg !3077
  br label %if.end75, !dbg !3078

if.end75:                                         ; preds = %if.then74, %if.end72
  %81 = load %struct.MaskSplinePoint**, %struct.MaskSplinePoint*** %point_r.addr, align 8, !dbg !3079
  %tobool76 = icmp ne %struct.MaskSplinePoint** %81, null, !dbg !3079
  br i1 %tobool76, label %if.then77, label %if.end78, !dbg !3081

if.then77:                                        ; preds = %if.end75
  %82 = load %struct.MaskSplinePoint**, %struct.MaskSplinePoint*** %point_r.addr, align 8, !dbg !3082
  store %struct.MaskSplinePoint* null, %struct.MaskSplinePoint** %82, align 8, !dbg !3083
  br label %if.end78, !dbg !3084

if.end78:                                         ; preds = %if.then77, %if.end75
  store i8 0, i8* %retval, align 1, !dbg !3085
  br label %return, !dbg !3085

return:                                           ; preds = %if.end78, %if.end68
  %83 = load i8, i8* %retval, align 1, !dbg !3086
  ret i8 %83, !dbg !3086
}

declare dso_local [2 x float]* @BKE_mask_spline_feather_points(%struct.MaskSpline*, i32*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.Mask* @ED_mask_new(%struct.bContext* %C, i8* %name) #0 !dbg !3087 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %name.addr = alloca i8*, align 8
  %sa = alloca %struct.ScrArea*, align 8
  %bmain = alloca %struct.Main*, align 8
  %mask = alloca %struct.Mask*, align 8
  %sc = alloca %struct.SpaceClip*, align 8
  %sima = alloca %struct.SpaceImage*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !3091, metadata !DIExpression()), !dbg !3092
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !3093, metadata !DIExpression()), !dbg !3094
  call void @llvm.dbg.declare(metadata %struct.ScrArea** %sa, metadata !3095, metadata !DIExpression()), !dbg !3096
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3097
  %call = call %struct.ScrArea* @CTX_wm_area(%struct.bContext* %0), !dbg !3098
  store %struct.ScrArea* %call, %struct.ScrArea** %sa, align 8, !dbg !3096
  call void @llvm.dbg.declare(metadata %struct.Main** %bmain, metadata !3099, metadata !DIExpression()), !dbg !3164
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3165
  %call1 = call %struct.Main* @CTX_data_main(%struct.bContext* %1), !dbg !3166
  store %struct.Main* %call1, %struct.Main** %bmain, align 8, !dbg !3164
  call void @llvm.dbg.declare(metadata %struct.Mask** %mask, metadata !3167, metadata !DIExpression()), !dbg !3168
  %2 = load %struct.Main*, %struct.Main** %bmain, align 8, !dbg !3169
  %3 = load i8*, i8** %name.addr, align 8, !dbg !3170
  %call2 = call %struct.Mask* @BKE_mask_new(%struct.Main* %2, i8* %3), !dbg !3171
  store %struct.Mask* %call2, %struct.Mask** %mask, align 8, !dbg !3172
  %4 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !3173
  %tobool = icmp ne %struct.ScrArea* %4, null, !dbg !3173
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !3175

land.lhs.true:                                    ; preds = %entry
  %5 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !3176
  %spacedata = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %5, i32 0, i32 19, !dbg !3177
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %spacedata, i32 0, i32 0, !dbg !3178
  %6 = load i8*, i8** %first, align 8, !dbg !3178
  %tobool3 = icmp ne i8* %6, null, !dbg !3176
  br i1 %tobool3, label %if.then, label %if.end, !dbg !3179

if.then:                                          ; preds = %land.lhs.true
  %7 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !3180
  %spacetype = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %7, i32 0, i32 8, !dbg !3182
  %8 = load i8, i8* %spacetype, align 8, !dbg !3182
  %conv = zext i8 %8 to i32, !dbg !3180
  switch i32 %conv, label %sw.epilog [
    i32 20, label %sw.bb
    i32 8, label %sw.bb6
    i32 6, label %sw.bb7
  ], !dbg !3183

sw.bb:                                            ; preds = %if.then
  call void @llvm.dbg.declare(metadata %struct.SpaceClip** %sc, metadata !3184, metadata !DIExpression()), !dbg !3266
  %9 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !3267
  %spacedata4 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %9, i32 0, i32 19, !dbg !3268
  %first5 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %spacedata4, i32 0, i32 0, !dbg !3269
  %10 = load i8*, i8** %first5, align 8, !dbg !3269
  %11 = bitcast i8* %10 to %struct.SpaceClip*, !dbg !3267
  store %struct.SpaceClip* %11, %struct.SpaceClip** %sc, align 8, !dbg !3266
  %12 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3270
  %13 = load %struct.SpaceClip*, %struct.SpaceClip** %sc, align 8, !dbg !3271
  %14 = load %struct.Mask*, %struct.Mask** %mask, align 8, !dbg !3272
  call void @ED_space_clip_set_mask(%struct.bContext* %12, %struct.SpaceClip* %13, %struct.Mask* %14), !dbg !3273
  br label %sw.epilog, !dbg !3274

sw.bb6:                                           ; preds = %if.then
  br label %sw.epilog, !dbg !3275

sw.bb7:                                           ; preds = %if.then
  call void @llvm.dbg.declare(metadata %struct.SpaceImage** %sima, metadata !3277, metadata !DIExpression()), !dbg !3350
  %15 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !3351
  %spacedata8 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %15, i32 0, i32 19, !dbg !3352
  %first9 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %spacedata8, i32 0, i32 0, !dbg !3353
  %16 = load i8*, i8** %first9, align 8, !dbg !3353
  %17 = bitcast i8* %16 to %struct.SpaceImage*, !dbg !3351
  store %struct.SpaceImage* %17, %struct.SpaceImage** %sima, align 8, !dbg !3350
  %18 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3354
  %19 = load %struct.SpaceImage*, %struct.SpaceImage** %sima, align 8, !dbg !3355
  %20 = load %struct.Mask*, %struct.Mask** %mask, align 8, !dbg !3356
  call void @ED_space_image_set_mask(%struct.bContext* %18, %struct.SpaceImage* %19, %struct.Mask* %20), !dbg !3357
  br label %sw.epilog, !dbg !3358

sw.epilog:                                        ; preds = %if.then, %sw.bb7, %sw.bb6, %sw.bb
  br label %if.end, !dbg !3359

if.end:                                           ; preds = %sw.epilog, %land.lhs.true, %entry
  %21 = load %struct.Mask*, %struct.Mask** %mask, align 8, !dbg !3360
  ret %struct.Mask* %21, !dbg !3361
}

declare dso_local %struct.Main* @CTX_data_main(%struct.bContext*) #2

declare dso_local %struct.Mask* @BKE_mask_new(%struct.Main*, i8*) #2

declare dso_local void @ED_space_clip_set_mask(%struct.bContext*, %struct.SpaceClip*, %struct.Mask*) #2

declare dso_local void @ED_space_image_set_mask(%struct.bContext*, %struct.SpaceImage*, %struct.Mask*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.MaskLayer* @ED_mask_layer_ensure(%struct.bContext* %C) #0 !dbg !3362 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %mask = alloca %struct.Mask*, align 8
  %mask_layer = alloca %struct.MaskLayer*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !3365, metadata !DIExpression()), !dbg !3366
  call void @llvm.dbg.declare(metadata %struct.Mask** %mask, metadata !3367, metadata !DIExpression()), !dbg !3368
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3369
  %call = call %struct.Mask* @CTX_data_edit_mask(%struct.bContext* %0), !dbg !3370
  store %struct.Mask* %call, %struct.Mask** %mask, align 8, !dbg !3368
  call void @llvm.dbg.declare(metadata %struct.MaskLayer** %mask_layer, metadata !3371, metadata !DIExpression()), !dbg !3372
  %1 = load %struct.Mask*, %struct.Mask** %mask, align 8, !dbg !3373
  %cmp = icmp eq %struct.Mask* %1, null, !dbg !3375
  br i1 %cmp, label %if.then, label %if.end, !dbg !3376

if.then:                                          ; preds = %entry
  %2 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3377
  %call1 = call %struct.Mask* @ED_mask_new(%struct.bContext* %2, i8* null), !dbg !3379
  store %struct.Mask* %call1, %struct.Mask** %mask, align 8, !dbg !3380
  br label %if.end, !dbg !3381

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct.Mask*, %struct.Mask** %mask, align 8, !dbg !3382
  %call2 = call %struct.MaskLayer* @BKE_mask_layer_active(%struct.Mask* %3), !dbg !3383
  store %struct.MaskLayer* %call2, %struct.MaskLayer** %mask_layer, align 8, !dbg !3384
  %4 = load %struct.MaskLayer*, %struct.MaskLayer** %mask_layer, align 8, !dbg !3385
  %cmp3 = icmp eq %struct.MaskLayer* %4, null, !dbg !3387
  br i1 %cmp3, label %if.then4, label %if.end6, !dbg !3388

if.then4:                                         ; preds = %if.end
  %5 = load %struct.Mask*, %struct.Mask** %mask, align 8, !dbg !3389
  %call5 = call %struct.MaskLayer* @BKE_mask_layer_new(%struct.Mask* %5, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0)), !dbg !3391
  store %struct.MaskLayer* %call5, %struct.MaskLayer** %mask_layer, align 8, !dbg !3392
  br label %if.end6, !dbg !3393

if.end6:                                          ; preds = %if.then4, %if.end
  %6 = load %struct.MaskLayer*, %struct.MaskLayer** %mask_layer, align 8, !dbg !3394
  ret %struct.MaskLayer* %6, !dbg !3395
}

declare dso_local %struct.Mask* @CTX_data_edit_mask(%struct.bContext*) #2

declare dso_local %struct.MaskLayer* @BKE_mask_layer_active(%struct.Mask*) #2

declare dso_local %struct.MaskLayer* @BKE_mask_layer_new(%struct.Mask*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @MASK_OT_new(%struct.wmOperatorType* %ot) #0 !dbg !3396 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !3397, metadata !DIExpression()), !dbg !3398
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3399
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !3400
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0), i8** %name, align 8, !dbg !3401
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3402
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 3, !dbg !3403
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2, i64 0, i64 0), i8** %description, align 8, !dbg !3404
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3405
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 1, !dbg !3406
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3, i64 0, i64 0), i8** %idname, align 8, !dbg !3407
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3408
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 19, !dbg !3409
  store i16 3, i16* %flag, align 8, !dbg !3410
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3411
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 4, !dbg !3412
  store i32 (%struct.bContext*, %struct.wmOperator*)* @mask_new_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !3413
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3414
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 9, !dbg !3415
  store i32 (%struct.bContext*)* @ED_operator_mask, i32 (%struct.bContext*)** %poll, align 8, !dbg !3416
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3417
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 11, !dbg !3418
  %7 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !3418
  %8 = bitcast %struct.StructRNA* %7 to i8*, !dbg !3417
  %call = call %struct.PropertyRNA* @RNA_def_string(i8* %8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* null, i32 64, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.6, i64 0, i64 0)), !dbg !3419
  ret void, !dbg !3420
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @mask_new_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !3421 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %name = alloca [64 x i8], align 16
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !3426, metadata !DIExpression()), !dbg !3427
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !3428, metadata !DIExpression()), !dbg !3429
  call void @llvm.dbg.declare(metadata [64 x i8]* %name, metadata !3430, metadata !DIExpression()), !dbg !3431
  %0 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !3432
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %0, i32 0, i32 7, !dbg !3433
  %1 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !3433
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %name, i64 0, i64 0, !dbg !3434
  call void @RNA_string_get(%struct.PointerRNA* %1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay), !dbg !3435
  %2 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3436
  %arraydecay1 = getelementptr inbounds [64 x i8], [64 x i8]* %name, i64 0, i64 0, !dbg !3437
  %call = call %struct.Mask* @ED_mask_new(%struct.bContext* %2, i8* %arraydecay1), !dbg !3438
  ret i32 4, !dbg !3439
}

declare dso_local i32 @ED_operator_mask(%struct.bContext*) #2

declare dso_local %struct.PropertyRNA* @RNA_def_string(i8*, i8*, i8*, i32, i8*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @MASK_OT_layer_new(%struct.wmOperatorType* %ot) #0 !dbg !3440 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !3441, metadata !DIExpression()), !dbg !3442
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3443
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !3444
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.7, i64 0, i64 0), i8** %name, align 8, !dbg !3445
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3446
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 3, !dbg !3447
  store i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.8, i64 0, i64 0), i8** %description, align 8, !dbg !3448
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3449
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 1, !dbg !3450
  store i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.9, i64 0, i64 0), i8** %idname, align 8, !dbg !3451
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3452
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !3453
  store i32 (%struct.bContext*, %struct.wmOperator*)* @masklay_new_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !3454
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3455
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !3456
  store i32 (%struct.bContext*)* @ED_maskedit_poll, i32 (%struct.bContext*)** %poll, align 8, !dbg !3457
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3458
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !3459
  store i16 3, i16* %flag, align 8, !dbg !3460
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3461
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 11, !dbg !3462
  %7 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !3462
  %8 = bitcast %struct.StructRNA* %7 to i8*, !dbg !3461
  %call = call %struct.PropertyRNA* @RNA_def_string(i8* %8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* null, i32 64, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.10, i64 0, i64 0)), !dbg !3463
  ret void, !dbg !3464
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @masklay_new_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !3465 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %mask = alloca %struct.Mask*, align 8
  %name = alloca [64 x i8], align 16
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !3466, metadata !DIExpression()), !dbg !3467
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !3468, metadata !DIExpression()), !dbg !3469
  call void @llvm.dbg.declare(metadata %struct.Mask** %mask, metadata !3470, metadata !DIExpression()), !dbg !3471
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3472
  %call = call %struct.Mask* @CTX_data_edit_mask(%struct.bContext* %0), !dbg !3473
  store %struct.Mask* %call, %struct.Mask** %mask, align 8, !dbg !3471
  call void @llvm.dbg.declare(metadata [64 x i8]* %name, metadata !3474, metadata !DIExpression()), !dbg !3475
  %1 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !3476
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %1, i32 0, i32 7, !dbg !3477
  %2 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !3477
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %name, i64 0, i64 0, !dbg !3478
  call void @RNA_string_get(%struct.PointerRNA* %2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay), !dbg !3479
  %3 = load %struct.Mask*, %struct.Mask** %mask, align 8, !dbg !3480
  %arraydecay1 = getelementptr inbounds [64 x i8], [64 x i8]* %name, i64 0, i64 0, !dbg !3481
  %call2 = call %struct.MaskLayer* @BKE_mask_layer_new(%struct.Mask* %3, i8* %arraydecay1), !dbg !3482
  %4 = load %struct.Mask*, %struct.Mask** %mask, align 8, !dbg !3483
  %masklay_tot = getelementptr inbounds %struct.Mask, %struct.Mask* %4, i32 0, i32 4, !dbg !3484
  %5 = load i32, i32* %masklay_tot, align 4, !dbg !3484
  %sub = sub nsw i32 %5, 1, !dbg !3485
  %6 = load %struct.Mask*, %struct.Mask** %mask, align 8, !dbg !3486
  %masklay_act = getelementptr inbounds %struct.Mask, %struct.Mask* %6, i32 0, i32 3, !dbg !3487
  store i32 %sub, i32* %masklay_act, align 8, !dbg !3488
  %7 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3489
  %8 = load %struct.Mask*, %struct.Mask** %mask, align 8, !dbg !3490
  %9 = bitcast %struct.Mask* %8 to i8*, !dbg !3490
  call void @WM_event_add_notifier(%struct.bContext* %7, i32 352321537, i8* %9), !dbg !3491
  ret i32 4, !dbg !3492
}

declare dso_local i32 @ED_maskedit_poll(%struct.bContext*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @MASK_OT_layer_remove(%struct.wmOperatorType* %ot) #0 !dbg !3493 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !3494, metadata !DIExpression()), !dbg !3495
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3496
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !3497
  store i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.11, i64 0, i64 0), i8** %name, align 8, !dbg !3498
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3499
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 3, !dbg !3500
  store i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.12, i64 0, i64 0), i8** %description, align 8, !dbg !3501
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3502
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 1, !dbg !3503
  store i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.13, i64 0, i64 0), i8** %idname, align 8, !dbg !3504
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3505
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !3506
  store i32 (%struct.bContext*, %struct.wmOperator*)* @masklay_remove_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !3507
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3508
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !3509
  store i32 (%struct.bContext*)* @ED_maskedit_poll, i32 (%struct.bContext*)** %poll, align 8, !dbg !3510
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3511
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !3512
  store i16 3, i16* %flag, align 8, !dbg !3513
  ret void, !dbg !3514
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @masklay_remove_exec(%struct.bContext* %C, %struct.wmOperator* %UNUSED_op) #0 !dbg !3515 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %UNUSED_op.addr = alloca %struct.wmOperator*, align 8
  %mask = alloca %struct.Mask*, align 8
  %masklay = alloca %struct.MaskLayer*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !3516, metadata !DIExpression()), !dbg !3517
  store %struct.wmOperator* %UNUSED_op, %struct.wmOperator** %UNUSED_op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %UNUSED_op.addr, metadata !3518, metadata !DIExpression()), !dbg !3519
  call void @llvm.dbg.declare(metadata %struct.Mask** %mask, metadata !3520, metadata !DIExpression()), !dbg !3521
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3522
  %call = call %struct.Mask* @CTX_data_edit_mask(%struct.bContext* %0), !dbg !3523
  store %struct.Mask* %call, %struct.Mask** %mask, align 8, !dbg !3521
  call void @llvm.dbg.declare(metadata %struct.MaskLayer** %masklay, metadata !3524, metadata !DIExpression()), !dbg !3525
  %1 = load %struct.Mask*, %struct.Mask** %mask, align 8, !dbg !3526
  %call1 = call %struct.MaskLayer* @BKE_mask_layer_active(%struct.Mask* %1), !dbg !3527
  store %struct.MaskLayer* %call1, %struct.MaskLayer** %masklay, align 8, !dbg !3525
  %2 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay, align 8, !dbg !3528
  %tobool = icmp ne %struct.MaskLayer* %2, null, !dbg !3528
  br i1 %tobool, label %if.then, label %if.end, !dbg !3530

if.then:                                          ; preds = %entry
  %3 = load %struct.Mask*, %struct.Mask** %mask, align 8, !dbg !3531
  %4 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay, align 8, !dbg !3533
  call void @BKE_mask_layer_remove(%struct.Mask* %3, %struct.MaskLayer* %4), !dbg !3534
  %5 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3535
  %6 = load %struct.Mask*, %struct.Mask** %mask, align 8, !dbg !3536
  %7 = bitcast %struct.Mask* %6 to i8*, !dbg !3536
  call void @WM_event_add_notifier(%struct.bContext* %5, i32 352321537, i8* %7), !dbg !3537
  br label %if.end, !dbg !3538

if.end:                                           ; preds = %if.then, %entry
  ret i32 4, !dbg !3539
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @MASK_OT_slide_point(%struct.wmOperatorType* %ot) #0 !dbg !3540 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  %prop = alloca %struct.PropertyRNA*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !3541, metadata !DIExpression()), !dbg !3542
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop, metadata !3543, metadata !DIExpression()), !dbg !3544
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3545
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !3546
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.14, i64 0, i64 0), i8** %name, align 8, !dbg !3547
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3548
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 3, !dbg !3549
  store i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.15, i64 0, i64 0), i8** %description, align 8, !dbg !3550
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3551
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 1, !dbg !3552
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.16, i64 0, i64 0), i8** %idname, align 8, !dbg !3553
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3554
  %invoke = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 6, !dbg !3555
  store i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)* @slide_point_invoke, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)** %invoke, align 8, !dbg !3556
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3557
  %modal = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 8, !dbg !3558
  store i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)* @slide_point_modal, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)** %modal, align 8, !dbg !3559
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3560
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 9, !dbg !3561
  store i32 (%struct.bContext*)* @ED_operator_mask, i32 (%struct.bContext*)** %poll, align 8, !dbg !3562
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3563
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 19, !dbg !3564
  store i16 3, i16* %flag, align 8, !dbg !3565
  %7 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3566
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %7, i32 0, i32 11, !dbg !3567
  %8 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !3567
  %9 = bitcast %struct.StructRNA* %8 to i8*, !dbg !3566
  %call = call %struct.PropertyRNA* @RNA_def_boolean(i8* %9, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.17, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.18, i64 0, i64 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.19, i64 0, i64 0)), !dbg !3568
  %10 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3569
  %srna1 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %10, i32 0, i32 11, !dbg !3570
  %11 = load %struct.StructRNA*, %struct.StructRNA** %srna1, align 8, !dbg !3570
  %12 = bitcast %struct.StructRNA* %11 to i8*, !dbg !3569
  %call2 = call %struct.PropertyRNA* @RNA_def_boolean(i8* %12, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.20, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.21, i64 0, i64 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.22, i64 0, i64 0)), !dbg !3571
  store %struct.PropertyRNA* %call2, %struct.PropertyRNA** %prop, align 8, !dbg !3572
  %13 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !3573
  call void @RNA_def_property_flag(%struct.PropertyRNA* %13, i32 268435456), !dbg !3574
  ret void, !dbg !3575
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @slide_point_invoke(%struct.bContext* %C, %struct.wmOperator* %op, %struct.wmEvent* %event) #0 !dbg !3576 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %event.addr = alloca %struct.wmEvent*, align 8
  %mask = alloca %struct.Mask*, align 8
  %slidedata = alloca %struct.SlidePointData*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !3582, metadata !DIExpression()), !dbg !3583
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !3584, metadata !DIExpression()), !dbg !3585
  store %struct.wmEvent* %event, %struct.wmEvent** %event.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %event.addr, metadata !3586, metadata !DIExpression()), !dbg !3587
  call void @llvm.dbg.declare(metadata %struct.Mask** %mask, metadata !3588, metadata !DIExpression()), !dbg !3589
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3590
  %call = call %struct.Mask* @CTX_data_edit_mask(%struct.bContext* %0), !dbg !3591
  store %struct.Mask* %call, %struct.Mask** %mask, align 8, !dbg !3589
  call void @llvm.dbg.declare(metadata %struct.SlidePointData** %slidedata, metadata !3592, metadata !DIExpression()), !dbg !3593
  %1 = load %struct.Mask*, %struct.Mask** %mask, align 8, !dbg !3594
  %cmp = icmp eq %struct.Mask* %1, null, !dbg !3596
  br i1 %cmp, label %if.then, label %if.end, !dbg !3597

if.then:                                          ; preds = %entry
  store i32 2, i32* %retval, align 4, !dbg !3598
  br label %return, !dbg !3598

if.end:                                           ; preds = %entry
  %2 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3600
  %3 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !3601
  %4 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !3602
  %call1 = call i8* @slide_point_customdata(%struct.bContext* %2, %struct.wmOperator* %3, %struct.wmEvent* %4), !dbg !3603
  %5 = bitcast i8* %call1 to %struct.SlidePointData*, !dbg !3603
  store %struct.SlidePointData* %5, %struct.SlidePointData** %slidedata, align 8, !dbg !3604
  %6 = load %struct.SlidePointData*, %struct.SlidePointData** %slidedata, align 8, !dbg !3605
  %tobool = icmp ne %struct.SlidePointData* %6, null, !dbg !3605
  br i1 %tobool, label %if.then2, label %if.end5, !dbg !3607

if.then2:                                         ; preds = %if.end
  %7 = load %struct.SlidePointData*, %struct.SlidePointData** %slidedata, align 8, !dbg !3608
  %8 = bitcast %struct.SlidePointData* %7 to i8*, !dbg !3608
  %9 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !3610
  %customdata = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %9, i32 0, i32 5, !dbg !3611
  store i8* %8, i8** %customdata, align 8, !dbg !3612
  %10 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3613
  %11 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !3614
  %call3 = call %struct.wmEventHandler* @WM_event_add_modal_handler(%struct.bContext* %10, %struct.wmOperator* %11), !dbg !3615
  %12 = load %struct.SlidePointData*, %struct.SlidePointData** %slidedata, align 8, !dbg !3616
  %spline = getelementptr inbounds %struct.SlidePointData, %struct.SlidePointData* %12, i32 0, i32 4, !dbg !3617
  %13 = load %struct.MaskSpline*, %struct.MaskSpline** %spline, align 8, !dbg !3617
  %14 = load %struct.SlidePointData*, %struct.SlidePointData** %slidedata, align 8, !dbg !3618
  %masklay = getelementptr inbounds %struct.SlidePointData, %struct.SlidePointData* %14, i32 0, i32 3, !dbg !3619
  %15 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay, align 8, !dbg !3619
  %act_spline = getelementptr inbounds %struct.MaskLayer, %struct.MaskLayer* %15, i32 0, i32 5, !dbg !3620
  store %struct.MaskSpline* %13, %struct.MaskSpline** %act_spline, align 8, !dbg !3621
  %16 = load %struct.SlidePointData*, %struct.SlidePointData** %slidedata, align 8, !dbg !3622
  %point = getelementptr inbounds %struct.SlidePointData, %struct.SlidePointData* %16, i32 0, i32 6, !dbg !3623
  %17 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point, align 8, !dbg !3623
  %18 = load %struct.SlidePointData*, %struct.SlidePointData** %slidedata, align 8, !dbg !3624
  %masklay4 = getelementptr inbounds %struct.SlidePointData, %struct.SlidePointData* %18, i32 0, i32 3, !dbg !3625
  %19 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay4, align 8, !dbg !3625
  %act_point = getelementptr inbounds %struct.MaskLayer, %struct.MaskLayer* %19, i32 0, i32 6, !dbg !3626
  store %struct.MaskSplinePoint* %17, %struct.MaskSplinePoint** %act_point, align 8, !dbg !3627
  %20 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3628
  %21 = load %struct.Mask*, %struct.Mask** %mask, align 8, !dbg !3629
  %22 = bitcast %struct.Mask* %21 to i8*, !dbg !3629
  call void @WM_event_add_notifier(%struct.bContext* %20, i32 358219776, i8* %22), !dbg !3630
  store i32 1, i32* %retval, align 4, !dbg !3631
  br label %return, !dbg !3631

if.end5:                                          ; preds = %if.end
  store i32 8, i32* %retval, align 4, !dbg !3632
  br label %return, !dbg !3632

return:                                           ; preds = %if.end5, %if.then2, %if.then
  %23 = load i32, i32* %retval, align 4, !dbg !3633
  ret i32 %23, !dbg !3633
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @slide_point_modal(%struct.bContext* %C, %struct.wmOperator* %op, %struct.wmEvent* %event) #0 !dbg !3634 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %event.addr = alloca %struct.wmEvent*, align 8
  %data = alloca %struct.SlidePointData*, align 8
  %bezt = alloca %struct.BezTriple*, align 8
  %co = alloca [2 x float], align 4
  %sa = alloca %struct.ScrArea*, align 8
  %ar = alloca %struct.ARegion*, align 8
  %delta = alloca [2 x float], align 4
  %new_handle = alloca [2 x float], align 4
  %sw_ap = alloca float, align 4
  %bezt112 = alloca %struct.BezTriple*, align 8
  %vec115 = alloca [2 x float], align 4
  %self_handle = alloca i16, align 2
  %other_handle = alloca i16, align 2
  %vec165 = alloca [2 x float], align 4
  %no = alloca [2 x float], align 4
  %p = alloca [2 x float], align 4
  %c = alloca [2 x float], align 4
  %w = alloca float, align 4
  %offco = alloca [2 x float], align 4
  %weight = alloca float*, align 8
  %weight_scalar = alloca float, align 4
  %is_overall_feather166 = alloca i8, align 1
  %u_pos = alloca float, align 4
  %u_neg = alloca float, align 4
  %dist_pos = alloca float, align 4
  %dist_neg = alloca float, align 4
  %co_pos = alloca [2 x float], align 4
  %co_neg = alloca [2 x float], align 4
  %u189 = alloca float, align 4
  %delta273 = alloca float, align 4
  %i = alloca i32, align 4
  %point339 = alloca %struct.MaskSplinePoint*, align 8
  %scene = alloca %struct.Scene*, align 8
  %bezt399 = alloca %struct.BezTriple*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !3635, metadata !DIExpression()), !dbg !3636
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !3637, metadata !DIExpression()), !dbg !3638
  store %struct.wmEvent* %event, %struct.wmEvent** %event.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %event.addr, metadata !3639, metadata !DIExpression()), !dbg !3640
  call void @llvm.dbg.declare(metadata %struct.SlidePointData** %data, metadata !3641, metadata !DIExpression()), !dbg !3642
  %0 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !3643
  %customdata = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %0, i32 0, i32 5, !dbg !3644
  %1 = load i8*, i8** %customdata, align 8, !dbg !3644
  %2 = bitcast i8* %1 to %struct.SlidePointData*, !dbg !3645
  store %struct.SlidePointData* %2, %struct.SlidePointData** %data, align 8, !dbg !3642
  call void @llvm.dbg.declare(metadata %struct.BezTriple** %bezt, metadata !3646, metadata !DIExpression()), !dbg !3647
  %3 = load %struct.SlidePointData*, %struct.SlidePointData** %data, align 8, !dbg !3648
  %point = getelementptr inbounds %struct.SlidePointData, %struct.SlidePointData* %3, i32 0, i32 6, !dbg !3649
  %4 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point, align 8, !dbg !3649
  %bezt1 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %4, i32 0, i32 0, !dbg !3650
  store %struct.BezTriple* %bezt1, %struct.BezTriple** %bezt, align 8, !dbg !3647
  call void @llvm.dbg.declare(metadata [2 x float]* %co, metadata !3651, metadata !DIExpression()), !dbg !3652
  %5 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !3653
  %type = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %5, i32 0, i32 2, !dbg !3654
  %6 = load i16, i16* %type, align 8, !dbg !3654
  %conv = sext i16 %6 to i32, !dbg !3653
  switch i32 %conv, label %sw.epilog [
    i32 213, label %sw.bb
    i32 214, label %sw.bb
    i32 217, label %sw.bb
    i32 216, label %sw.bb
    i32 4, label %sw.bb38
    i32 1, label %sw.bb364
    i32 3, label %sw.bb364
    i32 218, label %sw.bb445
  ], !dbg !3655

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry
  %7 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !3656
  %type2 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %7, i32 0, i32 2, !dbg !3656
  %8 = load i16, i16* %type2, align 8, !dbg !3656
  %conv3 = sext i16 %8 to i32, !dbg !3656
  %cmp = icmp eq i32 %conv3, 213, !dbg !3656
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !3656

lor.lhs.false:                                    ; preds = %sw.bb
  %9 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !3656
  %type5 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %9, i32 0, i32 2, !dbg !3656
  %10 = load i16, i16* %type5, align 8, !dbg !3656
  %conv6 = sext i16 %10 to i32, !dbg !3656
  %cmp7 = icmp eq i32 %conv6, 214, !dbg !3656
  br i1 %cmp7, label %if.then, label %if.end21, !dbg !3659

if.then:                                          ; preds = %lor.lhs.false, %sw.bb
  %11 = load %struct.SlidePointData*, %struct.SlidePointData** %data, align 8, !dbg !3660
  %action = getelementptr inbounds %struct.SlidePointData, %struct.SlidePointData* %11, i32 0, i32 1, !dbg !3663
  %12 = load i32, i32* %action, align 4, !dbg !3663
  %cmp9 = icmp eq i32 %12, 3, !dbg !3664
  br i1 %cmp9, label %if.then11, label %if.else, !dbg !3665

if.then11:                                        ; preds = %if.then
  %13 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !3666
  %val = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %13, i32 0, i32 3, !dbg !3668
  %14 = load i16, i16* %val, align 2, !dbg !3668
  %conv12 = sext i16 %14 to i32, !dbg !3666
  %cmp13 = icmp eq i32 %conv12, 1, !dbg !3669
  %conv14 = zext i1 %cmp13 to i32, !dbg !3669
  %conv15 = trunc i32 %conv14 to i8, !dbg !3670
  %15 = load %struct.SlidePointData*, %struct.SlidePointData** %data, align 8, !dbg !3671
  %is_overall_feather = getelementptr inbounds %struct.SlidePointData, %struct.SlidePointData* %15, i32 0, i32 16, !dbg !3672
  store i8 %conv15, i8* %is_overall_feather, align 1, !dbg !3673
  br label %if.end, !dbg !3674

if.else:                                          ; preds = %if.then
  %16 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !3675
  %val16 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %16, i32 0, i32 3, !dbg !3677
  %17 = load i16, i16* %val16, align 2, !dbg !3677
  %conv17 = sext i16 %17 to i32, !dbg !3675
  %cmp18 = icmp eq i32 %conv17, 1, !dbg !3678
  %conv19 = zext i1 %cmp18 to i32, !dbg !3678
  %conv20 = trunc i32 %conv19 to i8, !dbg !3679
  %18 = load %struct.SlidePointData*, %struct.SlidePointData** %data, align 8, !dbg !3680
  %is_curvature_only = getelementptr inbounds %struct.SlidePointData, %struct.SlidePointData* %18, i32 0, i32 13, !dbg !3681
  store i8 %conv20, i8* %is_curvature_only, align 4, !dbg !3682
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then11
  br label %if.end21, !dbg !3683

if.end21:                                         ; preds = %if.end, %lor.lhs.false
  %19 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !3684
  %type22 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %19, i32 0, i32 2, !dbg !3684
  %20 = load i16, i16* %type22, align 8, !dbg !3684
  %conv23 = sext i16 %20 to i32, !dbg !3684
  %cmp24 = icmp eq i32 %conv23, 217, !dbg !3684
  br i1 %cmp24, label %if.then31, label %lor.lhs.false26, !dbg !3684

lor.lhs.false26:                                  ; preds = %if.end21
  %21 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !3684
  %type27 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %21, i32 0, i32 2, !dbg !3684
  %22 = load i16, i16* %type27, align 8, !dbg !3684
  %conv28 = sext i16 %22 to i32, !dbg !3684
  %cmp29 = icmp eq i32 %conv28, 216, !dbg !3684
  br i1 %cmp29, label %if.then31, label %if.end37, !dbg !3686

if.then31:                                        ; preds = %lor.lhs.false26, %if.end21
  %23 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !3687
  %val32 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %23, i32 0, i32 3, !dbg !3688
  %24 = load i16, i16* %val32, align 2, !dbg !3688
  %conv33 = sext i16 %24 to i32, !dbg !3687
  %cmp34 = icmp eq i32 %conv33, 1, !dbg !3689
  %conv35 = zext i1 %cmp34 to i32, !dbg !3689
  %conv36 = trunc i32 %conv35 to i8, !dbg !3690
  %25 = load %struct.SlidePointData*, %struct.SlidePointData** %data, align 8, !dbg !3691
  %is_accurate = getelementptr inbounds %struct.SlidePointData, %struct.SlidePointData* %25, i32 0, i32 14, !dbg !3692
  store i8 %conv36, i8* %is_accurate, align 1, !dbg !3693
  br label %if.end37, !dbg !3691

if.end37:                                         ; preds = %if.then31, %lor.lhs.false26
  br label %sw.bb38, !dbg !3684

sw.bb38:                                          ; preds = %entry, %if.end37
  call void @llvm.dbg.declare(metadata %struct.ScrArea** %sa, metadata !3694, metadata !DIExpression()), !dbg !3696
  %26 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3697
  %call = call %struct.ScrArea* @CTX_wm_area(%struct.bContext* %26), !dbg !3698
  store %struct.ScrArea* %call, %struct.ScrArea** %sa, align 8, !dbg !3696
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar, metadata !3699, metadata !DIExpression()), !dbg !3700
  %27 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3701
  %call39 = call %struct.ARegion* @CTX_wm_region(%struct.bContext* %27), !dbg !3702
  store %struct.ARegion* %call39, %struct.ARegion** %ar, align 8, !dbg !3700
  call void @llvm.dbg.declare(metadata [2 x float]* %delta, metadata !3703, metadata !DIExpression()), !dbg !3704
  %28 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !3705
  %29 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !3706
  %30 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !3707
  %mval = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %30, i32 0, i32 6, !dbg !3708
  %arraydecay = getelementptr inbounds [2 x i32], [2 x i32]* %mval, i64 0, i64 0, !dbg !3707
  %arraydecay40 = getelementptr inbounds [2 x float], [2 x float]* %co, i64 0, i64 0, !dbg !3709
  call void @ED_mask_mouse_pos(%struct.ScrArea* %28, %struct.ARegion* %29, i32* %arraydecay, float* %arraydecay40), !dbg !3710
  %arraydecay41 = getelementptr inbounds [2 x float], [2 x float]* %delta, i64 0, i64 0, !dbg !3711
  %arraydecay42 = getelementptr inbounds [2 x float], [2 x float]* %co, i64 0, i64 0, !dbg !3712
  %31 = load %struct.SlidePointData*, %struct.SlidePointData** %data, align 8, !dbg !3713
  %prev_mouse_coord = getelementptr inbounds %struct.SlidePointData, %struct.SlidePointData* %31, i32 0, i32 11, !dbg !3714
  %arraydecay43 = getelementptr inbounds [2 x float], [2 x float]* %prev_mouse_coord, i64 0, i64 0, !dbg !3713
  call void @sub_v2_v2v2(float* %arraydecay41, float* %arraydecay42, float* %arraydecay43), !dbg !3715
  %32 = load %struct.SlidePointData*, %struct.SlidePointData** %data, align 8, !dbg !3716
  %is_accurate44 = getelementptr inbounds %struct.SlidePointData, %struct.SlidePointData* %32, i32 0, i32 14, !dbg !3718
  %33 = load i8, i8* %is_accurate44, align 1, !dbg !3718
  %tobool = icmp ne i8 %33, 0, !dbg !3716
  br i1 %tobool, label %if.then45, label %if.end47, !dbg !3719

if.then45:                                        ; preds = %sw.bb38
  %arraydecay46 = getelementptr inbounds [2 x float], [2 x float]* %delta, i64 0, i64 0, !dbg !3720
  call void @mul_v2_fl(float* %arraydecay46, float 0x3FC99999A0000000), !dbg !3722
  br label %if.end47, !dbg !3723

if.end47:                                         ; preds = %if.then45, %sw.bb38
  %34 = load %struct.SlidePointData*, %struct.SlidePointData** %data, align 8, !dbg !3724
  %prev_mouse_coord48 = getelementptr inbounds %struct.SlidePointData, %struct.SlidePointData* %34, i32 0, i32 11, !dbg !3725
  %arraydecay49 = getelementptr inbounds [2 x float], [2 x float]* %prev_mouse_coord48, i64 0, i64 0, !dbg !3724
  %arraydecay50 = getelementptr inbounds [2 x float], [2 x float]* %co, i64 0, i64 0, !dbg !3726
  call void @copy_v2_v2(float* %arraydecay49, float* %arraydecay50), !dbg !3727
  %35 = load %struct.SlidePointData*, %struct.SlidePointData** %data, align 8, !dbg !3728
  %action51 = getelementptr inbounds %struct.SlidePointData, %struct.SlidePointData* %35, i32 0, i32 1, !dbg !3730
  %36 = load i32, i32* %action51, align 4, !dbg !3730
  %cmp52 = icmp eq i32 %36, 2, !dbg !3731
  br i1 %cmp52, label %if.then54, label %if.else143, !dbg !3732

if.then54:                                        ; preds = %if.end47
  call void @llvm.dbg.declare(metadata [2 x float]* %new_handle, metadata !3733, metadata !DIExpression()), !dbg !3735
  %37 = load %struct.SlidePointData*, %struct.SlidePointData** %data, align 8, !dbg !3736
  %is_sliding_new_point = getelementptr inbounds %struct.SlidePointData, %struct.SlidePointData* %37, i32 0, i32 17, !dbg !3738
  %38 = load i8, i8* %is_sliding_new_point, align 8, !dbg !3738
  %conv55 = zext i8 %38 to i32, !dbg !3736
  %tobool56 = icmp ne i32 %conv55, 0, !dbg !3736
  br i1 %tobool56, label %land.lhs.true, label %if.end87, !dbg !3739

land.lhs.true:                                    ; preds = %if.then54
  %39 = load %struct.SlidePointData*, %struct.SlidePointData** %data, align 8, !dbg !3740
  %which_handle = getelementptr inbounds %struct.SlidePointData, %struct.SlidePointData* %39, i32 0, i32 8, !dbg !3741
  %40 = load i32, i32* %which_handle, align 8, !dbg !3741
  %cmp57 = icmp eq i32 %40, 1, !dbg !3742
  br i1 %cmp57, label %if.then59, label %if.end87, !dbg !3743

if.then59:                                        ; preds = %land.lhs.true
  %41 = load %struct.SlidePointData*, %struct.SlidePointData** %data, align 8, !dbg !3744
  %point60 = getelementptr inbounds %struct.SlidePointData, %struct.SlidePointData* %41, i32 0, i32 6, !dbg !3744
  %42 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point60, align 8, !dbg !3744
  %43 = load %struct.SlidePointData*, %struct.SlidePointData** %data, align 8, !dbg !3744
  %spline = getelementptr inbounds %struct.SlidePointData, %struct.SlidePointData* %43, i32 0, i32 4, !dbg !3744
  %44 = load %struct.MaskSpline*, %struct.MaskSpline** %spline, align 8, !dbg !3744
  %points = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %44, i32 0, i32 6, !dbg !3744
  %45 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %points, align 8, !dbg !3744
  %arrayidx = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %45, i64 0, !dbg !3744
  %cmp61 = icmp eq %struct.MaskSplinePoint* %42, %arrayidx, !dbg !3744
  br i1 %cmp61, label %if.then71, label %lor.lhs.false63, !dbg !3744

lor.lhs.false63:                                  ; preds = %if.then59
  %46 = load %struct.SlidePointData*, %struct.SlidePointData** %data, align 8, !dbg !3744
  %point64 = getelementptr inbounds %struct.SlidePointData, %struct.SlidePointData* %46, i32 0, i32 6, !dbg !3744
  %47 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point64, align 8, !dbg !3744
  %48 = load %struct.SlidePointData*, %struct.SlidePointData** %data, align 8, !dbg !3744
  %spline65 = getelementptr inbounds %struct.SlidePointData, %struct.SlidePointData* %48, i32 0, i32 4, !dbg !3744
  %49 = load %struct.MaskSpline*, %struct.MaskSpline** %spline65, align 8, !dbg !3744
  %points66 = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %49, i32 0, i32 6, !dbg !3744
  %50 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %points66, align 8, !dbg !3744
  %51 = load %struct.SlidePointData*, %struct.SlidePointData** %data, align 8, !dbg !3744
  %spline67 = getelementptr inbounds %struct.SlidePointData, %struct.SlidePointData* %51, i32 0, i32 4, !dbg !3744
  %52 = load %struct.MaskSpline*, %struct.MaskSpline** %spline67, align 8, !dbg !3744
  %tot_point = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %52, i32 0, i32 5, !dbg !3744
  %53 = load i32, i32* %tot_point, align 4, !dbg !3744
  %sub = sub nsw i32 %53, 1, !dbg !3744
  %idxprom = sext i32 %sub to i64, !dbg !3744
  %arrayidx68 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %50, i64 %idxprom, !dbg !3744
  %cmp69 = icmp eq %struct.MaskSplinePoint* %47, %arrayidx68, !dbg !3744
  br i1 %cmp69, label %if.then71, label %if.end86, !dbg !3747

if.then71:                                        ; preds = %lor.lhs.false63, %if.then59
  call void @llvm.dbg.declare(metadata float* %sw_ap, metadata !3748, metadata !DIExpression()), !dbg !3751
  %arrayidx72 = getelementptr inbounds [2 x float], [2 x float]* %delta, i64 0, i64 0, !dbg !3751
  %54 = load float, float* %arrayidx72, align 4, !dbg !3751
  store float %54, float* %sw_ap, align 4, !dbg !3751
  %arrayidx73 = getelementptr inbounds [2 x float], [2 x float]* %delta, i64 0, i64 1, !dbg !3751
  %55 = load float, float* %arrayidx73, align 4, !dbg !3751
  %arrayidx74 = getelementptr inbounds [2 x float], [2 x float]* %delta, i64 0, i64 0, !dbg !3751
  store float %55, float* %arrayidx74, align 4, !dbg !3751
  %56 = load float, float* %sw_ap, align 4, !dbg !3751
  %arrayidx75 = getelementptr inbounds [2 x float], [2 x float]* %delta, i64 0, i64 1, !dbg !3751
  store float %56, float* %arrayidx75, align 4, !dbg !3751
  %arrayidx76 = getelementptr inbounds [2 x float], [2 x float]* %delta, i64 0, i64 1, !dbg !3752
  %57 = load float, float* %arrayidx76, align 4, !dbg !3753
  %mul = fmul float %57, -1.000000e+00, !dbg !3753
  store float %mul, float* %arrayidx76, align 4, !dbg !3753
  %58 = load %struct.SlidePointData*, %struct.SlidePointData** %data, align 8, !dbg !3754
  %point77 = getelementptr inbounds %struct.SlidePointData, %struct.SlidePointData* %58, i32 0, i32 6, !dbg !3756
  %59 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point77, align 8, !dbg !3756
  %60 = load %struct.SlidePointData*, %struct.SlidePointData** %data, align 8, !dbg !3757
  %spline78 = getelementptr inbounds %struct.SlidePointData, %struct.SlidePointData* %60, i32 0, i32 4, !dbg !3758
  %61 = load %struct.MaskSpline*, %struct.MaskSpline** %spline78, align 8, !dbg !3758
  %points79 = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %61, i32 0, i32 6, !dbg !3759
  %62 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %points79, align 8, !dbg !3759
  %arrayidx80 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %62, i64 0, !dbg !3757
  %cmp81 = icmp ne %struct.MaskSplinePoint* %59, %arrayidx80, !dbg !3760
  br i1 %cmp81, label %if.then83, label %if.end85, !dbg !3761

if.then83:                                        ; preds = %if.then71
  %arraydecay84 = getelementptr inbounds [2 x float], [2 x float]* %delta, i64 0, i64 0, !dbg !3762
  call void @negate_v2(float* %arraydecay84), !dbg !3764
  br label %if.end85, !dbg !3765

if.end85:                                         ; preds = %if.then83, %if.then71
  br label %if.end86, !dbg !3766

if.end86:                                         ; preds = %if.end85, %lor.lhs.false63
  br label %if.end87, !dbg !3767

if.end87:                                         ; preds = %if.end86, %land.lhs.true, %if.then54
  %arraydecay88 = getelementptr inbounds [2 x float], [2 x float]* %new_handle, i64 0, i64 0, !dbg !3768
  %63 = load %struct.SlidePointData*, %struct.SlidePointData** %data, align 8, !dbg !3769
  %prev_handle_coord = getelementptr inbounds %struct.SlidePointData, %struct.SlidePointData* %63, i32 0, i32 22, !dbg !3770
  %arraydecay89 = getelementptr inbounds [2 x float], [2 x float]* %prev_handle_coord, i64 0, i64 0, !dbg !3769
  %arraydecay90 = getelementptr inbounds [2 x float], [2 x float]* %delta, i64 0, i64 0, !dbg !3771
  call void @add_v2_v2v2(float* %arraydecay88, float* %arraydecay89, float* %arraydecay90), !dbg !3772
  %64 = load %struct.SlidePointData*, %struct.SlidePointData** %data, align 8, !dbg !3773
  %point91 = getelementptr inbounds %struct.SlidePointData, %struct.SlidePointData* %64, i32 0, i32 6, !dbg !3774
  %65 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point91, align 8, !dbg !3774
  %66 = load %struct.SlidePointData*, %struct.SlidePointData** %data, align 8, !dbg !3775
  %which_handle92 = getelementptr inbounds %struct.SlidePointData, %struct.SlidePointData* %66, i32 0, i32 8, !dbg !3776
  %67 = load i32, i32* %which_handle92, align 8, !dbg !3776
  %arraydecay93 = getelementptr inbounds [2 x float], [2 x float]* %new_handle, i64 0, i64 0, !dbg !3777
  %68 = load %struct.SlidePointData*, %struct.SlidePointData** %data, align 8, !dbg !3778
  %is_curvature_only94 = getelementptr inbounds %struct.SlidePointData, %struct.SlidePointData* %68, i32 0, i32 13, !dbg !3779
  %69 = load i8, i8* %is_curvature_only94, align 4, !dbg !3779
  %70 = load %struct.SlidePointData*, %struct.SlidePointData** %data, align 8, !dbg !3780
  %orig_handle_coord = getelementptr inbounds %struct.SlidePointData, %struct.SlidePointData* %70, i32 0, i32 21, !dbg !3781
  %arraydecay95 = getelementptr inbounds [2 x float], [2 x float]* %orig_handle_coord, i64 0, i64 0, !dbg !3780
  %71 = load %struct.SlidePointData*, %struct.SlidePointData** %data, align 8, !dbg !3782
  %vec = getelementptr inbounds %struct.SlidePointData, %struct.SlidePointData* %71, i32 0, i32 18, !dbg !3783
  %arraydecay96 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec, i64 0, i64 0, !dbg !3782
  call void @BKE_mask_point_set_handle(%struct.MaskSplinePoint* %65, i32 %67, float* %arraydecay93, i8 zeroext %69, float* %arraydecay95, [3 x float]* %arraydecay96), !dbg !3784
  %72 = load %struct.SlidePointData*, %struct.SlidePointData** %data, align 8, !dbg !3785
  %point97 = getelementptr inbounds %struct.SlidePointData, %struct.SlidePointData* %72, i32 0, i32 6, !dbg !3786
  %73 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point97, align 8, !dbg !3786
  %74 = load %struct.SlidePointData*, %struct.SlidePointData** %data, align 8, !dbg !3787
  %which_handle98 = getelementptr inbounds %struct.SlidePointData, %struct.SlidePointData* %74, i32 0, i32 8, !dbg !3788
  %75 = load i32, i32* %which_handle98, align 8, !dbg !3788
  %76 = load %struct.SlidePointData*, %struct.SlidePointData** %data, align 8, !dbg !3789
  %prev_handle_coord99 = getelementptr inbounds %struct.SlidePointData, %struct.SlidePointData* %76, i32 0, i32 22, !dbg !3790
  %arraydecay100 = getelementptr inbounds [2 x float], [2 x float]* %prev_handle_coord99, i64 0, i64 0, !dbg !3789
  call void @BKE_mask_point_handle(%struct.MaskSplinePoint* %73, i32 %75, float* %arraydecay100), !dbg !3791
  %77 = load %struct.SlidePointData*, %struct.SlidePointData** %data, align 8, !dbg !3792
  %is_sliding_new_point101 = getelementptr inbounds %struct.SlidePointData, %struct.SlidePointData* %77, i32 0, i32 17, !dbg !3794
  %78 = load i8, i8* %is_sliding_new_point101, align 8, !dbg !3794
  %tobool102 = icmp ne i8 %78, 0, !dbg !3792
  br i1 %tobool102, label %if.then103, label %if.end142, !dbg !3795

if.then103:                                       ; preds = %if.end87
  %79 = load %struct.SlidePointData*, %struct.SlidePointData** %data, align 8, !dbg !3796
  %which_handle104 = getelementptr inbounds %struct.SlidePointData, %struct.SlidePointData* %79, i32 0, i32 8, !dbg !3796
  %80 = load i32, i32* %which_handle104, align 8, !dbg !3796
  %cmp105 = icmp eq i32 %80, 2, !dbg !3796
  br i1 %cmp105, label %if.then111, label %lor.lhs.false107, !dbg !3796

lor.lhs.false107:                                 ; preds = %if.then103
  %81 = load %struct.SlidePointData*, %struct.SlidePointData** %data, align 8, !dbg !3796
  %which_handle108 = getelementptr inbounds %struct.SlidePointData, %struct.SlidePointData* %81, i32 0, i32 8, !dbg !3796
  %82 = load i32, i32* %which_handle108, align 8, !dbg !3796
  %cmp109 = icmp eq i32 %82, 3, !dbg !3796
  br i1 %cmp109, label %if.then111, label %if.end141, !dbg !3799

if.then111:                                       ; preds = %lor.lhs.false107, %if.then103
  call void @llvm.dbg.declare(metadata %struct.BezTriple** %bezt112, metadata !3800, metadata !DIExpression()), !dbg !3802
  %83 = load %struct.SlidePointData*, %struct.SlidePointData** %data, align 8, !dbg !3803
  %point113 = getelementptr inbounds %struct.SlidePointData, %struct.SlidePointData* %83, i32 0, i32 6, !dbg !3804
  %84 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point113, align 8, !dbg !3804
  %bezt114 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %84, i32 0, i32 0, !dbg !3805
  store %struct.BezTriple* %bezt114, %struct.BezTriple** %bezt112, align 8, !dbg !3802
  call void @llvm.dbg.declare(metadata [2 x float]* %vec115, metadata !3806, metadata !DIExpression()), !dbg !3807
  call void @llvm.dbg.declare(metadata i16* %self_handle, metadata !3808, metadata !DIExpression()), !dbg !3809
  %85 = load %struct.SlidePointData*, %struct.SlidePointData** %data, align 8, !dbg !3810
  %which_handle116 = getelementptr inbounds %struct.SlidePointData, %struct.SlidePointData* %85, i32 0, i32 8, !dbg !3811
  %86 = load i32, i32* %which_handle116, align 8, !dbg !3811
  %cmp117 = icmp eq i32 %86, 2, !dbg !3812
  %87 = zext i1 %cmp117 to i64, !dbg !3813
  %cond = select i1 %cmp117, i32 0, i32 2, !dbg !3813
  %conv119 = trunc i32 %cond to i16, !dbg !3813
  store i16 %conv119, i16* %self_handle, align 2, !dbg !3809
  call void @llvm.dbg.declare(metadata i16* %other_handle, metadata !3814, metadata !DIExpression()), !dbg !3815
  %88 = load %struct.SlidePointData*, %struct.SlidePointData** %data, align 8, !dbg !3816
  %which_handle120 = getelementptr inbounds %struct.SlidePointData, %struct.SlidePointData* %88, i32 0, i32 8, !dbg !3817
  %89 = load i32, i32* %which_handle120, align 8, !dbg !3817
  %cmp121 = icmp eq i32 %89, 2, !dbg !3818
  %90 = zext i1 %cmp121 to i64, !dbg !3819
  %cond123 = select i1 %cmp121, i32 2, i32 0, !dbg !3819
  %conv124 = trunc i32 %cond123 to i16, !dbg !3819
  store i16 %conv124, i16* %other_handle, align 2, !dbg !3815
  %arraydecay125 = getelementptr inbounds [2 x float], [2 x float]* %vec115, i64 0, i64 0, !dbg !3820
  %91 = load %struct.BezTriple*, %struct.BezTriple** %bezt112, align 8, !dbg !3821
  %vec126 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %91, i32 0, i32 0, !dbg !3822
  %arrayidx127 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec126, i64 0, i64 1, !dbg !3821
  %arraydecay128 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx127, i64 0, i64 0, !dbg !3821
  %92 = load %struct.BezTriple*, %struct.BezTriple** %bezt112, align 8, !dbg !3823
  %vec129 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %92, i32 0, i32 0, !dbg !3824
  %93 = load i16, i16* %self_handle, align 2, !dbg !3825
  %idxprom130 = sext i16 %93 to i64, !dbg !3823
  %arrayidx131 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec129, i64 0, i64 %idxprom130, !dbg !3823
  %arraydecay132 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx131, i64 0, i64 0, !dbg !3823
  call void @sub_v2_v2v2(float* %arraydecay125, float* %arraydecay128, float* %arraydecay132), !dbg !3826
  %94 = load %struct.BezTriple*, %struct.BezTriple** %bezt112, align 8, !dbg !3827
  %vec133 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %94, i32 0, i32 0, !dbg !3828
  %95 = load i16, i16* %other_handle, align 2, !dbg !3829
  %idxprom134 = sext i16 %95 to i64, !dbg !3827
  %arrayidx135 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec133, i64 0, i64 %idxprom134, !dbg !3827
  %arraydecay136 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx135, i64 0, i64 0, !dbg !3827
  %96 = load %struct.BezTriple*, %struct.BezTriple** %bezt112, align 8, !dbg !3830
  %vec137 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %96, i32 0, i32 0, !dbg !3831
  %arrayidx138 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec137, i64 0, i64 1, !dbg !3830
  %arraydecay139 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx138, i64 0, i64 0, !dbg !3830
  %arraydecay140 = getelementptr inbounds [2 x float], [2 x float]* %vec115, i64 0, i64 0, !dbg !3832
  call void @add_v2_v2v2(float* %arraydecay136, float* %arraydecay139, float* %arraydecay140), !dbg !3833
  br label %if.end141, !dbg !3834

if.end141:                                        ; preds = %if.then111, %lor.lhs.false107
  br label %if.end142, !dbg !3835

if.end142:                                        ; preds = %if.end141, %if.end87
  br label %if.end362, !dbg !3836

if.else143:                                       ; preds = %if.end47
  %97 = load %struct.SlidePointData*, %struct.SlidePointData** %data, align 8, !dbg !3837
  %action144 = getelementptr inbounds %struct.SlidePointData, %struct.SlidePointData* %97, i32 0, i32 1, !dbg !3839
  %98 = load i32, i32* %action144, align 4, !dbg !3839
  %cmp145 = icmp eq i32 %98, 1, !dbg !3840
  br i1 %cmp145, label %if.then147, label %if.else160, !dbg !3841

if.then147:                                       ; preds = %if.else143
  %99 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !3842
  %vec148 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %99, i32 0, i32 0, !dbg !3844
  %arrayidx149 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec148, i64 0, i64 0, !dbg !3842
  %arraydecay150 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx149, i64 0, i64 0, !dbg !3842
  %arraydecay151 = getelementptr inbounds [2 x float], [2 x float]* %delta, i64 0, i64 0, !dbg !3845
  call void @add_v2_v2(float* %arraydecay150, float* %arraydecay151), !dbg !3846
  %100 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !3847
  %vec152 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %100, i32 0, i32 0, !dbg !3848
  %arrayidx153 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec152, i64 0, i64 1, !dbg !3847
  %arraydecay154 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx153, i64 0, i64 0, !dbg !3847
  %arraydecay155 = getelementptr inbounds [2 x float], [2 x float]* %delta, i64 0, i64 0, !dbg !3849
  call void @add_v2_v2(float* %arraydecay154, float* %arraydecay155), !dbg !3850
  %101 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !3851
  %vec156 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %101, i32 0, i32 0, !dbg !3852
  %arrayidx157 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec156, i64 0, i64 2, !dbg !3851
  %arraydecay158 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx157, i64 0, i64 0, !dbg !3851
  %arraydecay159 = getelementptr inbounds [2 x float], [2 x float]* %delta, i64 0, i64 0, !dbg !3853
  call void @add_v2_v2(float* %arraydecay158, float* %arraydecay159), !dbg !3854
  br label %if.end361, !dbg !3855

if.else160:                                       ; preds = %if.else143
  %102 = load %struct.SlidePointData*, %struct.SlidePointData** %data, align 8, !dbg !3856
  %action161 = getelementptr inbounds %struct.SlidePointData, %struct.SlidePointData* %102, i32 0, i32 1, !dbg !3858
  %103 = load i32, i32* %action161, align 4, !dbg !3858
  %cmp162 = icmp eq i32 %103, 3, !dbg !3859
  br i1 %cmp162, label %if.then164, label %if.else322, !dbg !3860

if.then164:                                       ; preds = %if.else160
  call void @llvm.dbg.declare(metadata [2 x float]* %vec165, metadata !3861, metadata !DIExpression()), !dbg !3863
  call void @llvm.dbg.declare(metadata [2 x float]* %no, metadata !3864, metadata !DIExpression()), !dbg !3865
  call void @llvm.dbg.declare(metadata [2 x float]* %p, metadata !3866, metadata !DIExpression()), !dbg !3867
  call void @llvm.dbg.declare(metadata [2 x float]* %c, metadata !3868, metadata !DIExpression()), !dbg !3869
  call void @llvm.dbg.declare(metadata float* %w, metadata !3870, metadata !DIExpression()), !dbg !3871
  call void @llvm.dbg.declare(metadata [2 x float]* %offco, metadata !3872, metadata !DIExpression()), !dbg !3873
  call void @llvm.dbg.declare(metadata float** %weight, metadata !3874, metadata !DIExpression()), !dbg !3875
  store float* null, float** %weight, align 8, !dbg !3875
  call void @llvm.dbg.declare(metadata float* %weight_scalar, metadata !3876, metadata !DIExpression()), !dbg !3877
  store float 1.000000e+00, float* %weight_scalar, align 4, !dbg !3877
  call void @llvm.dbg.declare(metadata i8* %is_overall_feather166, metadata !3878, metadata !DIExpression()), !dbg !3879
  %104 = load %struct.SlidePointData*, %struct.SlidePointData** %data, align 8, !dbg !3880
  %is_overall_feather167 = getelementptr inbounds %struct.SlidePointData, %struct.SlidePointData* %104, i32 0, i32 16, !dbg !3881
  %105 = load i8, i8* %is_overall_feather167, align 1, !dbg !3881
  %conv168 = zext i8 %105 to i32, !dbg !3880
  %tobool169 = icmp ne i32 %conv168, 0, !dbg !3880
  br i1 %tobool169, label %lor.end, label %lor.rhs, !dbg !3882

lor.rhs:                                          ; preds = %if.then164
  %106 = load %struct.SlidePointData*, %struct.SlidePointData** %data, align 8, !dbg !3883
  %is_initial_feather = getelementptr inbounds %struct.SlidePointData, %struct.SlidePointData* %106, i32 0, i32 15, !dbg !3884
  %107 = load i8, i8* %is_initial_feather, align 2, !dbg !3884
  %conv170 = zext i8 %107 to i32, !dbg !3883
  %tobool171 = icmp ne i32 %conv170, 0, !dbg !3882
  br label %lor.end, !dbg !3882

lor.end:                                          ; preds = %lor.rhs, %if.then164
  %108 = phi i1 [ true, %if.then164 ], [ %tobool171, %lor.rhs ]
  %lor.ext = zext i1 %108 to i32, !dbg !3882
  %conv172 = trunc i32 %lor.ext to i8, !dbg !3880
  store i8 %conv172, i8* %is_overall_feather166, align 1, !dbg !3879
  %arraydecay173 = getelementptr inbounds [2 x float], [2 x float]* %offco, i64 0, i64 0, !dbg !3885
  %109 = load %struct.SlidePointData*, %struct.SlidePointData** %data, align 8, !dbg !3886
  %prev_feather_coord = getelementptr inbounds %struct.SlidePointData, %struct.SlidePointData* %109, i32 0, i32 23, !dbg !3887
  %arraydecay174 = getelementptr inbounds [2 x float], [2 x float]* %prev_feather_coord, i64 0, i64 0, !dbg !3886
  %arraydecay175 = getelementptr inbounds [2 x float], [2 x float]* %delta, i64 0, i64 0, !dbg !3888
  call void @add_v2_v2v2(float* %arraydecay173, float* %arraydecay174, float* %arraydecay175), !dbg !3889
  %110 = load %struct.SlidePointData*, %struct.SlidePointData** %data, align 8, !dbg !3890
  %uw = getelementptr inbounds %struct.SlidePointData, %struct.SlidePointData* %110, i32 0, i32 7, !dbg !3892
  %111 = load %struct.MaskSplinePointUW*, %struct.MaskSplinePointUW** %uw, align 8, !dbg !3892
  %tobool176 = icmp ne %struct.MaskSplinePointUW* %111, null, !dbg !3890
  br i1 %tobool176, label %if.then177, label %if.else251, !dbg !3893

if.then177:                                       ; preds = %lor.end
  call void @llvm.dbg.declare(metadata float* %u_pos, metadata !3894, metadata !DIExpression()), !dbg !3896
  %112 = load %struct.SlidePointData*, %struct.SlidePointData** %data, align 8, !dbg !3897
  %spline178 = getelementptr inbounds %struct.SlidePointData, %struct.SlidePointData* %112, i32 0, i32 4, !dbg !3898
  %113 = load %struct.MaskSpline*, %struct.MaskSpline** %spline178, align 8, !dbg !3898
  %114 = load %struct.SlidePointData*, %struct.SlidePointData** %data, align 8, !dbg !3899
  %point179 = getelementptr inbounds %struct.SlidePointData, %struct.SlidePointData* %114, i32 0, i32 6, !dbg !3900
  %115 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point179, align 8, !dbg !3900
  %116 = load %struct.SlidePointData*, %struct.SlidePointData** %data, align 8, !dbg !3901
  %uw180 = getelementptr inbounds %struct.SlidePointData, %struct.SlidePointData* %116, i32 0, i32 7, !dbg !3902
  %117 = load %struct.MaskSplinePointUW*, %struct.MaskSplinePointUW** %uw180, align 8, !dbg !3902
  %u = getelementptr inbounds %struct.MaskSplinePointUW, %struct.MaskSplinePointUW* %117, i32 0, i32 0, !dbg !3903
  %118 = load float, float* %u, align 4, !dbg !3903
  %arraydecay181 = getelementptr inbounds [2 x float], [2 x float]* %offco, i64 0, i64 0, !dbg !3904
  %call182 = call float @BKE_mask_spline_project_co(%struct.MaskSpline* %113, %struct.MaskSplinePoint* %115, float %118, float* %arraydecay181, i32 -1), !dbg !3905
  store float %call182, float* %u_pos, align 4, !dbg !3896
  call void @llvm.dbg.declare(metadata float* %u_neg, metadata !3906, metadata !DIExpression()), !dbg !3907
  %119 = load %struct.SlidePointData*, %struct.SlidePointData** %data, align 8, !dbg !3908
  %spline183 = getelementptr inbounds %struct.SlidePointData, %struct.SlidePointData* %119, i32 0, i32 4, !dbg !3909
  %120 = load %struct.MaskSpline*, %struct.MaskSpline** %spline183, align 8, !dbg !3909
  %121 = load %struct.SlidePointData*, %struct.SlidePointData** %data, align 8, !dbg !3910
  %point184 = getelementptr inbounds %struct.SlidePointData, %struct.SlidePointData* %121, i32 0, i32 6, !dbg !3911
  %122 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point184, align 8, !dbg !3911
  %123 = load %struct.SlidePointData*, %struct.SlidePointData** %data, align 8, !dbg !3912
  %uw185 = getelementptr inbounds %struct.SlidePointData, %struct.SlidePointData* %123, i32 0, i32 7, !dbg !3913
  %124 = load %struct.MaskSplinePointUW*, %struct.MaskSplinePointUW** %uw185, align 8, !dbg !3913
  %u186 = getelementptr inbounds %struct.MaskSplinePointUW, %struct.MaskSplinePointUW* %124, i32 0, i32 0, !dbg !3914
  %125 = load float, float* %u186, align 4, !dbg !3914
  %arraydecay187 = getelementptr inbounds [2 x float], [2 x float]* %offco, i64 0, i64 0, !dbg !3915
  %call188 = call float @BKE_mask_spline_project_co(%struct.MaskSpline* %120, %struct.MaskSplinePoint* %122, float %125, float* %arraydecay187, i32 1), !dbg !3916
  store float %call188, float* %u_neg, align 4, !dbg !3907
  call void @llvm.dbg.declare(metadata float* %dist_pos, metadata !3917, metadata !DIExpression()), !dbg !3918
  store float 0x47EFFFFFE0000000, float* %dist_pos, align 4, !dbg !3918
  call void @llvm.dbg.declare(metadata float* %dist_neg, metadata !3919, metadata !DIExpression()), !dbg !3920
  store float 0x47EFFFFFE0000000, float* %dist_neg, align 4, !dbg !3920
  call void @llvm.dbg.declare(metadata [2 x float]* %co_pos, metadata !3921, metadata !DIExpression()), !dbg !3922
  call void @llvm.dbg.declare(metadata [2 x float]* %co_neg, metadata !3923, metadata !DIExpression()), !dbg !3924
  call void @llvm.dbg.declare(metadata float* %u189, metadata !3925, metadata !DIExpression()), !dbg !3926
  %126 = load float, float* %u_pos, align 4, !dbg !3927
  %cmp190 = fcmp ogt float %126, 0.000000e+00, !dbg !3929
  br i1 %cmp190, label %land.lhs.true192, label %if.end202, !dbg !3930

land.lhs.true192:                                 ; preds = %if.then177
  %127 = load float, float* %u_pos, align 4, !dbg !3931
  %cmp193 = fcmp olt float %127, 1.000000e+00, !dbg !3932
  br i1 %cmp193, label %if.then195, label %if.end202, !dbg !3933

if.then195:                                       ; preds = %land.lhs.true192
  %128 = load %struct.SlidePointData*, %struct.SlidePointData** %data, align 8, !dbg !3934
  %spline196 = getelementptr inbounds %struct.SlidePointData, %struct.SlidePointData* %128, i32 0, i32 4, !dbg !3936
  %129 = load %struct.MaskSpline*, %struct.MaskSpline** %spline196, align 8, !dbg !3936
  %130 = load %struct.SlidePointData*, %struct.SlidePointData** %data, align 8, !dbg !3937
  %point197 = getelementptr inbounds %struct.SlidePointData, %struct.SlidePointData* %130, i32 0, i32 6, !dbg !3938
  %131 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point197, align 8, !dbg !3938
  %132 = load float, float* %u_pos, align 4, !dbg !3939
  %arraydecay198 = getelementptr inbounds [2 x float], [2 x float]* %co_pos, i64 0, i64 0, !dbg !3940
  call void @BKE_mask_point_segment_co(%struct.MaskSpline* %129, %struct.MaskSplinePoint* %131, float %132, float* %arraydecay198), !dbg !3941
  %arraydecay199 = getelementptr inbounds [2 x float], [2 x float]* %offco, i64 0, i64 0, !dbg !3942
  %arraydecay200 = getelementptr inbounds [2 x float], [2 x float]* %co_pos, i64 0, i64 0, !dbg !3943
  %call201 = call float @len_squared_v2v2(float* %arraydecay199, float* %arraydecay200), !dbg !3944
  store float %call201, float* %dist_pos, align 4, !dbg !3945
  br label %if.end202, !dbg !3946

if.end202:                                        ; preds = %if.then195, %land.lhs.true192, %if.then177
  %133 = load float, float* %u_neg, align 4, !dbg !3947
  %cmp203 = fcmp ogt float %133, 0.000000e+00, !dbg !3949
  br i1 %cmp203, label %land.lhs.true205, label %if.end215, !dbg !3950

land.lhs.true205:                                 ; preds = %if.end202
  %134 = load float, float* %u_neg, align 4, !dbg !3951
  %cmp206 = fcmp olt float %134, 1.000000e+00, !dbg !3952
  br i1 %cmp206, label %if.then208, label %if.end215, !dbg !3953

if.then208:                                       ; preds = %land.lhs.true205
  %135 = load %struct.SlidePointData*, %struct.SlidePointData** %data, align 8, !dbg !3954
  %spline209 = getelementptr inbounds %struct.SlidePointData, %struct.SlidePointData* %135, i32 0, i32 4, !dbg !3956
  %136 = load %struct.MaskSpline*, %struct.MaskSpline** %spline209, align 8, !dbg !3956
  %137 = load %struct.SlidePointData*, %struct.SlidePointData** %data, align 8, !dbg !3957
  %point210 = getelementptr inbounds %struct.SlidePointData, %struct.SlidePointData* %137, i32 0, i32 6, !dbg !3958
  %138 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point210, align 8, !dbg !3958
  %139 = load float, float* %u_neg, align 4, !dbg !3959
  %arraydecay211 = getelementptr inbounds [2 x float], [2 x float]* %co_neg, i64 0, i64 0, !dbg !3960
  call void @BKE_mask_point_segment_co(%struct.MaskSpline* %136, %struct.MaskSplinePoint* %138, float %139, float* %arraydecay211), !dbg !3961
  %arraydecay212 = getelementptr inbounds [2 x float], [2 x float]* %offco, i64 0, i64 0, !dbg !3962
  %arraydecay213 = getelementptr inbounds [2 x float], [2 x float]* %co_neg, i64 0, i64 0, !dbg !3963
  %call214 = call float @len_squared_v2v2(float* %arraydecay212, float* %arraydecay213), !dbg !3964
  store float %call214, float* %dist_neg, align 4, !dbg !3965
  br label %if.end215, !dbg !3966

if.end215:                                        ; preds = %if.then208, %land.lhs.true205, %if.end202
  %140 = load float, float* %dist_pos, align 4, !dbg !3967
  %141 = load float, float* %dist_neg, align 4, !dbg !3968
  %cmp216 = fcmp olt float %140, %141, !dbg !3969
  br i1 %cmp216, label %cond.true, label %cond.false, !dbg !3967

cond.true:                                        ; preds = %if.end215
  %142 = load float, float* %u_pos, align 4, !dbg !3970
  br label %cond.end, !dbg !3967

cond.false:                                       ; preds = %if.end215
  %143 = load float, float* %u_neg, align 4, !dbg !3971
  br label %cond.end, !dbg !3967

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond218 = phi float [ %142, %cond.true ], [ %143, %cond.false ], !dbg !3967
  store float %cond218, float* %u189, align 4, !dbg !3972
  %144 = load float, float* %u189, align 4, !dbg !3973
  %cmp219 = fcmp ogt float %144, 0.000000e+00, !dbg !3975
  br i1 %cmp219, label %land.lhs.true221, label %if.end250, !dbg !3976

land.lhs.true221:                                 ; preds = %cond.end
  %145 = load float, float* %u189, align 4, !dbg !3977
  %cmp222 = fcmp olt float %145, 1.000000e+00, !dbg !3978
  br i1 %cmp222, label %if.then224, label %if.end250, !dbg !3979

if.then224:                                       ; preds = %land.lhs.true221
  %146 = load float, float* %u189, align 4, !dbg !3980
  %147 = load %struct.SlidePointData*, %struct.SlidePointData** %data, align 8, !dbg !3982
  %uw225 = getelementptr inbounds %struct.SlidePointData, %struct.SlidePointData* %147, i32 0, i32 7, !dbg !3983
  %148 = load %struct.MaskSplinePointUW*, %struct.MaskSplinePointUW** %uw225, align 8, !dbg !3983
  %u226 = getelementptr inbounds %struct.MaskSplinePointUW, %struct.MaskSplinePointUW* %148, i32 0, i32 0, !dbg !3984
  store float %146, float* %u226, align 4, !dbg !3985
  %149 = load %struct.SlidePointData*, %struct.SlidePointData** %data, align 8, !dbg !3986
  %point227 = getelementptr inbounds %struct.SlidePointData, %struct.SlidePointData* %149, i32 0, i32 6, !dbg !3987
  %150 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point227, align 8, !dbg !3987
  %151 = load %struct.SlidePointData*, %struct.SlidePointData** %data, align 8, !dbg !3988
  %uw228 = getelementptr inbounds %struct.SlidePointData, %struct.SlidePointData* %151, i32 0, i32 7, !dbg !3989
  %152 = load %struct.MaskSplinePointUW*, %struct.MaskSplinePointUW** %uw228, align 8, !dbg !3989
  %call229 = call %struct.MaskSplinePointUW* @BKE_mask_point_sort_uw(%struct.MaskSplinePoint* %150, %struct.MaskSplinePointUW* %152), !dbg !3990
  %153 = load %struct.SlidePointData*, %struct.SlidePointData** %data, align 8, !dbg !3991
  %uw230 = getelementptr inbounds %struct.SlidePointData, %struct.SlidePointData* %153, i32 0, i32 7, !dbg !3992
  store %struct.MaskSplinePointUW* %call229, %struct.MaskSplinePointUW** %uw230, align 8, !dbg !3993
  %154 = load %struct.SlidePointData*, %struct.SlidePointData** %data, align 8, !dbg !3994
  %uw231 = getelementptr inbounds %struct.SlidePointData, %struct.SlidePointData* %154, i32 0, i32 7, !dbg !3995
  %155 = load %struct.MaskSplinePointUW*, %struct.MaskSplinePointUW** %uw231, align 8, !dbg !3995
  %w232 = getelementptr inbounds %struct.MaskSplinePointUW, %struct.MaskSplinePointUW* %155, i32 0, i32 1, !dbg !3996
  store float* %w232, float** %weight, align 8, !dbg !3997
  %156 = load %struct.SlidePointData*, %struct.SlidePointData** %data, align 8, !dbg !3998
  %spline233 = getelementptr inbounds %struct.SlidePointData, %struct.SlidePointData* %156, i32 0, i32 4, !dbg !3999
  %157 = load %struct.MaskSpline*, %struct.MaskSpline** %spline233, align 8, !dbg !3999
  %158 = load %struct.SlidePointData*, %struct.SlidePointData** %data, align 8, !dbg !4000
  %point234 = getelementptr inbounds %struct.SlidePointData, %struct.SlidePointData* %158, i32 0, i32 6, !dbg !4001
  %159 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point234, align 8, !dbg !4001
  %160 = load float, float* %u189, align 4, !dbg !4002
  %call235 = call float @BKE_mask_point_weight_scalar(%struct.MaskSpline* %157, %struct.MaskSplinePoint* %159, float %160), !dbg !4003
  store float %call235, float* %weight_scalar, align 4, !dbg !4004
  %161 = load float, float* %weight_scalar, align 4, !dbg !4005
  %cmp236 = fcmp une float %161, 0.000000e+00, !dbg !4007
  br i1 %cmp236, label %if.then238, label %if.end239, !dbg !4008

if.then238:                                       ; preds = %if.then224
  %162 = load float, float* %weight_scalar, align 4, !dbg !4009
  %div = fdiv float 1.000000e+00, %162, !dbg !4011
  store float %div, float* %weight_scalar, align 4, !dbg !4012
  br label %if.end239, !dbg !4013

if.end239:                                        ; preds = %if.then238, %if.then224
  %163 = load %struct.SlidePointData*, %struct.SlidePointData** %data, align 8, !dbg !4014
  %spline240 = getelementptr inbounds %struct.SlidePointData, %struct.SlidePointData* %163, i32 0, i32 4, !dbg !4015
  %164 = load %struct.MaskSpline*, %struct.MaskSpline** %spline240, align 8, !dbg !4015
  %165 = load %struct.SlidePointData*, %struct.SlidePointData** %data, align 8, !dbg !4016
  %point241 = getelementptr inbounds %struct.SlidePointData, %struct.SlidePointData* %165, i32 0, i32 6, !dbg !4017
  %166 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point241, align 8, !dbg !4017
  %167 = load %struct.SlidePointData*, %struct.SlidePointData** %data, align 8, !dbg !4018
  %uw242 = getelementptr inbounds %struct.SlidePointData, %struct.SlidePointData* %167, i32 0, i32 7, !dbg !4019
  %168 = load %struct.MaskSplinePointUW*, %struct.MaskSplinePointUW** %uw242, align 8, !dbg !4019
  %u243 = getelementptr inbounds %struct.MaskSplinePointUW, %struct.MaskSplinePointUW* %168, i32 0, i32 0, !dbg !4020
  %169 = load float, float* %u243, align 4, !dbg !4020
  %arraydecay244 = getelementptr inbounds [2 x float], [2 x float]* %no, i64 0, i64 0, !dbg !4021
  call void @BKE_mask_point_normal(%struct.MaskSpline* %164, %struct.MaskSplinePoint* %166, float %169, float* %arraydecay244), !dbg !4022
  %170 = load %struct.SlidePointData*, %struct.SlidePointData** %data, align 8, !dbg !4023
  %spline245 = getelementptr inbounds %struct.SlidePointData, %struct.SlidePointData* %170, i32 0, i32 4, !dbg !4024
  %171 = load %struct.MaskSpline*, %struct.MaskSpline** %spline245, align 8, !dbg !4024
  %172 = load %struct.SlidePointData*, %struct.SlidePointData** %data, align 8, !dbg !4025
  %point246 = getelementptr inbounds %struct.SlidePointData, %struct.SlidePointData* %172, i32 0, i32 6, !dbg !4026
  %173 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point246, align 8, !dbg !4026
  %174 = load %struct.SlidePointData*, %struct.SlidePointData** %data, align 8, !dbg !4027
  %uw247 = getelementptr inbounds %struct.SlidePointData, %struct.SlidePointData* %174, i32 0, i32 7, !dbg !4028
  %175 = load %struct.MaskSplinePointUW*, %struct.MaskSplinePointUW** %uw247, align 8, !dbg !4028
  %u248 = getelementptr inbounds %struct.MaskSplinePointUW, %struct.MaskSplinePointUW* %175, i32 0, i32 0, !dbg !4029
  %176 = load float, float* %u248, align 4, !dbg !4029
  %arraydecay249 = getelementptr inbounds [2 x float], [2 x float]* %p, i64 0, i64 0, !dbg !4030
  call void @BKE_mask_point_segment_co(%struct.MaskSpline* %171, %struct.MaskSplinePoint* %173, float %176, float* %arraydecay249), !dbg !4031
  br label %if.end250, !dbg !4032

if.end250:                                        ; preds = %if.end239, %land.lhs.true221, %cond.end
  br label %if.end260, !dbg !4033

if.else251:                                       ; preds = %lor.end
  %177 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !4034
  %weight252 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %177, i32 0, i32 2, !dbg !4036
  store float* %weight252, float** %weight, align 8, !dbg !4037
  %arraydecay253 = getelementptr inbounds [2 x float], [2 x float]* %no, i64 0, i64 0, !dbg !4038
  %178 = load %struct.SlidePointData*, %struct.SlidePointData** %data, align 8, !dbg !4039
  %no254 = getelementptr inbounds %struct.SlidePointData, %struct.SlidePointData* %178, i32 0, i32 12, !dbg !4040
  %arraydecay255 = getelementptr inbounds [2 x float], [2 x float]* %no254, i64 0, i64 0, !dbg !4039
  call void @copy_v2_v2(float* %arraydecay253, float* %arraydecay255), !dbg !4041
  %arraydecay256 = getelementptr inbounds [2 x float], [2 x float]* %p, i64 0, i64 0, !dbg !4042
  %179 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !4043
  %vec257 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %179, i32 0, i32 0, !dbg !4044
  %arrayidx258 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec257, i64 0, i64 1, !dbg !4043
  %arraydecay259 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx258, i64 0, i64 0, !dbg !4043
  call void @copy_v2_v2(float* %arraydecay256, float* %arraydecay259), !dbg !4045
  br label %if.end260

if.end260:                                        ; preds = %if.else251, %if.end250
  %180 = load float*, float** %weight, align 8, !dbg !4046
  %tobool261 = icmp ne float* %180, null, !dbg !4046
  br i1 %tobool261, label %if.then262, label %if.end321, !dbg !4048

if.then262:                                       ; preds = %if.end260
  %arraydecay263 = getelementptr inbounds [2 x float], [2 x float]* %c, i64 0, i64 0, !dbg !4049
  %arraydecay264 = getelementptr inbounds [2 x float], [2 x float]* %offco, i64 0, i64 0, !dbg !4051
  %arraydecay265 = getelementptr inbounds [2 x float], [2 x float]* %p, i64 0, i64 0, !dbg !4052
  call void @sub_v2_v2v2(float* %arraydecay263, float* %arraydecay264, float* %arraydecay265), !dbg !4053
  %arraydecay266 = getelementptr inbounds [2 x float], [2 x float]* %vec165, i64 0, i64 0, !dbg !4054
  %arraydecay267 = getelementptr inbounds [2 x float], [2 x float]* %c, i64 0, i64 0, !dbg !4055
  %arraydecay268 = getelementptr inbounds [2 x float], [2 x float]* %no, i64 0, i64 0, !dbg !4056
  call void @project_v2_v2v2(float* %arraydecay266, float* %arraydecay267, float* %arraydecay268), !dbg !4057
  %arraydecay269 = getelementptr inbounds [2 x float], [2 x float]* %vec165, i64 0, i64 0, !dbg !4058
  %call270 = call float @len_v2(float* %arraydecay269), !dbg !4059
  store float %call270, float* %w, align 4, !dbg !4060
  %181 = load i8, i8* %is_overall_feather166, align 1, !dbg !4061
  %tobool271 = icmp ne i8 %181, 0, !dbg !4061
  br i1 %tobool271, label %if.then272, label %if.else298, !dbg !4063

if.then272:                                       ; preds = %if.then262
  call void @llvm.dbg.declare(metadata float* %delta273, metadata !4064, metadata !DIExpression()), !dbg !4066
  %arraydecay274 = getelementptr inbounds [2 x float], [2 x float]* %no, i64 0, i64 0, !dbg !4067
  %arraydecay275 = getelementptr inbounds [2 x float], [2 x float]* %vec165, i64 0, i64 0, !dbg !4069
  %call276 = call float @dot_v2v2(float* %arraydecay274, float* %arraydecay275), !dbg !4070
  %cmp277 = fcmp ole float %call276, 0.000000e+00, !dbg !4071
  br i1 %cmp277, label %if.then279, label %if.end280, !dbg !4072

if.then279:                                       ; preds = %if.then272
  %182 = load float, float* %w, align 4, !dbg !4073
  %fneg = fneg float %182, !dbg !4074
  store float %fneg, float* %w, align 4, !dbg !4075
  br label %if.end280, !dbg !4076

if.end280:                                        ; preds = %if.then279, %if.then272
  %183 = load float, float* %w, align 4, !dbg !4077
  %184 = load %struct.SlidePointData*, %struct.SlidePointData** %data, align 8, !dbg !4078
  %weight281 = getelementptr inbounds %struct.SlidePointData, %struct.SlidePointData* %184, i32 0, i32 24, !dbg !4079
  %185 = load float, float* %weight281, align 4, !dbg !4079
  %186 = load %struct.SlidePointData*, %struct.SlidePointData** %data, align 8, !dbg !4080
  %weight_scalar282 = getelementptr inbounds %struct.SlidePointData, %struct.SlidePointData* %186, i32 0, i32 25, !dbg !4081
  %187 = load float, float* %weight_scalar282, align 8, !dbg !4081
  %mul283 = fmul float %185, %187, !dbg !4082
  %sub284 = fsub float %183, %mul283, !dbg !4083
  store float %sub284, float* %delta273, align 4, !dbg !4084
  %188 = load %struct.SlidePointData*, %struct.SlidePointData** %data, align 8, !dbg !4085
  %orig_spline = getelementptr inbounds %struct.SlidePointData, %struct.SlidePointData* %188, i32 0, i32 5, !dbg !4087
  %189 = load %struct.MaskSpline*, %struct.MaskSpline** %orig_spline, align 8, !dbg !4087
  %cmp285 = icmp eq %struct.MaskSpline* %189, null, !dbg !4088
  br i1 %cmp285, label %if.then287, label %if.end292, !dbg !4089

if.then287:                                       ; preds = %if.end280
  %190 = load %struct.SlidePointData*, %struct.SlidePointData** %data, align 8, !dbg !4090
  %weight288 = getelementptr inbounds %struct.SlidePointData, %struct.SlidePointData* %190, i32 0, i32 24, !dbg !4092
  %191 = load float, float* %weight288, align 4, !dbg !4092
  %192 = load float*, float** %weight, align 8, !dbg !4093
  store float %191, float* %192, align 4, !dbg !4094
  %193 = load %struct.SlidePointData*, %struct.SlidePointData** %data, align 8, !dbg !4095
  %spline289 = getelementptr inbounds %struct.SlidePointData, %struct.SlidePointData* %193, i32 0, i32 4, !dbg !4096
  %194 = load %struct.MaskSpline*, %struct.MaskSpline** %spline289, align 8, !dbg !4096
  %call290 = call %struct.MaskSpline* @BKE_mask_spline_copy(%struct.MaskSpline* %194), !dbg !4097
  %195 = load %struct.SlidePointData*, %struct.SlidePointData** %data, align 8, !dbg !4098
  %orig_spline291 = getelementptr inbounds %struct.SlidePointData, %struct.SlidePointData* %195, i32 0, i32 5, !dbg !4099
  store %struct.MaskSpline* %call290, %struct.MaskSpline** %orig_spline291, align 8, !dbg !4100
  br label %if.end292, !dbg !4101

if.end292:                                        ; preds = %if.then287, %if.end280
  %196 = load %struct.SlidePointData*, %struct.SlidePointData** %data, align 8, !dbg !4102
  %is_initial_feather293 = getelementptr inbounds %struct.SlidePointData, %struct.SlidePointData* %196, i32 0, i32 15, !dbg !4104
  %197 = load i8, i8* %is_initial_feather293, align 2, !dbg !4104
  %tobool294 = icmp ne i8 %197, 0, !dbg !4102
  br i1 %tobool294, label %if.then295, label %if.end297, !dbg !4105

if.then295:                                       ; preds = %if.end292
  %198 = load float, float* %w, align 4, !dbg !4106
  %199 = load float, float* %weight_scalar, align 4, !dbg !4108
  %mul296 = fmul float %198, %199, !dbg !4109
  %200 = load float*, float** %weight, align 8, !dbg !4110
  store float %mul296, float* %200, align 4, !dbg !4111
  br label %if.end297, !dbg !4112

if.end297:                                        ; preds = %if.then295, %if.end292
  %201 = load %struct.SlidePointData*, %struct.SlidePointData** %data, align 8, !dbg !4113
  %202 = load float, float* %delta273, align 4, !dbg !4114
  call void @slide_point_delta_all_feather(%struct.SlidePointData* %201, float %202), !dbg !4115
  br label %if.end317, !dbg !4116

if.else298:                                       ; preds = %if.then262
  %arraydecay299 = getelementptr inbounds [2 x float], [2 x float]* %no, i64 0, i64 0, !dbg !4117
  %arraydecay300 = getelementptr inbounds [2 x float], [2 x float]* %vec165, i64 0, i64 0, !dbg !4120
  %call301 = call float @dot_v2v2(float* %arraydecay299, float* %arraydecay300), !dbg !4121
  %cmp302 = fcmp ole float %call301, 0.000000e+00, !dbg !4122
  br i1 %cmp302, label %if.then304, label %if.end305, !dbg !4123

if.then304:                                       ; preds = %if.else298
  store float 0.000000e+00, float* %w, align 4, !dbg !4124
  br label %if.end305, !dbg !4125

if.end305:                                        ; preds = %if.then304, %if.else298
  %203 = load %struct.SlidePointData*, %struct.SlidePointData** %data, align 8, !dbg !4126
  %orig_spline306 = getelementptr inbounds %struct.SlidePointData, %struct.SlidePointData* %203, i32 0, i32 5, !dbg !4128
  %204 = load %struct.MaskSpline*, %struct.MaskSpline** %orig_spline306, align 8, !dbg !4128
  %tobool307 = icmp ne %struct.MaskSpline* %204, null, !dbg !4126
  br i1 %tobool307, label %if.then308, label %if.end311, !dbg !4129

if.then308:                                       ; preds = %if.end305
  %205 = load %struct.SlidePointData*, %struct.SlidePointData** %data, align 8, !dbg !4130
  call void @slide_point_restore_spline(%struct.SlidePointData* %205), !dbg !4132
  %206 = load %struct.SlidePointData*, %struct.SlidePointData** %data, align 8, !dbg !4133
  %orig_spline309 = getelementptr inbounds %struct.SlidePointData, %struct.SlidePointData* %206, i32 0, i32 5, !dbg !4134
  %207 = load %struct.MaskSpline*, %struct.MaskSpline** %orig_spline309, align 8, !dbg !4134
  call void @BKE_mask_spline_free(%struct.MaskSpline* %207), !dbg !4135
  %208 = load %struct.SlidePointData*, %struct.SlidePointData** %data, align 8, !dbg !4136
  %orig_spline310 = getelementptr inbounds %struct.SlidePointData, %struct.SlidePointData* %208, i32 0, i32 5, !dbg !4137
  store %struct.MaskSpline* null, %struct.MaskSpline** %orig_spline310, align 8, !dbg !4138
  br label %if.end311, !dbg !4139

if.end311:                                        ; preds = %if.then308, %if.end305
  %209 = load float, float* %weight_scalar, align 4, !dbg !4140
  %cmp312 = fcmp une float %209, 0.000000e+00, !dbg !4142
  br i1 %cmp312, label %if.then314, label %if.end316, !dbg !4143

if.then314:                                       ; preds = %if.end311
  %210 = load float, float* %w, align 4, !dbg !4144
  %211 = load float, float* %weight_scalar, align 4, !dbg !4146
  %mul315 = fmul float %210, %211, !dbg !4147
  %212 = load float*, float** %weight, align 8, !dbg !4148
  store float %mul315, float* %212, align 4, !dbg !4149
  br label %if.end316, !dbg !4150

if.end316:                                        ; preds = %if.then314, %if.end311
  br label %if.end317

if.end317:                                        ; preds = %if.end316, %if.end297
  %213 = load %struct.SlidePointData*, %struct.SlidePointData** %data, align 8, !dbg !4151
  %prev_feather_coord318 = getelementptr inbounds %struct.SlidePointData, %struct.SlidePointData* %213, i32 0, i32 23, !dbg !4152
  %arraydecay319 = getelementptr inbounds [2 x float], [2 x float]* %prev_feather_coord318, i64 0, i64 0, !dbg !4151
  %arraydecay320 = getelementptr inbounds [2 x float], [2 x float]* %offco, i64 0, i64 0, !dbg !4153
  call void @copy_v2_v2(float* %arraydecay319, float* %arraydecay320), !dbg !4154
  br label %if.end321, !dbg !4155

if.end321:                                        ; preds = %if.end317, %if.end260
  br label %if.end360, !dbg !4156

if.else322:                                       ; preds = %if.else160
  %214 = load %struct.SlidePointData*, %struct.SlidePointData** %data, align 8, !dbg !4157
  %action323 = getelementptr inbounds %struct.SlidePointData, %struct.SlidePointData* %214, i32 0, i32 1, !dbg !4159
  %215 = load i32, i32* %action323, align 4, !dbg !4159
  %cmp324 = icmp eq i32 %215, 4, !dbg !4160
  br i1 %cmp324, label %if.then326, label %if.end359, !dbg !4161

if.then326:                                       ; preds = %if.else322
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4162, metadata !DIExpression()), !dbg !4164
  %216 = load %struct.SlidePointData*, %struct.SlidePointData** %data, align 8, !dbg !4165
  %orig_spline327 = getelementptr inbounds %struct.SlidePointData, %struct.SlidePointData* %216, i32 0, i32 5, !dbg !4167
  %217 = load %struct.MaskSpline*, %struct.MaskSpline** %orig_spline327, align 8, !dbg !4167
  %cmp328 = icmp eq %struct.MaskSpline* %217, null, !dbg !4168
  br i1 %cmp328, label %if.then330, label %if.end334, !dbg !4169

if.then330:                                       ; preds = %if.then326
  %218 = load %struct.SlidePointData*, %struct.SlidePointData** %data, align 8, !dbg !4170
  %spline331 = getelementptr inbounds %struct.SlidePointData, %struct.SlidePointData* %218, i32 0, i32 4, !dbg !4172
  %219 = load %struct.MaskSpline*, %struct.MaskSpline** %spline331, align 8, !dbg !4172
  %call332 = call %struct.MaskSpline* @BKE_mask_spline_copy(%struct.MaskSpline* %219), !dbg !4173
  %220 = load %struct.SlidePointData*, %struct.SlidePointData** %data, align 8, !dbg !4174
  %orig_spline333 = getelementptr inbounds %struct.SlidePointData, %struct.SlidePointData* %220, i32 0, i32 5, !dbg !4175
  store %struct.MaskSpline* %call332, %struct.MaskSpline** %orig_spline333, align 8, !dbg !4176
  br label %if.end334, !dbg !4177

if.end334:                                        ; preds = %if.then330, %if.then326
  store i32 0, i32* %i, align 4, !dbg !4178
  br label %for.cond, !dbg !4180

for.cond:                                         ; preds = %for.inc, %if.end334
  %221 = load i32, i32* %i, align 4, !dbg !4181
  %222 = load %struct.SlidePointData*, %struct.SlidePointData** %data, align 8, !dbg !4183
  %spline335 = getelementptr inbounds %struct.SlidePointData, %struct.SlidePointData* %222, i32 0, i32 4, !dbg !4184
  %223 = load %struct.MaskSpline*, %struct.MaskSpline** %spline335, align 8, !dbg !4184
  %tot_point336 = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %223, i32 0, i32 5, !dbg !4185
  %224 = load i32, i32* %tot_point336, align 4, !dbg !4185
  %cmp337 = icmp slt i32 %221, %224, !dbg !4186
  br i1 %cmp337, label %for.body, label %for.end, !dbg !4187

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.MaskSplinePoint** %point339, metadata !4188, metadata !DIExpression()), !dbg !4190
  %225 = load %struct.SlidePointData*, %struct.SlidePointData** %data, align 8, !dbg !4191
  %spline340 = getelementptr inbounds %struct.SlidePointData, %struct.SlidePointData* %225, i32 0, i32 4, !dbg !4192
  %226 = load %struct.MaskSpline*, %struct.MaskSpline** %spline340, align 8, !dbg !4192
  %points341 = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %226, i32 0, i32 6, !dbg !4193
  %227 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %points341, align 8, !dbg !4193
  %228 = load i32, i32* %i, align 4, !dbg !4194
  %idxprom342 = sext i32 %228 to i64, !dbg !4191
  %arrayidx343 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %227, i64 %idxprom342, !dbg !4191
  store %struct.MaskSplinePoint* %arrayidx343, %struct.MaskSplinePoint** %point339, align 8, !dbg !4190
  %229 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point339, align 8, !dbg !4195
  %bezt344 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %229, i32 0, i32 0, !dbg !4196
  %vec345 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %bezt344, i32 0, i32 0, !dbg !4197
  %arrayidx346 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec345, i64 0, i64 0, !dbg !4195
  %arraydecay347 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx346, i64 0, i64 0, !dbg !4195
  %arraydecay348 = getelementptr inbounds [2 x float], [2 x float]* %delta, i64 0, i64 0, !dbg !4198
  call void @add_v2_v2(float* %arraydecay347, float* %arraydecay348), !dbg !4199
  %230 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point339, align 8, !dbg !4200
  %bezt349 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %230, i32 0, i32 0, !dbg !4201
  %vec350 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %bezt349, i32 0, i32 0, !dbg !4202
  %arrayidx351 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec350, i64 0, i64 1, !dbg !4200
  %arraydecay352 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx351, i64 0, i64 0, !dbg !4200
  %arraydecay353 = getelementptr inbounds [2 x float], [2 x float]* %delta, i64 0, i64 0, !dbg !4203
  call void @add_v2_v2(float* %arraydecay352, float* %arraydecay353), !dbg !4204
  %231 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point339, align 8, !dbg !4205
  %bezt354 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %231, i32 0, i32 0, !dbg !4206
  %vec355 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %bezt354, i32 0, i32 0, !dbg !4207
  %arrayidx356 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec355, i64 0, i64 2, !dbg !4205
  %arraydecay357 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx356, i64 0, i64 0, !dbg !4205
  %arraydecay358 = getelementptr inbounds [2 x float], [2 x float]* %delta, i64 0, i64 0, !dbg !4208
  call void @add_v2_v2(float* %arraydecay357, float* %arraydecay358), !dbg !4209
  br label %for.inc, !dbg !4210

for.inc:                                          ; preds = %for.body
  %232 = load i32, i32* %i, align 4, !dbg !4211
  %inc = add nsw i32 %232, 1, !dbg !4211
  store i32 %inc, i32* %i, align 4, !dbg !4211
  br label %for.cond, !dbg !4212, !llvm.loop !4213

for.end:                                          ; preds = %for.cond
  br label %if.end359, !dbg !4215

if.end359:                                        ; preds = %for.end, %if.else322
  br label %if.end360

if.end360:                                        ; preds = %if.end359, %if.end321
  br label %if.end361

if.end361:                                        ; preds = %if.end360, %if.then147
  br label %if.end362

if.end362:                                        ; preds = %if.end361, %if.end142
  %233 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4216
  %234 = load %struct.SlidePointData*, %struct.SlidePointData** %data, align 8, !dbg !4217
  %mask = getelementptr inbounds %struct.SlidePointData, %struct.SlidePointData* %234, i32 0, i32 2, !dbg !4218
  %235 = load %struct.Mask*, %struct.Mask** %mask, align 8, !dbg !4218
  %236 = bitcast %struct.Mask* %235 to i8*, !dbg !4217
  call void @WM_event_add_notifier(%struct.bContext* %233, i32 352321537, i8* %236), !dbg !4219
  %237 = load %struct.SlidePointData*, %struct.SlidePointData** %data, align 8, !dbg !4220
  %mask363 = getelementptr inbounds %struct.SlidePointData, %struct.SlidePointData* %237, i32 0, i32 2, !dbg !4221
  %238 = load %struct.Mask*, %struct.Mask** %mask363, align 8, !dbg !4221
  %id = getelementptr inbounds %struct.Mask, %struct.Mask* %238, i32 0, i32 0, !dbg !4222
  call void @DAG_id_tag_update(%struct.ID* %id, i16 signext 0), !dbg !4223
  br label %sw.epilog, !dbg !4224

sw.bb364:                                         ; preds = %entry, %entry
  %239 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !4225
  %type365 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %239, i32 0, i32 2, !dbg !4227
  %240 = load i16, i16* %type365, align 8, !dbg !4227
  %conv366 = sext i16 %240 to i32, !dbg !4225
  %241 = load %struct.SlidePointData*, %struct.SlidePointData** %data, align 8, !dbg !4228
  %event_invoke_type = getelementptr inbounds %struct.SlidePointData, %struct.SlidePointData* %241, i32 0, i32 0, !dbg !4229
  %242 = load i16, i16* %event_invoke_type, align 8, !dbg !4229
  %conv367 = sext i16 %242 to i32, !dbg !4228
  %cmp368 = icmp eq i32 %conv366, %conv367, !dbg !4230
  br i1 %cmp368, label %land.lhs.true370, label %if.else429, !dbg !4231

land.lhs.true370:                                 ; preds = %sw.bb364
  %243 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !4232
  %val371 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %243, i32 0, i32 3, !dbg !4233
  %244 = load i16, i16* %val371, align 2, !dbg !4233
  %conv372 = sext i16 %244 to i32, !dbg !4232
  %cmp373 = icmp eq i32 %conv372, 2, !dbg !4234
  br i1 %cmp373, label %if.then375, label %if.else429, !dbg !4235

if.then375:                                       ; preds = %land.lhs.true370
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene, metadata !4236, metadata !DIExpression()), !dbg !4240
  %245 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4241
  %call376 = call %struct.Scene* @CTX_data_scene(%struct.bContext* %245), !dbg !4242
  store %struct.Scene* %call376, %struct.Scene** %scene, align 8, !dbg !4240
  %246 = load %struct.SlidePointData*, %struct.SlidePointData** %data, align 8, !dbg !4243
  %action377 = getelementptr inbounds %struct.SlidePointData, %struct.SlidePointData* %246, i32 0, i32 1, !dbg !4245
  %247 = load i32, i32* %action377, align 4, !dbg !4245
  %cmp378 = icmp eq i32 %247, 3, !dbg !4246
  br i1 %cmp378, label %land.rhs, label %land.end, !dbg !4247

land.rhs:                                         ; preds = %if.then375
  %248 = load %struct.SlidePointData*, %struct.SlidePointData** %data, align 8, !dbg !4248
  %uw380 = getelementptr inbounds %struct.SlidePointData, %struct.SlidePointData* %248, i32 0, i32 7, !dbg !4249
  %249 = load %struct.MaskSplinePointUW*, %struct.MaskSplinePointUW** %uw380, align 8, !dbg !4249
  %tobool381 = icmp ne %struct.MaskSplinePointUW* %249, null, !dbg !4247
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.then375
  %250 = phi i1 [ false, %if.then375 ], [ %tobool381, %land.rhs ], !dbg !4250
  %land.ext = zext i1 %250 to i32, !dbg !4247
  %cmp382 = icmp eq i32 %land.ext, 0, !dbg !4251
  br i1 %cmp382, label %if.then384, label %if.end395, !dbg !4252

if.then384:                                       ; preds = %land.end
  %251 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !4253
  %tobool385 = icmp ne %struct.Scene* %251, null, !dbg !4253
  br i1 %tobool385, label %cond.true386, label %cond.false389, !dbg !4256

cond.true386:                                     ; preds = %if.then384
  %252 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !4253
  %toolsettings = getelementptr inbounds %struct.Scene, %struct.Scene* %252, i32 0, i32 20, !dbg !4253
  %253 = load %struct.ToolSettings*, %struct.ToolSettings** %toolsettings, align 8, !dbg !4253
  %autokey_mode = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %253, i32 0, i32 21, !dbg !4253
  %254 = load i16, i16* %autokey_mode, align 8, !dbg !4253
  %conv387 = sext i16 %254 to i32, !dbg !4253
  %and = and i32 %conv387, 1, !dbg !4253
  %tobool388 = icmp ne i32 %and, 0, !dbg !4253
  br i1 %tobool388, label %if.then393, label %if.end394, !dbg !4253

cond.false389:                                    ; preds = %if.then384
  %255 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 91), align 8, !dbg !4253
  %conv390 = sext i16 %255 to i32, !dbg !4253
  %and391 = and i32 %conv390, 1, !dbg !4253
  %tobool392 = icmp ne i32 %and391, 0, !dbg !4253
  br i1 %tobool392, label %if.then393, label %if.end394, !dbg !4256

if.then393:                                       ; preds = %cond.false389, %cond.true386
  %256 = load %struct.SlidePointData*, %struct.SlidePointData** %data, align 8, !dbg !4257
  %masklay = getelementptr inbounds %struct.SlidePointData, %struct.SlidePointData* %256, i32 0, i32 3, !dbg !4259
  %257 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay, align 8, !dbg !4259
  %258 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !4260
  %r = getelementptr inbounds %struct.Scene, %struct.Scene* %258, i32 0, i32 22, !dbg !4260
  %cfra = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r, i32 0, i32 5, !dbg !4260
  %259 = load i32, i32* %cfra, align 8, !dbg !4260
  call void @ED_mask_layer_shape_auto_key(%struct.MaskLayer* %257, i32 %259), !dbg !4261
  br label %if.end394, !dbg !4262

if.end394:                                        ; preds = %if.then393, %cond.false389, %cond.true386
  br label %if.end395, !dbg !4263

if.end395:                                        ; preds = %if.end394, %land.end
  %260 = load %struct.SlidePointData*, %struct.SlidePointData** %data, align 8, !dbg !4264
  %is_sliding_new_point396 = getelementptr inbounds %struct.SlidePointData, %struct.SlidePointData* %260, i32 0, i32 17, !dbg !4266
  %261 = load i8, i8* %is_sliding_new_point396, align 8, !dbg !4266
  %tobool397 = icmp ne i8 %261, 0, !dbg !4264
  br i1 %tobool397, label %if.then398, label %if.end424, !dbg !4267

if.then398:                                       ; preds = %if.end395
  call void @llvm.dbg.declare(metadata %struct.BezTriple** %bezt399, metadata !4268, metadata !DIExpression()), !dbg !4270
  %262 = load %struct.SlidePointData*, %struct.SlidePointData** %data, align 8, !dbg !4271
  %point400 = getelementptr inbounds %struct.SlidePointData, %struct.SlidePointData* %262, i32 0, i32 6, !dbg !4272
  %263 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point400, align 8, !dbg !4272
  %bezt401 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %263, i32 0, i32 0, !dbg !4273
  store %struct.BezTriple* %bezt401, %struct.BezTriple** %bezt399, align 8, !dbg !4270
  %264 = load %struct.BezTriple*, %struct.BezTriple** %bezt399, align 8, !dbg !4274
  %vec402 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %264, i32 0, i32 0, !dbg !4276
  %arrayidx403 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec402, i64 0, i64 0, !dbg !4274
  %arraydecay404 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx403, i64 0, i64 0, !dbg !4274
  %265 = load %struct.BezTriple*, %struct.BezTriple** %bezt399, align 8, !dbg !4277
  %vec405 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %265, i32 0, i32 0, !dbg !4278
  %arrayidx406 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec405, i64 0, i64 1, !dbg !4277
  %arraydecay407 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx406, i64 0, i64 0, !dbg !4277
  %call408 = call float @len_squared_v2v2(float* %arraydecay404, float* %arraydecay407), !dbg !4279
  %cmp409 = fcmp olt float %call408, 0x3E80000000000000, !dbg !4280
  br i1 %cmp409, label %if.then411, label %if.end412, !dbg !4281

if.then411:                                       ; preds = %if.then398
  %266 = load %struct.BezTriple*, %struct.BezTriple** %bezt399, align 8, !dbg !4282
  %h1 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %266, i32 0, i32 5, !dbg !4284
  store i8 2, i8* %h1, align 1, !dbg !4285
  br label %if.end412, !dbg !4286

if.end412:                                        ; preds = %if.then411, %if.then398
  %267 = load %struct.BezTriple*, %struct.BezTriple** %bezt399, align 8, !dbg !4287
  %vec413 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %267, i32 0, i32 0, !dbg !4289
  %arrayidx414 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec413, i64 0, i64 2, !dbg !4287
  %arraydecay415 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx414, i64 0, i64 0, !dbg !4287
  %268 = load %struct.BezTriple*, %struct.BezTriple** %bezt399, align 8, !dbg !4290
  %vec416 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %268, i32 0, i32 0, !dbg !4291
  %arrayidx417 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec416, i64 0, i64 1, !dbg !4290
  %arraydecay418 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx417, i64 0, i64 0, !dbg !4290
  %call419 = call float @len_squared_v2v2(float* %arraydecay415, float* %arraydecay418), !dbg !4292
  %cmp420 = fcmp olt float %call419, 0x3E80000000000000, !dbg !4293
  br i1 %cmp420, label %if.then422, label %if.end423, !dbg !4294

if.then422:                                       ; preds = %if.end412
  %269 = load %struct.BezTriple*, %struct.BezTriple** %bezt399, align 8, !dbg !4295
  %h2 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %269, i32 0, i32 6, !dbg !4297
  store i8 2, i8* %h2, align 2, !dbg !4298
  br label %if.end423, !dbg !4299

if.end423:                                        ; preds = %if.then422, %if.end412
  br label %if.end424, !dbg !4300

if.end424:                                        ; preds = %if.end423, %if.end395
  %270 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4301
  %271 = load %struct.SlidePointData*, %struct.SlidePointData** %data, align 8, !dbg !4302
  %mask425 = getelementptr inbounds %struct.SlidePointData, %struct.SlidePointData* %271, i32 0, i32 2, !dbg !4303
  %272 = load %struct.Mask*, %struct.Mask** %mask425, align 8, !dbg !4303
  %273 = bitcast %struct.Mask* %272 to i8*, !dbg !4302
  call void @WM_event_add_notifier(%struct.bContext* %270, i32 352321537, i8* %273), !dbg !4304
  %274 = load %struct.SlidePointData*, %struct.SlidePointData** %data, align 8, !dbg !4305
  %mask426 = getelementptr inbounds %struct.SlidePointData, %struct.SlidePointData* %274, i32 0, i32 2, !dbg !4306
  %275 = load %struct.Mask*, %struct.Mask** %mask426, align 8, !dbg !4306
  %id427 = getelementptr inbounds %struct.Mask, %struct.Mask* %275, i32 0, i32 0, !dbg !4307
  call void @DAG_id_tag_update(%struct.ID* %id427, i16 signext 0), !dbg !4308
  %276 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !4309
  %customdata428 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %276, i32 0, i32 5, !dbg !4310
  %277 = load i8*, i8** %customdata428, align 8, !dbg !4310
  %278 = bitcast i8* %277 to %struct.SlidePointData*, !dbg !4309
  call void @free_slide_point_data(%struct.SlidePointData* %278), !dbg !4311
  store i32 4, i32* %retval, align 4, !dbg !4312
  br label %return, !dbg !4312

if.else429:                                       ; preds = %land.lhs.true370, %sw.bb364
  %279 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !4313
  %type430 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %279, i32 0, i32 2, !dbg !4315
  %280 = load i16, i16* %type430, align 8, !dbg !4315
  %conv431 = sext i16 %280 to i32, !dbg !4313
  %281 = load %struct.SlidePointData*, %struct.SlidePointData** %data, align 8, !dbg !4316
  %event_invoke_type432 = getelementptr inbounds %struct.SlidePointData, %struct.SlidePointData* %281, i32 0, i32 0, !dbg !4317
  %282 = load i16, i16* %event_invoke_type432, align 8, !dbg !4317
  %conv433 = sext i16 %282 to i32, !dbg !4316
  %cmp434 = icmp ne i32 %conv431, %conv433, !dbg !4318
  br i1 %cmp434, label %land.lhs.true436, label %if.else442, !dbg !4319

land.lhs.true436:                                 ; preds = %if.else429
  %283 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !4320
  %val437 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %283, i32 0, i32 3, !dbg !4321
  %284 = load i16, i16* %val437, align 2, !dbg !4321
  %conv438 = sext i16 %284 to i32, !dbg !4320
  %cmp439 = icmp eq i32 %conv438, 1, !dbg !4322
  br i1 %cmp439, label %if.then441, label %if.else442, !dbg !4323

if.then441:                                       ; preds = %land.lhs.true436
  br label %if.end443, !dbg !4324

if.else442:                                       ; preds = %land.lhs.true436, %if.else429
  br label %sw.epilog, !dbg !4326

if.end443:                                        ; preds = %if.then441
  br label %if.end444

if.end444:                                        ; preds = %if.end443
  br label %sw.bb445, !dbg !4328

sw.bb445:                                         ; preds = %entry, %if.end444
  %285 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !4329
  %customdata446 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %285, i32 0, i32 5, !dbg !4330
  %286 = load i8*, i8** %customdata446, align 8, !dbg !4330
  %287 = bitcast i8* %286 to %struct.SlidePointData*, !dbg !4329
  call void @cancel_slide_point(%struct.SlidePointData* %287), !dbg !4331
  %288 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4332
  %289 = load %struct.SlidePointData*, %struct.SlidePointData** %data, align 8, !dbg !4333
  %mask447 = getelementptr inbounds %struct.SlidePointData, %struct.SlidePointData* %289, i32 0, i32 2, !dbg !4334
  %290 = load %struct.Mask*, %struct.Mask** %mask447, align 8, !dbg !4334
  %291 = bitcast %struct.Mask* %290 to i8*, !dbg !4333
  call void @WM_event_add_notifier(%struct.bContext* %288, i32 352321537, i8* %291), !dbg !4335
  %292 = load %struct.SlidePointData*, %struct.SlidePointData** %data, align 8, !dbg !4336
  %mask448 = getelementptr inbounds %struct.SlidePointData, %struct.SlidePointData* %292, i32 0, i32 2, !dbg !4337
  %293 = load %struct.Mask*, %struct.Mask** %mask448, align 8, !dbg !4337
  %id449 = getelementptr inbounds %struct.Mask, %struct.Mask* %293, i32 0, i32 0, !dbg !4338
  call void @DAG_id_tag_update(%struct.ID* %id449, i16 signext 0), !dbg !4339
  %294 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !4340
  %customdata450 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %294, i32 0, i32 5, !dbg !4341
  %295 = load i8*, i8** %customdata450, align 8, !dbg !4341
  %296 = bitcast i8* %295 to %struct.SlidePointData*, !dbg !4340
  call void @free_slide_point_data(%struct.SlidePointData* %296), !dbg !4342
  store i32 2, i32* %retval, align 4, !dbg !4343
  br label %return, !dbg !4343

sw.epilog:                                        ; preds = %entry, %if.else442, %if.end362
  store i32 1, i32* %retval, align 4, !dbg !4344
  br label %return, !dbg !4344

return:                                           ; preds = %sw.epilog, %sw.bb445, %if.end424
  %297 = load i32, i32* %retval, align 4, !dbg !4345
  ret i32 %297, !dbg !4345
}

declare dso_local %struct.PropertyRNA* @RNA_def_boolean(i8*, i8*, i32, i8*, i8*) #2

declare dso_local void @RNA_def_property_flag(%struct.PropertyRNA*, i32) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @MASK_OT_slide_spline_curvature(%struct.wmOperatorType* %ot) #0 !dbg !4346 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !4347, metadata !DIExpression()), !dbg !4348
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4349
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !4350
  store i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.23, i64 0, i64 0), i8** %name, align 8, !dbg !4351
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4352
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 3, !dbg !4353
  store i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.24, i64 0, i64 0), i8** %description, align 8, !dbg !4354
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4355
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 1, !dbg !4356
  store i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.25, i64 0, i64 0), i8** %idname, align 8, !dbg !4357
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4358
  %invoke = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 6, !dbg !4359
  store i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)* @slide_spline_curvature_invoke, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)** %invoke, align 8, !dbg !4360
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4361
  %modal = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 8, !dbg !4362
  store i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)* @slide_spline_curvature_modal, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)** %modal, align 8, !dbg !4363
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4364
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 9, !dbg !4365
  store i32 (%struct.bContext*)* @ED_operator_mask, i32 (%struct.bContext*)** %poll, align 8, !dbg !4366
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4367
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 19, !dbg !4368
  store i16 3, i16* %flag, align 8, !dbg !4369
  ret void, !dbg !4370
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @slide_spline_curvature_invoke(%struct.bContext* %C, %struct.wmOperator* %op, %struct.wmEvent* %event) #0 !dbg !4371 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %event.addr = alloca %struct.wmEvent*, align 8
  %mask = alloca %struct.Mask*, align 8
  %slide_data = alloca %struct.SlideSplineCurvatureData*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !4372, metadata !DIExpression()), !dbg !4373
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !4374, metadata !DIExpression()), !dbg !4375
  store %struct.wmEvent* %event, %struct.wmEvent** %event.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %event.addr, metadata !4376, metadata !DIExpression()), !dbg !4377
  call void @llvm.dbg.declare(metadata %struct.Mask** %mask, metadata !4378, metadata !DIExpression()), !dbg !4379
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4380
  %call = call %struct.Mask* @CTX_data_edit_mask(%struct.bContext* %0), !dbg !4381
  store %struct.Mask* %call, %struct.Mask** %mask, align 8, !dbg !4379
  call void @llvm.dbg.declare(metadata %struct.SlideSplineCurvatureData** %slide_data, metadata !4382, metadata !DIExpression()), !dbg !4383
  %1 = load %struct.Mask*, %struct.Mask** %mask, align 8, !dbg !4384
  %cmp = icmp eq %struct.Mask* %1, null, !dbg !4386
  br i1 %cmp, label %if.then, label %if.end, !dbg !4387

if.then:                                          ; preds = %entry
  store i32 2, i32* %retval, align 4, !dbg !4388
  br label %return, !dbg !4388

if.end:                                           ; preds = %entry
  %2 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4390
  %3 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !4392
  %call1 = call zeroext i8 @slide_spline_curvature_check(%struct.bContext* %2, %struct.wmEvent* %3), !dbg !4393
  %tobool = icmp ne i8 %call1, 0, !dbg !4393
  br i1 %tobool, label %if.end3, label %if.then2, !dbg !4394

if.then2:                                         ; preds = %if.end
  store i32 8, i32* %retval, align 4, !dbg !4395
  br label %return, !dbg !4395

if.end3:                                          ; preds = %if.end
  %4 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4397
  %5 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !4398
  %call4 = call %struct.SlideSplineCurvatureData* @slide_spline_curvature_customdata(%struct.bContext* %4, %struct.wmEvent* %5), !dbg !4399
  store %struct.SlideSplineCurvatureData* %call4, %struct.SlideSplineCurvatureData** %slide_data, align 8, !dbg !4400
  %6 = load %struct.SlideSplineCurvatureData*, %struct.SlideSplineCurvatureData** %slide_data, align 8, !dbg !4401
  %cmp5 = icmp ne %struct.SlideSplineCurvatureData* %6, null, !dbg !4403
  br i1 %cmp5, label %if.then6, label %if.end8, !dbg !4404

if.then6:                                         ; preds = %if.end3
  %7 = load %struct.SlideSplineCurvatureData*, %struct.SlideSplineCurvatureData** %slide_data, align 8, !dbg !4405
  %8 = bitcast %struct.SlideSplineCurvatureData* %7 to i8*, !dbg !4405
  %9 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !4407
  %customdata = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %9, i32 0, i32 5, !dbg !4408
  store i8* %8, i8** %customdata, align 8, !dbg !4409
  %10 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4410
  %11 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !4411
  %call7 = call %struct.wmEventHandler* @WM_event_add_modal_handler(%struct.bContext* %10, %struct.wmOperator* %11), !dbg !4412
  %12 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4413
  %13 = load %struct.Mask*, %struct.Mask** %mask, align 8, !dbg !4414
  %14 = bitcast %struct.Mask* %13 to i8*, !dbg !4414
  call void @WM_event_add_notifier(%struct.bContext* %12, i32 358219776, i8* %14), !dbg !4415
  store i32 1, i32* %retval, align 4, !dbg !4416
  br label %return, !dbg !4416

if.end8:                                          ; preds = %if.end3
  store i32 8, i32* %retval, align 4, !dbg !4417
  br label %return, !dbg !4417

return:                                           ; preds = %if.end8, %if.then6, %if.then2, %if.then
  %15 = load i32, i32* %retval, align 4, !dbg !4418
  ret i32 %15, !dbg !4418
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @slide_spline_curvature_modal(%struct.bContext* %C, %struct.wmOperator* %op, %struct.wmEvent* %event) #0 !dbg !4419 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %event.addr = alloca %struct.wmEvent*, align 8
  %scene = alloca %struct.Scene*, align 8
  %margin = alloca float, align 4
  %slide_data = alloca %struct.SlideSplineCurvatureData*, align 8
  %u = alloca float, align 4
  %B = alloca [2 x float], align 4
  %mouse_coord = alloca [2 x float], align 4
  %delta = alloca [2 x float], align 4
  %oldP2 = alloca [2 x float], align 4
  %need_restore_P2 = alloca i8, align 1
  %solution = alloca [2 x float], align 4
  %x = alloca float, align 4
  %weight = alloca float, align 4
  %oldP1 = alloca [2 x float], align 4
  %need_restore_P1 = alloca i8, align 1
  %solution186 = alloca [2 x float], align 4
  %x187 = alloca float, align 4
  %weight192 = alloca float, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !4420, metadata !DIExpression()), !dbg !4421
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !4422, metadata !DIExpression()), !dbg !4423
  store %struct.wmEvent* %event, %struct.wmEvent** %event.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %event.addr, metadata !4424, metadata !DIExpression()), !dbg !4425
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene, metadata !4426, metadata !DIExpression()), !dbg !4427
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4428
  %call = call %struct.Scene* @CTX_data_scene(%struct.bContext* %0), !dbg !4429
  store %struct.Scene* %call, %struct.Scene** %scene, align 8, !dbg !4427
  call void @llvm.dbg.declare(metadata float* %margin, metadata !4430, metadata !DIExpression()), !dbg !4431
  store float 0x3FC99999A0000000, float* %margin, align 4, !dbg !4431
  call void @llvm.dbg.declare(metadata %struct.SlideSplineCurvatureData** %slide_data, metadata !4432, metadata !DIExpression()), !dbg !4433
  %1 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !4434
  %customdata = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %1, i32 0, i32 5, !dbg !4435
  %2 = load i8*, i8** %customdata, align 8, !dbg !4435
  %3 = bitcast i8* %2 to %struct.SlideSplineCurvatureData*, !dbg !4436
  store %struct.SlideSplineCurvatureData* %3, %struct.SlideSplineCurvatureData** %slide_data, align 8, !dbg !4433
  call void @llvm.dbg.declare(metadata float* %u, metadata !4437, metadata !DIExpression()), !dbg !4438
  %4 = load %struct.SlideSplineCurvatureData*, %struct.SlideSplineCurvatureData** %slide_data, align 8, !dbg !4439
  %u1 = getelementptr inbounds %struct.SlideSplineCurvatureData, %struct.SlideSplineCurvatureData* %4, i32 0, i32 5, !dbg !4440
  %5 = load float, float* %u1, align 8, !dbg !4440
  store float %5, float* %u, align 4, !dbg !4438
  %6 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !4441
  %type = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %6, i32 0, i32 2, !dbg !4442
  %7 = load i16, i16* %type, align 8, !dbg !4442
  %conv = sext i16 %7 to i32, !dbg !4441
  switch i32 %conv, label %sw.epilog [
    i32 217, label %sw.bb
    i32 216, label %sw.bb
    i32 212, label %sw.bb
    i32 215, label %sw.bb
    i32 4, label %sw.bb100
    i32 1, label %sw.bb254
    i32 3, label %sw.bb254
    i32 218, label %sw.bb278
  ], !dbg !4443

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry
  %8 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !4444
  %type2 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %8, i32 0, i32 2, !dbg !4444
  %9 = load i16, i16* %type2, align 8, !dbg !4444
  %conv3 = sext i16 %9 to i32, !dbg !4444
  %cmp = icmp eq i32 %conv3, 217, !dbg !4444
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !4444

lor.lhs.false:                                    ; preds = %sw.bb
  %10 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !4444
  %type5 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %10, i32 0, i32 2, !dbg !4444
  %11 = load i16, i16* %type5, align 8, !dbg !4444
  %conv6 = sext i16 %11 to i32, !dbg !4444
  %cmp7 = icmp eq i32 %conv6, 216, !dbg !4444
  br i1 %cmp7, label %if.then, label %if.end, !dbg !4447

if.then:                                          ; preds = %lor.lhs.false, %sw.bb
  %12 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !4448
  %val = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %12, i32 0, i32 3, !dbg !4450
  %13 = load i16, i16* %val, align 2, !dbg !4450
  %conv9 = sext i16 %13 to i32, !dbg !4448
  %cmp10 = icmp eq i32 %conv9, 1, !dbg !4451
  %conv11 = zext i1 %cmp10 to i32, !dbg !4451
  %conv12 = trunc i32 %conv11 to i8, !dbg !4452
  %14 = load %struct.SlideSplineCurvatureData*, %struct.SlideSplineCurvatureData** %slide_data, align 8, !dbg !4453
  %accurate = getelementptr inbounds %struct.SlideSplineCurvatureData, %struct.SlideSplineCurvatureData* %14, i32 0, i32 6, !dbg !4454
  store i8 %conv12, i8* %accurate, align 4, !dbg !4455
  br label %if.end, !dbg !4456

if.end:                                           ; preds = %if.then, %lor.lhs.false
  %15 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !4457
  %type13 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %15, i32 0, i32 2, !dbg !4457
  %16 = load i16, i16* %type13, align 8, !dbg !4457
  %conv14 = sext i16 %16 to i32, !dbg !4457
  %cmp15 = icmp eq i32 %conv14, 212, !dbg !4457
  br i1 %cmp15, label %if.then22, label %lor.lhs.false17, !dbg !4457

lor.lhs.false17:                                  ; preds = %if.end
  %17 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !4457
  %type18 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %17, i32 0, i32 2, !dbg !4457
  %18 = load i16, i16* %type18, align 8, !dbg !4457
  %conv19 = sext i16 %18 to i32, !dbg !4457
  %cmp20 = icmp eq i32 %conv19, 215, !dbg !4457
  br i1 %cmp20, label %if.then22, label %if.end99, !dbg !4459

if.then22:                                        ; preds = %lor.lhs.false17, %if.end
  %19 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !4460
  %val23 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %19, i32 0, i32 3, !dbg !4463
  %20 = load i16, i16* %val23, align 2, !dbg !4463
  %conv24 = sext i16 %20 to i32, !dbg !4460
  %cmp25 = icmp eq i32 %conv24, 1, !dbg !4464
  br i1 %cmp25, label %if.then27, label %if.else, !dbg !4465

if.then27:                                        ; preds = %if.then22
  %21 = load %struct.SlideSplineCurvatureData*, %struct.SlideSplineCurvatureData** %slide_data, align 8, !dbg !4466
  %adjust_bezt = getelementptr inbounds %struct.SlideSplineCurvatureData, %struct.SlideSplineCurvatureData* %21, i32 0, i32 7, !dbg !4468
  %22 = load %struct.BezTriple*, %struct.BezTriple** %adjust_bezt, align 8, !dbg !4468
  %h2 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %22, i32 0, i32 6, !dbg !4469
  store i8 0, i8* %h2, align 2, !dbg !4470
  %23 = load %struct.SlideSplineCurvatureData*, %struct.SlideSplineCurvatureData** %slide_data, align 8, !dbg !4471
  %adjust_bezt28 = getelementptr inbounds %struct.SlideSplineCurvatureData, %struct.SlideSplineCurvatureData* %23, i32 0, i32 7, !dbg !4472
  %24 = load %struct.BezTriple*, %struct.BezTriple** %adjust_bezt28, align 8, !dbg !4472
  %h1 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %24, i32 0, i32 5, !dbg !4473
  store i8 0, i8* %h1, align 1, !dbg !4474
  %25 = load float, float* %u, align 4, !dbg !4475
  %cmp29 = fcmp ogt float %25, 0x3FC99999A0000000, !dbg !4477
  br i1 %cmp29, label %land.lhs.true, label %lor.lhs.false33, !dbg !4478

land.lhs.true:                                    ; preds = %if.then27
  %26 = load float, float* %u, align 4, !dbg !4479
  %cmp31 = fcmp olt float %26, 5.000000e-01, !dbg !4480
  br i1 %cmp31, label %if.then39, label %lor.lhs.false33, !dbg !4481

lor.lhs.false33:                                  ; preds = %land.lhs.true, %if.then27
  %27 = load float, float* %u, align 4, !dbg !4482
  %cmp34 = fcmp oge float %27, 5.000000e-01, !dbg !4483
  br i1 %cmp34, label %land.lhs.true36, label %if.end43, !dbg !4484

land.lhs.true36:                                  ; preds = %lor.lhs.false33
  %28 = load float, float* %u, align 4, !dbg !4485
  %cmp37 = fcmp olt float %28, 0x3FE99999A0000000, !dbg !4486
  br i1 %cmp37, label %if.then39, label %if.end43, !dbg !4487

if.then39:                                        ; preds = %land.lhs.true36, %land.lhs.true
  %29 = load %struct.SlideSplineCurvatureData*, %struct.SlideSplineCurvatureData** %slide_data, align 8, !dbg !4488
  %other_bezt = getelementptr inbounds %struct.SlideSplineCurvatureData, %struct.SlideSplineCurvatureData* %29, i32 0, i32 8, !dbg !4490
  %30 = load %struct.BezTriple*, %struct.BezTriple** %other_bezt, align 8, !dbg !4490
  %h240 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %30, i32 0, i32 6, !dbg !4491
  store i8 0, i8* %h240, align 2, !dbg !4492
  %31 = load %struct.SlideSplineCurvatureData*, %struct.SlideSplineCurvatureData** %slide_data, align 8, !dbg !4493
  %other_bezt41 = getelementptr inbounds %struct.SlideSplineCurvatureData, %struct.SlideSplineCurvatureData* %31, i32 0, i32 8, !dbg !4494
  %32 = load %struct.BezTriple*, %struct.BezTriple** %other_bezt41, align 8, !dbg !4494
  %h142 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %32, i32 0, i32 5, !dbg !4495
  store i8 0, i8* %h142, align 1, !dbg !4496
  br label %if.end43, !dbg !4497

if.end43:                                         ; preds = %if.then39, %land.lhs.true36, %lor.lhs.false33
  br label %if.end64, !dbg !4498

if.else:                                          ; preds = %if.then22
  %33 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !4499
  %val44 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %33, i32 0, i32 3, !dbg !4501
  %34 = load i16, i16* %val44, align 2, !dbg !4501
  %conv45 = sext i16 %34 to i32, !dbg !4499
  %cmp46 = icmp eq i32 %conv45, 2, !dbg !4502
  br i1 %cmp46, label %if.then48, label %if.end63, !dbg !4503

if.then48:                                        ; preds = %if.else
  %35 = load %struct.SlideSplineCurvatureData*, %struct.SlideSplineCurvatureData** %slide_data, align 8, !dbg !4504
  %bezt_backup = getelementptr inbounds %struct.SlideSplineCurvatureData, %struct.SlideSplineCurvatureData* %35, i32 0, i32 9, !dbg !4506
  %h149 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %bezt_backup, i32 0, i32 5, !dbg !4507
  %36 = load i8, i8* %h149, align 1, !dbg !4507
  %37 = load %struct.SlideSplineCurvatureData*, %struct.SlideSplineCurvatureData** %slide_data, align 8, !dbg !4508
  %adjust_bezt50 = getelementptr inbounds %struct.SlideSplineCurvatureData, %struct.SlideSplineCurvatureData* %37, i32 0, i32 7, !dbg !4509
  %38 = load %struct.BezTriple*, %struct.BezTriple** %adjust_bezt50, align 8, !dbg !4509
  %h151 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %38, i32 0, i32 5, !dbg !4510
  store i8 %36, i8* %h151, align 1, !dbg !4511
  %39 = load %struct.SlideSplineCurvatureData*, %struct.SlideSplineCurvatureData** %slide_data, align 8, !dbg !4512
  %bezt_backup52 = getelementptr inbounds %struct.SlideSplineCurvatureData, %struct.SlideSplineCurvatureData* %39, i32 0, i32 9, !dbg !4513
  %h253 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %bezt_backup52, i32 0, i32 6, !dbg !4514
  %40 = load i8, i8* %h253, align 2, !dbg !4514
  %41 = load %struct.SlideSplineCurvatureData*, %struct.SlideSplineCurvatureData** %slide_data, align 8, !dbg !4515
  %adjust_bezt54 = getelementptr inbounds %struct.SlideSplineCurvatureData, %struct.SlideSplineCurvatureData* %41, i32 0, i32 7, !dbg !4516
  %42 = load %struct.BezTriple*, %struct.BezTriple** %adjust_bezt54, align 8, !dbg !4516
  %h255 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %42, i32 0, i32 6, !dbg !4517
  store i8 %40, i8* %h255, align 2, !dbg !4518
  %43 = load %struct.SlideSplineCurvatureData*, %struct.SlideSplineCurvatureData** %slide_data, align 8, !dbg !4519
  %other_bezt_backup = getelementptr inbounds %struct.SlideSplineCurvatureData, %struct.SlideSplineCurvatureData* %43, i32 0, i32 10, !dbg !4520
  %h156 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %other_bezt_backup, i32 0, i32 5, !dbg !4521
  %44 = load i8, i8* %h156, align 1, !dbg !4521
  %45 = load %struct.SlideSplineCurvatureData*, %struct.SlideSplineCurvatureData** %slide_data, align 8, !dbg !4522
  %other_bezt57 = getelementptr inbounds %struct.SlideSplineCurvatureData, %struct.SlideSplineCurvatureData* %45, i32 0, i32 8, !dbg !4523
  %46 = load %struct.BezTriple*, %struct.BezTriple** %other_bezt57, align 8, !dbg !4523
  %h158 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %46, i32 0, i32 5, !dbg !4524
  store i8 %44, i8* %h158, align 1, !dbg !4525
  %47 = load %struct.SlideSplineCurvatureData*, %struct.SlideSplineCurvatureData** %slide_data, align 8, !dbg !4526
  %other_bezt_backup59 = getelementptr inbounds %struct.SlideSplineCurvatureData, %struct.SlideSplineCurvatureData* %47, i32 0, i32 10, !dbg !4527
  %h260 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %other_bezt_backup59, i32 0, i32 6, !dbg !4528
  %48 = load i8, i8* %h260, align 2, !dbg !4528
  %49 = load %struct.SlideSplineCurvatureData*, %struct.SlideSplineCurvatureData** %slide_data, align 8, !dbg !4529
  %other_bezt61 = getelementptr inbounds %struct.SlideSplineCurvatureData, %struct.SlideSplineCurvatureData* %49, i32 0, i32 8, !dbg !4530
  %50 = load %struct.BezTriple*, %struct.BezTriple** %other_bezt61, align 8, !dbg !4530
  %h262 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %50, i32 0, i32 6, !dbg !4531
  store i8 %48, i8* %h262, align 2, !dbg !4532
  br label %if.end63, !dbg !4533

if.end63:                                         ; preds = %if.then48, %if.else
  br label %if.end64

if.end64:                                         ; preds = %if.end63, %if.end43
  %51 = load float, float* %u, align 4, !dbg !4534
  %cmp65 = fcmp olt float %51, 5.000000e-01, !dbg !4536
  br i1 %cmp65, label %if.then67, label %if.else81, !dbg !4537

if.then67:                                        ; preds = %if.end64
  %52 = load %struct.SlideSplineCurvatureData*, %struct.SlideSplineCurvatureData** %slide_data, align 8, !dbg !4538
  %adjust_bezt68 = getelementptr inbounds %struct.SlideSplineCurvatureData, %struct.SlideSplineCurvatureData* %52, i32 0, i32 7, !dbg !4540
  %53 = load %struct.BezTriple*, %struct.BezTriple** %adjust_bezt68, align 8, !dbg !4540
  %vec = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %53, i32 0, i32 0, !dbg !4541
  %arrayidx = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec, i64 0, i64 0, !dbg !4538
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %arrayidx, i64 0, i64 0, !dbg !4538
  %54 = load %struct.SlideSplineCurvatureData*, %struct.SlideSplineCurvatureData** %slide_data, align 8, !dbg !4542
  %bezt_backup69 = getelementptr inbounds %struct.SlideSplineCurvatureData, %struct.SlideSplineCurvatureData* %54, i32 0, i32 9, !dbg !4543
  %vec70 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %bezt_backup69, i32 0, i32 0, !dbg !4544
  %arrayidx71 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec70, i64 0, i64 0, !dbg !4542
  %arraydecay72 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx71, i64 0, i64 0, !dbg !4542
  call void @copy_v2_v2(float* %arraydecay, float* %arraydecay72), !dbg !4545
  %55 = load %struct.SlideSplineCurvatureData*, %struct.SlideSplineCurvatureData** %slide_data, align 8, !dbg !4546
  %other_bezt73 = getelementptr inbounds %struct.SlideSplineCurvatureData, %struct.SlideSplineCurvatureData* %55, i32 0, i32 8, !dbg !4547
  %56 = load %struct.BezTriple*, %struct.BezTriple** %other_bezt73, align 8, !dbg !4547
  %vec74 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %56, i32 0, i32 0, !dbg !4548
  %arrayidx75 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec74, i64 0, i64 2, !dbg !4546
  %arraydecay76 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx75, i64 0, i64 0, !dbg !4546
  %57 = load %struct.SlideSplineCurvatureData*, %struct.SlideSplineCurvatureData** %slide_data, align 8, !dbg !4549
  %other_bezt_backup77 = getelementptr inbounds %struct.SlideSplineCurvatureData, %struct.SlideSplineCurvatureData* %57, i32 0, i32 10, !dbg !4550
  %vec78 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %other_bezt_backup77, i32 0, i32 0, !dbg !4551
  %arrayidx79 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec78, i64 0, i64 2, !dbg !4549
  %arraydecay80 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx79, i64 0, i64 0, !dbg !4549
  call void @copy_v2_v2(float* %arraydecay76, float* %arraydecay80), !dbg !4552
  br label %if.end98, !dbg !4553

if.else81:                                        ; preds = %if.end64
  %58 = load %struct.SlideSplineCurvatureData*, %struct.SlideSplineCurvatureData** %slide_data, align 8, !dbg !4554
  %adjust_bezt82 = getelementptr inbounds %struct.SlideSplineCurvatureData, %struct.SlideSplineCurvatureData* %58, i32 0, i32 7, !dbg !4556
  %59 = load %struct.BezTriple*, %struct.BezTriple** %adjust_bezt82, align 8, !dbg !4556
  %vec83 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %59, i32 0, i32 0, !dbg !4557
  %arrayidx84 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec83, i64 0, i64 2, !dbg !4554
  %arraydecay85 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx84, i64 0, i64 0, !dbg !4554
  %60 = load %struct.SlideSplineCurvatureData*, %struct.SlideSplineCurvatureData** %slide_data, align 8, !dbg !4558
  %bezt_backup86 = getelementptr inbounds %struct.SlideSplineCurvatureData, %struct.SlideSplineCurvatureData* %60, i32 0, i32 9, !dbg !4559
  %vec87 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %bezt_backup86, i32 0, i32 0, !dbg !4560
  %arrayidx88 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec87, i64 0, i64 2, !dbg !4558
  %arraydecay89 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx88, i64 0, i64 0, !dbg !4558
  call void @copy_v2_v2(float* %arraydecay85, float* %arraydecay89), !dbg !4561
  %61 = load %struct.SlideSplineCurvatureData*, %struct.SlideSplineCurvatureData** %slide_data, align 8, !dbg !4562
  %other_bezt90 = getelementptr inbounds %struct.SlideSplineCurvatureData, %struct.SlideSplineCurvatureData* %61, i32 0, i32 8, !dbg !4563
  %62 = load %struct.BezTriple*, %struct.BezTriple** %other_bezt90, align 8, !dbg !4563
  %vec91 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %62, i32 0, i32 0, !dbg !4564
  %arrayidx92 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec91, i64 0, i64 0, !dbg !4562
  %arraydecay93 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx92, i64 0, i64 0, !dbg !4562
  %63 = load %struct.SlideSplineCurvatureData*, %struct.SlideSplineCurvatureData** %slide_data, align 8, !dbg !4565
  %other_bezt_backup94 = getelementptr inbounds %struct.SlideSplineCurvatureData, %struct.SlideSplineCurvatureData* %63, i32 0, i32 10, !dbg !4566
  %vec95 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %other_bezt_backup94, i32 0, i32 0, !dbg !4567
  %arrayidx96 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec95, i64 0, i64 0, !dbg !4565
  %arraydecay97 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx96, i64 0, i64 0, !dbg !4565
  call void @copy_v2_v2(float* %arraydecay93, float* %arraydecay97), !dbg !4568
  br label %if.end98

if.end98:                                         ; preds = %if.else81, %if.then67
  br label %if.end99, !dbg !4569

if.end99:                                         ; preds = %if.end98, %lor.lhs.false17
  br label %sw.bb100, !dbg !4457

sw.bb100:                                         ; preds = %entry, %if.end99
  call void @llvm.dbg.declare(metadata [2 x float]* %B, metadata !4570, metadata !DIExpression()), !dbg !4572
  call void @llvm.dbg.declare(metadata [2 x float]* %mouse_coord, metadata !4573, metadata !DIExpression()), !dbg !4574
  call void @llvm.dbg.declare(metadata [2 x float]* %delta, metadata !4575, metadata !DIExpression()), !dbg !4576
  %64 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4577
  %call101 = call %struct.ScrArea* @CTX_wm_area(%struct.bContext* %64), !dbg !4578
  %65 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4579
  %call102 = call %struct.ARegion* @CTX_wm_region(%struct.bContext* %65), !dbg !4580
  %66 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !4581
  %mval = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %66, i32 0, i32 6, !dbg !4582
  %arraydecay103 = getelementptr inbounds [2 x i32], [2 x i32]* %mval, i64 0, i64 0, !dbg !4581
  %arraydecay104 = getelementptr inbounds [2 x float], [2 x float]* %mouse_coord, i64 0, i64 0, !dbg !4583
  call void @ED_mask_mouse_pos(%struct.ScrArea* %call101, %struct.ARegion* %call102, i32* %arraydecay103, float* %arraydecay104), !dbg !4584
  %arraydecay105 = getelementptr inbounds [2 x float], [2 x float]* %delta, i64 0, i64 0, !dbg !4585
  %arraydecay106 = getelementptr inbounds [2 x float], [2 x float]* %mouse_coord, i64 0, i64 0, !dbg !4586
  %67 = load %struct.SlideSplineCurvatureData*, %struct.SlideSplineCurvatureData** %slide_data, align 8, !dbg !4587
  %prev_mouse_coord = getelementptr inbounds %struct.SlideSplineCurvatureData, %struct.SlideSplineCurvatureData* %67, i32 0, i32 11, !dbg !4588
  %arraydecay107 = getelementptr inbounds [2 x float], [2 x float]* %prev_mouse_coord, i64 0, i64 0, !dbg !4587
  call void @sub_v2_v2v2(float* %arraydecay105, float* %arraydecay106, float* %arraydecay107), !dbg !4589
  %68 = load %struct.SlideSplineCurvatureData*, %struct.SlideSplineCurvatureData** %slide_data, align 8, !dbg !4590
  %accurate108 = getelementptr inbounds %struct.SlideSplineCurvatureData, %struct.SlideSplineCurvatureData* %68, i32 0, i32 6, !dbg !4592
  %69 = load i8, i8* %accurate108, align 4, !dbg !4592
  %tobool = icmp ne i8 %69, 0, !dbg !4590
  br i1 %tobool, label %if.then109, label %if.end111, !dbg !4593

if.then109:                                       ; preds = %sw.bb100
  %arraydecay110 = getelementptr inbounds [2 x float], [2 x float]* %delta, i64 0, i64 0, !dbg !4594
  call void @mul_v2_fl(float* %arraydecay110, float 0x3FC99999A0000000), !dbg !4596
  br label %if.end111, !dbg !4597

if.end111:                                        ; preds = %if.then109, %sw.bb100
  %arraydecay112 = getelementptr inbounds [2 x float], [2 x float]* %B, i64 0, i64 0, !dbg !4598
  %70 = load %struct.SlideSplineCurvatureData*, %struct.SlideSplineCurvatureData** %slide_data, align 8, !dbg !4599
  %prev_spline_coord = getelementptr inbounds %struct.SlideSplineCurvatureData, %struct.SlideSplineCurvatureData* %70, i32 0, i32 12, !dbg !4600
  %arraydecay113 = getelementptr inbounds [2 x float], [2 x float]* %prev_spline_coord, i64 0, i64 0, !dbg !4599
  %arraydecay114 = getelementptr inbounds [2 x float], [2 x float]* %delta, i64 0, i64 0, !dbg !4601
  call void @add_v2_v2v2(float* %arraydecay112, float* %arraydecay113, float* %arraydecay114), !dbg !4602
  %71 = load %struct.SlideSplineCurvatureData*, %struct.SlideSplineCurvatureData** %slide_data, align 8, !dbg !4603
  %prev_spline_coord115 = getelementptr inbounds %struct.SlideSplineCurvatureData, %struct.SlideSplineCurvatureData* %71, i32 0, i32 12, !dbg !4604
  %arraydecay116 = getelementptr inbounds [2 x float], [2 x float]* %prev_spline_coord115, i64 0, i64 0, !dbg !4603
  %arraydecay117 = getelementptr inbounds [2 x float], [2 x float]* %B, i64 0, i64 0, !dbg !4605
  call void @copy_v2_v2(float* %arraydecay116, float* %arraydecay117), !dbg !4606
  %72 = load %struct.SlideSplineCurvatureData*, %struct.SlideSplineCurvatureData** %slide_data, align 8, !dbg !4607
  %prev_mouse_coord118 = getelementptr inbounds %struct.SlideSplineCurvatureData, %struct.SlideSplineCurvatureData* %72, i32 0, i32 11, !dbg !4608
  %arraydecay119 = getelementptr inbounds [2 x float], [2 x float]* %prev_mouse_coord118, i64 0, i64 0, !dbg !4607
  %arraydecay120 = getelementptr inbounds [2 x float], [2 x float]* %mouse_coord, i64 0, i64 0, !dbg !4609
  call void @copy_v2_v2(float* %arraydecay119, float* %arraydecay120), !dbg !4610
  %73 = load float, float* %u, align 4, !dbg !4611
  %cmp121 = fcmp olt float %73, 5.000000e-01, !dbg !4613
  br i1 %cmp121, label %if.then123, label %if.else182, !dbg !4614

if.then123:                                       ; preds = %if.end111
  call void @llvm.dbg.declare(metadata [2 x float]* %oldP2, metadata !4615, metadata !DIExpression()), !dbg !4617
  call void @llvm.dbg.declare(metadata i8* %need_restore_P2, metadata !4618, metadata !DIExpression()), !dbg !4619
  store i8 0, i8* %need_restore_P2, align 1, !dbg !4619
  %74 = load float, float* %u, align 4, !dbg !4620
  %cmp124 = fcmp ogt float %74, 0x3FC99999A0000000, !dbg !4622
  br i1 %cmp124, label %if.then126, label %if.end164, !dbg !4623

if.then126:                                       ; preds = %if.then123
  call void @llvm.dbg.declare(metadata [2 x float]* %solution, metadata !4624, metadata !DIExpression()), !dbg !4626
  call void @llvm.dbg.declare(metadata float* %x, metadata !4627, metadata !DIExpression()), !dbg !4628
  %75 = load float, float* %u, align 4, !dbg !4629
  %sub = fsub float %75, 0x3FC99999A0000000, !dbg !4630
  %mul = fmul float %sub, 5.000000e-01, !dbg !4631
  %div = fdiv float %mul, 0x3FD3333340000000, !dbg !4632
  store float %div, float* %x, align 4, !dbg !4628
  call void @llvm.dbg.declare(metadata float* %weight, metadata !4633, metadata !DIExpression()), !dbg !4634
  %76 = load float, float* %x, align 4, !dbg !4635
  %mul127 = fmul float 3.000000e+00, %76, !dbg !4636
  %77 = load float, float* %x, align 4, !dbg !4637
  %mul128 = fmul float %mul127, %77, !dbg !4638
  %78 = load float, float* %x, align 4, !dbg !4639
  %mul129 = fmul float 2.000000e+00, %78, !dbg !4640
  %79 = load float, float* %x, align 4, !dbg !4641
  %mul130 = fmul float %mul129, %79, !dbg !4642
  %80 = load float, float* %x, align 4, !dbg !4643
  %mul131 = fmul float %mul130, %80, !dbg !4644
  %sub132 = fsub float %mul128, %mul131, !dbg !4645
  store float %sub132, float* %weight, align 4, !dbg !4634
  %81 = load float, float* %u, align 4, !dbg !4646
  %arraydecay133 = getelementptr inbounds [2 x float], [2 x float]* %B, i64 0, i64 0, !dbg !4647
  %82 = load %struct.SlideSplineCurvatureData*, %struct.SlideSplineCurvatureData** %slide_data, align 8, !dbg !4648
  %P0 = getelementptr inbounds %struct.SlideSplineCurvatureData, %struct.SlideSplineCurvatureData* %82, i32 0, i32 13, !dbg !4649
  %arraydecay134 = getelementptr inbounds [2 x float], [2 x float]* %P0, i64 0, i64 0, !dbg !4648
  %83 = load %struct.SlideSplineCurvatureData*, %struct.SlideSplineCurvatureData** %slide_data, align 8, !dbg !4650
  %P1 = getelementptr inbounds %struct.SlideSplineCurvatureData, %struct.SlideSplineCurvatureData* %83, i32 0, i32 14, !dbg !4651
  %arraydecay135 = getelementptr inbounds [2 x float], [2 x float]* %P1, i64 0, i64 0, !dbg !4650
  %84 = load %struct.SlideSplineCurvatureData*, %struct.SlideSplineCurvatureData** %slide_data, align 8, !dbg !4652
  %P3 = getelementptr inbounds %struct.SlideSplineCurvatureData, %struct.SlideSplineCurvatureData* %84, i32 0, i32 16, !dbg !4653
  %arraydecay136 = getelementptr inbounds [3 x float], [3 x float]* %P3, i64 0, i64 0, !dbg !4652
  %arraydecay137 = getelementptr inbounds [2 x float], [2 x float]* %solution, i64 0, i64 0, !dbg !4654
  call void @slide_spline_solve_P2(float %81, float* %arraydecay133, float* %arraydecay134, float* %arraydecay135, float* %arraydecay136, float* %arraydecay137), !dbg !4655
  %arraydecay138 = getelementptr inbounds [2 x float], [2 x float]* %oldP2, i64 0, i64 0, !dbg !4656
  %85 = load %struct.SlideSplineCurvatureData*, %struct.SlideSplineCurvatureData** %slide_data, align 8, !dbg !4657
  %P2 = getelementptr inbounds %struct.SlideSplineCurvatureData, %struct.SlideSplineCurvatureData* %85, i32 0, i32 15, !dbg !4658
  %arraydecay139 = getelementptr inbounds [2 x float], [2 x float]* %P2, i64 0, i64 0, !dbg !4657
  call void @copy_v2_v2(float* %arraydecay138, float* %arraydecay139), !dbg !4659
  %86 = load %struct.SlideSplineCurvatureData*, %struct.SlideSplineCurvatureData** %slide_data, align 8, !dbg !4660
  %P2140 = getelementptr inbounds %struct.SlideSplineCurvatureData, %struct.SlideSplineCurvatureData* %86, i32 0, i32 15, !dbg !4661
  %arraydecay141 = getelementptr inbounds [2 x float], [2 x float]* %P2140, i64 0, i64 0, !dbg !4660
  %87 = load %struct.SlideSplineCurvatureData*, %struct.SlideSplineCurvatureData** %slide_data, align 8, !dbg !4662
  %P2142 = getelementptr inbounds %struct.SlideSplineCurvatureData, %struct.SlideSplineCurvatureData* %87, i32 0, i32 15, !dbg !4663
  %arraydecay143 = getelementptr inbounds [2 x float], [2 x float]* %P2142, i64 0, i64 0, !dbg !4662
  %arraydecay144 = getelementptr inbounds [2 x float], [2 x float]* %solution, i64 0, i64 0, !dbg !4664
  %88 = load float, float* %weight, align 4, !dbg !4665
  call void @interp_v2_v2v2(float* %arraydecay141, float* %arraydecay143, float* %arraydecay144, float %88), !dbg !4666
  %89 = load %struct.SlideSplineCurvatureData*, %struct.SlideSplineCurvatureData** %slide_data, align 8, !dbg !4667
  %other_bezt145 = getelementptr inbounds %struct.SlideSplineCurvatureData, %struct.SlideSplineCurvatureData* %89, i32 0, i32 8, !dbg !4668
  %90 = load %struct.BezTriple*, %struct.BezTriple** %other_bezt145, align 8, !dbg !4668
  %vec146 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %90, i32 0, i32 0, !dbg !4669
  %arrayidx147 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec146, i64 0, i64 0, !dbg !4667
  %arraydecay148 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx147, i64 0, i64 0, !dbg !4667
  %91 = load %struct.SlideSplineCurvatureData*, %struct.SlideSplineCurvatureData** %slide_data, align 8, !dbg !4670
  %P2149 = getelementptr inbounds %struct.SlideSplineCurvatureData, %struct.SlideSplineCurvatureData* %91, i32 0, i32 15, !dbg !4671
  %arraydecay150 = getelementptr inbounds [2 x float], [2 x float]* %P2149, i64 0, i64 0, !dbg !4670
  call void @copy_v2_v2(float* %arraydecay148, float* %arraydecay150), !dbg !4672
  store i8 1, i8* %need_restore_P2, align 1, !dbg !4673
  %92 = load float, float* %weight, align 4, !dbg !4674
  %cmp151 = fcmp ogt float %92, 0.000000e+00, !dbg !4676
  br i1 %cmp151, label %if.then153, label %if.end163, !dbg !4677

if.then153:                                       ; preds = %if.then126
  %93 = load %struct.SlideSplineCurvatureData*, %struct.SlideSplineCurvatureData** %slide_data, align 8, !dbg !4678
  %other_bezt154 = getelementptr inbounds %struct.SlideSplineCurvatureData, %struct.SlideSplineCurvatureData* %93, i32 0, i32 8, !dbg !4681
  %94 = load %struct.BezTriple*, %struct.BezTriple** %other_bezt154, align 8, !dbg !4681
  %h1155 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %94, i32 0, i32 5, !dbg !4682
  %95 = load i8, i8* %h1155, align 1, !dbg !4682
  %conv156 = zext i8 %95 to i32, !dbg !4678
  %cmp157 = icmp sle i32 %conv156, 2, !dbg !4683
  br i1 %cmp157, label %if.then159, label %if.end162, !dbg !4684

if.then159:                                       ; preds = %if.then153
  %96 = load %struct.SlideSplineCurvatureData*, %struct.SlideSplineCurvatureData** %slide_data, align 8, !dbg !4685
  %other_bezt160 = getelementptr inbounds %struct.SlideSplineCurvatureData, %struct.SlideSplineCurvatureData* %96, i32 0, i32 8, !dbg !4687
  %97 = load %struct.BezTriple*, %struct.BezTriple** %other_bezt160, align 8, !dbg !4687
  %h1161 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %97, i32 0, i32 5, !dbg !4688
  store i8 0, i8* %h1161, align 1, !dbg !4689
  br label %if.end162, !dbg !4690

if.end162:                                        ; preds = %if.then159, %if.then153
  br label %if.end163, !dbg !4691

if.end163:                                        ; preds = %if.end162, %if.then126
  br label %if.end164, !dbg !4692

if.end164:                                        ; preds = %if.end163, %if.then123
  %98 = load float, float* %u, align 4, !dbg !4693
  %arraydecay165 = getelementptr inbounds [2 x float], [2 x float]* %B, i64 0, i64 0, !dbg !4694
  %99 = load %struct.SlideSplineCurvatureData*, %struct.SlideSplineCurvatureData** %slide_data, align 8, !dbg !4695
  %P0166 = getelementptr inbounds %struct.SlideSplineCurvatureData, %struct.SlideSplineCurvatureData* %99, i32 0, i32 13, !dbg !4696
  %arraydecay167 = getelementptr inbounds [2 x float], [2 x float]* %P0166, i64 0, i64 0, !dbg !4695
  %100 = load %struct.SlideSplineCurvatureData*, %struct.SlideSplineCurvatureData** %slide_data, align 8, !dbg !4697
  %P2168 = getelementptr inbounds %struct.SlideSplineCurvatureData, %struct.SlideSplineCurvatureData* %100, i32 0, i32 15, !dbg !4698
  %arraydecay169 = getelementptr inbounds [2 x float], [2 x float]* %P2168, i64 0, i64 0, !dbg !4697
  %101 = load %struct.SlideSplineCurvatureData*, %struct.SlideSplineCurvatureData** %slide_data, align 8, !dbg !4699
  %P3170 = getelementptr inbounds %struct.SlideSplineCurvatureData, %struct.SlideSplineCurvatureData* %101, i32 0, i32 16, !dbg !4700
  %arraydecay171 = getelementptr inbounds [3 x float], [3 x float]* %P3170, i64 0, i64 0, !dbg !4699
  %102 = load %struct.SlideSplineCurvatureData*, %struct.SlideSplineCurvatureData** %slide_data, align 8, !dbg !4701
  %adjust_bezt172 = getelementptr inbounds %struct.SlideSplineCurvatureData, %struct.SlideSplineCurvatureData* %102, i32 0, i32 7, !dbg !4702
  %103 = load %struct.BezTriple*, %struct.BezTriple** %adjust_bezt172, align 8, !dbg !4702
  %vec173 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %103, i32 0, i32 0, !dbg !4703
  %arrayidx174 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec173, i64 0, i64 2, !dbg !4701
  %arraydecay175 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx174, i64 0, i64 0, !dbg !4701
  call void @slide_spline_solve_P1(float %98, float* %arraydecay165, float* %arraydecay167, float* %arraydecay169, float* %arraydecay171, float* %arraydecay175), !dbg !4704
  %104 = load i8, i8* %need_restore_P2, align 1, !dbg !4705
  %tobool176 = icmp ne i8 %104, 0, !dbg !4705
  br i1 %tobool176, label %if.then177, label %if.end181, !dbg !4707

if.then177:                                       ; preds = %if.end164
  %105 = load %struct.SlideSplineCurvatureData*, %struct.SlideSplineCurvatureData** %slide_data, align 8, !dbg !4708
  %P2178 = getelementptr inbounds %struct.SlideSplineCurvatureData, %struct.SlideSplineCurvatureData* %105, i32 0, i32 15, !dbg !4710
  %arraydecay179 = getelementptr inbounds [2 x float], [2 x float]* %P2178, i64 0, i64 0, !dbg !4708
  %arraydecay180 = getelementptr inbounds [2 x float], [2 x float]* %oldP2, i64 0, i64 0, !dbg !4711
  call void @copy_v2_v2(float* %arraydecay179, float* %arraydecay180), !dbg !4712
  br label %if.end181, !dbg !4713

if.end181:                                        ; preds = %if.then177, %if.end164
  br label %if.end252, !dbg !4714

if.else182:                                       ; preds = %if.end111
  call void @llvm.dbg.declare(metadata [2 x float]* %oldP1, metadata !4715, metadata !DIExpression()), !dbg !4717
  call void @llvm.dbg.declare(metadata i8* %need_restore_P1, metadata !4718, metadata !DIExpression()), !dbg !4719
  store i8 0, i8* %need_restore_P1, align 1, !dbg !4719
  %106 = load float, float* %u, align 4, !dbg !4720
  %cmp183 = fcmp olt float %106, 0x3FE99999A0000000, !dbg !4722
  br i1 %cmp183, label %if.then185, label %if.end234, !dbg !4723

if.then185:                                       ; preds = %if.else182
  call void @llvm.dbg.declare(metadata [2 x float]* %solution186, metadata !4724, metadata !DIExpression()), !dbg !4726
  call void @llvm.dbg.declare(metadata float* %x187, metadata !4727, metadata !DIExpression()), !dbg !4728
  %107 = load float, float* %u, align 4, !dbg !4729
  %sub188 = fsub float 1.000000e+00, %107, !dbg !4730
  %sub189 = fsub float %sub188, 0x3FC99999A0000000, !dbg !4731
  %mul190 = fmul float %sub189, 5.000000e-01, !dbg !4732
  %div191 = fdiv float %mul190, 0x3FD3333340000000, !dbg !4733
  store float %div191, float* %x187, align 4, !dbg !4728
  call void @llvm.dbg.declare(metadata float* %weight192, metadata !4734, metadata !DIExpression()), !dbg !4735
  %108 = load float, float* %x187, align 4, !dbg !4736
  %mul193 = fmul float 3.000000e+00, %108, !dbg !4737
  %109 = load float, float* %x187, align 4, !dbg !4738
  %mul194 = fmul float %mul193, %109, !dbg !4739
  %110 = load float, float* %x187, align 4, !dbg !4740
  %mul195 = fmul float 2.000000e+00, %110, !dbg !4741
  %111 = load float, float* %x187, align 4, !dbg !4742
  %mul196 = fmul float %mul195, %111, !dbg !4743
  %112 = load float, float* %x187, align 4, !dbg !4744
  %mul197 = fmul float %mul196, %112, !dbg !4745
  %sub198 = fsub float %mul194, %mul197, !dbg !4746
  store float %sub198, float* %weight192, align 4, !dbg !4735
  %113 = load float, float* %u, align 4, !dbg !4747
  %arraydecay199 = getelementptr inbounds [2 x float], [2 x float]* %B, i64 0, i64 0, !dbg !4748
  %114 = load %struct.SlideSplineCurvatureData*, %struct.SlideSplineCurvatureData** %slide_data, align 8, !dbg !4749
  %P0200 = getelementptr inbounds %struct.SlideSplineCurvatureData, %struct.SlideSplineCurvatureData* %114, i32 0, i32 13, !dbg !4750
  %arraydecay201 = getelementptr inbounds [2 x float], [2 x float]* %P0200, i64 0, i64 0, !dbg !4749
  %115 = load %struct.SlideSplineCurvatureData*, %struct.SlideSplineCurvatureData** %slide_data, align 8, !dbg !4751
  %P2202 = getelementptr inbounds %struct.SlideSplineCurvatureData, %struct.SlideSplineCurvatureData* %115, i32 0, i32 15, !dbg !4752
  %arraydecay203 = getelementptr inbounds [2 x float], [2 x float]* %P2202, i64 0, i64 0, !dbg !4751
  %116 = load %struct.SlideSplineCurvatureData*, %struct.SlideSplineCurvatureData** %slide_data, align 8, !dbg !4753
  %P3204 = getelementptr inbounds %struct.SlideSplineCurvatureData, %struct.SlideSplineCurvatureData* %116, i32 0, i32 16, !dbg !4754
  %arraydecay205 = getelementptr inbounds [3 x float], [3 x float]* %P3204, i64 0, i64 0, !dbg !4753
  %arraydecay206 = getelementptr inbounds [2 x float], [2 x float]* %solution186, i64 0, i64 0, !dbg !4755
  call void @slide_spline_solve_P1(float %113, float* %arraydecay199, float* %arraydecay201, float* %arraydecay203, float* %arraydecay205, float* %arraydecay206), !dbg !4756
  %arraydecay207 = getelementptr inbounds [2 x float], [2 x float]* %oldP1, i64 0, i64 0, !dbg !4757
  %117 = load %struct.SlideSplineCurvatureData*, %struct.SlideSplineCurvatureData** %slide_data, align 8, !dbg !4758
  %P1208 = getelementptr inbounds %struct.SlideSplineCurvatureData, %struct.SlideSplineCurvatureData* %117, i32 0, i32 14, !dbg !4759
  %arraydecay209 = getelementptr inbounds [2 x float], [2 x float]* %P1208, i64 0, i64 0, !dbg !4758
  call void @copy_v2_v2(float* %arraydecay207, float* %arraydecay209), !dbg !4760
  %118 = load %struct.SlideSplineCurvatureData*, %struct.SlideSplineCurvatureData** %slide_data, align 8, !dbg !4761
  %P1210 = getelementptr inbounds %struct.SlideSplineCurvatureData, %struct.SlideSplineCurvatureData* %118, i32 0, i32 14, !dbg !4762
  %arraydecay211 = getelementptr inbounds [2 x float], [2 x float]* %P1210, i64 0, i64 0, !dbg !4761
  %119 = load %struct.SlideSplineCurvatureData*, %struct.SlideSplineCurvatureData** %slide_data, align 8, !dbg !4763
  %P1212 = getelementptr inbounds %struct.SlideSplineCurvatureData, %struct.SlideSplineCurvatureData* %119, i32 0, i32 14, !dbg !4764
  %arraydecay213 = getelementptr inbounds [2 x float], [2 x float]* %P1212, i64 0, i64 0, !dbg !4763
  %arraydecay214 = getelementptr inbounds [2 x float], [2 x float]* %solution186, i64 0, i64 0, !dbg !4765
  %120 = load float, float* %weight192, align 4, !dbg !4766
  call void @interp_v2_v2v2(float* %arraydecay211, float* %arraydecay213, float* %arraydecay214, float %120), !dbg !4767
  %121 = load %struct.SlideSplineCurvatureData*, %struct.SlideSplineCurvatureData** %slide_data, align 8, !dbg !4768
  %other_bezt215 = getelementptr inbounds %struct.SlideSplineCurvatureData, %struct.SlideSplineCurvatureData* %121, i32 0, i32 8, !dbg !4769
  %122 = load %struct.BezTriple*, %struct.BezTriple** %other_bezt215, align 8, !dbg !4769
  %vec216 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %122, i32 0, i32 0, !dbg !4770
  %arrayidx217 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec216, i64 0, i64 2, !dbg !4768
  %arraydecay218 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx217, i64 0, i64 0, !dbg !4768
  %123 = load %struct.SlideSplineCurvatureData*, %struct.SlideSplineCurvatureData** %slide_data, align 8, !dbg !4771
  %P1219 = getelementptr inbounds %struct.SlideSplineCurvatureData, %struct.SlideSplineCurvatureData* %123, i32 0, i32 14, !dbg !4772
  %arraydecay220 = getelementptr inbounds [2 x float], [2 x float]* %P1219, i64 0, i64 0, !dbg !4771
  call void @copy_v2_v2(float* %arraydecay218, float* %arraydecay220), !dbg !4773
  store i8 1, i8* %need_restore_P1, align 1, !dbg !4774
  %124 = load float, float* %weight192, align 4, !dbg !4775
  %cmp221 = fcmp ogt float %124, 0.000000e+00, !dbg !4777
  br i1 %cmp221, label %if.then223, label %if.end233, !dbg !4778

if.then223:                                       ; preds = %if.then185
  %125 = load %struct.SlideSplineCurvatureData*, %struct.SlideSplineCurvatureData** %slide_data, align 8, !dbg !4779
  %other_bezt224 = getelementptr inbounds %struct.SlideSplineCurvatureData, %struct.SlideSplineCurvatureData* %125, i32 0, i32 8, !dbg !4782
  %126 = load %struct.BezTriple*, %struct.BezTriple** %other_bezt224, align 8, !dbg !4782
  %h2225 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %126, i32 0, i32 6, !dbg !4783
  %127 = load i8, i8* %h2225, align 2, !dbg !4783
  %conv226 = zext i8 %127 to i32, !dbg !4779
  %cmp227 = icmp sle i32 %conv226, 2, !dbg !4784
  br i1 %cmp227, label %if.then229, label %if.end232, !dbg !4785

if.then229:                                       ; preds = %if.then223
  %128 = load %struct.SlideSplineCurvatureData*, %struct.SlideSplineCurvatureData** %slide_data, align 8, !dbg !4786
  %other_bezt230 = getelementptr inbounds %struct.SlideSplineCurvatureData, %struct.SlideSplineCurvatureData* %128, i32 0, i32 8, !dbg !4788
  %129 = load %struct.BezTriple*, %struct.BezTriple** %other_bezt230, align 8, !dbg !4788
  %h2231 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %129, i32 0, i32 6, !dbg !4789
  store i8 0, i8* %h2231, align 2, !dbg !4790
  br label %if.end232, !dbg !4791

if.end232:                                        ; preds = %if.then229, %if.then223
  br label %if.end233, !dbg !4792

if.end233:                                        ; preds = %if.end232, %if.then185
  br label %if.end234, !dbg !4793

if.end234:                                        ; preds = %if.end233, %if.else182
  %130 = load float, float* %u, align 4, !dbg !4794
  %arraydecay235 = getelementptr inbounds [2 x float], [2 x float]* %B, i64 0, i64 0, !dbg !4795
  %131 = load %struct.SlideSplineCurvatureData*, %struct.SlideSplineCurvatureData** %slide_data, align 8, !dbg !4796
  %P0236 = getelementptr inbounds %struct.SlideSplineCurvatureData, %struct.SlideSplineCurvatureData* %131, i32 0, i32 13, !dbg !4797
  %arraydecay237 = getelementptr inbounds [2 x float], [2 x float]* %P0236, i64 0, i64 0, !dbg !4796
  %132 = load %struct.SlideSplineCurvatureData*, %struct.SlideSplineCurvatureData** %slide_data, align 8, !dbg !4798
  %P1238 = getelementptr inbounds %struct.SlideSplineCurvatureData, %struct.SlideSplineCurvatureData* %132, i32 0, i32 14, !dbg !4799
  %arraydecay239 = getelementptr inbounds [2 x float], [2 x float]* %P1238, i64 0, i64 0, !dbg !4798
  %133 = load %struct.SlideSplineCurvatureData*, %struct.SlideSplineCurvatureData** %slide_data, align 8, !dbg !4800
  %P3240 = getelementptr inbounds %struct.SlideSplineCurvatureData, %struct.SlideSplineCurvatureData* %133, i32 0, i32 16, !dbg !4801
  %arraydecay241 = getelementptr inbounds [3 x float], [3 x float]* %P3240, i64 0, i64 0, !dbg !4800
  %134 = load %struct.SlideSplineCurvatureData*, %struct.SlideSplineCurvatureData** %slide_data, align 8, !dbg !4802
  %adjust_bezt242 = getelementptr inbounds %struct.SlideSplineCurvatureData, %struct.SlideSplineCurvatureData* %134, i32 0, i32 7, !dbg !4803
  %135 = load %struct.BezTriple*, %struct.BezTriple** %adjust_bezt242, align 8, !dbg !4803
  %vec243 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %135, i32 0, i32 0, !dbg !4804
  %arrayidx244 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec243, i64 0, i64 0, !dbg !4802
  %arraydecay245 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx244, i64 0, i64 0, !dbg !4802
  call void @slide_spline_solve_P2(float %130, float* %arraydecay235, float* %arraydecay237, float* %arraydecay239, float* %arraydecay241, float* %arraydecay245), !dbg !4805
  %136 = load i8, i8* %need_restore_P1, align 1, !dbg !4806
  %tobool246 = icmp ne i8 %136, 0, !dbg !4806
  br i1 %tobool246, label %if.then247, label %if.end251, !dbg !4808

if.then247:                                       ; preds = %if.end234
  %137 = load %struct.SlideSplineCurvatureData*, %struct.SlideSplineCurvatureData** %slide_data, align 8, !dbg !4809
  %P1248 = getelementptr inbounds %struct.SlideSplineCurvatureData, %struct.SlideSplineCurvatureData* %137, i32 0, i32 14, !dbg !4811
  %arraydecay249 = getelementptr inbounds [2 x float], [2 x float]* %P1248, i64 0, i64 0, !dbg !4809
  %arraydecay250 = getelementptr inbounds [2 x float], [2 x float]* %oldP1, i64 0, i64 0, !dbg !4812
  call void @copy_v2_v2(float* %arraydecay249, float* %arraydecay250), !dbg !4813
  br label %if.end251, !dbg !4814

if.end251:                                        ; preds = %if.then247, %if.end234
  br label %if.end252

if.end252:                                        ; preds = %if.end251, %if.end181
  %138 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4815
  %139 = load %struct.SlideSplineCurvatureData*, %struct.SlideSplineCurvatureData** %slide_data, align 8, !dbg !4816
  %mask = getelementptr inbounds %struct.SlideSplineCurvatureData, %struct.SlideSplineCurvatureData* %139, i32 0, i32 1, !dbg !4817
  %140 = load %struct.Mask*, %struct.Mask** %mask, align 8, !dbg !4817
  %141 = bitcast %struct.Mask* %140 to i8*, !dbg !4816
  call void @WM_event_add_notifier(%struct.bContext* %138, i32 352321537, i8* %141), !dbg !4818
  %142 = load %struct.SlideSplineCurvatureData*, %struct.SlideSplineCurvatureData** %slide_data, align 8, !dbg !4819
  %mask253 = getelementptr inbounds %struct.SlideSplineCurvatureData, %struct.SlideSplineCurvatureData* %142, i32 0, i32 1, !dbg !4820
  %143 = load %struct.Mask*, %struct.Mask** %mask253, align 8, !dbg !4820
  %id = getelementptr inbounds %struct.Mask, %struct.Mask* %143, i32 0, i32 0, !dbg !4821
  call void @DAG_id_tag_update(%struct.ID* %id, i16 signext 0), !dbg !4822
  br label %sw.epilog, !dbg !4823

sw.bb254:                                         ; preds = %entry, %entry
  %144 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !4824
  %type255 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %144, i32 0, i32 2, !dbg !4826
  %145 = load i16, i16* %type255, align 8, !dbg !4826
  %conv256 = sext i16 %145 to i32, !dbg !4824
  %146 = load %struct.SlideSplineCurvatureData*, %struct.SlideSplineCurvatureData** %slide_data, align 8, !dbg !4827
  %event_invoke_type = getelementptr inbounds %struct.SlideSplineCurvatureData, %struct.SlideSplineCurvatureData* %146, i32 0, i32 0, !dbg !4828
  %147 = load i16, i16* %event_invoke_type, align 8, !dbg !4828
  %conv257 = sext i16 %147 to i32, !dbg !4827
  %cmp258 = icmp eq i32 %conv256, %conv257, !dbg !4829
  br i1 %cmp258, label %land.lhs.true260, label %if.end277, !dbg !4830

land.lhs.true260:                                 ; preds = %sw.bb254
  %148 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !4831
  %val261 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %148, i32 0, i32 3, !dbg !4832
  %149 = load i16, i16* %val261, align 2, !dbg !4832
  %conv262 = sext i16 %149 to i32, !dbg !4831
  %cmp263 = icmp eq i32 %conv262, 2, !dbg !4833
  br i1 %cmp263, label %if.then265, label %if.end277, !dbg !4834

if.then265:                                       ; preds = %land.lhs.true260
  %150 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !4835
  %tobool266 = icmp ne %struct.Scene* %150, null, !dbg !4835
  br i1 %tobool266, label %cond.true, label %cond.false, !dbg !4838

cond.true:                                        ; preds = %if.then265
  %151 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !4835
  %toolsettings = getelementptr inbounds %struct.Scene, %struct.Scene* %151, i32 0, i32 20, !dbg !4835
  %152 = load %struct.ToolSettings*, %struct.ToolSettings** %toolsettings, align 8, !dbg !4835
  %autokey_mode = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %152, i32 0, i32 21, !dbg !4835
  %153 = load i16, i16* %autokey_mode, align 8, !dbg !4835
  %conv267 = sext i16 %153 to i32, !dbg !4835
  %and = and i32 %conv267, 1, !dbg !4835
  %tobool268 = icmp ne i32 %and, 0, !dbg !4835
  br i1 %tobool268, label %if.then272, label %if.end273, !dbg !4835

cond.false:                                       ; preds = %if.then265
  %154 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 91), align 8, !dbg !4835
  %conv269 = sext i16 %154 to i32, !dbg !4835
  %and270 = and i32 %conv269, 1, !dbg !4835
  %tobool271 = icmp ne i32 %and270, 0, !dbg !4835
  br i1 %tobool271, label %if.then272, label %if.end273, !dbg !4838

if.then272:                                       ; preds = %cond.false, %cond.true
  %155 = load %struct.SlideSplineCurvatureData*, %struct.SlideSplineCurvatureData** %slide_data, align 8, !dbg !4839
  %mask_layer = getelementptr inbounds %struct.SlideSplineCurvatureData, %struct.SlideSplineCurvatureData* %155, i32 0, i32 2, !dbg !4841
  %156 = load %struct.MaskLayer*, %struct.MaskLayer** %mask_layer, align 8, !dbg !4841
  %157 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !4842
  %r = getelementptr inbounds %struct.Scene, %struct.Scene* %157, i32 0, i32 22, !dbg !4842
  %cfra = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r, i32 0, i32 5, !dbg !4842
  %158 = load i32, i32* %cfra, align 8, !dbg !4842
  call void @ED_mask_layer_shape_auto_key(%struct.MaskLayer* %156, i32 %158), !dbg !4843
  br label %if.end273, !dbg !4844

if.end273:                                        ; preds = %if.then272, %cond.false, %cond.true
  %159 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4845
  %160 = load %struct.SlideSplineCurvatureData*, %struct.SlideSplineCurvatureData** %slide_data, align 8, !dbg !4846
  %mask274 = getelementptr inbounds %struct.SlideSplineCurvatureData, %struct.SlideSplineCurvatureData* %160, i32 0, i32 1, !dbg !4847
  %161 = load %struct.Mask*, %struct.Mask** %mask274, align 8, !dbg !4847
  %162 = bitcast %struct.Mask* %161 to i8*, !dbg !4846
  call void @WM_event_add_notifier(%struct.bContext* %159, i32 352321537, i8* %162), !dbg !4848
  %163 = load %struct.SlideSplineCurvatureData*, %struct.SlideSplineCurvatureData** %slide_data, align 8, !dbg !4849
  %mask275 = getelementptr inbounds %struct.SlideSplineCurvatureData, %struct.SlideSplineCurvatureData* %163, i32 0, i32 1, !dbg !4850
  %164 = load %struct.Mask*, %struct.Mask** %mask275, align 8, !dbg !4850
  %id276 = getelementptr inbounds %struct.Mask, %struct.Mask* %164, i32 0, i32 0, !dbg !4851
  call void @DAG_id_tag_update(%struct.ID* %id276, i16 signext 0), !dbg !4852
  %165 = load %struct.SlideSplineCurvatureData*, %struct.SlideSplineCurvatureData** %slide_data, align 8, !dbg !4853
  call void @free_slide_spline_curvature_data(%struct.SlideSplineCurvatureData* %165), !dbg !4854
  store i32 4, i32* %retval, align 4, !dbg !4855
  br label %return, !dbg !4855

if.end277:                                        ; preds = %land.lhs.true260, %sw.bb254
  br label %sw.epilog, !dbg !4856

sw.bb278:                                         ; preds = %entry
  %166 = load %struct.SlideSplineCurvatureData*, %struct.SlideSplineCurvatureData** %slide_data, align 8, !dbg !4857
  call void @cancel_slide_spline_curvature(%struct.SlideSplineCurvatureData* %166), !dbg !4858
  %167 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4859
  %168 = load %struct.SlideSplineCurvatureData*, %struct.SlideSplineCurvatureData** %slide_data, align 8, !dbg !4860
  %mask279 = getelementptr inbounds %struct.SlideSplineCurvatureData, %struct.SlideSplineCurvatureData* %168, i32 0, i32 1, !dbg !4861
  %169 = load %struct.Mask*, %struct.Mask** %mask279, align 8, !dbg !4861
  %170 = bitcast %struct.Mask* %169 to i8*, !dbg !4860
  call void @WM_event_add_notifier(%struct.bContext* %167, i32 352321537, i8* %170), !dbg !4862
  %171 = load %struct.SlideSplineCurvatureData*, %struct.SlideSplineCurvatureData** %slide_data, align 8, !dbg !4863
  %mask280 = getelementptr inbounds %struct.SlideSplineCurvatureData, %struct.SlideSplineCurvatureData* %171, i32 0, i32 1, !dbg !4864
  %172 = load %struct.Mask*, %struct.Mask** %mask280, align 8, !dbg !4864
  %id281 = getelementptr inbounds %struct.Mask, %struct.Mask* %172, i32 0, i32 0, !dbg !4865
  call void @DAG_id_tag_update(%struct.ID* %id281, i16 signext 0), !dbg !4866
  %173 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !4867
  %customdata282 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %173, i32 0, i32 5, !dbg !4868
  %174 = load i8*, i8** %customdata282, align 8, !dbg !4868
  %175 = bitcast i8* %174 to %struct.SlideSplineCurvatureData*, !dbg !4867
  call void @free_slide_spline_curvature_data(%struct.SlideSplineCurvatureData* %175), !dbg !4869
  store i32 2, i32* %retval, align 4, !dbg !4870
  br label %return, !dbg !4870

sw.epilog:                                        ; preds = %entry, %if.end277, %if.end252
  store i32 1, i32* %retval, align 4, !dbg !4871
  br label %return, !dbg !4871

return:                                           ; preds = %sw.epilog, %sw.bb278, %if.end273
  %176 = load i32, i32* %retval, align 4, !dbg !4872
  ret i32 %176, !dbg !4872
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @MASK_OT_cyclic_toggle(%struct.wmOperatorType* %ot) #0 !dbg !4873 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !4874, metadata !DIExpression()), !dbg !4875
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4876
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !4877
  store i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.26, i64 0, i64 0), i8** %name, align 8, !dbg !4878
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4879
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 3, !dbg !4880
  store i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.27, i64 0, i64 0), i8** %description, align 8, !dbg !4881
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4882
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 1, !dbg !4883
  store i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.28, i64 0, i64 0), i8** %idname, align 8, !dbg !4884
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4885
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !4886
  store i32 (%struct.bContext*, %struct.wmOperator*)* @cyclic_toggle_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !4887
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4888
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !4889
  store i32 (%struct.bContext*)* @ED_maskedit_mask_poll, i32 (%struct.bContext*)** %poll, align 8, !dbg !4890
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4891
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !4892
  store i16 3, i16* %flag, align 8, !dbg !4893
  ret void, !dbg !4894
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @cyclic_toggle_exec(%struct.bContext* %C, %struct.wmOperator* %UNUSED_op) #0 !dbg !4895 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %UNUSED_op.addr = alloca %struct.wmOperator*, align 8
  %mask = alloca %struct.Mask*, align 8
  %masklay = alloca %struct.MaskLayer*, align 8
  %spline = alloca %struct.MaskSpline*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !4896, metadata !DIExpression()), !dbg !4897
  store %struct.wmOperator* %UNUSED_op, %struct.wmOperator** %UNUSED_op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %UNUSED_op.addr, metadata !4898, metadata !DIExpression()), !dbg !4899
  call void @llvm.dbg.declare(metadata %struct.Mask** %mask, metadata !4900, metadata !DIExpression()), !dbg !4901
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4902
  %call = call %struct.Mask* @CTX_data_edit_mask(%struct.bContext* %0), !dbg !4903
  store %struct.Mask* %call, %struct.Mask** %mask, align 8, !dbg !4901
  call void @llvm.dbg.declare(metadata %struct.MaskLayer** %masklay, metadata !4904, metadata !DIExpression()), !dbg !4905
  %1 = load %struct.Mask*, %struct.Mask** %mask, align 8, !dbg !4906
  %masklayers = getelementptr inbounds %struct.Mask, %struct.Mask* %1, i32 0, i32 2, !dbg !4908
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %masklayers, i32 0, i32 0, !dbg !4909
  %2 = load i8*, i8** %first, align 8, !dbg !4909
  %3 = bitcast i8* %2 to %struct.MaskLayer*, !dbg !4906
  store %struct.MaskLayer* %3, %struct.MaskLayer** %masklay, align 8, !dbg !4910
  br label %for.cond, !dbg !4911

for.cond:                                         ; preds = %for.inc12, %entry
  %4 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay, align 8, !dbg !4912
  %tobool = icmp ne %struct.MaskLayer* %4, null, !dbg !4914
  br i1 %tobool, label %for.body, label %for.end14, !dbg !4914

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.MaskSpline** %spline, metadata !4915, metadata !DIExpression()), !dbg !4917
  %5 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay, align 8, !dbg !4918
  %restrictflag = getelementptr inbounds %struct.MaskLayer, %struct.MaskLayer* %5, i32 0, i32 13, !dbg !4920
  %6 = load i8, i8* %restrictflag, align 1, !dbg !4920
  %conv = zext i8 %6 to i32, !dbg !4918
  %and = and i32 %conv, 3, !dbg !4921
  %tobool1 = icmp ne i32 %and, 0, !dbg !4921
  br i1 %tobool1, label %if.then, label %if.end, !dbg !4922

if.then:                                          ; preds = %for.body
  br label %for.inc12, !dbg !4923

if.end:                                           ; preds = %for.body
  %7 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay, align 8, !dbg !4925
  %splines = getelementptr inbounds %struct.MaskLayer, %struct.MaskLayer* %7, i32 0, i32 3, !dbg !4927
  %first2 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %splines, i32 0, i32 0, !dbg !4928
  %8 = load i8*, i8** %first2, align 8, !dbg !4928
  %9 = bitcast i8* %8 to %struct.MaskSpline*, !dbg !4925
  store %struct.MaskSpline* %9, %struct.MaskSpline** %spline, align 8, !dbg !4929
  br label %for.cond3, !dbg !4930

for.cond3:                                        ; preds = %for.inc, %if.end
  %10 = load %struct.MaskSpline*, %struct.MaskSpline** %spline, align 8, !dbg !4931
  %tobool4 = icmp ne %struct.MaskSpline* %10, null, !dbg !4933
  br i1 %tobool4, label %for.body5, label %for.end, !dbg !4933

for.body5:                                        ; preds = %for.cond3
  %11 = load %struct.MaskSpline*, %struct.MaskSpline** %spline, align 8, !dbg !4934
  %call6 = call zeroext i8 @ED_mask_spline_select_check(%struct.MaskSpline* %11), !dbg !4937
  %tobool7 = icmp ne i8 %call6, 0, !dbg !4937
  br i1 %tobool7, label %if.then8, label %if.end11, !dbg !4938

if.then8:                                         ; preds = %for.body5
  %12 = load %struct.MaskSpline*, %struct.MaskSpline** %spline, align 8, !dbg !4939
  %flag = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %12, i32 0, i32 2, !dbg !4941
  %13 = load i16, i16* %flag, align 8, !dbg !4942
  %conv9 = sext i16 %13 to i32, !dbg !4942
  %xor = xor i32 %conv9, 2, !dbg !4942
  %conv10 = trunc i32 %xor to i16, !dbg !4942
  store i16 %conv10, i16* %flag, align 8, !dbg !4942
  br label %if.end11, !dbg !4943

if.end11:                                         ; preds = %if.then8, %for.body5
  br label %for.inc, !dbg !4944

for.inc:                                          ; preds = %if.end11
  %14 = load %struct.MaskSpline*, %struct.MaskSpline** %spline, align 8, !dbg !4945
  %next = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %14, i32 0, i32 0, !dbg !4946
  %15 = load %struct.MaskSpline*, %struct.MaskSpline** %next, align 8, !dbg !4946
  store %struct.MaskSpline* %15, %struct.MaskSpline** %spline, align 8, !dbg !4947
  br label %for.cond3, !dbg !4948, !llvm.loop !4949

for.end:                                          ; preds = %for.cond3
  br label %for.inc12, !dbg !4951

for.inc12:                                        ; preds = %for.end, %if.then
  %16 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay, align 8, !dbg !4952
  %next13 = getelementptr inbounds %struct.MaskLayer, %struct.MaskLayer* %16, i32 0, i32 0, !dbg !4953
  %17 = load %struct.MaskLayer*, %struct.MaskLayer** %next13, align 8, !dbg !4953
  store %struct.MaskLayer* %17, %struct.MaskLayer** %masklay, align 8, !dbg !4954
  br label %for.cond, !dbg !4955, !llvm.loop !4956

for.end14:                                        ; preds = %for.cond
  %18 = load %struct.Mask*, %struct.Mask** %mask, align 8, !dbg !4958
  %id = getelementptr inbounds %struct.Mask, %struct.Mask* %18, i32 0, i32 0, !dbg !4959
  call void @DAG_id_tag_update(%struct.ID* %id, i16 signext 0), !dbg !4960
  %19 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4961
  %20 = load %struct.Mask*, %struct.Mask** %mask, align 8, !dbg !4962
  %21 = bitcast %struct.Mask* %20 to i8*, !dbg !4962
  call void @WM_event_add_notifier(%struct.bContext* %19, i32 352321537, i8* %21), !dbg !4963
  ret i32 4, !dbg !4964
}

declare dso_local i32 @ED_maskedit_mask_poll(%struct.bContext*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @MASK_OT_delete(%struct.wmOperatorType* %ot) #0 !dbg !4965 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !4966, metadata !DIExpression()), !dbg !4967
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4968
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !4969
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.29, i64 0, i64 0), i8** %name, align 8, !dbg !4970
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4971
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 3, !dbg !4972
  store i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.30, i64 0, i64 0), i8** %description, align 8, !dbg !4973
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4974
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 1, !dbg !4975
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.31, i64 0, i64 0), i8** %idname, align 8, !dbg !4976
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4977
  %invoke = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 6, !dbg !4978
  store i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)* @WM_operator_confirm, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)** %invoke, align 8, !dbg !4979
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4980
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 4, !dbg !4981
  store i32 (%struct.bContext*, %struct.wmOperator*)* @delete_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !4982
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4983
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 9, !dbg !4984
  store i32 (%struct.bContext*)* @ED_maskedit_mask_poll, i32 (%struct.bContext*)** %poll, align 8, !dbg !4985
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4986
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 19, !dbg !4987
  store i16 3, i16* %flag, align 8, !dbg !4988
  ret void, !dbg !4989
}

declare dso_local i32 @WM_operator_confirm(%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @delete_exec(%struct.bContext* %C, %struct.wmOperator* %UNUSED_op) #0 !dbg !4990 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %UNUSED_op.addr = alloca %struct.wmOperator*, align 8
  %scene = alloca %struct.Scene*, align 8
  %mask = alloca %struct.Mask*, align 8
  %masklay = alloca %struct.MaskLayer*, align 8
  %changed = alloca i8, align 1
  %spline = alloca %struct.MaskSpline*, align 8
  %mask_layer_shape_ofs = alloca i32, align 4
  %tot_point_orig = alloca i32, align 4
  %i = alloca i32, align 4
  %count = alloca i32, align 4
  %next_spline = alloca %struct.MaskSpline*, align 8
  %point = alloca %struct.MaskSplinePoint*, align 8
  %new_points = alloca %struct.MaskSplinePoint*, align 8
  %j = alloca i32, align 4
  %point36 = alloca %struct.MaskSplinePoint*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !4991, metadata !DIExpression()), !dbg !4992
  store %struct.wmOperator* %UNUSED_op, %struct.wmOperator** %UNUSED_op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %UNUSED_op.addr, metadata !4993, metadata !DIExpression()), !dbg !4994
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene, metadata !4995, metadata !DIExpression()), !dbg !4996
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4997
  %call = call %struct.Scene* @CTX_data_scene(%struct.bContext* %0), !dbg !4998
  store %struct.Scene* %call, %struct.Scene** %scene, align 8, !dbg !4996
  call void @llvm.dbg.declare(metadata %struct.Mask** %mask, metadata !4999, metadata !DIExpression()), !dbg !5000
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5001
  %call1 = call %struct.Mask* @CTX_data_edit_mask(%struct.bContext* %1), !dbg !5002
  store %struct.Mask* %call1, %struct.Mask** %mask, align 8, !dbg !5000
  call void @llvm.dbg.declare(metadata %struct.MaskLayer** %masklay, metadata !5003, metadata !DIExpression()), !dbg !5004
  call void @llvm.dbg.declare(metadata i8* %changed, metadata !5005, metadata !DIExpression()), !dbg !5006
  store i8 0, i8* %changed, align 1, !dbg !5006
  %2 = load %struct.Mask*, %struct.Mask** %mask, align 8, !dbg !5007
  %masklayers = getelementptr inbounds %struct.Mask, %struct.Mask* %2, i32 0, i32 2, !dbg !5009
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %masklayers, i32 0, i32 0, !dbg !5010
  %3 = load i8*, i8** %first, align 8, !dbg !5010
  %4 = bitcast i8* %3 to %struct.MaskLayer*, !dbg !5007
  store %struct.MaskLayer* %4, %struct.MaskLayer** %masklay, align 8, !dbg !5011
  br label %for.cond, !dbg !5012

for.cond:                                         ; preds = %for.inc88, %entry
  %5 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay, align 8, !dbg !5013
  %tobool = icmp ne %struct.MaskLayer* %5, null, !dbg !5015
  br i1 %tobool, label %for.body, label %for.end90, !dbg !5015

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.MaskSpline** %spline, metadata !5016, metadata !DIExpression()), !dbg !5018
  call void @llvm.dbg.declare(metadata i32* %mask_layer_shape_ofs, metadata !5019, metadata !DIExpression()), !dbg !5020
  store i32 0, i32* %mask_layer_shape_ofs, align 4, !dbg !5020
  %6 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay, align 8, !dbg !5021
  %restrictflag = getelementptr inbounds %struct.MaskLayer, %struct.MaskLayer* %6, i32 0, i32 13, !dbg !5023
  %7 = load i8, i8* %restrictflag, align 1, !dbg !5023
  %conv = zext i8 %7 to i32, !dbg !5021
  %and = and i32 %conv, 3, !dbg !5024
  %tobool2 = icmp ne i32 %and, 0, !dbg !5024
  br i1 %tobool2, label %if.then, label %if.end, !dbg !5025

if.then:                                          ; preds = %for.body
  br label %for.inc88, !dbg !5026

if.end:                                           ; preds = %for.body
  %8 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay, align 8, !dbg !5028
  %splines = getelementptr inbounds %struct.MaskLayer, %struct.MaskLayer* %8, i32 0, i32 3, !dbg !5029
  %first3 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %splines, i32 0, i32 0, !dbg !5030
  %9 = load i8*, i8** %first3, align 8, !dbg !5030
  %10 = bitcast i8* %9 to %struct.MaskSpline*, !dbg !5028
  store %struct.MaskSpline* %10, %struct.MaskSpline** %spline, align 8, !dbg !5031
  br label %while.cond, !dbg !5032

while.cond:                                       ; preds = %if.end82, %if.end
  %11 = load %struct.MaskSpline*, %struct.MaskSpline** %spline, align 8, !dbg !5033
  %tobool4 = icmp ne %struct.MaskSpline* %11, null, !dbg !5032
  br i1 %tobool4, label %while.body, label %while.end, !dbg !5032

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i32* %tot_point_orig, metadata !5034, metadata !DIExpression()), !dbg !5037
  %12 = load %struct.MaskSpline*, %struct.MaskSpline** %spline, align 8, !dbg !5038
  %tot_point = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %12, i32 0, i32 5, !dbg !5039
  %13 = load i32, i32* %tot_point, align 4, !dbg !5039
  store i32 %13, i32* %tot_point_orig, align 4, !dbg !5037
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5040, metadata !DIExpression()), !dbg !5041
  call void @llvm.dbg.declare(metadata i32* %count, metadata !5042, metadata !DIExpression()), !dbg !5043
  store i32 0, i32* %count, align 4, !dbg !5043
  call void @llvm.dbg.declare(metadata %struct.MaskSpline** %next_spline, metadata !5044, metadata !DIExpression()), !dbg !5045
  %14 = load %struct.MaskSpline*, %struct.MaskSpline** %spline, align 8, !dbg !5046
  %next = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %14, i32 0, i32 0, !dbg !5047
  %15 = load %struct.MaskSpline*, %struct.MaskSpline** %next, align 8, !dbg !5047
  store %struct.MaskSpline* %15, %struct.MaskSpline** %next_spline, align 8, !dbg !5045
  store i32 0, i32* %i, align 4, !dbg !5048
  br label %for.cond5, !dbg !5050

for.cond5:                                        ; preds = %for.inc, %while.body
  %16 = load i32, i32* %i, align 4, !dbg !5051
  %17 = load %struct.MaskSpline*, %struct.MaskSpline** %spline, align 8, !dbg !5053
  %tot_point6 = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %17, i32 0, i32 5, !dbg !5054
  %18 = load i32, i32* %tot_point6, align 4, !dbg !5054
  %cmp = icmp slt i32 %16, %18, !dbg !5055
  br i1 %cmp, label %for.body8, label %for.end, !dbg !5056

for.body8:                                        ; preds = %for.cond5
  call void @llvm.dbg.declare(metadata %struct.MaskSplinePoint** %point, metadata !5057, metadata !DIExpression()), !dbg !5059
  %19 = load %struct.MaskSpline*, %struct.MaskSpline** %spline, align 8, !dbg !5060
  %points = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %19, i32 0, i32 6, !dbg !5061
  %20 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %points, align 8, !dbg !5061
  %21 = load i32, i32* %i, align 4, !dbg !5062
  %idxprom = sext i32 %21 to i64, !dbg !5060
  %arrayidx = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %20, i64 %idxprom, !dbg !5060
  store %struct.MaskSplinePoint* %arrayidx, %struct.MaskSplinePoint** %point, align 8, !dbg !5059
  %22 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point, align 8, !dbg !5063
  %bezt = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %22, i32 0, i32 0, !dbg !5063
  %f1 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %bezt, i32 0, i32 7, !dbg !5063
  %23 = load i8, i8* %f1, align 1, !dbg !5063
  %conv9 = zext i8 %23 to i32, !dbg !5063
  %24 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point, align 8, !dbg !5063
  %bezt10 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %24, i32 0, i32 0, !dbg !5063
  %f2 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %bezt10, i32 0, i32 8, !dbg !5063
  %25 = load i8, i8* %f2, align 4, !dbg !5063
  %conv11 = zext i8 %25 to i32, !dbg !5063
  %or = or i32 %conv9, %conv11, !dbg !5063
  %26 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point, align 8, !dbg !5063
  %bezt12 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %26, i32 0, i32 0, !dbg !5063
  %f3 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %bezt12, i32 0, i32 9, !dbg !5063
  %27 = load i8, i8* %f3, align 1, !dbg !5063
  %conv13 = zext i8 %27 to i32, !dbg !5063
  %or14 = or i32 %or, %conv13, !dbg !5063
  %and15 = and i32 %or14, 1, !dbg !5063
  %cmp16 = icmp ne i32 %and15, 0, !dbg !5063
  br i1 %cmp16, label %if.end19, label %if.then18, !dbg !5065

if.then18:                                        ; preds = %for.body8
  %28 = load i32, i32* %count, align 4, !dbg !5066
  %inc = add nsw i32 %28, 1, !dbg !5066
  store i32 %inc, i32* %count, align 4, !dbg !5066
  br label %if.end19, !dbg !5067

if.end19:                                         ; preds = %if.then18, %for.body8
  br label %for.inc, !dbg !5068

for.inc:                                          ; preds = %if.end19
  %29 = load i32, i32* %i, align 4, !dbg !5069
  %inc20 = add nsw i32 %29, 1, !dbg !5069
  store i32 %inc20, i32* %i, align 4, !dbg !5069
  br label %for.cond5, !dbg !5070, !llvm.loop !5071

for.end:                                          ; preds = %for.cond5
  %30 = load i32, i32* %count, align 4, !dbg !5073
  %cmp21 = icmp eq i32 %30, 0, !dbg !5075
  br i1 %cmp21, label %if.then23, label %if.else, !dbg !5076

if.then23:                                        ; preds = %for.end
  %31 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay, align 8, !dbg !5077
  %splines24 = getelementptr inbounds %struct.MaskLayer, %struct.MaskLayer* %31, i32 0, i32 3, !dbg !5079
  %32 = load %struct.MaskSpline*, %struct.MaskSpline** %spline, align 8, !dbg !5080
  %33 = bitcast %struct.MaskSpline* %32 to i8*, !dbg !5080
  call void @BLI_remlink(%struct.ListBase* %splines24, i8* %33), !dbg !5081
  %34 = load %struct.MaskSpline*, %struct.MaskSpline** %spline, align 8, !dbg !5082
  call void @BKE_mask_spline_free(%struct.MaskSpline* %34), !dbg !5083
  %35 = load %struct.MaskSpline*, %struct.MaskSpline** %spline, align 8, !dbg !5084
  %36 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay, align 8, !dbg !5086
  %act_spline = getelementptr inbounds %struct.MaskLayer, %struct.MaskLayer* %36, i32 0, i32 5, !dbg !5087
  %37 = load %struct.MaskSpline*, %struct.MaskSpline** %act_spline, align 8, !dbg !5087
  %cmp25 = icmp eq %struct.MaskSpline* %35, %37, !dbg !5088
  br i1 %cmp25, label %if.then27, label %if.end29, !dbg !5089

if.then27:                                        ; preds = %if.then23
  %38 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay, align 8, !dbg !5090
  %act_spline28 = getelementptr inbounds %struct.MaskLayer, %struct.MaskLayer* %38, i32 0, i32 5, !dbg !5092
  store %struct.MaskSpline* null, %struct.MaskSpline** %act_spline28, align 8, !dbg !5093
  %39 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay, align 8, !dbg !5094
  %act_point = getelementptr inbounds %struct.MaskLayer, %struct.MaskLayer* %39, i32 0, i32 6, !dbg !5095
  store %struct.MaskSplinePoint* null, %struct.MaskSplinePoint** %act_point, align 8, !dbg !5096
  br label %if.end29, !dbg !5097

if.end29:                                         ; preds = %if.then27, %if.then23
  %40 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay, align 8, !dbg !5098
  %41 = load i32, i32* %mask_layer_shape_ofs, align 4, !dbg !5099
  %42 = load i32, i32* %tot_point_orig, align 4, !dbg !5100
  call void @BKE_mask_layer_shape_changed_remove(%struct.MaskLayer* %40, i32 %41, i32 %42), !dbg !5101
  br label %if.end82, !dbg !5102

if.else:                                          ; preds = %for.end
  call void @llvm.dbg.declare(metadata %struct.MaskSplinePoint** %new_points, metadata !5103, metadata !DIExpression()), !dbg !5105
  call void @llvm.dbg.declare(metadata i32* %j, metadata !5106, metadata !DIExpression()), !dbg !5107
  %43 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !5108
  %44 = load i32, i32* %count, align 4, !dbg !5109
  %conv30 = sext i32 %44 to i64, !dbg !5109
  %mul = mul i64 %conv30, 272, !dbg !5110
  %call31 = call i8* %43(i64 %mul, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.87, i64 0, i64 0)), !dbg !5108
  %45 = bitcast i8* %call31 to %struct.MaskSplinePoint*, !dbg !5108
  store %struct.MaskSplinePoint* %45, %struct.MaskSplinePoint** %new_points, align 8, !dbg !5111
  store i32 0, i32* %i, align 4, !dbg !5112
  store i32 0, i32* %j, align 4, !dbg !5114
  br label %for.cond32, !dbg !5115

for.cond32:                                       ; preds = %for.inc75, %if.else
  %46 = load i32, i32* %i, align 4, !dbg !5116
  %47 = load i32, i32* %tot_point_orig, align 4, !dbg !5118
  %cmp33 = icmp slt i32 %46, %47, !dbg !5119
  br i1 %cmp33, label %for.body35, label %for.end77, !dbg !5120

for.body35:                                       ; preds = %for.cond32
  call void @llvm.dbg.declare(metadata %struct.MaskSplinePoint** %point36, metadata !5121, metadata !DIExpression()), !dbg !5123
  %48 = load %struct.MaskSpline*, %struct.MaskSpline** %spline, align 8, !dbg !5124
  %points37 = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %48, i32 0, i32 6, !dbg !5125
  %49 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %points37, align 8, !dbg !5125
  %50 = load i32, i32* %i, align 4, !dbg !5126
  %idxprom38 = sext i32 %50 to i64, !dbg !5124
  %arrayidx39 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %49, i64 %idxprom38, !dbg !5124
  store %struct.MaskSplinePoint* %arrayidx39, %struct.MaskSplinePoint** %point36, align 8, !dbg !5123
  %51 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point36, align 8, !dbg !5127
  %bezt40 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %51, i32 0, i32 0, !dbg !5127
  %f141 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %bezt40, i32 0, i32 7, !dbg !5127
  %52 = load i8, i8* %f141, align 1, !dbg !5127
  %conv42 = zext i8 %52 to i32, !dbg !5127
  %53 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point36, align 8, !dbg !5127
  %bezt43 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %53, i32 0, i32 0, !dbg !5127
  %f244 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %bezt43, i32 0, i32 8, !dbg !5127
  %54 = load i8, i8* %f244, align 4, !dbg !5127
  %conv45 = zext i8 %54 to i32, !dbg !5127
  %or46 = or i32 %conv42, %conv45, !dbg !5127
  %55 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point36, align 8, !dbg !5127
  %bezt47 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %55, i32 0, i32 0, !dbg !5127
  %f348 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %bezt47, i32 0, i32 9, !dbg !5127
  %56 = load i8, i8* %f348, align 1, !dbg !5127
  %conv49 = zext i8 %56 to i32, !dbg !5127
  %or50 = or i32 %or46, %conv49, !dbg !5127
  %and51 = and i32 %or50, 1, !dbg !5127
  %cmp52 = icmp ne i32 %and51, 0, !dbg !5127
  br i1 %cmp52, label %if.else66, label %if.then54, !dbg !5129

if.then54:                                        ; preds = %for.body35
  %57 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point36, align 8, !dbg !5130
  %58 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay, align 8, !dbg !5133
  %act_point55 = getelementptr inbounds %struct.MaskLayer, %struct.MaskLayer* %58, i32 0, i32 6, !dbg !5134
  %59 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %act_point55, align 8, !dbg !5134
  %cmp56 = icmp eq %struct.MaskSplinePoint* %57, %59, !dbg !5135
  br i1 %cmp56, label %if.then58, label %if.end62, !dbg !5136

if.then58:                                        ; preds = %if.then54
  %60 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %new_points, align 8, !dbg !5137
  %61 = load i32, i32* %j, align 4, !dbg !5138
  %idxprom59 = sext i32 %61 to i64, !dbg !5137
  %arrayidx60 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %60, i64 %idxprom59, !dbg !5137
  %62 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay, align 8, !dbg !5139
  %act_point61 = getelementptr inbounds %struct.MaskLayer, %struct.MaskLayer* %62, i32 0, i32 6, !dbg !5140
  store %struct.MaskSplinePoint* %arrayidx60, %struct.MaskSplinePoint** %act_point61, align 8, !dbg !5141
  br label %if.end62, !dbg !5139

if.end62:                                         ; preds = %if.then58, %if.then54
  %63 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point36, align 8, !dbg !5142
  call void @delete_feather_points(%struct.MaskSplinePoint* %63), !dbg !5143
  %64 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %new_points, align 8, !dbg !5144
  %65 = load i32, i32* %j, align 4, !dbg !5145
  %idxprom63 = sext i32 %65 to i64, !dbg !5144
  %arrayidx64 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %64, i64 %idxprom63, !dbg !5144
  %66 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point36, align 8, !dbg !5146
  %67 = bitcast %struct.MaskSplinePoint* %arrayidx64 to i8*, !dbg !5147
  %68 = bitcast %struct.MaskSplinePoint* %66 to i8*, !dbg !5147
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %67, i8* align 8 %68, i64 272, i1 false), !dbg !5147
  %69 = load i32, i32* %j, align 4, !dbg !5148
  %inc65 = add nsw i32 %69, 1, !dbg !5148
  store i32 %inc65, i32* %j, align 4, !dbg !5148
  br label %if.end74, !dbg !5149

if.else66:                                        ; preds = %for.body35
  %70 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point36, align 8, !dbg !5150
  %71 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay, align 8, !dbg !5153
  %act_point67 = getelementptr inbounds %struct.MaskLayer, %struct.MaskLayer* %71, i32 0, i32 6, !dbg !5154
  %72 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %act_point67, align 8, !dbg !5154
  %cmp68 = icmp eq %struct.MaskSplinePoint* %70, %72, !dbg !5155
  br i1 %cmp68, label %if.then70, label %if.end72, !dbg !5156

if.then70:                                        ; preds = %if.else66
  %73 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay, align 8, !dbg !5157
  %act_point71 = getelementptr inbounds %struct.MaskLayer, %struct.MaskLayer* %73, i32 0, i32 6, !dbg !5158
  store %struct.MaskSplinePoint* null, %struct.MaskSplinePoint** %act_point71, align 8, !dbg !5159
  br label %if.end72, !dbg !5157

if.end72:                                         ; preds = %if.then70, %if.else66
  %74 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point36, align 8, !dbg !5160
  call void @BKE_mask_point_free(%struct.MaskSplinePoint* %74), !dbg !5161
  %75 = load %struct.MaskSpline*, %struct.MaskSpline** %spline, align 8, !dbg !5162
  %tot_point73 = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %75, i32 0, i32 5, !dbg !5163
  %76 = load i32, i32* %tot_point73, align 4, !dbg !5164
  %dec = add nsw i32 %76, -1, !dbg !5164
  store i32 %dec, i32* %tot_point73, align 4, !dbg !5164
  %77 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay, align 8, !dbg !5165
  %78 = load i32, i32* %mask_layer_shape_ofs, align 4, !dbg !5166
  %79 = load i32, i32* %j, align 4, !dbg !5167
  %add = add nsw i32 %78, %79, !dbg !5168
  call void @BKE_mask_layer_shape_changed_remove(%struct.MaskLayer* %77, i32 %add, i32 1), !dbg !5169
  br label %if.end74

if.end74:                                         ; preds = %if.end72, %if.end62
  br label %for.inc75, !dbg !5170

for.inc75:                                        ; preds = %if.end74
  %80 = load i32, i32* %i, align 4, !dbg !5171
  %inc76 = add nsw i32 %80, 1, !dbg !5171
  store i32 %inc76, i32* %i, align 4, !dbg !5171
  br label %for.cond32, !dbg !5172, !llvm.loop !5173

for.end77:                                        ; preds = %for.cond32
  %81 = load %struct.MaskSpline*, %struct.MaskSpline** %spline, align 8, !dbg !5175
  %tot_point78 = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %81, i32 0, i32 5, !dbg !5176
  %82 = load i32, i32* %tot_point78, align 4, !dbg !5176
  %83 = load i32, i32* %mask_layer_shape_ofs, align 4, !dbg !5177
  %add79 = add nsw i32 %83, %82, !dbg !5177
  store i32 %add79, i32* %mask_layer_shape_ofs, align 4, !dbg !5177
  %84 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !5178
  %85 = load %struct.MaskSpline*, %struct.MaskSpline** %spline, align 8, !dbg !5179
  %points80 = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %85, i32 0, i32 6, !dbg !5180
  %86 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %points80, align 8, !dbg !5180
  %87 = bitcast %struct.MaskSplinePoint* %86 to i8*, !dbg !5179
  call void %84(i8* %87), !dbg !5178
  %88 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %new_points, align 8, !dbg !5181
  %89 = load %struct.MaskSpline*, %struct.MaskSpline** %spline, align 8, !dbg !5182
  %points81 = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %89, i32 0, i32 6, !dbg !5183
  store %struct.MaskSplinePoint* %88, %struct.MaskSplinePoint** %points81, align 8, !dbg !5184
  %90 = load %struct.Mask*, %struct.Mask** %mask, align 8, !dbg !5185
  call void @ED_mask_select_flush_all(%struct.Mask* %90), !dbg !5186
  br label %if.end82

if.end82:                                         ; preds = %for.end77, %if.end29
  store i8 1, i8* %changed, align 1, !dbg !5187
  %91 = load %struct.MaskSpline*, %struct.MaskSpline** %next_spline, align 8, !dbg !5188
  store %struct.MaskSpline* %91, %struct.MaskSpline** %spline, align 8, !dbg !5189
  br label %while.cond, !dbg !5032, !llvm.loop !5190

while.end:                                        ; preds = %while.cond
  %92 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay, align 8, !dbg !5192
  %splines83 = getelementptr inbounds %struct.MaskLayer, %struct.MaskLayer* %92, i32 0, i32 3, !dbg !5194
  %call84 = call zeroext i8 @BLI_listbase_is_empty(%struct.ListBase* %splines83), !dbg !5195
  %tobool85 = icmp ne i8 %call84, 0, !dbg !5195
  br i1 %tobool85, label %if.then86, label %if.end87, !dbg !5196

if.then86:                                        ; preds = %while.end
  %93 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay, align 8, !dbg !5197
  call void @BKE_mask_layer_free_shapes(%struct.MaskLayer* %93), !dbg !5199
  br label %if.end87, !dbg !5200

if.end87:                                         ; preds = %if.then86, %while.end
  br label %for.inc88, !dbg !5201

for.inc88:                                        ; preds = %if.end87, %if.then
  %94 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay, align 8, !dbg !5202
  %next89 = getelementptr inbounds %struct.MaskLayer, %struct.MaskLayer* %94, i32 0, i32 0, !dbg !5203
  %95 = load %struct.MaskLayer*, %struct.MaskLayer** %next89, align 8, !dbg !5203
  store %struct.MaskLayer* %95, %struct.MaskLayer** %masklay, align 8, !dbg !5204
  br label %for.cond, !dbg !5205, !llvm.loop !5206

for.end90:                                        ; preds = %for.cond
  %96 = load i8, i8* %changed, align 1, !dbg !5208
  %tobool91 = icmp ne i8 %96, 0, !dbg !5208
  br i1 %tobool91, label %if.end93, label %if.then92, !dbg !5210

if.then92:                                        ; preds = %for.end90
  store i32 2, i32* %retval, align 4, !dbg !5211
  br label %return, !dbg !5211

if.end93:                                         ; preds = %for.end90
  %97 = load %struct.Mask*, %struct.Mask** %mask, align 8, !dbg !5213
  %98 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !5214
  %r = getelementptr inbounds %struct.Scene, %struct.Scene* %98, i32 0, i32 22, !dbg !5214
  %cfra = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r, i32 0, i32 5, !dbg !5214
  %99 = load i32, i32* %cfra, align 8, !dbg !5214
  %conv94 = sitofp i32 %99 to float, !dbg !5214
  call void @BKE_mask_update_display(%struct.Mask* %97, float %conv94), !dbg !5215
  %100 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5216
  %101 = load %struct.Mask*, %struct.Mask** %mask, align 8, !dbg !5217
  %102 = bitcast %struct.Mask* %101 to i8*, !dbg !5217
  call void @WM_event_add_notifier(%struct.bContext* %100, i32 352321537, i8* %102), !dbg !5218
  store i32 4, i32* %retval, align 4, !dbg !5219
  br label %return, !dbg !5219

return:                                           ; preds = %if.end93, %if.then92
  %103 = load i32, i32* %retval, align 4, !dbg !5220
  ret i32 %103, !dbg !5220
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @MASK_OT_switch_direction(%struct.wmOperatorType* %ot) #0 !dbg !5221 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !5222, metadata !DIExpression()), !dbg !5223
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5224
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !5225
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.32, i64 0, i64 0), i8** %name, align 8, !dbg !5226
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5227
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 3, !dbg !5228
  store i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.33, i64 0, i64 0), i8** %description, align 8, !dbg !5229
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5230
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 1, !dbg !5231
  store i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.34, i64 0, i64 0), i8** %idname, align 8, !dbg !5232
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5233
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !5234
  store i32 (%struct.bContext*, %struct.wmOperator*)* @mask_switch_direction_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !5235
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5236
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !5237
  store i32 (%struct.bContext*)* @ED_maskedit_mask_poll, i32 (%struct.bContext*)** %poll, align 8, !dbg !5238
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5239
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !5240
  store i16 3, i16* %flag, align 8, !dbg !5241
  ret void, !dbg !5242
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @mask_switch_direction_exec(%struct.bContext* %C, %struct.wmOperator* %UNUSED_op) #0 !dbg !5243 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %UNUSED_op.addr = alloca %struct.wmOperator*, align 8
  %scene = alloca %struct.Scene*, align 8
  %mask = alloca %struct.Mask*, align 8
  %masklay = alloca %struct.MaskLayer*, align 8
  %changed = alloca i8, align 1
  %spline = alloca %struct.MaskSpline*, align 8
  %changed_layer = alloca i8, align 1
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !5244, metadata !DIExpression()), !dbg !5245
  store %struct.wmOperator* %UNUSED_op, %struct.wmOperator** %UNUSED_op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %UNUSED_op.addr, metadata !5246, metadata !DIExpression()), !dbg !5247
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene, metadata !5248, metadata !DIExpression()), !dbg !5249
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5250
  %call = call %struct.Scene* @CTX_data_scene(%struct.bContext* %0), !dbg !5251
  store %struct.Scene* %call, %struct.Scene** %scene, align 8, !dbg !5249
  call void @llvm.dbg.declare(metadata %struct.Mask** %mask, metadata !5252, metadata !DIExpression()), !dbg !5253
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5254
  %call1 = call %struct.Mask* @CTX_data_edit_mask(%struct.bContext* %1), !dbg !5255
  store %struct.Mask* %call1, %struct.Mask** %mask, align 8, !dbg !5253
  call void @llvm.dbg.declare(metadata %struct.MaskLayer** %masklay, metadata !5256, metadata !DIExpression()), !dbg !5257
  call void @llvm.dbg.declare(metadata i8* %changed, metadata !5258, metadata !DIExpression()), !dbg !5259
  store i8 0, i8* %changed, align 1, !dbg !5259
  %2 = load %struct.Mask*, %struct.Mask** %mask, align 8, !dbg !5260
  %masklayers = getelementptr inbounds %struct.Mask, %struct.Mask* %2, i32 0, i32 2, !dbg !5262
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %masklayers, i32 0, i32 0, !dbg !5263
  %3 = load i8*, i8** %first, align 8, !dbg !5263
  %4 = bitcast i8* %3 to %struct.MaskLayer*, !dbg !5260
  store %struct.MaskLayer* %4, %struct.MaskLayer** %masklay, align 8, !dbg !5264
  br label %for.cond, !dbg !5265

for.cond:                                         ; preds = %for.inc23, %entry
  %5 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay, align 8, !dbg !5266
  %tobool = icmp ne %struct.MaskLayer* %5, null, !dbg !5268
  br i1 %tobool, label %for.body, label %for.end25, !dbg !5268

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.MaskSpline** %spline, metadata !5269, metadata !DIExpression()), !dbg !5271
  call void @llvm.dbg.declare(metadata i8* %changed_layer, metadata !5272, metadata !DIExpression()), !dbg !5273
  store i8 0, i8* %changed_layer, align 1, !dbg !5273
  %6 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay, align 8, !dbg !5274
  %restrictflag = getelementptr inbounds %struct.MaskLayer, %struct.MaskLayer* %6, i32 0, i32 13, !dbg !5276
  %7 = load i8, i8* %restrictflag, align 1, !dbg !5276
  %conv = zext i8 %7 to i32, !dbg !5274
  %and = and i32 %conv, 3, !dbg !5277
  %tobool2 = icmp ne i32 %and, 0, !dbg !5277
  br i1 %tobool2, label %if.then, label %if.end, !dbg !5278

if.then:                                          ; preds = %for.body
  br label %for.inc23, !dbg !5279

if.end:                                           ; preds = %for.body
  %8 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay, align 8, !dbg !5281
  %splines = getelementptr inbounds %struct.MaskLayer, %struct.MaskLayer* %8, i32 0, i32 3, !dbg !5283
  %first3 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %splines, i32 0, i32 0, !dbg !5284
  %9 = load i8*, i8** %first3, align 8, !dbg !5284
  %10 = bitcast i8* %9 to %struct.MaskSpline*, !dbg !5281
  store %struct.MaskSpline* %10, %struct.MaskSpline** %spline, align 8, !dbg !5285
  br label %for.cond4, !dbg !5286

for.cond4:                                        ; preds = %for.inc, %if.end
  %11 = load %struct.MaskSpline*, %struct.MaskSpline** %spline, align 8, !dbg !5287
  %tobool5 = icmp ne %struct.MaskSpline* %11, null, !dbg !5289
  br i1 %tobool5, label %for.body6, label %for.end, !dbg !5289

for.body6:                                        ; preds = %for.cond4
  %12 = load %struct.MaskSpline*, %struct.MaskSpline** %spline, align 8, !dbg !5290
  %call7 = call zeroext i8 @ED_mask_spline_select_check(%struct.MaskSpline* %12), !dbg !5293
  %tobool8 = icmp ne i8 %call7, 0, !dbg !5293
  br i1 %tobool8, label %if.then9, label %if.end10, !dbg !5294

if.then9:                                         ; preds = %for.body6
  %13 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay, align 8, !dbg !5295
  %14 = load %struct.MaskSpline*, %struct.MaskSpline** %spline, align 8, !dbg !5297
  call void @BKE_mask_spline_direction_switch(%struct.MaskLayer* %13, %struct.MaskSpline* %14), !dbg !5298
  store i8 1, i8* %changed, align 1, !dbg !5299
  store i8 1, i8* %changed_layer, align 1, !dbg !5300
  br label %if.end10, !dbg !5301

if.end10:                                         ; preds = %if.then9, %for.body6
  br label %for.inc, !dbg !5302

for.inc:                                          ; preds = %if.end10
  %15 = load %struct.MaskSpline*, %struct.MaskSpline** %spline, align 8, !dbg !5303
  %next = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %15, i32 0, i32 0, !dbg !5304
  %16 = load %struct.MaskSpline*, %struct.MaskSpline** %next, align 8, !dbg !5304
  store %struct.MaskSpline* %16, %struct.MaskSpline** %spline, align 8, !dbg !5305
  br label %for.cond4, !dbg !5306, !llvm.loop !5307

for.end:                                          ; preds = %for.cond4
  %17 = load i8, i8* %changed_layer, align 1, !dbg !5309
  %tobool11 = icmp ne i8 %17, 0, !dbg !5309
  br i1 %tobool11, label %if.then12, label %if.end22, !dbg !5311

if.then12:                                        ; preds = %for.end
  %18 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !5312
  %tobool13 = icmp ne %struct.Scene* %18, null, !dbg !5312
  br i1 %tobool13, label %cond.true, label %cond.false, !dbg !5315

cond.true:                                        ; preds = %if.then12
  %19 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !5312
  %toolsettings = getelementptr inbounds %struct.Scene, %struct.Scene* %19, i32 0, i32 20, !dbg !5312
  %20 = load %struct.ToolSettings*, %struct.ToolSettings** %toolsettings, align 8, !dbg !5312
  %autokey_mode = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %20, i32 0, i32 21, !dbg !5312
  %21 = load i16, i16* %autokey_mode, align 8, !dbg !5312
  %conv14 = sext i16 %21 to i32, !dbg !5312
  %and15 = and i32 %conv14, 1, !dbg !5312
  %tobool16 = icmp ne i32 %and15, 0, !dbg !5312
  br i1 %tobool16, label %if.then20, label %if.end21, !dbg !5312

cond.false:                                       ; preds = %if.then12
  %22 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 91), align 8, !dbg !5312
  %conv17 = sext i16 %22 to i32, !dbg !5312
  %and18 = and i32 %conv17, 1, !dbg !5312
  %tobool19 = icmp ne i32 %and18, 0, !dbg !5312
  br i1 %tobool19, label %if.then20, label %if.end21, !dbg !5315

if.then20:                                        ; preds = %cond.false, %cond.true
  %23 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay, align 8, !dbg !5316
  %24 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !5318
  %r = getelementptr inbounds %struct.Scene, %struct.Scene* %24, i32 0, i32 22, !dbg !5318
  %cfra = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r, i32 0, i32 5, !dbg !5318
  %25 = load i32, i32* %cfra, align 8, !dbg !5318
  call void @ED_mask_layer_shape_auto_key(%struct.MaskLayer* %23, i32 %25), !dbg !5319
  br label %if.end21, !dbg !5320

if.end21:                                         ; preds = %if.then20, %cond.false, %cond.true
  br label %if.end22, !dbg !5321

if.end22:                                         ; preds = %if.end21, %for.end
  br label %for.inc23, !dbg !5322

for.inc23:                                        ; preds = %if.end22, %if.then
  %26 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay, align 8, !dbg !5323
  %next24 = getelementptr inbounds %struct.MaskLayer, %struct.MaskLayer* %26, i32 0, i32 0, !dbg !5324
  %27 = load %struct.MaskLayer*, %struct.MaskLayer** %next24, align 8, !dbg !5324
  store %struct.MaskLayer* %27, %struct.MaskLayer** %masklay, align 8, !dbg !5325
  br label %for.cond, !dbg !5326, !llvm.loop !5327

for.end25:                                        ; preds = %for.cond
  %28 = load i8, i8* %changed, align 1, !dbg !5329
  %tobool26 = icmp ne i8 %28, 0, !dbg !5329
  br i1 %tobool26, label %if.then27, label %if.end31, !dbg !5331

if.then27:                                        ; preds = %for.end25
  %29 = load %struct.Mask*, %struct.Mask** %mask, align 8, !dbg !5332
  %30 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !5334
  %r28 = getelementptr inbounds %struct.Scene, %struct.Scene* %30, i32 0, i32 22, !dbg !5334
  %cfra29 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r28, i32 0, i32 5, !dbg !5334
  %31 = load i32, i32* %cfra29, align 8, !dbg !5334
  %conv30 = sitofp i32 %31 to float, !dbg !5334
  call void @BKE_mask_update_display(%struct.Mask* %29, float %conv30), !dbg !5335
  %32 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5336
  %33 = load %struct.Mask*, %struct.Mask** %mask, align 8, !dbg !5337
  %34 = bitcast %struct.Mask* %33 to i8*, !dbg !5337
  call void @WM_event_add_notifier(%struct.bContext* %32, i32 358219776, i8* %34), !dbg !5338
  %35 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5339
  %36 = load %struct.Mask*, %struct.Mask** %mask, align 8, !dbg !5340
  %37 = bitcast %struct.Mask* %36 to i8*, !dbg !5340
  call void @WM_event_add_notifier(%struct.bContext* %35, i32 352321537, i8* %37), !dbg !5341
  store i32 4, i32* %retval, align 4, !dbg !5342
  br label %return, !dbg !5342

if.end31:                                         ; preds = %for.end25
  store i32 2, i32* %retval, align 4, !dbg !5343
  br label %return, !dbg !5343

return:                                           ; preds = %if.end31, %if.then27
  %38 = load i32, i32* %retval, align 4, !dbg !5344
  ret i32 %38, !dbg !5344
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @MASK_OT_normals_make_consistent(%struct.wmOperatorType* %ot) #0 !dbg !5345 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !5346, metadata !DIExpression()), !dbg !5347
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5348
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !5349
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.35, i64 0, i64 0), i8** %name, align 8, !dbg !5350
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5351
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 3, !dbg !5352
  store i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.36, i64 0, i64 0), i8** %description, align 8, !dbg !5353
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5354
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 1, !dbg !5355
  store i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.37, i64 0, i64 0), i8** %idname, align 8, !dbg !5356
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5357
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !5358
  store i32 (%struct.bContext*, %struct.wmOperator*)* @mask_normals_make_consistent_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !5359
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5360
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !5361
  store i32 (%struct.bContext*)* @ED_maskedit_mask_poll, i32 (%struct.bContext*)** %poll, align 8, !dbg !5362
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5363
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !5364
  store i16 3, i16* %flag, align 8, !dbg !5365
  ret void, !dbg !5366
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @mask_normals_make_consistent_exec(%struct.bContext* %C, %struct.wmOperator* %UNUSED_op) #0 !dbg !5367 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %UNUSED_op.addr = alloca %struct.wmOperator*, align 8
  %scene = alloca %struct.Scene*, align 8
  %mask = alloca %struct.Mask*, align 8
  %masklay = alloca %struct.MaskLayer*, align 8
  %i = alloca i32, align 4
  %changed = alloca i8, align 1
  %spline = alloca %struct.MaskSpline*, align 8
  %changed_layer = alloca i8, align 1
  %point = alloca %struct.MaskSplinePoint*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !5368, metadata !DIExpression()), !dbg !5369
  store %struct.wmOperator* %UNUSED_op, %struct.wmOperator** %UNUSED_op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %UNUSED_op.addr, metadata !5370, metadata !DIExpression()), !dbg !5371
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene, metadata !5372, metadata !DIExpression()), !dbg !5373
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5374
  %call = call %struct.Scene* @CTX_data_scene(%struct.bContext* %0), !dbg !5375
  store %struct.Scene* %call, %struct.Scene** %scene, align 8, !dbg !5373
  call void @llvm.dbg.declare(metadata %struct.Mask** %mask, metadata !5376, metadata !DIExpression()), !dbg !5377
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5378
  %call1 = call %struct.Mask* @CTX_data_edit_mask(%struct.bContext* %1), !dbg !5379
  store %struct.Mask* %call1, %struct.Mask** %mask, align 8, !dbg !5377
  call void @llvm.dbg.declare(metadata %struct.MaskLayer** %masklay, metadata !5380, metadata !DIExpression()), !dbg !5381
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5382, metadata !DIExpression()), !dbg !5383
  call void @llvm.dbg.declare(metadata i8* %changed, metadata !5384, metadata !DIExpression()), !dbg !5385
  store i8 0, i8* %changed, align 1, !dbg !5385
  %2 = load %struct.Mask*, %struct.Mask** %mask, align 8, !dbg !5386
  %masklayers = getelementptr inbounds %struct.Mask, %struct.Mask* %2, i32 0, i32 2, !dbg !5388
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %masklayers, i32 0, i32 0, !dbg !5389
  %3 = load i8*, i8** %first, align 8, !dbg !5389
  %4 = bitcast i8* %3 to %struct.MaskLayer*, !dbg !5386
  store %struct.MaskLayer* %4, %struct.MaskLayer** %masklay, align 8, !dbg !5390
  br label %for.cond, !dbg !5391

for.cond:                                         ; preds = %for.inc35, %entry
  %5 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay, align 8, !dbg !5392
  %tobool = icmp ne %struct.MaskLayer* %5, null, !dbg !5394
  br i1 %tobool, label %for.body, label %for.end37, !dbg !5394

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.MaskSpline** %spline, metadata !5395, metadata !DIExpression()), !dbg !5397
  call void @llvm.dbg.declare(metadata i8* %changed_layer, metadata !5398, metadata !DIExpression()), !dbg !5399
  store i8 0, i8* %changed_layer, align 1, !dbg !5399
  %6 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay, align 8, !dbg !5400
  %restrictflag = getelementptr inbounds %struct.MaskLayer, %struct.MaskLayer* %6, i32 0, i32 13, !dbg !5402
  %7 = load i8, i8* %restrictflag, align 1, !dbg !5402
  %conv = zext i8 %7 to i32, !dbg !5400
  %and = and i32 %conv, 3, !dbg !5403
  %tobool2 = icmp ne i32 %and, 0, !dbg !5403
  br i1 %tobool2, label %if.then, label %if.end, !dbg !5404

if.then:                                          ; preds = %for.body
  br label %for.inc35, !dbg !5405

if.end:                                           ; preds = %for.body
  %8 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay, align 8, !dbg !5407
  %splines = getelementptr inbounds %struct.MaskLayer, %struct.MaskLayer* %8, i32 0, i32 3, !dbg !5409
  %first3 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %splines, i32 0, i32 0, !dbg !5410
  %9 = load i8*, i8** %first3, align 8, !dbg !5410
  %10 = bitcast i8* %9 to %struct.MaskSpline*, !dbg !5407
  store %struct.MaskSpline* %10, %struct.MaskSpline** %spline, align 8, !dbg !5411
  br label %for.cond4, !dbg !5412

for.cond4:                                        ; preds = %for.inc21, %if.end
  %11 = load %struct.MaskSpline*, %struct.MaskSpline** %spline, align 8, !dbg !5413
  %tobool5 = icmp ne %struct.MaskSpline* %11, null, !dbg !5415
  br i1 %tobool5, label %for.body6, label %for.end22, !dbg !5415

for.body6:                                        ; preds = %for.cond4
  store i32 0, i32* %i, align 4, !dbg !5416
  br label %for.cond7, !dbg !5419

for.cond7:                                        ; preds = %for.inc, %for.body6
  %12 = load i32, i32* %i, align 4, !dbg !5420
  %13 = load %struct.MaskSpline*, %struct.MaskSpline** %spline, align 8, !dbg !5422
  %tot_point = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %13, i32 0, i32 5, !dbg !5423
  %14 = load i32, i32* %tot_point, align 4, !dbg !5423
  %cmp = icmp slt i32 %12, %14, !dbg !5424
  br i1 %cmp, label %for.body9, label %for.end, !dbg !5425

for.body9:                                        ; preds = %for.cond7
  call void @llvm.dbg.declare(metadata %struct.MaskSplinePoint** %point, metadata !5426, metadata !DIExpression()), !dbg !5428
  %15 = load %struct.MaskSpline*, %struct.MaskSpline** %spline, align 8, !dbg !5429
  %points = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %15, i32 0, i32 6, !dbg !5430
  %16 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %points, align 8, !dbg !5430
  %17 = load i32, i32* %i, align 4, !dbg !5431
  %idxprom = sext i32 %17 to i64, !dbg !5429
  %arrayidx = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %16, i64 %idxprom, !dbg !5429
  store %struct.MaskSplinePoint* %arrayidx, %struct.MaskSplinePoint** %point, align 8, !dbg !5428
  %18 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point, align 8, !dbg !5432
  %bezt = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %18, i32 0, i32 0, !dbg !5432
  %f1 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %bezt, i32 0, i32 7, !dbg !5432
  %19 = load i8, i8* %f1, align 1, !dbg !5432
  %conv10 = zext i8 %19 to i32, !dbg !5432
  %20 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point, align 8, !dbg !5432
  %bezt11 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %20, i32 0, i32 0, !dbg !5432
  %f2 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %bezt11, i32 0, i32 8, !dbg !5432
  %21 = load i8, i8* %f2, align 4, !dbg !5432
  %conv12 = zext i8 %21 to i32, !dbg !5432
  %or = or i32 %conv10, %conv12, !dbg !5432
  %22 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point, align 8, !dbg !5432
  %bezt13 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %22, i32 0, i32 0, !dbg !5432
  %f3 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %bezt13, i32 0, i32 9, !dbg !5432
  %23 = load i8, i8* %f3, align 1, !dbg !5432
  %conv14 = zext i8 %23 to i32, !dbg !5432
  %or15 = or i32 %or, %conv14, !dbg !5432
  %and16 = and i32 %or15, 1, !dbg !5432
  %cmp17 = icmp ne i32 %and16, 0, !dbg !5432
  br i1 %cmp17, label %if.then19, label %if.end20, !dbg !5434

if.then19:                                        ; preds = %for.body9
  %24 = load %struct.MaskSpline*, %struct.MaskSpline** %spline, align 8, !dbg !5435
  %25 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point, align 8, !dbg !5437
  call void @BKE_mask_calc_handle_point_auto(%struct.MaskSpline* %24, %struct.MaskSplinePoint* %25, i8 zeroext 0), !dbg !5438
  store i8 1, i8* %changed, align 1, !dbg !5439
  store i8 1, i8* %changed_layer, align 1, !dbg !5440
  br label %if.end20, !dbg !5441

if.end20:                                         ; preds = %if.then19, %for.body9
  br label %for.inc, !dbg !5442

for.inc:                                          ; preds = %if.end20
  %26 = load i32, i32* %i, align 4, !dbg !5443
  %inc = add nsw i32 %26, 1, !dbg !5443
  store i32 %inc, i32* %i, align 4, !dbg !5443
  br label %for.cond7, !dbg !5444, !llvm.loop !5445

for.end:                                          ; preds = %for.cond7
  br label %for.inc21, !dbg !5447

for.inc21:                                        ; preds = %for.end
  %27 = load %struct.MaskSpline*, %struct.MaskSpline** %spline, align 8, !dbg !5448
  %next = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %27, i32 0, i32 0, !dbg !5449
  %28 = load %struct.MaskSpline*, %struct.MaskSpline** %next, align 8, !dbg !5449
  store %struct.MaskSpline* %28, %struct.MaskSpline** %spline, align 8, !dbg !5450
  br label %for.cond4, !dbg !5451, !llvm.loop !5452

for.end22:                                        ; preds = %for.cond4
  %29 = load i8, i8* %changed_layer, align 1, !dbg !5454
  %tobool23 = icmp ne i8 %29, 0, !dbg !5454
  br i1 %tobool23, label %if.then24, label %if.end34, !dbg !5456

if.then24:                                        ; preds = %for.end22
  %30 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !5457
  %tobool25 = icmp ne %struct.Scene* %30, null, !dbg !5457
  br i1 %tobool25, label %cond.true, label %cond.false, !dbg !5460

cond.true:                                        ; preds = %if.then24
  %31 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !5457
  %toolsettings = getelementptr inbounds %struct.Scene, %struct.Scene* %31, i32 0, i32 20, !dbg !5457
  %32 = load %struct.ToolSettings*, %struct.ToolSettings** %toolsettings, align 8, !dbg !5457
  %autokey_mode = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %32, i32 0, i32 21, !dbg !5457
  %33 = load i16, i16* %autokey_mode, align 8, !dbg !5457
  %conv26 = sext i16 %33 to i32, !dbg !5457
  %and27 = and i32 %conv26, 1, !dbg !5457
  %tobool28 = icmp ne i32 %and27, 0, !dbg !5457
  br i1 %tobool28, label %if.then32, label %if.end33, !dbg !5457

cond.false:                                       ; preds = %if.then24
  %34 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 91), align 8, !dbg !5457
  %conv29 = sext i16 %34 to i32, !dbg !5457
  %and30 = and i32 %conv29, 1, !dbg !5457
  %tobool31 = icmp ne i32 %and30, 0, !dbg !5457
  br i1 %tobool31, label %if.then32, label %if.end33, !dbg !5460

if.then32:                                        ; preds = %cond.false, %cond.true
  %35 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay, align 8, !dbg !5461
  %36 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !5463
  %r = getelementptr inbounds %struct.Scene, %struct.Scene* %36, i32 0, i32 22, !dbg !5463
  %cfra = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r, i32 0, i32 5, !dbg !5463
  %37 = load i32, i32* %cfra, align 8, !dbg !5463
  call void @ED_mask_layer_shape_auto_key(%struct.MaskLayer* %35, i32 %37), !dbg !5464
  br label %if.end33, !dbg !5465

if.end33:                                         ; preds = %if.then32, %cond.false, %cond.true
  br label %if.end34, !dbg !5466

if.end34:                                         ; preds = %if.end33, %for.end22
  br label %for.inc35, !dbg !5467

for.inc35:                                        ; preds = %if.end34, %if.then
  %38 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay, align 8, !dbg !5468
  %next36 = getelementptr inbounds %struct.MaskLayer, %struct.MaskLayer* %38, i32 0, i32 0, !dbg !5469
  %39 = load %struct.MaskLayer*, %struct.MaskLayer** %next36, align 8, !dbg !5469
  store %struct.MaskLayer* %39, %struct.MaskLayer** %masklay, align 8, !dbg !5470
  br label %for.cond, !dbg !5471, !llvm.loop !5472

for.end37:                                        ; preds = %for.cond
  %40 = load i8, i8* %changed, align 1, !dbg !5474
  %tobool38 = icmp ne i8 %40, 0, !dbg !5474
  br i1 %tobool38, label %if.then39, label %if.end43, !dbg !5476

if.then39:                                        ; preds = %for.end37
  %41 = load %struct.Mask*, %struct.Mask** %mask, align 8, !dbg !5477
  %42 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !5479
  %r40 = getelementptr inbounds %struct.Scene, %struct.Scene* %42, i32 0, i32 22, !dbg !5479
  %cfra41 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r40, i32 0, i32 5, !dbg !5479
  %43 = load i32, i32* %cfra41, align 8, !dbg !5479
  %conv42 = sitofp i32 %43 to float, !dbg !5479
  call void @BKE_mask_update_display(%struct.Mask* %41, float %conv42), !dbg !5480
  %44 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5481
  %45 = load %struct.Mask*, %struct.Mask** %mask, align 8, !dbg !5482
  %46 = bitcast %struct.Mask* %45 to i8*, !dbg !5482
  call void @WM_event_add_notifier(%struct.bContext* %44, i32 358219776, i8* %46), !dbg !5483
  %47 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5484
  %48 = load %struct.Mask*, %struct.Mask** %mask, align 8, !dbg !5485
  %49 = bitcast %struct.Mask* %48 to i8*, !dbg !5485
  call void @WM_event_add_notifier(%struct.bContext* %47, i32 352321537, i8* %49), !dbg !5486
  store i32 4, i32* %retval, align 4, !dbg !5487
  br label %return, !dbg !5487

if.end43:                                         ; preds = %for.end37
  store i32 2, i32* %retval, align 4, !dbg !5488
  br label %return, !dbg !5488

return:                                           ; preds = %if.end43, %if.then39
  %50 = load i32, i32* %retval, align 4, !dbg !5489
  ret i32 %50, !dbg !5489
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @MASK_OT_handle_type_set(%struct.wmOperatorType* %ot) #0 !dbg !2 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !5490, metadata !DIExpression()), !dbg !5491
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5492
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !5493
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.48, i64 0, i64 0), i8** %name, align 8, !dbg !5494
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5495
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 3, !dbg !5496
  store i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.49, i64 0, i64 0), i8** %description, align 8, !dbg !5497
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5498
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 1, !dbg !5499
  store i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.50, i64 0, i64 0), i8** %idname, align 8, !dbg !5500
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5501
  %invoke = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 6, !dbg !5502
  store i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)* @WM_menu_invoke, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)** %invoke, align 8, !dbg !5503
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5504
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 4, !dbg !5505
  store i32 (%struct.bContext*, %struct.wmOperator*)* @set_handle_type_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !5506
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5507
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 9, !dbg !5508
  store i32 (%struct.bContext*)* @ED_maskedit_mask_poll, i32 (%struct.bContext*)** %poll, align 8, !dbg !5509
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5510
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 19, !dbg !5511
  store i16 3, i16* %flag, align 8, !dbg !5512
  %7 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5513
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %7, i32 0, i32 11, !dbg !5514
  %8 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !5514
  %9 = bitcast %struct.StructRNA* %8 to i8*, !dbg !5513
  %call = call %struct.PropertyRNA* @RNA_def_enum(i8* %9, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.51, i64 0, i64 0), %struct.EnumPropertyItem* getelementptr inbounds ([6 x %struct.EnumPropertyItem], [6 x %struct.EnumPropertyItem]* @MASK_OT_handle_type_set.editcurve_handle_type_items, i64 0, i64 0), i32 1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.52, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.53, i64 0, i64 0)), !dbg !5515
  %10 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5516
  %prop = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %10, i32 0, i32 13, !dbg !5517
  store %struct.PropertyRNA* %call, %struct.PropertyRNA** %prop, align 8, !dbg !5518
  ret void, !dbg !5519
}

declare dso_local i32 @WM_menu_invoke(%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @set_handle_type_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !5520 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %mask = alloca %struct.Mask*, align 8
  %masklay = alloca %struct.MaskLayer*, align 8
  %handle_type = alloca i32, align 4
  %changed = alloca i8, align 1
  %spline = alloca %struct.MaskSpline*, align 8
  %i = alloca i32, align 4
  %point = alloca %struct.MaskSplinePoint*, align 8
  %bezt20 = alloca %struct.BezTriple*, align 8
  %vec = alloca [3 x float], align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !5521, metadata !DIExpression()), !dbg !5522
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !5523, metadata !DIExpression()), !dbg !5524
  call void @llvm.dbg.declare(metadata %struct.Mask** %mask, metadata !5525, metadata !DIExpression()), !dbg !5526
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5527
  %call = call %struct.Mask* @CTX_data_edit_mask(%struct.bContext* %0), !dbg !5528
  store %struct.Mask* %call, %struct.Mask** %mask, align 8, !dbg !5526
  call void @llvm.dbg.declare(metadata %struct.MaskLayer** %masklay, metadata !5529, metadata !DIExpression()), !dbg !5530
  call void @llvm.dbg.declare(metadata i32* %handle_type, metadata !5531, metadata !DIExpression()), !dbg !5532
  %1 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5533
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %1, i32 0, i32 7, !dbg !5534
  %2 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !5534
  %call1 = call i32 @RNA_enum_get(%struct.PointerRNA* %2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.51, i64 0, i64 0)), !dbg !5535
  store i32 %call1, i32* %handle_type, align 4, !dbg !5532
  call void @llvm.dbg.declare(metadata i8* %changed, metadata !5536, metadata !DIExpression()), !dbg !5537
  store i8 0, i8* %changed, align 1, !dbg !5537
  %3 = load %struct.Mask*, %struct.Mask** %mask, align 8, !dbg !5538
  %masklayers = getelementptr inbounds %struct.Mask, %struct.Mask* %3, i32 0, i32 2, !dbg !5540
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %masklayers, i32 0, i32 0, !dbg !5541
  %4 = load i8*, i8** %first, align 8, !dbg !5541
  %5 = bitcast i8* %4 to %struct.MaskLayer*, !dbg !5538
  store %struct.MaskLayer* %5, %struct.MaskLayer** %masklay, align 8, !dbg !5542
  br label %for.cond, !dbg !5543

for.cond:                                         ; preds = %for.inc66, %entry
  %6 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay, align 8, !dbg !5544
  %tobool = icmp ne %struct.MaskLayer* %6, null, !dbg !5546
  br i1 %tobool, label %for.body, label %for.end68, !dbg !5546

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.MaskSpline** %spline, metadata !5547, metadata !DIExpression()), !dbg !5549
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5550, metadata !DIExpression()), !dbg !5551
  %7 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay, align 8, !dbg !5552
  %restrictflag = getelementptr inbounds %struct.MaskLayer, %struct.MaskLayer* %7, i32 0, i32 13, !dbg !5554
  %8 = load i8, i8* %restrictflag, align 1, !dbg !5554
  %conv = zext i8 %8 to i32, !dbg !5552
  %and = and i32 %conv, 3, !dbg !5555
  %tobool2 = icmp ne i32 %and, 0, !dbg !5555
  br i1 %tobool2, label %if.then, label %if.end, !dbg !5556

if.then:                                          ; preds = %for.body
  br label %for.inc66, !dbg !5557

if.end:                                           ; preds = %for.body
  %9 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay, align 8, !dbg !5559
  %splines = getelementptr inbounds %struct.MaskLayer, %struct.MaskLayer* %9, i32 0, i32 3, !dbg !5561
  %first3 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %splines, i32 0, i32 0, !dbg !5562
  %10 = load i8*, i8** %first3, align 8, !dbg !5562
  %11 = bitcast i8* %10 to %struct.MaskSpline*, !dbg !5559
  store %struct.MaskSpline* %11, %struct.MaskSpline** %spline, align 8, !dbg !5563
  br label %for.cond4, !dbg !5564

for.cond4:                                        ; preds = %for.inc64, %if.end
  %12 = load %struct.MaskSpline*, %struct.MaskSpline** %spline, align 8, !dbg !5565
  %tobool5 = icmp ne %struct.MaskSpline* %12, null, !dbg !5567
  br i1 %tobool5, label %for.body6, label %for.end65, !dbg !5567

for.body6:                                        ; preds = %for.cond4
  store i32 0, i32* %i, align 4, !dbg !5568
  br label %for.cond7, !dbg !5571

for.cond7:                                        ; preds = %for.inc, %for.body6
  %13 = load i32, i32* %i, align 4, !dbg !5572
  %14 = load %struct.MaskSpline*, %struct.MaskSpline** %spline, align 8, !dbg !5574
  %tot_point = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %14, i32 0, i32 5, !dbg !5575
  %15 = load i32, i32* %tot_point, align 4, !dbg !5575
  %cmp = icmp slt i32 %13, %15, !dbg !5576
  br i1 %cmp, label %for.body9, label %for.end, !dbg !5577

for.body9:                                        ; preds = %for.cond7
  call void @llvm.dbg.declare(metadata %struct.MaskSplinePoint** %point, metadata !5578, metadata !DIExpression()), !dbg !5580
  %16 = load %struct.MaskSpline*, %struct.MaskSpline** %spline, align 8, !dbg !5581
  %points = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %16, i32 0, i32 6, !dbg !5582
  %17 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %points, align 8, !dbg !5582
  %18 = load i32, i32* %i, align 4, !dbg !5583
  %idxprom = sext i32 %18 to i64, !dbg !5581
  %arrayidx = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %17, i64 %idxprom, !dbg !5581
  store %struct.MaskSplinePoint* %arrayidx, %struct.MaskSplinePoint** %point, align 8, !dbg !5580
  %19 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point, align 8, !dbg !5584
  %bezt = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %19, i32 0, i32 0, !dbg !5584
  %f1 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %bezt, i32 0, i32 7, !dbg !5584
  %20 = load i8, i8* %f1, align 1, !dbg !5584
  %conv10 = zext i8 %20 to i32, !dbg !5584
  %21 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point, align 8, !dbg !5584
  %bezt11 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %21, i32 0, i32 0, !dbg !5584
  %f2 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %bezt11, i32 0, i32 8, !dbg !5584
  %22 = load i8, i8* %f2, align 4, !dbg !5584
  %conv12 = zext i8 %22 to i32, !dbg !5584
  %or = or i32 %conv10, %conv12, !dbg !5584
  %23 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point, align 8, !dbg !5584
  %bezt13 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %23, i32 0, i32 0, !dbg !5584
  %f3 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %bezt13, i32 0, i32 9, !dbg !5584
  %24 = load i8, i8* %f3, align 1, !dbg !5584
  %conv14 = zext i8 %24 to i32, !dbg !5584
  %or15 = or i32 %or, %conv14, !dbg !5584
  %and16 = and i32 %or15, 1, !dbg !5584
  %cmp17 = icmp ne i32 %and16, 0, !dbg !5584
  br i1 %cmp17, label %if.then19, label %if.end63, !dbg !5586

if.then19:                                        ; preds = %for.body9
  call void @llvm.dbg.declare(metadata %struct.BezTriple** %bezt20, metadata !5587, metadata !DIExpression()), !dbg !5589
  %25 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point, align 8, !dbg !5590
  %bezt21 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %25, i32 0, i32 0, !dbg !5591
  store %struct.BezTriple* %bezt21, %struct.BezTriple** %bezt20, align 8, !dbg !5589
  %26 = load %struct.BezTriple*, %struct.BezTriple** %bezt20, align 8, !dbg !5592
  %f222 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %26, i32 0, i32 8, !dbg !5594
  %27 = load i8, i8* %f222, align 4, !dbg !5594
  %conv23 = zext i8 %27 to i32, !dbg !5592
  %and24 = and i32 %conv23, 1, !dbg !5595
  %tobool25 = icmp ne i32 %and24, 0, !dbg !5595
  br i1 %tobool25, label %if.then26, label %if.else, !dbg !5596

if.then26:                                        ; preds = %if.then19
  %28 = load i32, i32* %handle_type, align 4, !dbg !5597
  %conv27 = trunc i32 %28 to i8, !dbg !5597
  %29 = load %struct.BezTriple*, %struct.BezTriple** %bezt20, align 8, !dbg !5599
  %h1 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %29, i32 0, i32 5, !dbg !5600
  store i8 %conv27, i8* %h1, align 1, !dbg !5601
  %30 = load i32, i32* %handle_type, align 4, !dbg !5602
  %conv28 = trunc i32 %30 to i8, !dbg !5602
  %31 = load %struct.BezTriple*, %struct.BezTriple** %bezt20, align 8, !dbg !5603
  %h2 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %31, i32 0, i32 6, !dbg !5604
  store i8 %conv28, i8* %h2, align 2, !dbg !5605
  br label %if.end45, !dbg !5606

if.else:                                          ; preds = %if.then19
  %32 = load %struct.BezTriple*, %struct.BezTriple** %bezt20, align 8, !dbg !5607
  %f129 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %32, i32 0, i32 7, !dbg !5610
  %33 = load i8, i8* %f129, align 1, !dbg !5610
  %conv30 = zext i8 %33 to i32, !dbg !5607
  %and31 = and i32 %conv30, 1, !dbg !5611
  %tobool32 = icmp ne i32 %and31, 0, !dbg !5611
  br i1 %tobool32, label %if.then33, label %if.end36, !dbg !5612

if.then33:                                        ; preds = %if.else
  %34 = load i32, i32* %handle_type, align 4, !dbg !5613
  %conv34 = trunc i32 %34 to i8, !dbg !5613
  %35 = load %struct.BezTriple*, %struct.BezTriple** %bezt20, align 8, !dbg !5615
  %h135 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %35, i32 0, i32 5, !dbg !5616
  store i8 %conv34, i8* %h135, align 1, !dbg !5617
  br label %if.end36, !dbg !5618

if.end36:                                         ; preds = %if.then33, %if.else
  %36 = load %struct.BezTriple*, %struct.BezTriple** %bezt20, align 8, !dbg !5619
  %f337 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %36, i32 0, i32 9, !dbg !5621
  %37 = load i8, i8* %f337, align 1, !dbg !5621
  %conv38 = zext i8 %37 to i32, !dbg !5619
  %and39 = and i32 %conv38, 1, !dbg !5622
  %tobool40 = icmp ne i32 %and39, 0, !dbg !5622
  br i1 %tobool40, label %if.then41, label %if.end44, !dbg !5623

if.then41:                                        ; preds = %if.end36
  %38 = load i32, i32* %handle_type, align 4, !dbg !5624
  %conv42 = trunc i32 %38 to i8, !dbg !5624
  %39 = load %struct.BezTriple*, %struct.BezTriple** %bezt20, align 8, !dbg !5626
  %h243 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %39, i32 0, i32 6, !dbg !5627
  store i8 %conv42, i8* %h243, align 2, !dbg !5628
  br label %if.end44, !dbg !5629

if.end44:                                         ; preds = %if.then41, %if.end36
  br label %if.end45

if.end45:                                         ; preds = %if.end44, %if.then26
  %40 = load i32, i32* %handle_type, align 4, !dbg !5630
  %cmp46 = icmp eq i32 %40, 3, !dbg !5632
  br i1 %cmp46, label %if.then48, label %if.end62, !dbg !5633

if.then48:                                        ; preds = %if.end45
  call void @llvm.dbg.declare(metadata [3 x float]* %vec, metadata !5634, metadata !DIExpression()), !dbg !5636
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !5637
  %41 = load %struct.BezTriple*, %struct.BezTriple** %bezt20, align 8, !dbg !5638
  %vec49 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %41, i32 0, i32 0, !dbg !5639
  %arrayidx50 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec49, i64 0, i64 0, !dbg !5638
  %arraydecay51 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx50, i64 0, i64 0, !dbg !5638
  %42 = load %struct.BezTriple*, %struct.BezTriple** %bezt20, align 8, !dbg !5640
  %vec52 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %42, i32 0, i32 0, !dbg !5641
  %arrayidx53 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec52, i64 0, i64 1, !dbg !5640
  %arraydecay54 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx53, i64 0, i64 0, !dbg !5640
  call void @sub_v3_v3v3(float* %arraydecay, float* %arraydecay51, float* %arraydecay54), !dbg !5642
  %43 = load %struct.BezTriple*, %struct.BezTriple** %bezt20, align 8, !dbg !5643
  %vec55 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %43, i32 0, i32 0, !dbg !5644
  %arrayidx56 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec55, i64 0, i64 2, !dbg !5643
  %arraydecay57 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx56, i64 0, i64 0, !dbg !5643
  %44 = load %struct.BezTriple*, %struct.BezTriple** %bezt20, align 8, !dbg !5645
  %vec58 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %44, i32 0, i32 0, !dbg !5646
  %arrayidx59 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec58, i64 0, i64 1, !dbg !5645
  %arraydecay60 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx59, i64 0, i64 0, !dbg !5645
  %arraydecay61 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !5647
  call void @add_v3_v3v3(float* %arraydecay57, float* %arraydecay60, float* %arraydecay61), !dbg !5648
  br label %if.end62, !dbg !5649

if.end62:                                         ; preds = %if.then48, %if.end45
  store i8 1, i8* %changed, align 1, !dbg !5650
  br label %if.end63, !dbg !5651

if.end63:                                         ; preds = %if.end62, %for.body9
  br label %for.inc, !dbg !5652

for.inc:                                          ; preds = %if.end63
  %45 = load i32, i32* %i, align 4, !dbg !5653
  %inc = add nsw i32 %45, 1, !dbg !5653
  store i32 %inc, i32* %i, align 4, !dbg !5653
  br label %for.cond7, !dbg !5654, !llvm.loop !5655

for.end:                                          ; preds = %for.cond7
  br label %for.inc64, !dbg !5657

for.inc64:                                        ; preds = %for.end
  %46 = load %struct.MaskSpline*, %struct.MaskSpline** %spline, align 8, !dbg !5658
  %next = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %46, i32 0, i32 0, !dbg !5659
  %47 = load %struct.MaskSpline*, %struct.MaskSpline** %next, align 8, !dbg !5659
  store %struct.MaskSpline* %47, %struct.MaskSpline** %spline, align 8, !dbg !5660
  br label %for.cond4, !dbg !5661, !llvm.loop !5662

for.end65:                                        ; preds = %for.cond4
  br label %for.inc66, !dbg !5664

for.inc66:                                        ; preds = %for.end65, %if.then
  %48 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay, align 8, !dbg !5665
  %next67 = getelementptr inbounds %struct.MaskLayer, %struct.MaskLayer* %48, i32 0, i32 0, !dbg !5666
  %49 = load %struct.MaskLayer*, %struct.MaskLayer** %next67, align 8, !dbg !5666
  store %struct.MaskLayer* %49, %struct.MaskLayer** %masklay, align 8, !dbg !5667
  br label %for.cond, !dbg !5668, !llvm.loop !5669

for.end68:                                        ; preds = %for.cond
  %50 = load i8, i8* %changed, align 1, !dbg !5671
  %tobool69 = icmp ne i8 %50, 0, !dbg !5671
  br i1 %tobool69, label %if.then70, label %if.end71, !dbg !5673

if.then70:                                        ; preds = %for.end68
  %51 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5674
  %52 = load %struct.Mask*, %struct.Mask** %mask, align 8, !dbg !5676
  %53 = bitcast %struct.Mask* %52 to i8*, !dbg !5676
  call void @WM_event_add_notifier(%struct.bContext* %51, i32 358285312, i8* %53), !dbg !5677
  %54 = load %struct.Mask*, %struct.Mask** %mask, align 8, !dbg !5678
  %id = getelementptr inbounds %struct.Mask, %struct.Mask* %54, i32 0, i32 0, !dbg !5679
  call void @DAG_id_tag_update(%struct.ID* %id, i16 signext 0), !dbg !5680
  store i32 4, i32* %retval, align 4, !dbg !5681
  br label %return, !dbg !5681

if.end71:                                         ; preds = %for.end68
  store i32 2, i32* %retval, align 4, !dbg !5682
  br label %return, !dbg !5682

return:                                           ; preds = %if.end71, %if.then70
  %55 = load i32, i32* %retval, align 4, !dbg !5683
  ret i32 %55, !dbg !5683
}

declare dso_local %struct.PropertyRNA* @RNA_def_enum(i8*, i8*, %struct.EnumPropertyItem*, i32, i8*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @MASK_OT_hide_view_clear(%struct.wmOperatorType* %ot) #0 !dbg !5684 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !5685, metadata !DIExpression()), !dbg !5686
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5687
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !5688
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.54, i64 0, i64 0), i8** %name, align 8, !dbg !5689
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5690
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 3, !dbg !5691
  store i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.55, i64 0, i64 0), i8** %description, align 8, !dbg !5692
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5693
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 1, !dbg !5694
  store i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.56, i64 0, i64 0), i8** %idname, align 8, !dbg !5695
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5696
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !5697
  store i32 (%struct.bContext*, %struct.wmOperator*)* @mask_hide_view_clear_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !5698
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5699
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !5700
  store i32 (%struct.bContext*)* @ED_maskedit_mask_poll, i32 (%struct.bContext*)** %poll, align 8, !dbg !5701
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5702
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !5703
  store i16 3, i16* %flag, align 8, !dbg !5704
  ret void, !dbg !5705
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @mask_hide_view_clear_exec(%struct.bContext* %C, %struct.wmOperator* %UNUSED_op) #0 !dbg !5706 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %UNUSED_op.addr = alloca %struct.wmOperator*, align 8
  %mask = alloca %struct.Mask*, align 8
  %masklay = alloca %struct.MaskLayer*, align 8
  %changed = alloca i8, align 1
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !5707, metadata !DIExpression()), !dbg !5708
  store %struct.wmOperator* %UNUSED_op, %struct.wmOperator** %UNUSED_op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %UNUSED_op.addr, metadata !5709, metadata !DIExpression()), !dbg !5710
  call void @llvm.dbg.declare(metadata %struct.Mask** %mask, metadata !5711, metadata !DIExpression()), !dbg !5712
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5713
  %call = call %struct.Mask* @CTX_data_edit_mask(%struct.bContext* %0), !dbg !5714
  store %struct.Mask* %call, %struct.Mask** %mask, align 8, !dbg !5712
  call void @llvm.dbg.declare(metadata %struct.MaskLayer** %masklay, metadata !5715, metadata !DIExpression()), !dbg !5716
  call void @llvm.dbg.declare(metadata i8* %changed, metadata !5717, metadata !DIExpression()), !dbg !5718
  store i8 0, i8* %changed, align 1, !dbg !5718
  %1 = load %struct.Mask*, %struct.Mask** %mask, align 8, !dbg !5719
  %masklayers = getelementptr inbounds %struct.Mask, %struct.Mask* %1, i32 0, i32 2, !dbg !5721
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %masklayers, i32 0, i32 0, !dbg !5722
  %2 = load i8*, i8** %first, align 8, !dbg !5722
  %3 = bitcast i8* %2 to %struct.MaskLayer*, !dbg !5719
  store %struct.MaskLayer* %3, %struct.MaskLayer** %masklay, align 8, !dbg !5723
  br label %for.cond, !dbg !5724

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay, align 8, !dbg !5725
  %tobool = icmp ne %struct.MaskLayer* %4, null, !dbg !5727
  br i1 %tobool, label %for.body, label %for.end, !dbg !5727

for.body:                                         ; preds = %for.cond
  %5 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay, align 8, !dbg !5728
  %restrictflag = getelementptr inbounds %struct.MaskLayer, %struct.MaskLayer* %5, i32 0, i32 13, !dbg !5731
  %6 = load i8, i8* %restrictflag, align 1, !dbg !5731
  %conv = zext i8 %6 to i32, !dbg !5728
  %and = and i32 %conv, 1, !dbg !5732
  %tobool1 = icmp ne i32 %and, 0, !dbg !5732
  br i1 %tobool1, label %if.then, label %if.end, !dbg !5733

if.then:                                          ; preds = %for.body
  %7 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay, align 8, !dbg !5734
  call void @ED_mask_layer_select_set(%struct.MaskLayer* %7, i8 zeroext 1), !dbg !5736
  %8 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay, align 8, !dbg !5737
  %restrictflag2 = getelementptr inbounds %struct.MaskLayer, %struct.MaskLayer* %8, i32 0, i32 13, !dbg !5738
  %9 = load i8, i8* %restrictflag2, align 1, !dbg !5739
  %conv3 = zext i8 %9 to i32, !dbg !5739
  %and4 = and i32 %conv3, -2, !dbg !5739
  %conv5 = trunc i32 %and4 to i8, !dbg !5739
  store i8 %conv5, i8* %restrictflag2, align 1, !dbg !5739
  store i8 1, i8* %changed, align 1, !dbg !5740
  br label %if.end, !dbg !5741

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !5742

for.inc:                                          ; preds = %if.end
  %10 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay, align 8, !dbg !5743
  %next = getelementptr inbounds %struct.MaskLayer, %struct.MaskLayer* %10, i32 0, i32 0, !dbg !5744
  %11 = load %struct.MaskLayer*, %struct.MaskLayer** %next, align 8, !dbg !5744
  store %struct.MaskLayer* %11, %struct.MaskLayer** %masklay, align 8, !dbg !5745
  br label %for.cond, !dbg !5746, !llvm.loop !5747

for.end:                                          ; preds = %for.cond
  %12 = load i8, i8* %changed, align 1, !dbg !5749
  %tobool6 = icmp ne i8 %12, 0, !dbg !5749
  br i1 %tobool6, label %if.then7, label %if.else, !dbg !5751

if.then7:                                         ; preds = %for.end
  %13 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5752
  %14 = load %struct.Mask*, %struct.Mask** %mask, align 8, !dbg !5754
  %15 = bitcast %struct.Mask* %14 to i8*, !dbg !5754
  call void @WM_event_add_notifier(%struct.bContext* %13, i32 353828864, i8* %15), !dbg !5755
  %16 = load %struct.Mask*, %struct.Mask** %mask, align 8, !dbg !5756
  %id = getelementptr inbounds %struct.Mask, %struct.Mask* %16, i32 0, i32 0, !dbg !5757
  call void @DAG_id_tag_update(%struct.ID* %id, i16 signext 0), !dbg !5758
  store i32 4, i32* %retval, align 4, !dbg !5759
  br label %return, !dbg !5759

if.else:                                          ; preds = %for.end
  store i32 2, i32* %retval, align 4, !dbg !5760
  br label %return, !dbg !5760

return:                                           ; preds = %if.else, %if.then7
  %17 = load i32, i32* %retval, align 4, !dbg !5762
  ret i32 %17, !dbg !5762
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @MASK_OT_hide_view_set(%struct.wmOperatorType* %ot) #0 !dbg !5763 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !5764, metadata !DIExpression()), !dbg !5765
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5766
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !5767
  store i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.57, i64 0, i64 0), i8** %name, align 8, !dbg !5768
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5769
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 3, !dbg !5770
  store i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.58, i64 0, i64 0), i8** %description, align 8, !dbg !5771
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5772
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 1, !dbg !5773
  store i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.59, i64 0, i64 0), i8** %idname, align 8, !dbg !5774
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5775
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !5776
  store i32 (%struct.bContext*, %struct.wmOperator*)* @mask_hide_view_set_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !5777
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5778
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !5779
  store i32 (%struct.bContext*)* @ED_maskedit_mask_poll, i32 (%struct.bContext*)** %poll, align 8, !dbg !5780
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5781
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !5782
  store i16 3, i16* %flag, align 8, !dbg !5783
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5784
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 11, !dbg !5785
  %7 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !5785
  %8 = bitcast %struct.StructRNA* %7 to i8*, !dbg !5784
  %call = call %struct.PropertyRNA* @RNA_def_boolean(i8* %8, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.60, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.61, i64 0, i64 0), i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.62, i64 0, i64 0)), !dbg !5786
  ret void, !dbg !5787
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @mask_hide_view_set_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !5788 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %mask = alloca %struct.Mask*, align 8
  %masklay = alloca %struct.MaskLayer*, align 8
  %unselected = alloca i8, align 1
  %changed = alloca i8, align 1
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !5789, metadata !DIExpression()), !dbg !5790
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !5791, metadata !DIExpression()), !dbg !5792
  call void @llvm.dbg.declare(metadata %struct.Mask** %mask, metadata !5793, metadata !DIExpression()), !dbg !5794
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5795
  %call = call %struct.Mask* @CTX_data_edit_mask(%struct.bContext* %0), !dbg !5796
  store %struct.Mask* %call, %struct.Mask** %mask, align 8, !dbg !5794
  call void @llvm.dbg.declare(metadata %struct.MaskLayer** %masklay, metadata !5797, metadata !DIExpression()), !dbg !5798
  call void @llvm.dbg.declare(metadata i8* %unselected, metadata !5799, metadata !DIExpression()), !dbg !5801
  %1 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5802
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %1, i32 0, i32 7, !dbg !5803
  %2 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !5803
  %call1 = call i32 @RNA_boolean_get(%struct.PointerRNA* %2, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.60, i64 0, i64 0)), !dbg !5804
  %conv = trunc i32 %call1 to i8, !dbg !5804
  store i8 %conv, i8* %unselected, align 1, !dbg !5801
  call void @llvm.dbg.declare(metadata i8* %changed, metadata !5805, metadata !DIExpression()), !dbg !5806
  store i8 0, i8* %changed, align 1, !dbg !5806
  %3 = load %struct.Mask*, %struct.Mask** %mask, align 8, !dbg !5807
  %masklayers = getelementptr inbounds %struct.Mask, %struct.Mask* %3, i32 0, i32 2, !dbg !5809
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %masklayers, i32 0, i32 0, !dbg !5810
  %4 = load i8*, i8** %first, align 8, !dbg !5810
  %5 = bitcast i8* %4 to %struct.MaskLayer*, !dbg !5807
  store %struct.MaskLayer* %5, %struct.MaskLayer** %masklay, align 8, !dbg !5811
  br label %for.cond, !dbg !5812

for.cond:                                         ; preds = %for.inc, %entry
  %6 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay, align 8, !dbg !5813
  %tobool = icmp ne %struct.MaskLayer* %6, null, !dbg !5815
  br i1 %tobool, label %for.body, label %for.end, !dbg !5815

for.body:                                         ; preds = %for.cond
  %7 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay, align 8, !dbg !5816
  %restrictflag = getelementptr inbounds %struct.MaskLayer, %struct.MaskLayer* %7, i32 0, i32 13, !dbg !5819
  %8 = load i8, i8* %restrictflag, align 1, !dbg !5819
  %conv2 = zext i8 %8 to i32, !dbg !5816
  %and = and i32 %conv2, 2, !dbg !5820
  %tobool3 = icmp ne i32 %and, 0, !dbg !5820
  br i1 %tobool3, label %if.then, label %if.end, !dbg !5821

if.then:                                          ; preds = %for.body
  br label %for.inc, !dbg !5822

if.end:                                           ; preds = %for.body
  %9 = load i8, i8* %unselected, align 1, !dbg !5824
  %tobool4 = icmp ne i8 %9, 0, !dbg !5824
  br i1 %tobool4, label %if.else, label %if.then5, !dbg !5826

if.then5:                                         ; preds = %if.end
  %10 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay, align 8, !dbg !5827
  %call6 = call zeroext i8 @ED_mask_layer_select_check(%struct.MaskLayer* %10), !dbg !5830
  %tobool7 = icmp ne i8 %call6, 0, !dbg !5830
  br i1 %tobool7, label %if.then8, label %if.end16, !dbg !5831

if.then8:                                         ; preds = %if.then5
  %11 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay, align 8, !dbg !5832
  call void @ED_mask_layer_select_set(%struct.MaskLayer* %11, i8 zeroext 0), !dbg !5834
  %12 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay, align 8, !dbg !5835
  %restrictflag9 = getelementptr inbounds %struct.MaskLayer, %struct.MaskLayer* %12, i32 0, i32 13, !dbg !5836
  %13 = load i8, i8* %restrictflag9, align 1, !dbg !5837
  %conv10 = zext i8 %13 to i32, !dbg !5837
  %or = or i32 %conv10, 1, !dbg !5837
  %conv11 = trunc i32 %or to i8, !dbg !5837
  store i8 %conv11, i8* %restrictflag9, align 1, !dbg !5837
  store i8 1, i8* %changed, align 1, !dbg !5838
  %14 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay, align 8, !dbg !5839
  %15 = load %struct.Mask*, %struct.Mask** %mask, align 8, !dbg !5841
  %call12 = call %struct.MaskLayer* @BKE_mask_layer_active(%struct.Mask* %15), !dbg !5842
  %cmp = icmp eq %struct.MaskLayer* %14, %call12, !dbg !5843
  br i1 %cmp, label %if.then14, label %if.end15, !dbg !5844

if.then14:                                        ; preds = %if.then8
  %16 = load %struct.Mask*, %struct.Mask** %mask, align 8, !dbg !5845
  call void @BKE_mask_layer_active_set(%struct.Mask* %16, %struct.MaskLayer* null), !dbg !5847
  br label %if.end15, !dbg !5848

if.end15:                                         ; preds = %if.then14, %if.then8
  br label %if.end16, !dbg !5849

if.end16:                                         ; preds = %if.end15, %if.then5
  br label %if.end30, !dbg !5850

if.else:                                          ; preds = %if.end
  %17 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay, align 8, !dbg !5851
  %call17 = call zeroext i8 @ED_mask_layer_select_check(%struct.MaskLayer* %17), !dbg !5854
  %tobool18 = icmp ne i8 %call17, 0, !dbg !5854
  br i1 %tobool18, label %if.end29, label %if.then19, !dbg !5855

if.then19:                                        ; preds = %if.else
  %18 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay, align 8, !dbg !5856
  %restrictflag20 = getelementptr inbounds %struct.MaskLayer, %struct.MaskLayer* %18, i32 0, i32 13, !dbg !5858
  %19 = load i8, i8* %restrictflag20, align 1, !dbg !5859
  %conv21 = zext i8 %19 to i32, !dbg !5859
  %or22 = or i32 %conv21, 1, !dbg !5859
  %conv23 = trunc i32 %or22 to i8, !dbg !5859
  store i8 %conv23, i8* %restrictflag20, align 1, !dbg !5859
  store i8 1, i8* %changed, align 1, !dbg !5860
  %20 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay, align 8, !dbg !5861
  %21 = load %struct.Mask*, %struct.Mask** %mask, align 8, !dbg !5863
  %call24 = call %struct.MaskLayer* @BKE_mask_layer_active(%struct.Mask* %21), !dbg !5864
  %cmp25 = icmp eq %struct.MaskLayer* %20, %call24, !dbg !5865
  br i1 %cmp25, label %if.then27, label %if.end28, !dbg !5866

if.then27:                                        ; preds = %if.then19
  %22 = load %struct.Mask*, %struct.Mask** %mask, align 8, !dbg !5867
  call void @BKE_mask_layer_active_set(%struct.Mask* %22, %struct.MaskLayer* null), !dbg !5869
  br label %if.end28, !dbg !5870

if.end28:                                         ; preds = %if.then27, %if.then19
  br label %if.end29, !dbg !5871

if.end29:                                         ; preds = %if.end28, %if.else
  br label %if.end30

if.end30:                                         ; preds = %if.end29, %if.end16
  br label %for.inc, !dbg !5872

for.inc:                                          ; preds = %if.end30, %if.then
  %23 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay, align 8, !dbg !5873
  %next = getelementptr inbounds %struct.MaskLayer, %struct.MaskLayer* %23, i32 0, i32 0, !dbg !5874
  %24 = load %struct.MaskLayer*, %struct.MaskLayer** %next, align 8, !dbg !5874
  store %struct.MaskLayer* %24, %struct.MaskLayer** %masklay, align 8, !dbg !5875
  br label %for.cond, !dbg !5876, !llvm.loop !5877

for.end:                                          ; preds = %for.cond
  %25 = load i8, i8* %changed, align 1, !dbg !5879
  %tobool31 = icmp ne i8 %25, 0, !dbg !5879
  br i1 %tobool31, label %if.then32, label %if.else33, !dbg !5881

if.then32:                                        ; preds = %for.end
  %26 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5882
  %27 = load %struct.Mask*, %struct.Mask** %mask, align 8, !dbg !5884
  %28 = bitcast %struct.Mask* %27 to i8*, !dbg !5884
  call void @WM_event_add_notifier(%struct.bContext* %26, i32 353828864, i8* %28), !dbg !5885
  %29 = load %struct.Mask*, %struct.Mask** %mask, align 8, !dbg !5886
  %id = getelementptr inbounds %struct.Mask, %struct.Mask* %29, i32 0, i32 0, !dbg !5887
  call void @DAG_id_tag_update(%struct.ID* %id, i16 signext 0), !dbg !5888
  store i32 4, i32* %retval, align 4, !dbg !5889
  br label %return, !dbg !5889

if.else33:                                        ; preds = %for.end
  store i32 2, i32* %retval, align 4, !dbg !5890
  br label %return, !dbg !5890

return:                                           ; preds = %if.else33, %if.then32
  %30 = load i32, i32* %retval, align 4, !dbg !5892
  ret i32 %30, !dbg !5892
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @MASK_OT_feather_weight_clear(%struct.wmOperatorType* %ot) #0 !dbg !5893 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !5894, metadata !DIExpression()), !dbg !5895
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5896
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !5897
  store i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.63, i64 0, i64 0), i8** %name, align 8, !dbg !5898
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5899
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 3, !dbg !5900
  store i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.64, i64 0, i64 0), i8** %description, align 8, !dbg !5901
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5902
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 1, !dbg !5903
  store i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.65, i64 0, i64 0), i8** %idname, align 8, !dbg !5904
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5905
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !5906
  store i32 (%struct.bContext*, %struct.wmOperator*)* @mask_feather_weight_clear_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !5907
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5908
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !5909
  store i32 (%struct.bContext*)* @ED_maskedit_mask_poll, i32 (%struct.bContext*)** %poll, align 8, !dbg !5910
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5911
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !5912
  store i16 3, i16* %flag, align 8, !dbg !5913
  ret void, !dbg !5914
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @mask_feather_weight_clear_exec(%struct.bContext* %C, %struct.wmOperator* %UNUSED_op) #0 !dbg !5915 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %UNUSED_op.addr = alloca %struct.wmOperator*, align 8
  %scene = alloca %struct.Scene*, align 8
  %mask = alloca %struct.Mask*, align 8
  %masklay = alloca %struct.MaskLayer*, align 8
  %changed = alloca i8, align 1
  %i = alloca i32, align 4
  %spline = alloca %struct.MaskSpline*, align 8
  %point = alloca %struct.MaskSplinePoint*, align 8
  %bezt20 = alloca %struct.BezTriple*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !5916, metadata !DIExpression()), !dbg !5917
  store %struct.wmOperator* %UNUSED_op, %struct.wmOperator** %UNUSED_op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %UNUSED_op.addr, metadata !5918, metadata !DIExpression()), !dbg !5919
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene, metadata !5920, metadata !DIExpression()), !dbg !5921
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5922
  %call = call %struct.Scene* @CTX_data_scene(%struct.bContext* %0), !dbg !5923
  store %struct.Scene* %call, %struct.Scene** %scene, align 8, !dbg !5921
  call void @llvm.dbg.declare(metadata %struct.Mask** %mask, metadata !5924, metadata !DIExpression()), !dbg !5925
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5926
  %call1 = call %struct.Mask* @CTX_data_edit_mask(%struct.bContext* %1), !dbg !5927
  store %struct.Mask* %call1, %struct.Mask** %mask, align 8, !dbg !5925
  call void @llvm.dbg.declare(metadata %struct.MaskLayer** %masklay, metadata !5928, metadata !DIExpression()), !dbg !5929
  call void @llvm.dbg.declare(metadata i8* %changed, metadata !5930, metadata !DIExpression()), !dbg !5931
  store i8 0, i8* %changed, align 1, !dbg !5931
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5932, metadata !DIExpression()), !dbg !5933
  %2 = load %struct.Mask*, %struct.Mask** %mask, align 8, !dbg !5934
  %masklayers = getelementptr inbounds %struct.Mask, %struct.Mask* %2, i32 0, i32 2, !dbg !5936
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %masklayers, i32 0, i32 0, !dbg !5937
  %3 = load i8*, i8** %first, align 8, !dbg !5937
  %4 = bitcast i8* %3 to %struct.MaskLayer*, !dbg !5934
  store %struct.MaskLayer* %4, %struct.MaskLayer** %masklay, align 8, !dbg !5938
  br label %for.cond, !dbg !5939

for.cond:                                         ; preds = %for.inc25, %entry
  %5 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay, align 8, !dbg !5940
  %tobool = icmp ne %struct.MaskLayer* %5, null, !dbg !5942
  br i1 %tobool, label %for.body, label %for.end27, !dbg !5942

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.MaskSpline** %spline, metadata !5943, metadata !DIExpression()), !dbg !5945
  %6 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay, align 8, !dbg !5946
  %restrictflag = getelementptr inbounds %struct.MaskLayer, %struct.MaskLayer* %6, i32 0, i32 13, !dbg !5948
  %7 = load i8, i8* %restrictflag, align 1, !dbg !5948
  %conv = zext i8 %7 to i32, !dbg !5946
  %and = and i32 %conv, 3, !dbg !5949
  %tobool2 = icmp ne i32 %and, 0, !dbg !5949
  br i1 %tobool2, label %if.then, label %if.end, !dbg !5950

if.then:                                          ; preds = %for.body
  br label %for.inc25, !dbg !5951

if.end:                                           ; preds = %for.body
  %8 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay, align 8, !dbg !5953
  %splines = getelementptr inbounds %struct.MaskLayer, %struct.MaskLayer* %8, i32 0, i32 3, !dbg !5955
  %first3 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %splines, i32 0, i32 0, !dbg !5956
  %9 = load i8*, i8** %first3, align 8, !dbg !5956
  %10 = bitcast i8* %9 to %struct.MaskSpline*, !dbg !5953
  store %struct.MaskSpline* %10, %struct.MaskSpline** %spline, align 8, !dbg !5957
  br label %for.cond4, !dbg !5958

for.cond4:                                        ; preds = %for.inc23, %if.end
  %11 = load %struct.MaskSpline*, %struct.MaskSpline** %spline, align 8, !dbg !5959
  %tobool5 = icmp ne %struct.MaskSpline* %11, null, !dbg !5961
  br i1 %tobool5, label %for.body6, label %for.end24, !dbg !5961

for.body6:                                        ; preds = %for.cond4
  store i32 0, i32* %i, align 4, !dbg !5962
  br label %for.cond7, !dbg !5965

for.cond7:                                        ; preds = %for.inc, %for.body6
  %12 = load i32, i32* %i, align 4, !dbg !5966
  %13 = load %struct.MaskSpline*, %struct.MaskSpline** %spline, align 8, !dbg !5968
  %tot_point = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %13, i32 0, i32 5, !dbg !5969
  %14 = load i32, i32* %tot_point, align 4, !dbg !5969
  %cmp = icmp slt i32 %12, %14, !dbg !5970
  br i1 %cmp, label %for.body9, label %for.end, !dbg !5971

for.body9:                                        ; preds = %for.cond7
  call void @llvm.dbg.declare(metadata %struct.MaskSplinePoint** %point, metadata !5972, metadata !DIExpression()), !dbg !5974
  %15 = load %struct.MaskSpline*, %struct.MaskSpline** %spline, align 8, !dbg !5975
  %points = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %15, i32 0, i32 6, !dbg !5976
  %16 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %points, align 8, !dbg !5976
  %17 = load i32, i32* %i, align 4, !dbg !5977
  %idxprom = sext i32 %17 to i64, !dbg !5975
  %arrayidx = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %16, i64 %idxprom, !dbg !5975
  store %struct.MaskSplinePoint* %arrayidx, %struct.MaskSplinePoint** %point, align 8, !dbg !5974
  %18 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point, align 8, !dbg !5978
  %bezt = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %18, i32 0, i32 0, !dbg !5978
  %f1 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %bezt, i32 0, i32 7, !dbg !5978
  %19 = load i8, i8* %f1, align 1, !dbg !5978
  %conv10 = zext i8 %19 to i32, !dbg !5978
  %20 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point, align 8, !dbg !5978
  %bezt11 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %20, i32 0, i32 0, !dbg !5978
  %f2 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %bezt11, i32 0, i32 8, !dbg !5978
  %21 = load i8, i8* %f2, align 4, !dbg !5978
  %conv12 = zext i8 %21 to i32, !dbg !5978
  %or = or i32 %conv10, %conv12, !dbg !5978
  %22 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point, align 8, !dbg !5978
  %bezt13 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %22, i32 0, i32 0, !dbg !5978
  %f3 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %bezt13, i32 0, i32 9, !dbg !5978
  %23 = load i8, i8* %f3, align 1, !dbg !5978
  %conv14 = zext i8 %23 to i32, !dbg !5978
  %or15 = or i32 %or, %conv14, !dbg !5978
  %and16 = and i32 %or15, 1, !dbg !5978
  %cmp17 = icmp ne i32 %and16, 0, !dbg !5978
  br i1 %cmp17, label %if.then19, label %if.end22, !dbg !5980

if.then19:                                        ; preds = %for.body9
  call void @llvm.dbg.declare(metadata %struct.BezTriple** %bezt20, metadata !5981, metadata !DIExpression()), !dbg !5983
  %24 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point, align 8, !dbg !5984
  %bezt21 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %24, i32 0, i32 0, !dbg !5985
  store %struct.BezTriple* %bezt21, %struct.BezTriple** %bezt20, align 8, !dbg !5983
  %25 = load %struct.BezTriple*, %struct.BezTriple** %bezt20, align 8, !dbg !5986
  %weight = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %25, i32 0, i32 2, !dbg !5987
  store float 0.000000e+00, float* %weight, align 4, !dbg !5988
  store i8 1, i8* %changed, align 1, !dbg !5989
  br label %if.end22, !dbg !5990

if.end22:                                         ; preds = %if.then19, %for.body9
  br label %for.inc, !dbg !5991

for.inc:                                          ; preds = %if.end22
  %26 = load i32, i32* %i, align 4, !dbg !5992
  %inc = add nsw i32 %26, 1, !dbg !5992
  store i32 %inc, i32* %i, align 4, !dbg !5992
  br label %for.cond7, !dbg !5993, !llvm.loop !5994

for.end:                                          ; preds = %for.cond7
  br label %for.inc23, !dbg !5996

for.inc23:                                        ; preds = %for.end
  %27 = load %struct.MaskSpline*, %struct.MaskSpline** %spline, align 8, !dbg !5997
  %next = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %27, i32 0, i32 0, !dbg !5998
  %28 = load %struct.MaskSpline*, %struct.MaskSpline** %next, align 8, !dbg !5998
  store %struct.MaskSpline* %28, %struct.MaskSpline** %spline, align 8, !dbg !5999
  br label %for.cond4, !dbg !6000, !llvm.loop !6001

for.end24:                                        ; preds = %for.cond4
  br label %for.inc25, !dbg !6003

for.inc25:                                        ; preds = %for.end24, %if.then
  %29 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay, align 8, !dbg !6004
  %next26 = getelementptr inbounds %struct.MaskLayer, %struct.MaskLayer* %29, i32 0, i32 0, !dbg !6005
  %30 = load %struct.MaskLayer*, %struct.MaskLayer** %next26, align 8, !dbg !6005
  store %struct.MaskLayer* %30, %struct.MaskLayer** %masklay, align 8, !dbg !6006
  br label %for.cond, !dbg !6007, !llvm.loop !6008

for.end27:                                        ; preds = %for.cond
  %31 = load i8, i8* %changed, align 1, !dbg !6010
  %tobool28 = icmp ne i8 %31, 0, !dbg !6010
  br i1 %tobool28, label %if.then29, label %if.else, !dbg !6012

if.then29:                                        ; preds = %for.end27
  %32 = load %struct.Mask*, %struct.Mask** %mask, align 8, !dbg !6013
  %33 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !6015
  %r = getelementptr inbounds %struct.Scene, %struct.Scene* %33, i32 0, i32 22, !dbg !6015
  %cfra = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r, i32 0, i32 5, !dbg !6015
  %34 = load i32, i32* %cfra, align 8, !dbg !6015
  %conv30 = sitofp i32 %34 to float, !dbg !6015
  call void @BKE_mask_update_display(%struct.Mask* %32, float %conv30), !dbg !6016
  %35 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6017
  %36 = load %struct.Mask*, %struct.Mask** %mask, align 8, !dbg !6018
  %37 = bitcast %struct.Mask* %36 to i8*, !dbg !6018
  call void @WM_event_add_notifier(%struct.bContext* %35, i32 353828864, i8* %37), !dbg !6019
  %38 = load %struct.Mask*, %struct.Mask** %mask, align 8, !dbg !6020
  %id = getelementptr inbounds %struct.Mask, %struct.Mask* %38, i32 0, i32 0, !dbg !6021
  call void @DAG_id_tag_update(%struct.ID* %id, i16 signext 0), !dbg !6022
  store i32 4, i32* %retval, align 4, !dbg !6023
  br label %return, !dbg !6023

if.else:                                          ; preds = %for.end27
  store i32 2, i32* %retval, align 4, !dbg !6024
  br label %return, !dbg !6024

return:                                           ; preds = %if.else, %if.then29
  %39 = load i32, i32* %retval, align 4, !dbg !6026
  ret i32 %39, !dbg !6026
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @MASK_OT_layer_move(%struct.wmOperatorType* %ot) #0 !dbg !2253 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !6027, metadata !DIExpression()), !dbg !6028
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6029
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !6030
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.70, i64 0, i64 0), i8** %name, align 8, !dbg !6031
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6032
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 3, !dbg !6033
  store i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.71, i64 0, i64 0), i8** %description, align 8, !dbg !6034
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6035
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 1, !dbg !6036
  store i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.72, i64 0, i64 0), i8** %idname, align 8, !dbg !6037
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6038
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !6039
  store i32 (%struct.bContext*, %struct.wmOperator*)* @mask_layer_move_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !6040
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6041
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !6042
  store i32 (%struct.bContext*)* @mask_layer_move_poll, i32 (%struct.bContext*)** %poll, align 8, !dbg !6043
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6044
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !6045
  store i16 3, i16* %flag, align 8, !dbg !6046
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6047
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 11, !dbg !6048
  %7 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !6048
  %8 = bitcast %struct.StructRNA* %7 to i8*, !dbg !6047
  %call = call %struct.PropertyRNA* @RNA_def_enum(i8* %8, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.73, i64 0, i64 0), %struct.EnumPropertyItem* getelementptr inbounds ([3 x %struct.EnumPropertyItem], [3 x %struct.EnumPropertyItem]* @MASK_OT_layer_move.direction_items, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.74, i64 0, i64 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.75, i64 0, i64 0)), !dbg !6049
  ret void, !dbg !6050
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @mask_layer_move_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !6051 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %mask = alloca %struct.Mask*, align 8
  %mask_layer = alloca %struct.MaskLayer*, align 8
  %mask_layer_other = alloca %struct.MaskLayer*, align 8
  %direction = alloca i32, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !6052, metadata !DIExpression()), !dbg !6053
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !6054, metadata !DIExpression()), !dbg !6055
  call void @llvm.dbg.declare(metadata %struct.Mask** %mask, metadata !6056, metadata !DIExpression()), !dbg !6057
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6058
  %call = call %struct.Mask* @CTX_data_edit_mask(%struct.bContext* %0), !dbg !6059
  store %struct.Mask* %call, %struct.Mask** %mask, align 8, !dbg !6057
  call void @llvm.dbg.declare(metadata %struct.MaskLayer** %mask_layer, metadata !6060, metadata !DIExpression()), !dbg !6061
  %1 = load %struct.Mask*, %struct.Mask** %mask, align 8, !dbg !6062
  %masklayers = getelementptr inbounds %struct.Mask, %struct.Mask* %1, i32 0, i32 2, !dbg !6063
  %2 = load %struct.Mask*, %struct.Mask** %mask, align 8, !dbg !6064
  %masklay_act = getelementptr inbounds %struct.Mask, %struct.Mask* %2, i32 0, i32 3, !dbg !6065
  %3 = load i32, i32* %masklay_act, align 8, !dbg !6065
  %call1 = call i8* @BLI_findlink(%struct.ListBase* %masklayers, i32 %3), !dbg !6066
  %4 = bitcast i8* %call1 to %struct.MaskLayer*, !dbg !6066
  store %struct.MaskLayer* %4, %struct.MaskLayer** %mask_layer, align 8, !dbg !6061
  call void @llvm.dbg.declare(metadata %struct.MaskLayer** %mask_layer_other, metadata !6067, metadata !DIExpression()), !dbg !6068
  call void @llvm.dbg.declare(metadata i32* %direction, metadata !6069, metadata !DIExpression()), !dbg !6070
  %5 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !6071
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %5, i32 0, i32 7, !dbg !6072
  %6 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !6072
  %call2 = call i32 @RNA_enum_get(%struct.PointerRNA* %6, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.73, i64 0, i64 0)), !dbg !6073
  store i32 %call2, i32* %direction, align 4, !dbg !6070
  %7 = load %struct.MaskLayer*, %struct.MaskLayer** %mask_layer, align 8, !dbg !6074
  %tobool = icmp ne %struct.MaskLayer* %7, null, !dbg !6074
  br i1 %tobool, label %if.end, label %if.then, !dbg !6076

if.then:                                          ; preds = %entry
  store i32 2, i32* %retval, align 4, !dbg !6077
  br label %return, !dbg !6077

if.end:                                           ; preds = %entry
  %8 = load i32, i32* %direction, align 4, !dbg !6078
  %cmp = icmp eq i32 %8, -1, !dbg !6080
  br i1 %cmp, label %if.then3, label %if.else, !dbg !6081

if.then3:                                         ; preds = %if.end
  %9 = load %struct.MaskLayer*, %struct.MaskLayer** %mask_layer, align 8, !dbg !6082
  %prev = getelementptr inbounds %struct.MaskLayer, %struct.MaskLayer* %9, i32 0, i32 1, !dbg !6084
  %10 = load %struct.MaskLayer*, %struct.MaskLayer** %prev, align 8, !dbg !6084
  store %struct.MaskLayer* %10, %struct.MaskLayer** %mask_layer_other, align 8, !dbg !6085
  %11 = load %struct.MaskLayer*, %struct.MaskLayer** %mask_layer_other, align 8, !dbg !6086
  %tobool4 = icmp ne %struct.MaskLayer* %11, null, !dbg !6086
  br i1 %tobool4, label %if.end6, label %if.then5, !dbg !6088

if.then5:                                         ; preds = %if.then3
  store i32 2, i32* %retval, align 4, !dbg !6089
  br label %return, !dbg !6089

if.end6:                                          ; preds = %if.then3
  %12 = load %struct.Mask*, %struct.Mask** %mask, align 8, !dbg !6090
  %masklayers7 = getelementptr inbounds %struct.Mask, %struct.Mask* %12, i32 0, i32 2, !dbg !6091
  %13 = load %struct.MaskLayer*, %struct.MaskLayer** %mask_layer, align 8, !dbg !6092
  %14 = bitcast %struct.MaskLayer* %13 to i8*, !dbg !6092
  call void @BLI_remlink(%struct.ListBase* %masklayers7, i8* %14), !dbg !6093
  %15 = load %struct.Mask*, %struct.Mask** %mask, align 8, !dbg !6094
  %masklayers8 = getelementptr inbounds %struct.Mask, %struct.Mask* %15, i32 0, i32 2, !dbg !6095
  %16 = load %struct.MaskLayer*, %struct.MaskLayer** %mask_layer_other, align 8, !dbg !6096
  %17 = bitcast %struct.MaskLayer* %16 to i8*, !dbg !6096
  %18 = load %struct.MaskLayer*, %struct.MaskLayer** %mask_layer, align 8, !dbg !6097
  %19 = bitcast %struct.MaskLayer* %18 to i8*, !dbg !6097
  call void @BLI_insertlinkbefore(%struct.ListBase* %masklayers8, i8* %17, i8* %19), !dbg !6098
  %20 = load %struct.Mask*, %struct.Mask** %mask, align 8, !dbg !6099
  %masklay_act9 = getelementptr inbounds %struct.Mask, %struct.Mask* %20, i32 0, i32 3, !dbg !6100
  %21 = load i32, i32* %masklay_act9, align 8, !dbg !6101
  %dec = add nsw i32 %21, -1, !dbg !6101
  store i32 %dec, i32* %masklay_act9, align 8, !dbg !6101
  br label %if.end19, !dbg !6102

if.else:                                          ; preds = %if.end
  %22 = load i32, i32* %direction, align 4, !dbg !6103
  %cmp10 = icmp eq i32 %22, 1, !dbg !6105
  br i1 %cmp10, label %if.then11, label %if.end18, !dbg !6106

if.then11:                                        ; preds = %if.else
  %23 = load %struct.MaskLayer*, %struct.MaskLayer** %mask_layer, align 8, !dbg !6107
  %next = getelementptr inbounds %struct.MaskLayer, %struct.MaskLayer* %23, i32 0, i32 0, !dbg !6109
  %24 = load %struct.MaskLayer*, %struct.MaskLayer** %next, align 8, !dbg !6109
  store %struct.MaskLayer* %24, %struct.MaskLayer** %mask_layer_other, align 8, !dbg !6110
  %25 = load %struct.MaskLayer*, %struct.MaskLayer** %mask_layer_other, align 8, !dbg !6111
  %tobool12 = icmp ne %struct.MaskLayer* %25, null, !dbg !6111
  br i1 %tobool12, label %if.end14, label %if.then13, !dbg !6113

if.then13:                                        ; preds = %if.then11
  store i32 2, i32* %retval, align 4, !dbg !6114
  br label %return, !dbg !6114

if.end14:                                         ; preds = %if.then11
  %26 = load %struct.Mask*, %struct.Mask** %mask, align 8, !dbg !6115
  %masklayers15 = getelementptr inbounds %struct.Mask, %struct.Mask* %26, i32 0, i32 2, !dbg !6116
  %27 = load %struct.MaskLayer*, %struct.MaskLayer** %mask_layer, align 8, !dbg !6117
  %28 = bitcast %struct.MaskLayer* %27 to i8*, !dbg !6117
  call void @BLI_remlink(%struct.ListBase* %masklayers15, i8* %28), !dbg !6118
  %29 = load %struct.Mask*, %struct.Mask** %mask, align 8, !dbg !6119
  %masklayers16 = getelementptr inbounds %struct.Mask, %struct.Mask* %29, i32 0, i32 2, !dbg !6120
  %30 = load %struct.MaskLayer*, %struct.MaskLayer** %mask_layer_other, align 8, !dbg !6121
  %31 = bitcast %struct.MaskLayer* %30 to i8*, !dbg !6121
  %32 = load %struct.MaskLayer*, %struct.MaskLayer** %mask_layer, align 8, !dbg !6122
  %33 = bitcast %struct.MaskLayer* %32 to i8*, !dbg !6122
  call void @BLI_insertlinkafter(%struct.ListBase* %masklayers16, i8* %31, i8* %33), !dbg !6123
  %34 = load %struct.Mask*, %struct.Mask** %mask, align 8, !dbg !6124
  %masklay_act17 = getelementptr inbounds %struct.Mask, %struct.Mask* %34, i32 0, i32 3, !dbg !6125
  %35 = load i32, i32* %masklay_act17, align 8, !dbg !6126
  %inc = add nsw i32 %35, 1, !dbg !6126
  store i32 %inc, i32* %masklay_act17, align 8, !dbg !6126
  br label %if.end18, !dbg !6127

if.end18:                                         ; preds = %if.end14, %if.else
  br label %if.end19

if.end19:                                         ; preds = %if.end18, %if.end6
  %36 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6128
  %37 = load %struct.Mask*, %struct.Mask** %mask, align 8, !dbg !6129
  %38 = bitcast %struct.Mask* %37 to i8*, !dbg !6129
  call void @WM_event_add_notifier(%struct.bContext* %36, i32 352321537, i8* %38), !dbg !6130
  store i32 4, i32* %retval, align 4, !dbg !6131
  br label %return, !dbg !6131

return:                                           ; preds = %if.end19, %if.then13, %if.then5, %if.then
  %39 = load i32, i32* %retval, align 4, !dbg !6132
  ret i32 %39, !dbg !6132
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @mask_layer_move_poll(%struct.bContext* %C) #0 !dbg !6133 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %mask = alloca %struct.Mask*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !6136, metadata !DIExpression()), !dbg !6137
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6138
  %call = call i32 @ED_maskedit_mask_poll(%struct.bContext* %0), !dbg !6140
  %tobool = icmp ne i32 %call, 0, !dbg !6140
  br i1 %tobool, label %if.then, label %if.end, !dbg !6141

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.Mask** %mask, metadata !6142, metadata !DIExpression()), !dbg !6144
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6145
  %call1 = call %struct.Mask* @CTX_data_edit_mask(%struct.bContext* %1), !dbg !6146
  store %struct.Mask* %call1, %struct.Mask** %mask, align 8, !dbg !6144
  %2 = load %struct.Mask*, %struct.Mask** %mask, align 8, !dbg !6147
  %masklay_tot = getelementptr inbounds %struct.Mask, %struct.Mask* %2, i32 0, i32 4, !dbg !6148
  %3 = load i32, i32* %masklay_tot, align 4, !dbg !6148
  %cmp = icmp sgt i32 %3, 0, !dbg !6149
  %conv = zext i1 %cmp to i32, !dbg !6149
  store i32 %conv, i32* %retval, align 4, !dbg !6150
  br label %return, !dbg !6150

if.end:                                           ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !6151
  br label %return, !dbg !6151

return:                                           ; preds = %if.end, %if.then
  %4 = load i32, i32* %retval, align 4, !dbg !6152
  ret i32 %4, !dbg !6152
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @MASK_OT_duplicate(%struct.wmOperatorType* %ot) #0 !dbg !6153 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !6154, metadata !DIExpression()), !dbg !6155
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6156
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !6157
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.76, i64 0, i64 0), i8** %name, align 8, !dbg !6158
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6159
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 3, !dbg !6160
  store i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.77, i64 0, i64 0), i8** %description, align 8, !dbg !6161
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6162
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 1, !dbg !6163
  store i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.78, i64 0, i64 0), i8** %idname, align 8, !dbg !6164
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6165
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !6166
  store i32 (%struct.bContext*, %struct.wmOperator*)* @mask_duplicate_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !6167
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6168
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !6169
  store i32 (%struct.bContext*)* @ED_maskedit_mask_poll, i32 (%struct.bContext*)** %poll, align 8, !dbg !6170
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6171
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !6172
  store i16 3, i16* %flag, align 8, !dbg !6173
  ret void, !dbg !6174
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @mask_duplicate_exec(%struct.bContext* %C, %struct.wmOperator* %UNUSED_op) #0 !dbg !6175 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %UNUSED_op.addr = alloca %struct.wmOperator*, align 8
  %scene = alloca %struct.Scene*, align 8
  %mask = alloca %struct.Mask*, align 8
  %mask_layer = alloca %struct.MaskLayer*, align 8
  %spline = alloca %struct.MaskSpline*, align 8
  %point = alloca %struct.MaskSplinePoint*, align 8
  %i = alloca i32, align 4
  %start = alloca i32, align 4
  %end = alloca i32, align 4
  %tot_point20 = alloca i32, align 4
  %tot_point_shape_start = alloca i32, align 4
  %new_spline = alloca %struct.MaskSpline*, align 8
  %new_point = alloca %struct.MaskSplinePoint*, align 8
  %b = alloca i32, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !6176, metadata !DIExpression()), !dbg !6177
  store %struct.wmOperator* %UNUSED_op, %struct.wmOperator** %UNUSED_op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %UNUSED_op.addr, metadata !6178, metadata !DIExpression()), !dbg !6179
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene, metadata !6180, metadata !DIExpression()), !dbg !6181
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6182
  %call = call %struct.Scene* @CTX_data_scene(%struct.bContext* %0), !dbg !6183
  store %struct.Scene* %call, %struct.Scene** %scene, align 8, !dbg !6181
  call void @llvm.dbg.declare(metadata %struct.Mask** %mask, metadata !6184, metadata !DIExpression()), !dbg !6185
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6186
  %call1 = call %struct.Mask* @CTX_data_edit_mask(%struct.bContext* %1), !dbg !6187
  store %struct.Mask* %call1, %struct.Mask** %mask, align 8, !dbg !6185
  call void @llvm.dbg.declare(metadata %struct.MaskLayer** %mask_layer, metadata !6188, metadata !DIExpression()), !dbg !6189
  %2 = load %struct.Mask*, %struct.Mask** %mask, align 8, !dbg !6190
  %masklayers = getelementptr inbounds %struct.Mask, %struct.Mask* %2, i32 0, i32 2, !dbg !6192
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %masklayers, i32 0, i32 0, !dbg !6193
  %3 = load i8*, i8** %first, align 8, !dbg !6193
  %4 = bitcast i8* %3 to %struct.MaskLayer*, !dbg !6190
  store %struct.MaskLayer* %4, %struct.MaskLayer** %mask_layer, align 8, !dbg !6194
  br label %for.cond, !dbg !6195

for.cond:                                         ; preds = %for.inc102, %entry
  %5 = load %struct.MaskLayer*, %struct.MaskLayer** %mask_layer, align 8, !dbg !6196
  %tobool = icmp ne %struct.MaskLayer* %5, null, !dbg !6198
  br i1 %tobool, label %for.body, label %for.end103, !dbg !6198

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.MaskSpline** %spline, metadata !6199, metadata !DIExpression()), !dbg !6201
  %6 = load %struct.MaskLayer*, %struct.MaskLayer** %mask_layer, align 8, !dbg !6202
  %splines = getelementptr inbounds %struct.MaskLayer, %struct.MaskLayer* %6, i32 0, i32 3, !dbg !6204
  %last = getelementptr inbounds %struct.ListBase, %struct.ListBase* %splines, i32 0, i32 1, !dbg !6205
  %7 = load i8*, i8** %last, align 8, !dbg !6205
  %8 = bitcast i8* %7 to %struct.MaskSpline*, !dbg !6202
  store %struct.MaskSpline* %8, %struct.MaskSpline** %spline, align 8, !dbg !6206
  br label %for.cond2, !dbg !6207

for.cond2:                                        ; preds = %for.inc100, %for.body
  %9 = load %struct.MaskSpline*, %struct.MaskSpline** %spline, align 8, !dbg !6208
  %tobool3 = icmp ne %struct.MaskSpline* %9, null, !dbg !6210
  br i1 %tobool3, label %for.body4, label %for.end101, !dbg !6210

for.body4:                                        ; preds = %for.cond2
  call void @llvm.dbg.declare(metadata %struct.MaskSplinePoint** %point, metadata !6211, metadata !DIExpression()), !dbg !6213
  %10 = load %struct.MaskSpline*, %struct.MaskSpline** %spline, align 8, !dbg !6214
  %points = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %10, i32 0, i32 6, !dbg !6215
  %11 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %points, align 8, !dbg !6215
  store %struct.MaskSplinePoint* %11, %struct.MaskSplinePoint** %point, align 8, !dbg !6213
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6216, metadata !DIExpression()), !dbg !6217
  store i32 0, i32* %i, align 4, !dbg !6217
  br label %while.cond, !dbg !6218

while.cond:                                       ; preds = %if.end96, %for.body4
  %12 = load i32, i32* %i, align 4, !dbg !6219
  %13 = load %struct.MaskSpline*, %struct.MaskSpline** %spline, align 8, !dbg !6220
  %tot_point = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %13, i32 0, i32 5, !dbg !6221
  %14 = load i32, i32* %tot_point, align 4, !dbg !6221
  %cmp = icmp slt i32 %12, %14, !dbg !6222
  br i1 %cmp, label %while.body, label %while.end99, !dbg !6218

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i32* %start, metadata !6223, metadata !DIExpression()), !dbg !6225
  %15 = load i32, i32* %i, align 4, !dbg !6226
  store i32 %15, i32* %start, align 4, !dbg !6225
  call void @llvm.dbg.declare(metadata i32* %end, metadata !6227, metadata !DIExpression()), !dbg !6228
  store i32 -1, i32* %end, align 4, !dbg !6228
  br label %while.cond5, !dbg !6229

while.cond5:                                      ; preds = %if.end, %while.body
  %16 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point, align 8, !dbg !6230
  %bezt = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %16, i32 0, i32 0, !dbg !6230
  %f1 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %bezt, i32 0, i32 7, !dbg !6230
  %17 = load i8, i8* %f1, align 1, !dbg !6230
  %conv = zext i8 %17 to i32, !dbg !6230
  %18 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point, align 8, !dbg !6230
  %bezt6 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %18, i32 0, i32 0, !dbg !6230
  %f2 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %bezt6, i32 0, i32 8, !dbg !6230
  %19 = load i8, i8* %f2, align 4, !dbg !6230
  %conv7 = zext i8 %19 to i32, !dbg !6230
  %or = or i32 %conv, %conv7, !dbg !6230
  %20 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point, align 8, !dbg !6230
  %bezt8 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %20, i32 0, i32 0, !dbg !6230
  %f3 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %bezt8, i32 0, i32 9, !dbg !6230
  %21 = load i8, i8* %f3, align 1, !dbg !6230
  %conv9 = zext i8 %21 to i32, !dbg !6230
  %or10 = or i32 %or, %conv9, !dbg !6230
  %and = and i32 %or10, 1, !dbg !6230
  %cmp11 = icmp ne i32 %and, 0, !dbg !6230
  br i1 %cmp11, label %while.body13, label %while.end, !dbg !6229

while.body13:                                     ; preds = %while.cond5
  %22 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point, align 8, !dbg !6231
  call void @BKE_mask_point_select_set(%struct.MaskSplinePoint* %22, i8 zeroext 0), !dbg !6233
  %23 = load i32, i32* %i, align 4, !dbg !6234
  store i32 %23, i32* %end, align 4, !dbg !6235
  %24 = load i32, i32* %i, align 4, !dbg !6236
  %25 = load %struct.MaskSpline*, %struct.MaskSpline** %spline, align 8, !dbg !6238
  %tot_point14 = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %25, i32 0, i32 5, !dbg !6239
  %26 = load i32, i32* %tot_point14, align 4, !dbg !6239
  %sub = sub nsw i32 %26, 1, !dbg !6240
  %cmp15 = icmp sge i32 %24, %sub, !dbg !6241
  br i1 %cmp15, label %if.then, label %if.end, !dbg !6242

if.then:                                          ; preds = %while.body13
  br label %while.end, !dbg !6243

if.end:                                           ; preds = %while.body13
  %27 = load i32, i32* %i, align 4, !dbg !6245
  %inc = add nsw i32 %27, 1, !dbg !6245
  store i32 %inc, i32* %i, align 4, !dbg !6245
  %28 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point, align 8, !dbg !6246
  %incdec.ptr = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %28, i32 1, !dbg !6246
  store %struct.MaskSplinePoint* %incdec.ptr, %struct.MaskSplinePoint** %point, align 8, !dbg !6246
  br label %while.cond5, !dbg !6229, !llvm.loop !6247

while.end:                                        ; preds = %if.then, %while.cond5
  %29 = load i32, i32* %end, align 4, !dbg !6249
  %30 = load i32, i32* %start, align 4, !dbg !6251
  %cmp17 = icmp sge i32 %29, %30, !dbg !6252
  br i1 %cmp17, label %if.then19, label %if.end96, !dbg !6253

if.then19:                                        ; preds = %while.end
  call void @llvm.dbg.declare(metadata i32* %tot_point20, metadata !6254, metadata !DIExpression()), !dbg !6256
  call void @llvm.dbg.declare(metadata i32* %tot_point_shape_start, metadata !6257, metadata !DIExpression()), !dbg !6258
  call void @llvm.dbg.declare(metadata %struct.MaskSpline** %new_spline, metadata !6259, metadata !DIExpression()), !dbg !6260
  %31 = load %struct.MaskLayer*, %struct.MaskLayer** %mask_layer, align 8, !dbg !6261
  %call21 = call %struct.MaskSpline* @BKE_mask_spline_add(%struct.MaskLayer* %31), !dbg !6262
  store %struct.MaskSpline* %call21, %struct.MaskSpline** %new_spline, align 8, !dbg !6260
  call void @llvm.dbg.declare(metadata %struct.MaskSplinePoint** %new_point, metadata !6263, metadata !DIExpression()), !dbg !6264
  call void @llvm.dbg.declare(metadata i32* %b, metadata !6265, metadata !DIExpression()), !dbg !6266
  %32 = load %struct.MaskSpline*, %struct.MaskSpline** %new_spline, align 8, !dbg !6267
  %points22 = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %32, i32 0, i32 6, !dbg !6269
  %33 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %points22, align 8, !dbg !6269
  %tobool23 = icmp ne %struct.MaskSplinePoint* %33, null, !dbg !6267
  br i1 %tobool23, label %if.then24, label %if.end26, !dbg !6270

if.then24:                                        ; preds = %if.then19
  %34 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !6271
  %35 = load %struct.MaskSpline*, %struct.MaskSpline** %new_spline, align 8, !dbg !6273
  %points25 = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %35, i32 0, i32 6, !dbg !6274
  %36 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %points25, align 8, !dbg !6274
  %37 = bitcast %struct.MaskSplinePoint* %36 to i8*, !dbg !6273
  call void %34(i8* %37), !dbg !6271
  br label %if.end26, !dbg !6275

if.end26:                                         ; preds = %if.then24, %if.then19
  %38 = load %struct.MaskSpline*, %struct.MaskSpline** %spline, align 8, !dbg !6276
  %flag = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %38, i32 0, i32 2, !dbg !6277
  %39 = load i16, i16* %flag, align 8, !dbg !6277
  %40 = load %struct.MaskSpline*, %struct.MaskSpline** %new_spline, align 8, !dbg !6278
  %flag27 = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %40, i32 0, i32 2, !dbg !6279
  store i16 %39, i16* %flag27, align 8, !dbg !6280
  %41 = load %struct.MaskSpline*, %struct.MaskSpline** %spline, align 8, !dbg !6281
  %offset_mode = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %41, i32 0, i32 3, !dbg !6282
  %42 = load i8, i8* %offset_mode, align 2, !dbg !6282
  %43 = load %struct.MaskSpline*, %struct.MaskSpline** %new_spline, align 8, !dbg !6283
  %offset_mode28 = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %43, i32 0, i32 3, !dbg !6284
  store i8 %42, i8* %offset_mode28, align 2, !dbg !6285
  %44 = load %struct.MaskSpline*, %struct.MaskSpline** %spline, align 8, !dbg !6286
  %weight_interp = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %44, i32 0, i32 4, !dbg !6287
  %45 = load i8, i8* %weight_interp, align 1, !dbg !6287
  %46 = load %struct.MaskSpline*, %struct.MaskSpline** %new_spline, align 8, !dbg !6288
  %weight_interp29 = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %46, i32 0, i32 4, !dbg !6289
  store i8 %45, i8* %weight_interp29, align 1, !dbg !6290
  %47 = load %struct.MaskSpline*, %struct.MaskSpline** %new_spline, align 8, !dbg !6291
  %parent = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %47, i32 0, i32 7, !dbg !6292
  %48 = load %struct.MaskSpline*, %struct.MaskSpline** %spline, align 8, !dbg !6293
  %parent30 = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %48, i32 0, i32 7, !dbg !6294
  %49 = bitcast %struct.MaskParent* %parent to i8*, !dbg !6294
  %50 = bitcast %struct.MaskParent* %parent30 to i8*, !dbg !6294
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %49, i8* align 8 %50, i64 184, i1 false), !dbg !6294
  %51 = load i32, i32* %end, align 4, !dbg !6295
  %52 = load i32, i32* %start, align 4, !dbg !6296
  %sub31 = sub nsw i32 %51, %52, !dbg !6297
  %add = add nsw i32 %sub31, 1, !dbg !6298
  %53 = load %struct.MaskSpline*, %struct.MaskSpline** %new_spline, align 8, !dbg !6299
  %tot_point32 = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %53, i32 0, i32 5, !dbg !6300
  store i32 %add, i32* %tot_point32, align 4, !dbg !6301
  %54 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !6302
  %55 = load %struct.MaskSpline*, %struct.MaskSpline** %new_spline, align 8, !dbg !6303
  %tot_point33 = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %55, i32 0, i32 5, !dbg !6304
  %56 = load i32, i32* %tot_point33, align 4, !dbg !6304
  %conv34 = sext i32 %56 to i64, !dbg !6303
  %mul = mul i64 272, %conv34, !dbg !6305
  %call35 = call i8* %54(i64 %mul, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.89, i64 0, i64 0)), !dbg !6302
  %57 = bitcast i8* %call35 to %struct.MaskSplinePoint*, !dbg !6302
  %58 = load %struct.MaskSpline*, %struct.MaskSpline** %new_spline, align 8, !dbg !6306
  %points36 = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %58, i32 0, i32 6, !dbg !6307
  store %struct.MaskSplinePoint* %57, %struct.MaskSplinePoint** %points36, align 8, !dbg !6308
  %59 = load %struct.MaskSpline*, %struct.MaskSpline** %new_spline, align 8, !dbg !6309
  %points37 = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %59, i32 0, i32 6, !dbg !6310
  %60 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %points37, align 8, !dbg !6310
  %61 = bitcast %struct.MaskSplinePoint* %60 to i8*, !dbg !6311
  %62 = load %struct.MaskSpline*, %struct.MaskSpline** %spline, align 8, !dbg !6312
  %points38 = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %62, i32 0, i32 6, !dbg !6313
  %63 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %points38, align 8, !dbg !6313
  %64 = load i32, i32* %start, align 4, !dbg !6314
  %idx.ext = sext i32 %64 to i64, !dbg !6315
  %add.ptr = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %63, i64 %idx.ext, !dbg !6315
  %65 = bitcast %struct.MaskSplinePoint* %add.ptr to i8*, !dbg !6311
  %66 = load %struct.MaskSpline*, %struct.MaskSpline** %new_spline, align 8, !dbg !6316
  %tot_point39 = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %66, i32 0, i32 5, !dbg !6317
  %67 = load i32, i32* %tot_point39, align 4, !dbg !6317
  %conv40 = sext i32 %67 to i64, !dbg !6316
  %mul41 = mul i64 %conv40, 272, !dbg !6318
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %61, i8* align 8 %65, i64 %mul41, i1 false), !dbg !6311
  %68 = load %struct.MaskSpline*, %struct.MaskSpline** %new_spline, align 8, !dbg !6319
  %tot_point42 = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %68, i32 0, i32 5, !dbg !6320
  %69 = load i32, i32* %tot_point42, align 4, !dbg !6320
  store i32 %69, i32* %tot_point20, align 4, !dbg !6321
  %70 = load %struct.MaskLayer*, %struct.MaskLayer** %mask_layer, align 8, !dbg !6322
  %splines_shapes = getelementptr inbounds %struct.MaskLayer, %struct.MaskLayer* %70, i32 0, i32 4, !dbg !6324
  %first43 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %splines_shapes, i32 0, i32 0, !dbg !6325
  %71 = load i8*, i8** %first43, align 8, !dbg !6325
  %tobool44 = icmp ne i8* %71, null, !dbg !6322
  br i1 %tobool44, label %if.then45, label %if.end48, !dbg !6326

if.then45:                                        ; preds = %if.end26
  %72 = load %struct.MaskSpline*, %struct.MaskSpline** %new_spline, align 8, !dbg !6327
  %tot_point46 = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %72, i32 0, i32 5, !dbg !6329
  store i32 0, i32* %tot_point46, align 4, !dbg !6330
  %73 = load %struct.MaskLayer*, %struct.MaskLayer** %mask_layer, align 8, !dbg !6331
  %74 = load %struct.MaskSpline*, %struct.MaskSpline** %new_spline, align 8, !dbg !6332
  %call47 = call i32 @BKE_mask_layer_shape_spline_to_index(%struct.MaskLayer* %73, %struct.MaskSpline* %74), !dbg !6333
  store i32 %call47, i32* %tot_point_shape_start, align 4, !dbg !6334
  br label %if.end48, !dbg !6335

if.end48:                                         ; preds = %if.then45, %if.end26
  store i32 0, i32* %b, align 4, !dbg !6336
  %75 = load %struct.MaskSpline*, %struct.MaskSpline** %new_spline, align 8, !dbg !6338
  %points49 = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %75, i32 0, i32 6, !dbg !6339
  %76 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %points49, align 8, !dbg !6339
  store %struct.MaskSplinePoint* %76, %struct.MaskSplinePoint** %new_point, align 8, !dbg !6340
  br label %for.cond50, !dbg !6341

for.cond50:                                       ; preds = %for.inc, %if.end48
  %77 = load i32, i32* %b, align 4, !dbg !6342
  %78 = load i32, i32* %tot_point20, align 4, !dbg !6344
  %cmp51 = icmp slt i32 %77, %78, !dbg !6345
  br i1 %cmp51, label %for.body53, label %for.end, !dbg !6346

for.body53:                                       ; preds = %for.cond50
  %79 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %new_point, align 8, !dbg !6347
  %uw = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %79, i32 0, i32 3, !dbg !6350
  %80 = load %struct.MaskSplinePointUW*, %struct.MaskSplinePointUW** %uw, align 8, !dbg !6350
  %tobool54 = icmp ne %struct.MaskSplinePointUW* %80, null, !dbg !6347
  br i1 %tobool54, label %if.then55, label %if.end59, !dbg !6351

if.then55:                                        ; preds = %for.body53
  %81 = load i8* (i8*)*, i8* (i8*)** @MEM_dupallocN, align 8, !dbg !6352
  %82 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %new_point, align 8, !dbg !6354
  %uw56 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %82, i32 0, i32 3, !dbg !6355
  %83 = load %struct.MaskSplinePointUW*, %struct.MaskSplinePointUW** %uw56, align 8, !dbg !6355
  %84 = bitcast %struct.MaskSplinePointUW* %83 to i8*, !dbg !6354
  %call57 = call i8* %81(i8* %84), !dbg !6352
  %85 = bitcast i8* %call57 to %struct.MaskSplinePointUW*, !dbg !6352
  %86 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %new_point, align 8, !dbg !6356
  %uw58 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %86, i32 0, i32 3, !dbg !6357
  store %struct.MaskSplinePointUW* %85, %struct.MaskSplinePointUW** %uw58, align 8, !dbg !6358
  br label %if.end59, !dbg !6359

if.end59:                                         ; preds = %if.then55, %for.body53
  %87 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %new_point, align 8, !dbg !6360
  call void @BKE_mask_point_select_set(%struct.MaskSplinePoint* %87, i8 zeroext 1), !dbg !6361
  %88 = load %struct.MaskLayer*, %struct.MaskLayer** %mask_layer, align 8, !dbg !6362
  %splines_shapes60 = getelementptr inbounds %struct.MaskLayer, %struct.MaskLayer* %88, i32 0, i32 4, !dbg !6364
  %first61 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %splines_shapes60, i32 0, i32 0, !dbg !6365
  %89 = load i8*, i8** %first61, align 8, !dbg !6365
  %tobool62 = icmp ne i8* %89, null, !dbg !6362
  br i1 %tobool62, label %if.then63, label %if.end67, !dbg !6366

if.then63:                                        ; preds = %if.end59
  %90 = load %struct.MaskSpline*, %struct.MaskSpline** %new_spline, align 8, !dbg !6367
  %tot_point64 = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %90, i32 0, i32 5, !dbg !6369
  %91 = load i32, i32* %tot_point64, align 4, !dbg !6370
  %inc65 = add nsw i32 %91, 1, !dbg !6370
  store i32 %inc65, i32* %tot_point64, align 4, !dbg !6370
  %92 = load %struct.MaskLayer*, %struct.MaskLayer** %mask_layer, align 8, !dbg !6371
  %93 = load i32, i32* %tot_point_shape_start, align 4, !dbg !6372
  %94 = load i32, i32* %b, align 4, !dbg !6373
  %add66 = add nsw i32 %93, %94, !dbg !6374
  call void @BKE_mask_layer_shape_changed_add(%struct.MaskLayer* %92, i32 %add66, i8 zeroext 1, i8 zeroext 0), !dbg !6375
  br label %if.end67, !dbg !6376

if.end67:                                         ; preds = %if.then63, %if.end59
  br label %for.inc, !dbg !6377

for.inc:                                          ; preds = %if.end67
  %95 = load i32, i32* %b, align 4, !dbg !6378
  %inc68 = add nsw i32 %95, 1, !dbg !6378
  store i32 %inc68, i32* %b, align 4, !dbg !6378
  %96 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %new_point, align 8, !dbg !6379
  %incdec.ptr69 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %96, i32 1, !dbg !6379
  store %struct.MaskSplinePoint* %incdec.ptr69, %struct.MaskSplinePoint** %new_point, align 8, !dbg !6379
  br label %for.cond50, !dbg !6380, !llvm.loop !6381

for.end:                                          ; preds = %for.cond50
  %97 = load %struct.MaskSpline*, %struct.MaskSpline** %new_spline, align 8, !dbg !6383
  %flag70 = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %97, i32 0, i32 2, !dbg !6385
  %98 = load i16, i16* %flag70, align 8, !dbg !6385
  %conv71 = sext i16 %98 to i32, !dbg !6383
  %and72 = and i32 %conv71, 2, !dbg !6386
  %tobool73 = icmp ne i32 %and72, 0, !dbg !6386
  br i1 %tobool73, label %if.then74, label %if.end87, !dbg !6387

if.then74:                                        ; preds = %for.end
  %99 = load i32, i32* %start, align 4, !dbg !6388
  %cmp75 = icmp ne i32 %99, 0, !dbg !6391
  br i1 %cmp75, label %if.then81, label %lor.lhs.false, !dbg !6392

lor.lhs.false:                                    ; preds = %if.then74
  %100 = load i32, i32* %end, align 4, !dbg !6393
  %101 = load %struct.MaskSpline*, %struct.MaskSpline** %spline, align 8, !dbg !6394
  %tot_point77 = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %101, i32 0, i32 5, !dbg !6395
  %102 = load i32, i32* %tot_point77, align 4, !dbg !6395
  %sub78 = sub nsw i32 %102, 1, !dbg !6396
  %cmp79 = icmp ne i32 %100, %sub78, !dbg !6397
  br i1 %cmp79, label %if.then81, label %if.end86, !dbg !6398

if.then81:                                        ; preds = %lor.lhs.false, %if.then74
  %103 = load %struct.MaskSpline*, %struct.MaskSpline** %new_spline, align 8, !dbg !6399
  %flag82 = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %103, i32 0, i32 2, !dbg !6401
  %104 = load i16, i16* %flag82, align 8, !dbg !6402
  %conv83 = sext i16 %104 to i32, !dbg !6402
  %and84 = and i32 %conv83, -3, !dbg !6402
  %conv85 = trunc i32 %and84 to i16, !dbg !6402
  store i16 %conv85, i16* %flag82, align 8, !dbg !6402
  br label %if.end86, !dbg !6403

if.end86:                                         ; preds = %if.then81, %lor.lhs.false
  br label %if.end87, !dbg !6404

if.end87:                                         ; preds = %if.end86, %for.end
  %105 = load %struct.MaskSpline*, %struct.MaskSpline** %new_spline, align 8, !dbg !6405
  %flag88 = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %105, i32 0, i32 2, !dbg !6406
  %106 = load i16, i16* %flag88, align 8, !dbg !6407
  %conv89 = sext i16 %106 to i32, !dbg !6407
  %or90 = or i32 %conv89, 1, !dbg !6407
  %conv91 = trunc i32 %or90 to i16, !dbg !6407
  store i16 %conv91, i16* %flag88, align 8, !dbg !6407
  %107 = load %struct.MaskSpline*, %struct.MaskSpline** %spline, align 8, !dbg !6408
  %flag92 = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %107, i32 0, i32 2, !dbg !6409
  %108 = load i16, i16* %flag92, align 8, !dbg !6410
  %conv93 = sext i16 %108 to i32, !dbg !6410
  %and94 = and i32 %conv93, -2, !dbg !6410
  %conv95 = trunc i32 %and94 to i16, !dbg !6410
  store i16 %conv95, i16* %flag92, align 8, !dbg !6410
  %109 = load %struct.MaskSpline*, %struct.MaskSpline** %new_spline, align 8, !dbg !6411
  %110 = load %struct.MaskLayer*, %struct.MaskLayer** %mask_layer, align 8, !dbg !6412
  %act_spline = getelementptr inbounds %struct.MaskLayer, %struct.MaskLayer* %110, i32 0, i32 5, !dbg !6413
  store %struct.MaskSpline* %109, %struct.MaskSpline** %act_spline, align 8, !dbg !6414
  br label %if.end96, !dbg !6415

if.end96:                                         ; preds = %if.end87, %while.end
  %111 = load i32, i32* %i, align 4, !dbg !6416
  %inc97 = add nsw i32 %111, 1, !dbg !6416
  store i32 %inc97, i32* %i, align 4, !dbg !6416
  %112 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point, align 8, !dbg !6417
  %incdec.ptr98 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %112, i32 1, !dbg !6417
  store %struct.MaskSplinePoint* %incdec.ptr98, %struct.MaskSplinePoint** %point, align 8, !dbg !6417
  br label %while.cond, !dbg !6218, !llvm.loop !6418

while.end99:                                      ; preds = %while.cond
  br label %for.inc100, !dbg !6420

for.inc100:                                       ; preds = %while.end99
  %113 = load %struct.MaskSpline*, %struct.MaskSpline** %spline, align 8, !dbg !6421
  %prev = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %113, i32 0, i32 1, !dbg !6422
  %114 = load %struct.MaskSpline*, %struct.MaskSpline** %prev, align 8, !dbg !6422
  store %struct.MaskSpline* %114, %struct.MaskSpline** %spline, align 8, !dbg !6423
  br label %for.cond2, !dbg !6424, !llvm.loop !6425

for.end101:                                       ; preds = %for.cond2
  br label %for.inc102, !dbg !6427

for.inc102:                                       ; preds = %for.end101
  %115 = load %struct.MaskLayer*, %struct.MaskLayer** %mask_layer, align 8, !dbg !6428
  %next = getelementptr inbounds %struct.MaskLayer, %struct.MaskLayer* %115, i32 0, i32 0, !dbg !6429
  %116 = load %struct.MaskLayer*, %struct.MaskLayer** %next, align 8, !dbg !6429
  store %struct.MaskLayer* %116, %struct.MaskLayer** %mask_layer, align 8, !dbg !6430
  br label %for.cond, !dbg !6431, !llvm.loop !6432

for.end103:                                       ; preds = %for.cond
  %117 = load %struct.Mask*, %struct.Mask** %mask, align 8, !dbg !6434
  %118 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !6435
  %r = getelementptr inbounds %struct.Scene, %struct.Scene* %118, i32 0, i32 22, !dbg !6435
  %cfra = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r, i32 0, i32 5, !dbg !6435
  %119 = load i32, i32* %cfra, align 8, !dbg !6435
  %conv104 = sitofp i32 %119 to float, !dbg !6435
  call void @BKE_mask_update_display(%struct.Mask* %117, float %conv104), !dbg !6436
  %120 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6437
  %121 = load %struct.Mask*, %struct.Mask** %mask, align 8, !dbg !6438
  %122 = bitcast %struct.Mask* %121 to i8*, !dbg !6438
  call void @WM_event_add_notifier(%struct.bContext* %120, i32 352321537, i8* %122), !dbg !6439
  ret i32 4, !dbg !6440
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @MASK_OT_copy_splines(%struct.wmOperatorType* %ot) #0 !dbg !6441 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !6442, metadata !DIExpression()), !dbg !6443
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6444
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !6445
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.79, i64 0, i64 0), i8** %name, align 8, !dbg !6446
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6447
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 3, !dbg !6448
  store i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.80, i64 0, i64 0), i8** %description, align 8, !dbg !6449
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6450
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 1, !dbg !6451
  store i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.81, i64 0, i64 0), i8** %idname, align 8, !dbg !6452
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6453
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !6454
  store i32 (%struct.bContext*, %struct.wmOperator*)* @copy_splines_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !6455
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6456
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !6457
  store i32 (%struct.bContext*)* @ED_maskedit_mask_poll, i32 (%struct.bContext*)** %poll, align 8, !dbg !6458
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6459
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !6460
  store i16 1, i16* %flag, align 8, !dbg !6461
  ret void, !dbg !6462
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @copy_splines_exec(%struct.bContext* %C, %struct.wmOperator* %UNUSED_op) #0 !dbg !6463 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %UNUSED_op.addr = alloca %struct.wmOperator*, align 8
  %mask = alloca %struct.Mask*, align 8
  %mask_layer = alloca %struct.MaskLayer*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !6464, metadata !DIExpression()), !dbg !6465
  store %struct.wmOperator* %UNUSED_op, %struct.wmOperator** %UNUSED_op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %UNUSED_op.addr, metadata !6466, metadata !DIExpression()), !dbg !6467
  call void @llvm.dbg.declare(metadata %struct.Mask** %mask, metadata !6468, metadata !DIExpression()), !dbg !6469
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6470
  %call = call %struct.Mask* @CTX_data_edit_mask(%struct.bContext* %0), !dbg !6471
  store %struct.Mask* %call, %struct.Mask** %mask, align 8, !dbg !6469
  call void @llvm.dbg.declare(metadata %struct.MaskLayer** %mask_layer, metadata !6472, metadata !DIExpression()), !dbg !6473
  %1 = load %struct.Mask*, %struct.Mask** %mask, align 8, !dbg !6474
  %call1 = call %struct.MaskLayer* @BKE_mask_layer_active(%struct.Mask* %1), !dbg !6475
  store %struct.MaskLayer* %call1, %struct.MaskLayer** %mask_layer, align 8, !dbg !6473
  %2 = load %struct.MaskLayer*, %struct.MaskLayer** %mask_layer, align 8, !dbg !6476
  %cmp = icmp eq %struct.MaskLayer* %2, null, !dbg !6478
  br i1 %cmp, label %if.then, label %if.end, !dbg !6479

if.then:                                          ; preds = %entry
  store i32 2, i32* %retval, align 4, !dbg !6480
  br label %return, !dbg !6480

if.end:                                           ; preds = %entry
  %3 = load %struct.MaskLayer*, %struct.MaskLayer** %mask_layer, align 8, !dbg !6482
  call void @BKE_mask_clipboard_copy_from_layer(%struct.MaskLayer* %3), !dbg !6483
  store i32 4, i32* %retval, align 4, !dbg !6484
  br label %return, !dbg !6484

return:                                           ; preds = %if.end, %if.then
  %4 = load i32, i32* %retval, align 4, !dbg !6485
  ret i32 %4, !dbg !6485
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @MASK_OT_paste_splines(%struct.wmOperatorType* %ot) #0 !dbg !6486 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !6487, metadata !DIExpression()), !dbg !6488
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6489
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !6490
  store i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.82, i64 0, i64 0), i8** %name, align 8, !dbg !6491
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6492
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 3, !dbg !6493
  store i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.83, i64 0, i64 0), i8** %description, align 8, !dbg !6494
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6495
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 1, !dbg !6496
  store i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.84, i64 0, i64 0), i8** %idname, align 8, !dbg !6497
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6498
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !6499
  store i32 (%struct.bContext*, %struct.wmOperator*)* @paste_splines_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !6500
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6501
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !6502
  store i32 (%struct.bContext*)* @paste_splines_poll, i32 (%struct.bContext*)** %poll, align 8, !dbg !6503
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6504
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !6505
  store i16 3, i16* %flag, align 8, !dbg !6506
  ret void, !dbg !6507
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @paste_splines_exec(%struct.bContext* %C, %struct.wmOperator* %UNUSED_op) #0 !dbg !6508 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %UNUSED_op.addr = alloca %struct.wmOperator*, align 8
  %scene = alloca %struct.Scene*, align 8
  %mask = alloca %struct.Mask*, align 8
  %mask_layer = alloca %struct.MaskLayer*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !6509, metadata !DIExpression()), !dbg !6510
  store %struct.wmOperator* %UNUSED_op, %struct.wmOperator** %UNUSED_op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %UNUSED_op.addr, metadata !6511, metadata !DIExpression()), !dbg !6512
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene, metadata !6513, metadata !DIExpression()), !dbg !6514
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6515
  %call = call %struct.Scene* @CTX_data_scene(%struct.bContext* %0), !dbg !6516
  store %struct.Scene* %call, %struct.Scene** %scene, align 8, !dbg !6514
  call void @llvm.dbg.declare(metadata %struct.Mask** %mask, metadata !6517, metadata !DIExpression()), !dbg !6518
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6519
  %call1 = call %struct.Mask* @CTX_data_edit_mask(%struct.bContext* %1), !dbg !6520
  store %struct.Mask* %call1, %struct.Mask** %mask, align 8, !dbg !6518
  call void @llvm.dbg.declare(metadata %struct.MaskLayer** %mask_layer, metadata !6521, metadata !DIExpression()), !dbg !6522
  %2 = load %struct.Mask*, %struct.Mask** %mask, align 8, !dbg !6523
  %call2 = call %struct.MaskLayer* @BKE_mask_layer_active(%struct.Mask* %2), !dbg !6524
  store %struct.MaskLayer* %call2, %struct.MaskLayer** %mask_layer, align 8, !dbg !6522
  %3 = load %struct.MaskLayer*, %struct.MaskLayer** %mask_layer, align 8, !dbg !6525
  %cmp = icmp eq %struct.MaskLayer* %3, null, !dbg !6527
  br i1 %cmp, label %if.then, label %if.end, !dbg !6528

if.then:                                          ; preds = %entry
  %4 = load %struct.Mask*, %struct.Mask** %mask, align 8, !dbg !6529
  %call3 = call %struct.MaskLayer* @BKE_mask_layer_new(%struct.Mask* %4, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0)), !dbg !6531
  store %struct.MaskLayer* %call3, %struct.MaskLayer** %mask_layer, align 8, !dbg !6532
  br label %if.end, !dbg !6533

if.end:                                           ; preds = %if.then, %entry
  %5 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6534
  %call4 = call %struct.Main* @CTX_data_main(%struct.bContext* %5), !dbg !6535
  %6 = load %struct.MaskLayer*, %struct.MaskLayer** %mask_layer, align 8, !dbg !6536
  call void @BKE_mask_clipboard_paste_to_layer(%struct.Main* %call4, %struct.MaskLayer* %6), !dbg !6537
  %7 = load %struct.Mask*, %struct.Mask** %mask, align 8, !dbg !6538
  %8 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !6539
  %r = getelementptr inbounds %struct.Scene, %struct.Scene* %8, i32 0, i32 22, !dbg !6539
  %cfra = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r, i32 0, i32 5, !dbg !6539
  %9 = load i32, i32* %cfra, align 8, !dbg !6539
  %conv = sitofp i32 %9 to float, !dbg !6539
  call void @BKE_mask_update_display(%struct.Mask* %7, float %conv), !dbg !6540
  %10 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6541
  %11 = load %struct.Mask*, %struct.Mask** %mask, align 8, !dbg !6542
  %12 = bitcast %struct.Mask* %11 to i8*, !dbg !6542
  call void @WM_event_add_notifier(%struct.bContext* %10, i32 352321537, i8* %12), !dbg !6543
  ret i32 4, !dbg !6544
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @paste_splines_poll(%struct.bContext* %C) #0 !dbg !6545 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !6546, metadata !DIExpression()), !dbg !6547
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6548
  %call = call i32 @ED_maskedit_mask_poll(%struct.bContext* %0), !dbg !6550
  %tobool = icmp ne i32 %call, 0, !dbg !6550
  br i1 %tobool, label %if.then, label %if.end, !dbg !6551

if.then:                                          ; preds = %entry
  %call1 = call zeroext i8 @BKE_mask_clipboard_is_empty(), !dbg !6552
  %conv = zext i8 %call1 to i32, !dbg !6552
  %cmp = icmp eq i32 %conv, 0, !dbg !6554
  %conv2 = zext i1 %cmp to i32, !dbg !6554
  store i32 %conv2, i32* %retval, align 4, !dbg !6555
  br label %return, !dbg !6555

if.end:                                           ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !6556
  br label %return, !dbg !6556

return:                                           ; preds = %if.end, %if.then
  %1 = load i32, i32* %retval, align 4, !dbg !6557
  ret i32 %1, !dbg !6557
}

; Function Attrs: noinline nounwind uwtable
define internal void @sub_v2_v2v2(float* %r, float* %a, float* %b) #0 !dbg !6558 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !6561, metadata !DIExpression()), !dbg !6562
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !6563, metadata !DIExpression()), !dbg !6564
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !6565, metadata !DIExpression()), !dbg !6566
  %0 = load float*, float** %a.addr, align 8, !dbg !6567
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !6567
  %1 = load float, float* %arrayidx, align 4, !dbg !6567
  %2 = load float*, float** %b.addr, align 8, !dbg !6568
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !6568
  %3 = load float, float* %arrayidx1, align 4, !dbg !6568
  %sub = fsub float %1, %3, !dbg !6569
  %4 = load float*, float** %r.addr, align 8, !dbg !6570
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 0, !dbg !6570
  store float %sub, float* %arrayidx2, align 4, !dbg !6571
  %5 = load float*, float** %a.addr, align 8, !dbg !6572
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 1, !dbg !6572
  %6 = load float, float* %arrayidx3, align 4, !dbg !6572
  %7 = load float*, float** %b.addr, align 8, !dbg !6573
  %arrayidx4 = getelementptr inbounds float, float* %7, i64 1, !dbg !6573
  %8 = load float, float* %arrayidx4, align 4, !dbg !6573
  %sub5 = fsub float %6, %8, !dbg !6574
  %9 = load float*, float** %r.addr, align 8, !dbg !6575
  %arrayidx6 = getelementptr inbounds float, float* %9, i64 1, !dbg !6575
  store float %sub5, float* %arrayidx6, align 4, !dbg !6576
  ret void, !dbg !6577
}

; Function Attrs: noinline nounwind uwtable
define internal float @dot_v2v2(float* %a, float* %b) #0 !dbg !6578 {
entry:
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !6579, metadata !DIExpression()), !dbg !6580
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !6581, metadata !DIExpression()), !dbg !6582
  %0 = load float*, float** %a.addr, align 8, !dbg !6583
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !6583
  %1 = load float, float* %arrayidx, align 4, !dbg !6583
  %2 = load float*, float** %b.addr, align 8, !dbg !6584
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !6584
  %3 = load float, float* %arrayidx1, align 4, !dbg !6584
  %mul = fmul float %1, %3, !dbg !6585
  %4 = load float*, float** %a.addr, align 8, !dbg !6586
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !6586
  %5 = load float, float* %arrayidx2, align 4, !dbg !6586
  %6 = load float*, float** %b.addr, align 8, !dbg !6587
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !6587
  %7 = load float, float* %arrayidx3, align 4, !dbg !6587
  %mul4 = fmul float %5, %7, !dbg !6588
  %add = fadd float %mul, %mul4, !dbg !6589
  ret float %add, !dbg !6590
}

declare dso_local void @BKE_mask_point_handle(%struct.MaskSplinePoint*, i32, float*) #2

declare dso_local void @RNA_string_get(%struct.PointerRNA*, i8*, i8*) #2

declare dso_local void @WM_event_add_notifier(%struct.bContext*, i32, i8*) #2

declare dso_local void @BKE_mask_layer_remove(%struct.Mask*, %struct.MaskLayer*) #2

; Function Attrs: noinline nounwind uwtable
define internal i8* @slide_point_customdata(%struct.bContext* %C, %struct.wmOperator* %op, %struct.wmEvent* %event) #0 !dbg !6591 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %event.addr = alloca %struct.wmEvent*, align 8
  %sa = alloca %struct.ScrArea*, align 8
  %ar = alloca %struct.ARegion*, align 8
  %mask = alloca %struct.Mask*, align 8
  %customdata = alloca %struct.SlidePointData*, align 8
  %masklay = alloca %struct.MaskLayer*, align 8
  %cv_masklay = alloca %struct.MaskLayer*, align 8
  %feather_masklay = alloca %struct.MaskLayer*, align 8
  %spline = alloca %struct.MaskSpline*, align 8
  %cv_spline = alloca %struct.MaskSpline*, align 8
  %feather_spline = alloca %struct.MaskSpline*, align 8
  %point = alloca %struct.MaskSplinePoint*, align 8
  %cv_point = alloca %struct.MaskSplinePoint*, align 8
  %feather_point = alloca %struct.MaskSplinePoint*, align 8
  %uw = alloca %struct.MaskSplinePointUW*, align 8
  %width = alloca i32, align 4
  %height = alloca i32, align 4
  %action = alloca i32, align 4
  %slide_feather = alloca i8, align 1
  %co = alloca [2 x float], align 4
  %cv_score = alloca float, align 4
  %feather_score = alloca float, align 4
  %threshold = alloca float, align 4
  %which_handle = alloca i32, align 4
  %co_uw = alloca [2 x float], align 4
  %weight_scalar = alloca float, align 4
  %bezt73 = alloca %struct.BezTriple*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !6594, metadata !DIExpression()), !dbg !6595
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !6596, metadata !DIExpression()), !dbg !6597
  store %struct.wmEvent* %event, %struct.wmEvent** %event.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %event.addr, metadata !6598, metadata !DIExpression()), !dbg !6599
  call void @llvm.dbg.declare(metadata %struct.ScrArea** %sa, metadata !6600, metadata !DIExpression()), !dbg !6601
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6602
  %call = call %struct.ScrArea* @CTX_wm_area(%struct.bContext* %0), !dbg !6603
  store %struct.ScrArea* %call, %struct.ScrArea** %sa, align 8, !dbg !6601
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar, metadata !6604, metadata !DIExpression()), !dbg !6605
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6606
  %call1 = call %struct.ARegion* @CTX_wm_region(%struct.bContext* %1), !dbg !6607
  store %struct.ARegion* %call1, %struct.ARegion** %ar, align 8, !dbg !6605
  call void @llvm.dbg.declare(metadata %struct.Mask** %mask, metadata !6608, metadata !DIExpression()), !dbg !6609
  %2 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6610
  %call2 = call %struct.Mask* @CTX_data_edit_mask(%struct.bContext* %2), !dbg !6611
  store %struct.Mask* %call2, %struct.Mask** %mask, align 8, !dbg !6609
  call void @llvm.dbg.declare(metadata %struct.SlidePointData** %customdata, metadata !6612, metadata !DIExpression()), !dbg !6613
  store %struct.SlidePointData* null, %struct.SlidePointData** %customdata, align 8, !dbg !6613
  call void @llvm.dbg.declare(metadata %struct.MaskLayer** %masklay, metadata !6614, metadata !DIExpression()), !dbg !6615
  call void @llvm.dbg.declare(metadata %struct.MaskLayer** %cv_masklay, metadata !6616, metadata !DIExpression()), !dbg !6617
  call void @llvm.dbg.declare(metadata %struct.MaskLayer** %feather_masklay, metadata !6618, metadata !DIExpression()), !dbg !6619
  call void @llvm.dbg.declare(metadata %struct.MaskSpline** %spline, metadata !6620, metadata !DIExpression()), !dbg !6621
  call void @llvm.dbg.declare(metadata %struct.MaskSpline** %cv_spline, metadata !6622, metadata !DIExpression()), !dbg !6623
  call void @llvm.dbg.declare(metadata %struct.MaskSpline** %feather_spline, metadata !6624, metadata !DIExpression()), !dbg !6625
  call void @llvm.dbg.declare(metadata %struct.MaskSplinePoint** %point, metadata !6626, metadata !DIExpression()), !dbg !6627
  call void @llvm.dbg.declare(metadata %struct.MaskSplinePoint** %cv_point, metadata !6628, metadata !DIExpression()), !dbg !6629
  call void @llvm.dbg.declare(metadata %struct.MaskSplinePoint** %feather_point, metadata !6630, metadata !DIExpression()), !dbg !6631
  call void @llvm.dbg.declare(metadata %struct.MaskSplinePointUW** %uw, metadata !6632, metadata !DIExpression()), !dbg !6633
  store %struct.MaskSplinePointUW* null, %struct.MaskSplinePointUW** %uw, align 8, !dbg !6633
  call void @llvm.dbg.declare(metadata i32* %width, metadata !6634, metadata !DIExpression()), !dbg !6635
  call void @llvm.dbg.declare(metadata i32* %height, metadata !6636, metadata !DIExpression()), !dbg !6637
  call void @llvm.dbg.declare(metadata i32* %action, metadata !6638, metadata !DIExpression()), !dbg !6639
  store i32 0, i32* %action, align 4, !dbg !6639
  call void @llvm.dbg.declare(metadata i8* %slide_feather, metadata !6640, metadata !DIExpression()), !dbg !6641
  %3 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !6642
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %3, i32 0, i32 7, !dbg !6643
  %4 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !6643
  %call3 = call i32 @RNA_boolean_get(%struct.PointerRNA* %4, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.17, i64 0, i64 0)), !dbg !6644
  %conv = trunc i32 %call3 to i8, !dbg !6644
  store i8 %conv, i8* %slide_feather, align 1, !dbg !6641
  call void @llvm.dbg.declare(metadata [2 x float]* %co, metadata !6645, metadata !DIExpression()), !dbg !6646
  call void @llvm.dbg.declare(metadata float* %cv_score, metadata !6647, metadata !DIExpression()), !dbg !6648
  call void @llvm.dbg.declare(metadata float* %feather_score, metadata !6649, metadata !DIExpression()), !dbg !6650
  call void @llvm.dbg.declare(metadata float* %threshold, metadata !6651, metadata !DIExpression()), !dbg !6652
  store float 1.900000e+01, float* %threshold, align 4, !dbg !6652
  call void @llvm.dbg.declare(metadata i32* %which_handle, metadata !6653, metadata !DIExpression()), !dbg !6654
  %5 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !6655
  %6 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !6656
  %7 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !6657
  %mval = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %7, i32 0, i32 6, !dbg !6658
  %arraydecay = getelementptr inbounds [2 x i32], [2 x i32]* %mval, i64 0, i64 0, !dbg !6657
  %arraydecay4 = getelementptr inbounds [2 x float], [2 x float]* %co, i64 0, i64 0, !dbg !6659
  call void @ED_mask_mouse_pos(%struct.ScrArea* %5, %struct.ARegion* %6, i32* %arraydecay, float* %arraydecay4), !dbg !6660
  %8 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !6661
  call void @ED_mask_get_size(%struct.ScrArea* %8, i32* %width, i32* %height), !dbg !6662
  %9 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6663
  %10 = load %struct.Mask*, %struct.Mask** %mask, align 8, !dbg !6664
  %arraydecay5 = getelementptr inbounds [2 x float], [2 x float]* %co, i64 0, i64 0, !dbg !6665
  %call6 = call %struct.MaskSplinePoint* @ED_mask_point_find_nearest(%struct.bContext* %9, %struct.Mask* %10, float* %arraydecay5, float 1.900000e+01, %struct.MaskLayer** %cv_masklay, %struct.MaskSpline** %cv_spline, i32* %which_handle, float* %cv_score), !dbg !6666
  store %struct.MaskSplinePoint* %call6, %struct.MaskSplinePoint** %cv_point, align 8, !dbg !6667
  %11 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6668
  %12 = load %struct.Mask*, %struct.Mask** %mask, align 8, !dbg !6670
  %arraydecay7 = getelementptr inbounds [2 x float], [2 x float]* %co, i64 0, i64 0, !dbg !6671
  %call8 = call zeroext i8 @ED_mask_feather_find_nearest(%struct.bContext* %11, %struct.Mask* %12, float* %arraydecay7, float 1.900000e+01, %struct.MaskLayer** %feather_masklay, %struct.MaskSpline** %feather_spline, %struct.MaskSplinePoint** %feather_point, %struct.MaskSplinePointUW** %uw, float* %feather_score), !dbg !6672
  %tobool = icmp ne i8 %call8, 0, !dbg !6672
  br i1 %tobool, label %if.then, label %if.end15, !dbg !6673

if.then:                                          ; preds = %entry
  %13 = load i8, i8* %slide_feather, align 1, !dbg !6674
  %conv9 = zext i8 %13 to i32, !dbg !6674
  %tobool10 = icmp ne i32 %conv9, 0, !dbg !6674
  br i1 %tobool10, label %if.then14, label %lor.lhs.false, !dbg !6677

lor.lhs.false:                                    ; preds = %if.then
  %14 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %cv_point, align 8, !dbg !6678
  %tobool11 = icmp ne %struct.MaskSplinePoint* %14, null, !dbg !6678
  br i1 %tobool11, label %lor.lhs.false12, label %if.then14, !dbg !6679

lor.lhs.false12:                                  ; preds = %lor.lhs.false
  %15 = load float, float* %feather_score, align 4, !dbg !6680
  %16 = load float, float* %cv_score, align 4, !dbg !6681
  %cmp = fcmp olt float %15, %16, !dbg !6682
  br i1 %cmp, label %if.then14, label %if.end, !dbg !6683

if.then14:                                        ; preds = %lor.lhs.false12, %lor.lhs.false, %if.then
  store i32 3, i32* %action, align 4, !dbg !6684
  %17 = load %struct.MaskLayer*, %struct.MaskLayer** %feather_masklay, align 8, !dbg !6686
  store %struct.MaskLayer* %17, %struct.MaskLayer** %masklay, align 8, !dbg !6687
  %18 = load %struct.MaskSpline*, %struct.MaskSpline** %feather_spline, align 8, !dbg !6688
  store %struct.MaskSpline* %18, %struct.MaskSpline** %spline, align 8, !dbg !6689
  %19 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %feather_point, align 8, !dbg !6690
  store %struct.MaskSplinePoint* %19, %struct.MaskSplinePoint** %point, align 8, !dbg !6691
  br label %if.end, !dbg !6692

if.end:                                           ; preds = %if.then14, %lor.lhs.false12
  br label %if.end15, !dbg !6693

if.end15:                                         ; preds = %if.end, %entry
  %20 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %cv_point, align 8, !dbg !6694
  %tobool16 = icmp ne %struct.MaskSplinePoint* %20, null, !dbg !6694
  br i1 %tobool16, label %land.lhs.true, label %if.end24, !dbg !6696

land.lhs.true:                                    ; preds = %if.end15
  %21 = load i32, i32* %action, align 4, !dbg !6697
  %cmp17 = icmp eq i32 %21, 0, !dbg !6698
  br i1 %cmp17, label %if.then19, label %if.end24, !dbg !6699

if.then19:                                        ; preds = %land.lhs.true
  %22 = load i32, i32* %which_handle, align 4, !dbg !6700
  %cmp20 = icmp ne i32 %22, 0, !dbg !6703
  br i1 %cmp20, label %if.then22, label %if.else, !dbg !6704

if.then22:                                        ; preds = %if.then19
  store i32 2, i32* %action, align 4, !dbg !6705
  br label %if.end23, !dbg !6706

if.else:                                          ; preds = %if.then19
  store i32 1, i32* %action, align 4, !dbg !6707
  br label %if.end23

if.end23:                                         ; preds = %if.else, %if.then22
  %23 = load %struct.MaskLayer*, %struct.MaskLayer** %cv_masklay, align 8, !dbg !6708
  store %struct.MaskLayer* %23, %struct.MaskLayer** %masklay, align 8, !dbg !6709
  %24 = load %struct.MaskSpline*, %struct.MaskSpline** %cv_spline, align 8, !dbg !6710
  store %struct.MaskSpline* %24, %struct.MaskSpline** %spline, align 8, !dbg !6711
  %25 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %cv_point, align 8, !dbg !6712
  store %struct.MaskSplinePoint* %25, %struct.MaskSplinePoint** %point, align 8, !dbg !6713
  br label %if.end24, !dbg !6714

if.end24:                                         ; preds = %if.end23, %land.lhs.true, %if.end15
  %26 = load i32, i32* %action, align 4, !dbg !6715
  %cmp25 = icmp eq i32 %26, 0, !dbg !6717
  br i1 %cmp25, label %if.then27, label %if.end33, !dbg !6718

if.then27:                                        ; preds = %if.end24
  %27 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6719
  %28 = load %struct.Mask*, %struct.Mask** %mask, align 8, !dbg !6722
  %arraydecay28 = getelementptr inbounds [2 x float], [2 x float]* %co, i64 0, i64 0, !dbg !6723
  %call29 = call zeroext i8 @spline_under_mouse_get(%struct.bContext* %27, %struct.Mask* %28, float* %arraydecay28, %struct.MaskLayer** %masklay, %struct.MaskSpline** %spline), !dbg !6724
  %tobool30 = icmp ne i8 %call29, 0, !dbg !6724
  br i1 %tobool30, label %if.then31, label %if.end32, !dbg !6725

if.then31:                                        ; preds = %if.then27
  store i32 4, i32* %action, align 4, !dbg !6726
  store %struct.MaskSplinePoint* null, %struct.MaskSplinePoint** %point, align 8, !dbg !6728
  br label %if.end32, !dbg !6729

if.end32:                                         ; preds = %if.then31, %if.then27
  br label %if.end33, !dbg !6730

if.end33:                                         ; preds = %if.end32, %if.end24
  %29 = load i32, i32* %action, align 4, !dbg !6731
  %cmp34 = icmp ne i32 %29, 0, !dbg !6733
  br i1 %cmp34, label %if.then36, label %if.end116, !dbg !6734

if.then36:                                        ; preds = %if.end33
  %30 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !6735
  %call37 = call i8* %30(i64 168, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.85, i64 0, i64 0)), !dbg !6735
  %31 = bitcast i8* %call37 to %struct.SlidePointData*, !dbg !6735
  store %struct.SlidePointData* %31, %struct.SlidePointData** %customdata, align 8, !dbg !6737
  %32 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !6738
  %type = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %32, i32 0, i32 2, !dbg !6739
  %33 = load i16, i16* %type, align 8, !dbg !6739
  %34 = load %struct.SlidePointData*, %struct.SlidePointData** %customdata, align 8, !dbg !6740
  %event_invoke_type = getelementptr inbounds %struct.SlidePointData, %struct.SlidePointData* %34, i32 0, i32 0, !dbg !6741
  store i16 %33, i16* %event_invoke_type, align 8, !dbg !6742
  %35 = load %struct.Mask*, %struct.Mask** %mask, align 8, !dbg !6743
  %36 = load %struct.SlidePointData*, %struct.SlidePointData** %customdata, align 8, !dbg !6744
  %mask38 = getelementptr inbounds %struct.SlidePointData, %struct.SlidePointData* %36, i32 0, i32 2, !dbg !6745
  store %struct.Mask* %35, %struct.Mask** %mask38, align 8, !dbg !6746
  %37 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay, align 8, !dbg !6747
  %38 = load %struct.SlidePointData*, %struct.SlidePointData** %customdata, align 8, !dbg !6748
  %masklay39 = getelementptr inbounds %struct.SlidePointData, %struct.SlidePointData* %38, i32 0, i32 3, !dbg !6749
  store %struct.MaskLayer* %37, %struct.MaskLayer** %masklay39, align 8, !dbg !6750
  %39 = load %struct.MaskSpline*, %struct.MaskSpline** %spline, align 8, !dbg !6751
  %40 = load %struct.SlidePointData*, %struct.SlidePointData** %customdata, align 8, !dbg !6752
  %spline40 = getelementptr inbounds %struct.SlidePointData, %struct.SlidePointData* %40, i32 0, i32 4, !dbg !6753
  store %struct.MaskSpline* %39, %struct.MaskSpline** %spline40, align 8, !dbg !6754
  %41 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point, align 8, !dbg !6755
  %42 = load %struct.SlidePointData*, %struct.SlidePointData** %customdata, align 8, !dbg !6756
  %point41 = getelementptr inbounds %struct.SlidePointData, %struct.SlidePointData* %42, i32 0, i32 6, !dbg !6757
  store %struct.MaskSplinePoint* %41, %struct.MaskSplinePoint** %point41, align 8, !dbg !6758
  %43 = load i32, i32* %width, align 4, !dbg !6759
  %44 = load %struct.SlidePointData*, %struct.SlidePointData** %customdata, align 8, !dbg !6760
  %width42 = getelementptr inbounds %struct.SlidePointData, %struct.SlidePointData* %44, i32 0, i32 9, !dbg !6761
  store i32 %43, i32* %width42, align 4, !dbg !6762
  %45 = load i32, i32* %height, align 4, !dbg !6763
  %46 = load %struct.SlidePointData*, %struct.SlidePointData** %customdata, align 8, !dbg !6764
  %height43 = getelementptr inbounds %struct.SlidePointData, %struct.SlidePointData* %46, i32 0, i32 10, !dbg !6765
  store i32 %45, i32* %height43, align 8, !dbg !6766
  %47 = load i32, i32* %action, align 4, !dbg !6767
  %48 = load %struct.SlidePointData*, %struct.SlidePointData** %customdata, align 8, !dbg !6768
  %action44 = getelementptr inbounds %struct.SlidePointData, %struct.SlidePointData* %48, i32 0, i32 1, !dbg !6769
  store i32 %47, i32* %action44, align 4, !dbg !6770
  %49 = load %struct.MaskSplinePointUW*, %struct.MaskSplinePointUW** %uw, align 8, !dbg !6771
  %50 = load %struct.SlidePointData*, %struct.SlidePointData** %customdata, align 8, !dbg !6772
  %uw45 = getelementptr inbounds %struct.SlidePointData, %struct.SlidePointData* %50, i32 0, i32 7, !dbg !6773
  store %struct.MaskSplinePointUW* %49, %struct.MaskSplinePointUW** %uw45, align 8, !dbg !6774
  %51 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !6775
  %ptr46 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %51, i32 0, i32 7, !dbg !6776
  %52 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr46, align 8, !dbg !6776
  %call47 = call i32 @RNA_boolean_get(%struct.PointerRNA* %52, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.20, i64 0, i64 0)), !dbg !6777
  %conv48 = trunc i32 %call47 to i8, !dbg !6777
  %53 = load %struct.SlidePointData*, %struct.SlidePointData** %customdata, align 8, !dbg !6778
  %is_sliding_new_point = getelementptr inbounds %struct.SlidePointData, %struct.SlidePointData* %53, i32 0, i32 17, !dbg !6779
  store i8 %conv48, i8* %is_sliding_new_point, align 8, !dbg !6780
  %54 = load %struct.SlidePointData*, %struct.SlidePointData** %customdata, align 8, !dbg !6781
  %action49 = getelementptr inbounds %struct.SlidePointData, %struct.SlidePointData* %54, i32 0, i32 1, !dbg !6783
  %55 = load i32, i32* %action49, align 4, !dbg !6783
  %cmp50 = icmp ne i32 %55, 4, !dbg !6784
  br i1 %cmp50, label %if.then52, label %if.end54, !dbg !6785

if.then52:                                        ; preds = %if.then36
  %56 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point, align 8, !dbg !6786
  %bezt = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %56, i32 0, i32 0, !dbg !6788
  %h1 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %bezt, i32 0, i32 5, !dbg !6789
  %57 = load i8, i8* %h1, align 1, !dbg !6789
  %58 = load %struct.SlidePointData*, %struct.SlidePointData** %customdata, align 8, !dbg !6790
  %old_h1 = getelementptr inbounds %struct.SlidePointData, %struct.SlidePointData* %58, i32 0, i32 19, !dbg !6791
  store i8 %57, i8* %old_h1, align 8, !dbg !6792
  %59 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point, align 8, !dbg !6793
  %bezt53 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %59, i32 0, i32 0, !dbg !6794
  %h2 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %bezt53, i32 0, i32 6, !dbg !6795
  %60 = load i8, i8* %h2, align 2, !dbg !6795
  %61 = load %struct.SlidePointData*, %struct.SlidePointData** %customdata, align 8, !dbg !6796
  %old_h2 = getelementptr inbounds %struct.SlidePointData, %struct.SlidePointData* %61, i32 0, i32 20, !dbg !6797
  store i8 %60, i8* %old_h2, align 1, !dbg !6798
  %62 = load %struct.Mask*, %struct.Mask** %mask, align 8, !dbg !6799
  %63 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay, align 8, !dbg !6800
  %64 = load %struct.MaskSpline*, %struct.MaskSpline** %spline, align 8, !dbg !6801
  %65 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point, align 8, !dbg !6802
  %66 = load i32, i32* %which_handle, align 4, !dbg !6803
  call void @select_sliding_point(%struct.Mask* %62, %struct.MaskLayer* %63, %struct.MaskSpline* %64, %struct.MaskSplinePoint* %65, i32 %66), !dbg !6804
  %67 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point, align 8, !dbg !6805
  %68 = load i32, i32* %which_handle, align 4, !dbg !6806
  call void @check_sliding_handle_type(%struct.MaskSplinePoint* %67, i32 %68), !dbg !6807
  br label %if.end54, !dbg !6808

if.end54:                                         ; preds = %if.then52, %if.then36
  %69 = load %struct.MaskSplinePointUW*, %struct.MaskSplinePointUW** %uw, align 8, !dbg !6809
  %tobool55 = icmp ne %struct.MaskSplinePointUW* %69, null, !dbg !6809
  br i1 %tobool55, label %if.then56, label %if.else68, !dbg !6811

if.then56:                                        ; preds = %if.end54
  call void @llvm.dbg.declare(metadata [2 x float]* %co_uw, metadata !6812, metadata !DIExpression()), !dbg !6814
  call void @llvm.dbg.declare(metadata float* %weight_scalar, metadata !6815, metadata !DIExpression()), !dbg !6816
  %70 = load %struct.MaskSpline*, %struct.MaskSpline** %spline, align 8, !dbg !6817
  %71 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point, align 8, !dbg !6818
  %72 = load %struct.MaskSplinePointUW*, %struct.MaskSplinePointUW** %uw, align 8, !dbg !6819
  %u = getelementptr inbounds %struct.MaskSplinePointUW, %struct.MaskSplinePointUW* %72, i32 0, i32 0, !dbg !6820
  %73 = load float, float* %u, align 4, !dbg !6820
  %call57 = call float @BKE_mask_point_weight_scalar(%struct.MaskSpline* %70, %struct.MaskSplinePoint* %71, float %73), !dbg !6821
  store float %call57, float* %weight_scalar, align 4, !dbg !6816
  %74 = load %struct.MaskSplinePointUW*, %struct.MaskSplinePointUW** %uw, align 8, !dbg !6822
  %w = getelementptr inbounds %struct.MaskSplinePointUW, %struct.MaskSplinePointUW* %74, i32 0, i32 1, !dbg !6823
  %75 = load float, float* %w, align 4, !dbg !6823
  %76 = load %struct.SlidePointData*, %struct.SlidePointData** %customdata, align 8, !dbg !6824
  %weight = getelementptr inbounds %struct.SlidePointData, %struct.SlidePointData* %76, i32 0, i32 24, !dbg !6825
  store float %75, float* %weight, align 4, !dbg !6826
  %77 = load float, float* %weight_scalar, align 4, !dbg !6827
  %78 = load %struct.SlidePointData*, %struct.SlidePointData** %customdata, align 8, !dbg !6828
  %weight_scalar58 = getelementptr inbounds %struct.SlidePointData, %struct.SlidePointData* %78, i32 0, i32 25, !dbg !6829
  store float %77, float* %weight_scalar58, align 8, !dbg !6830
  %79 = load %struct.MaskSpline*, %struct.MaskSpline** %spline, align 8, !dbg !6831
  %80 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point, align 8, !dbg !6832
  %81 = load %struct.MaskSplinePointUW*, %struct.MaskSplinePointUW** %uw, align 8, !dbg !6833
  %u59 = getelementptr inbounds %struct.MaskSplinePointUW, %struct.MaskSplinePointUW* %81, i32 0, i32 0, !dbg !6834
  %82 = load float, float* %u59, align 4, !dbg !6834
  %arraydecay60 = getelementptr inbounds [2 x float], [2 x float]* %co_uw, i64 0, i64 0, !dbg !6835
  call void @BKE_mask_point_segment_co(%struct.MaskSpline* %79, %struct.MaskSplinePoint* %80, float %82, float* %arraydecay60), !dbg !6836
  %83 = load %struct.MaskSpline*, %struct.MaskSpline** %spline, align 8, !dbg !6837
  %84 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point, align 8, !dbg !6838
  %85 = load %struct.MaskSplinePointUW*, %struct.MaskSplinePointUW** %uw, align 8, !dbg !6839
  %u61 = getelementptr inbounds %struct.MaskSplinePointUW, %struct.MaskSplinePointUW* %85, i32 0, i32 0, !dbg !6840
  %86 = load float, float* %u61, align 4, !dbg !6840
  %87 = load %struct.SlidePointData*, %struct.SlidePointData** %customdata, align 8, !dbg !6841
  %no = getelementptr inbounds %struct.SlidePointData, %struct.SlidePointData* %87, i32 0, i32 12, !dbg !6842
  %arraydecay62 = getelementptr inbounds [2 x float], [2 x float]* %no, i64 0, i64 0, !dbg !6841
  call void @BKE_mask_point_normal(%struct.MaskSpline* %83, %struct.MaskSplinePoint* %84, float %86, float* %arraydecay62), !dbg !6843
  %88 = load %struct.SlidePointData*, %struct.SlidePointData** %customdata, align 8, !dbg !6844
  %prev_feather_coord = getelementptr inbounds %struct.SlidePointData, %struct.SlidePointData* %88, i32 0, i32 23, !dbg !6845
  %arraydecay63 = getelementptr inbounds [2 x float], [2 x float]* %prev_feather_coord, i64 0, i64 0, !dbg !6844
  %arraydecay64 = getelementptr inbounds [2 x float], [2 x float]* %co_uw, i64 0, i64 0, !dbg !6846
  %89 = load %struct.SlidePointData*, %struct.SlidePointData** %customdata, align 8, !dbg !6847
  %no65 = getelementptr inbounds %struct.SlidePointData, %struct.SlidePointData* %89, i32 0, i32 12, !dbg !6848
  %arraydecay66 = getelementptr inbounds [2 x float], [2 x float]* %no65, i64 0, i64 0, !dbg !6847
  %90 = load %struct.MaskSplinePointUW*, %struct.MaskSplinePointUW** %uw, align 8, !dbg !6849
  %w67 = getelementptr inbounds %struct.MaskSplinePointUW, %struct.MaskSplinePointUW* %90, i32 0, i32 1, !dbg !6850
  %91 = load float, float* %w67, align 4, !dbg !6850
  %92 = load float, float* %weight_scalar, align 4, !dbg !6851
  %mul = fmul float %91, %92, !dbg !6852
  call void @madd_v2_v2v2fl(float* %arraydecay63, float* %arraydecay64, float* %arraydecay66, float %mul), !dbg !6853
  br label %if.end87, !dbg !6854

if.else68:                                        ; preds = %if.end54
  %93 = load %struct.SlidePointData*, %struct.SlidePointData** %customdata, align 8, !dbg !6855
  %action69 = getelementptr inbounds %struct.SlidePointData, %struct.SlidePointData* %93, i32 0, i32 1, !dbg !6857
  %94 = load i32, i32* %action69, align 4, !dbg !6857
  %cmp70 = icmp ne i32 %94, 4, !dbg !6858
  br i1 %cmp70, label %if.then72, label %if.end86, !dbg !6859

if.then72:                                        ; preds = %if.else68
  call void @llvm.dbg.declare(metadata %struct.BezTriple** %bezt73, metadata !6860, metadata !DIExpression()), !dbg !6862
  %95 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point, align 8, !dbg !6863
  %bezt74 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %95, i32 0, i32 0, !dbg !6864
  store %struct.BezTriple* %bezt74, %struct.BezTriple** %bezt73, align 8, !dbg !6862
  %96 = load %struct.BezTriple*, %struct.BezTriple** %bezt73, align 8, !dbg !6865
  %weight75 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %96, i32 0, i32 2, !dbg !6866
  %97 = load float, float* %weight75, align 4, !dbg !6866
  %98 = load %struct.SlidePointData*, %struct.SlidePointData** %customdata, align 8, !dbg !6867
  %weight76 = getelementptr inbounds %struct.SlidePointData, %struct.SlidePointData* %98, i32 0, i32 24, !dbg !6868
  store float %97, float* %weight76, align 4, !dbg !6869
  %99 = load %struct.SlidePointData*, %struct.SlidePointData** %customdata, align 8, !dbg !6870
  %weight_scalar77 = getelementptr inbounds %struct.SlidePointData, %struct.SlidePointData* %99, i32 0, i32 25, !dbg !6871
  store float 1.000000e+00, float* %weight_scalar77, align 8, !dbg !6872
  %100 = load %struct.MaskSpline*, %struct.MaskSpline** %spline, align 8, !dbg !6873
  %101 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point, align 8, !dbg !6874
  %102 = load %struct.SlidePointData*, %struct.SlidePointData** %customdata, align 8, !dbg !6875
  %no78 = getelementptr inbounds %struct.SlidePointData, %struct.SlidePointData* %102, i32 0, i32 12, !dbg !6876
  %arraydecay79 = getelementptr inbounds [2 x float], [2 x float]* %no78, i64 0, i64 0, !dbg !6875
  call void @BKE_mask_point_normal(%struct.MaskSpline* %100, %struct.MaskSplinePoint* %101, float 0.000000e+00, float* %arraydecay79), !dbg !6877
  %103 = load %struct.SlidePointData*, %struct.SlidePointData** %customdata, align 8, !dbg !6878
  %prev_feather_coord80 = getelementptr inbounds %struct.SlidePointData, %struct.SlidePointData* %103, i32 0, i32 23, !dbg !6879
  %arraydecay81 = getelementptr inbounds [2 x float], [2 x float]* %prev_feather_coord80, i64 0, i64 0, !dbg !6878
  %104 = load %struct.BezTriple*, %struct.BezTriple** %bezt73, align 8, !dbg !6880
  %vec = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %104, i32 0, i32 0, !dbg !6881
  %arrayidx = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec, i64 0, i64 1, !dbg !6880
  %arraydecay82 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx, i64 0, i64 0, !dbg !6880
  %105 = load %struct.SlidePointData*, %struct.SlidePointData** %customdata, align 8, !dbg !6882
  %no83 = getelementptr inbounds %struct.SlidePointData, %struct.SlidePointData* %105, i32 0, i32 12, !dbg !6883
  %arraydecay84 = getelementptr inbounds [2 x float], [2 x float]* %no83, i64 0, i64 0, !dbg !6882
  %106 = load %struct.BezTriple*, %struct.BezTriple** %bezt73, align 8, !dbg !6884
  %weight85 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %106, i32 0, i32 2, !dbg !6885
  %107 = load float, float* %weight85, align 4, !dbg !6885
  call void @madd_v2_v2v2fl(float* %arraydecay81, float* %arraydecay82, float* %arraydecay84, float %107), !dbg !6886
  br label %if.end86, !dbg !6887

if.end86:                                         ; preds = %if.then72, %if.else68
  br label %if.end87

if.end87:                                         ; preds = %if.end86, %if.then56
  %108 = load %struct.SlidePointData*, %struct.SlidePointData** %customdata, align 8, !dbg !6888
  %action88 = getelementptr inbounds %struct.SlidePointData, %struct.SlidePointData* %108, i32 0, i32 1, !dbg !6890
  %109 = load i32, i32* %action88, align 4, !dbg !6890
  %cmp89 = icmp eq i32 %109, 3, !dbg !6891
  br i1 %cmp89, label %if.then91, label %if.end93, !dbg !6892

if.then91:                                        ; preds = %if.end87
  %110 = load %struct.MaskSpline*, %struct.MaskSpline** %spline, align 8, !dbg !6893
  %call92 = call zeroext i8 @slide_point_check_initial_feather(%struct.MaskSpline* %110), !dbg !6895
  %111 = load %struct.SlidePointData*, %struct.SlidePointData** %customdata, align 8, !dbg !6896
  %is_initial_feather = getelementptr inbounds %struct.SlidePointData, %struct.SlidePointData* %111, i32 0, i32 15, !dbg !6897
  store i8 %call92, i8* %is_initial_feather, align 2, !dbg !6898
  br label %if.end93, !dbg !6899

if.end93:                                         ; preds = %if.then91, %if.end87
  %112 = load %struct.SlidePointData*, %struct.SlidePointData** %customdata, align 8, !dbg !6900
  %action94 = getelementptr inbounds %struct.SlidePointData, %struct.SlidePointData* %112, i32 0, i32 1, !dbg !6902
  %113 = load i32, i32* %action94, align 4, !dbg !6902
  %cmp95 = icmp ne i32 %113, 4, !dbg !6903
  br i1 %cmp95, label %if.then97, label %if.end111, !dbg !6904

if.then97:                                        ; preds = %if.end93
  %114 = load %struct.SlidePointData*, %struct.SlidePointData** %customdata, align 8, !dbg !6905
  %vec98 = getelementptr inbounds %struct.SlidePointData, %struct.SlidePointData* %114, i32 0, i32 18, !dbg !6907
  %arraydecay99 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec98, i64 0, i64 0, !dbg !6905
  %115 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point, align 8, !dbg !6908
  %bezt100 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %115, i32 0, i32 0, !dbg !6909
  %vec101 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %bezt100, i32 0, i32 0, !dbg !6910
  %arraydecay102 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec101, i64 0, i64 0, !dbg !6908
  call void @copy_m3_m3([3 x float]* %arraydecay99, [3 x float]* %arraydecay102), !dbg !6911
  %116 = load i32, i32* %which_handle, align 4, !dbg !6912
  %cmp103 = icmp ne i32 %116, 0, !dbg !6914
  br i1 %cmp103, label %if.then105, label %if.end110, !dbg !6915

if.then105:                                       ; preds = %if.then97
  %117 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point, align 8, !dbg !6916
  %118 = load i32, i32* %which_handle, align 4, !dbg !6918
  %119 = load %struct.SlidePointData*, %struct.SlidePointData** %customdata, align 8, !dbg !6919
  %orig_handle_coord = getelementptr inbounds %struct.SlidePointData, %struct.SlidePointData* %119, i32 0, i32 21, !dbg !6920
  %arraydecay106 = getelementptr inbounds [2 x float], [2 x float]* %orig_handle_coord, i64 0, i64 0, !dbg !6919
  call void @BKE_mask_point_handle(%struct.MaskSplinePoint* %117, i32 %118, float* %arraydecay106), !dbg !6921
  %120 = load %struct.SlidePointData*, %struct.SlidePointData** %customdata, align 8, !dbg !6922
  %prev_handle_coord = getelementptr inbounds %struct.SlidePointData, %struct.SlidePointData* %120, i32 0, i32 22, !dbg !6923
  %arraydecay107 = getelementptr inbounds [2 x float], [2 x float]* %prev_handle_coord, i64 0, i64 0, !dbg !6922
  %121 = load %struct.SlidePointData*, %struct.SlidePointData** %customdata, align 8, !dbg !6924
  %orig_handle_coord108 = getelementptr inbounds %struct.SlidePointData, %struct.SlidePointData* %121, i32 0, i32 21, !dbg !6925
  %arraydecay109 = getelementptr inbounds [2 x float], [2 x float]* %orig_handle_coord108, i64 0, i64 0, !dbg !6924
  call void @copy_v2_v2(float* %arraydecay107, float* %arraydecay109), !dbg !6926
  br label %if.end110, !dbg !6927

if.end110:                                        ; preds = %if.then105, %if.then97
  br label %if.end111, !dbg !6928

if.end111:                                        ; preds = %if.end110, %if.end93
  %122 = load i32, i32* %which_handle, align 4, !dbg !6929
  %123 = load %struct.SlidePointData*, %struct.SlidePointData** %customdata, align 8, !dbg !6930
  %which_handle112 = getelementptr inbounds %struct.SlidePointData, %struct.SlidePointData* %123, i32 0, i32 8, !dbg !6931
  store i32 %122, i32* %which_handle112, align 8, !dbg !6932
  %124 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !6933
  %125 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !6934
  %126 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !6935
  %mval113 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %126, i32 0, i32 6, !dbg !6936
  %arraydecay114 = getelementptr inbounds [2 x i32], [2 x i32]* %mval113, i64 0, i64 0, !dbg !6935
  %127 = load %struct.SlidePointData*, %struct.SlidePointData** %customdata, align 8, !dbg !6937
  %prev_mouse_coord = getelementptr inbounds %struct.SlidePointData, %struct.SlidePointData* %127, i32 0, i32 11, !dbg !6938
  %arraydecay115 = getelementptr inbounds [2 x float], [2 x float]* %prev_mouse_coord, i64 0, i64 0, !dbg !6937
  call void @ED_mask_mouse_pos(%struct.ScrArea* %124, %struct.ARegion* %125, i32* %arraydecay114, float* %arraydecay115), !dbg !6939
  br label %if.end116, !dbg !6940

if.end116:                                        ; preds = %if.end111, %if.end33
  %128 = load %struct.SlidePointData*, %struct.SlidePointData** %customdata, align 8, !dbg !6941
  %129 = bitcast %struct.SlidePointData* %128 to i8*, !dbg !6941
  ret i8* %129, !dbg !6942
}

declare dso_local %struct.wmEventHandler* @WM_event_add_modal_handler(%struct.bContext*, %struct.wmOperator*) #2

declare dso_local i32 @RNA_boolean_get(%struct.PointerRNA*, i8*) #2

declare dso_local void @ED_mask_mouse_pos(%struct.ScrArea*, %struct.ARegion*, i32*, float*) #2

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @spline_under_mouse_get(%struct.bContext* %C, %struct.Mask* %mask, float* %co, %struct.MaskLayer** %mask_layer_r, %struct.MaskSpline** %mask_spline_r) #0 !dbg !6943 {
entry:
  %retval = alloca i8, align 1
  %C.addr = alloca %struct.bContext*, align 8
  %mask.addr = alloca %struct.Mask*, align 8
  %co.addr = alloca float*, align 8
  %mask_layer_r.addr = alloca %struct.MaskLayer**, align 8
  %mask_spline_r.addr = alloca %struct.MaskSpline**, align 8
  %threshold = alloca float, align 4
  %sa = alloca %struct.ScrArea*, align 8
  %sc = alloca %struct.SpaceClip*, align 8
  %mask_layer = alloca %struct.MaskLayer*, align 8
  %width = alloca i32, align 4
  %height = alloca i32, align 4
  %pixel_co = alloca [2 x float], align 4
  %closest_dist_squared = alloca float, align 4
  %closest_layer = alloca %struct.MaskLayer*, align 8
  %closest_spline = alloca %struct.MaskSpline*, align 8
  %undistort = alloca i8, align 1
  %spline = alloca %struct.MaskSpline*, align 8
  %points_array = alloca %struct.MaskSplinePoint*, align 8
  %min = alloca [2 x float], align 4
  %max = alloca [2 x float], align 4
  %center = alloca [2 x float], align 4
  %dist_squared = alloca float, align 4
  %i = alloca i32, align 4
  %max_bb_side = alloca float, align 4
  %point_deform = alloca %struct.MaskSplinePoint*, align 8
  %bezt = alloca %struct.BezTriple*, align 8
  %vert = alloca [2 x float], align 4
  %diff_score = alloca float, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !6946, metadata !DIExpression()), !dbg !6947
  store %struct.Mask* %mask, %struct.Mask** %mask.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Mask** %mask.addr, metadata !6948, metadata !DIExpression()), !dbg !6949
  store float* %co, float** %co.addr, align 8
  call void @llvm.dbg.declare(metadata float** %co.addr, metadata !6950, metadata !DIExpression()), !dbg !6951
  store %struct.MaskLayer** %mask_layer_r, %struct.MaskLayer*** %mask_layer_r.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MaskLayer*** %mask_layer_r.addr, metadata !6952, metadata !DIExpression()), !dbg !6953
  store %struct.MaskSpline** %mask_spline_r, %struct.MaskSpline*** %mask_spline_r.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MaskSpline*** %mask_spline_r.addr, metadata !6954, metadata !DIExpression()), !dbg !6955
  call void @llvm.dbg.declare(metadata float* %threshold, metadata !6956, metadata !DIExpression()), !dbg !6957
  store float 1.900000e+01, float* %threshold, align 4, !dbg !6957
  call void @llvm.dbg.declare(metadata %struct.ScrArea** %sa, metadata !6958, metadata !DIExpression()), !dbg !6959
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6960
  %call = call %struct.ScrArea* @CTX_wm_area(%struct.bContext* %0), !dbg !6961
  store %struct.ScrArea* %call, %struct.ScrArea** %sa, align 8, !dbg !6959
  call void @llvm.dbg.declare(metadata %struct.SpaceClip** %sc, metadata !6962, metadata !DIExpression()), !dbg !6963
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6964
  %call1 = call %struct.SpaceClip* @CTX_wm_space_clip(%struct.bContext* %1), !dbg !6965
  store %struct.SpaceClip* %call1, %struct.SpaceClip** %sc, align 8, !dbg !6963
  call void @llvm.dbg.declare(metadata %struct.MaskLayer** %mask_layer, metadata !6966, metadata !DIExpression()), !dbg !6967
  call void @llvm.dbg.declare(metadata i32* %width, metadata !6968, metadata !DIExpression()), !dbg !6969
  call void @llvm.dbg.declare(metadata i32* %height, metadata !6970, metadata !DIExpression()), !dbg !6971
  call void @llvm.dbg.declare(metadata [2 x float]* %pixel_co, metadata !6972, metadata !DIExpression()), !dbg !6973
  call void @llvm.dbg.declare(metadata float* %closest_dist_squared, metadata !6974, metadata !DIExpression()), !dbg !6975
  call void @llvm.dbg.declare(metadata %struct.MaskLayer** %closest_layer, metadata !6976, metadata !DIExpression()), !dbg !6977
  store %struct.MaskLayer* null, %struct.MaskLayer** %closest_layer, align 8, !dbg !6977
  call void @llvm.dbg.declare(metadata %struct.MaskSpline** %closest_spline, metadata !6978, metadata !DIExpression()), !dbg !6979
  store %struct.MaskSpline* null, %struct.MaskSpline** %closest_spline, align 8, !dbg !6979
  call void @llvm.dbg.declare(metadata i8* %undistort, metadata !6980, metadata !DIExpression()), !dbg !6981
  store i8 0, i8* %undistort, align 1, !dbg !6981
  %2 = load %struct.MaskLayer**, %struct.MaskLayer*** %mask_layer_r.addr, align 8, !dbg !6982
  store %struct.MaskLayer* null, %struct.MaskLayer** %2, align 8, !dbg !6983
  %3 = load %struct.MaskSpline**, %struct.MaskSpline*** %mask_spline_r.addr, align 8, !dbg !6984
  store %struct.MaskSpline* null, %struct.MaskSpline** %3, align 8, !dbg !6985
  %4 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !6986
  call void @ED_mask_get_size(%struct.ScrArea* %4, i32* %width, i32* %height), !dbg !6987
  %5 = load float*, float** %co.addr, align 8, !dbg !6988
  %arrayidx = getelementptr inbounds float, float* %5, i64 0, !dbg !6988
  %6 = load float, float* %arrayidx, align 4, !dbg !6988
  %7 = load i32, i32* %width, align 4, !dbg !6989
  %conv = sitofp i32 %7 to float, !dbg !6989
  %mul = fmul float %6, %conv, !dbg !6990
  %arrayidx2 = getelementptr inbounds [2 x float], [2 x float]* %pixel_co, i64 0, i64 0, !dbg !6991
  store float %mul, float* %arrayidx2, align 4, !dbg !6992
  %8 = load float*, float** %co.addr, align 8, !dbg !6993
  %arrayidx3 = getelementptr inbounds float, float* %8, i64 1, !dbg !6993
  %9 = load float, float* %arrayidx3, align 4, !dbg !6993
  %10 = load i32, i32* %height, align 4, !dbg !6994
  %conv4 = sitofp i32 %10 to float, !dbg !6994
  %mul5 = fmul float %9, %conv4, !dbg !6995
  %arrayidx6 = getelementptr inbounds [2 x float], [2 x float]* %pixel_co, i64 0, i64 1, !dbg !6996
  store float %mul5, float* %arrayidx6, align 4, !dbg !6997
  %11 = load %struct.SpaceClip*, %struct.SpaceClip** %sc, align 8, !dbg !6998
  %cmp = icmp ne %struct.SpaceClip* %11, null, !dbg !7000
  br i1 %cmp, label %if.then, label %if.end, !dbg !7001

if.then:                                          ; preds = %entry
  %12 = load %struct.SpaceClip*, %struct.SpaceClip** %sc, align 8, !dbg !7002
  %clip = getelementptr inbounds %struct.SpaceClip, %struct.SpaceClip* %12, i32 0, i32 10, !dbg !7004
  %13 = load %struct.MovieClip*, %struct.MovieClip** %clip, align 8, !dbg !7004
  %cmp8 = icmp ne %struct.MovieClip* %13, null, !dbg !7005
  br i1 %cmp8, label %land.rhs, label %land.end, !dbg !7006

land.rhs:                                         ; preds = %if.then
  %14 = load %struct.SpaceClip*, %struct.SpaceClip** %sc, align 8, !dbg !7007
  %user = getelementptr inbounds %struct.SpaceClip, %struct.SpaceClip* %14, i32 0, i32 9, !dbg !7008
  %render_flag = getelementptr inbounds %struct.MovieClipUser, %struct.MovieClipUser* %user, i32 0, i32 2, !dbg !7009
  %15 = load i16, i16* %render_flag, align 2, !dbg !7009
  %conv10 = sext i16 %15 to i32, !dbg !7007
  %and = and i32 %conv10, 1, !dbg !7010
  %cmp11 = icmp ne i32 %and, 0, !dbg !7011
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.then
  %16 = phi i1 [ false, %if.then ], [ %cmp11, %land.rhs ], !dbg !7012
  %land.ext = zext i1 %16 to i32, !dbg !7006
  %conv13 = trunc i32 %land.ext to i8, !dbg !7013
  store i8 %conv13, i8* %undistort, align 1, !dbg !7014
  br label %if.end, !dbg !7015

if.end:                                           ; preds = %land.end, %entry
  %17 = load %struct.Mask*, %struct.Mask** %mask.addr, align 8, !dbg !7016
  %masklayers = getelementptr inbounds %struct.Mask, %struct.Mask* %17, i32 0, i32 2, !dbg !7018
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %masklayers, i32 0, i32 0, !dbg !7019
  %18 = load i8*, i8** %first, align 8, !dbg !7019
  %19 = bitcast i8* %18 to %struct.MaskLayer*, !dbg !7016
  store %struct.MaskLayer* %19, %struct.MaskLayer** %mask_layer, align 8, !dbg !7020
  br label %for.cond, !dbg !7021

for.cond:                                         ; preds = %for.inc89, %if.end
  %20 = load %struct.MaskLayer*, %struct.MaskLayer** %mask_layer, align 8, !dbg !7022
  %cmp14 = icmp ne %struct.MaskLayer* %20, null, !dbg !7024
  br i1 %cmp14, label %for.body, label %for.end91, !dbg !7025

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.MaskSpline** %spline, metadata !7026, metadata !DIExpression()), !dbg !7028
  %21 = load %struct.MaskLayer*, %struct.MaskLayer** %mask_layer, align 8, !dbg !7029
  %restrictflag = getelementptr inbounds %struct.MaskLayer, %struct.MaskLayer* %21, i32 0, i32 13, !dbg !7031
  %22 = load i8, i8* %restrictflag, align 1, !dbg !7031
  %conv16 = zext i8 %22 to i32, !dbg !7029
  %and17 = and i32 %conv16, 2, !dbg !7032
  %tobool = icmp ne i32 %and17, 0, !dbg !7032
  br i1 %tobool, label %if.then18, label %if.end19, !dbg !7033

if.then18:                                        ; preds = %for.body
  br label %for.inc89, !dbg !7034

if.end19:                                         ; preds = %for.body
  %23 = load %struct.MaskLayer*, %struct.MaskLayer** %mask_layer, align 8, !dbg !7036
  %splines = getelementptr inbounds %struct.MaskLayer, %struct.MaskLayer* %23, i32 0, i32 3, !dbg !7038
  %first20 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %splines, i32 0, i32 0, !dbg !7039
  %24 = load i8*, i8** %first20, align 8, !dbg !7039
  %25 = bitcast i8* %24 to %struct.MaskSpline*, !dbg !7036
  store %struct.MaskSpline* %25, %struct.MaskSpline** %spline, align 8, !dbg !7040
  br label %for.cond21, !dbg !7041

for.cond21:                                       ; preds = %for.inc87, %if.end19
  %26 = load %struct.MaskSpline*, %struct.MaskSpline** %spline, align 8, !dbg !7042
  %cmp22 = icmp ne %struct.MaskSpline* %26, null, !dbg !7044
  br i1 %cmp22, label %for.body24, label %for.end88, !dbg !7045

for.body24:                                       ; preds = %for.cond21
  call void @llvm.dbg.declare(metadata %struct.MaskSplinePoint** %points_array, metadata !7046, metadata !DIExpression()), !dbg !7048
  call void @llvm.dbg.declare(metadata [2 x float]* %min, metadata !7049, metadata !DIExpression()), !dbg !7050
  call void @llvm.dbg.declare(metadata [2 x float]* %max, metadata !7051, metadata !DIExpression()), !dbg !7052
  call void @llvm.dbg.declare(metadata [2 x float]* %center, metadata !7053, metadata !DIExpression()), !dbg !7054
  call void @llvm.dbg.declare(metadata float* %dist_squared, metadata !7055, metadata !DIExpression()), !dbg !7056
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7057, metadata !DIExpression()), !dbg !7058
  call void @llvm.dbg.declare(metadata float* %max_bb_side, metadata !7059, metadata !DIExpression()), !dbg !7060
  %27 = load %struct.MaskSpline*, %struct.MaskSpline** %spline, align 8, !dbg !7061
  %flag = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %27, i32 0, i32 2, !dbg !7063
  %28 = load i16, i16* %flag, align 8, !dbg !7063
  %conv25 = sext i16 %28 to i32, !dbg !7061
  %and26 = and i32 %conv25, 1, !dbg !7064
  %cmp27 = icmp eq i32 %and26, 0, !dbg !7065
  br i1 %cmp27, label %if.then29, label %if.end30, !dbg !7066

if.then29:                                        ; preds = %for.body24
  br label %for.inc87, !dbg !7067

if.end30:                                         ; preds = %for.body24
  %29 = load %struct.MaskSpline*, %struct.MaskSpline** %spline, align 8, !dbg !7069
  %call31 = call %struct.MaskSplinePoint* @BKE_mask_spline_point_array(%struct.MaskSpline* %29), !dbg !7070
  store %struct.MaskSplinePoint* %call31, %struct.MaskSplinePoint** %points_array, align 8, !dbg !7071
  %arrayidx32 = getelementptr inbounds [2 x float], [2 x float]* %min, i64 0, i64 1, !dbg !7072
  store float 0x46293E5940000000, float* %arrayidx32, align 4, !dbg !7072
  %arrayidx33 = getelementptr inbounds [2 x float], [2 x float]* %min, i64 0, i64 0, !dbg !7072
  store float 0x46293E5940000000, float* %arrayidx33, align 4, !dbg !7072
  %arrayidx34 = getelementptr inbounds [2 x float], [2 x float]* %max, i64 0, i64 1, !dbg !7072
  store float 0xC6293E5940000000, float* %arrayidx34, align 4, !dbg !7072
  %arrayidx35 = getelementptr inbounds [2 x float], [2 x float]* %max, i64 0, i64 0, !dbg !7072
  store float 0xC6293E5940000000, float* %arrayidx35, align 4, !dbg !7072
  store i32 0, i32* %i, align 4, !dbg !7074
  br label %for.cond36, !dbg !7076

for.cond36:                                       ; preds = %for.inc, %if.end30
  %30 = load i32, i32* %i, align 4, !dbg !7077
  %31 = load %struct.MaskSpline*, %struct.MaskSpline** %spline, align 8, !dbg !7079
  %tot_point = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %31, i32 0, i32 5, !dbg !7080
  %32 = load i32, i32* %tot_point, align 4, !dbg !7080
  %cmp37 = icmp slt i32 %30, %32, !dbg !7081
  br i1 %cmp37, label %for.body39, label %for.end, !dbg !7082

for.body39:                                       ; preds = %for.cond36
  call void @llvm.dbg.declare(metadata %struct.MaskSplinePoint** %point_deform, metadata !7083, metadata !DIExpression()), !dbg !7085
  %33 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %points_array, align 8, !dbg !7086
  %34 = load i32, i32* %i, align 4, !dbg !7087
  %idxprom = sext i32 %34 to i64, !dbg !7086
  %arrayidx40 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %33, i64 %idxprom, !dbg !7086
  store %struct.MaskSplinePoint* %arrayidx40, %struct.MaskSplinePoint** %point_deform, align 8, !dbg !7085
  call void @llvm.dbg.declare(metadata %struct.BezTriple** %bezt, metadata !7088, metadata !DIExpression()), !dbg !7089
  %35 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point_deform, align 8, !dbg !7090
  %bezt41 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %35, i32 0, i32 0, !dbg !7091
  store %struct.BezTriple* %bezt41, %struct.BezTriple** %bezt, align 8, !dbg !7089
  call void @llvm.dbg.declare(metadata [2 x float]* %vert, metadata !7092, metadata !DIExpression()), !dbg !7093
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %vert, i64 0, i64 0, !dbg !7094
  %36 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !7095
  %vec = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %36, i32 0, i32 0, !dbg !7096
  %arrayidx42 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec, i64 0, i64 1, !dbg !7095
  %arraydecay43 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx42, i64 0, i64 0, !dbg !7095
  call void @copy_v2_v2(float* %arraydecay, float* %arraydecay43), !dbg !7097
  %37 = load i8, i8* %undistort, align 1, !dbg !7098
  %tobool44 = icmp ne i8 %37, 0, !dbg !7098
  br i1 %tobool44, label %if.then45, label %if.end48, !dbg !7100

if.then45:                                        ; preds = %for.body39
  %38 = load %struct.SpaceClip*, %struct.SpaceClip** %sc, align 8, !dbg !7101
  %arraydecay46 = getelementptr inbounds [2 x float], [2 x float]* %vert, i64 0, i64 0, !dbg !7103
  %arraydecay47 = getelementptr inbounds [2 x float], [2 x float]* %vert, i64 0, i64 0, !dbg !7104
  call void @mask_point_undistort_pos(%struct.SpaceClip* %38, float* %arraydecay46, float* %arraydecay47), !dbg !7105
  br label %if.end48, !dbg !7106

if.end48:                                         ; preds = %if.then45, %for.body39
  %arraydecay49 = getelementptr inbounds [2 x float], [2 x float]* %min, i64 0, i64 0, !dbg !7107
  %arraydecay50 = getelementptr inbounds [2 x float], [2 x float]* %max, i64 0, i64 0, !dbg !7108
  %arraydecay51 = getelementptr inbounds [2 x float], [2 x float]* %vert, i64 0, i64 0, !dbg !7109
  call void @minmax_v2v2_v2(float* %arraydecay49, float* %arraydecay50, float* %arraydecay51), !dbg !7110
  br label %for.inc, !dbg !7111

for.inc:                                          ; preds = %if.end48
  %39 = load i32, i32* %i, align 4, !dbg !7112
  %inc = add nsw i32 %39, 1, !dbg !7112
  store i32 %inc, i32* %i, align 4, !dbg !7112
  br label %for.cond36, !dbg !7113, !llvm.loop !7114

for.end:                                          ; preds = %for.cond36
  %arrayidx52 = getelementptr inbounds [2 x float], [2 x float]* %min, i64 0, i64 0, !dbg !7116
  %40 = load float, float* %arrayidx52, align 4, !dbg !7116
  %arrayidx53 = getelementptr inbounds [2 x float], [2 x float]* %max, i64 0, i64 0, !dbg !7117
  %41 = load float, float* %arrayidx53, align 4, !dbg !7117
  %add = fadd float %40, %41, !dbg !7118
  %div = fdiv float %add, 2.000000e+00, !dbg !7119
  %42 = load i32, i32* %width, align 4, !dbg !7120
  %conv54 = sitofp i32 %42 to float, !dbg !7120
  %mul55 = fmul float %div, %conv54, !dbg !7121
  %arrayidx56 = getelementptr inbounds [2 x float], [2 x float]* %center, i64 0, i64 0, !dbg !7122
  store float %mul55, float* %arrayidx56, align 4, !dbg !7123
  %arrayidx57 = getelementptr inbounds [2 x float], [2 x float]* %min, i64 0, i64 1, !dbg !7124
  %43 = load float, float* %arrayidx57, align 4, !dbg !7124
  %arrayidx58 = getelementptr inbounds [2 x float], [2 x float]* %max, i64 0, i64 1, !dbg !7125
  %44 = load float, float* %arrayidx58, align 4, !dbg !7125
  %add59 = fadd float %43, %44, !dbg !7126
  %div60 = fdiv float %add59, 2.000000e+00, !dbg !7127
  %45 = load i32, i32* %height, align 4, !dbg !7128
  %conv61 = sitofp i32 %45 to float, !dbg !7128
  %mul62 = fmul float %div60, %conv61, !dbg !7129
  %arrayidx63 = getelementptr inbounds [2 x float], [2 x float]* %center, i64 0, i64 1, !dbg !7130
  store float %mul62, float* %arrayidx63, align 4, !dbg !7131
  %arraydecay64 = getelementptr inbounds [2 x float], [2 x float]* %pixel_co, i64 0, i64 0, !dbg !7132
  %arraydecay65 = getelementptr inbounds [2 x float], [2 x float]* %center, i64 0, i64 0, !dbg !7133
  %call66 = call float @len_squared_v2v2(float* %arraydecay64, float* %arraydecay65), !dbg !7134
  store float %call66, float* %dist_squared, align 4, !dbg !7135
  %arrayidx67 = getelementptr inbounds [2 x float], [2 x float]* %max, i64 0, i64 0, !dbg !7136
  %46 = load float, float* %arrayidx67, align 4, !dbg !7136
  %arrayidx68 = getelementptr inbounds [2 x float], [2 x float]* %min, i64 0, i64 0, !dbg !7137
  %47 = load float, float* %arrayidx68, align 4, !dbg !7137
  %sub = fsub float %46, %47, !dbg !7138
  %48 = load i32, i32* %width, align 4, !dbg !7139
  %conv69 = sitofp i32 %48 to float, !dbg !7139
  %mul70 = fmul float %sub, %conv69, !dbg !7140
  %arrayidx71 = getelementptr inbounds [2 x float], [2 x float]* %max, i64 0, i64 1, !dbg !7141
  %49 = load float, float* %arrayidx71, align 4, !dbg !7141
  %arrayidx72 = getelementptr inbounds [2 x float], [2 x float]* %min, i64 0, i64 1, !dbg !7142
  %50 = load float, float* %arrayidx72, align 4, !dbg !7142
  %sub73 = fsub float %49, %50, !dbg !7143
  %51 = load i32, i32* %height, align 4, !dbg !7144
  %conv74 = sitofp i32 %51 to float, !dbg !7144
  %mul75 = fmul float %sub73, %conv74, !dbg !7145
  %call76 = call float @min_ff(float %mul70, float %mul75), !dbg !7146
  store float %call76, float* %max_bb_side, align 4, !dbg !7147
  %52 = load float, float* %dist_squared, align 4, !dbg !7148
  %53 = load float, float* %max_bb_side, align 4, !dbg !7150
  %54 = load float, float* %max_bb_side, align 4, !dbg !7151
  %mul77 = fmul float %53, %54, !dbg !7152
  %mul78 = fmul float %mul77, 5.000000e-01, !dbg !7153
  %cmp79 = fcmp ole float %52, %mul78, !dbg !7154
  br i1 %cmp79, label %land.lhs.true, label %if.end86, !dbg !7155

land.lhs.true:                                    ; preds = %for.end
  %55 = load %struct.MaskSpline*, %struct.MaskSpline** %closest_spline, align 8, !dbg !7156
  %cmp81 = icmp eq %struct.MaskSpline* %55, null, !dbg !7157
  br i1 %cmp81, label %if.then85, label %lor.lhs.false, !dbg !7158

lor.lhs.false:                                    ; preds = %land.lhs.true
  %56 = load float, float* %dist_squared, align 4, !dbg !7159
  %57 = load float, float* %closest_dist_squared, align 4, !dbg !7160
  %cmp83 = fcmp olt float %56, %57, !dbg !7161
  br i1 %cmp83, label %if.then85, label %if.end86, !dbg !7162

if.then85:                                        ; preds = %lor.lhs.false, %land.lhs.true
  %58 = load %struct.MaskLayer*, %struct.MaskLayer** %mask_layer, align 8, !dbg !7163
  store %struct.MaskLayer* %58, %struct.MaskLayer** %closest_layer, align 8, !dbg !7165
  %59 = load %struct.MaskSpline*, %struct.MaskSpline** %spline, align 8, !dbg !7166
  store %struct.MaskSpline* %59, %struct.MaskSpline** %closest_spline, align 8, !dbg !7167
  %60 = load float, float* %dist_squared, align 4, !dbg !7168
  store float %60, float* %closest_dist_squared, align 4, !dbg !7169
  br label %if.end86, !dbg !7170

if.end86:                                         ; preds = %if.then85, %lor.lhs.false, %for.end
  br label %for.inc87, !dbg !7171

for.inc87:                                        ; preds = %if.end86, %if.then29
  %61 = load %struct.MaskSpline*, %struct.MaskSpline** %spline, align 8, !dbg !7172
  %next = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %61, i32 0, i32 0, !dbg !7173
  %62 = load %struct.MaskSpline*, %struct.MaskSpline** %next, align 8, !dbg !7173
  store %struct.MaskSpline* %62, %struct.MaskSpline** %spline, align 8, !dbg !7174
  br label %for.cond21, !dbg !7175, !llvm.loop !7176

for.end88:                                        ; preds = %for.cond21
  br label %for.inc89, !dbg !7178

for.inc89:                                        ; preds = %for.end88, %if.then18
  %63 = load %struct.MaskLayer*, %struct.MaskLayer** %mask_layer, align 8, !dbg !7179
  %next90 = getelementptr inbounds %struct.MaskLayer, %struct.MaskLayer* %63, i32 0, i32 0, !dbg !7180
  %64 = load %struct.MaskLayer*, %struct.MaskLayer** %next90, align 8, !dbg !7180
  store %struct.MaskLayer* %64, %struct.MaskLayer** %mask_layer, align 8, !dbg !7181
  br label %for.cond, !dbg !7182, !llvm.loop !7183

for.end91:                                        ; preds = %for.cond
  %65 = load float, float* %closest_dist_squared, align 4, !dbg !7185
  %cmp92 = fcmp olt float %65, 3.610000e+02, !dbg !7187
  br i1 %cmp92, label %land.lhs.true94, label %if.end107, !dbg !7188

land.lhs.true94:                                  ; preds = %for.end91
  %66 = load %struct.MaskSpline*, %struct.MaskSpline** %closest_spline, align 8, !dbg !7189
  %cmp95 = icmp ne %struct.MaskSpline* %66, null, !dbg !7190
  br i1 %cmp95, label %if.then97, label %if.end107, !dbg !7191

if.then97:                                        ; preds = %land.lhs.true94
  call void @llvm.dbg.declare(metadata float* %diff_score, metadata !7192, metadata !DIExpression()), !dbg !7194
  %67 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7195
  %68 = load %struct.Mask*, %struct.Mask** %mask.addr, align 8, !dbg !7197
  %69 = load float*, float** %co.addr, align 8, !dbg !7198
  %call98 = call zeroext i8 @ED_mask_find_nearest_diff_point(%struct.bContext* %67, %struct.Mask* %68, float* %69, i32 19, i8 zeroext 0, float* null, i8 zeroext 1, i8 zeroext 0, %struct.MaskLayer** null, %struct.MaskSpline** null, %struct.MaskSplinePoint** null, float* null, float* %diff_score), !dbg !7199
  %tobool99 = icmp ne i8 %call98, 0, !dbg !7199
  br i1 %tobool99, label %if.then100, label %if.end106, !dbg !7200

if.then100:                                       ; preds = %if.then97
  %70 = load float, float* %diff_score, align 4, !dbg !7201
  %71 = load float, float* %diff_score, align 4, !dbg !7201
  %mul101 = fmul float %70, %71, !dbg !7201
  %72 = load float, float* %closest_dist_squared, align 4, !dbg !7204
  %cmp102 = fcmp olt float %mul101, %72, !dbg !7205
  br i1 %cmp102, label %if.then104, label %if.end105, !dbg !7206

if.then104:                                       ; preds = %if.then100
  store i8 0, i8* %retval, align 1, !dbg !7207
  br label %return, !dbg !7207

if.end105:                                        ; preds = %if.then100
  br label %if.end106, !dbg !7209

if.end106:                                        ; preds = %if.end105, %if.then97
  %73 = load %struct.MaskLayer*, %struct.MaskLayer** %closest_layer, align 8, !dbg !7210
  %74 = load %struct.MaskLayer**, %struct.MaskLayer*** %mask_layer_r.addr, align 8, !dbg !7211
  store %struct.MaskLayer* %73, %struct.MaskLayer** %74, align 8, !dbg !7212
  %75 = load %struct.MaskSpline*, %struct.MaskSpline** %closest_spline, align 8, !dbg !7213
  %76 = load %struct.MaskSpline**, %struct.MaskSpline*** %mask_spline_r.addr, align 8, !dbg !7214
  store %struct.MaskSpline* %75, %struct.MaskSpline** %76, align 8, !dbg !7215
  store i8 1, i8* %retval, align 1, !dbg !7216
  br label %return, !dbg !7216

if.end107:                                        ; preds = %land.lhs.true94, %for.end91
  store i8 0, i8* %retval, align 1, !dbg !7217
  br label %return, !dbg !7217

return:                                           ; preds = %if.end107, %if.end106, %if.then104
  %77 = load i8, i8* %retval, align 1, !dbg !7218
  ret i8 %77, !dbg !7218
}

; Function Attrs: noinline nounwind uwtable
define internal void @select_sliding_point(%struct.Mask* %mask, %struct.MaskLayer* %mask_layer, %struct.MaskSpline* %spline, %struct.MaskSplinePoint* %point, i32 %which_handle) #0 !dbg !7219 {
entry:
  %mask.addr = alloca %struct.Mask*, align 8
  %mask_layer.addr = alloca %struct.MaskLayer*, align 8
  %spline.addr = alloca %struct.MaskSpline*, align 8
  %point.addr = alloca %struct.MaskSplinePoint*, align 8
  %which_handle.addr = alloca i32, align 4
  store %struct.Mask* %mask, %struct.Mask** %mask.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Mask** %mask.addr, metadata !7222, metadata !DIExpression()), !dbg !7223
  store %struct.MaskLayer* %mask_layer, %struct.MaskLayer** %mask_layer.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MaskLayer** %mask_layer.addr, metadata !7224, metadata !DIExpression()), !dbg !7225
  store %struct.MaskSpline* %spline, %struct.MaskSpline** %spline.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MaskSpline** %spline.addr, metadata !7226, metadata !DIExpression()), !dbg !7227
  store %struct.MaskSplinePoint* %point, %struct.MaskSplinePoint** %point.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MaskSplinePoint** %point.addr, metadata !7228, metadata !DIExpression()), !dbg !7229
  store i32 %which_handle, i32* %which_handle.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %which_handle.addr, metadata !7230, metadata !DIExpression()), !dbg !7231
  %0 = load %struct.Mask*, %struct.Mask** %mask.addr, align 8, !dbg !7232
  call void @ED_mask_select_toggle_all(%struct.Mask* %0, i32 2), !dbg !7233
  %1 = load i32, i32* %which_handle.addr, align 4, !dbg !7234
  switch i32 %1, label %sw.default [
    i32 0, label %sw.bb
    i32 2, label %sw.bb1
    i32 3, label %sw.bb3
    i32 1, label %sw.bb8
  ], !dbg !7235

sw.bb:                                            ; preds = %entry
  %2 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point.addr, align 8, !dbg !7236
  call void @BKE_mask_point_select_set(%struct.MaskSplinePoint* %2, i8 zeroext 1), !dbg !7238
  br label %sw.epilog, !dbg !7239

sw.bb1:                                           ; preds = %entry
  %3 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point.addr, align 8, !dbg !7240
  %bezt = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %3, i32 0, i32 0, !dbg !7241
  %f1 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %bezt, i32 0, i32 7, !dbg !7242
  %4 = load i8, i8* %f1, align 1, !dbg !7243
  %conv = zext i8 %4 to i32, !dbg !7243
  %or = or i32 %conv, 1, !dbg !7243
  %conv2 = trunc i32 %or to i8, !dbg !7243
  store i8 %conv2, i8* %f1, align 1, !dbg !7243
  br label %sw.epilog, !dbg !7244

sw.bb3:                                           ; preds = %entry
  %5 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point.addr, align 8, !dbg !7245
  %bezt4 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %5, i32 0, i32 0, !dbg !7246
  %f3 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %bezt4, i32 0, i32 9, !dbg !7247
  %6 = load i8, i8* %f3, align 1, !dbg !7248
  %conv5 = zext i8 %6 to i32, !dbg !7248
  %or6 = or i32 %conv5, 1, !dbg !7248
  %conv7 = trunc i32 %or6 to i8, !dbg !7248
  store i8 %conv7, i8* %f3, align 1, !dbg !7248
  br label %sw.epilog, !dbg !7249

sw.bb8:                                           ; preds = %entry
  %7 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point.addr, align 8, !dbg !7250
  %bezt9 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %7, i32 0, i32 0, !dbg !7251
  %f110 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %bezt9, i32 0, i32 7, !dbg !7252
  %8 = load i8, i8* %f110, align 1, !dbg !7253
  %conv11 = zext i8 %8 to i32, !dbg !7253
  %or12 = or i32 %conv11, 1, !dbg !7253
  %conv13 = trunc i32 %or12 to i8, !dbg !7253
  store i8 %conv13, i8* %f110, align 1, !dbg !7253
  %9 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point.addr, align 8, !dbg !7254
  %bezt14 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %9, i32 0, i32 0, !dbg !7255
  %f315 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %bezt14, i32 0, i32 9, !dbg !7256
  %10 = load i8, i8* %f315, align 1, !dbg !7257
  %conv16 = zext i8 %10 to i32, !dbg !7257
  %or17 = or i32 %conv16, 1, !dbg !7257
  %conv18 = trunc i32 %or17 to i8, !dbg !7257
  store i8 %conv18, i8* %f315, align 1, !dbg !7257
  br label %sw.epilog, !dbg !7258

sw.default:                                       ; preds = %entry
  br label %sw.epilog, !dbg !7259

sw.epilog:                                        ; preds = %sw.default, %sw.bb8, %sw.bb3, %sw.bb1, %sw.bb
  %11 = load %struct.MaskSpline*, %struct.MaskSpline** %spline.addr, align 8, !dbg !7260
  %12 = load %struct.MaskLayer*, %struct.MaskLayer** %mask_layer.addr, align 8, !dbg !7261
  %act_spline = getelementptr inbounds %struct.MaskLayer, %struct.MaskLayer* %12, i32 0, i32 5, !dbg !7262
  store %struct.MaskSpline* %11, %struct.MaskSpline** %act_spline, align 8, !dbg !7263
  %13 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point.addr, align 8, !dbg !7264
  %14 = load %struct.MaskLayer*, %struct.MaskLayer** %mask_layer.addr, align 8, !dbg !7265
  %act_point = getelementptr inbounds %struct.MaskLayer, %struct.MaskLayer* %14, i32 0, i32 6, !dbg !7266
  store %struct.MaskSplinePoint* %13, %struct.MaskSplinePoint** %act_point, align 8, !dbg !7267
  %15 = load %struct.Mask*, %struct.Mask** %mask.addr, align 8, !dbg !7268
  call void @ED_mask_select_flush_all(%struct.Mask* %15), !dbg !7269
  ret void, !dbg !7270
}

; Function Attrs: noinline nounwind uwtable
define internal void @check_sliding_handle_type(%struct.MaskSplinePoint* %point, i32 %which_handle) #0 !dbg !7271 {
entry:
  %point.addr = alloca %struct.MaskSplinePoint*, align 8
  %which_handle.addr = alloca i32, align 4
  %bezt = alloca %struct.BezTriple*, align 8
  store %struct.MaskSplinePoint* %point, %struct.MaskSplinePoint** %point.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MaskSplinePoint** %point.addr, metadata !7274, metadata !DIExpression()), !dbg !7275
  store i32 %which_handle, i32* %which_handle.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %which_handle.addr, metadata !7276, metadata !DIExpression()), !dbg !7277
  call void @llvm.dbg.declare(metadata %struct.BezTriple** %bezt, metadata !7278, metadata !DIExpression()), !dbg !7279
  %0 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point.addr, align 8, !dbg !7280
  %bezt1 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %0, i32 0, i32 0, !dbg !7281
  store %struct.BezTriple* %bezt1, %struct.BezTriple** %bezt, align 8, !dbg !7279
  %1 = load i32, i32* %which_handle.addr, align 4, !dbg !7282
  %cmp = icmp eq i32 %1, 2, !dbg !7284
  br i1 %cmp, label %if.then, label %if.else13, !dbg !7285

if.then:                                          ; preds = %entry
  %2 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !7286
  %h1 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %2, i32 0, i32 5, !dbg !7289
  %3 = load i8, i8* %h1, align 1, !dbg !7289
  %conv = zext i8 %3 to i32, !dbg !7286
  %cmp2 = icmp eq i32 %conv, 2, !dbg !7290
  br i1 %cmp2, label %if.then4, label %if.else, !dbg !7291

if.then4:                                         ; preds = %if.then
  %4 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !7292
  %h15 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %4, i32 0, i32 5, !dbg !7294
  store i8 0, i8* %h15, align 1, !dbg !7295
  br label %if.end12, !dbg !7296

if.else:                                          ; preds = %if.then
  %5 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !7297
  %h16 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %5, i32 0, i32 5, !dbg !7299
  %6 = load i8, i8* %h16, align 1, !dbg !7299
  %conv7 = zext i8 %6 to i32, !dbg !7297
  %cmp8 = icmp eq i32 %conv7, 1, !dbg !7300
  br i1 %cmp8, label %if.then10, label %if.end, !dbg !7301

if.then10:                                        ; preds = %if.else
  %7 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !7302
  %h111 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %7, i32 0, i32 5, !dbg !7304
  store i8 5, i8* %h111, align 1, !dbg !7305
  %8 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !7306
  %h2 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %8, i32 0, i32 6, !dbg !7307
  store i8 5, i8* %h2, align 2, !dbg !7308
  br label %if.end, !dbg !7309

if.end:                                           ; preds = %if.then10, %if.else
  br label %if.end12

if.end12:                                         ; preds = %if.end, %if.then4
  br label %if.end34, !dbg !7310

if.else13:                                        ; preds = %entry
  %9 = load i32, i32* %which_handle.addr, align 4, !dbg !7311
  %cmp14 = icmp eq i32 %9, 3, !dbg !7313
  br i1 %cmp14, label %if.then16, label %if.end33, !dbg !7314

if.then16:                                        ; preds = %if.else13
  %10 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !7315
  %h217 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %10, i32 0, i32 6, !dbg !7318
  %11 = load i8, i8* %h217, align 2, !dbg !7318
  %conv18 = zext i8 %11 to i32, !dbg !7315
  %cmp19 = icmp eq i32 %conv18, 2, !dbg !7319
  br i1 %cmp19, label %if.then21, label %if.else23, !dbg !7320

if.then21:                                        ; preds = %if.then16
  %12 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !7321
  %h222 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %12, i32 0, i32 6, !dbg !7323
  store i8 0, i8* %h222, align 2, !dbg !7324
  br label %if.end32, !dbg !7325

if.else23:                                        ; preds = %if.then16
  %13 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !7326
  %h224 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %13, i32 0, i32 6, !dbg !7328
  %14 = load i8, i8* %h224, align 2, !dbg !7328
  %conv25 = zext i8 %14 to i32, !dbg !7326
  %cmp26 = icmp eq i32 %conv25, 1, !dbg !7329
  br i1 %cmp26, label %if.then28, label %if.end31, !dbg !7330

if.then28:                                        ; preds = %if.else23
  %15 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !7331
  %h129 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %15, i32 0, i32 5, !dbg !7333
  store i8 5, i8* %h129, align 1, !dbg !7334
  %16 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !7335
  %h230 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %16, i32 0, i32 6, !dbg !7336
  store i8 5, i8* %h230, align 2, !dbg !7337
  br label %if.end31, !dbg !7338

if.end31:                                         ; preds = %if.then28, %if.else23
  br label %if.end32

if.end32:                                         ; preds = %if.end31, %if.then21
  br label %if.end33, !dbg !7339

if.end33:                                         ; preds = %if.end32, %if.else13
  br label %if.end34

if.end34:                                         ; preds = %if.end33, %if.end12
  ret void, !dbg !7340
}

declare dso_local float @BKE_mask_point_weight_scalar(%struct.MaskSpline*, %struct.MaskSplinePoint*, float) #2

declare dso_local void @BKE_mask_point_segment_co(%struct.MaskSpline*, %struct.MaskSplinePoint*, float, float*) #2

declare dso_local void @BKE_mask_point_normal(%struct.MaskSpline*, %struct.MaskSplinePoint*, float, float*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @madd_v2_v2v2fl(float* %r, float* %a, float* %b, float %f) #0 !dbg !7341 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  %f.addr = alloca float, align 4
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !7344, metadata !DIExpression()), !dbg !7345
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !7346, metadata !DIExpression()), !dbg !7347
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !7348, metadata !DIExpression()), !dbg !7349
  store float %f, float* %f.addr, align 4
  call void @llvm.dbg.declare(metadata float* %f.addr, metadata !7350, metadata !DIExpression()), !dbg !7351
  %0 = load float*, float** %a.addr, align 8, !dbg !7352
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !7352
  %1 = load float, float* %arrayidx, align 4, !dbg !7352
  %2 = load float*, float** %b.addr, align 8, !dbg !7353
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !7353
  %3 = load float, float* %arrayidx1, align 4, !dbg !7353
  %4 = load float, float* %f.addr, align 4, !dbg !7354
  %mul = fmul float %3, %4, !dbg !7355
  %add = fadd float %1, %mul, !dbg !7356
  %5 = load float*, float** %r.addr, align 8, !dbg !7357
  %arrayidx2 = getelementptr inbounds float, float* %5, i64 0, !dbg !7357
  store float %add, float* %arrayidx2, align 4, !dbg !7358
  %6 = load float*, float** %a.addr, align 8, !dbg !7359
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !7359
  %7 = load float, float* %arrayidx3, align 4, !dbg !7359
  %8 = load float*, float** %b.addr, align 8, !dbg !7360
  %arrayidx4 = getelementptr inbounds float, float* %8, i64 1, !dbg !7360
  %9 = load float, float* %arrayidx4, align 4, !dbg !7360
  %10 = load float, float* %f.addr, align 4, !dbg !7361
  %mul5 = fmul float %9, %10, !dbg !7362
  %add6 = fadd float %7, %mul5, !dbg !7363
  %11 = load float*, float** %r.addr, align 8, !dbg !7364
  %arrayidx7 = getelementptr inbounds float, float* %11, i64 1, !dbg !7364
  store float %add6, float* %arrayidx7, align 4, !dbg !7365
  ret void, !dbg !7366
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @slide_point_check_initial_feather(%struct.MaskSpline* %spline) #0 !dbg !7367 {
entry:
  %retval = alloca i8, align 1
  %spline.addr = alloca %struct.MaskSpline*, align 8
  %i = alloca i32, align 4
  %point = alloca %struct.MaskSplinePoint*, align 8
  store %struct.MaskSpline* %spline, %struct.MaskSpline** %spline.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MaskSpline** %spline.addr, metadata !7370, metadata !DIExpression()), !dbg !7371
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7372, metadata !DIExpression()), !dbg !7373
  store i32 0, i32* %i, align 4, !dbg !7374
  br label %for.cond, !dbg !7376

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !7377
  %1 = load %struct.MaskSpline*, %struct.MaskSpline** %spline.addr, align 8, !dbg !7379
  %tot_point = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %1, i32 0, i32 5, !dbg !7380
  %2 = load i32, i32* %tot_point, align 4, !dbg !7380
  %cmp = icmp slt i32 %0, %2, !dbg !7381
  br i1 %cmp, label %for.body, label %for.end, !dbg !7382

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.MaskSplinePoint** %point, metadata !7383, metadata !DIExpression()), !dbg !7385
  %3 = load %struct.MaskSpline*, %struct.MaskSpline** %spline.addr, align 8, !dbg !7386
  %points = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %3, i32 0, i32 6, !dbg !7387
  %4 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %points, align 8, !dbg !7387
  %5 = load i32, i32* %i, align 4, !dbg !7388
  %idxprom = sext i32 %5 to i64, !dbg !7386
  %arrayidx = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %4, i64 %idxprom, !dbg !7386
  store %struct.MaskSplinePoint* %arrayidx, %struct.MaskSplinePoint** %point, align 8, !dbg !7385
  %6 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point, align 8, !dbg !7389
  %bezt = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %6, i32 0, i32 0, !dbg !7391
  %weight = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %bezt, i32 0, i32 2, !dbg !7392
  %7 = load float, float* %weight, align 8, !dbg !7392
  %cmp1 = fcmp une float %7, 0.000000e+00, !dbg !7393
  br i1 %cmp1, label %if.then, label %if.end, !dbg !7394

if.then:                                          ; preds = %for.body
  store i8 0, i8* %retval, align 1, !dbg !7395
  br label %return, !dbg !7395

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !7397

for.inc:                                          ; preds = %if.end
  %8 = load i32, i32* %i, align 4, !dbg !7398
  %inc = add nsw i32 %8, 1, !dbg !7398
  store i32 %inc, i32* %i, align 4, !dbg !7398
  br label %for.cond, !dbg !7399, !llvm.loop !7400

for.end:                                          ; preds = %for.cond
  store i8 1, i8* %retval, align 1, !dbg !7402
  br label %return, !dbg !7402

return:                                           ; preds = %for.end, %if.then
  %9 = load i8, i8* %retval, align 1, !dbg !7403
  ret i8 %9, !dbg !7403
}

declare dso_local void @copy_m3_m3([3 x float]*, [3 x float]*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @copy_v2_v2(float* %r, float* %a) #0 !dbg !7404 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !7407, metadata !DIExpression()), !dbg !7408
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !7409, metadata !DIExpression()), !dbg !7410
  %0 = load float*, float** %a.addr, align 8, !dbg !7411
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !7411
  %1 = load float, float* %arrayidx, align 4, !dbg !7411
  %2 = load float*, float** %r.addr, align 8, !dbg !7412
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !7412
  store float %1, float* %arrayidx1, align 4, !dbg !7413
  %3 = load float*, float** %a.addr, align 8, !dbg !7414
  %arrayidx2 = getelementptr inbounds float, float* %3, i64 1, !dbg !7414
  %4 = load float, float* %arrayidx2, align 4, !dbg !7414
  %5 = load float*, float** %r.addr, align 8, !dbg !7415
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 1, !dbg !7415
  store float %4, float* %arrayidx3, align 4, !dbg !7416
  ret void, !dbg !7417
}

declare dso_local %struct.SpaceClip* @CTX_wm_space_clip(%struct.bContext*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @mask_point_undistort_pos(%struct.SpaceClip* %sc, float* %r_co, float* %co) #0 !dbg !7418 {
entry:
  %sc.addr = alloca %struct.SpaceClip*, align 8
  %r_co.addr = alloca float*, align 8
  %co.addr = alloca float*, align 8
  store %struct.SpaceClip* %sc, %struct.SpaceClip** %sc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SpaceClip** %sc.addr, metadata !7421, metadata !DIExpression()), !dbg !7422
  store float* %r_co, float** %r_co.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r_co.addr, metadata !7423, metadata !DIExpression()), !dbg !7424
  store float* %co, float** %co.addr, align 8
  call void @llvm.dbg.declare(metadata float** %co.addr, metadata !7425, metadata !DIExpression()), !dbg !7426
  %0 = load %struct.SpaceClip*, %struct.SpaceClip** %sc.addr, align 8, !dbg !7427
  %clip = getelementptr inbounds %struct.SpaceClip, %struct.SpaceClip* %0, i32 0, i32 10, !dbg !7428
  %1 = load %struct.MovieClip*, %struct.MovieClip** %clip, align 8, !dbg !7428
  %2 = load %struct.SpaceClip*, %struct.SpaceClip** %sc.addr, align 8, !dbg !7429
  %user = getelementptr inbounds %struct.SpaceClip, %struct.SpaceClip* %2, i32 0, i32 9, !dbg !7430
  %3 = load float*, float** %r_co.addr, align 8, !dbg !7431
  %4 = load float*, float** %co.addr, align 8, !dbg !7432
  call void @BKE_mask_coord_to_movieclip(%struct.MovieClip* %1, %struct.MovieClipUser* %user, float* %3, float* %4), !dbg !7433
  %5 = load %struct.SpaceClip*, %struct.SpaceClip** %sc.addr, align 8, !dbg !7434
  %6 = load float*, float** %r_co.addr, align 8, !dbg !7435
  %7 = load float*, float** %r_co.addr, align 8, !dbg !7436
  call void @ED_clip_point_undistorted_pos(%struct.SpaceClip* %5, float* %6, float* %7), !dbg !7437
  %8 = load %struct.SpaceClip*, %struct.SpaceClip** %sc.addr, align 8, !dbg !7438
  %clip1 = getelementptr inbounds %struct.SpaceClip, %struct.SpaceClip* %8, i32 0, i32 10, !dbg !7439
  %9 = load %struct.MovieClip*, %struct.MovieClip** %clip1, align 8, !dbg !7439
  %10 = load %struct.SpaceClip*, %struct.SpaceClip** %sc.addr, align 8, !dbg !7440
  %user2 = getelementptr inbounds %struct.SpaceClip, %struct.SpaceClip* %10, i32 0, i32 9, !dbg !7441
  %11 = load float*, float** %r_co.addr, align 8, !dbg !7442
  %12 = load float*, float** %r_co.addr, align 8, !dbg !7443
  call void @BKE_mask_coord_from_movieclip(%struct.MovieClip* %9, %struct.MovieClipUser* %user2, float* %11, float* %12), !dbg !7444
  ret void, !dbg !7445
}

declare dso_local void @minmax_v2v2_v2(float*, float*, float*) #2

; Function Attrs: noinline nounwind uwtable
define internal float @min_ff(float %a, float %b) #0 !dbg !7446 {
entry:
  %a.addr = alloca float, align 4
  %b.addr = alloca float, align 4
  store float %a, float* %a.addr, align 4
  call void @llvm.dbg.declare(metadata float* %a.addr, metadata !7450, metadata !DIExpression()), !dbg !7451
  store float %b, float* %b.addr, align 4
  call void @llvm.dbg.declare(metadata float* %b.addr, metadata !7452, metadata !DIExpression()), !dbg !7453
  %0 = load float, float* %a.addr, align 4, !dbg !7454
  %1 = load float, float* %b.addr, align 4, !dbg !7455
  %cmp = fcmp olt float %0, %1, !dbg !7456
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !7457

cond.true:                                        ; preds = %entry
  %2 = load float, float* %a.addr, align 4, !dbg !7458
  br label %cond.end, !dbg !7457

cond.false:                                       ; preds = %entry
  %3 = load float, float* %b.addr, align 4, !dbg !7459
  br label %cond.end, !dbg !7457

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %2, %cond.true ], [ %3, %cond.false ], !dbg !7457
  ret float %cond, !dbg !7460
}

declare dso_local zeroext i8 @ED_mask_find_nearest_diff_point(%struct.bContext*, %struct.Mask*, float*, i32, i8 zeroext, float*, i8 zeroext, i8 zeroext, %struct.MaskLayer**, %struct.MaskSpline**, %struct.MaskSplinePoint**, float*, float*) #2

declare dso_local void @BKE_mask_coord_to_movieclip(%struct.MovieClip*, %struct.MovieClipUser*, float*, float*) #2

declare dso_local void @ED_clip_point_undistorted_pos(%struct.SpaceClip*, float*, float*) #2

declare dso_local void @BKE_mask_coord_from_movieclip(%struct.MovieClip*, %struct.MovieClipUser*, float*, float*) #2

declare dso_local void @ED_mask_select_toggle_all(%struct.Mask*, i32) #2

declare dso_local void @BKE_mask_point_select_set(%struct.MaskSplinePoint*, i8 zeroext) #2

declare dso_local void @ED_mask_select_flush_all(%struct.Mask*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @mul_v2_fl(float* %r, float %f) #0 !dbg !7461 {
entry:
  %r.addr = alloca float*, align 8
  %f.addr = alloca float, align 4
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !7464, metadata !DIExpression()), !dbg !7465
  store float %f, float* %f.addr, align 4
  call void @llvm.dbg.declare(metadata float* %f.addr, metadata !7466, metadata !DIExpression()), !dbg !7467
  %0 = load float, float* %f.addr, align 4, !dbg !7468
  %1 = load float*, float** %r.addr, align 8, !dbg !7469
  %arrayidx = getelementptr inbounds float, float* %1, i64 0, !dbg !7469
  %2 = load float, float* %arrayidx, align 4, !dbg !7470
  %mul = fmul float %2, %0, !dbg !7470
  store float %mul, float* %arrayidx, align 4, !dbg !7470
  %3 = load float, float* %f.addr, align 4, !dbg !7471
  %4 = load float*, float** %r.addr, align 8, !dbg !7472
  %arrayidx1 = getelementptr inbounds float, float* %4, i64 1, !dbg !7472
  %5 = load float, float* %arrayidx1, align 4, !dbg !7473
  %mul2 = fmul float %5, %3, !dbg !7473
  store float %mul2, float* %arrayidx1, align 4, !dbg !7473
  ret void, !dbg !7474
}

; Function Attrs: noinline nounwind uwtable
define internal void @negate_v2(float* %r) #0 !dbg !7475 {
entry:
  %r.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !7478, metadata !DIExpression()), !dbg !7479
  %0 = load float*, float** %r.addr, align 8, !dbg !7480
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !7480
  %1 = load float, float* %arrayidx, align 4, !dbg !7480
  %fneg = fneg float %1, !dbg !7481
  %2 = load float*, float** %r.addr, align 8, !dbg !7482
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !7482
  store float %fneg, float* %arrayidx1, align 4, !dbg !7483
  %3 = load float*, float** %r.addr, align 8, !dbg !7484
  %arrayidx2 = getelementptr inbounds float, float* %3, i64 1, !dbg !7484
  %4 = load float, float* %arrayidx2, align 4, !dbg !7484
  %fneg3 = fneg float %4, !dbg !7485
  %5 = load float*, float** %r.addr, align 8, !dbg !7486
  %arrayidx4 = getelementptr inbounds float, float* %5, i64 1, !dbg !7486
  store float %fneg3, float* %arrayidx4, align 4, !dbg !7487
  ret void, !dbg !7488
}

; Function Attrs: noinline nounwind uwtable
define internal void @add_v2_v2v2(float* %r, float* %a, float* %b) #0 !dbg !7489 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !7490, metadata !DIExpression()), !dbg !7491
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !7492, metadata !DIExpression()), !dbg !7493
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !7494, metadata !DIExpression()), !dbg !7495
  %0 = load float*, float** %a.addr, align 8, !dbg !7496
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !7496
  %1 = load float, float* %arrayidx, align 4, !dbg !7496
  %2 = load float*, float** %b.addr, align 8, !dbg !7497
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !7497
  %3 = load float, float* %arrayidx1, align 4, !dbg !7497
  %add = fadd float %1, %3, !dbg !7498
  %4 = load float*, float** %r.addr, align 8, !dbg !7499
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 0, !dbg !7499
  store float %add, float* %arrayidx2, align 4, !dbg !7500
  %5 = load float*, float** %a.addr, align 8, !dbg !7501
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 1, !dbg !7501
  %6 = load float, float* %arrayidx3, align 4, !dbg !7501
  %7 = load float*, float** %b.addr, align 8, !dbg !7502
  %arrayidx4 = getelementptr inbounds float, float* %7, i64 1, !dbg !7502
  %8 = load float, float* %arrayidx4, align 4, !dbg !7502
  %add5 = fadd float %6, %8, !dbg !7503
  %9 = load float*, float** %r.addr, align 8, !dbg !7504
  %arrayidx6 = getelementptr inbounds float, float* %9, i64 1, !dbg !7504
  store float %add5, float* %arrayidx6, align 4, !dbg !7505
  ret void, !dbg !7506
}

declare dso_local void @BKE_mask_point_set_handle(%struct.MaskSplinePoint*, i32, float*, i8 zeroext, float*, [3 x float]*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @add_v2_v2(float* %r, float* %a) #0 !dbg !7507 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !7508, metadata !DIExpression()), !dbg !7509
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !7510, metadata !DIExpression()), !dbg !7511
  %0 = load float*, float** %a.addr, align 8, !dbg !7512
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !7512
  %1 = load float, float* %arrayidx, align 4, !dbg !7512
  %2 = load float*, float** %r.addr, align 8, !dbg !7513
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !7513
  %3 = load float, float* %arrayidx1, align 4, !dbg !7514
  %add = fadd float %3, %1, !dbg !7514
  store float %add, float* %arrayidx1, align 4, !dbg !7514
  %4 = load float*, float** %a.addr, align 8, !dbg !7515
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !7515
  %5 = load float, float* %arrayidx2, align 4, !dbg !7515
  %6 = load float*, float** %r.addr, align 8, !dbg !7516
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !7516
  %7 = load float, float* %arrayidx3, align 4, !dbg !7517
  %add4 = fadd float %7, %5, !dbg !7517
  store float %add4, float* %arrayidx3, align 4, !dbg !7517
  ret void, !dbg !7518
}

declare dso_local float @BKE_mask_spline_project_co(%struct.MaskSpline*, %struct.MaskSplinePoint*, float, float*, i32) #2

declare dso_local %struct.MaskSplinePointUW* @BKE_mask_point_sort_uw(%struct.MaskSplinePoint*, %struct.MaskSplinePointUW*) #2

declare dso_local void @project_v2_v2v2(float*, float*, float*) #2

; Function Attrs: noinline nounwind uwtable
define internal float @len_v2(float* %v) #0 !dbg !7519 {
entry:
  %v.addr = alloca float*, align 8
  store float* %v, float** %v.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v.addr, metadata !7522, metadata !DIExpression()), !dbg !7523
  %0 = load float*, float** %v.addr, align 8, !dbg !7524
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !7524
  %1 = load float, float* %arrayidx, align 4, !dbg !7524
  %2 = load float*, float** %v.addr, align 8, !dbg !7525
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !7525
  %3 = load float, float* %arrayidx1, align 4, !dbg !7525
  %mul = fmul float %1, %3, !dbg !7526
  %4 = load float*, float** %v.addr, align 8, !dbg !7527
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !7527
  %5 = load float, float* %arrayidx2, align 4, !dbg !7527
  %6 = load float*, float** %v.addr, align 8, !dbg !7528
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !7528
  %7 = load float, float* %arrayidx3, align 4, !dbg !7528
  %mul4 = fmul float %5, %7, !dbg !7529
  %add = fadd float %mul, %mul4, !dbg !7530
  %call = call float @sqrtf(float %add) #5, !dbg !7531
  ret float %call, !dbg !7532
}

declare dso_local %struct.MaskSpline* @BKE_mask_spline_copy(%struct.MaskSpline*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @slide_point_delta_all_feather(%struct.SlidePointData* %data, float %delta) #0 !dbg !7533 {
entry:
  %data.addr = alloca %struct.SlidePointData*, align 8
  %delta.addr = alloca float, align 4
  %i = alloca i32, align 4
  %point = alloca %struct.MaskSplinePoint*, align 8
  %orig_point = alloca %struct.MaskSplinePoint*, align 8
  store %struct.SlidePointData* %data, %struct.SlidePointData** %data.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SlidePointData** %data.addr, metadata !7536, metadata !DIExpression()), !dbg !7537
  store float %delta, float* %delta.addr, align 4
  call void @llvm.dbg.declare(metadata float* %delta.addr, metadata !7538, metadata !DIExpression()), !dbg !7539
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7540, metadata !DIExpression()), !dbg !7541
  store i32 0, i32* %i, align 4, !dbg !7542
  br label %for.cond, !dbg !7544

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !7545
  %1 = load %struct.SlidePointData*, %struct.SlidePointData** %data.addr, align 8, !dbg !7547
  %spline = getelementptr inbounds %struct.SlidePointData, %struct.SlidePointData* %1, i32 0, i32 4, !dbg !7548
  %2 = load %struct.MaskSpline*, %struct.MaskSpline** %spline, align 8, !dbg !7548
  %tot_point = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %2, i32 0, i32 5, !dbg !7549
  %3 = load i32, i32* %tot_point, align 4, !dbg !7549
  %cmp = icmp slt i32 %0, %3, !dbg !7550
  br i1 %cmp, label %for.body, label %for.end, !dbg !7551

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.MaskSplinePoint** %point, metadata !7552, metadata !DIExpression()), !dbg !7554
  %4 = load %struct.SlidePointData*, %struct.SlidePointData** %data.addr, align 8, !dbg !7555
  %spline1 = getelementptr inbounds %struct.SlidePointData, %struct.SlidePointData* %4, i32 0, i32 4, !dbg !7556
  %5 = load %struct.MaskSpline*, %struct.MaskSpline** %spline1, align 8, !dbg !7556
  %points = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %5, i32 0, i32 6, !dbg !7557
  %6 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %points, align 8, !dbg !7557
  %7 = load i32, i32* %i, align 4, !dbg !7558
  %idxprom = sext i32 %7 to i64, !dbg !7555
  %arrayidx = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %6, i64 %idxprom, !dbg !7555
  store %struct.MaskSplinePoint* %arrayidx, %struct.MaskSplinePoint** %point, align 8, !dbg !7554
  call void @llvm.dbg.declare(metadata %struct.MaskSplinePoint** %orig_point, metadata !7559, metadata !DIExpression()), !dbg !7560
  %8 = load %struct.SlidePointData*, %struct.SlidePointData** %data.addr, align 8, !dbg !7561
  %orig_spline = getelementptr inbounds %struct.SlidePointData, %struct.SlidePointData* %8, i32 0, i32 5, !dbg !7562
  %9 = load %struct.MaskSpline*, %struct.MaskSpline** %orig_spline, align 8, !dbg !7562
  %points2 = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %9, i32 0, i32 6, !dbg !7563
  %10 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %points2, align 8, !dbg !7563
  %11 = load i32, i32* %i, align 4, !dbg !7564
  %idxprom3 = sext i32 %11 to i64, !dbg !7561
  %arrayidx4 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %10, i64 %idxprom3, !dbg !7561
  store %struct.MaskSplinePoint* %arrayidx4, %struct.MaskSplinePoint** %orig_point, align 8, !dbg !7560
  %12 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %orig_point, align 8, !dbg !7565
  %bezt = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %12, i32 0, i32 0, !dbg !7566
  %weight = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %bezt, i32 0, i32 2, !dbg !7567
  %13 = load float, float* %weight, align 8, !dbg !7567
  %14 = load float, float* %delta.addr, align 4, !dbg !7568
  %add = fadd float %13, %14, !dbg !7569
  %15 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point, align 8, !dbg !7570
  %bezt5 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %15, i32 0, i32 0, !dbg !7571
  %weight6 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %bezt5, i32 0, i32 2, !dbg !7572
  store float %add, float* %weight6, align 8, !dbg !7573
  %16 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point, align 8, !dbg !7574
  %bezt7 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %16, i32 0, i32 0, !dbg !7576
  %weight8 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %bezt7, i32 0, i32 2, !dbg !7577
  %17 = load float, float* %weight8, align 8, !dbg !7577
  %cmp9 = fcmp olt float %17, 0.000000e+00, !dbg !7578
  br i1 %cmp9, label %if.then, label %if.end, !dbg !7579

if.then:                                          ; preds = %for.body
  %18 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point, align 8, !dbg !7580
  %bezt10 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %18, i32 0, i32 0, !dbg !7582
  %weight11 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %bezt10, i32 0, i32 2, !dbg !7583
  store float 0.000000e+00, float* %weight11, align 8, !dbg !7584
  br label %if.end, !dbg !7585

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !7586

for.inc:                                          ; preds = %if.end
  %19 = load i32, i32* %i, align 4, !dbg !7587
  %inc = add nsw i32 %19, 1, !dbg !7587
  store i32 %inc, i32* %i, align 4, !dbg !7587
  br label %for.cond, !dbg !7588, !llvm.loop !7589

for.end:                                          ; preds = %for.cond
  ret void, !dbg !7591
}

; Function Attrs: noinline nounwind uwtable
define internal void @slide_point_restore_spline(%struct.SlidePointData* %data) #0 !dbg !7592 {
entry:
  %data.addr = alloca %struct.SlidePointData*, align 8
  %i = alloca i32, align 4
  %point = alloca %struct.MaskSplinePoint*, align 8
  %orig_point = alloca %struct.MaskSplinePoint*, align 8
  %j = alloca i32, align 4
  store %struct.SlidePointData* %data, %struct.SlidePointData** %data.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SlidePointData** %data.addr, metadata !7595, metadata !DIExpression()), !dbg !7596
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7597, metadata !DIExpression()), !dbg !7598
  store i32 0, i32* %i, align 4, !dbg !7599
  br label %for.cond, !dbg !7601

for.cond:                                         ; preds = %for.inc14, %entry
  %0 = load i32, i32* %i, align 4, !dbg !7602
  %1 = load %struct.SlidePointData*, %struct.SlidePointData** %data.addr, align 8, !dbg !7604
  %spline = getelementptr inbounds %struct.SlidePointData, %struct.SlidePointData* %1, i32 0, i32 4, !dbg !7605
  %2 = load %struct.MaskSpline*, %struct.MaskSpline** %spline, align 8, !dbg !7605
  %tot_point = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %2, i32 0, i32 5, !dbg !7606
  %3 = load i32, i32* %tot_point, align 4, !dbg !7606
  %cmp = icmp slt i32 %0, %3, !dbg !7607
  br i1 %cmp, label %for.body, label %for.end16, !dbg !7608

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.MaskSplinePoint** %point, metadata !7609, metadata !DIExpression()), !dbg !7611
  %4 = load %struct.SlidePointData*, %struct.SlidePointData** %data.addr, align 8, !dbg !7612
  %spline1 = getelementptr inbounds %struct.SlidePointData, %struct.SlidePointData* %4, i32 0, i32 4, !dbg !7613
  %5 = load %struct.MaskSpline*, %struct.MaskSpline** %spline1, align 8, !dbg !7613
  %points = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %5, i32 0, i32 6, !dbg !7614
  %6 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %points, align 8, !dbg !7614
  %7 = load i32, i32* %i, align 4, !dbg !7615
  %idxprom = sext i32 %7 to i64, !dbg !7612
  %arrayidx = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %6, i64 %idxprom, !dbg !7612
  store %struct.MaskSplinePoint* %arrayidx, %struct.MaskSplinePoint** %point, align 8, !dbg !7611
  call void @llvm.dbg.declare(metadata %struct.MaskSplinePoint** %orig_point, metadata !7616, metadata !DIExpression()), !dbg !7617
  %8 = load %struct.SlidePointData*, %struct.SlidePointData** %data.addr, align 8, !dbg !7618
  %orig_spline = getelementptr inbounds %struct.SlidePointData, %struct.SlidePointData* %8, i32 0, i32 5, !dbg !7619
  %9 = load %struct.MaskSpline*, %struct.MaskSpline** %orig_spline, align 8, !dbg !7619
  %points2 = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %9, i32 0, i32 6, !dbg !7620
  %10 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %points2, align 8, !dbg !7620
  %11 = load i32, i32* %i, align 4, !dbg !7621
  %idxprom3 = sext i32 %11 to i64, !dbg !7618
  %arrayidx4 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %10, i64 %idxprom3, !dbg !7618
  store %struct.MaskSplinePoint* %arrayidx4, %struct.MaskSplinePoint** %orig_point, align 8, !dbg !7617
  call void @llvm.dbg.declare(metadata i32* %j, metadata !7622, metadata !DIExpression()), !dbg !7623
  %12 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point, align 8, !dbg !7624
  %bezt = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %12, i32 0, i32 0, !dbg !7625
  %13 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %orig_point, align 8, !dbg !7626
  %bezt5 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %13, i32 0, i32 0, !dbg !7627
  %14 = bitcast %struct.BezTriple* %bezt to i8*, !dbg !7627
  %15 = bitcast %struct.BezTriple* %bezt5 to i8*, !dbg !7627
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* align 8 %15, i64 72, i1 false), !dbg !7627
  store i32 0, i32* %j, align 4, !dbg !7628
  br label %for.cond6, !dbg !7630

for.cond6:                                        ; preds = %for.inc, %for.body
  %16 = load i32, i32* %j, align 4, !dbg !7631
  %17 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point, align 8, !dbg !7633
  %tot_uw = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %17, i32 0, i32 2, !dbg !7634
  %18 = load i32, i32* %tot_uw, align 4, !dbg !7634
  %cmp7 = icmp slt i32 %16, %18, !dbg !7635
  br i1 %cmp7, label %for.body8, label %for.end, !dbg !7636

for.body8:                                        ; preds = %for.cond6
  %19 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point, align 8, !dbg !7637
  %uw = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %19, i32 0, i32 3, !dbg !7638
  %20 = load %struct.MaskSplinePointUW*, %struct.MaskSplinePointUW** %uw, align 8, !dbg !7638
  %21 = load i32, i32* %j, align 4, !dbg !7639
  %idxprom9 = sext i32 %21 to i64, !dbg !7637
  %arrayidx10 = getelementptr inbounds %struct.MaskSplinePointUW, %struct.MaskSplinePointUW* %20, i64 %idxprom9, !dbg !7637
  %22 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %orig_point, align 8, !dbg !7640
  %uw11 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %22, i32 0, i32 3, !dbg !7641
  %23 = load %struct.MaskSplinePointUW*, %struct.MaskSplinePointUW** %uw11, align 8, !dbg !7641
  %24 = load i32, i32* %j, align 4, !dbg !7642
  %idxprom12 = sext i32 %24 to i64, !dbg !7640
  %arrayidx13 = getelementptr inbounds %struct.MaskSplinePointUW, %struct.MaskSplinePointUW* %23, i64 %idxprom12, !dbg !7640
  %25 = bitcast %struct.MaskSplinePointUW* %arrayidx10 to i8*, !dbg !7640
  %26 = bitcast %struct.MaskSplinePointUW* %arrayidx13 to i8*, !dbg !7640
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %25, i8* align 4 %26, i64 12, i1 false), !dbg !7640
  br label %for.inc, !dbg !7637

for.inc:                                          ; preds = %for.body8
  %27 = load i32, i32* %j, align 4, !dbg !7643
  %inc = add nsw i32 %27, 1, !dbg !7643
  store i32 %inc, i32* %j, align 4, !dbg !7643
  br label %for.cond6, !dbg !7644, !llvm.loop !7645

for.end:                                          ; preds = %for.cond6
  br label %for.inc14, !dbg !7647

for.inc14:                                        ; preds = %for.end
  %28 = load i32, i32* %i, align 4, !dbg !7648
  %inc15 = add nsw i32 %28, 1, !dbg !7648
  store i32 %inc15, i32* %i, align 4, !dbg !7648
  br label %for.cond, !dbg !7649, !llvm.loop !7650

for.end16:                                        ; preds = %for.cond
  ret void, !dbg !7652
}

declare dso_local void @BKE_mask_spline_free(%struct.MaskSpline*) #2

declare dso_local void @DAG_id_tag_update(%struct.ID*, i16 signext) #2

declare dso_local %struct.Scene* @CTX_data_scene(%struct.bContext*) #2

declare dso_local void @ED_mask_layer_shape_auto_key(%struct.MaskLayer*, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal void @free_slide_point_data(%struct.SlidePointData* %data) #0 !dbg !7653 {
entry:
  %data.addr = alloca %struct.SlidePointData*, align 8
  store %struct.SlidePointData* %data, %struct.SlidePointData** %data.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SlidePointData** %data.addr, metadata !7654, metadata !DIExpression()), !dbg !7655
  %0 = load %struct.SlidePointData*, %struct.SlidePointData** %data.addr, align 8, !dbg !7656
  %orig_spline = getelementptr inbounds %struct.SlidePointData, %struct.SlidePointData* %0, i32 0, i32 5, !dbg !7658
  %1 = load %struct.MaskSpline*, %struct.MaskSpline** %orig_spline, align 8, !dbg !7658
  %tobool = icmp ne %struct.MaskSpline* %1, null, !dbg !7656
  br i1 %tobool, label %if.then, label %if.end, !dbg !7659

if.then:                                          ; preds = %entry
  %2 = load %struct.SlidePointData*, %struct.SlidePointData** %data.addr, align 8, !dbg !7660
  %orig_spline1 = getelementptr inbounds %struct.SlidePointData, %struct.SlidePointData* %2, i32 0, i32 5, !dbg !7661
  %3 = load %struct.MaskSpline*, %struct.MaskSpline** %orig_spline1, align 8, !dbg !7661
  call void @BKE_mask_spline_free(%struct.MaskSpline* %3), !dbg !7662
  br label %if.end, !dbg !7662

if.end:                                           ; preds = %if.then, %entry
  %4 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !7663
  %5 = load %struct.SlidePointData*, %struct.SlidePointData** %data.addr, align 8, !dbg !7664
  %6 = bitcast %struct.SlidePointData* %5 to i8*, !dbg !7664
  call void %4(i8* %6), !dbg !7663
  ret void, !dbg !7665
}

; Function Attrs: noinline nounwind uwtable
define internal void @cancel_slide_point(%struct.SlidePointData* %data) #0 !dbg !7666 {
entry:
  %data.addr = alloca %struct.SlidePointData*, align 8
  store %struct.SlidePointData* %data, %struct.SlidePointData** %data.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SlidePointData** %data.addr, metadata !7667, metadata !DIExpression()), !dbg !7668
  %0 = load %struct.SlidePointData*, %struct.SlidePointData** %data.addr, align 8, !dbg !7669
  %orig_spline = getelementptr inbounds %struct.SlidePointData, %struct.SlidePointData* %0, i32 0, i32 5, !dbg !7671
  %1 = load %struct.MaskSpline*, %struct.MaskSpline** %orig_spline, align 8, !dbg !7671
  %tobool = icmp ne %struct.MaskSpline* %1, null, !dbg !7669
  br i1 %tobool, label %if.then, label %if.else, !dbg !7672

if.then:                                          ; preds = %entry
  %2 = load %struct.SlidePointData*, %struct.SlidePointData** %data.addr, align 8, !dbg !7673
  call void @slide_point_restore_spline(%struct.SlidePointData* %2), !dbg !7675
  br label %if.end22, !dbg !7676

if.else:                                          ; preds = %entry
  %3 = load %struct.SlidePointData*, %struct.SlidePointData** %data.addr, align 8, !dbg !7677
  %action = getelementptr inbounds %struct.SlidePointData, %struct.SlidePointData* %3, i32 0, i32 1, !dbg !7680
  %4 = load i32, i32* %action, align 4, !dbg !7680
  %cmp = icmp eq i32 %4, 3, !dbg !7681
  br i1 %cmp, label %if.then1, label %if.else8, !dbg !7682

if.then1:                                         ; preds = %if.else
  %5 = load %struct.SlidePointData*, %struct.SlidePointData** %data.addr, align 8, !dbg !7683
  %uw = getelementptr inbounds %struct.SlidePointData, %struct.SlidePointData* %5, i32 0, i32 7, !dbg !7686
  %6 = load %struct.MaskSplinePointUW*, %struct.MaskSplinePointUW** %uw, align 8, !dbg !7686
  %tobool2 = icmp ne %struct.MaskSplinePointUW* %6, null, !dbg !7683
  br i1 %tobool2, label %if.then3, label %if.else5, !dbg !7687

if.then3:                                         ; preds = %if.then1
  %7 = load %struct.SlidePointData*, %struct.SlidePointData** %data.addr, align 8, !dbg !7688
  %weight = getelementptr inbounds %struct.SlidePointData, %struct.SlidePointData* %7, i32 0, i32 24, !dbg !7689
  %8 = load float, float* %weight, align 4, !dbg !7689
  %9 = load %struct.SlidePointData*, %struct.SlidePointData** %data.addr, align 8, !dbg !7690
  %uw4 = getelementptr inbounds %struct.SlidePointData, %struct.SlidePointData* %9, i32 0, i32 7, !dbg !7691
  %10 = load %struct.MaskSplinePointUW*, %struct.MaskSplinePointUW** %uw4, align 8, !dbg !7691
  %w = getelementptr inbounds %struct.MaskSplinePointUW, %struct.MaskSplinePointUW* %10, i32 0, i32 1, !dbg !7692
  store float %8, float* %w, align 4, !dbg !7693
  br label %if.end, !dbg !7690

if.else5:                                         ; preds = %if.then1
  %11 = load %struct.SlidePointData*, %struct.SlidePointData** %data.addr, align 8, !dbg !7694
  %weight6 = getelementptr inbounds %struct.SlidePointData, %struct.SlidePointData* %11, i32 0, i32 24, !dbg !7695
  %12 = load float, float* %weight6, align 4, !dbg !7695
  %13 = load %struct.SlidePointData*, %struct.SlidePointData** %data.addr, align 8, !dbg !7696
  %point = getelementptr inbounds %struct.SlidePointData, %struct.SlidePointData* %13, i32 0, i32 6, !dbg !7697
  %14 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point, align 8, !dbg !7697
  %bezt = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %14, i32 0, i32 0, !dbg !7698
  %weight7 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %bezt, i32 0, i32 2, !dbg !7699
  store float %12, float* %weight7, align 8, !dbg !7700
  br label %if.end

if.end:                                           ; preds = %if.else5, %if.then3
  br label %if.end21, !dbg !7701

if.else8:                                         ; preds = %if.else
  %15 = load %struct.SlidePointData*, %struct.SlidePointData** %data.addr, align 8, !dbg !7702
  %action9 = getelementptr inbounds %struct.SlidePointData, %struct.SlidePointData* %15, i32 0, i32 1, !dbg !7704
  %16 = load i32, i32* %action9, align 4, !dbg !7704
  %cmp10 = icmp ne i32 %16, 4, !dbg !7705
  br i1 %cmp10, label %if.then11, label %if.end20, !dbg !7706

if.then11:                                        ; preds = %if.else8
  %17 = load %struct.SlidePointData*, %struct.SlidePointData** %data.addr, align 8, !dbg !7707
  %point12 = getelementptr inbounds %struct.SlidePointData, %struct.SlidePointData* %17, i32 0, i32 6, !dbg !7709
  %18 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point12, align 8, !dbg !7709
  %bezt13 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %18, i32 0, i32 0, !dbg !7710
  %vec = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %bezt13, i32 0, i32 0, !dbg !7711
  %arraydecay = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec, i64 0, i64 0, !dbg !7707
  %19 = load %struct.SlidePointData*, %struct.SlidePointData** %data.addr, align 8, !dbg !7712
  %vec14 = getelementptr inbounds %struct.SlidePointData, %struct.SlidePointData* %19, i32 0, i32 18, !dbg !7713
  %arraydecay15 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec14, i64 0, i64 0, !dbg !7712
  call void @copy_m3_m3([3 x float]* %arraydecay, [3 x float]* %arraydecay15), !dbg !7714
  %20 = load %struct.SlidePointData*, %struct.SlidePointData** %data.addr, align 8, !dbg !7715
  %old_h1 = getelementptr inbounds %struct.SlidePointData, %struct.SlidePointData* %20, i32 0, i32 19, !dbg !7716
  %21 = load i8, i8* %old_h1, align 8, !dbg !7716
  %22 = load %struct.SlidePointData*, %struct.SlidePointData** %data.addr, align 8, !dbg !7717
  %point16 = getelementptr inbounds %struct.SlidePointData, %struct.SlidePointData* %22, i32 0, i32 6, !dbg !7718
  %23 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point16, align 8, !dbg !7718
  %bezt17 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %23, i32 0, i32 0, !dbg !7719
  %h1 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %bezt17, i32 0, i32 5, !dbg !7720
  store i8 %21, i8* %h1, align 1, !dbg !7721
  %24 = load %struct.SlidePointData*, %struct.SlidePointData** %data.addr, align 8, !dbg !7722
  %old_h2 = getelementptr inbounds %struct.SlidePointData, %struct.SlidePointData* %24, i32 0, i32 20, !dbg !7723
  %25 = load i8, i8* %old_h2, align 1, !dbg !7723
  %26 = load %struct.SlidePointData*, %struct.SlidePointData** %data.addr, align 8, !dbg !7724
  %point18 = getelementptr inbounds %struct.SlidePointData, %struct.SlidePointData* %26, i32 0, i32 6, !dbg !7725
  %27 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point18, align 8, !dbg !7725
  %bezt19 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %27, i32 0, i32 0, !dbg !7726
  %h2 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %bezt19, i32 0, i32 6, !dbg !7727
  store i8 %25, i8* %h2, align 2, !dbg !7728
  br label %if.end20, !dbg !7729

if.end20:                                         ; preds = %if.then11, %if.else8
  br label %if.end21

if.end21:                                         ; preds = %if.end20, %if.end
  br label %if.end22

if.end22:                                         ; preds = %if.end21, %if.then
  ret void, !dbg !7730
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #4

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @slide_spline_curvature_check(%struct.bContext* %C, %struct.wmEvent* %event) #0 !dbg !7731 {
entry:
  %retval = alloca i8, align 1
  %C.addr = alloca %struct.bContext*, align 8
  %event.addr = alloca %struct.wmEvent*, align 8
  %mask = alloca %struct.Mask*, align 8
  %co = alloca [2 x float], align 4
  %threshold = alloca float, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !7734, metadata !DIExpression()), !dbg !7735
  store %struct.wmEvent* %event, %struct.wmEvent** %event.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %event.addr, metadata !7736, metadata !DIExpression()), !dbg !7737
  call void @llvm.dbg.declare(metadata %struct.Mask** %mask, metadata !7738, metadata !DIExpression()), !dbg !7739
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7740
  %call = call %struct.Mask* @CTX_data_edit_mask(%struct.bContext* %0), !dbg !7741
  store %struct.Mask* %call, %struct.Mask** %mask, align 8, !dbg !7739
  call void @llvm.dbg.declare(metadata [2 x float]* %co, metadata !7742, metadata !DIExpression()), !dbg !7743
  call void @llvm.dbg.declare(metadata float* %threshold, metadata !7744, metadata !DIExpression()), !dbg !7745
  store float 1.900000e+01, float* %threshold, align 4, !dbg !7745
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7746
  %call1 = call %struct.ScrArea* @CTX_wm_area(%struct.bContext* %1), !dbg !7747
  %2 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7748
  %call2 = call %struct.ARegion* @CTX_wm_region(%struct.bContext* %2), !dbg !7749
  %3 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !7750
  %mval = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %3, i32 0, i32 6, !dbg !7751
  %arraydecay = getelementptr inbounds [2 x i32], [2 x i32]* %mval, i64 0, i64 0, !dbg !7750
  %arraydecay3 = getelementptr inbounds [2 x float], [2 x float]* %co, i64 0, i64 0, !dbg !7752
  call void @ED_mask_mouse_pos(%struct.ScrArea* %call1, %struct.ARegion* %call2, i32* %arraydecay, float* %arraydecay3), !dbg !7753
  %4 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7754
  %5 = load %struct.Mask*, %struct.Mask** %mask, align 8, !dbg !7756
  %arraydecay4 = getelementptr inbounds [2 x float], [2 x float]* %co, i64 0, i64 0, !dbg !7757
  %call5 = call %struct.MaskSplinePoint* @ED_mask_point_find_nearest(%struct.bContext* %4, %struct.Mask* %5, float* %arraydecay4, float 1.900000e+01, %struct.MaskLayer** null, %struct.MaskSpline** null, i32* null, float* null), !dbg !7758
  %tobool = icmp ne %struct.MaskSplinePoint* %call5, null, !dbg !7758
  br i1 %tobool, label %if.then, label %if.end, !dbg !7759

if.then:                                          ; preds = %entry
  store i8 0, i8* %retval, align 1, !dbg !7760
  br label %return, !dbg !7760

if.end:                                           ; preds = %entry
  %6 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7762
  %7 = load %struct.Mask*, %struct.Mask** %mask, align 8, !dbg !7764
  %arraydecay6 = getelementptr inbounds [2 x float], [2 x float]* %co, i64 0, i64 0, !dbg !7765
  %call7 = call zeroext i8 @ED_mask_feather_find_nearest(%struct.bContext* %6, %struct.Mask* %7, float* %arraydecay6, float 1.900000e+01, %struct.MaskLayer** null, %struct.MaskSpline** null, %struct.MaskSplinePoint** null, %struct.MaskSplinePointUW** null, float* null), !dbg !7766
  %tobool8 = icmp ne i8 %call7, 0, !dbg !7766
  br i1 %tobool8, label %if.then9, label %if.end10, !dbg !7767

if.then9:                                         ; preds = %if.end
  store i8 0, i8* %retval, align 1, !dbg !7768
  br label %return, !dbg !7768

if.end10:                                         ; preds = %if.end
  store i8 1, i8* %retval, align 1, !dbg !7770
  br label %return, !dbg !7770

return:                                           ; preds = %if.end10, %if.then9, %if.then
  %8 = load i8, i8* %retval, align 1, !dbg !7771
  ret i8 %8, !dbg !7771
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.SlideSplineCurvatureData* @slide_spline_curvature_customdata(%struct.bContext* %C, %struct.wmEvent* %event) #0 !dbg !7772 {
entry:
  %retval = alloca %struct.SlideSplineCurvatureData*, align 8
  %C.addr = alloca %struct.bContext*, align 8
  %event.addr = alloca %struct.wmEvent*, align 8
  %threshold = alloca float, align 4
  %mask = alloca %struct.Mask*, align 8
  %slide_data = alloca %struct.SlideSplineCurvatureData*, align 8
  %mask_layer = alloca %struct.MaskLayer*, align 8
  %spline = alloca %struct.MaskSpline*, align 8
  %point = alloca %struct.MaskSplinePoint*, align 8
  %u = alloca float, align 4
  %co = alloca [2 x float], align 4
  %next_bezt = alloca %struct.BezTriple*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !7775, metadata !DIExpression()), !dbg !7776
  store %struct.wmEvent* %event, %struct.wmEvent** %event.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %event.addr, metadata !7777, metadata !DIExpression()), !dbg !7778
  call void @llvm.dbg.declare(metadata float* %threshold, metadata !7779, metadata !DIExpression()), !dbg !7780
  store float 1.900000e+01, float* %threshold, align 4, !dbg !7780
  call void @llvm.dbg.declare(metadata %struct.Mask** %mask, metadata !7781, metadata !DIExpression()), !dbg !7782
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7783
  %call = call %struct.Mask* @CTX_data_edit_mask(%struct.bContext* %0), !dbg !7784
  store %struct.Mask* %call, %struct.Mask** %mask, align 8, !dbg !7782
  call void @llvm.dbg.declare(metadata %struct.SlideSplineCurvatureData** %slide_data, metadata !7785, metadata !DIExpression()), !dbg !7786
  call void @llvm.dbg.declare(metadata %struct.MaskLayer** %mask_layer, metadata !7787, metadata !DIExpression()), !dbg !7788
  call void @llvm.dbg.declare(metadata %struct.MaskSpline** %spline, metadata !7789, metadata !DIExpression()), !dbg !7790
  call void @llvm.dbg.declare(metadata %struct.MaskSplinePoint** %point, metadata !7791, metadata !DIExpression()), !dbg !7792
  call void @llvm.dbg.declare(metadata float* %u, metadata !7793, metadata !DIExpression()), !dbg !7794
  call void @llvm.dbg.declare(metadata [2 x float]* %co, metadata !7795, metadata !DIExpression()), !dbg !7796
  call void @llvm.dbg.declare(metadata %struct.BezTriple** %next_bezt, metadata !7797, metadata !DIExpression()), !dbg !7798
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7799
  %call1 = call %struct.ScrArea* @CTX_wm_area(%struct.bContext* %1), !dbg !7800
  %2 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7801
  %call2 = call %struct.ARegion* @CTX_wm_region(%struct.bContext* %2), !dbg !7802
  %3 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !7803
  %mval = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %3, i32 0, i32 6, !dbg !7804
  %arraydecay = getelementptr inbounds [2 x i32], [2 x i32]* %mval, i64 0, i64 0, !dbg !7803
  %arraydecay3 = getelementptr inbounds [2 x float], [2 x float]* %co, i64 0, i64 0, !dbg !7805
  call void @ED_mask_mouse_pos(%struct.ScrArea* %call1, %struct.ARegion* %call2, i32* %arraydecay, float* %arraydecay3), !dbg !7806
  %4 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7807
  %5 = load %struct.Mask*, %struct.Mask** %mask, align 8, !dbg !7809
  %arraydecay4 = getelementptr inbounds [2 x float], [2 x float]* %co, i64 0, i64 0, !dbg !7810
  %call5 = call zeroext i8 @ED_mask_find_nearest_diff_point(%struct.bContext* %4, %struct.Mask* %5, float* %arraydecay4, i32 19, i8 zeroext 0, float* null, i8 zeroext 1, i8 zeroext 0, %struct.MaskLayer** %mask_layer, %struct.MaskSpline** %spline, %struct.MaskSplinePoint** %point, float* %u, float* null), !dbg !7811
  %tobool = icmp ne i8 %call5, 0, !dbg !7811
  br i1 %tobool, label %if.end, label %if.then, !dbg !7812

if.then:                                          ; preds = %entry
  store %struct.SlideSplineCurvatureData* null, %struct.SlideSplineCurvatureData** %retval, align 8, !dbg !7813
  br label %return, !dbg !7813

if.end:                                           ; preds = %entry
  %6 = load %struct.MaskSpline*, %struct.MaskSpline** %spline, align 8, !dbg !7815
  %7 = load %struct.MaskSpline*, %struct.MaskSpline** %spline, align 8, !dbg !7816
  %points = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %7, i32 0, i32 6, !dbg !7817
  %8 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %points, align 8, !dbg !7817
  %9 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point, align 8, !dbg !7818
  %call6 = call %struct.BezTriple* @BKE_mask_spline_point_next_bezt(%struct.MaskSpline* %6, %struct.MaskSplinePoint* %8, %struct.MaskSplinePoint* %9), !dbg !7819
  store %struct.BezTriple* %call6, %struct.BezTriple** %next_bezt, align 8, !dbg !7820
  %10 = load %struct.BezTriple*, %struct.BezTriple** %next_bezt, align 8, !dbg !7821
  %cmp = icmp eq %struct.BezTriple* %10, null, !dbg !7823
  br i1 %cmp, label %if.then7, label %if.end8, !dbg !7824

if.then7:                                         ; preds = %if.end
  store %struct.SlideSplineCurvatureData* null, %struct.SlideSplineCurvatureData** %retval, align 8, !dbg !7825
  br label %return, !dbg !7825

if.end8:                                          ; preds = %if.end
  %11 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !7827
  %call9 = call i8* %11(i64 264, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.86, i64 0, i64 0)), !dbg !7827
  %12 = bitcast i8* %call9 to %struct.SlideSplineCurvatureData*, !dbg !7827
  store %struct.SlideSplineCurvatureData* %12, %struct.SlideSplineCurvatureData** %slide_data, align 8, !dbg !7828
  %13 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !7829
  %type = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %13, i32 0, i32 2, !dbg !7830
  %14 = load i16, i16* %type, align 8, !dbg !7830
  %15 = load %struct.SlideSplineCurvatureData*, %struct.SlideSplineCurvatureData** %slide_data, align 8, !dbg !7831
  %event_invoke_type = getelementptr inbounds %struct.SlideSplineCurvatureData, %struct.SlideSplineCurvatureData* %15, i32 0, i32 0, !dbg !7832
  store i16 %14, i16* %event_invoke_type, align 8, !dbg !7833
  %16 = load %struct.Mask*, %struct.Mask** %mask, align 8, !dbg !7834
  %17 = load %struct.SlideSplineCurvatureData*, %struct.SlideSplineCurvatureData** %slide_data, align 8, !dbg !7835
  %mask10 = getelementptr inbounds %struct.SlideSplineCurvatureData, %struct.SlideSplineCurvatureData* %17, i32 0, i32 1, !dbg !7836
  store %struct.Mask* %16, %struct.Mask** %mask10, align 8, !dbg !7837
  %18 = load %struct.MaskLayer*, %struct.MaskLayer** %mask_layer, align 8, !dbg !7838
  %19 = load %struct.SlideSplineCurvatureData*, %struct.SlideSplineCurvatureData** %slide_data, align 8, !dbg !7839
  %mask_layer11 = getelementptr inbounds %struct.SlideSplineCurvatureData, %struct.SlideSplineCurvatureData* %19, i32 0, i32 2, !dbg !7840
  store %struct.MaskLayer* %18, %struct.MaskLayer** %mask_layer11, align 8, !dbg !7841
  %20 = load %struct.MaskSpline*, %struct.MaskSpline** %spline, align 8, !dbg !7842
  %21 = load %struct.SlideSplineCurvatureData*, %struct.SlideSplineCurvatureData** %slide_data, align 8, !dbg !7843
  %spline12 = getelementptr inbounds %struct.SlideSplineCurvatureData, %struct.SlideSplineCurvatureData* %21, i32 0, i32 3, !dbg !7844
  store %struct.MaskSpline* %20, %struct.MaskSpline** %spline12, align 8, !dbg !7845
  %22 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point, align 8, !dbg !7846
  %23 = load %struct.SlideSplineCurvatureData*, %struct.SlideSplineCurvatureData** %slide_data, align 8, !dbg !7847
  %point13 = getelementptr inbounds %struct.SlideSplineCurvatureData, %struct.SlideSplineCurvatureData* %23, i32 0, i32 4, !dbg !7848
  store %struct.MaskSplinePoint* %22, %struct.MaskSplinePoint** %point13, align 8, !dbg !7849
  %24 = load float, float* %u, align 4, !dbg !7850
  %25 = load %struct.SlideSplineCurvatureData*, %struct.SlideSplineCurvatureData** %slide_data, align 8, !dbg !7851
  %u14 = getelementptr inbounds %struct.SlideSplineCurvatureData, %struct.SlideSplineCurvatureData* %25, i32 0, i32 5, !dbg !7852
  store float %24, float* %u14, align 8, !dbg !7853
  %26 = load %struct.SlideSplineCurvatureData*, %struct.SlideSplineCurvatureData** %slide_data, align 8, !dbg !7854
  %prev_mouse_coord = getelementptr inbounds %struct.SlideSplineCurvatureData, %struct.SlideSplineCurvatureData* %26, i32 0, i32 11, !dbg !7855
  %arraydecay15 = getelementptr inbounds [2 x float], [2 x float]* %prev_mouse_coord, i64 0, i64 0, !dbg !7854
  %arraydecay16 = getelementptr inbounds [2 x float], [2 x float]* %co, i64 0, i64 0, !dbg !7856
  call void @copy_v2_v2(float* %arraydecay15, float* %arraydecay16), !dbg !7857
  %27 = load %struct.MaskSpline*, %struct.MaskSpline** %spline, align 8, !dbg !7858
  %28 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point, align 8, !dbg !7859
  %29 = load float, float* %u, align 4, !dbg !7860
  %30 = load %struct.SlideSplineCurvatureData*, %struct.SlideSplineCurvatureData** %slide_data, align 8, !dbg !7861
  %prev_spline_coord = getelementptr inbounds %struct.SlideSplineCurvatureData, %struct.SlideSplineCurvatureData* %30, i32 0, i32 12, !dbg !7862
  %arraydecay17 = getelementptr inbounds [2 x float], [2 x float]* %prev_spline_coord, i64 0, i64 0, !dbg !7861
  call void @BKE_mask_point_segment_co(%struct.MaskSpline* %27, %struct.MaskSplinePoint* %28, float %29, float* %arraydecay17), !dbg !7863
  %31 = load %struct.SlideSplineCurvatureData*, %struct.SlideSplineCurvatureData** %slide_data, align 8, !dbg !7864
  %P0 = getelementptr inbounds %struct.SlideSplineCurvatureData, %struct.SlideSplineCurvatureData* %31, i32 0, i32 13, !dbg !7865
  %arraydecay18 = getelementptr inbounds [2 x float], [2 x float]* %P0, i64 0, i64 0, !dbg !7864
  %32 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point, align 8, !dbg !7866
  %bezt = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %32, i32 0, i32 0, !dbg !7867
  %vec = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %bezt, i32 0, i32 0, !dbg !7868
  %arrayidx = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec, i64 0, i64 1, !dbg !7866
  %arraydecay19 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx, i64 0, i64 0, !dbg !7866
  call void @copy_v2_v2(float* %arraydecay18, float* %arraydecay19), !dbg !7869
  %33 = load %struct.SlideSplineCurvatureData*, %struct.SlideSplineCurvatureData** %slide_data, align 8, !dbg !7870
  %P1 = getelementptr inbounds %struct.SlideSplineCurvatureData, %struct.SlideSplineCurvatureData* %33, i32 0, i32 14, !dbg !7871
  %arraydecay20 = getelementptr inbounds [2 x float], [2 x float]* %P1, i64 0, i64 0, !dbg !7870
  %34 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point, align 8, !dbg !7872
  %bezt21 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %34, i32 0, i32 0, !dbg !7873
  %vec22 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %bezt21, i32 0, i32 0, !dbg !7874
  %arrayidx23 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec22, i64 0, i64 2, !dbg !7872
  %arraydecay24 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx23, i64 0, i64 0, !dbg !7872
  call void @copy_v2_v2(float* %arraydecay20, float* %arraydecay24), !dbg !7875
  %35 = load %struct.SlideSplineCurvatureData*, %struct.SlideSplineCurvatureData** %slide_data, align 8, !dbg !7876
  %P2 = getelementptr inbounds %struct.SlideSplineCurvatureData, %struct.SlideSplineCurvatureData* %35, i32 0, i32 15, !dbg !7877
  %arraydecay25 = getelementptr inbounds [2 x float], [2 x float]* %P2, i64 0, i64 0, !dbg !7876
  %36 = load %struct.BezTriple*, %struct.BezTriple** %next_bezt, align 8, !dbg !7878
  %vec26 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %36, i32 0, i32 0, !dbg !7879
  %arrayidx27 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec26, i64 0, i64 0, !dbg !7878
  %arraydecay28 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx27, i64 0, i64 0, !dbg !7878
  call void @copy_v2_v2(float* %arraydecay25, float* %arraydecay28), !dbg !7880
  %37 = load %struct.SlideSplineCurvatureData*, %struct.SlideSplineCurvatureData** %slide_data, align 8, !dbg !7881
  %P3 = getelementptr inbounds %struct.SlideSplineCurvatureData, %struct.SlideSplineCurvatureData* %37, i32 0, i32 16, !dbg !7882
  %arraydecay29 = getelementptr inbounds [3 x float], [3 x float]* %P3, i64 0, i64 0, !dbg !7881
  %38 = load %struct.BezTriple*, %struct.BezTriple** %next_bezt, align 8, !dbg !7883
  %vec30 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %38, i32 0, i32 0, !dbg !7884
  %arrayidx31 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec30, i64 0, i64 1, !dbg !7883
  %arraydecay32 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx31, i64 0, i64 0, !dbg !7883
  call void @copy_v2_v2(float* %arraydecay29, float* %arraydecay32), !dbg !7885
  %39 = load float, float* %u, align 4, !dbg !7886
  %cmp33 = fcmp ole float %39, 5.000000e-01, !dbg !7888
  br i1 %cmp33, label %if.then34, label %if.else, !dbg !7889

if.then34:                                        ; preds = %if.end8
  %40 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point, align 8, !dbg !7890
  %bezt35 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %40, i32 0, i32 0, !dbg !7892
  %41 = load %struct.SlideSplineCurvatureData*, %struct.SlideSplineCurvatureData** %slide_data, align 8, !dbg !7893
  %adjust_bezt = getelementptr inbounds %struct.SlideSplineCurvatureData, %struct.SlideSplineCurvatureData* %41, i32 0, i32 7, !dbg !7894
  store %struct.BezTriple* %bezt35, %struct.BezTriple** %adjust_bezt, align 8, !dbg !7895
  %42 = load %struct.BezTriple*, %struct.BezTriple** %next_bezt, align 8, !dbg !7896
  %43 = load %struct.SlideSplineCurvatureData*, %struct.SlideSplineCurvatureData** %slide_data, align 8, !dbg !7897
  %other_bezt = getelementptr inbounds %struct.SlideSplineCurvatureData, %struct.SlideSplineCurvatureData* %43, i32 0, i32 8, !dbg !7898
  store %struct.BezTriple* %42, %struct.BezTriple** %other_bezt, align 8, !dbg !7899
  br label %if.end39, !dbg !7900

if.else:                                          ; preds = %if.end8
  %44 = load %struct.BezTriple*, %struct.BezTriple** %next_bezt, align 8, !dbg !7901
  %45 = load %struct.SlideSplineCurvatureData*, %struct.SlideSplineCurvatureData** %slide_data, align 8, !dbg !7903
  %adjust_bezt36 = getelementptr inbounds %struct.SlideSplineCurvatureData, %struct.SlideSplineCurvatureData* %45, i32 0, i32 7, !dbg !7904
  store %struct.BezTriple* %44, %struct.BezTriple** %adjust_bezt36, align 8, !dbg !7905
  %46 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point, align 8, !dbg !7906
  %bezt37 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %46, i32 0, i32 0, !dbg !7907
  %47 = load %struct.SlideSplineCurvatureData*, %struct.SlideSplineCurvatureData** %slide_data, align 8, !dbg !7908
  %other_bezt38 = getelementptr inbounds %struct.SlideSplineCurvatureData, %struct.SlideSplineCurvatureData* %47, i32 0, i32 8, !dbg !7909
  store %struct.BezTriple* %bezt37, %struct.BezTriple** %other_bezt38, align 8, !dbg !7910
  br label %if.end39

if.end39:                                         ; preds = %if.else, %if.then34
  %48 = load %struct.SlideSplineCurvatureData*, %struct.SlideSplineCurvatureData** %slide_data, align 8, !dbg !7911
  %bezt_backup = getelementptr inbounds %struct.SlideSplineCurvatureData, %struct.SlideSplineCurvatureData* %48, i32 0, i32 9, !dbg !7912
  %49 = load %struct.SlideSplineCurvatureData*, %struct.SlideSplineCurvatureData** %slide_data, align 8, !dbg !7913
  %adjust_bezt40 = getelementptr inbounds %struct.SlideSplineCurvatureData, %struct.SlideSplineCurvatureData* %49, i32 0, i32 7, !dbg !7914
  %50 = load %struct.BezTriple*, %struct.BezTriple** %adjust_bezt40, align 8, !dbg !7914
  %51 = bitcast %struct.BezTriple* %bezt_backup to i8*, !dbg !7915
  %52 = bitcast %struct.BezTriple* %50 to i8*, !dbg !7915
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %51, i8* align 4 %52, i64 72, i1 false), !dbg !7915
  %53 = load %struct.SlideSplineCurvatureData*, %struct.SlideSplineCurvatureData** %slide_data, align 8, !dbg !7916
  %other_bezt_backup = getelementptr inbounds %struct.SlideSplineCurvatureData, %struct.SlideSplineCurvatureData* %53, i32 0, i32 10, !dbg !7917
  %54 = load %struct.SlideSplineCurvatureData*, %struct.SlideSplineCurvatureData** %slide_data, align 8, !dbg !7918
  %other_bezt41 = getelementptr inbounds %struct.SlideSplineCurvatureData, %struct.SlideSplineCurvatureData* %54, i32 0, i32 8, !dbg !7919
  %55 = load %struct.BezTriple*, %struct.BezTriple** %other_bezt41, align 8, !dbg !7919
  %56 = bitcast %struct.BezTriple* %other_bezt_backup to i8*, !dbg !7920
  %57 = bitcast %struct.BezTriple* %55 to i8*, !dbg !7920
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %56, i8* align 4 %57, i64 72, i1 false), !dbg !7920
  %58 = load float, float* %u, align 4, !dbg !7921
  %cmp42 = fcmp olt float %58, 5.000000e-01, !dbg !7923
  br i1 %cmp42, label %if.then43, label %if.else51, !dbg !7924

if.then43:                                        ; preds = %if.end39
  %59 = load %struct.SlideSplineCurvatureData*, %struct.SlideSplineCurvatureData** %slide_data, align 8, !dbg !7925
  %adjust_bezt44 = getelementptr inbounds %struct.SlideSplineCurvatureData, %struct.SlideSplineCurvatureData* %59, i32 0, i32 7, !dbg !7928
  %60 = load %struct.BezTriple*, %struct.BezTriple** %adjust_bezt44, align 8, !dbg !7928
  %h2 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %60, i32 0, i32 6, !dbg !7929
  %61 = load i8, i8* %h2, align 2, !dbg !7929
  %conv = zext i8 %61 to i32, !dbg !7925
  %cmp45 = icmp sle i32 %conv, 2, !dbg !7930
  br i1 %cmp45, label %if.then47, label %if.end50, !dbg !7931

if.then47:                                        ; preds = %if.then43
  %62 = load %struct.SlideSplineCurvatureData*, %struct.SlideSplineCurvatureData** %slide_data, align 8, !dbg !7932
  %adjust_bezt48 = getelementptr inbounds %struct.SlideSplineCurvatureData, %struct.SlideSplineCurvatureData* %62, i32 0, i32 7, !dbg !7934
  %63 = load %struct.BezTriple*, %struct.BezTriple** %adjust_bezt48, align 8, !dbg !7934
  %h249 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %63, i32 0, i32 6, !dbg !7935
  store i8 0, i8* %h249, align 2, !dbg !7936
  br label %if.end50, !dbg !7937

if.end50:                                         ; preds = %if.then47, %if.then43
  br label %if.end60, !dbg !7938

if.else51:                                        ; preds = %if.end39
  %64 = load %struct.SlideSplineCurvatureData*, %struct.SlideSplineCurvatureData** %slide_data, align 8, !dbg !7939
  %adjust_bezt52 = getelementptr inbounds %struct.SlideSplineCurvatureData, %struct.SlideSplineCurvatureData* %64, i32 0, i32 7, !dbg !7942
  %65 = load %struct.BezTriple*, %struct.BezTriple** %adjust_bezt52, align 8, !dbg !7942
  %h1 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %65, i32 0, i32 5, !dbg !7943
  %66 = load i8, i8* %h1, align 1, !dbg !7943
  %conv53 = zext i8 %66 to i32, !dbg !7939
  %cmp54 = icmp sle i32 %conv53, 2, !dbg !7944
  br i1 %cmp54, label %if.then56, label %if.end59, !dbg !7945

if.then56:                                        ; preds = %if.else51
  %67 = load %struct.SlideSplineCurvatureData*, %struct.SlideSplineCurvatureData** %slide_data, align 8, !dbg !7946
  %adjust_bezt57 = getelementptr inbounds %struct.SlideSplineCurvatureData, %struct.SlideSplineCurvatureData* %67, i32 0, i32 7, !dbg !7948
  %68 = load %struct.BezTriple*, %struct.BezTriple** %adjust_bezt57, align 8, !dbg !7948
  %h158 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %68, i32 0, i32 5, !dbg !7949
  store i8 0, i8* %h158, align 1, !dbg !7950
  br label %if.end59, !dbg !7951

if.end59:                                         ; preds = %if.then56, %if.else51
  br label %if.end60

if.end60:                                         ; preds = %if.end59, %if.end50
  %69 = load %struct.Mask*, %struct.Mask** %mask, align 8, !dbg !7952
  call void @ED_mask_select_toggle_all(%struct.Mask* %69, i32 2), !dbg !7953
  %70 = load %struct.SlideSplineCurvatureData*, %struct.SlideSplineCurvatureData** %slide_data, align 8, !dbg !7954
  %adjust_bezt61 = getelementptr inbounds %struct.SlideSplineCurvatureData, %struct.SlideSplineCurvatureData* %70, i32 0, i32 7, !dbg !7955
  %71 = load %struct.BezTriple*, %struct.BezTriple** %adjust_bezt61, align 8, !dbg !7955
  %f2 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %71, i32 0, i32 8, !dbg !7956
  %72 = load i8, i8* %f2, align 4, !dbg !7957
  %conv62 = zext i8 %72 to i32, !dbg !7957
  %or = or i32 %conv62, 1, !dbg !7957
  %conv63 = trunc i32 %or to i8, !dbg !7957
  store i8 %conv63, i8* %f2, align 4, !dbg !7957
  %73 = load %struct.SlideSplineCurvatureData*, %struct.SlideSplineCurvatureData** %slide_data, align 8, !dbg !7958
  %other_bezt64 = getelementptr inbounds %struct.SlideSplineCurvatureData, %struct.SlideSplineCurvatureData* %73, i32 0, i32 8, !dbg !7959
  %74 = load %struct.BezTriple*, %struct.BezTriple** %other_bezt64, align 8, !dbg !7959
  %f265 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %74, i32 0, i32 8, !dbg !7960
  %75 = load i8, i8* %f265, align 4, !dbg !7961
  %conv66 = zext i8 %75 to i32, !dbg !7961
  %or67 = or i32 %conv66, 1, !dbg !7961
  %conv68 = trunc i32 %or67 to i8, !dbg !7961
  store i8 %conv68, i8* %f265, align 4, !dbg !7961
  %76 = load float, float* %u, align 4, !dbg !7962
  %cmp69 = fcmp olt float %76, 5.000000e-01, !dbg !7964
  br i1 %cmp69, label %if.then71, label %if.else80, !dbg !7965

if.then71:                                        ; preds = %if.end60
  %77 = load %struct.SlideSplineCurvatureData*, %struct.SlideSplineCurvatureData** %slide_data, align 8, !dbg !7966
  %adjust_bezt72 = getelementptr inbounds %struct.SlideSplineCurvatureData, %struct.SlideSplineCurvatureData* %77, i32 0, i32 7, !dbg !7968
  %78 = load %struct.BezTriple*, %struct.BezTriple** %adjust_bezt72, align 8, !dbg !7968
  %f3 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %78, i32 0, i32 9, !dbg !7969
  %79 = load i8, i8* %f3, align 1, !dbg !7970
  %conv73 = zext i8 %79 to i32, !dbg !7970
  %or74 = or i32 %conv73, 1, !dbg !7970
  %conv75 = trunc i32 %or74 to i8, !dbg !7970
  store i8 %conv75, i8* %f3, align 1, !dbg !7970
  %80 = load %struct.SlideSplineCurvatureData*, %struct.SlideSplineCurvatureData** %slide_data, align 8, !dbg !7971
  %other_bezt76 = getelementptr inbounds %struct.SlideSplineCurvatureData, %struct.SlideSplineCurvatureData* %80, i32 0, i32 8, !dbg !7972
  %81 = load %struct.BezTriple*, %struct.BezTriple** %other_bezt76, align 8, !dbg !7972
  %f1 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %81, i32 0, i32 7, !dbg !7973
  %82 = load i8, i8* %f1, align 1, !dbg !7974
  %conv77 = zext i8 %82 to i32, !dbg !7974
  %or78 = or i32 %conv77, 1, !dbg !7974
  %conv79 = trunc i32 %or78 to i8, !dbg !7974
  store i8 %conv79, i8* %f1, align 1, !dbg !7974
  br label %if.end91, !dbg !7975

if.else80:                                        ; preds = %if.end60
  %83 = load %struct.SlideSplineCurvatureData*, %struct.SlideSplineCurvatureData** %slide_data, align 8, !dbg !7976
  %adjust_bezt81 = getelementptr inbounds %struct.SlideSplineCurvatureData, %struct.SlideSplineCurvatureData* %83, i32 0, i32 7, !dbg !7978
  %84 = load %struct.BezTriple*, %struct.BezTriple** %adjust_bezt81, align 8, !dbg !7978
  %f182 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %84, i32 0, i32 7, !dbg !7979
  %85 = load i8, i8* %f182, align 1, !dbg !7980
  %conv83 = zext i8 %85 to i32, !dbg !7980
  %or84 = or i32 %conv83, 1, !dbg !7980
  %conv85 = trunc i32 %or84 to i8, !dbg !7980
  store i8 %conv85, i8* %f182, align 1, !dbg !7980
  %86 = load %struct.SlideSplineCurvatureData*, %struct.SlideSplineCurvatureData** %slide_data, align 8, !dbg !7981
  %other_bezt86 = getelementptr inbounds %struct.SlideSplineCurvatureData, %struct.SlideSplineCurvatureData* %86, i32 0, i32 8, !dbg !7982
  %87 = load %struct.BezTriple*, %struct.BezTriple** %other_bezt86, align 8, !dbg !7982
  %f387 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %87, i32 0, i32 9, !dbg !7983
  %88 = load i8, i8* %f387, align 1, !dbg !7984
  %conv88 = zext i8 %88 to i32, !dbg !7984
  %or89 = or i32 %conv88, 1, !dbg !7984
  %conv90 = trunc i32 %or89 to i8, !dbg !7984
  store i8 %conv90, i8* %f387, align 1, !dbg !7984
  br label %if.end91

if.end91:                                         ; preds = %if.else80, %if.then71
  %89 = load %struct.MaskSpline*, %struct.MaskSpline** %spline, align 8, !dbg !7985
  %90 = load %struct.MaskLayer*, %struct.MaskLayer** %mask_layer, align 8, !dbg !7986
  %act_spline = getelementptr inbounds %struct.MaskLayer, %struct.MaskLayer* %90, i32 0, i32 5, !dbg !7987
  store %struct.MaskSpline* %89, %struct.MaskSpline** %act_spline, align 8, !dbg !7988
  %91 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point, align 8, !dbg !7989
  %92 = load %struct.MaskLayer*, %struct.MaskLayer** %mask_layer, align 8, !dbg !7990
  %act_point = getelementptr inbounds %struct.MaskLayer, %struct.MaskLayer* %92, i32 0, i32 6, !dbg !7991
  store %struct.MaskSplinePoint* %91, %struct.MaskSplinePoint** %act_point, align 8, !dbg !7992
  %93 = load %struct.Mask*, %struct.Mask** %mask, align 8, !dbg !7993
  call void @ED_mask_select_flush_all(%struct.Mask* %93), !dbg !7994
  %94 = load %struct.SlideSplineCurvatureData*, %struct.SlideSplineCurvatureData** %slide_data, align 8, !dbg !7995
  store %struct.SlideSplineCurvatureData* %94, %struct.SlideSplineCurvatureData** %retval, align 8, !dbg !7996
  br label %return, !dbg !7996

return:                                           ; preds = %if.end91, %if.then7, %if.then
  %95 = load %struct.SlideSplineCurvatureData*, %struct.SlideSplineCurvatureData** %retval, align 8, !dbg !7997
  ret %struct.SlideSplineCurvatureData* %95, !dbg !7997
}

declare dso_local %struct.BezTriple* @BKE_mask_spline_point_next_bezt(%struct.MaskSpline*, %struct.MaskSplinePoint*, %struct.MaskSplinePoint*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @slide_spline_solve_P2(float %u, float* %B, float* %P0, float* %P1, float* %P3, float* %solution) #0 !dbg !7998 {
entry:
  %u.addr = alloca float, align 4
  %B.addr = alloca float*, align 8
  %P0.addr = alloca float*, align 8
  %P1.addr = alloca float*, align 8
  %P3.addr = alloca float*, align 8
  %solution.addr = alloca float*, align 8
  %u2 = alloca float, align 4
  %u3 = alloca float, align 4
  %v = alloca float, align 4
  %v2 = alloca float, align 4
  %v3 = alloca float, align 4
  %inv_divider = alloca float, align 4
  %t = alloca float, align 4
  store float %u, float* %u.addr, align 4
  call void @llvm.dbg.declare(metadata float* %u.addr, metadata !8001, metadata !DIExpression()), !dbg !8002
  store float* %B, float** %B.addr, align 8
  call void @llvm.dbg.declare(metadata float** %B.addr, metadata !8003, metadata !DIExpression()), !dbg !8004
  store float* %P0, float** %P0.addr, align 8
  call void @llvm.dbg.declare(metadata float** %P0.addr, metadata !8005, metadata !DIExpression()), !dbg !8006
  store float* %P1, float** %P1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %P1.addr, metadata !8007, metadata !DIExpression()), !dbg !8008
  store float* %P3, float** %P3.addr, align 8
  call void @llvm.dbg.declare(metadata float** %P3.addr, metadata !8009, metadata !DIExpression()), !dbg !8010
  store float* %solution, float** %solution.addr, align 8
  call void @llvm.dbg.declare(metadata float** %solution.addr, metadata !8011, metadata !DIExpression()), !dbg !8012
  call void @llvm.dbg.declare(metadata float* %u2, metadata !8013, metadata !DIExpression()), !dbg !8014
  %0 = load float, float* %u.addr, align 4, !dbg !8015
  %1 = load float, float* %u.addr, align 4, !dbg !8016
  %mul = fmul float %0, %1, !dbg !8017
  store float %mul, float* %u2, align 4, !dbg !8014
  call void @llvm.dbg.declare(metadata float* %u3, metadata !8018, metadata !DIExpression()), !dbg !8019
  %2 = load float, float* %u.addr, align 4, !dbg !8020
  %3 = load float, float* %u.addr, align 4, !dbg !8021
  %mul1 = fmul float %2, %3, !dbg !8022
  %4 = load float, float* %u.addr, align 4, !dbg !8023
  %mul2 = fmul float %mul1, %4, !dbg !8024
  store float %mul2, float* %u3, align 4, !dbg !8019
  call void @llvm.dbg.declare(metadata float* %v, metadata !8025, metadata !DIExpression()), !dbg !8026
  %5 = load float, float* %u.addr, align 4, !dbg !8027
  %sub = fsub float 1.000000e+00, %5, !dbg !8028
  store float %sub, float* %v, align 4, !dbg !8026
  call void @llvm.dbg.declare(metadata float* %v2, metadata !8029, metadata !DIExpression()), !dbg !8030
  %6 = load float, float* %v, align 4, !dbg !8031
  %7 = load float, float* %v, align 4, !dbg !8032
  %mul3 = fmul float %6, %7, !dbg !8033
  store float %mul3, float* %v2, align 4, !dbg !8030
  call void @llvm.dbg.declare(metadata float* %v3, metadata !8034, metadata !DIExpression()), !dbg !8035
  %8 = load float, float* %v, align 4, !dbg !8036
  %9 = load float, float* %v, align 4, !dbg !8037
  %mul4 = fmul float %8, %9, !dbg !8038
  %10 = load float, float* %v, align 4, !dbg !8039
  %mul5 = fmul float %mul4, %10, !dbg !8040
  store float %mul5, float* %v3, align 4, !dbg !8035
  call void @llvm.dbg.declare(metadata float* %inv_divider, metadata !8041, metadata !DIExpression()), !dbg !8042
  %11 = load float, float* %v, align 4, !dbg !8043
  %mul6 = fmul float 3.000000e+00, %11, !dbg !8044
  %12 = load float, float* %u2, align 4, !dbg !8045
  %mul7 = fmul float %mul6, %12, !dbg !8046
  %div = fdiv float 1.000000e+00, %mul7, !dbg !8047
  store float %div, float* %inv_divider, align 4, !dbg !8042
  call void @llvm.dbg.declare(metadata float* %t, metadata !8048, metadata !DIExpression()), !dbg !8049
  %13 = load float, float* %v2, align 4, !dbg !8050
  %mul8 = fmul float 3.000000e+00, %13, !dbg !8051
  %14 = load float, float* %u.addr, align 4, !dbg !8052
  %mul9 = fmul float %mul8, %14, !dbg !8053
  store float %mul9, float* %t, align 4, !dbg !8049
  %15 = load float, float* %v3, align 4, !dbg !8054
  %16 = load float*, float** %P0.addr, align 8, !dbg !8055
  %arrayidx = getelementptr inbounds float, float* %16, i64 0, !dbg !8055
  %17 = load float, float* %arrayidx, align 4, !dbg !8055
  %mul10 = fmul float %15, %17, !dbg !8056
  %18 = load float, float* %t, align 4, !dbg !8057
  %19 = load float*, float** %P1.addr, align 8, !dbg !8058
  %arrayidx11 = getelementptr inbounds float, float* %19, i64 0, !dbg !8058
  %20 = load float, float* %arrayidx11, align 4, !dbg !8058
  %mul12 = fmul float %18, %20, !dbg !8059
  %add = fadd float %mul10, %mul12, !dbg !8060
  %21 = load float, float* %u3, align 4, !dbg !8061
  %22 = load float*, float** %P3.addr, align 8, !dbg !8062
  %arrayidx13 = getelementptr inbounds float, float* %22, i64 0, !dbg !8062
  %23 = load float, float* %arrayidx13, align 4, !dbg !8062
  %mul14 = fmul float %21, %23, !dbg !8063
  %add15 = fadd float %add, %mul14, !dbg !8064
  %24 = load float*, float** %B.addr, align 8, !dbg !8065
  %arrayidx16 = getelementptr inbounds float, float* %24, i64 0, !dbg !8065
  %25 = load float, float* %arrayidx16, align 4, !dbg !8065
  %sub17 = fsub float %add15, %25, !dbg !8066
  %fneg = fneg float %sub17, !dbg !8067
  %26 = load float, float* %inv_divider, align 4, !dbg !8068
  %mul18 = fmul float %fneg, %26, !dbg !8069
  %27 = load float*, float** %solution.addr, align 8, !dbg !8070
  %arrayidx19 = getelementptr inbounds float, float* %27, i64 0, !dbg !8070
  store float %mul18, float* %arrayidx19, align 4, !dbg !8071
  %28 = load float, float* %v3, align 4, !dbg !8072
  %29 = load float*, float** %P0.addr, align 8, !dbg !8073
  %arrayidx20 = getelementptr inbounds float, float* %29, i64 1, !dbg !8073
  %30 = load float, float* %arrayidx20, align 4, !dbg !8073
  %mul21 = fmul float %28, %30, !dbg !8074
  %31 = load float, float* %t, align 4, !dbg !8075
  %32 = load float*, float** %P1.addr, align 8, !dbg !8076
  %arrayidx22 = getelementptr inbounds float, float* %32, i64 1, !dbg !8076
  %33 = load float, float* %arrayidx22, align 4, !dbg !8076
  %mul23 = fmul float %31, %33, !dbg !8077
  %add24 = fadd float %mul21, %mul23, !dbg !8078
  %34 = load float, float* %u3, align 4, !dbg !8079
  %35 = load float*, float** %P3.addr, align 8, !dbg !8080
  %arrayidx25 = getelementptr inbounds float, float* %35, i64 1, !dbg !8080
  %36 = load float, float* %arrayidx25, align 4, !dbg !8080
  %mul26 = fmul float %34, %36, !dbg !8081
  %add27 = fadd float %add24, %mul26, !dbg !8082
  %37 = load float*, float** %B.addr, align 8, !dbg !8083
  %arrayidx28 = getelementptr inbounds float, float* %37, i64 1, !dbg !8083
  %38 = load float, float* %arrayidx28, align 4, !dbg !8083
  %sub29 = fsub float %add27, %38, !dbg !8084
  %fneg30 = fneg float %sub29, !dbg !8085
  %39 = load float, float* %inv_divider, align 4, !dbg !8086
  %mul31 = fmul float %fneg30, %39, !dbg !8087
  %40 = load float*, float** %solution.addr, align 8, !dbg !8088
  %arrayidx32 = getelementptr inbounds float, float* %40, i64 1, !dbg !8088
  store float %mul31, float* %arrayidx32, align 4, !dbg !8089
  ret void, !dbg !8090
}

declare dso_local void @interp_v2_v2v2(float*, float*, float*, float) #2

; Function Attrs: noinline nounwind uwtable
define internal void @slide_spline_solve_P1(float %u, float* %B, float* %P0, float* %P2, float* %P3, float* %solution) #0 !dbg !8091 {
entry:
  %u.addr = alloca float, align 4
  %B.addr = alloca float*, align 8
  %P0.addr = alloca float*, align 8
  %P2.addr = alloca float*, align 8
  %P3.addr = alloca float*, align 8
  %solution.addr = alloca float*, align 8
  %u2 = alloca float, align 4
  %u3 = alloca float, align 4
  %v = alloca float, align 4
  %v2 = alloca float, align 4
  %v3 = alloca float, align 4
  %inv_divider = alloca float, align 4
  %t = alloca float, align 4
  store float %u, float* %u.addr, align 4
  call void @llvm.dbg.declare(metadata float* %u.addr, metadata !8092, metadata !DIExpression()), !dbg !8093
  store float* %B, float** %B.addr, align 8
  call void @llvm.dbg.declare(metadata float** %B.addr, metadata !8094, metadata !DIExpression()), !dbg !8095
  store float* %P0, float** %P0.addr, align 8
  call void @llvm.dbg.declare(metadata float** %P0.addr, metadata !8096, metadata !DIExpression()), !dbg !8097
  store float* %P2, float** %P2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %P2.addr, metadata !8098, metadata !DIExpression()), !dbg !8099
  store float* %P3, float** %P3.addr, align 8
  call void @llvm.dbg.declare(metadata float** %P3.addr, metadata !8100, metadata !DIExpression()), !dbg !8101
  store float* %solution, float** %solution.addr, align 8
  call void @llvm.dbg.declare(metadata float** %solution.addr, metadata !8102, metadata !DIExpression()), !dbg !8103
  call void @llvm.dbg.declare(metadata float* %u2, metadata !8104, metadata !DIExpression()), !dbg !8105
  %0 = load float, float* %u.addr, align 4, !dbg !8106
  %1 = load float, float* %u.addr, align 4, !dbg !8107
  %mul = fmul float %0, %1, !dbg !8108
  store float %mul, float* %u2, align 4, !dbg !8105
  call void @llvm.dbg.declare(metadata float* %u3, metadata !8109, metadata !DIExpression()), !dbg !8110
  %2 = load float, float* %u.addr, align 4, !dbg !8111
  %3 = load float, float* %u.addr, align 4, !dbg !8112
  %mul1 = fmul float %2, %3, !dbg !8113
  %4 = load float, float* %u.addr, align 4, !dbg !8114
  %mul2 = fmul float %mul1, %4, !dbg !8115
  store float %mul2, float* %u3, align 4, !dbg !8110
  call void @llvm.dbg.declare(metadata float* %v, metadata !8116, metadata !DIExpression()), !dbg !8117
  %5 = load float, float* %u.addr, align 4, !dbg !8118
  %sub = fsub float 1.000000e+00, %5, !dbg !8119
  store float %sub, float* %v, align 4, !dbg !8117
  call void @llvm.dbg.declare(metadata float* %v2, metadata !8120, metadata !DIExpression()), !dbg !8121
  %6 = load float, float* %v, align 4, !dbg !8122
  %7 = load float, float* %v, align 4, !dbg !8123
  %mul3 = fmul float %6, %7, !dbg !8124
  store float %mul3, float* %v2, align 4, !dbg !8121
  call void @llvm.dbg.declare(metadata float* %v3, metadata !8125, metadata !DIExpression()), !dbg !8126
  %8 = load float, float* %v, align 4, !dbg !8127
  %9 = load float, float* %v, align 4, !dbg !8128
  %mul4 = fmul float %8, %9, !dbg !8129
  %10 = load float, float* %v, align 4, !dbg !8130
  %mul5 = fmul float %mul4, %10, !dbg !8131
  store float %mul5, float* %v3, align 4, !dbg !8126
  call void @llvm.dbg.declare(metadata float* %inv_divider, metadata !8132, metadata !DIExpression()), !dbg !8133
  %11 = load float, float* %v2, align 4, !dbg !8134
  %mul6 = fmul float 3.000000e+00, %11, !dbg !8135
  %12 = load float, float* %u.addr, align 4, !dbg !8136
  %mul7 = fmul float %mul6, %12, !dbg !8137
  %div = fdiv float 1.000000e+00, %mul7, !dbg !8138
  store float %div, float* %inv_divider, align 4, !dbg !8133
  call void @llvm.dbg.declare(metadata float* %t, metadata !8139, metadata !DIExpression()), !dbg !8140
  %13 = load float, float* %v, align 4, !dbg !8141
  %mul8 = fmul float 3.000000e+00, %13, !dbg !8142
  %14 = load float, float* %u2, align 4, !dbg !8143
  %mul9 = fmul float %mul8, %14, !dbg !8144
  store float %mul9, float* %t, align 4, !dbg !8140
  %15 = load float, float* %v3, align 4, !dbg !8145
  %16 = load float*, float** %P0.addr, align 8, !dbg !8146
  %arrayidx = getelementptr inbounds float, float* %16, i64 0, !dbg !8146
  %17 = load float, float* %arrayidx, align 4, !dbg !8146
  %mul10 = fmul float %15, %17, !dbg !8147
  %18 = load float, float* %t, align 4, !dbg !8148
  %19 = load float*, float** %P2.addr, align 8, !dbg !8149
  %arrayidx11 = getelementptr inbounds float, float* %19, i64 0, !dbg !8149
  %20 = load float, float* %arrayidx11, align 4, !dbg !8149
  %mul12 = fmul float %18, %20, !dbg !8150
  %add = fadd float %mul10, %mul12, !dbg !8151
  %21 = load float, float* %u3, align 4, !dbg !8152
  %22 = load float*, float** %P3.addr, align 8, !dbg !8153
  %arrayidx13 = getelementptr inbounds float, float* %22, i64 0, !dbg !8153
  %23 = load float, float* %arrayidx13, align 4, !dbg !8153
  %mul14 = fmul float %21, %23, !dbg !8154
  %add15 = fadd float %add, %mul14, !dbg !8155
  %24 = load float*, float** %B.addr, align 8, !dbg !8156
  %arrayidx16 = getelementptr inbounds float, float* %24, i64 0, !dbg !8156
  %25 = load float, float* %arrayidx16, align 4, !dbg !8156
  %sub17 = fsub float %add15, %25, !dbg !8157
  %fneg = fneg float %sub17, !dbg !8158
  %26 = load float, float* %inv_divider, align 4, !dbg !8159
  %mul18 = fmul float %fneg, %26, !dbg !8160
  %27 = load float*, float** %solution.addr, align 8, !dbg !8161
  %arrayidx19 = getelementptr inbounds float, float* %27, i64 0, !dbg !8161
  store float %mul18, float* %arrayidx19, align 4, !dbg !8162
  %28 = load float, float* %v3, align 4, !dbg !8163
  %29 = load float*, float** %P0.addr, align 8, !dbg !8164
  %arrayidx20 = getelementptr inbounds float, float* %29, i64 1, !dbg !8164
  %30 = load float, float* %arrayidx20, align 4, !dbg !8164
  %mul21 = fmul float %28, %30, !dbg !8165
  %31 = load float, float* %t, align 4, !dbg !8166
  %32 = load float*, float** %P2.addr, align 8, !dbg !8167
  %arrayidx22 = getelementptr inbounds float, float* %32, i64 1, !dbg !8167
  %33 = load float, float* %arrayidx22, align 4, !dbg !8167
  %mul23 = fmul float %31, %33, !dbg !8168
  %add24 = fadd float %mul21, %mul23, !dbg !8169
  %34 = load float, float* %u3, align 4, !dbg !8170
  %35 = load float*, float** %P3.addr, align 8, !dbg !8171
  %arrayidx25 = getelementptr inbounds float, float* %35, i64 1, !dbg !8171
  %36 = load float, float* %arrayidx25, align 4, !dbg !8171
  %mul26 = fmul float %34, %36, !dbg !8172
  %add27 = fadd float %add24, %mul26, !dbg !8173
  %37 = load float*, float** %B.addr, align 8, !dbg !8174
  %arrayidx28 = getelementptr inbounds float, float* %37, i64 1, !dbg !8174
  %38 = load float, float* %arrayidx28, align 4, !dbg !8174
  %sub29 = fsub float %add27, %38, !dbg !8175
  %fneg30 = fneg float %sub29, !dbg !8176
  %39 = load float, float* %inv_divider, align 4, !dbg !8177
  %mul31 = fmul float %fneg30, %39, !dbg !8178
  %40 = load float*, float** %solution.addr, align 8, !dbg !8179
  %arrayidx32 = getelementptr inbounds float, float* %40, i64 1, !dbg !8179
  store float %mul31, float* %arrayidx32, align 4, !dbg !8180
  ret void, !dbg !8181
}

; Function Attrs: noinline nounwind uwtable
define internal void @free_slide_spline_curvature_data(%struct.SlideSplineCurvatureData* %slide_data) #0 !dbg !8182 {
entry:
  %slide_data.addr = alloca %struct.SlideSplineCurvatureData*, align 8
  store %struct.SlideSplineCurvatureData* %slide_data, %struct.SlideSplineCurvatureData** %slide_data.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SlideSplineCurvatureData** %slide_data.addr, metadata !8185, metadata !DIExpression()), !dbg !8186
  %0 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !8187
  %1 = load %struct.SlideSplineCurvatureData*, %struct.SlideSplineCurvatureData** %slide_data.addr, align 8, !dbg !8188
  %2 = bitcast %struct.SlideSplineCurvatureData* %1 to i8*, !dbg !8188
  call void %0(i8* %2), !dbg !8187
  ret void, !dbg !8189
}

; Function Attrs: noinline nounwind uwtable
define internal void @cancel_slide_spline_curvature(%struct.SlideSplineCurvatureData* %slide_data) #0 !dbg !8190 {
entry:
  %slide_data.addr = alloca %struct.SlideSplineCurvatureData*, align 8
  store %struct.SlideSplineCurvatureData* %slide_data, %struct.SlideSplineCurvatureData** %slide_data.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SlideSplineCurvatureData** %slide_data.addr, metadata !8191, metadata !DIExpression()), !dbg !8192
  %0 = load %struct.SlideSplineCurvatureData*, %struct.SlideSplineCurvatureData** %slide_data.addr, align 8, !dbg !8193
  %adjust_bezt = getelementptr inbounds %struct.SlideSplineCurvatureData, %struct.SlideSplineCurvatureData* %0, i32 0, i32 7, !dbg !8194
  %1 = load %struct.BezTriple*, %struct.BezTriple** %adjust_bezt, align 8, !dbg !8194
  %2 = load %struct.SlideSplineCurvatureData*, %struct.SlideSplineCurvatureData** %slide_data.addr, align 8, !dbg !8195
  %bezt_backup = getelementptr inbounds %struct.SlideSplineCurvatureData, %struct.SlideSplineCurvatureData* %2, i32 0, i32 9, !dbg !8196
  %3 = bitcast %struct.BezTriple* %1 to i8*, !dbg !8196
  %4 = bitcast %struct.BezTriple* %bezt_backup to i8*, !dbg !8196
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 8 %4, i64 72, i1 false), !dbg !8196
  %5 = load %struct.SlideSplineCurvatureData*, %struct.SlideSplineCurvatureData** %slide_data.addr, align 8, !dbg !8197
  %other_bezt = getelementptr inbounds %struct.SlideSplineCurvatureData, %struct.SlideSplineCurvatureData* %5, i32 0, i32 8, !dbg !8198
  %6 = load %struct.BezTriple*, %struct.BezTriple** %other_bezt, align 8, !dbg !8198
  %7 = load %struct.SlideSplineCurvatureData*, %struct.SlideSplineCurvatureData** %slide_data.addr, align 8, !dbg !8199
  %other_bezt_backup = getelementptr inbounds %struct.SlideSplineCurvatureData, %struct.SlideSplineCurvatureData* %7, i32 0, i32 10, !dbg !8200
  %8 = bitcast %struct.BezTriple* %6 to i8*, !dbg !8200
  %9 = bitcast %struct.BezTriple* %other_bezt_backup to i8*, !dbg !8200
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %8, i8* align 8 %9, i64 72, i1 false), !dbg !8200
  ret void, !dbg !8201
}

declare dso_local zeroext i8 @ED_mask_spline_select_check(%struct.MaskSpline*) #2

declare dso_local void @BLI_remlink(%struct.ListBase*, i8*) #2

declare dso_local void @BKE_mask_layer_shape_changed_remove(%struct.MaskLayer*, i32, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal void @delete_feather_points(%struct.MaskSplinePoint* %point) #0 !dbg !8202 {
entry:
  %point.addr = alloca %struct.MaskSplinePoint*, align 8
  %i = alloca i32, align 4
  %count = alloca i32, align 4
  %new_uw = alloca %struct.MaskSplinePointUW*, align 8
  %j = alloca i32, align 4
  store %struct.MaskSplinePoint* %point, %struct.MaskSplinePoint** %point.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MaskSplinePoint** %point.addr, metadata !8205, metadata !DIExpression()), !dbg !8206
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8207, metadata !DIExpression()), !dbg !8208
  call void @llvm.dbg.declare(metadata i32* %count, metadata !8209, metadata !DIExpression()), !dbg !8210
  store i32 0, i32* %count, align 4, !dbg !8210
  %0 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point.addr, align 8, !dbg !8211
  %tot_uw = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %0, i32 0, i32 2, !dbg !8213
  %1 = load i32, i32* %tot_uw, align 4, !dbg !8213
  %tobool = icmp ne i32 %1, 0, !dbg !8211
  br i1 %tobool, label %if.end, label %if.then, !dbg !8214

if.then:                                          ; preds = %entry
  br label %if.end37, !dbg !8215

if.end:                                           ; preds = %entry
  store i32 0, i32* %i, align 4, !dbg !8216
  br label %for.cond, !dbg !8218

for.cond:                                         ; preds = %for.inc, %if.end
  %2 = load i32, i32* %i, align 4, !dbg !8219
  %3 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point.addr, align 8, !dbg !8221
  %tot_uw1 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %3, i32 0, i32 2, !dbg !8222
  %4 = load i32, i32* %tot_uw1, align 4, !dbg !8222
  %cmp = icmp slt i32 %2, %4, !dbg !8223
  br i1 %cmp, label %for.body, label %for.end, !dbg !8224

for.body:                                         ; preds = %for.cond
  %5 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point.addr, align 8, !dbg !8225
  %uw = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %5, i32 0, i32 3, !dbg !8228
  %6 = load %struct.MaskSplinePointUW*, %struct.MaskSplinePointUW** %uw, align 8, !dbg !8228
  %7 = load i32, i32* %i, align 4, !dbg !8229
  %idxprom = sext i32 %7 to i64, !dbg !8225
  %arrayidx = getelementptr inbounds %struct.MaskSplinePointUW, %struct.MaskSplinePointUW* %6, i64 %idxprom, !dbg !8225
  %flag = getelementptr inbounds %struct.MaskSplinePointUW, %struct.MaskSplinePointUW* %arrayidx, i32 0, i32 2, !dbg !8230
  %8 = load i32, i32* %flag, align 4, !dbg !8230
  %and = and i32 %8, 1, !dbg !8231
  %cmp2 = icmp eq i32 %and, 0, !dbg !8232
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !8233

if.then3:                                         ; preds = %for.body
  %9 = load i32, i32* %count, align 4, !dbg !8234
  %inc = add nsw i32 %9, 1, !dbg !8234
  store i32 %inc, i32* %count, align 4, !dbg !8234
  br label %if.end4, !dbg !8235

if.end4:                                          ; preds = %if.then3, %for.body
  br label %for.inc, !dbg !8236

for.inc:                                          ; preds = %if.end4
  %10 = load i32, i32* %i, align 4, !dbg !8237
  %inc5 = add nsw i32 %10, 1, !dbg !8237
  store i32 %inc5, i32* %i, align 4, !dbg !8237
  br label %for.cond, !dbg !8238, !llvm.loop !8239

for.end:                                          ; preds = %for.cond
  %11 = load i32, i32* %count, align 4, !dbg !8241
  %cmp6 = icmp eq i32 %11, 0, !dbg !8243
  br i1 %cmp6, label %if.then7, label %if.else, !dbg !8244

if.then7:                                         ; preds = %for.end
  %12 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !8245
  %13 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point.addr, align 8, !dbg !8247
  %uw8 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %13, i32 0, i32 3, !dbg !8248
  %14 = load %struct.MaskSplinePointUW*, %struct.MaskSplinePointUW** %uw8, align 8, !dbg !8248
  %15 = bitcast %struct.MaskSplinePointUW* %14 to i8*, !dbg !8247
  call void %12(i8* %15), !dbg !8245
  %16 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point.addr, align 8, !dbg !8249
  %uw9 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %16, i32 0, i32 3, !dbg !8250
  store %struct.MaskSplinePointUW* null, %struct.MaskSplinePointUW** %uw9, align 8, !dbg !8251
  %17 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point.addr, align 8, !dbg !8252
  %tot_uw10 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %17, i32 0, i32 2, !dbg !8253
  store i32 0, i32* %tot_uw10, align 4, !dbg !8254
  br label %if.end37, !dbg !8255

if.else:                                          ; preds = %for.end
  call void @llvm.dbg.declare(metadata %struct.MaskSplinePointUW** %new_uw, metadata !8256, metadata !DIExpression()), !dbg !8258
  call void @llvm.dbg.declare(metadata i32* %j, metadata !8259, metadata !DIExpression()), !dbg !8260
  store i32 0, i32* %j, align 4, !dbg !8260
  %18 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !8261
  %19 = load i32, i32* %count, align 4, !dbg !8262
  %conv = sext i32 %19 to i64, !dbg !8262
  %mul = mul i64 %conv, 12, !dbg !8263
  %call = call i8* %18(i64 %mul, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.88, i64 0, i64 0)), !dbg !8261
  %20 = bitcast i8* %call to %struct.MaskSplinePointUW*, !dbg !8261
  store %struct.MaskSplinePointUW* %20, %struct.MaskSplinePointUW** %new_uw, align 8, !dbg !8264
  store i32 0, i32* %i, align 4, !dbg !8265
  br label %for.cond11, !dbg !8267

for.cond11:                                       ; preds = %for.inc31, %if.else
  %21 = load i32, i32* %i, align 4, !dbg !8268
  %22 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point.addr, align 8, !dbg !8270
  %tot_uw12 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %22, i32 0, i32 2, !dbg !8271
  %23 = load i32, i32* %tot_uw12, align 4, !dbg !8271
  %cmp13 = icmp slt i32 %21, %23, !dbg !8272
  br i1 %cmp13, label %for.body15, label %for.end33, !dbg !8273

for.body15:                                       ; preds = %for.cond11
  %24 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point.addr, align 8, !dbg !8274
  %uw16 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %24, i32 0, i32 3, !dbg !8277
  %25 = load %struct.MaskSplinePointUW*, %struct.MaskSplinePointUW** %uw16, align 8, !dbg !8277
  %26 = load i32, i32* %i, align 4, !dbg !8278
  %idxprom17 = sext i32 %26 to i64, !dbg !8274
  %arrayidx18 = getelementptr inbounds %struct.MaskSplinePointUW, %struct.MaskSplinePointUW* %25, i64 %idxprom17, !dbg !8274
  %flag19 = getelementptr inbounds %struct.MaskSplinePointUW, %struct.MaskSplinePointUW* %arrayidx18, i32 0, i32 2, !dbg !8279
  %27 = load i32, i32* %flag19, align 4, !dbg !8279
  %and20 = and i32 %27, 1, !dbg !8280
  %cmp21 = icmp eq i32 %and20, 0, !dbg !8281
  br i1 %cmp21, label %if.then23, label %if.end30, !dbg !8282

if.then23:                                        ; preds = %for.body15
  %28 = load %struct.MaskSplinePointUW*, %struct.MaskSplinePointUW** %new_uw, align 8, !dbg !8283
  %29 = load i32, i32* %j, align 4, !dbg !8285
  %inc24 = add nsw i32 %29, 1, !dbg !8285
  store i32 %inc24, i32* %j, align 4, !dbg !8285
  %idxprom25 = sext i32 %29 to i64, !dbg !8283
  %arrayidx26 = getelementptr inbounds %struct.MaskSplinePointUW, %struct.MaskSplinePointUW* %28, i64 %idxprom25, !dbg !8283
  %30 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point.addr, align 8, !dbg !8286
  %uw27 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %30, i32 0, i32 3, !dbg !8287
  %31 = load %struct.MaskSplinePointUW*, %struct.MaskSplinePointUW** %uw27, align 8, !dbg !8287
  %32 = load i32, i32* %i, align 4, !dbg !8288
  %idxprom28 = sext i32 %32 to i64, !dbg !8286
  %arrayidx29 = getelementptr inbounds %struct.MaskSplinePointUW, %struct.MaskSplinePointUW* %31, i64 %idxprom28, !dbg !8286
  %33 = bitcast %struct.MaskSplinePointUW* %arrayidx26 to i8*, !dbg !8286
  %34 = bitcast %struct.MaskSplinePointUW* %arrayidx29 to i8*, !dbg !8286
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %33, i8* align 4 %34, i64 12, i1 false), !dbg !8286
  br label %if.end30, !dbg !8289

if.end30:                                         ; preds = %if.then23, %for.body15
  br label %for.inc31, !dbg !8290

for.inc31:                                        ; preds = %if.end30
  %35 = load i32, i32* %i, align 4, !dbg !8291
  %inc32 = add nsw i32 %35, 1, !dbg !8291
  store i32 %inc32, i32* %i, align 4, !dbg !8291
  br label %for.cond11, !dbg !8292, !llvm.loop !8293

for.end33:                                        ; preds = %for.cond11
  %36 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !8295
  %37 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point.addr, align 8, !dbg !8296
  %uw34 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %37, i32 0, i32 3, !dbg !8297
  %38 = load %struct.MaskSplinePointUW*, %struct.MaskSplinePointUW** %uw34, align 8, !dbg !8297
  %39 = bitcast %struct.MaskSplinePointUW* %38 to i8*, !dbg !8296
  call void %36(i8* %39), !dbg !8295
  %40 = load %struct.MaskSplinePointUW*, %struct.MaskSplinePointUW** %new_uw, align 8, !dbg !8298
  %41 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point.addr, align 8, !dbg !8299
  %uw35 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %41, i32 0, i32 3, !dbg !8300
  store %struct.MaskSplinePointUW* %40, %struct.MaskSplinePointUW** %uw35, align 8, !dbg !8301
  %42 = load i32, i32* %count, align 4, !dbg !8302
  %43 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point.addr, align 8, !dbg !8303
  %tot_uw36 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %43, i32 0, i32 2, !dbg !8304
  store i32 %42, i32* %tot_uw36, align 4, !dbg !8305
  br label %if.end37

if.end37:                                         ; preds = %if.then, %for.end33, %if.then7
  ret void, !dbg !8306
}

declare dso_local void @BKE_mask_point_free(%struct.MaskSplinePoint*) #2

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @BLI_listbase_is_empty(%struct.ListBase* %lb) #0 !dbg !8307 {
entry:
  %lb.addr = alloca %struct.ListBase*, align 8
  store %struct.ListBase* %lb, %struct.ListBase** %lb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %lb.addr, metadata !8313, metadata !DIExpression()), !dbg !8314
  %0 = load %struct.ListBase*, %struct.ListBase** %lb.addr, align 8, !dbg !8315
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %0, i32 0, i32 0, !dbg !8316
  %1 = load i8*, i8** %first, align 8, !dbg !8316
  %cmp = icmp eq i8* %1, null, !dbg !8317
  %conv = zext i1 %cmp to i32, !dbg !8317
  %conv1 = trunc i32 %conv to i8, !dbg !8318
  ret i8 %conv1, !dbg !8319
}

declare dso_local void @BKE_mask_layer_free_shapes(%struct.MaskLayer*) #2

declare dso_local void @BKE_mask_update_display(%struct.Mask*, float) #2

declare dso_local void @BKE_mask_spline_direction_switch(%struct.MaskLayer*, %struct.MaskSpline*) #2

declare dso_local void @BKE_mask_calc_handle_point_auto(%struct.MaskSpline*, %struct.MaskSplinePoint*, i8 zeroext) #2

declare dso_local i32 @RNA_enum_get(%struct.PointerRNA*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @sub_v3_v3v3(float* %r, float* %a, float* %b) #0 !dbg !8320 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !8321, metadata !DIExpression()), !dbg !8322
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !8323, metadata !DIExpression()), !dbg !8324
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !8325, metadata !DIExpression()), !dbg !8326
  %0 = load float*, float** %a.addr, align 8, !dbg !8327
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !8327
  %1 = load float, float* %arrayidx, align 4, !dbg !8327
  %2 = load float*, float** %b.addr, align 8, !dbg !8328
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !8328
  %3 = load float, float* %arrayidx1, align 4, !dbg !8328
  %sub = fsub float %1, %3, !dbg !8329
  %4 = load float*, float** %r.addr, align 8, !dbg !8330
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 0, !dbg !8330
  store float %sub, float* %arrayidx2, align 4, !dbg !8331
  %5 = load float*, float** %a.addr, align 8, !dbg !8332
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 1, !dbg !8332
  %6 = load float, float* %arrayidx3, align 4, !dbg !8332
  %7 = load float*, float** %b.addr, align 8, !dbg !8333
  %arrayidx4 = getelementptr inbounds float, float* %7, i64 1, !dbg !8333
  %8 = load float, float* %arrayidx4, align 4, !dbg !8333
  %sub5 = fsub float %6, %8, !dbg !8334
  %9 = load float*, float** %r.addr, align 8, !dbg !8335
  %arrayidx6 = getelementptr inbounds float, float* %9, i64 1, !dbg !8335
  store float %sub5, float* %arrayidx6, align 4, !dbg !8336
  %10 = load float*, float** %a.addr, align 8, !dbg !8337
  %arrayidx7 = getelementptr inbounds float, float* %10, i64 2, !dbg !8337
  %11 = load float, float* %arrayidx7, align 4, !dbg !8337
  %12 = load float*, float** %b.addr, align 8, !dbg !8338
  %arrayidx8 = getelementptr inbounds float, float* %12, i64 2, !dbg !8338
  %13 = load float, float* %arrayidx8, align 4, !dbg !8338
  %sub9 = fsub float %11, %13, !dbg !8339
  %14 = load float*, float** %r.addr, align 8, !dbg !8340
  %arrayidx10 = getelementptr inbounds float, float* %14, i64 2, !dbg !8340
  store float %sub9, float* %arrayidx10, align 4, !dbg !8341
  ret void, !dbg !8342
}

; Function Attrs: noinline nounwind uwtable
define internal void @add_v3_v3v3(float* %r, float* %a, float* %b) #0 !dbg !8343 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !8344, metadata !DIExpression()), !dbg !8345
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !8346, metadata !DIExpression()), !dbg !8347
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !8348, metadata !DIExpression()), !dbg !8349
  %0 = load float*, float** %a.addr, align 8, !dbg !8350
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !8350
  %1 = load float, float* %arrayidx, align 4, !dbg !8350
  %2 = load float*, float** %b.addr, align 8, !dbg !8351
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !8351
  %3 = load float, float* %arrayidx1, align 4, !dbg !8351
  %add = fadd float %1, %3, !dbg !8352
  %4 = load float*, float** %r.addr, align 8, !dbg !8353
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 0, !dbg !8353
  store float %add, float* %arrayidx2, align 4, !dbg !8354
  %5 = load float*, float** %a.addr, align 8, !dbg !8355
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 1, !dbg !8355
  %6 = load float, float* %arrayidx3, align 4, !dbg !8355
  %7 = load float*, float** %b.addr, align 8, !dbg !8356
  %arrayidx4 = getelementptr inbounds float, float* %7, i64 1, !dbg !8356
  %8 = load float, float* %arrayidx4, align 4, !dbg !8356
  %add5 = fadd float %6, %8, !dbg !8357
  %9 = load float*, float** %r.addr, align 8, !dbg !8358
  %arrayidx6 = getelementptr inbounds float, float* %9, i64 1, !dbg !8358
  store float %add5, float* %arrayidx6, align 4, !dbg !8359
  %10 = load float*, float** %a.addr, align 8, !dbg !8360
  %arrayidx7 = getelementptr inbounds float, float* %10, i64 2, !dbg !8360
  %11 = load float, float* %arrayidx7, align 4, !dbg !8360
  %12 = load float*, float** %b.addr, align 8, !dbg !8361
  %arrayidx8 = getelementptr inbounds float, float* %12, i64 2, !dbg !8361
  %13 = load float, float* %arrayidx8, align 4, !dbg !8361
  %add9 = fadd float %11, %13, !dbg !8362
  %14 = load float*, float** %r.addr, align 8, !dbg !8363
  %arrayidx10 = getelementptr inbounds float, float* %14, i64 2, !dbg !8363
  store float %add9, float* %arrayidx10, align 4, !dbg !8364
  ret void, !dbg !8365
}

declare dso_local void @ED_mask_layer_select_set(%struct.MaskLayer*, i8 zeroext) #2

declare dso_local zeroext i8 @ED_mask_layer_select_check(%struct.MaskLayer*) #2

declare dso_local void @BKE_mask_layer_active_set(%struct.Mask*, %struct.MaskLayer*) #2

declare dso_local i8* @BLI_findlink(%struct.ListBase*, i32) #2

declare dso_local void @BLI_insertlinkbefore(%struct.ListBase*, i8*, i8*) #2

declare dso_local void @BLI_insertlinkafter(%struct.ListBase*, i8*, i8*) #2

declare dso_local %struct.MaskSpline* @BKE_mask_spline_add(%struct.MaskLayer*) #2

declare dso_local i32 @BKE_mask_layer_shape_spline_to_index(%struct.MaskLayer*, %struct.MaskSpline*) #2

declare dso_local void @BKE_mask_layer_shape_changed_add(%struct.MaskLayer*, i32, i8 zeroext, i8 zeroext) #2

declare dso_local void @BKE_mask_clipboard_copy_from_layer(%struct.MaskLayer*) #2

declare dso_local void @BKE_mask_clipboard_paste_to_layer(%struct.Main*, %struct.MaskLayer*) #2

declare dso_local zeroext i8 @BKE_mask_clipboard_is_empty() #2

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind willreturn }
attributes #5 = { nounwind }

!llvm.dbg.cu = !{!1817}
!llvm.module.flags = !{!2265, !2266, !2267}
!llvm.ident = !{!2268}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "editcurve_handle_type_items", scope: !2, file: !3, line: 1914, type: !2264, isLocal: true, isDefinition: true)
!2 = distinct !DISubprogram(name: "MASK_OT_handle_type_set", scope: !3, file: !3, line: 1912, type: !4, scopeLine: 1913, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1817, retainedNodes: !2254)
!3 = !DIFile(filename: "blender/source/blender/editors/mask/mask_ops.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!4 = !DISubroutineType(types: !5)
!5 = !{null, !6}
!6 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!7 = !DIDerivedType(tag: DW_TAG_typedef, name: "wmOperatorType", file: !8, line: 568, baseType: !9)
!8 = !DIFile(filename: "blender/source/blender/windowmanager/WM_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!9 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmOperatorType", file: !8, line: 508, size: 1536, elements: !10)
!10 = !{!11, !15, !16, !17, !18, !1743, !1747, !1753, !1757, !1758, !1762, !1763, !1764, !1765, !1769, !1770, !1785, !1786, !1790, !1816}
!11 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !9, file: !8, line: 509, baseType: !12, size: 64)
!12 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13, size: 64)
!13 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !14)
!14 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !9, file: !8, line: 510, baseType: !12, size: 64, offset: 64)
!16 = !DIDerivedType(tag: DW_TAG_member, name: "translation_context", scope: !9, file: !8, line: 511, baseType: !12, size: 64, offset: 128)
!17 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !9, file: !8, line: 512, baseType: !12, size: 64, offset: 192)
!18 = !DIDerivedType(tag: DW_TAG_member, name: "exec", scope: !9, file: !8, line: 518, baseType: !19, size: 64, offset: 256)
!19 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !20, size: 64)
!20 = !DISubroutineType(types: !21)
!21 = !{!22, !23, !26}
!22 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!23 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !24, size: 64)
!24 = !DICompositeType(tag: DW_TAG_structure_type, name: "bContext", file: !25, line: 44, flags: DIFlagFwdDecl)
!25 = !DIFile(filename: "blender/source/blender/makesrna/RNA_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!26 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !27, size: 64)
!27 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmOperator", file: !28, line: 328, size: 1344, elements: !29)
!28 = !DIFile(filename: "blender/source/blender/makesdna/DNA_windowmanager_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!29 = !{!30, !31, !32, !36, !68, !70, !71, !72, !84, !1736, !1737, !1738, !1741, !1742}
!30 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !27, file: !28, line: 329, baseType: !26, size: 64)
!31 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !27, file: !28, line: 329, baseType: !26, size: 64, offset: 64)
!32 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !27, file: !28, line: 332, baseType: !33, size: 512, offset: 128)
!33 = !DICompositeType(tag: DW_TAG_array_type, baseType: !14, size: 512, elements: !34)
!34 = !{!35}
!35 = !DISubrange(count: 64)
!36 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !27, file: !28, line: 333, baseType: !37, size: 64, offset: 640)
!37 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !38, size: 64)
!38 = !DIDerivedType(tag: DW_TAG_typedef, name: "IDProperty", file: !39, line: 75, baseType: !40)
!39 = !DIFile(filename: "blender/source/blender/makesdna/DNA_ID.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!40 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IDProperty", file: !39, line: 62, size: 1024, elements: !41)
!41 = !{!42, !44, !45, !46, !47, !49, !50, !51, !66, !67}
!42 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !40, file: !39, line: 63, baseType: !43, size: 64)
!43 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !40, size: 64)
!44 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !40, file: !39, line: 63, baseType: !43, size: 64, offset: 64)
!45 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !40, file: !39, line: 64, baseType: !14, size: 8, offset: 128)
!46 = !DIDerivedType(tag: DW_TAG_member, name: "subtype", scope: !40, file: !39, line: 64, baseType: !14, size: 8, offset: 136)
!47 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !40, file: !39, line: 65, baseType: !48, size: 16, offset: 144)
!48 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!49 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !40, file: !39, line: 66, baseType: !33, size: 512, offset: 160)
!50 = !DIDerivedType(tag: DW_TAG_member, name: "saved", scope: !40, file: !39, line: 67, baseType: !22, size: 32, offset: 672)
!51 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !40, file: !39, line: 69, baseType: !52, size: 256, offset: 704)
!52 = !DIDerivedType(tag: DW_TAG_typedef, name: "IDPropertyData", file: !39, line: 60, baseType: !53)
!53 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IDPropertyData", file: !39, line: 48, size: 256, elements: !54)
!54 = !{!55, !57, !64, !65}
!55 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !53, file: !39, line: 49, baseType: !56, size: 64)
!56 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!57 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !53, file: !39, line: 58, baseType: !58, size: 128, offset: 64)
!58 = !DIDerivedType(tag: DW_TAG_typedef, name: "ListBase", file: !59, line: 71, baseType: !60)
!59 = !DIFile(filename: "blender/source/blender/makesdna/DNA_listBase.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!60 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ListBase", file: !59, line: 69, size: 128, elements: !61)
!61 = !{!62, !63}
!62 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !60, file: !59, line: 70, baseType: !56, size: 64)
!63 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !60, file: !59, line: 70, baseType: !56, size: 64, offset: 64)
!64 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !53, file: !39, line: 59, baseType: !22, size: 32, offset: 192)
!65 = !DIDerivedType(tag: DW_TAG_member, name: "val2", scope: !53, file: !39, line: 59, baseType: !22, size: 32, offset: 224)
!66 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !40, file: !39, line: 70, baseType: !22, size: 32, offset: 960)
!67 = !DIDerivedType(tag: DW_TAG_member, name: "totallen", scope: !40, file: !39, line: 74, baseType: !22, size: 32, offset: 992)
!68 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !27, file: !28, line: 336, baseType: !69, size: 64, offset: 704)
!69 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9, size: 64)
!70 = !DIDerivedType(tag: DW_TAG_member, name: "customdata", scope: !27, file: !28, line: 337, baseType: !56, size: 64, offset: 768)
!71 = !DIDerivedType(tag: DW_TAG_member, name: "py_instance", scope: !27, file: !28, line: 338, baseType: !56, size: 64, offset: 832)
!72 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !27, file: !28, line: 340, baseType: !73, size: 64, offset: 896)
!73 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !74, size: 64)
!74 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PointerRNA", file: !25, line: 55, size: 192, elements: !75)
!75 = !{!76, !80, !83}
!76 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !74, file: !25, line: 58, baseType: !77, size: 64)
!77 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !74, file: !25, line: 56, size: 64, elements: !78)
!78 = !{!79}
!79 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !77, file: !25, line: 57, baseType: !56, size: 64)
!80 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !74, file: !25, line: 60, baseType: !81, size: 64, offset: 64)
!81 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !82, size: 64)
!82 = !DICompositeType(tag: DW_TAG_structure_type, name: "StructRNA", file: !25, line: 41, flags: DIFlagFwdDecl)
!83 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !74, file: !25, line: 61, baseType: !56, size: 64, offset: 128)
!84 = !DIDerivedType(tag: DW_TAG_member, name: "reports", scope: !27, file: !28, line: 341, baseType: !85, size: 64, offset: 960)
!85 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !86, size: 64)
!86 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ReportList", file: !28, line: 106, size: 320, elements: !87)
!87 = !{!88, !89, !90, !91, !92, !93}
!88 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !86, file: !28, line: 107, baseType: !58, size: 128)
!89 = !DIDerivedType(tag: DW_TAG_member, name: "printlevel", scope: !86, file: !28, line: 108, baseType: !22, size: 32, offset: 128)
!90 = !DIDerivedType(tag: DW_TAG_member, name: "storelevel", scope: !86, file: !28, line: 109, baseType: !22, size: 32, offset: 160)
!91 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !86, file: !28, line: 110, baseType: !22, size: 32, offset: 192)
!92 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !86, file: !28, line: 110, baseType: !22, size: 32, offset: 224)
!93 = !DIDerivedType(tag: DW_TAG_member, name: "reporttimer", scope: !86, file: !28, line: 111, baseType: !94, size: 64, offset: 256)
!94 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !95, size: 64)
!95 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmTimer", file: !8, line: 490, size: 768, elements: !96)
!96 = !{!97, !98, !99, !1727, !1728, !1729, !1730, !1731, !1732, !1733, !1734, !1735}
!97 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !95, file: !8, line: 491, baseType: !94, size: 64)
!98 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !95, file: !8, line: 491, baseType: !94, size: 64, offset: 64)
!99 = !DIDerivedType(tag: DW_TAG_member, name: "win", scope: !95, file: !8, line: 493, baseType: !100, size: 64, offset: 128)
!100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !101, size: 64)
!101 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmWindow", file: !28, line: 169, size: 2048, elements: !102)
!102 = !{!103, !104, !105, !106, !1644, !1645, !1646, !1647, !1648, !1649, !1650, !1651, !1652, !1653, !1654, !1655, !1656, !1657, !1658, !1659, !1660, !1661, !1702, !1705, !1719, !1720, !1721, !1722, !1723, !1724, !1725, !1726}
!103 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !101, file: !28, line: 170, baseType: !100, size: 64)
!104 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !101, file: !28, line: 170, baseType: !100, size: 64, offset: 64)
!105 = !DIDerivedType(tag: DW_TAG_member, name: "ghostwin", scope: !101, file: !28, line: 172, baseType: !56, size: 64, offset: 128)
!106 = !DIDerivedType(tag: DW_TAG_member, name: "screen", scope: !101, file: !28, line: 174, baseType: !107, size: 64, offset: 192)
!107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !108, size: 64)
!108 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bScreen", file: !109, line: 49, size: 1984, elements: !110)
!109 = !DIFile(filename: "blender/source/blender/makesdna/DNA_screen_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!110 = !{!111, !147, !148, !149, !150, !151, !1627, !1628, !1629, !1630, !1631, !1632, !1633, !1634, !1635, !1636, !1637, !1638, !1639, !1640, !1641, !1642, !1643}
!111 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !108, file: !109, line: 50, baseType: !112, size: 960)
!112 = !DIDerivedType(tag: DW_TAG_typedef, name: "ID", file: !39, line: 130, baseType: !113)
!113 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ID", file: !39, line: 117, size: 960, elements: !114)
!114 = !{!115, !116, !117, !119, !138, !142, !143, !144, !145, !146}
!115 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !113, file: !39, line: 118, baseType: !56, size: 64)
!116 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !113, file: !39, line: 118, baseType: !56, size: 64, offset: 64)
!117 = !DIDerivedType(tag: DW_TAG_member, name: "newid", scope: !113, file: !39, line: 119, baseType: !118, size: 64, offset: 128)
!118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !113, size: 64)
!119 = !DIDerivedType(tag: DW_TAG_member, name: "lib", scope: !113, file: !39, line: 120, baseType: !120, size: 64, offset: 192)
!120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !121, size: 64)
!121 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Library", file: !39, line: 136, size: 17600, elements: !122)
!122 = !{!123, !124, !126, !129, !133, !134, !135}
!123 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !121, file: !39, line: 137, baseType: !112, size: 960)
!124 = !DIDerivedType(tag: DW_TAG_member, name: "idblock", scope: !121, file: !39, line: 138, baseType: !125, size: 64, offset: 960)
!125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !112, size: 64)
!126 = !DIDerivedType(tag: DW_TAG_member, name: "filedata", scope: !121, file: !39, line: 139, baseType: !127, size: 64, offset: 1024)
!127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !128, size: 64)
!128 = !DICompositeType(tag: DW_TAG_structure_type, name: "FileData", file: !39, line: 43, flags: DIFlagFwdDecl)
!129 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !121, file: !39, line: 140, baseType: !130, size: 8192, offset: 1088)
!130 = !DICompositeType(tag: DW_TAG_array_type, baseType: !14, size: 8192, elements: !131)
!131 = !{!132}
!132 = !DISubrange(count: 1024)
!133 = !DIDerivedType(tag: DW_TAG_member, name: "filepath", scope: !121, file: !39, line: 141, baseType: !130, size: 8192, offset: 9280)
!134 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !121, file: !39, line: 148, baseType: !120, size: 64, offset: 17472)
!135 = !DIDerivedType(tag: DW_TAG_member, name: "packedfile", scope: !121, file: !39, line: 150, baseType: !136, size: 64, offset: 17536)
!136 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !137, size: 64)
!137 = !DICompositeType(tag: DW_TAG_structure_type, name: "PackedFile", file: !39, line: 45, flags: DIFlagFwdDecl)
!138 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !113, file: !39, line: 121, baseType: !139, size: 528, offset: 256)
!139 = !DICompositeType(tag: DW_TAG_array_type, baseType: !14, size: 528, elements: !140)
!140 = !{!141}
!141 = !DISubrange(count: 66)
!142 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !113, file: !39, line: 126, baseType: !48, size: 16, offset: 784)
!143 = !DIDerivedType(tag: DW_TAG_member, name: "us", scope: !113, file: !39, line: 127, baseType: !22, size: 32, offset: 800)
!144 = !DIDerivedType(tag: DW_TAG_member, name: "icon_id", scope: !113, file: !39, line: 128, baseType: !22, size: 32, offset: 832)
!145 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !113, file: !39, line: 128, baseType: !22, size: 32, offset: 864)
!146 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !113, file: !39, line: 129, baseType: !37, size: 64, offset: 896)
!147 = !DIDerivedType(tag: DW_TAG_member, name: "vertbase", scope: !108, file: !109, line: 52, baseType: !58, size: 128, offset: 960)
!148 = !DIDerivedType(tag: DW_TAG_member, name: "edgebase", scope: !108, file: !109, line: 53, baseType: !58, size: 128, offset: 1088)
!149 = !DIDerivedType(tag: DW_TAG_member, name: "areabase", scope: !108, file: !109, line: 54, baseType: !58, size: 128, offset: 1216)
!150 = !DIDerivedType(tag: DW_TAG_member, name: "regionbase", scope: !108, file: !109, line: 55, baseType: !58, size: 128, offset: 1344)
!151 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !108, file: !109, line: 57, baseType: !152, size: 64, offset: 1472)
!152 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !153, size: 64)
!153 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Scene", file: !154, line: 1216, size: 39680, elements: !155)
!154 = !DIFile(filename: "blender/source/blender/makesdna/DNA_scene_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!155 = !{!156, !157, !160, !455, !458, !459, !460, !472, !473, !474, !475, !476, !477, !478, !479, !480, !481, !482, !486, !557, !995, !1210, !1213, !1502, !1514, !1515, !1516, !1517, !1518, !1519, !1520, !1521, !1524, !1525, !1526, !1527, !1528, !1536, !1603, !1610, !1611, !1618, !1619, !1620, !1621, !1622, !1623, !1624}
!156 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !153, file: !154, line: 1217, baseType: !112, size: 960)
!157 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !153, file: !154, line: 1218, baseType: !158, size: 64, offset: 960)
!158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !159, size: 64)
!159 = !DICompositeType(tag: DW_TAG_structure_type, name: "AnimData", file: !154, line: 58, flags: DIFlagFwdDecl)
!160 = !DIDerivedType(tag: DW_TAG_member, name: "camera", scope: !153, file: !154, line: 1220, baseType: !161, size: 64, offset: 1024)
!161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !162, size: 64)
!162 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Object", file: !163, line: 115, size: 11392, elements: !164)
!163 = !DIFile(filename: "blender/source/blender/makesdna/DNA_object_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!164 = !{!165, !166, !167, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !185, !197, !211, !212, !256, !257, !260, !261, !277, !278, !279, !280, !281, !282, !283, !287, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !303, !304, !305, !306, !307, !308, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341, !342, !343, !344, !346, !347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !368, !369, !370, !371, !372, !373, !374, !375, !376, !379, !382, !386, !387, !388, !389, !390, !393, !396, !399, !400, !406, !407, !408, !409, !410, !411, !413, !416, !419, !423, !443, !444}
!165 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !162, file: !163, line: 116, baseType: !112, size: 960)
!166 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !162, file: !163, line: 117, baseType: !158, size: 64, offset: 960)
!167 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt", scope: !162, file: !163, line: 119, baseType: !168, size: 64, offset: 1024)
!168 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !169, size: 64)
!169 = !DICompositeType(tag: DW_TAG_structure_type, name: "SculptSession", file: !163, line: 57, flags: DIFlagFwdDecl)
!170 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !162, file: !163, line: 121, baseType: !48, size: 16, offset: 1088)
!171 = !DIDerivedType(tag: DW_TAG_member, name: "partype", scope: !162, file: !163, line: 121, baseType: !48, size: 16, offset: 1104)
!172 = !DIDerivedType(tag: DW_TAG_member, name: "par1", scope: !162, file: !163, line: 122, baseType: !22, size: 32, offset: 1120)
!173 = !DIDerivedType(tag: DW_TAG_member, name: "par2", scope: !162, file: !163, line: 122, baseType: !22, size: 32, offset: 1152)
!174 = !DIDerivedType(tag: DW_TAG_member, name: "par3", scope: !162, file: !163, line: 122, baseType: !22, size: 32, offset: 1184)
!175 = !DIDerivedType(tag: DW_TAG_member, name: "parsubstr", scope: !162, file: !163, line: 123, baseType: !33, size: 512, offset: 1216)
!176 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !162, file: !163, line: 124, baseType: !161, size: 64, offset: 1728)
!177 = !DIDerivedType(tag: DW_TAG_member, name: "track", scope: !162, file: !163, line: 124, baseType: !161, size: 64, offset: 1792)
!178 = !DIDerivedType(tag: DW_TAG_member, name: "proxy", scope: !162, file: !163, line: 127, baseType: !161, size: 64, offset: 1856)
!179 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_group", scope: !162, file: !163, line: 127, baseType: !161, size: 64, offset: 1920)
!180 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_from", scope: !162, file: !163, line: 127, baseType: !161, size: 64, offset: 1984)
!181 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !162, file: !163, line: 128, baseType: !182, size: 64, offset: 2048)
!182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !183, size: 64)
!183 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ipo", file: !184, line: 44, flags: DIFlagFwdDecl)
!184 = !DIFile(filename: "blender/source/blender/makesdna/DNA_curve_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!185 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !162, file: !163, line: 130, baseType: !186, size: 64, offset: 2112)
!186 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !187, size: 64)
!187 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BoundBox", file: !163, line: 97, size: 832, elements: !188)
!188 = !{!189, !195, !196}
!189 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !187, file: !163, line: 98, baseType: !190, size: 768)
!190 = !DICompositeType(tag: DW_TAG_array_type, baseType: !191, size: 768, elements: !192)
!191 = !DIBasicType(name: "float", size: 32, encoding: DW_ATE_float)
!192 = !{!193, !194}
!193 = !DISubrange(count: 8)
!194 = !DISubrange(count: 3)
!195 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !187, file: !163, line: 99, baseType: !22, size: 32, offset: 768)
!196 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !187, file: !163, line: 99, baseType: !22, size: 32, offset: 800)
!197 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !162, file: !163, line: 131, baseType: !198, size: 64, offset: 2176)
!198 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !199, size: 64)
!199 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bAction", file: !200, line: 486, size: 1600, elements: !201)
!200 = !DIFile(filename: "blender/source/blender/makesdna/DNA_action_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!201 = !{!202, !203, !204, !205, !206, !207, !208, !209, !210}
!202 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !199, file: !200, line: 487, baseType: !112, size: 960)
!203 = !DIDerivedType(tag: DW_TAG_member, name: "curves", scope: !199, file: !200, line: 489, baseType: !58, size: 128, offset: 960)
!204 = !DIDerivedType(tag: DW_TAG_member, name: "chanbase", scope: !199, file: !200, line: 490, baseType: !58, size: 128, offset: 1088)
!205 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !199, file: !200, line: 491, baseType: !58, size: 128, offset: 1216)
!206 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !199, file: !200, line: 492, baseType: !58, size: 128, offset: 1344)
!207 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !199, file: !200, line: 494, baseType: !22, size: 32, offset: 1472)
!208 = !DIDerivedType(tag: DW_TAG_member, name: "active_marker", scope: !199, file: !200, line: 495, baseType: !22, size: 32, offset: 1504)
!209 = !DIDerivedType(tag: DW_TAG_member, name: "idroot", scope: !199, file: !200, line: 497, baseType: !22, size: 32, offset: 1536)
!210 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !199, file: !200, line: 498, baseType: !22, size: 32, offset: 1568)
!211 = !DIDerivedType(tag: DW_TAG_member, name: "poselib", scope: !162, file: !163, line: 132, baseType: !198, size: 64, offset: 2240)
!212 = !DIDerivedType(tag: DW_TAG_member, name: "pose", scope: !162, file: !163, line: 133, baseType: !213, size: 64, offset: 2304)
!213 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !214, size: 64)
!214 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bPose", file: !200, line: 334, size: 1728, elements: !215)
!215 = !{!216, !217, !220, !221, !222, !224, !225, !226, !229, !230, !231, !232, !233, !234, !235, !255}
!216 = !DIDerivedType(tag: DW_TAG_member, name: "chanbase", scope: !214, file: !200, line: 335, baseType: !58, size: 128)
!217 = !DIDerivedType(tag: DW_TAG_member, name: "chanhash", scope: !214, file: !200, line: 336, baseType: !218, size: 64, offset: 128)
!218 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !219, size: 64)
!219 = !DICompositeType(tag: DW_TAG_structure_type, name: "GHash", file: !184, line: 51, flags: DIFlagFwdDecl)
!220 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !214, file: !200, line: 338, baseType: !48, size: 16, offset: 192)
!221 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !214, file: !200, line: 338, baseType: !48, size: 16, offset: 208)
!222 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_layer", scope: !214, file: !200, line: 339, baseType: !223, size: 32, offset: 224)
!223 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!224 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !214, file: !200, line: 340, baseType: !22, size: 32, offset: 256)
!225 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !214, file: !200, line: 342, baseType: !191, size: 32, offset: 288)
!226 = !DIDerivedType(tag: DW_TAG_member, name: "stride_offset", scope: !214, file: !200, line: 343, baseType: !227, size: 96, offset: 320)
!227 = !DICompositeType(tag: DW_TAG_array_type, baseType: !191, size: 96, elements: !228)
!228 = !{!194}
!229 = !DIDerivedType(tag: DW_TAG_member, name: "cyclic_offset", scope: !214, file: !200, line: 344, baseType: !227, size: 96, offset: 416)
!230 = !DIDerivedType(tag: DW_TAG_member, name: "agroups", scope: !214, file: !200, line: 347, baseType: !58, size: 128, offset: 512)
!231 = !DIDerivedType(tag: DW_TAG_member, name: "active_group", scope: !214, file: !200, line: 349, baseType: !22, size: 32, offset: 640)
!232 = !DIDerivedType(tag: DW_TAG_member, name: "iksolver", scope: !214, file: !200, line: 350, baseType: !22, size: 32, offset: 672)
!233 = !DIDerivedType(tag: DW_TAG_member, name: "ikdata", scope: !214, file: !200, line: 351, baseType: !56, size: 64, offset: 704)
!234 = !DIDerivedType(tag: DW_TAG_member, name: "ikparam", scope: !214, file: !200, line: 352, baseType: !56, size: 64, offset: 768)
!235 = !DIDerivedType(tag: DW_TAG_member, name: "avs", scope: !214, file: !200, line: 354, baseType: !236, size: 384, offset: 832)
!236 = !DIDerivedType(tag: DW_TAG_typedef, name: "bAnimVizSettings", file: !200, line: 116, baseType: !237)
!237 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bAnimVizSettings", file: !200, line: 94, size: 384, elements: !238)
!238 = !{!239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254}
!239 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_sf", scope: !237, file: !200, line: 96, baseType: !22, size: 32)
!240 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_ef", scope: !237, file: !200, line: 96, baseType: !22, size: 32, offset: 32)
!241 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_bc", scope: !237, file: !200, line: 97, baseType: !22, size: 32, offset: 64)
!242 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_ac", scope: !237, file: !200, line: 97, baseType: !22, size: 32, offset: 96)
!243 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_type", scope: !237, file: !200, line: 99, baseType: !48, size: 16, offset: 128)
!244 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_step", scope: !237, file: !200, line: 100, baseType: !48, size: 16, offset: 144)
!245 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_flag", scope: !237, file: !200, line: 102, baseType: !48, size: 16, offset: 160)
!246 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !237, file: !200, line: 105, baseType: !48, size: 16, offset: 176)
!247 = !DIDerivedType(tag: DW_TAG_member, name: "path_type", scope: !237, file: !200, line: 108, baseType: !48, size: 16, offset: 192)
!248 = !DIDerivedType(tag: DW_TAG_member, name: "path_step", scope: !237, file: !200, line: 109, baseType: !48, size: 16, offset: 208)
!249 = !DIDerivedType(tag: DW_TAG_member, name: "path_viewflag", scope: !237, file: !200, line: 111, baseType: !48, size: 16, offset: 224)
!250 = !DIDerivedType(tag: DW_TAG_member, name: "path_bakeflag", scope: !237, file: !200, line: 112, baseType: !48, size: 16, offset: 240)
!251 = !DIDerivedType(tag: DW_TAG_member, name: "path_sf", scope: !237, file: !200, line: 114, baseType: !22, size: 32, offset: 256)
!252 = !DIDerivedType(tag: DW_TAG_member, name: "path_ef", scope: !237, file: !200, line: 114, baseType: !22, size: 32, offset: 288)
!253 = !DIDerivedType(tag: DW_TAG_member, name: "path_bc", scope: !237, file: !200, line: 115, baseType: !22, size: 32, offset: 320)
!254 = !DIDerivedType(tag: DW_TAG_member, name: "path_ac", scope: !237, file: !200, line: 115, baseType: !22, size: 32, offset: 352)
!255 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_act_bone", scope: !214, file: !200, line: 355, baseType: !33, size: 512, offset: 1216)
!256 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !162, file: !163, line: 134, baseType: !56, size: 64, offset: 2368)
!257 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !162, file: !163, line: 136, baseType: !258, size: 64, offset: 2432)
!258 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !259, size: 64)
!259 = !DICompositeType(tag: DW_TAG_structure_type, name: "bGPdata", file: !154, line: 61, flags: DIFlagFwdDecl)
!260 = !DIDerivedType(tag: DW_TAG_member, name: "avs", scope: !162, file: !163, line: 138, baseType: !236, size: 384, offset: 2496)
!261 = !DIDerivedType(tag: DW_TAG_member, name: "mpath", scope: !162, file: !163, line: 139, baseType: !262, size: 64, offset: 2880)
!262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !263, size: 64)
!263 = !DIDerivedType(tag: DW_TAG_typedef, name: "bMotionPath", file: !200, line: 80, baseType: !264)
!264 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bMotionPath", file: !200, line: 72, size: 192, elements: !265)
!265 = !{!266, !273, !274, !275, !276}
!266 = !DIDerivedType(tag: DW_TAG_member, name: "points", scope: !264, file: !200, line: 73, baseType: !267, size: 64)
!267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !268, size: 64)
!268 = !DIDerivedType(tag: DW_TAG_typedef, name: "bMotionPathVert", file: !200, line: 59, baseType: !269)
!269 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bMotionPathVert", file: !200, line: 56, size: 128, elements: !270)
!270 = !{!271, !272}
!271 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !269, file: !200, line: 57, baseType: !227, size: 96)
!272 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !269, file: !200, line: 58, baseType: !22, size: 32, offset: 96)
!273 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !264, file: !200, line: 74, baseType: !22, size: 32, offset: 64)
!274 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !264, file: !200, line: 76, baseType: !22, size: 32, offset: 96)
!275 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame", scope: !264, file: !200, line: 77, baseType: !22, size: 32, offset: 128)
!276 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !264, file: !200, line: 79, baseType: !22, size: 32, offset: 160)
!277 = !DIDerivedType(tag: DW_TAG_member, name: "constraintChannels", scope: !162, file: !163, line: 141, baseType: !58, size: 128, offset: 2944)
!278 = !DIDerivedType(tag: DW_TAG_member, name: "effect", scope: !162, file: !163, line: 142, baseType: !58, size: 128, offset: 3072)
!279 = !DIDerivedType(tag: DW_TAG_member, name: "defbase", scope: !162, file: !163, line: 143, baseType: !58, size: 128, offset: 3200)
!280 = !DIDerivedType(tag: DW_TAG_member, name: "modifiers", scope: !162, file: !163, line: 144, baseType: !58, size: 128, offset: 3328)
!281 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !162, file: !163, line: 146, baseType: !22, size: 32, offset: 3456)
!282 = !DIDerivedType(tag: DW_TAG_member, name: "restore_mode", scope: !162, file: !163, line: 147, baseType: !22, size: 32, offset: 3488)
!283 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !162, file: !163, line: 150, baseType: !284, size: 64, offset: 3520)
!284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !285, size: 64)
!285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !286, size: 64)
!286 = !DICompositeType(tag: DW_TAG_structure_type, name: "Material", file: !154, line: 179, flags: DIFlagFwdDecl)
!287 = !DIDerivedType(tag: DW_TAG_member, name: "matbits", scope: !162, file: !163, line: 151, baseType: !288, size: 64, offset: 3584)
!288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14, size: 64)
!289 = !DIDerivedType(tag: DW_TAG_member, name: "totcol", scope: !162, file: !163, line: 152, baseType: !22, size: 32, offset: 3648)
!290 = !DIDerivedType(tag: DW_TAG_member, name: "actcol", scope: !162, file: !163, line: 153, baseType: !22, size: 32, offset: 3680)
!291 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !162, file: !163, line: 156, baseType: !227, size: 96, offset: 3712)
!292 = !DIDerivedType(tag: DW_TAG_member, name: "dloc", scope: !162, file: !163, line: 156, baseType: !227, size: 96, offset: 3808)
!293 = !DIDerivedType(tag: DW_TAG_member, name: "orig", scope: !162, file: !163, line: 156, baseType: !227, size: 96, offset: 3904)
!294 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !162, file: !163, line: 157, baseType: !227, size: 96, offset: 4000)
!295 = !DIDerivedType(tag: DW_TAG_member, name: "dsize", scope: !162, file: !163, line: 158, baseType: !227, size: 96, offset: 4096)
!296 = !DIDerivedType(tag: DW_TAG_member, name: "dscale", scope: !162, file: !163, line: 159, baseType: !227, size: 96, offset: 4192)
!297 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !162, file: !163, line: 160, baseType: !227, size: 96, offset: 4288)
!298 = !DIDerivedType(tag: DW_TAG_member, name: "drot", scope: !162, file: !163, line: 160, baseType: !227, size: 96, offset: 4384)
!299 = !DIDerivedType(tag: DW_TAG_member, name: "quat", scope: !162, file: !163, line: 161, baseType: !300, size: 128, offset: 4480)
!300 = !DICompositeType(tag: DW_TAG_array_type, baseType: !191, size: 128, elements: !301)
!301 = !{!302}
!302 = !DISubrange(count: 4)
!303 = !DIDerivedType(tag: DW_TAG_member, name: "dquat", scope: !162, file: !163, line: 161, baseType: !300, size: 128, offset: 4608)
!304 = !DIDerivedType(tag: DW_TAG_member, name: "rotAxis", scope: !162, file: !163, line: 162, baseType: !227, size: 96, offset: 4736)
!305 = !DIDerivedType(tag: DW_TAG_member, name: "drotAxis", scope: !162, file: !163, line: 162, baseType: !227, size: 96, offset: 4832)
!306 = !DIDerivedType(tag: DW_TAG_member, name: "rotAngle", scope: !162, file: !163, line: 163, baseType: !191, size: 32, offset: 4928)
!307 = !DIDerivedType(tag: DW_TAG_member, name: "drotAngle", scope: !162, file: !163, line: 163, baseType: !191, size: 32, offset: 4960)
!308 = !DIDerivedType(tag: DW_TAG_member, name: "obmat", scope: !162, file: !163, line: 164, baseType: !309, size: 512, offset: 4992)
!309 = !DICompositeType(tag: DW_TAG_array_type, baseType: !191, size: 512, elements: !310)
!310 = !{!302, !302}
!311 = !DIDerivedType(tag: DW_TAG_member, name: "parentinv", scope: !162, file: !163, line: 165, baseType: !309, size: 512, offset: 5504)
!312 = !DIDerivedType(tag: DW_TAG_member, name: "constinv", scope: !162, file: !163, line: 166, baseType: !309, size: 512, offset: 6016)
!313 = !DIDerivedType(tag: DW_TAG_member, name: "imat", scope: !162, file: !163, line: 167, baseType: !309, size: 512, offset: 6528)
!314 = !DIDerivedType(tag: DW_TAG_member, name: "imat_ren", scope: !162, file: !163, line: 176, baseType: !309, size: 512, offset: 7040)
!315 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !162, file: !163, line: 178, baseType: !223, size: 32, offset: 7552)
!316 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !162, file: !163, line: 180, baseType: !48, size: 16, offset: 7584)
!317 = !DIDerivedType(tag: DW_TAG_member, name: "colbits", scope: !162, file: !163, line: 181, baseType: !48, size: 16, offset: 7600)
!318 = !DIDerivedType(tag: DW_TAG_member, name: "transflag", scope: !162, file: !163, line: 183, baseType: !48, size: 16, offset: 7616)
!319 = !DIDerivedType(tag: DW_TAG_member, name: "protectflag", scope: !162, file: !163, line: 183, baseType: !48, size: 16, offset: 7632)
!320 = !DIDerivedType(tag: DW_TAG_member, name: "trackflag", scope: !162, file: !163, line: 184, baseType: !48, size: 16, offset: 7648)
!321 = !DIDerivedType(tag: DW_TAG_member, name: "upflag", scope: !162, file: !163, line: 184, baseType: !48, size: 16, offset: 7664)
!322 = !DIDerivedType(tag: DW_TAG_member, name: "nlaflag", scope: !162, file: !163, line: 185, baseType: !48, size: 16, offset: 7680)
!323 = !DIDerivedType(tag: DW_TAG_member, name: "ipoflag", scope: !162, file: !163, line: 186, baseType: !48, size: 16, offset: 7696)
!324 = !DIDerivedType(tag: DW_TAG_member, name: "scaflag", scope: !162, file: !163, line: 187, baseType: !48, size: 16, offset: 7712)
!325 = !DIDerivedType(tag: DW_TAG_member, name: "scavisflag", scope: !162, file: !163, line: 188, baseType: !14, size: 8, offset: 7728)
!326 = !DIDerivedType(tag: DW_TAG_member, name: "depsflag", scope: !162, file: !163, line: 189, baseType: !14, size: 8, offset: 7736)
!327 = !DIDerivedType(tag: DW_TAG_member, name: "dupon", scope: !162, file: !163, line: 192, baseType: !22, size: 32, offset: 7744)
!328 = !DIDerivedType(tag: DW_TAG_member, name: "dupoff", scope: !162, file: !163, line: 192, baseType: !22, size: 32, offset: 7776)
!329 = !DIDerivedType(tag: DW_TAG_member, name: "dupsta", scope: !162, file: !163, line: 192, baseType: !22, size: 32, offset: 7808)
!330 = !DIDerivedType(tag: DW_TAG_member, name: "dupend", scope: !162, file: !163, line: 192, baseType: !22, size: 32, offset: 7840)
!331 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !162, file: !163, line: 194, baseType: !22, size: 32, offset: 7872)
!332 = !DIDerivedType(tag: DW_TAG_member, name: "mass", scope: !162, file: !163, line: 202, baseType: !191, size: 32, offset: 7904)
!333 = !DIDerivedType(tag: DW_TAG_member, name: "damping", scope: !162, file: !163, line: 202, baseType: !191, size: 32, offset: 7936)
!334 = !DIDerivedType(tag: DW_TAG_member, name: "inertia", scope: !162, file: !163, line: 202, baseType: !191, size: 32, offset: 7968)
!335 = !DIDerivedType(tag: DW_TAG_member, name: "formfactor", scope: !162, file: !163, line: 211, baseType: !191, size: 32, offset: 8000)
!336 = !DIDerivedType(tag: DW_TAG_member, name: "rdamping", scope: !162, file: !163, line: 212, baseType: !191, size: 32, offset: 8032)
!337 = !DIDerivedType(tag: DW_TAG_member, name: "margin", scope: !162, file: !163, line: 213, baseType: !191, size: 32, offset: 8064)
!338 = !DIDerivedType(tag: DW_TAG_member, name: "max_vel", scope: !162, file: !163, line: 214, baseType: !191, size: 32, offset: 8096)
!339 = !DIDerivedType(tag: DW_TAG_member, name: "min_vel", scope: !162, file: !163, line: 215, baseType: !191, size: 32, offset: 8128)
!340 = !DIDerivedType(tag: DW_TAG_member, name: "obstacleRad", scope: !162, file: !163, line: 216, baseType: !191, size: 32, offset: 8160)
!341 = !DIDerivedType(tag: DW_TAG_member, name: "step_height", scope: !162, file: !163, line: 219, baseType: !191, size: 32, offset: 8192)
!342 = !DIDerivedType(tag: DW_TAG_member, name: "jump_speed", scope: !162, file: !163, line: 220, baseType: !191, size: 32, offset: 8224)
!343 = !DIDerivedType(tag: DW_TAG_member, name: "fall_speed", scope: !162, file: !163, line: 221, baseType: !191, size: 32, offset: 8256)
!344 = !DIDerivedType(tag: DW_TAG_member, name: "col_group", scope: !162, file: !163, line: 224, baseType: !345, size: 16, offset: 8288)
!345 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!346 = !DIDerivedType(tag: DW_TAG_member, name: "col_mask", scope: !162, file: !163, line: 224, baseType: !345, size: 16, offset: 8304)
!347 = !DIDerivedType(tag: DW_TAG_member, name: "rotmode", scope: !162, file: !163, line: 226, baseType: !48, size: 16, offset: 8320)
!348 = !DIDerivedType(tag: DW_TAG_member, name: "boundtype", scope: !162, file: !163, line: 228, baseType: !14, size: 8, offset: 8336)
!349 = !DIDerivedType(tag: DW_TAG_member, name: "collision_boundtype", scope: !162, file: !163, line: 229, baseType: !14, size: 8, offset: 8344)
!350 = !DIDerivedType(tag: DW_TAG_member, name: "dtx", scope: !162, file: !163, line: 231, baseType: !48, size: 16, offset: 8352)
!351 = !DIDerivedType(tag: DW_TAG_member, name: "dt", scope: !162, file: !163, line: 232, baseType: !14, size: 8, offset: 8368)
!352 = !DIDerivedType(tag: DW_TAG_member, name: "empty_drawtype", scope: !162, file: !163, line: 233, baseType: !14, size: 8, offset: 8376)
!353 = !DIDerivedType(tag: DW_TAG_member, name: "empty_drawsize", scope: !162, file: !163, line: 234, baseType: !191, size: 32, offset: 8384)
!354 = !DIDerivedType(tag: DW_TAG_member, name: "dupfacesca", scope: !162, file: !163, line: 235, baseType: !191, size: 32, offset: 8416)
!355 = !DIDerivedType(tag: DW_TAG_member, name: "prop", scope: !162, file: !163, line: 237, baseType: !58, size: 128, offset: 8448)
!356 = !DIDerivedType(tag: DW_TAG_member, name: "sensors", scope: !162, file: !163, line: 238, baseType: !58, size: 128, offset: 8576)
!357 = !DIDerivedType(tag: DW_TAG_member, name: "controllers", scope: !162, file: !163, line: 239, baseType: !58, size: 128, offset: 8704)
!358 = !DIDerivedType(tag: DW_TAG_member, name: "actuators", scope: !162, file: !163, line: 240, baseType: !58, size: 128, offset: 8832)
!359 = !DIDerivedType(tag: DW_TAG_member, name: "sf", scope: !162, file: !163, line: 242, baseType: !191, size: 32, offset: 8960)
!360 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !162, file: !163, line: 244, baseType: !48, size: 16, offset: 8992)
!361 = !DIDerivedType(tag: DW_TAG_member, name: "actdef", scope: !162, file: !163, line: 245, baseType: !345, size: 16, offset: 9008)
!362 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !162, file: !163, line: 246, baseType: !300, size: 128, offset: 9024)
!363 = !DIDerivedType(tag: DW_TAG_member, name: "gameflag", scope: !162, file: !163, line: 248, baseType: !22, size: 32, offset: 9152)
!364 = !DIDerivedType(tag: DW_TAG_member, name: "gameflag2", scope: !162, file: !163, line: 249, baseType: !22, size: 32, offset: 9184)
!365 = !DIDerivedType(tag: DW_TAG_member, name: "bsoft", scope: !162, file: !163, line: 251, baseType: !366, size: 64, offset: 9216)
!366 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !367, size: 64)
!367 = !DICompositeType(tag: DW_TAG_structure_type, name: "BulletSoftBody", file: !163, line: 251, flags: DIFlagFwdDecl)
!368 = !DIDerivedType(tag: DW_TAG_member, name: "restrictflag", scope: !162, file: !163, line: 253, baseType: !14, size: 8, offset: 9280)
!369 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !162, file: !163, line: 254, baseType: !14, size: 8, offset: 9288)
!370 = !DIDerivedType(tag: DW_TAG_member, name: "softflag", scope: !162, file: !163, line: 255, baseType: !48, size: 16, offset: 9296)
!371 = !DIDerivedType(tag: DW_TAG_member, name: "anisotropicFriction", scope: !162, file: !163, line: 256, baseType: !227, size: 96, offset: 9312)
!372 = !DIDerivedType(tag: DW_TAG_member, name: "constraints", scope: !162, file: !163, line: 258, baseType: !58, size: 128, offset: 9408)
!373 = !DIDerivedType(tag: DW_TAG_member, name: "nlastrips", scope: !162, file: !163, line: 259, baseType: !58, size: 128, offset: 9536)
!374 = !DIDerivedType(tag: DW_TAG_member, name: "hooks", scope: !162, file: !163, line: 260, baseType: !58, size: 128, offset: 9664)
!375 = !DIDerivedType(tag: DW_TAG_member, name: "particlesystem", scope: !162, file: !163, line: 261, baseType: !58, size: 128, offset: 9792)
!376 = !DIDerivedType(tag: DW_TAG_member, name: "pd", scope: !162, file: !163, line: 263, baseType: !377, size: 64, offset: 9920)
!377 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !378, size: 64)
!378 = !DICompositeType(tag: DW_TAG_structure_type, name: "PartDeflect", file: !163, line: 52, flags: DIFlagFwdDecl)
!379 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !162, file: !163, line: 264, baseType: !380, size: 64, offset: 9984)
!380 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !381, size: 64)
!381 = !DICompositeType(tag: DW_TAG_structure_type, name: "SoftBody", file: !163, line: 53, flags: DIFlagFwdDecl)
!382 = !DIDerivedType(tag: DW_TAG_member, name: "dup_group", scope: !162, file: !163, line: 265, baseType: !383, size: 64, offset: 10048)
!383 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !384, size: 64)
!384 = !DICompositeType(tag: DW_TAG_structure_type, name: "Group", file: !385, line: 43, flags: DIFlagFwdDecl)
!385 = !DIFile(filename: "blender/source/blender/makesdna/DNA_freestyle_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!386 = !DIDerivedType(tag: DW_TAG_member, name: "body_type", scope: !162, file: !163, line: 267, baseType: !14, size: 8, offset: 10112)
!387 = !DIDerivedType(tag: DW_TAG_member, name: "shapeflag", scope: !162, file: !163, line: 268, baseType: !14, size: 8, offset: 10120)
!388 = !DIDerivedType(tag: DW_TAG_member, name: "shapenr", scope: !162, file: !163, line: 269, baseType: !48, size: 16, offset: 10128)
!389 = !DIDerivedType(tag: DW_TAG_member, name: "smoothresh", scope: !162, file: !163, line: 270, baseType: !191, size: 32, offset: 10144)
!390 = !DIDerivedType(tag: DW_TAG_member, name: "fluidsimSettings", scope: !162, file: !163, line: 272, baseType: !391, size: 64, offset: 10176)
!391 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !392, size: 64)
!392 = !DICompositeType(tag: DW_TAG_structure_type, name: "FluidsimSettings", file: !163, line: 54, flags: DIFlagFwdDecl)
!393 = !DIDerivedType(tag: DW_TAG_member, name: "curve_cache", scope: !162, file: !163, line: 275, baseType: !394, size: 64, offset: 10240)
!394 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !395, size: 64)
!395 = !DICompositeType(tag: DW_TAG_structure_type, name: "CurveCache", file: !163, line: 275, flags: DIFlagFwdDecl)
!396 = !DIDerivedType(tag: DW_TAG_member, name: "derivedDeform", scope: !162, file: !163, line: 277, baseType: !397, size: 64, offset: 10304)
!397 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !398, size: 64)
!398 = !DICompositeType(tag: DW_TAG_structure_type, name: "DerivedMesh", file: !163, line: 56, flags: DIFlagFwdDecl)
!399 = !DIDerivedType(tag: DW_TAG_member, name: "derivedFinal", scope: !162, file: !163, line: 277, baseType: !397, size: 64, offset: 10368)
!400 = !DIDerivedType(tag: DW_TAG_member, name: "lastDataMask", scope: !162, file: !163, line: 278, baseType: !401, size: 64, offset: 10432)
!401 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !402, line: 27, baseType: !403)
!402 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdint-uintn.h", directory: "")
!403 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint64_t", file: !404, line: 45, baseType: !405)
!404 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!405 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!406 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask", scope: !162, file: !163, line: 279, baseType: !401, size: 64, offset: 10496)
!407 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !162, file: !163, line: 280, baseType: !223, size: 32, offset: 10560)
!408 = !DIDerivedType(tag: DW_TAG_member, name: "init_state", scope: !162, file: !163, line: 281, baseType: !223, size: 32, offset: 10592)
!409 = !DIDerivedType(tag: DW_TAG_member, name: "gpulamp", scope: !162, file: !163, line: 283, baseType: !58, size: 128, offset: 10624)
!410 = !DIDerivedType(tag: DW_TAG_member, name: "pc_ids", scope: !162, file: !163, line: 284, baseType: !58, size: 128, offset: 10752)
!411 = !DIDerivedType(tag: DW_TAG_member, name: "duplilist", scope: !162, file: !163, line: 285, baseType: !412, size: 64, offset: 10880)
!412 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !58, size: 64)
!413 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_object", scope: !162, file: !163, line: 287, baseType: !414, size: 64, offset: 10944)
!414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !415, size: 64)
!415 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyOb", file: !163, line: 59, flags: DIFlagFwdDecl)
!416 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_constraint", scope: !162, file: !163, line: 288, baseType: !417, size: 64, offset: 11008)
!417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !418, size: 64)
!418 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyCon", file: !163, line: 288, flags: DIFlagFwdDecl)
!419 = !DIDerivedType(tag: DW_TAG_member, name: "ima_ofs", scope: !162, file: !163, line: 290, baseType: !420, size: 64, offset: 11072)
!420 = !DICompositeType(tag: DW_TAG_array_type, baseType: !191, size: 64, elements: !421)
!421 = !{!422}
!422 = !DISubrange(count: 2)
!423 = !DIDerivedType(tag: DW_TAG_member, name: "iuser", scope: !162, file: !163, line: 291, baseType: !424, size: 64, offset: 11136)
!424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !425, size: 64)
!425 = !DIDerivedType(tag: DW_TAG_typedef, name: "ImageUser", file: !426, line: 65, baseType: !427)
!426 = !DIFile(filename: "blender/source/blender/makesdna/DNA_image_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!427 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImageUser", file: !426, line: 50, size: 320, elements: !428)
!428 = !{!429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442}
!429 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !427, file: !426, line: 51, baseType: !152, size: 64)
!430 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !427, file: !426, line: 53, baseType: !22, size: 32, offset: 64)
!431 = !DIDerivedType(tag: DW_TAG_member, name: "frames", scope: !427, file: !426, line: 54, baseType: !22, size: 32, offset: 96)
!432 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !427, file: !426, line: 55, baseType: !22, size: 32, offset: 128)
!433 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !427, file: !426, line: 55, baseType: !22, size: 32, offset: 160)
!434 = !DIDerivedType(tag: DW_TAG_member, name: "fie_ima", scope: !427, file: !426, line: 56, baseType: !14, size: 8, offset: 192)
!435 = !DIDerivedType(tag: DW_TAG_member, name: "cycl", scope: !427, file: !426, line: 56, baseType: !14, size: 8, offset: 200)
!436 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !427, file: !426, line: 57, baseType: !14, size: 8, offset: 208)
!437 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !427, file: !426, line: 57, baseType: !14, size: 8, offset: 216)
!438 = !DIDerivedType(tag: DW_TAG_member, name: "multi_index", scope: !427, file: !426, line: 59, baseType: !48, size: 16, offset: 224)
!439 = !DIDerivedType(tag: DW_TAG_member, name: "layer", scope: !427, file: !426, line: 59, baseType: !48, size: 16, offset: 240)
!440 = !DIDerivedType(tag: DW_TAG_member, name: "pass", scope: !427, file: !426, line: 59, baseType: !48, size: 16, offset: 256)
!441 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !427, file: !426, line: 61, baseType: !48, size: 16, offset: 272)
!442 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !427, file: !426, line: 63, baseType: !22, size: 32, offset: 288)
!443 = !DIDerivedType(tag: DW_TAG_member, name: "lodlevels", scope: !162, file: !163, line: 293, baseType: !58, size: 128, offset: 11200)
!444 = !DIDerivedType(tag: DW_TAG_member, name: "currentlod", scope: !162, file: !163, line: 294, baseType: !445, size: 64, offset: 11328)
!445 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !446, size: 64)
!446 = !DIDerivedType(tag: DW_TAG_typedef, name: "LodLevel", file: !163, line: 113, baseType: !447)
!447 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "LodLevel", file: !163, line: 108, size: 256, elements: !448)
!448 = !{!449, !451, !452, !453, !454}
!449 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !447, file: !163, line: 109, baseType: !450, size: 64)
!450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !447, size: 64)
!451 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !447, file: !163, line: 109, baseType: !450, size: 64, offset: 64)
!452 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !447, file: !163, line: 110, baseType: !161, size: 64, offset: 128)
!453 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !447, file: !163, line: 111, baseType: !22, size: 32, offset: 192)
!454 = !DIDerivedType(tag: DW_TAG_member, name: "distance", scope: !447, file: !163, line: 112, baseType: !191, size: 32, offset: 224)
!455 = !DIDerivedType(tag: DW_TAG_member, name: "world", scope: !153, file: !154, line: 1221, baseType: !456, size: 64, offset: 1088)
!456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !457, size: 64)
!457 = !DICompositeType(tag: DW_TAG_structure_type, name: "World", file: !154, line: 52, flags: DIFlagFwdDecl)
!458 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !153, file: !154, line: 1223, baseType: !152, size: 64, offset: 1152)
!459 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !153, file: !154, line: 1225, baseType: !58, size: 128, offset: 1216)
!460 = !DIDerivedType(tag: DW_TAG_member, name: "basact", scope: !153, file: !154, line: 1226, baseType: !461, size: 64, offset: 1344)
!461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !462, size: 64)
!462 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Base", file: !154, line: 69, size: 320, elements: !463)
!463 = !{!464, !465, !466, !467, !468, !469, !470, !471}
!464 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !462, file: !154, line: 70, baseType: !461, size: 64)
!465 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !462, file: !154, line: 70, baseType: !461, size: 64, offset: 64)
!466 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !462, file: !154, line: 71, baseType: !223, size: 32, offset: 128)
!467 = !DIDerivedType(tag: DW_TAG_member, name: "selcol", scope: !462, file: !154, line: 71, baseType: !223, size: 32, offset: 160)
!468 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !462, file: !154, line: 72, baseType: !22, size: 32, offset: 192)
!469 = !DIDerivedType(tag: DW_TAG_member, name: "sx", scope: !462, file: !154, line: 73, baseType: !48, size: 16, offset: 224)
!470 = !DIDerivedType(tag: DW_TAG_member, name: "sy", scope: !462, file: !154, line: 73, baseType: !48, size: 16, offset: 240)
!471 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !462, file: !154, line: 74, baseType: !161, size: 64, offset: 256)
!472 = !DIDerivedType(tag: DW_TAG_member, name: "obedit", scope: !153, file: !154, line: 1227, baseType: !161, size: 64, offset: 1408)
!473 = !DIDerivedType(tag: DW_TAG_member, name: "cursor", scope: !153, file: !154, line: 1229, baseType: !227, size: 96, offset: 1472)
!474 = !DIDerivedType(tag: DW_TAG_member, name: "twcent", scope: !153, file: !154, line: 1230, baseType: !227, size: 96, offset: 1568)
!475 = !DIDerivedType(tag: DW_TAG_member, name: "twmin", scope: !153, file: !154, line: 1231, baseType: !227, size: 96, offset: 1664)
!476 = !DIDerivedType(tag: DW_TAG_member, name: "twmax", scope: !153, file: !154, line: 1231, baseType: !227, size: 96, offset: 1760)
!477 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !153, file: !154, line: 1233, baseType: !223, size: 32, offset: 1856)
!478 = !DIDerivedType(tag: DW_TAG_member, name: "layact", scope: !153, file: !154, line: 1234, baseType: !22, size: 32, offset: 1888)
!479 = !DIDerivedType(tag: DW_TAG_member, name: "lay_updated", scope: !153, file: !154, line: 1235, baseType: !223, size: 32, offset: 1920)
!480 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !153, file: !154, line: 1237, baseType: !48, size: 16, offset: 1952)
!481 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !153, file: !154, line: 1239, baseType: !14, size: 8, offset: 1968)
!482 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !153, file: !154, line: 1240, baseType: !483, size: 8, offset: 1976)
!483 = !DICompositeType(tag: DW_TAG_array_type, baseType: !14, size: 8, elements: !484)
!484 = !{!485}
!485 = !DISubrange(count: 1)
!486 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !153, file: !154, line: 1242, baseType: !487, size: 64, offset: 1984)
!487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !488, size: 64)
!488 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeTree", file: !489, line: 328, size: 3456, elements: !490)
!489 = !DIFile(filename: "blender/source/blender/makesdna/DNA_node_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!490 = !{!491, !492, !493, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !523, !524, !525, !528, !533, !534, !537, !541, !545, !549, !553, !554, !555, !556}
!491 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !488, file: !489, line: 329, baseType: !112, size: 960)
!492 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !488, file: !489, line: 330, baseType: !158, size: 64, offset: 960)
!493 = !DIDerivedType(tag: DW_TAG_member, name: "typeinfo", scope: !488, file: !489, line: 332, baseType: !494, size: 64, offset: 1024)
!494 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !495, size: 64)
!495 = !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeTreeType", file: !489, line: 332, flags: DIFlagFwdDecl)
!496 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !488, file: !489, line: 333, baseType: !33, size: 512, offset: 1088)
!497 = !DIDerivedType(tag: DW_TAG_member, name: "interface_type", scope: !488, file: !489, line: 335, baseType: !81, size: 64, offset: 1600)
!498 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !488, file: !489, line: 337, baseType: !258, size: 64, offset: 1664)
!499 = !DIDerivedType(tag: DW_TAG_member, name: "view_center", scope: !488, file: !489, line: 338, baseType: !420, size: 64, offset: 1728)
!500 = !DIDerivedType(tag: DW_TAG_member, name: "nodes", scope: !488, file: !489, line: 340, baseType: !58, size: 128, offset: 1792)
!501 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !488, file: !489, line: 340, baseType: !58, size: 128, offset: 1920)
!502 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !488, file: !489, line: 342, baseType: !22, size: 32, offset: 2048)
!503 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !488, file: !489, line: 342, baseType: !22, size: 32, offset: 2080)
!504 = !DIDerivedType(tag: DW_TAG_member, name: "cur_index", scope: !488, file: !489, line: 343, baseType: !22, size: 32, offset: 2112)
!505 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !488, file: !489, line: 345, baseType: !22, size: 32, offset: 2144)
!506 = !DIDerivedType(tag: DW_TAG_member, name: "update", scope: !488, file: !489, line: 346, baseType: !22, size: 32, offset: 2176)
!507 = !DIDerivedType(tag: DW_TAG_member, name: "is_updating", scope: !488, file: !489, line: 347, baseType: !48, size: 16, offset: 2208)
!508 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !488, file: !489, line: 348, baseType: !48, size: 16, offset: 2224)
!509 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !488, file: !489, line: 349, baseType: !22, size: 32, offset: 2240)
!510 = !DIDerivedType(tag: DW_TAG_member, name: "nodetype", scope: !488, file: !489, line: 351, baseType: !22, size: 32, offset: 2272)
!511 = !DIDerivedType(tag: DW_TAG_member, name: "edit_quality", scope: !488, file: !489, line: 353, baseType: !48, size: 16, offset: 2304)
!512 = !DIDerivedType(tag: DW_TAG_member, name: "render_quality", scope: !488, file: !489, line: 354, baseType: !48, size: 16, offset: 2320)
!513 = !DIDerivedType(tag: DW_TAG_member, name: "chunksize", scope: !488, file: !489, line: 355, baseType: !22, size: 32, offset: 2336)
!514 = !DIDerivedType(tag: DW_TAG_member, name: "viewer_border", scope: !488, file: !489, line: 357, baseType: !515, size: 128, offset: 2368)
!515 = !DIDerivedType(tag: DW_TAG_typedef, name: "rctf", file: !516, line: 95, baseType: !517)
!516 = !DIFile(filename: "blender/source/blender/makesdna/DNA_vec_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!517 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rctf", file: !516, line: 92, size: 128, elements: !518)
!518 = !{!519, !520, !521, !522}
!519 = !DIDerivedType(tag: DW_TAG_member, name: "xmin", scope: !517, file: !516, line: 93, baseType: !191, size: 32)
!520 = !DIDerivedType(tag: DW_TAG_member, name: "xmax", scope: !517, file: !516, line: 93, baseType: !191, size: 32, offset: 32)
!521 = !DIDerivedType(tag: DW_TAG_member, name: "ymin", scope: !517, file: !516, line: 94, baseType: !191, size: 32, offset: 64)
!522 = !DIDerivedType(tag: DW_TAG_member, name: "ymax", scope: !517, file: !516, line: 94, baseType: !191, size: 32, offset: 96)
!523 = !DIDerivedType(tag: DW_TAG_member, name: "inputs", scope: !488, file: !489, line: 363, baseType: !58, size: 128, offset: 2496)
!524 = !DIDerivedType(tag: DW_TAG_member, name: "outputs", scope: !488, file: !489, line: 363, baseType: !58, size: 128, offset: 2624)
!525 = !DIDerivedType(tag: DW_TAG_member, name: "previews", scope: !488, file: !489, line: 368, baseType: !526, size: 64, offset: 2752)
!526 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !527, size: 64)
!527 = !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeInstanceHash", file: !489, line: 48, flags: DIFlagFwdDecl)
!528 = !DIDerivedType(tag: DW_TAG_member, name: "active_viewer_key", scope: !488, file: !489, line: 372, baseType: !529, size: 32, offset: 2816)
!529 = !DIDerivedType(tag: DW_TAG_typedef, name: "bNodeInstanceKey", file: !489, line: 274, baseType: !530)
!530 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeInstanceKey", file: !489, line: 271, size: 32, elements: !531)
!531 = !{!532}
!532 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !530, file: !489, line: 273, baseType: !223, size: 32)
!533 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !488, file: !489, line: 373, baseType: !22, size: 32, offset: 2848)
!534 = !DIDerivedType(tag: DW_TAG_member, name: "execdata", scope: !488, file: !489, line: 382, baseType: !535, size: 64, offset: 2880)
!535 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !536, size: 64)
!536 = !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeTreeExec", file: !489, line: 46, flags: DIFlagFwdDecl)
!537 = !DIDerivedType(tag: DW_TAG_member, name: "progress", scope: !488, file: !489, line: 385, baseType: !538, size: 64, offset: 2944)
!538 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !539, size: 64)
!539 = !DISubroutineType(types: !540)
!540 = !{null, !56, !191}
!541 = !DIDerivedType(tag: DW_TAG_member, name: "stats_draw", scope: !488, file: !489, line: 386, baseType: !542, size: 64, offset: 3008)
!542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !543, size: 64)
!543 = !DISubroutineType(types: !544)
!544 = !{null, !56, !288}
!545 = !DIDerivedType(tag: DW_TAG_member, name: "test_break", scope: !488, file: !489, line: 387, baseType: !546, size: 64, offset: 3072)
!546 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !547, size: 64)
!547 = !DISubroutineType(types: !548)
!548 = !{!22, !56}
!549 = !DIDerivedType(tag: DW_TAG_member, name: "update_draw", scope: !488, file: !489, line: 388, baseType: !550, size: 64, offset: 3136)
!550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !551, size: 64)
!551 = !DISubroutineType(types: !552)
!552 = !{null, !56}
!553 = !DIDerivedType(tag: DW_TAG_member, name: "tbh", scope: !488, file: !489, line: 389, baseType: !56, size: 64, offset: 3200)
!554 = !DIDerivedType(tag: DW_TAG_member, name: "prh", scope: !488, file: !489, line: 389, baseType: !56, size: 64, offset: 3264)
!555 = !DIDerivedType(tag: DW_TAG_member, name: "sdh", scope: !488, file: !489, line: 389, baseType: !56, size: 64, offset: 3328)
!556 = !DIDerivedType(tag: DW_TAG_member, name: "udh", scope: !488, file: !489, line: 389, baseType: !56, size: 64, offset: 3392)
!557 = !DIDerivedType(tag: DW_TAG_member, name: "ed", scope: !153, file: !154, line: 1244, baseType: !558, size: 64, offset: 2048)
!558 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !559, size: 64)
!559 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Editing", file: !560, line: 200, size: 17024, elements: !561)
!560 = !DIFile(filename: "blender/source/blender/makesdna/DNA_sequence_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!561 = !{!562, !563, !564, !565, !988, !989, !990, !991, !992, !993, !994}
!562 = !DIDerivedType(tag: DW_TAG_member, name: "seqbasep", scope: !559, file: !560, line: 201, baseType: !412, size: 64)
!563 = !DIDerivedType(tag: DW_TAG_member, name: "seqbase", scope: !559, file: !560, line: 202, baseType: !58, size: 128, offset: 64)
!564 = !DIDerivedType(tag: DW_TAG_member, name: "metastack", scope: !559, file: !560, line: 203, baseType: !58, size: 128, offset: 192)
!565 = !DIDerivedType(tag: DW_TAG_member, name: "act_seq", scope: !559, file: !560, line: 206, baseType: !566, size: 64, offset: 320)
!566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !567, size: 64)
!567 = !DIDerivedType(tag: DW_TAG_typedef, name: "Sequence", file: !560, line: 190, baseType: !568)
!568 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Sequence", file: !560, line: 126, size: 2816, elements: !569)
!569 = !{!570, !572, !573, !574, !575, !576, !577, !578, !579, !580, !581, !582, !583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !668, !669, !670, !671, !949, !963, !964, !965, !966, !967, !968, !969, !970, !973, !974, !975, !976, !977, !978, !979, !980, !981, !982, !983, !984, !985, !987}
!570 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !568, file: !560, line: 127, baseType: !571, size: 64)
!571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !568, size: 64)
!572 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !568, file: !560, line: 127, baseType: !571, size: 64, offset: 64)
!573 = !DIDerivedType(tag: DW_TAG_member, name: "tmp", scope: !568, file: !560, line: 128, baseType: !56, size: 64, offset: 128)
!574 = !DIDerivedType(tag: DW_TAG_member, name: "lib", scope: !568, file: !560, line: 129, baseType: !56, size: 64, offset: 192)
!575 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !568, file: !560, line: 130, baseType: !33, size: 512, offset: 256)
!576 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !568, file: !560, line: 132, baseType: !22, size: 32, offset: 768)
!577 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !568, file: !560, line: 132, baseType: !22, size: 32, offset: 800)
!578 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !568, file: !560, line: 133, baseType: !22, size: 32, offset: 832)
!579 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !568, file: !560, line: 134, baseType: !22, size: 32, offset: 864)
!580 = !DIDerivedType(tag: DW_TAG_member, name: "startofs", scope: !568, file: !560, line: 134, baseType: !22, size: 32, offset: 896)
!581 = !DIDerivedType(tag: DW_TAG_member, name: "endofs", scope: !568, file: !560, line: 134, baseType: !22, size: 32, offset: 928)
!582 = !DIDerivedType(tag: DW_TAG_member, name: "startstill", scope: !568, file: !560, line: 135, baseType: !22, size: 32, offset: 960)
!583 = !DIDerivedType(tag: DW_TAG_member, name: "endstill", scope: !568, file: !560, line: 135, baseType: !22, size: 32, offset: 992)
!584 = !DIDerivedType(tag: DW_TAG_member, name: "machine", scope: !568, file: !560, line: 136, baseType: !22, size: 32, offset: 1024)
!585 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !568, file: !560, line: 136, baseType: !22, size: 32, offset: 1056)
!586 = !DIDerivedType(tag: DW_TAG_member, name: "startdisp", scope: !568, file: !560, line: 137, baseType: !22, size: 32, offset: 1088)
!587 = !DIDerivedType(tag: DW_TAG_member, name: "enddisp", scope: !568, file: !560, line: 137, baseType: !22, size: 32, offset: 1120)
!588 = !DIDerivedType(tag: DW_TAG_member, name: "sat", scope: !568, file: !560, line: 138, baseType: !191, size: 32, offset: 1152)
!589 = !DIDerivedType(tag: DW_TAG_member, name: "mul", scope: !568, file: !560, line: 139, baseType: !191, size: 32, offset: 1184)
!590 = !DIDerivedType(tag: DW_TAG_member, name: "handsize", scope: !568, file: !560, line: 139, baseType: !191, size: 32, offset: 1216)
!591 = !DIDerivedType(tag: DW_TAG_member, name: "anim_preseek", scope: !568, file: !560, line: 141, baseType: !48, size: 16, offset: 1248)
!592 = !DIDerivedType(tag: DW_TAG_member, name: "streamindex", scope: !568, file: !560, line: 142, baseType: !48, size: 16, offset: 1264)
!593 = !DIDerivedType(tag: DW_TAG_member, name: "multicam_source", scope: !568, file: !560, line: 143, baseType: !22, size: 32, offset: 1280)
!594 = !DIDerivedType(tag: DW_TAG_member, name: "clip_flag", scope: !568, file: !560, line: 144, baseType: !22, size: 32, offset: 1312)
!595 = !DIDerivedType(tag: DW_TAG_member, name: "strip", scope: !568, file: !560, line: 146, baseType: !596, size: 64, offset: 1344)
!596 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !597, size: 64)
!597 = !DIDerivedType(tag: DW_TAG_typedef, name: "Strip", file: !560, line: 114, baseType: !598)
!598 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Strip", file: !560, line: 99, size: 7232, elements: !599)
!599 = !{!600, !602, !603, !604, !605, !606, !607, !618, !622, !636, !645, !652, !662}
!600 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !598, file: !560, line: 100, baseType: !601, size: 64)
!601 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !598, size: 64)
!602 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !598, file: !560, line: 100, baseType: !601, size: 64, offset: 64)
!603 = !DIDerivedType(tag: DW_TAG_member, name: "us", scope: !598, file: !560, line: 101, baseType: !22, size: 32, offset: 128)
!604 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !598, file: !560, line: 101, baseType: !22, size: 32, offset: 160)
!605 = !DIDerivedType(tag: DW_TAG_member, name: "startstill", scope: !598, file: !560, line: 102, baseType: !22, size: 32, offset: 192)
!606 = !DIDerivedType(tag: DW_TAG_member, name: "endstill", scope: !598, file: !560, line: 102, baseType: !22, size: 32, offset: 224)
!607 = !DIDerivedType(tag: DW_TAG_member, name: "stripdata", scope: !598, file: !560, line: 103, baseType: !608, size: 64, offset: 256)
!608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !609, size: 64)
!609 = !DIDerivedType(tag: DW_TAG_typedef, name: "StripElem", file: !560, line: 59, baseType: !610)
!610 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StripElem", file: !560, line: 56, size: 2112, elements: !611)
!611 = !{!612, !616, !617}
!612 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !610, file: !560, line: 57, baseType: !613, size: 2048)
!613 = !DICompositeType(tag: DW_TAG_array_type, baseType: !14, size: 2048, elements: !614)
!614 = !{!615}
!615 = !DISubrange(count: 256)
!616 = !DIDerivedType(tag: DW_TAG_member, name: "orig_width", scope: !610, file: !560, line: 58, baseType: !22, size: 32, offset: 2048)
!617 = !DIDerivedType(tag: DW_TAG_member, name: "orig_height", scope: !610, file: !560, line: 58, baseType: !22, size: 32, offset: 2080)
!618 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !598, file: !560, line: 106, baseType: !619, size: 6144, offset: 320)
!619 = !DICompositeType(tag: DW_TAG_array_type, baseType: !14, size: 6144, elements: !620)
!620 = !{!621}
!621 = !DISubrange(count: 768)
!622 = !DIDerivedType(tag: DW_TAG_member, name: "proxy", scope: !598, file: !560, line: 107, baseType: !623, size: 64, offset: 6464)
!623 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !624, size: 64)
!624 = !DIDerivedType(tag: DW_TAG_typedef, name: "StripProxy", file: !560, line: 97, baseType: !625)
!625 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StripProxy", file: !560, line: 83, size: 8320, elements: !626)
!626 = !{!627, !628, !629, !632, !633, !634, !635}
!627 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !625, file: !560, line: 84, baseType: !619, size: 6144)
!628 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !625, file: !560, line: 87, baseType: !613, size: 2048, offset: 6144)
!629 = !DIDerivedType(tag: DW_TAG_member, name: "anim", scope: !625, file: !560, line: 88, baseType: !630, size: 64, offset: 8192)
!630 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !631, size: 64)
!631 = !DICompositeType(tag: DW_TAG_structure_type, name: "anim", file: !426, line: 41, flags: DIFlagFwdDecl)
!632 = !DIDerivedType(tag: DW_TAG_member, name: "tc", scope: !625, file: !560, line: 90, baseType: !48, size: 16, offset: 8256)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !625, file: !560, line: 92, baseType: !48, size: 16, offset: 8272)
!634 = !DIDerivedType(tag: DW_TAG_member, name: "build_size_flags", scope: !625, file: !560, line: 93, baseType: !48, size: 16, offset: 8288)
!635 = !DIDerivedType(tag: DW_TAG_member, name: "build_tc_flags", scope: !625, file: !560, line: 95, baseType: !48, size: 16, offset: 8304)
!636 = !DIDerivedType(tag: DW_TAG_member, name: "crop", scope: !598, file: !560, line: 108, baseType: !637, size: 64, offset: 6528)
!637 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !638, size: 64)
!638 = !DIDerivedType(tag: DW_TAG_typedef, name: "StripCrop", file: !560, line: 66, baseType: !639)
!639 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StripCrop", file: !560, line: 61, size: 128, elements: !640)
!640 = !{!641, !642, !643, !644}
!641 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !639, file: !560, line: 62, baseType: !22, size: 32)
!642 = !DIDerivedType(tag: DW_TAG_member, name: "bottom", scope: !639, file: !560, line: 63, baseType: !22, size: 32, offset: 32)
!643 = !DIDerivedType(tag: DW_TAG_member, name: "left", scope: !639, file: !560, line: 64, baseType: !22, size: 32, offset: 64)
!644 = !DIDerivedType(tag: DW_TAG_member, name: "right", scope: !639, file: !560, line: 65, baseType: !22, size: 32, offset: 96)
!645 = !DIDerivedType(tag: DW_TAG_member, name: "transform", scope: !598, file: !560, line: 109, baseType: !646, size: 64, offset: 6592)
!646 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !647, size: 64)
!647 = !DIDerivedType(tag: DW_TAG_typedef, name: "StripTransform", file: !560, line: 71, baseType: !648)
!648 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StripTransform", file: !560, line: 68, size: 64, elements: !649)
!649 = !{!650, !651}
!650 = !DIDerivedType(tag: DW_TAG_member, name: "xofs", scope: !648, file: !560, line: 69, baseType: !22, size: 32)
!651 = !DIDerivedType(tag: DW_TAG_member, name: "yofs", scope: !648, file: !560, line: 70, baseType: !22, size: 32, offset: 32)
!652 = !DIDerivedType(tag: DW_TAG_member, name: "color_balance", scope: !598, file: !560, line: 110, baseType: !653, size: 64, offset: 6656)
!653 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !654, size: 64)
!654 = !DIDerivedType(tag: DW_TAG_typedef, name: "StripColorBalance", file: !560, line: 81, baseType: !655)
!655 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StripColorBalance", file: !560, line: 73, size: 352, elements: !656)
!656 = !{!657, !658, !659, !660, !661}
!657 = !DIDerivedType(tag: DW_TAG_member, name: "lift", scope: !655, file: !560, line: 74, baseType: !227, size: 96)
!658 = !DIDerivedType(tag: DW_TAG_member, name: "gamma", scope: !655, file: !560, line: 75, baseType: !227, size: 96, offset: 96)
!659 = !DIDerivedType(tag: DW_TAG_member, name: "gain", scope: !655, file: !560, line: 76, baseType: !227, size: 96, offset: 192)
!660 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !655, file: !560, line: 77, baseType: !22, size: 32, offset: 288)
!661 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !655, file: !560, line: 78, baseType: !22, size: 32, offset: 320)
!662 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace_settings", scope: !598, file: !560, line: 113, baseType: !663, size: 512, offset: 6720)
!663 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedColorspaceSettings", file: !664, line: 182, baseType: !665)
!664 = !DIFile(filename: "blender/source/blender/makesdna/DNA_color_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!665 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedColorspaceSettings", file: !664, line: 180, size: 512, elements: !666)
!666 = !{!667}
!667 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !665, file: !664, line: 181, baseType: !33, size: 512)
!668 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !568, file: !560, line: 148, baseType: !182, size: 64, offset: 1408)
!669 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !568, file: !560, line: 151, baseType: !152, size: 64, offset: 1472)
!670 = !DIDerivedType(tag: DW_TAG_member, name: "scene_camera", scope: !568, file: !560, line: 152, baseType: !161, size: 64, offset: 1536)
!671 = !DIDerivedType(tag: DW_TAG_member, name: "clip", scope: !568, file: !560, line: 153, baseType: !672, size: 64, offset: 1600)
!672 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !673, size: 64)
!673 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieClip", file: !674, line: 64, size: 19136, elements: !675)
!674 = !DIFile(filename: "blender/source/blender/makesdna/DNA_movieclip_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!675 = !{!676, !677, !678, !679, !680, !681, !683, !684, !685, !686, !689, !690, !935, !936, !944, !945, !946, !947, !948}
!676 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !673, file: !674, line: 65, baseType: !112, size: 960)
!677 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !673, file: !674, line: 66, baseType: !158, size: 64, offset: 960)
!678 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !673, file: !674, line: 68, baseType: !130, size: 8192, offset: 1024)
!679 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !673, file: !674, line: 70, baseType: !22, size: 32, offset: 9216)
!680 = !DIDerivedType(tag: DW_TAG_member, name: "lastframe", scope: !673, file: !674, line: 71, baseType: !22, size: 32, offset: 9248)
!681 = !DIDerivedType(tag: DW_TAG_member, name: "lastsize", scope: !673, file: !674, line: 72, baseType: !682, size: 64, offset: 9280)
!682 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 64, elements: !421)
!683 = !DIDerivedType(tag: DW_TAG_member, name: "aspx", scope: !673, file: !674, line: 74, baseType: !191, size: 32, offset: 9344)
!684 = !DIDerivedType(tag: DW_TAG_member, name: "aspy", scope: !673, file: !674, line: 74, baseType: !191, size: 32, offset: 9376)
!685 = !DIDerivedType(tag: DW_TAG_member, name: "anim", scope: !673, file: !674, line: 76, baseType: !630, size: 64, offset: 9408)
!686 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !673, file: !674, line: 77, baseType: !687, size: 64, offset: 9472)
!687 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !688, size: 64)
!688 = !DICompositeType(tag: DW_TAG_structure_type, name: "MovieClipCache", file: !674, line: 77, flags: DIFlagFwdDecl)
!689 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !673, file: !674, line: 78, baseType: !258, size: 64, offset: 9536)
!690 = !DIDerivedType(tag: DW_TAG_member, name: "tracking", scope: !673, file: !674, line: 80, baseType: !691, size: 2624, offset: 9600)
!691 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTracking", file: !692, line: 340, size: 2624, elements: !693)
!692 = !DIFile(filename: "blender/source/blender/makesdna/DNA_tracking_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!693 = !{!694, !722, !740, !741, !742, !757, !815, !816, !915, !916, !917, !918, !924}
!694 = !DIDerivedType(tag: DW_TAG_member, name: "settings", scope: !691, file: !692, line: 341, baseType: !695, size: 576)
!695 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingSettings", file: !692, line: 251, baseType: !696)
!696 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingSettings", file: !692, line: 207, size: 576, elements: !697)
!697 = !{!698, !699, !700, !701, !702, !703, !704, !705, !706, !707, !708, !709, !710, !711, !712, !713, !714, !715, !716, !717, !718, !719, !720, !721}
!698 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !696, file: !692, line: 208, baseType: !22, size: 32)
!699 = !DIDerivedType(tag: DW_TAG_member, name: "default_motion_model", scope: !696, file: !692, line: 211, baseType: !48, size: 16, offset: 32)
!700 = !DIDerivedType(tag: DW_TAG_member, name: "default_algorithm_flag", scope: !696, file: !692, line: 212, baseType: !48, size: 16, offset: 48)
!701 = !DIDerivedType(tag: DW_TAG_member, name: "default_minimum_correlation", scope: !696, file: !692, line: 213, baseType: !191, size: 32, offset: 64)
!702 = !DIDerivedType(tag: DW_TAG_member, name: "default_pattern_size", scope: !696, file: !692, line: 214, baseType: !48, size: 16, offset: 96)
!703 = !DIDerivedType(tag: DW_TAG_member, name: "default_search_size", scope: !696, file: !692, line: 215, baseType: !48, size: 16, offset: 112)
!704 = !DIDerivedType(tag: DW_TAG_member, name: "default_frames_limit", scope: !696, file: !692, line: 216, baseType: !48, size: 16, offset: 128)
!705 = !DIDerivedType(tag: DW_TAG_member, name: "default_margin", scope: !696, file: !692, line: 217, baseType: !48, size: 16, offset: 144)
!706 = !DIDerivedType(tag: DW_TAG_member, name: "default_pattern_match", scope: !696, file: !692, line: 218, baseType: !48, size: 16, offset: 160)
!707 = !DIDerivedType(tag: DW_TAG_member, name: "default_flag", scope: !696, file: !692, line: 219, baseType: !48, size: 16, offset: 176)
!708 = !DIDerivedType(tag: DW_TAG_member, name: "default_weight", scope: !696, file: !692, line: 220, baseType: !191, size: 32, offset: 192)
!709 = !DIDerivedType(tag: DW_TAG_member, name: "motion_flag", scope: !696, file: !692, line: 222, baseType: !48, size: 16, offset: 224)
!710 = !DIDerivedType(tag: DW_TAG_member, name: "speed", scope: !696, file: !692, line: 225, baseType: !48, size: 16, offset: 240)
!711 = !DIDerivedType(tag: DW_TAG_member, name: "keyframe1", scope: !696, file: !692, line: 228, baseType: !22, size: 32, offset: 256)
!712 = !DIDerivedType(tag: DW_TAG_member, name: "keyframe2", scope: !696, file: !692, line: 229, baseType: !22, size: 32, offset: 288)
!713 = !DIDerivedType(tag: DW_TAG_member, name: "reconstruction_flag", scope: !696, file: !692, line: 233, baseType: !22, size: 32, offset: 320)
!714 = !DIDerivedType(tag: DW_TAG_member, name: "refine_camera_intrinsics", scope: !696, file: !692, line: 236, baseType: !48, size: 16, offset: 352)
!715 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !696, file: !692, line: 236, baseType: !48, size: 16, offset: 368)
!716 = !DIDerivedType(tag: DW_TAG_member, name: "dist", scope: !696, file: !692, line: 241, baseType: !191, size: 32, offset: 384)
!717 = !DIDerivedType(tag: DW_TAG_member, name: "clean_frames", scope: !696, file: !692, line: 244, baseType: !22, size: 32, offset: 416)
!718 = !DIDerivedType(tag: DW_TAG_member, name: "clean_action", scope: !696, file: !692, line: 244, baseType: !22, size: 32, offset: 448)
!719 = !DIDerivedType(tag: DW_TAG_member, name: "clean_error", scope: !696, file: !692, line: 245, baseType: !191, size: 32, offset: 480)
!720 = !DIDerivedType(tag: DW_TAG_member, name: "object_distance", scope: !696, file: !692, line: 248, baseType: !191, size: 32, offset: 512)
!721 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !696, file: !692, line: 250, baseType: !22, size: 32, offset: 544)
!722 = !DIDerivedType(tag: DW_TAG_member, name: "camera", scope: !691, file: !692, line: 342, baseType: !723, size: 448, offset: 576)
!723 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingCamera", file: !692, line: 79, baseType: !724)
!724 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingCamera", file: !692, line: 61, size: 448, elements: !725)
!725 = !{!726, !727, !728, !729, !730, !731, !732, !733, !734, !735, !736, !737, !738, !739}
!726 = !DIDerivedType(tag: DW_TAG_member, name: "intrinsics", scope: !724, file: !692, line: 62, baseType: !56, size: 64)
!727 = !DIDerivedType(tag: DW_TAG_member, name: "distortion_model", scope: !724, file: !692, line: 64, baseType: !48, size: 16, offset: 64)
!728 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !724, file: !692, line: 65, baseType: !48, size: 16, offset: 80)
!729 = !DIDerivedType(tag: DW_TAG_member, name: "sensor_width", scope: !724, file: !692, line: 67, baseType: !191, size: 32, offset: 96)
!730 = !DIDerivedType(tag: DW_TAG_member, name: "pixel_aspect", scope: !724, file: !692, line: 68, baseType: !191, size: 32, offset: 128)
!731 = !DIDerivedType(tag: DW_TAG_member, name: "focal", scope: !724, file: !692, line: 69, baseType: !191, size: 32, offset: 160)
!732 = !DIDerivedType(tag: DW_TAG_member, name: "units", scope: !724, file: !692, line: 70, baseType: !48, size: 16, offset: 192)
!733 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !724, file: !692, line: 71, baseType: !48, size: 16, offset: 208)
!734 = !DIDerivedType(tag: DW_TAG_member, name: "principal", scope: !724, file: !692, line: 72, baseType: !420, size: 64, offset: 224)
!735 = !DIDerivedType(tag: DW_TAG_member, name: "k1", scope: !724, file: !692, line: 75, baseType: !191, size: 32, offset: 288)
!736 = !DIDerivedType(tag: DW_TAG_member, name: "k2", scope: !724, file: !692, line: 75, baseType: !191, size: 32, offset: 320)
!737 = !DIDerivedType(tag: DW_TAG_member, name: "k3", scope: !724, file: !692, line: 75, baseType: !191, size: 32, offset: 352)
!738 = !DIDerivedType(tag: DW_TAG_member, name: "division_k1", scope: !724, file: !692, line: 78, baseType: !191, size: 32, offset: 384)
!739 = !DIDerivedType(tag: DW_TAG_member, name: "division_k2", scope: !724, file: !692, line: 78, baseType: !191, size: 32, offset: 416)
!740 = !DIDerivedType(tag: DW_TAG_member, name: "tracks", scope: !691, file: !692, line: 343, baseType: !58, size: 128, offset: 1024)
!741 = !DIDerivedType(tag: DW_TAG_member, name: "plane_tracks", scope: !691, file: !692, line: 344, baseType: !58, size: 128, offset: 1152)
!742 = !DIDerivedType(tag: DW_TAG_member, name: "reconstruction", scope: !691, file: !692, line: 345, baseType: !743, size: 192, offset: 1280)
!743 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingReconstruction", file: !692, line: 278, baseType: !744)
!744 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingReconstruction", file: !692, line: 270, size: 192, elements: !745)
!745 = !{!746, !747, !748, !749, !750}
!746 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !744, file: !692, line: 271, baseType: !22, size: 32)
!747 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !744, file: !692, line: 273, baseType: !191, size: 32, offset: 32)
!748 = !DIDerivedType(tag: DW_TAG_member, name: "last_camera", scope: !744, file: !692, line: 275, baseType: !22, size: 32, offset: 64)
!749 = !DIDerivedType(tag: DW_TAG_member, name: "camnr", scope: !744, file: !692, line: 276, baseType: !22, size: 32, offset: 96)
!750 = !DIDerivedType(tag: DW_TAG_member, name: "cameras", scope: !744, file: !692, line: 277, baseType: !751, size: 64, offset: 128)
!751 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !752, size: 64)
!752 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieReconstructedCamera", file: !692, line: 55, size: 576, elements: !753)
!753 = !{!754, !755, !756}
!754 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !752, file: !692, line: 56, baseType: !22, size: 32)
!755 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !752, file: !692, line: 57, baseType: !191, size: 32, offset: 32)
!756 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !752, file: !692, line: 58, baseType: !309, size: 512, offset: 64)
!757 = !DIDerivedType(tag: DW_TAG_member, name: "stabilization", scope: !691, file: !692, line: 346, baseType: !758, size: 384, offset: 1472)
!758 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingStabilization", file: !692, line: 268, baseType: !759)
!759 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingStabilization", file: !692, line: 253, size: 384, elements: !760)
!760 = !{!761, !762, !763, !764, !765, !809, !810, !811, !812, !813, !814}
!761 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !759, file: !692, line: 254, baseType: !22, size: 32)
!762 = !DIDerivedType(tag: DW_TAG_member, name: "tot_track", scope: !759, file: !692, line: 255, baseType: !22, size: 32, offset: 32)
!763 = !DIDerivedType(tag: DW_TAG_member, name: "act_track", scope: !759, file: !692, line: 255, baseType: !22, size: 32, offset: 64)
!764 = !DIDerivedType(tag: DW_TAG_member, name: "maxscale", scope: !759, file: !692, line: 258, baseType: !191, size: 32, offset: 96)
!765 = !DIDerivedType(tag: DW_TAG_member, name: "rot_track", scope: !759, file: !692, line: 259, baseType: !766, size: 64, offset: 128)
!766 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !767, size: 64)
!767 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingTrack", file: !692, line: 164, baseType: !768)
!768 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingTrack", file: !692, line: 108, size: 1664, elements: !769)
!769 = !{!770, !772, !773, !774, !775, !776, !777, !778, !779, !780, !781, !794, !795, !796, !797, !798, !799, !800, !801, !802, !803, !804, !805, !806, !807, !808}
!770 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !768, file: !692, line: 109, baseType: !771, size: 64)
!771 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !768, size: 64)
!772 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !768, file: !692, line: 109, baseType: !771, size: 64, offset: 64)
!773 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !768, file: !692, line: 111, baseType: !33, size: 512, offset: 128)
!774 = !DIDerivedType(tag: DW_TAG_member, name: "pat_min", scope: !768, file: !692, line: 119, baseType: !420, size: 64, offset: 640)
!775 = !DIDerivedType(tag: DW_TAG_member, name: "pat_max", scope: !768, file: !692, line: 119, baseType: !420, size: 64, offset: 704)
!776 = !DIDerivedType(tag: DW_TAG_member, name: "search_min", scope: !768, file: !692, line: 125, baseType: !420, size: 64, offset: 768)
!777 = !DIDerivedType(tag: DW_TAG_member, name: "search_max", scope: !768, file: !692, line: 125, baseType: !420, size: 64, offset: 832)
!778 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !768, file: !692, line: 127, baseType: !420, size: 64, offset: 896)
!779 = !DIDerivedType(tag: DW_TAG_member, name: "markersnr", scope: !768, file: !692, line: 130, baseType: !22, size: 32, offset: 960)
!780 = !DIDerivedType(tag: DW_TAG_member, name: "last_marker", scope: !768, file: !692, line: 131, baseType: !22, size: 32, offset: 992)
!781 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !768, file: !692, line: 132, baseType: !782, size: 64, offset: 1024)
!782 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !783, size: 64)
!783 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingMarker", file: !692, line: 106, baseType: !784)
!784 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingMarker", file: !692, line: 81, size: 512, elements: !785)
!785 = !{!786, !787, !790, !791, !792, !793}
!786 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !784, file: !692, line: 82, baseType: !420, size: 64)
!787 = !DIDerivedType(tag: DW_TAG_member, name: "pattern_corners", scope: !784, file: !692, line: 97, baseType: !788, size: 256, offset: 64)
!788 = !DICompositeType(tag: DW_TAG_array_type, baseType: !191, size: 256, elements: !789)
!789 = !{!302, !422}
!790 = !DIDerivedType(tag: DW_TAG_member, name: "search_min", scope: !784, file: !692, line: 102, baseType: !420, size: 64, offset: 320)
!791 = !DIDerivedType(tag: DW_TAG_member, name: "search_max", scope: !784, file: !692, line: 102, baseType: !420, size: 64, offset: 384)
!792 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !784, file: !692, line: 104, baseType: !22, size: 32, offset: 448)
!793 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !784, file: !692, line: 105, baseType: !22, size: 32, offset: 480)
!794 = !DIDerivedType(tag: DW_TAG_member, name: "bundle_pos", scope: !768, file: !692, line: 135, baseType: !227, size: 96, offset: 1088)
!795 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !768, file: !692, line: 136, baseType: !191, size: 32, offset: 1184)
!796 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !768, file: !692, line: 139, baseType: !22, size: 32, offset: 1216)
!797 = !DIDerivedType(tag: DW_TAG_member, name: "pat_flag", scope: !768, file: !692, line: 139, baseType: !22, size: 32, offset: 1248)
!798 = !DIDerivedType(tag: DW_TAG_member, name: "search_flag", scope: !768, file: !692, line: 139, baseType: !22, size: 32, offset: 1280)
!799 = !DIDerivedType(tag: DW_TAG_member, name: "color", scope: !768, file: !692, line: 140, baseType: !227, size: 96, offset: 1312)
!800 = !DIDerivedType(tag: DW_TAG_member, name: "frames_limit", scope: !768, file: !692, line: 143, baseType: !48, size: 16, offset: 1408)
!801 = !DIDerivedType(tag: DW_TAG_member, name: "margin", scope: !768, file: !692, line: 144, baseType: !48, size: 16, offset: 1424)
!802 = !DIDerivedType(tag: DW_TAG_member, name: "pattern_match", scope: !768, file: !692, line: 145, baseType: !48, size: 16, offset: 1440)
!803 = !DIDerivedType(tag: DW_TAG_member, name: "motion_model", scope: !768, file: !692, line: 148, baseType: !48, size: 16, offset: 1456)
!804 = !DIDerivedType(tag: DW_TAG_member, name: "algorithm_flag", scope: !768, file: !692, line: 149, baseType: !22, size: 32, offset: 1472)
!805 = !DIDerivedType(tag: DW_TAG_member, name: "minimum_correlation", scope: !768, file: !692, line: 150, baseType: !191, size: 32, offset: 1504)
!806 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !768, file: !692, line: 152, baseType: !258, size: 64, offset: 1536)
!807 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !768, file: !692, line: 163, baseType: !191, size: 32, offset: 1600)
!808 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !768, file: !692, line: 163, baseType: !191, size: 32, offset: 1632)
!809 = !DIDerivedType(tag: DW_TAG_member, name: "locinf", scope: !759, file: !692, line: 261, baseType: !191, size: 32, offset: 192)
!810 = !DIDerivedType(tag: DW_TAG_member, name: "scaleinf", scope: !759, file: !692, line: 261, baseType: !191, size: 32, offset: 224)
!811 = !DIDerivedType(tag: DW_TAG_member, name: "rotinf", scope: !759, file: !692, line: 261, baseType: !191, size: 32, offset: 256)
!812 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !759, file: !692, line: 263, baseType: !22, size: 32, offset: 288)
!813 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !759, file: !692, line: 266, baseType: !22, size: 32, offset: 320)
!814 = !DIDerivedType(tag: DW_TAG_member, name: "scale", scope: !759, file: !692, line: 267, baseType: !191, size: 32, offset: 352)
!815 = !DIDerivedType(tag: DW_TAG_member, name: "act_track", scope: !691, file: !692, line: 347, baseType: !766, size: 64, offset: 1856)
!816 = !DIDerivedType(tag: DW_TAG_member, name: "act_plane_track", scope: !691, file: !692, line: 348, baseType: !817, size: 64, offset: 1920)
!817 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !818, size: 64)
!818 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingPlaneTrack", file: !692, line: 205, baseType: !819)
!819 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingPlaneTrack", file: !692, line: 186, size: 1024, elements: !820)
!820 = !{!821, !823, !824, !825, !827, !828, !829, !837, !838, !839, !913, !914}
!821 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !819, file: !692, line: 187, baseType: !822, size: 64)
!822 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !819, size: 64)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !819, file: !692, line: 187, baseType: !822, size: 64, offset: 64)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !819, file: !692, line: 189, baseType: !33, size: 512, offset: 128)
!825 = !DIDerivedType(tag: DW_TAG_member, name: "point_tracks", scope: !819, file: !692, line: 191, baseType: !826, size: 64, offset: 640)
!826 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !766, size: 64)
!827 = !DIDerivedType(tag: DW_TAG_member, name: "point_tracksnr", scope: !819, file: !692, line: 193, baseType: !22, size: 32, offset: 704)
!828 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !819, file: !692, line: 193, baseType: !22, size: 32, offset: 736)
!829 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !819, file: !692, line: 195, baseType: !830, size: 64, offset: 768)
!830 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !831, size: 64)
!831 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingPlaneMarker", file: !692, line: 184, baseType: !832)
!832 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingPlaneMarker", file: !692, line: 166, size: 320, elements: !833)
!833 = !{!834, !835, !836}
!834 = !DIDerivedType(tag: DW_TAG_member, name: "corners", scope: !832, file: !692, line: 180, baseType: !788, size: 256)
!835 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !832, file: !692, line: 182, baseType: !22, size: 32, offset: 256)
!836 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !832, file: !692, line: 183, baseType: !22, size: 32, offset: 288)
!837 = !DIDerivedType(tag: DW_TAG_member, name: "markersnr", scope: !819, file: !692, line: 196, baseType: !22, size: 32, offset: 832)
!838 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !819, file: !692, line: 198, baseType: !22, size: 32, offset: 864)
!839 = !DIDerivedType(tag: DW_TAG_member, name: "image", scope: !819, file: !692, line: 200, baseType: !840, size: 64, offset: 896)
!840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !841, size: 64)
!841 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Image", file: !426, line: 77, size: 15424, elements: !842)
!842 = !{!843, !844, !845, !848, !851, !852, !855, !858, !859, !860, !861, !862, !863, !864, !865, !866, !867, !868, !869, !870, !871, !872, !874, !875, !889, !890, !891, !892, !893, !894, !895, !896, !897, !898, !899, !900, !901, !902, !903, !907}
!843 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !841, file: !426, line: 78, baseType: !112, size: 960)
!844 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !841, file: !426, line: 80, baseType: !130, size: 8192, offset: 960)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !841, file: !426, line: 82, baseType: !846, size: 64, offset: 9152)
!846 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !847, size: 64)
!847 = !DICompositeType(tag: DW_TAG_structure_type, name: "MovieCache", file: !426, line: 43, flags: DIFlagFwdDecl)
!848 = !DIDerivedType(tag: DW_TAG_member, name: "gputexture", scope: !841, file: !426, line: 83, baseType: !849, size: 64, offset: 9216)
!849 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !850, size: 64)
!850 = !DICompositeType(tag: DW_TAG_structure_type, name: "GPUTexture", file: !39, line: 46, flags: DIFlagFwdDecl)
!851 = !DIDerivedType(tag: DW_TAG_member, name: "anim", scope: !841, file: !426, line: 86, baseType: !630, size: 64, offset: 9280)
!852 = !DIDerivedType(tag: DW_TAG_member, name: "rr", scope: !841, file: !426, line: 87, baseType: !853, size: 64, offset: 9344)
!853 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !854, size: 64)
!854 = !DICompositeType(tag: DW_TAG_structure_type, name: "RenderResult", file: !426, line: 44, flags: DIFlagFwdDecl)
!855 = !DIDerivedType(tag: DW_TAG_member, name: "renders", scope: !841, file: !426, line: 89, baseType: !856, size: 512, offset: 9408)
!856 = !DICompositeType(tag: DW_TAG_array_type, baseType: !853, size: 512, elements: !857)
!857 = !{!193}
!858 = !DIDerivedType(tag: DW_TAG_member, name: "render_slot", scope: !841, file: !426, line: 90, baseType: !48, size: 16, offset: 9920)
!859 = !DIDerivedType(tag: DW_TAG_member, name: "last_render_slot", scope: !841, file: !426, line: 90, baseType: !48, size: 16, offset: 9936)
!860 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !841, file: !426, line: 92, baseType: !48, size: 16, offset: 9952)
!861 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !841, file: !426, line: 92, baseType: !48, size: 16, offset: 9968)
!862 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !841, file: !426, line: 93, baseType: !48, size: 16, offset: 9984)
!863 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !841, file: !426, line: 93, baseType: !48, size: 16, offset: 10000)
!864 = !DIDerivedType(tag: DW_TAG_member, name: "lastframe", scope: !841, file: !426, line: 94, baseType: !22, size: 32, offset: 10016)
!865 = !DIDerivedType(tag: DW_TAG_member, name: "tpageflag", scope: !841, file: !426, line: 97, baseType: !48, size: 16, offset: 10048)
!866 = !DIDerivedType(tag: DW_TAG_member, name: "totbind", scope: !841, file: !426, line: 97, baseType: !48, size: 16, offset: 10064)
!867 = !DIDerivedType(tag: DW_TAG_member, name: "xrep", scope: !841, file: !426, line: 98, baseType: !48, size: 16, offset: 10080)
!868 = !DIDerivedType(tag: DW_TAG_member, name: "yrep", scope: !841, file: !426, line: 98, baseType: !48, size: 16, offset: 10096)
!869 = !DIDerivedType(tag: DW_TAG_member, name: "twsta", scope: !841, file: !426, line: 99, baseType: !48, size: 16, offset: 10112)
!870 = !DIDerivedType(tag: DW_TAG_member, name: "twend", scope: !841, file: !426, line: 99, baseType: !48, size: 16, offset: 10128)
!871 = !DIDerivedType(tag: DW_TAG_member, name: "bindcode", scope: !841, file: !426, line: 100, baseType: !223, size: 32, offset: 10144)
!872 = !DIDerivedType(tag: DW_TAG_member, name: "repbind", scope: !841, file: !426, line: 101, baseType: !873, size: 64, offset: 10176)
!873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !223, size: 64)
!874 = !DIDerivedType(tag: DW_TAG_member, name: "packedfile", scope: !841, file: !426, line: 103, baseType: !136, size: 64, offset: 10240)
!875 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !841, file: !426, line: 104, baseType: !876, size: 64, offset: 10304)
!876 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !877, size: 64)
!877 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PreviewImage", file: !39, line: 159, size: 448, elements: !878)
!878 = !{!879, !881, !882, !884, !885, !887}
!879 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !877, file: !39, line: 161, baseType: !880, size: 64)
!880 = !DICompositeType(tag: DW_TAG_array_type, baseType: !223, size: 64, elements: !421)
!881 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !877, file: !39, line: 162, baseType: !880, size: 64, offset: 64)
!882 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !877, file: !39, line: 163, baseType: !883, size: 32, offset: 128)
!883 = !DICompositeType(tag: DW_TAG_array_type, baseType: !48, size: 32, elements: !421)
!884 = !DIDerivedType(tag: DW_TAG_member, name: "changed_timestamp", scope: !877, file: !39, line: 164, baseType: !883, size: 32, offset: 160)
!885 = !DIDerivedType(tag: DW_TAG_member, name: "rect", scope: !877, file: !39, line: 165, baseType: !886, size: 128, offset: 192)
!886 = !DICompositeType(tag: DW_TAG_array_type, baseType: !873, size: 128, elements: !421)
!887 = !DIDerivedType(tag: DW_TAG_member, name: "gputexture", scope: !877, file: !39, line: 166, baseType: !888, size: 128, offset: 320)
!888 = !DICompositeType(tag: DW_TAG_array_type, baseType: !849, size: 128, elements: !421)
!889 = !DIDerivedType(tag: DW_TAG_member, name: "lastupdate", scope: !841, file: !426, line: 107, baseType: !191, size: 32, offset: 10368)
!890 = !DIDerivedType(tag: DW_TAG_member, name: "lastused", scope: !841, file: !426, line: 108, baseType: !22, size: 32, offset: 10400)
!891 = !DIDerivedType(tag: DW_TAG_member, name: "animspeed", scope: !841, file: !426, line: 109, baseType: !48, size: 16, offset: 10432)
!892 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !841, file: !426, line: 110, baseType: !48, size: 16, offset: 10448)
!893 = !DIDerivedType(tag: DW_TAG_member, name: "gen_x", scope: !841, file: !426, line: 113, baseType: !22, size: 32, offset: 10464)
!894 = !DIDerivedType(tag: DW_TAG_member, name: "gen_y", scope: !841, file: !426, line: 113, baseType: !22, size: 32, offset: 10496)
!895 = !DIDerivedType(tag: DW_TAG_member, name: "gen_type", scope: !841, file: !426, line: 114, baseType: !14, size: 8, offset: 10528)
!896 = !DIDerivedType(tag: DW_TAG_member, name: "gen_flag", scope: !841, file: !426, line: 114, baseType: !14, size: 8, offset: 10536)
!897 = !DIDerivedType(tag: DW_TAG_member, name: "gen_depth", scope: !841, file: !426, line: 115, baseType: !48, size: 16, offset: 10544)
!898 = !DIDerivedType(tag: DW_TAG_member, name: "gen_color", scope: !841, file: !426, line: 116, baseType: !300, size: 128, offset: 10560)
!899 = !DIDerivedType(tag: DW_TAG_member, name: "aspx", scope: !841, file: !426, line: 119, baseType: !191, size: 32, offset: 10688)
!900 = !DIDerivedType(tag: DW_TAG_member, name: "aspy", scope: !841, file: !426, line: 119, baseType: !191, size: 32, offset: 10720)
!901 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace_settings", scope: !841, file: !426, line: 122, baseType: !663, size: 512, offset: 10752)
!902 = !DIDerivedType(tag: DW_TAG_member, name: "alpha_mode", scope: !841, file: !426, line: 123, baseType: !14, size: 8, offset: 11264)
!903 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !841, file: !426, line: 125, baseType: !904, size: 56, offset: 11272)
!904 = !DICompositeType(tag: DW_TAG_array_type, baseType: !14, size: 56, elements: !905)
!905 = !{!906}
!906 = !DISubrange(count: 7)
!907 = !DIDerivedType(tag: DW_TAG_member, name: "render_slots", scope: !841, file: !426, line: 126, baseType: !908, size: 4096, offset: 11328)
!908 = !DICompositeType(tag: DW_TAG_array_type, baseType: !909, size: 4096, elements: !857)
!909 = !DIDerivedType(tag: DW_TAG_typedef, name: "RenderSlot", file: !426, line: 69, baseType: !910)
!910 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderSlot", file: !426, line: 67, size: 512, elements: !911)
!911 = !{!912}
!912 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !910, file: !426, line: 68, baseType: !33, size: 512)
!913 = !DIDerivedType(tag: DW_TAG_member, name: "image_opacity", scope: !819, file: !692, line: 201, baseType: !191, size: 32, offset: 960)
!914 = !DIDerivedType(tag: DW_TAG_member, name: "last_marker", scope: !819, file: !692, line: 204, baseType: !22, size: 32, offset: 992)
!915 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !691, file: !692, line: 350, baseType: !58, size: 128, offset: 1984)
!916 = !DIDerivedType(tag: DW_TAG_member, name: "objectnr", scope: !691, file: !692, line: 351, baseType: !22, size: 32, offset: 2112)
!917 = !DIDerivedType(tag: DW_TAG_member, name: "tot_object", scope: !691, file: !692, line: 351, baseType: !22, size: 32, offset: 2144)
!918 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !691, file: !692, line: 353, baseType: !919, size: 64, offset: 2176)
!919 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !920, size: 64)
!920 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingStats", file: !692, line: 297, baseType: !921)
!921 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingStats", file: !692, line: 295, size: 2048, elements: !922)
!922 = !{!923}
!923 = !DIDerivedType(tag: DW_TAG_member, name: "message", scope: !921, file: !692, line: 296, baseType: !613, size: 2048)
!924 = !DIDerivedType(tag: DW_TAG_member, name: "dopesheet", scope: !691, file: !692, line: 355, baseType: !925, size: 384, offset: 2240)
!925 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingDopesheet", file: !692, line: 338, baseType: !926)
!926 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingDopesheet", file: !692, line: 322, size: 384, elements: !927)
!927 = !{!928, !929, !930, !931, !932, !933, !934}
!928 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !926, file: !692, line: 323, baseType: !22, size: 32)
!929 = !DIDerivedType(tag: DW_TAG_member, name: "sort_method", scope: !926, file: !692, line: 325, baseType: !48, size: 16, offset: 32)
!930 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !926, file: !692, line: 326, baseType: !48, size: 16, offset: 48)
!931 = !DIDerivedType(tag: DW_TAG_member, name: "coverage_segments", scope: !926, file: !692, line: 331, baseType: !58, size: 128, offset: 64)
!932 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !926, file: !692, line: 334, baseType: !58, size: 128, offset: 192)
!933 = !DIDerivedType(tag: DW_TAG_member, name: "tot_channel", scope: !926, file: !692, line: 335, baseType: !22, size: 32, offset: 320)
!934 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !926, file: !692, line: 337, baseType: !22, size: 32, offset: 352)
!935 = !DIDerivedType(tag: DW_TAG_member, name: "tracking_context", scope: !673, file: !674, line: 81, baseType: !56, size: 64, offset: 12224)
!936 = !DIDerivedType(tag: DW_TAG_member, name: "proxy", scope: !673, file: !674, line: 85, baseType: !937, size: 6208, offset: 12288)
!937 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieClipProxy", file: !674, line: 55, size: 6208, elements: !938)
!938 = !{!939, !940, !941, !942, !943}
!939 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !937, file: !674, line: 56, baseType: !619, size: 6144)
!940 = !DIDerivedType(tag: DW_TAG_member, name: "tc", scope: !937, file: !674, line: 58, baseType: !48, size: 16, offset: 6144)
!941 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !937, file: !674, line: 59, baseType: !48, size: 16, offset: 6160)
!942 = !DIDerivedType(tag: DW_TAG_member, name: "build_size_flag", scope: !937, file: !674, line: 60, baseType: !48, size: 16, offset: 6176)
!943 = !DIDerivedType(tag: DW_TAG_member, name: "build_tc_flag", scope: !937, file: !674, line: 61, baseType: !48, size: 16, offset: 6192)
!944 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !673, file: !674, line: 86, baseType: !22, size: 32, offset: 18496)
!945 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !673, file: !674, line: 88, baseType: !22, size: 32, offset: 18528)
!946 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !673, file: !674, line: 90, baseType: !22, size: 32, offset: 18560)
!947 = !DIDerivedType(tag: DW_TAG_member, name: "frame_offset", scope: !673, file: !674, line: 94, baseType: !22, size: 32, offset: 18592)
!948 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace_settings", scope: !673, file: !674, line: 100, baseType: !663, size: 512, offset: 18624)
!949 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !568, file: !560, line: 154, baseType: !950, size: 64, offset: 1664)
!950 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !951, size: 64)
!951 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Mask", file: !952, line: 46, size: 1344, elements: !953)
!952 = !DIFile(filename: "blender/source/blender/makesdna/DNA_mask_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!953 = !{!954, !955, !956, !957, !958, !959, !960, !961, !962}
!954 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !951, file: !952, line: 47, baseType: !112, size: 960)
!955 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !951, file: !952, line: 48, baseType: !158, size: 64, offset: 960)
!956 = !DIDerivedType(tag: DW_TAG_member, name: "masklayers", scope: !951, file: !952, line: 49, baseType: !58, size: 128, offset: 1024)
!957 = !DIDerivedType(tag: DW_TAG_member, name: "masklay_act", scope: !951, file: !952, line: 50, baseType: !22, size: 32, offset: 1152)
!958 = !DIDerivedType(tag: DW_TAG_member, name: "masklay_tot", scope: !951, file: !952, line: 51, baseType: !22, size: 32, offset: 1184)
!959 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !951, file: !952, line: 53, baseType: !22, size: 32, offset: 1216)
!960 = !DIDerivedType(tag: DW_TAG_member, name: "efra", scope: !951, file: !952, line: 53, baseType: !22, size: 32, offset: 1248)
!961 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !951, file: !952, line: 55, baseType: !22, size: 32, offset: 1280)
!962 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !951, file: !952, line: 56, baseType: !22, size: 32, offset: 1312)
!963 = !DIDerivedType(tag: DW_TAG_member, name: "anim", scope: !568, file: !560, line: 156, baseType: !630, size: 64, offset: 1728)
!964 = !DIDerivedType(tag: DW_TAG_member, name: "effect_fader", scope: !568, file: !560, line: 158, baseType: !191, size: 32, offset: 1792)
!965 = !DIDerivedType(tag: DW_TAG_member, name: "speed_fader", scope: !568, file: !560, line: 159, baseType: !191, size: 32, offset: 1824)
!966 = !DIDerivedType(tag: DW_TAG_member, name: "seq1", scope: !568, file: !560, line: 162, baseType: !571, size: 64, offset: 1856)
!967 = !DIDerivedType(tag: DW_TAG_member, name: "seq2", scope: !568, file: !560, line: 162, baseType: !571, size: 64, offset: 1920)
!968 = !DIDerivedType(tag: DW_TAG_member, name: "seq3", scope: !568, file: !560, line: 162, baseType: !571, size: 64, offset: 1984)
!969 = !DIDerivedType(tag: DW_TAG_member, name: "seqbase", scope: !568, file: !560, line: 164, baseType: !58, size: 128, offset: 2048)
!970 = !DIDerivedType(tag: DW_TAG_member, name: "sound", scope: !568, file: !560, line: 166, baseType: !971, size: 64, offset: 2176)
!971 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !972, size: 64)
!972 = !DICompositeType(tag: DW_TAG_structure_type, name: "bSound", file: !560, line: 51, flags: DIFlagFwdDecl)
!973 = !DIDerivedType(tag: DW_TAG_member, name: "scene_sound", scope: !568, file: !560, line: 167, baseType: !56, size: 64, offset: 2240)
!974 = !DIDerivedType(tag: DW_TAG_member, name: "volume", scope: !568, file: !560, line: 168, baseType: !191, size: 32, offset: 2304)
!975 = !DIDerivedType(tag: DW_TAG_member, name: "pitch", scope: !568, file: !560, line: 170, baseType: !191, size: 32, offset: 2336)
!976 = !DIDerivedType(tag: DW_TAG_member, name: "pan", scope: !568, file: !560, line: 170, baseType: !191, size: 32, offset: 2368)
!977 = !DIDerivedType(tag: DW_TAG_member, name: "strobe", scope: !568, file: !560, line: 171, baseType: !191, size: 32, offset: 2400)
!978 = !DIDerivedType(tag: DW_TAG_member, name: "effectdata", scope: !568, file: !560, line: 173, baseType: !56, size: 64, offset: 2432)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "anim_startofs", scope: !568, file: !560, line: 175, baseType: !22, size: 32, offset: 2496)
!980 = !DIDerivedType(tag: DW_TAG_member, name: "anim_endofs", scope: !568, file: !560, line: 176, baseType: !22, size: 32, offset: 2528)
!981 = !DIDerivedType(tag: DW_TAG_member, name: "blend_mode", scope: !568, file: !560, line: 179, baseType: !22, size: 32, offset: 2560)
!982 = !DIDerivedType(tag: DW_TAG_member, name: "blend_opacity", scope: !568, file: !560, line: 180, baseType: !191, size: 32, offset: 2592)
!983 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !568, file: !560, line: 183, baseType: !22, size: 32, offset: 2624)
!984 = !DIDerivedType(tag: DW_TAG_member, name: "alpha_mode", scope: !568, file: !560, line: 185, baseType: !14, size: 8, offset: 2656)
!985 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !568, file: !560, line: 186, baseType: !986, size: 24, offset: 2664)
!986 = !DICompositeType(tag: DW_TAG_array_type, baseType: !14, size: 24, elements: !228)
!987 = !DIDerivedType(tag: DW_TAG_member, name: "modifiers", scope: !568, file: !560, line: 189, baseType: !58, size: 128, offset: 2688)
!988 = !DIDerivedType(tag: DW_TAG_member, name: "act_imagedir", scope: !559, file: !560, line: 207, baseType: !130, size: 8192, offset: 384)
!989 = !DIDerivedType(tag: DW_TAG_member, name: "act_sounddir", scope: !559, file: !560, line: 208, baseType: !130, size: 8192, offset: 8576)
!990 = !DIDerivedType(tag: DW_TAG_member, name: "over_ofs", scope: !559, file: !560, line: 210, baseType: !22, size: 32, offset: 16768)
!991 = !DIDerivedType(tag: DW_TAG_member, name: "over_cfra", scope: !559, file: !560, line: 210, baseType: !22, size: 32, offset: 16800)
!992 = !DIDerivedType(tag: DW_TAG_member, name: "over_flag", scope: !559, file: !560, line: 211, baseType: !22, size: 32, offset: 16832)
!993 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !559, file: !560, line: 211, baseType: !22, size: 32, offset: 16864)
!994 = !DIDerivedType(tag: DW_TAG_member, name: "over_border", scope: !559, file: !560, line: 212, baseType: !515, size: 128, offset: 16896)
!995 = !DIDerivedType(tag: DW_TAG_member, name: "toolsettings", scope: !153, file: !154, line: 1246, baseType: !996, size: 64, offset: 2112)
!996 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !997, size: 64)
!997 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ToolSettings", file: !154, line: 1067, size: 5184, elements: !998)
!998 = !{!999, !1029, !1030, !1045, !1051, !1052, !1053, !1054, !1055, !1056, !1057, !1058, !1059, !1060, !1061, !1062, !1063, !1067, !1083, !1110, !1111, !1112, !1113, !1114, !1115, !1116, !1117, !1118, !1119, !1120, !1121, !1122, !1123, !1124, !1125, !1126, !1127, !1128, !1129, !1130, !1131, !1132, !1133, !1134, !1135, !1136, !1137, !1138, !1140, !1141, !1142, !1143, !1144, !1145, !1146, !1147, !1148, !1149, !1150, !1151, !1152, !1153, !1154, !1155, !1156, !1157, !1158, !1159, !1160, !1161, !1162, !1163, !1164, !1165, !1193}
!999 = !DIDerivedType(tag: DW_TAG_member, name: "vpaint", scope: !997, file: !154, line: 1068, baseType: !1000, size: 64)
!1000 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1001, size: 64)
!1001 = !DIDerivedType(tag: DW_TAG_typedef, name: "VPaint", file: !154, line: 934, baseType: !1002)
!1002 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VPaint", file: !154, line: 925, size: 576, elements: !1003)
!1003 = !{!1004, !1021, !1022, !1023, !1024, !1025, !1028}
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !1002, file: !154, line: 926, baseType: !1005, size: 320)
!1005 = !DIDerivedType(tag: DW_TAG_typedef, name: "Paint", file: !154, line: 830, baseType: !1006)
!1006 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Paint", file: !154, line: 813, size: 320, elements: !1007)
!1007 = !{!1008, !1011, !1014, !1015, !1018, !1019, !1020}
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !1006, file: !154, line: 814, baseType: !1009, size: 64)
!1009 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1010, size: 64)
!1010 = !DICompositeType(tag: DW_TAG_structure_type, name: "Brush", file: !154, line: 51, flags: DIFlagFwdDecl)
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "palette", scope: !1006, file: !154, line: 815, baseType: !1012, size: 64, offset: 64)
!1012 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1013, size: 64)
!1013 = !DICompositeType(tag: DW_TAG_structure_type, name: "Palette", file: !154, line: 815, flags: DIFlagFwdDecl)
!1014 = !DIDerivedType(tag: DW_TAG_member, name: "paint_cursor", scope: !1006, file: !154, line: 818, baseType: !56, size: 64, offset: 128)
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "paint_cursor_col", scope: !1006, file: !154, line: 819, baseType: !1016, size: 32, offset: 192)
!1016 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1017, size: 32, elements: !301)
!1017 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1006, file: !154, line: 822, baseType: !22, size: 32, offset: 224)
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "num_input_samples", scope: !1006, file: !154, line: 826, baseType: !22, size: 32, offset: 256)
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "symmetry_flags", scope: !1006, file: !154, line: 829, baseType: !22, size: 32, offset: 288)
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1002, file: !154, line: 928, baseType: !48, size: 16, offset: 320)
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1002, file: !154, line: 928, baseType: !48, size: 16, offset: 336)
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "tot", scope: !1002, file: !154, line: 929, baseType: !22, size: 32, offset: 352)
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "vpaint_prev", scope: !1002, file: !154, line: 930, baseType: !873, size: 64, offset: 384)
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "wpaint_prev", scope: !1002, file: !154, line: 931, baseType: !1026, size: 64, offset: 448)
!1026 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1027, size: 64)
!1027 = !DICompositeType(tag: DW_TAG_structure_type, name: "MDeformVert", file: !154, line: 931, flags: DIFlagFwdDecl)
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !1002, file: !154, line: 933, baseType: !56, size: 64, offset: 512)
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "wpaint", scope: !997, file: !154, line: 1069, baseType: !1000, size: 64, offset: 64)
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt", scope: !997, file: !154, line: 1070, baseType: !1031, size: 64, offset: 128)
!1031 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1032, size: 64)
!1032 = !DIDerivedType(tag: DW_TAG_typedef, name: "Sculpt", file: !154, line: 916, baseType: !1033)
!1033 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Sculpt", file: !154, line: 891, size: 704, elements: !1034)
!1034 = !{!1035, !1036, !1037, !1039, !1040, !1041, !1042, !1043, !1044}
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !1033, file: !154, line: 892, baseType: !1005, size: 320)
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1033, file: !154, line: 896, baseType: !22, size: 32, offset: 320)
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "radial_symm", scope: !1033, file: !154, line: 900, baseType: !1038, size: 96, offset: 352)
!1038 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 96, elements: !228)
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "detail_size", scope: !1033, file: !154, line: 903, baseType: !191, size: 32, offset: 448)
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "symmetrize_direction", scope: !1033, file: !154, line: 906, baseType: !22, size: 32, offset: 480)
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "gravity_factor", scope: !1033, file: !154, line: 909, baseType: !191, size: 32, offset: 512)
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "constant_detail", scope: !1033, file: !154, line: 912, baseType: !191, size: 32, offset: 544)
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "gravity_object", scope: !1033, file: !154, line: 914, baseType: !161, size: 64, offset: 576)
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1033, file: !154, line: 915, baseType: !56, size: 64, offset: 640)
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "uvsculpt", scope: !997, file: !154, line: 1071, baseType: !1046, size: 64, offset: 192)
!1046 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1047, size: 64)
!1047 = !DIDerivedType(tag: DW_TAG_typedef, name: "UvSculpt", file: !154, line: 920, baseType: !1048)
!1048 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UvSculpt", file: !154, line: 918, size: 320, elements: !1049)
!1049 = !{!1050}
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !1048, file: !154, line: 919, baseType: !1005, size: 320)
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "vgroup_weight", scope: !997, file: !154, line: 1075, baseType: !191, size: 32, offset: 256)
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "doublimit", scope: !997, file: !154, line: 1077, baseType: !191, size: 32, offset: 288)
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "normalsize", scope: !997, file: !154, line: 1078, baseType: !191, size: 32, offset: 320)
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "automerge", scope: !997, file: !154, line: 1079, baseType: !48, size: 16, offset: 352)
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "selectmode", scope: !997, file: !154, line: 1082, baseType: !48, size: 16, offset: 368)
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "unwrapper", scope: !997, file: !154, line: 1085, baseType: !14, size: 8, offset: 384)
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "uvcalc_flag", scope: !997, file: !154, line: 1086, baseType: !14, size: 8, offset: 392)
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "uv_flag", scope: !997, file: !154, line: 1087, baseType: !14, size: 8, offset: 400)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "uv_selectmode", scope: !997, file: !154, line: 1088, baseType: !14, size: 8, offset: 408)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "uvcalc_margin", scope: !997, file: !154, line: 1090, baseType: !191, size: 32, offset: 416)
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "autoik_chainlen", scope: !997, file: !154, line: 1093, baseType: !48, size: 16, offset: 448)
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "gpencil_flags", scope: !997, file: !154, line: 1096, baseType: !14, size: 8, offset: 464)
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !997, file: !154, line: 1098, baseType: !1064, size: 40, offset: 472)
!1064 = !DICompositeType(tag: DW_TAG_array_type, baseType: !14, size: 40, elements: !1065)
!1065 = !{!1066}
!1066 = !DISubrange(count: 5)
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "imapaint", scope: !997, file: !154, line: 1101, baseType: !1068, size: 832, offset: 512)
!1068 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImagePaintSettings", file: !154, line: 836, size: 832, elements: !1069)
!1069 = !{!1070, !1071, !1072, !1073, !1074, !1075, !1076, !1077, !1078, !1079, !1080, !1081, !1082}
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !1068, file: !154, line: 837, baseType: !1005, size: 320)
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1068, file: !154, line: 839, baseType: !48, size: 16, offset: 320)
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "missing_data", scope: !1068, file: !154, line: 839, baseType: !48, size: 16, offset: 336)
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "seam_bleed", scope: !1068, file: !154, line: 842, baseType: !48, size: 16, offset: 352)
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "normal_angle", scope: !1068, file: !154, line: 842, baseType: !48, size: 16, offset: 368)
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "screen_grab_size", scope: !1068, file: !154, line: 843, baseType: !883, size: 32, offset: 384)
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1068, file: !154, line: 845, baseType: !22, size: 32, offset: 416)
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !1068, file: !154, line: 847, baseType: !56, size: 64, offset: 448)
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "stencil", scope: !1068, file: !154, line: 848, baseType: !840, size: 64, offset: 512)
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "clone", scope: !1068, file: !154, line: 849, baseType: !840, size: 64, offset: 576)
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "canvas", scope: !1068, file: !154, line: 850, baseType: !840, size: 64, offset: 640)
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "stencil_col", scope: !1068, file: !154, line: 851, baseType: !227, size: 96, offset: 704)
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1068, file: !154, line: 852, baseType: !191, size: 32, offset: 800)
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "particle", scope: !997, file: !154, line: 1104, baseType: !1084, size: 1344, offset: 1344)
!1084 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleEditSettings", file: !154, line: 867, size: 1344, elements: !1085)
!1085 = !{!1086, !1087, !1088, !1089, !1090, !1101, !1102, !1103, !1104, !1105, !1106, !1107, !1108, !1109}
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1084, file: !154, line: 868, baseType: !48, size: 16)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "totrekey", scope: !1084, file: !154, line: 869, baseType: !48, size: 16, offset: 16)
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "totaddkey", scope: !1084, file: !154, line: 870, baseType: !48, size: 16, offset: 32)
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "brushtype", scope: !1084, file: !154, line: 871, baseType: !48, size: 16, offset: 48)
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !1084, file: !154, line: 873, baseType: !1091, size: 896, offset: 64)
!1091 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1092, size: 896, elements: !905)
!1092 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParticleBrushData", file: !154, line: 864, baseType: !1093)
!1093 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleBrushData", file: !154, line: 859, size: 128, elements: !1094)
!1094 = !{!1095, !1096, !1097, !1098, !1099, !1100}
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1093, file: !154, line: 860, baseType: !48, size: 16)
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "step", scope: !1093, file: !154, line: 861, baseType: !48, size: 16, offset: 16)
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1093, file: !154, line: 861, baseType: !48, size: 16, offset: 32)
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1093, file: !154, line: 861, baseType: !48, size: 16, offset: 48)
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1093, file: !154, line: 862, baseType: !22, size: 32, offset: 64)
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "strength", scope: !1093, file: !154, line: 863, baseType: !191, size: 32, offset: 96)
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !1084, file: !154, line: 874, baseType: !56, size: 64, offset: 960)
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "emitterdist", scope: !1084, file: !154, line: 876, baseType: !191, size: 32, offset: 1024)
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !1084, file: !154, line: 876, baseType: !191, size: 32, offset: 1056)
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "selectmode", scope: !1084, file: !154, line: 878, baseType: !22, size: 32, offset: 1088)
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "edittype", scope: !1084, file: !154, line: 879, baseType: !22, size: 32, offset: 1120)
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "draw_step", scope: !1084, file: !154, line: 881, baseType: !22, size: 32, offset: 1152)
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "fade_frames", scope: !1084, file: !154, line: 881, baseType: !22, size: 32, offset: 1184)
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !1084, file: !154, line: 883, baseType: !152, size: 64, offset: 1216)
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1084, file: !154, line: 884, baseType: !161, size: 64, offset: 1280)
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_size", scope: !997, file: !154, line: 1107, baseType: !191, size: 32, offset: 2688)
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "select_thresh", scope: !997, file: !154, line: 1110, baseType: !191, size: 32, offset: 2720)
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "autokey_mode", scope: !997, file: !154, line: 1113, baseType: !48, size: 16, offset: 2752)
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "autokey_flag", scope: !997, file: !154, line: 1113, baseType: !48, size: 16, offset: 2768)
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "multires_subdiv_type", scope: !997, file: !154, line: 1116, baseType: !14, size: 8, offset: 2784)
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !997, file: !154, line: 1117, baseType: !483, size: 8, offset: 2792)
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_resolution", scope: !997, file: !154, line: 1120, baseType: !48, size: 16, offset: 2800)
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_threshold_internal", scope: !997, file: !154, line: 1121, baseType: !191, size: 32, offset: 2816)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_threshold_external", scope: !997, file: !154, line: 1122, baseType: !191, size: 32, offset: 2848)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_length_ratio", scope: !997, file: !154, line: 1123, baseType: !191, size: 32, offset: 2880)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_length_limit", scope: !997, file: !154, line: 1124, baseType: !191, size: 32, offset: 2912)
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_angle_limit", scope: !997, file: !154, line: 1125, baseType: !191, size: 32, offset: 2944)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_correlation_limit", scope: !997, file: !154, line: 1126, baseType: !191, size: 32, offset: 2976)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_symmetry_limit", scope: !997, file: !154, line: 1127, baseType: !191, size: 32, offset: 3008)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_angle_weight", scope: !997, file: !154, line: 1128, baseType: !191, size: 32, offset: 3040)
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_length_weight", scope: !997, file: !154, line: 1129, baseType: !191, size: 32, offset: 3072)
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_distance_weight", scope: !997, file: !154, line: 1130, baseType: !191, size: 32, offset: 3104)
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_options", scope: !997, file: !154, line: 1131, baseType: !48, size: 16, offset: 3136)
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_postpro", scope: !997, file: !154, line: 1132, baseType: !14, size: 8, offset: 3152)
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_postpro_passes", scope: !997, file: !154, line: 1133, baseType: !14, size: 8, offset: 3160)
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_subdivisions", scope: !997, file: !154, line: 1134, baseType: !986, size: 24, offset: 3168)
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_multi_level", scope: !997, file: !154, line: 1135, baseType: !14, size: 8, offset: 3192)
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_template", scope: !997, file: !154, line: 1138, baseType: !161, size: 64, offset: 3200)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "bone_sketching", scope: !997, file: !154, line: 1139, baseType: !14, size: 8, offset: 3264)
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "bone_sketching_convert", scope: !997, file: !154, line: 1140, baseType: !14, size: 8, offset: 3272)
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_subdivision_number", scope: !997, file: !154, line: 1141, baseType: !14, size: 8, offset: 3280)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_options", scope: !997, file: !154, line: 1142, baseType: !14, size: 8, offset: 3288)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_roll", scope: !997, file: !154, line: 1143, baseType: !14, size: 8, offset: 3296)
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_side_string", scope: !997, file: !154, line: 1144, baseType: !1139, size: 64, offset: 3304)
!1139 = !DICompositeType(tag: DW_TAG_array_type, baseType: !14, size: 64, elements: !857)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_num_string", scope: !997, file: !154, line: 1145, baseType: !1139, size: 64, offset: 3368)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "edge_mode", scope: !997, file: !154, line: 1148, baseType: !14, size: 8, offset: 3432)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "edge_mode_live_unwrap", scope: !997, file: !154, line: 1149, baseType: !14, size: 8, offset: 3440)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "snap_mode", scope: !997, file: !154, line: 1152, baseType: !14, size: 8, offset: 3448)
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "snap_node_mode", scope: !997, file: !154, line: 1152, baseType: !14, size: 8, offset: 3456)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "snap_uv_mode", scope: !997, file: !154, line: 1153, baseType: !14, size: 8, offset: 3464)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "snap_flag", scope: !997, file: !154, line: 1154, baseType: !48, size: 16, offset: 3472)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "snap_target", scope: !997, file: !154, line: 1154, baseType: !48, size: 16, offset: 3488)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "proportional", scope: !997, file: !154, line: 1155, baseType: !48, size: 16, offset: 3504)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "prop_mode", scope: !997, file: !154, line: 1155, baseType: !48, size: 16, offset: 3520)
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_objects", scope: !997, file: !154, line: 1156, baseType: !14, size: 8, offset: 3536)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_mask", scope: !997, file: !154, line: 1157, baseType: !14, size: 8, offset: 3544)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "auto_normalize", scope: !997, file: !154, line: 1159, baseType: !14, size: 8, offset: 3552)
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "multipaint", scope: !997, file: !154, line: 1160, baseType: !14, size: 8, offset: 3560)
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "weightuser", scope: !997, file: !154, line: 1161, baseType: !14, size: 8, offset: 3568)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "vgroupsubset", scope: !997, file: !154, line: 1162, baseType: !14, size: 8, offset: 3576)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "use_uv_sculpt", scope: !997, file: !154, line: 1165, baseType: !22, size: 32, offset: 3584)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "uv_sculpt_settings", scope: !997, file: !154, line: 1166, baseType: !22, size: 32, offset: 3616)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "uv_sculpt_tool", scope: !997, file: !154, line: 1167, baseType: !22, size: 32, offset: 3648)
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "uv_relax_method", scope: !997, file: !154, line: 1168, baseType: !22, size: 32, offset: 3680)
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_settings", scope: !997, file: !154, line: 1171, baseType: !48, size: 16, offset: 3712)
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "pad5", scope: !997, file: !154, line: 1171, baseType: !48, size: 16, offset: 3728)
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_size", scope: !997, file: !154, line: 1172, baseType: !22, size: 32, offset: 3744)
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_unprojected_radius", scope: !997, file: !154, line: 1173, baseType: !191, size: 32, offset: 3776)
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_alpha", scope: !997, file: !154, line: 1174, baseType: !191, size: 32, offset: 3808)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "unified_paint_settings", scope: !997, file: !154, line: 1177, baseType: !1166, size: 1024, offset: 3840)
!1166 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UnifiedPaintSettings", file: !154, line: 963, size: 1024, elements: !1167)
!1167 = !{!1168, !1169, !1170, !1171, !1172, !1173, !1174, !1175, !1176, !1177, !1178, !1179, !1180, !1181, !1182, !1183, !1184, !1185, !1186, !1187, !1188, !1191, !1192}
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1166, file: !154, line: 965, baseType: !22, size: 32)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "unprojected_radius", scope: !1166, file: !154, line: 968, baseType: !191, size: 32, offset: 32)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "alpha", scope: !1166, file: !154, line: 971, baseType: !191, size: 32, offset: 64)
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1166, file: !154, line: 974, baseType: !191, size: 32, offset: 96)
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "rgb", scope: !1166, file: !154, line: 977, baseType: !227, size: 96, offset: 128)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "secondary_rgb", scope: !1166, file: !154, line: 979, baseType: !227, size: 96, offset: 224)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1166, file: !154, line: 982, baseType: !22, size: 32, offset: 320)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "last_rake", scope: !1166, file: !154, line: 987, baseType: !420, size: 64, offset: 352)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "brush_rotation", scope: !1166, file: !154, line: 989, baseType: !191, size: 32, offset: 416)
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "draw_anchored", scope: !1166, file: !154, line: 994, baseType: !22, size: 32, offset: 448)
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "anchored_size", scope: !1166, file: !154, line: 995, baseType: !22, size: 32, offset: 480)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "draw_inverted", scope: !1166, file: !154, line: 997, baseType: !14, size: 8, offset: 512)
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !1166, file: !154, line: 998, baseType: !904, size: 56, offset: 520)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "overlap_factor", scope: !1166, file: !154, line: 1000, baseType: !191, size: 32, offset: 576)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "anchored_initial_mouse", scope: !1166, file: !154, line: 1003, baseType: !420, size: 64, offset: 608)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "stroke_active", scope: !1166, file: !154, line: 1006, baseType: !22, size: 32, offset: 672)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "size_pressure_value", scope: !1166, file: !154, line: 1009, baseType: !191, size: 32, offset: 704)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "tex_mouse", scope: !1166, file: !154, line: 1012, baseType: !420, size: 64, offset: 736)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "mask_tex_mouse", scope: !1166, file: !154, line: 1015, baseType: !420, size: 64, offset: 800)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "do_linear_conversion", scope: !1166, file: !154, line: 1018, baseType: !22, size: 32, offset: 864)
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !1166, file: !154, line: 1019, baseType: !1189, size: 64, offset: 896)
!1189 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1190, size: 64)
!1190 = !DICompositeType(tag: DW_TAG_structure_type, name: "ColorSpace", file: !154, line: 63, flags: DIFlagFwdDecl)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "pixel_radius", scope: !1166, file: !154, line: 1023, baseType: !191, size: 32, offset: 960)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !1166, file: !154, line: 1024, baseType: !22, size: 32, offset: 992)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "statvis", scope: !997, file: !154, line: 1179, baseType: !1194, size: 320, offset: 4864)
!1194 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MeshStatVis", file: !154, line: 1043, size: 320, elements: !1195)
!1195 = !{!1196, !1197, !1199, !1200, !1201, !1202, !1203, !1204, !1205, !1206, !1207, !1208, !1209}
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1194, file: !154, line: 1044, baseType: !14, size: 8)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "_pad1", scope: !1194, file: !154, line: 1045, baseType: !1198, size: 16, offset: 8)
!1198 = !DICompositeType(tag: DW_TAG_array_type, baseType: !14, size: 16, elements: !421)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_axis", scope: !1194, file: !154, line: 1048, baseType: !14, size: 8, offset: 24)
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_min", scope: !1194, file: !154, line: 1049, baseType: !191, size: 32, offset: 32)
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_max", scope: !1194, file: !154, line: 1049, baseType: !191, size: 32, offset: 64)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_min", scope: !1194, file: !154, line: 1052, baseType: !191, size: 32, offset: 96)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_max", scope: !1194, file: !154, line: 1052, baseType: !191, size: 32, offset: 128)
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_samples", scope: !1194, file: !154, line: 1053, baseType: !14, size: 8, offset: 160)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "_pad2", scope: !1194, file: !154, line: 1054, baseType: !986, size: 24, offset: 168)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "distort_min", scope: !1194, file: !154, line: 1057, baseType: !191, size: 32, offset: 192)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "distort_max", scope: !1194, file: !154, line: 1057, baseType: !191, size: 32, offset: 224)
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "sharp_min", scope: !1194, file: !154, line: 1060, baseType: !191, size: 32, offset: 256)
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "sharp_max", scope: !1194, file: !154, line: 1060, baseType: !191, size: 32, offset: 288)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !153, file: !154, line: 1247, baseType: !1211, size: 64, offset: 2176)
!1211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1212, size: 64)
!1212 = !DICompositeType(tag: DW_TAG_structure_type, name: "SceneStats", file: !154, line: 60, flags: DIFlagFwdDecl)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !153, file: !154, line: 1251, baseType: !1214, size: 31872, offset: 2240)
!1214 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderData", file: !154, line: 403, size: 31872, elements: !1215)
!1215 = !{!1216, !1291, !1311, !1320, !1340, !1360, !1361, !1362, !1363, !1364, !1365, !1366, !1367, !1368, !1369, !1370, !1371, !1372, !1373, !1374, !1375, !1376, !1377, !1378, !1379, !1380, !1381, !1382, !1383, !1384, !1385, !1386, !1387, !1388, !1389, !1390, !1391, !1392, !1393, !1394, !1395, !1396, !1397, !1398, !1399, !1400, !1401, !1402, !1403, !1404, !1405, !1406, !1407, !1408, !1409, !1410, !1411, !1412, !1413, !1414, !1422, !1423, !1424, !1425, !1426, !1427, !1428, !1429, !1430, !1431, !1432, !1433, !1434, !1435, !1436, !1437, !1438, !1439, !1440, !1441, !1442, !1443, !1444, !1445, !1446, !1447, !1448, !1449, !1450, !1451, !1452, !1453, !1454, !1455, !1456, !1457, !1458, !1459, !1460, !1461, !1462, !1463, !1464, !1465, !1466, !1467, !1468, !1469, !1470, !1471, !1472, !1473, !1474, !1478, !1479, !1480, !1484, !1500, !1501}
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "im_format", scope: !1214, file: !154, line: 404, baseType: !1217, size: 1984)
!1217 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImageFormatData", file: !154, line: 259, size: 1984, elements: !1218)
!1218 = !{!1219, !1220, !1221, !1222, !1223, !1224, !1225, !1226, !1227, !1228, !1229, !1230, !1231, !1232, !1236, !1286}
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "imtype", scope: !1217, file: !154, line: 260, baseType: !14, size: 8)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !1217, file: !154, line: 263, baseType: !14, size: 8, offset: 8)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !1217, file: !154, line: 266, baseType: !14, size: 8, offset: 16)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1217, file: !154, line: 267, baseType: !14, size: 8, offset: 24)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !1217, file: !154, line: 269, baseType: !14, size: 8, offset: 32)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "compress", scope: !1217, file: !154, line: 270, baseType: !14, size: 8, offset: 40)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "exr_codec", scope: !1217, file: !154, line: 276, baseType: !14, size: 8, offset: 48)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_flag", scope: !1217, file: !154, line: 279, baseType: !14, size: 8, offset: 56)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_white", scope: !1217, file: !154, line: 280, baseType: !48, size: 16, offset: 64)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_black", scope: !1217, file: !154, line: 280, baseType: !48, size: 16, offset: 80)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_gamma", scope: !1217, file: !154, line: 281, baseType: !191, size: 32, offset: 96)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_flag", scope: !1217, file: !154, line: 284, baseType: !14, size: 8, offset: 128)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_codec", scope: !1217, file: !154, line: 285, baseType: !14, size: 8, offset: 136)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1217, file: !154, line: 287, baseType: !1233, size: 48, offset: 144)
!1233 = !DICompositeType(tag: DW_TAG_array_type, baseType: !14, size: 48, elements: !1234)
!1234 = !{!1235}
!1235 = !DISubrange(count: 6)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "view_settings", scope: !1217, file: !154, line: 290, baseType: !1237, size: 1280, offset: 192)
!1237 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedViewSettings", file: !664, line: 174, baseType: !1238)
!1238 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedViewSettings", file: !664, line: 166, size: 1280, elements: !1239)
!1239 = !{!1240, !1241, !1242, !1243, !1244, !1245, !1246, !1285}
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1238, file: !664, line: 167, baseType: !22, size: 32)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1238, file: !664, line: 167, baseType: !22, size: 32, offset: 32)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "look", scope: !1238, file: !664, line: 168, baseType: !33, size: 512, offset: 64)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "view_transform", scope: !1238, file: !664, line: 169, baseType: !33, size: 512, offset: 576)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "exposure", scope: !1238, file: !664, line: 170, baseType: !191, size: 32, offset: 1088)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "gamma", scope: !1238, file: !664, line: 171, baseType: !191, size: 32, offset: 1120)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "curve_mapping", scope: !1238, file: !664, line: 172, baseType: !1247, size: 64, offset: 1152)
!1247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1248, size: 64)
!1248 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMapping", file: !664, line: 72, size: 3072, elements: !1249)
!1249 = !{!1250, !1251, !1252, !1253, !1254, !1255, !1256, !1281, !1282, !1283, !1284}
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1248, file: !664, line: 73, baseType: !22, size: 32)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !1248, file: !664, line: 73, baseType: !22, size: 32, offset: 32)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "preset", scope: !1248, file: !664, line: 74, baseType: !22, size: 32, offset: 64)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "changed_timestamp", scope: !1248, file: !664, line: 75, baseType: !22, size: 32, offset: 96)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "curr", scope: !1248, file: !664, line: 77, baseType: !515, size: 128, offset: 128)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "clipr", scope: !1248, file: !664, line: 77, baseType: !515, size: 128, offset: 256)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "cm", scope: !1248, file: !664, line: 79, baseType: !1257, size: 2304, offset: 384)
!1257 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1258, size: 2304, elements: !301)
!1258 = !DIDerivedType(tag: DW_TAG_typedef, name: "CurveMap", file: !664, line: 67, baseType: !1259)
!1259 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMap", file: !664, line: 55, size: 576, elements: !1260)
!1260 = !{!1261, !1262, !1263, !1264, !1265, !1266, !1267, !1268, !1277, !1278, !1279, !1280}
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "totpoint", scope: !1259, file: !664, line: 56, baseType: !48, size: 16)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1259, file: !664, line: 56, baseType: !48, size: 16, offset: 16)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !1259, file: !664, line: 58, baseType: !191, size: 32, offset: 32)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "mintable", scope: !1259, file: !664, line: 59, baseType: !191, size: 32, offset: 64)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "maxtable", scope: !1259, file: !664, line: 59, baseType: !191, size: 32, offset: 96)
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "ext_in", scope: !1259, file: !664, line: 60, baseType: !420, size: 64, offset: 128)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "ext_out", scope: !1259, file: !664, line: 60, baseType: !420, size: 64, offset: 192)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "curve", scope: !1259, file: !664, line: 61, baseType: !1269, size: 64, offset: 256)
!1269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1270, size: 64)
!1270 = !DIDerivedType(tag: DW_TAG_typedef, name: "CurveMapPoint", file: !664, line: 47, baseType: !1271)
!1271 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMapPoint", file: !664, line: 44, size: 96, elements: !1272)
!1272 = !{!1273, !1274, !1275, !1276}
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1271, file: !664, line: 45, baseType: !191, size: 32)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !1271, file: !664, line: 45, baseType: !191, size: 32, offset: 32)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1271, file: !664, line: 46, baseType: !48, size: 16, offset: 64)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "shorty", scope: !1271, file: !664, line: 46, baseType: !48, size: 16, offset: 80)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "table", scope: !1259, file: !664, line: 62, baseType: !1269, size: 64, offset: 320)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "premultable", scope: !1259, file: !664, line: 64, baseType: !1269, size: 64, offset: 384)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "premul_ext_in", scope: !1259, file: !664, line: 65, baseType: !420, size: 64, offset: 448)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "premul_ext_out", scope: !1259, file: !664, line: 66, baseType: !420, size: 64, offset: 512)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "black", scope: !1248, file: !664, line: 80, baseType: !227, size: 96, offset: 2688)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "white", scope: !1248, file: !664, line: 80, baseType: !227, size: 96, offset: 2784)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "bwmul", scope: !1248, file: !664, line: 81, baseType: !227, size: 96, offset: 2880)
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "sample", scope: !1248, file: !664, line: 83, baseType: !227, size: 96, offset: 2976)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1238, file: !664, line: 173, baseType: !56, size: 64, offset: 1216)
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "display_settings", scope: !1217, file: !154, line: 291, baseType: !1287, size: 512, offset: 1472)
!1287 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedDisplaySettings", file: !664, line: 178, baseType: !1288)
!1288 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedDisplaySettings", file: !664, line: 176, size: 512, elements: !1289)
!1289 = !{!1290}
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "display_device", scope: !1288, file: !664, line: 177, baseType: !33, size: 512)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "avicodecdata", scope: !1214, file: !154, line: 406, baseType: !1292, size: 64, offset: 1984)
!1292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1293, size: 64)
!1293 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AviCodecData", file: !154, line: 80, size: 1472, elements: !1294)
!1294 = !{!1295, !1296, !1297, !1298, !1299, !1300, !1301, !1302, !1303, !1304, !1305, !1306, !1307}
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "lpFormat", scope: !1293, file: !154, line: 81, baseType: !56, size: 64)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "lpParms", scope: !1293, file: !154, line: 82, baseType: !56, size: 64, offset: 64)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "cbFormat", scope: !1293, file: !154, line: 83, baseType: !223, size: 32, offset: 128)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "cbParms", scope: !1293, file: !154, line: 84, baseType: !223, size: 32, offset: 160)
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "fccType", scope: !1293, file: !154, line: 86, baseType: !223, size: 32, offset: 192)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "fccHandler", scope: !1293, file: !154, line: 87, baseType: !223, size: 32, offset: 224)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "dwKeyFrameEvery", scope: !1293, file: !154, line: 88, baseType: !223, size: 32, offset: 256)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "dwQuality", scope: !1293, file: !154, line: 89, baseType: !223, size: 32, offset: 288)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "dwBytesPerSecond", scope: !1293, file: !154, line: 90, baseType: !223, size: 32, offset: 320)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "dwFlags", scope: !1293, file: !154, line: 91, baseType: !223, size: 32, offset: 352)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "dwInterleaveEvery", scope: !1293, file: !154, line: 92, baseType: !223, size: 32, offset: 384)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1293, file: !154, line: 93, baseType: !223, size: 32, offset: 416)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "avicodecname", scope: !1293, file: !154, line: 95, baseType: !1308, size: 1024, offset: 448)
!1308 = !DICompositeType(tag: DW_TAG_array_type, baseType: !14, size: 1024, elements: !1309)
!1309 = !{!1310}
!1310 = !DISubrange(count: 128)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecdata", scope: !1214, file: !154, line: 407, baseType: !1312, size: 64, offset: 2048)
!1312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1313, size: 64)
!1313 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "QuicktimeCodecData", file: !154, line: 98, size: 1216, elements: !1314)
!1314 = !{!1315, !1316, !1317, !1318, !1319}
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "cdParms", scope: !1313, file: !154, line: 100, baseType: !56, size: 64)
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1313, file: !154, line: 101, baseType: !56, size: 64, offset: 64)
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "cdSize", scope: !1313, file: !154, line: 103, baseType: !223, size: 32, offset: 128)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1313, file: !154, line: 104, baseType: !223, size: 32, offset: 160)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecname", scope: !1313, file: !154, line: 106, baseType: !1308, size: 1024, offset: 192)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecsettings", scope: !1214, file: !154, line: 408, baseType: !1321, size: 512, offset: 2112)
!1321 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "QuicktimeCodecSettings", file: !154, line: 109, size: 512, elements: !1322)
!1322 = !{!1323, !1324, !1325, !1326, !1327, !1328, !1329, !1330, !1331, !1332, !1333, !1334, !1335, !1336, !1337, !1338, !1339}
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "codecType", scope: !1321, file: !154, line: 111, baseType: !22, size: 32)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "codecSpatialQuality", scope: !1321, file: !154, line: 112, baseType: !22, size: 32, offset: 32)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !1321, file: !154, line: 115, baseType: !22, size: 32, offset: 64)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "codecFlags", scope: !1321, file: !154, line: 116, baseType: !22, size: 32, offset: 96)
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "colorDepth", scope: !1321, file: !154, line: 117, baseType: !22, size: 32, offset: 128)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "codecTemporalQuality", scope: !1321, file: !154, line: 118, baseType: !22, size: 32, offset: 160)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "minSpatialQuality", scope: !1321, file: !154, line: 119, baseType: !22, size: 32, offset: 192)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "minTemporalQuality", scope: !1321, file: !154, line: 120, baseType: !22, size: 32, offset: 224)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "keyFrameRate", scope: !1321, file: !154, line: 121, baseType: !22, size: 32, offset: 256)
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "bitRate", scope: !1321, file: !154, line: 122, baseType: !22, size: 32, offset: 288)
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "audiocodecType", scope: !1321, file: !154, line: 125, baseType: !22, size: 32, offset: 320)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "audioSampleRate", scope: !1321, file: !154, line: 126, baseType: !22, size: 32, offset: 352)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "audioBitDepth", scope: !1321, file: !154, line: 127, baseType: !48, size: 16, offset: 384)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "audioChannels", scope: !1321, file: !154, line: 128, baseType: !48, size: 16, offset: 400)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "audioCodecFlags", scope: !1321, file: !154, line: 129, baseType: !22, size: 32, offset: 416)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "audioBitRate", scope: !1321, file: !154, line: 130, baseType: !22, size: 32, offset: 448)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1321, file: !154, line: 131, baseType: !22, size: 32, offset: 480)
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "ffcodecdata", scope: !1214, file: !154, line: 409, baseType: !1341, size: 576, offset: 2624)
!1341 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FFMpegCodecData", file: !154, line: 134, size: 576, elements: !1342)
!1342 = !{!1343, !1344, !1345, !1346, !1347, !1348, !1349, !1350, !1351, !1352, !1353, !1354, !1355, !1356, !1357, !1358, !1359}
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1341, file: !154, line: 135, baseType: !22, size: 32)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !1341, file: !154, line: 136, baseType: !22, size: 32, offset: 32)
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "audio_codec", scope: !1341, file: !154, line: 137, baseType: !22, size: 32, offset: 64)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "video_bitrate", scope: !1341, file: !154, line: 138, baseType: !22, size: 32, offset: 96)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "audio_bitrate", scope: !1341, file: !154, line: 139, baseType: !22, size: 32, offset: 128)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "audio_mixrate", scope: !1341, file: !154, line: 140, baseType: !22, size: 32, offset: 160)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "audio_channels", scope: !1341, file: !154, line: 141, baseType: !22, size: 32, offset: 192)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "audio_pad", scope: !1341, file: !154, line: 142, baseType: !22, size: 32, offset: 224)
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "audio_volume", scope: !1341, file: !154, line: 143, baseType: !191, size: 32, offset: 256)
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "gop_size", scope: !1341, file: !154, line: 144, baseType: !22, size: 32, offset: 288)
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1341, file: !154, line: 145, baseType: !22, size: 32, offset: 320)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_rate", scope: !1341, file: !154, line: 147, baseType: !22, size: 32, offset: 352)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_rate", scope: !1341, file: !154, line: 148, baseType: !22, size: 32, offset: 384)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "rc_buffer_size", scope: !1341, file: !154, line: 149, baseType: !22, size: 32, offset: 416)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "mux_packet_size", scope: !1341, file: !154, line: 150, baseType: !22, size: 32, offset: 448)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "mux_rate", scope: !1341, file: !154, line: 151, baseType: !22, size: 32, offset: 480)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !1341, file: !154, line: 152, baseType: !37, size: 64, offset: 512)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "cfra", scope: !1214, file: !154, line: 411, baseType: !22, size: 32, offset: 3200)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !1214, file: !154, line: 411, baseType: !22, size: 32, offset: 3232)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "efra", scope: !1214, file: !154, line: 411, baseType: !22, size: 32, offset: 3264)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "subframe", scope: !1214, file: !154, line: 412, baseType: !191, size: 32, offset: 3296)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "psfra", scope: !1214, file: !154, line: 413, baseType: !22, size: 32, offset: 3328)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "pefra", scope: !1214, file: !154, line: 413, baseType: !22, size: 32, offset: 3360)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "images", scope: !1214, file: !154, line: 415, baseType: !22, size: 32, offset: 3392)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "framapto", scope: !1214, file: !154, line: 415, baseType: !22, size: 32, offset: 3424)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1214, file: !154, line: 416, baseType: !48, size: 16, offset: 3456)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "threads", scope: !1214, file: !154, line: 416, baseType: !48, size: 16, offset: 3472)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "framelen", scope: !1214, file: !154, line: 418, baseType: !191, size: 32, offset: 3488)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "blurfac", scope: !1214, file: !154, line: 418, baseType: !191, size: 32, offset: 3520)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "edgeR", scope: !1214, file: !154, line: 421, baseType: !191, size: 32, offset: 3552)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "edgeG", scope: !1214, file: !154, line: 421, baseType: !191, size: 32, offset: 3584)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "edgeB", scope: !1214, file: !154, line: 421, baseType: !191, size: 32, offset: 3616)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "fullscreen", scope: !1214, file: !154, line: 425, baseType: !48, size: 16, offset: 3648)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "xplay", scope: !1214, file: !154, line: 425, baseType: !48, size: 16, offset: 3664)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "yplay", scope: !1214, file: !154, line: 425, baseType: !48, size: 16, offset: 3680)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "freqplay", scope: !1214, file: !154, line: 426, baseType: !48, size: 16, offset: 3696)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !1214, file: !154, line: 428, baseType: !48, size: 16, offset: 3712)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "attrib", scope: !1214, file: !154, line: 428, baseType: !48, size: 16, offset: 3728)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "frame_step", scope: !1214, file: !154, line: 431, baseType: !22, size: 32, offset: 3744)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "stereomode", scope: !1214, file: !154, line: 433, baseType: !48, size: 16, offset: 3776)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "dimensionspreset", scope: !1214, file: !154, line: 435, baseType: !48, size: 16, offset: 3792)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "filtertype", scope: !1214, file: !154, line: 437, baseType: !48, size: 16, offset: 3808)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1214, file: !154, line: 439, baseType: !48, size: 16, offset: 3824)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "maximsize", scope: !1214, file: !154, line: 441, baseType: !48, size: 16, offset: 3840)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "pad6", scope: !1214, file: !154, line: 443, baseType: !48, size: 16, offset: 3856)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "xsch", scope: !1214, file: !154, line: 449, baseType: !22, size: 32, offset: 3872)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "ysch", scope: !1214, file: !154, line: 453, baseType: !22, size: 32, offset: 3904)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "xparts", scope: !1214, file: !154, line: 458, baseType: !48, size: 16, offset: 3936)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "yparts", scope: !1214, file: !154, line: 462, baseType: !48, size: 16, offset: 3952)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "tilex", scope: !1214, file: !154, line: 467, baseType: !22, size: 32, offset: 3968)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "tiley", scope: !1214, file: !154, line: 467, baseType: !22, size: 32, offset: 4000)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !1214, file: !154, line: 469, baseType: !48, size: 16, offset: 4032)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "imtype", scope: !1214, file: !154, line: 469, baseType: !48, size: 16, offset: 4048)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "subimtype", scope: !1214, file: !154, line: 469, baseType: !48, size: 16, offset: 4064)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !1214, file: !154, line: 469, baseType: !48, size: 16, offset: 4080)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "displaymode", scope: !1214, file: !154, line: 474, baseType: !48, size: 16, offset: 4096)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "use_lock_interface", scope: !1214, file: !154, line: 475, baseType: !14, size: 8, offset: 4112)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "pad7", scope: !1214, file: !154, line: 476, baseType: !14, size: 8, offset: 4120)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "scemode", scope: !1214, file: !154, line: 481, baseType: !22, size: 32, offset: 4128)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1214, file: !154, line: 486, baseType: !22, size: 32, offset: 4160)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "raytrace_options", scope: !1214, file: !154, line: 491, baseType: !22, size: 32, offset: 4192)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "raytrace_structure", scope: !1214, file: !154, line: 496, baseType: !48, size: 16, offset: 4224)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1214, file: !154, line: 498, baseType: !48, size: 16, offset: 4240)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "ocres", scope: !1214, file: !154, line: 501, baseType: !48, size: 16, offset: 4256)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !1214, file: !154, line: 502, baseType: !48, size: 16, offset: 4272)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "alphamode", scope: !1214, file: !154, line: 508, baseType: !48, size: 16, offset: 4288)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "osa", scope: !1214, file: !154, line: 513, baseType: !48, size: 16, offset: 4304)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "frs_sec", scope: !1214, file: !154, line: 515, baseType: !48, size: 16, offset: 4320)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "edgeint", scope: !1214, file: !154, line: 515, baseType: !48, size: 16, offset: 4336)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "safety", scope: !1214, file: !154, line: 519, baseType: !515, size: 128, offset: 4352)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "border", scope: !1214, file: !154, line: 519, baseType: !515, size: 128, offset: 4480)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "disprect", scope: !1214, file: !154, line: 520, baseType: !1415, size: 128, offset: 4608)
!1415 = !DIDerivedType(tag: DW_TAG_typedef, name: "rcti", file: !516, line: 89, baseType: !1416)
!1416 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcti", file: !516, line: 86, size: 128, elements: !1417)
!1417 = !{!1418, !1419, !1420, !1421}
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "xmin", scope: !1416, file: !516, line: 87, baseType: !22, size: 32)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "xmax", scope: !1416, file: !516, line: 87, baseType: !22, size: 32, offset: 32)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "ymin", scope: !1416, file: !516, line: 88, baseType: !22, size: 32, offset: 64)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "ymax", scope: !1416, file: !516, line: 88, baseType: !22, size: 32, offset: 96)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "layers", scope: !1214, file: !154, line: 523, baseType: !58, size: 128, offset: 4736)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "actlay", scope: !1214, file: !154, line: 524, baseType: !48, size: 16, offset: 4864)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "mblur_samples", scope: !1214, file: !154, line: 527, baseType: !48, size: 16, offset: 4880)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "xasp", scope: !1214, file: !154, line: 532, baseType: !191, size: 32, offset: 4896)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "yasp", scope: !1214, file: !154, line: 532, baseType: !191, size: 32, offset: 4928)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "frs_sec_base", scope: !1214, file: !154, line: 534, baseType: !191, size: 32, offset: 4960)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "gauss", scope: !1214, file: !154, line: 538, baseType: !191, size: 32, offset: 4992)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "color_mgt_flag", scope: !1214, file: !154, line: 542, baseType: !22, size: 32, offset: 5024)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "postgamma", scope: !1214, file: !154, line: 545, baseType: !191, size: 32, offset: 5056)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "posthue", scope: !1214, file: !154, line: 545, baseType: !191, size: 32, offset: 5088)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "postsat", scope: !1214, file: !154, line: 545, baseType: !191, size: 32, offset: 5120)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "dither_intensity", scope: !1214, file: !154, line: 548, baseType: !191, size: 32, offset: 5152)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "bake_osa", scope: !1214, file: !154, line: 551, baseType: !48, size: 16, offset: 5184)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "bake_filter", scope: !1214, file: !154, line: 551, baseType: !48, size: 16, offset: 5200)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "bake_mode", scope: !1214, file: !154, line: 551, baseType: !48, size: 16, offset: 5216)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "bake_flag", scope: !1214, file: !154, line: 551, baseType: !48, size: 16, offset: 5232)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "bake_normal_space", scope: !1214, file: !154, line: 552, baseType: !48, size: 16, offset: 5248)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "bake_quad_split", scope: !1214, file: !154, line: 552, baseType: !48, size: 16, offset: 5264)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "bake_maxdist", scope: !1214, file: !154, line: 553, baseType: !191, size: 32, offset: 5280)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "bake_biasdist", scope: !1214, file: !154, line: 553, baseType: !191, size: 32, offset: 5312)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "bake_samples", scope: !1214, file: !154, line: 554, baseType: !48, size: 16, offset: 5344)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "bake_pad", scope: !1214, file: !154, line: 554, baseType: !48, size: 16, offset: 5360)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "bake_user_scale", scope: !1214, file: !154, line: 555, baseType: !191, size: 32, offset: 5376)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "bake_pad1", scope: !1214, file: !154, line: 555, baseType: !191, size: 32, offset: 5408)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "pic", scope: !1214, file: !154, line: 558, baseType: !130, size: 8192, offset: 5440)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "stamp", scope: !1214, file: !154, line: 561, baseType: !22, size: 32, offset: 13632)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "stamp_font_id", scope: !1214, file: !154, line: 562, baseType: !48, size: 16, offset: 13664)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !1214, file: !154, line: 562, baseType: !48, size: 16, offset: 13680)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "stamp_udata", scope: !1214, file: !154, line: 565, baseType: !619, size: 6144, offset: 13696)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "fg_stamp", scope: !1214, file: !154, line: 568, baseType: !300, size: 128, offset: 19840)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "bg_stamp", scope: !1214, file: !154, line: 569, baseType: !300, size: 128, offset: 19968)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "seq_prev_type", scope: !1214, file: !154, line: 572, baseType: !14, size: 8, offset: 20096)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "seq_rend_type", scope: !1214, file: !154, line: 573, baseType: !14, size: 8, offset: 20104)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "seq_flag", scope: !1214, file: !154, line: 574, baseType: !14, size: 8, offset: 20112)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "pad5", scope: !1214, file: !154, line: 575, baseType: !1064, size: 40, offset: 20120)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_flag", scope: !1214, file: !154, line: 578, baseType: !22, size: 32, offset: 20160)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_subsurf", scope: !1214, file: !154, line: 579, baseType: !48, size: 16, offset: 20192)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_shadowsamples", scope: !1214, file: !154, line: 580, baseType: !48, size: 16, offset: 20208)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_particles", scope: !1214, file: !154, line: 581, baseType: !191, size: 32, offset: 20224)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_aosss", scope: !1214, file: !154, line: 582, baseType: !191, size: 32, offset: 20256)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "cineonwhite", scope: !1214, file: !154, line: 585, baseType: !48, size: 16, offset: 20288)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "cineonblack", scope: !1214, file: !154, line: 585, baseType: !48, size: 16, offset: 20304)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "cineongamma", scope: !1214, file: !154, line: 586, baseType: !191, size: 32, offset: 20320)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_preset", scope: !1214, file: !154, line: 589, baseType: !48, size: 16, offset: 20352)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_depth", scope: !1214, file: !154, line: 589, baseType: !48, size: 16, offset: 20368)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "rpad3", scope: !1214, file: !154, line: 590, baseType: !22, size: 32, offset: 20384)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "domeres", scope: !1214, file: !154, line: 593, baseType: !48, size: 16, offset: 20416)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "domemode", scope: !1214, file: !154, line: 593, baseType: !48, size: 16, offset: 20432)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "domeangle", scope: !1214, file: !154, line: 594, baseType: !48, size: 16, offset: 20448)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "dometilt", scope: !1214, file: !154, line: 594, baseType: !48, size: 16, offset: 20464)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "domeresbuf", scope: !1214, file: !154, line: 595, baseType: !191, size: 32, offset: 20480)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1214, file: !154, line: 596, baseType: !191, size: 32, offset: 20512)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "dometext", scope: !1214, file: !154, line: 597, baseType: !1475, size: 64, offset: 20544)
!1475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1476, size: 64)
!1476 = !DICompositeType(tag: DW_TAG_structure_type, name: "Text", file: !1477, line: 55, flags: DIFlagFwdDecl)
!1477 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_context.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "line_thickness_mode", scope: !1214, file: !154, line: 600, baseType: !22, size: 32, offset: 20608)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "unit_line_thickness", scope: !1214, file: !154, line: 601, baseType: !191, size: 32, offset: 20640)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "engine", scope: !1214, file: !154, line: 604, baseType: !1481, size: 256, offset: 20672)
!1481 = !DICompositeType(tag: DW_TAG_array_type, baseType: !14, size: 256, elements: !1482)
!1482 = !{!1483}
!1483 = !DISubrange(count: 32)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "bake", scope: !1214, file: !154, line: 607, baseType: !1485, size: 10880, offset: 20928)
!1485 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BakeData", file: !154, line: 364, size: 10880, elements: !1486)
!1486 = !{!1487, !1488, !1489, !1490, !1491, !1492, !1493, !1494, !1495, !1496, !1497, !1498, !1499}
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "im_format", scope: !1485, file: !154, line: 365, baseType: !1217, size: 1984)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "filepath", scope: !1485, file: !154, line: 367, baseType: !130, size: 8192, offset: 1984)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1485, file: !154, line: 369, baseType: !48, size: 16, offset: 10176)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1485, file: !154, line: 369, baseType: !48, size: 16, offset: 10192)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "margin", scope: !1485, file: !154, line: 370, baseType: !48, size: 16, offset: 10208)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1485, file: !154, line: 370, baseType: !48, size: 16, offset: 10224)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "cage_extrusion", scope: !1485, file: !154, line: 372, baseType: !191, size: 32, offset: 10240)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1485, file: !154, line: 373, baseType: !191, size: 32, offset: 10272)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "normal_swizzle", scope: !1485, file: !154, line: 375, baseType: !986, size: 24, offset: 10304)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "normal_space", scope: !1485, file: !154, line: 376, baseType: !14, size: 8, offset: 10328)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "save_mode", scope: !1485, file: !154, line: 378, baseType: !14, size: 8, offset: 10336)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1485, file: !154, line: 379, baseType: !986, size: 24, offset: 10344)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "cage", scope: !1485, file: !154, line: 381, baseType: !33, size: 512, offset: 10368)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "preview_start_resolution", scope: !1214, file: !154, line: 609, baseType: !22, size: 32, offset: 31808)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1214, file: !154, line: 610, baseType: !22, size: 32, offset: 31840)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "audio", scope: !153, file: !154, line: 1252, baseType: !1503, size: 256, offset: 34112)
!1503 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AudioData", file: !154, line: 158, size: 256, elements: !1504)
!1504 = !{!1505, !1506, !1507, !1508, !1509, !1510, !1511, !1512, !1513}
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "mixrate", scope: !1503, file: !154, line: 159, baseType: !22, size: 32)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "main", scope: !1503, file: !154, line: 160, baseType: !191, size: 32, offset: 32)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "speed_of_sound", scope: !1503, file: !154, line: 161, baseType: !191, size: 32, offset: 64)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "doppler_factor", scope: !1503, file: !154, line: 162, baseType: !191, size: 32, offset: 96)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "distance_model", scope: !1503, file: !154, line: 163, baseType: !22, size: 32, offset: 128)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1503, file: !154, line: 164, baseType: !48, size: 16, offset: 160)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1503, file: !154, line: 165, baseType: !48, size: 16, offset: 176)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "volume", scope: !1503, file: !154, line: 166, baseType: !191, size: 32, offset: 192)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1503, file: !154, line: 167, baseType: !191, size: 32, offset: 224)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !153, file: !154, line: 1254, baseType: !58, size: 128, offset: 34368)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "transform_spaces", scope: !153, file: !154, line: 1255, baseType: !58, size: 128, offset: 34496)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scene", scope: !153, file: !154, line: 1257, baseType: !56, size: 64, offset: 34624)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scene_handle", scope: !153, file: !154, line: 1258, baseType: !56, size: 64, offset: 34688)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scrub_handle", scope: !153, file: !154, line: 1259, baseType: !56, size: 64, offset: 34752)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "speaker_handles", scope: !153, file: !154, line: 1260, baseType: !56, size: 64, offset: 34816)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "fps_info", scope: !153, file: !154, line: 1262, baseType: !56, size: 64, offset: 34880)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "theDag", scope: !153, file: !154, line: 1265, baseType: !1522, size: 64, offset: 34944)
!1522 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1523, size: 64)
!1523 = !DICompositeType(tag: DW_TAG_structure_type, name: "DagForest", file: !154, line: 1265, flags: DIFlagFwdDecl)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "dagflags", scope: !153, file: !154, line: 1266, baseType: !48, size: 16, offset: 35008)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !153, file: !154, line: 1267, baseType: !48, size: 16, offset: 35024)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "active_keyingset", scope: !153, file: !154, line: 1270, baseType: !22, size: 32, offset: 35040)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "keyingsets", scope: !153, file: !154, line: 1271, baseType: !58, size: 128, offset: 35072)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "framing", scope: !153, file: !154, line: 1274, baseType: !1529, size: 128, offset: 35200)
!1529 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameFraming", file: !154, line: 650, size: 128, elements: !1530)
!1530 = !{!1531, !1532, !1533, !1534, !1535}
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !1529, file: !154, line: 651, baseType: !227, size: 96)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1529, file: !154, line: 652, baseType: !14, size: 8, offset: 96)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1529, file: !154, line: 652, baseType: !14, size: 8, offset: 104)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1529, file: !154, line: 652, baseType: !14, size: 8, offset: 112)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !1529, file: !154, line: 652, baseType: !14, size: 8, offset: 120)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "gm", scope: !153, file: !154, line: 1275, baseType: !1537, size: 1472, offset: 35328)
!1537 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameData", file: !154, line: 676, size: 1472, elements: !1538)
!1538 = !{!1539, !1540, !1541, !1542, !1543, !1544, !1545, !1546, !1547, !1548, !1549, !1551, !1561, !1562, !1563, !1564, !1583, !1584, !1585, !1586, !1587, !1588, !1589, !1590, !1591, !1592, !1593, !1594, !1595, !1596, !1597, !1598, !1599, !1600, !1601, !1602}
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "framing", scope: !1537, file: !154, line: 679, baseType: !1529, size: 128)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "playerflag", scope: !1537, file: !154, line: 680, baseType: !48, size: 16, offset: 128)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "xplay", scope: !1537, file: !154, line: 680, baseType: !48, size: 16, offset: 144)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "yplay", scope: !1537, file: !154, line: 680, baseType: !48, size: 16, offset: 160)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "freqplay", scope: !1537, file: !154, line: 680, baseType: !48, size: 16, offset: 176)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !1537, file: !154, line: 681, baseType: !48, size: 16, offset: 192)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "attrib", scope: !1537, file: !154, line: 681, baseType: !48, size: 16, offset: 208)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "rt1", scope: !1537, file: !154, line: 681, baseType: !48, size: 16, offset: 224)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "rt2", scope: !1537, file: !154, line: 681, baseType: !48, size: 16, offset: 240)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "aasamples", scope: !1537, file: !154, line: 682, baseType: !48, size: 16, offset: 256)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !1537, file: !154, line: 682, baseType: !1550, size: 48, offset: 272)
!1550 = !DICompositeType(tag: DW_TAG_array_type, baseType: !48, size: 48, elements: !228)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "dome", scope: !1537, file: !154, line: 685, baseType: !1552, size: 192, offset: 320)
!1552 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameDome", file: !154, line: 633, size: 192, elements: !1553)
!1553 = !{!1554, !1555, !1556, !1557, !1558, !1559, !1560}
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "res", scope: !1552, file: !154, line: 634, baseType: !48, size: 16)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1552, file: !154, line: 634, baseType: !48, size: 16, offset: 16)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "angle", scope: !1552, file: !154, line: 635, baseType: !48, size: 16, offset: 32)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "tilt", scope: !1552, file: !154, line: 635, baseType: !48, size: 16, offset: 48)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "resbuf", scope: !1552, file: !154, line: 636, baseType: !191, size: 32, offset: 64)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1552, file: !154, line: 636, baseType: !191, size: 32, offset: 96)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "warptext", scope: !1552, file: !154, line: 637, baseType: !1475, size: 64, offset: 128)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "stereoflag", scope: !1537, file: !154, line: 686, baseType: !48, size: 16, offset: 512)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "stereomode", scope: !1537, file: !154, line: 686, baseType: !48, size: 16, offset: 528)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "eyeseparation", scope: !1537, file: !154, line: 687, baseType: !191, size: 32, offset: 544)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "recastData", scope: !1537, file: !154, line: 688, baseType: !1565, size: 448, offset: 576)
!1565 = !DIDerivedType(tag: DW_TAG_typedef, name: "RecastData", file: !154, line: 674, baseType: !1566)
!1566 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RecastData", file: !154, line: 659, size: 448, elements: !1567)
!1567 = !{!1568, !1569, !1570, !1571, !1572, !1573, !1574, !1575, !1576, !1577, !1578, !1579, !1580, !1581, !1582}
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "cellsize", scope: !1566, file: !154, line: 660, baseType: !191, size: 32)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "cellheight", scope: !1566, file: !154, line: 661, baseType: !191, size: 32, offset: 32)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "agentmaxslope", scope: !1566, file: !154, line: 662, baseType: !191, size: 32, offset: 64)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "agentmaxclimb", scope: !1566, file: !154, line: 663, baseType: !191, size: 32, offset: 96)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "agentheight", scope: !1566, file: !154, line: 664, baseType: !191, size: 32, offset: 128)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "agentradius", scope: !1566, file: !154, line: 665, baseType: !191, size: 32, offset: 160)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "edgemaxlen", scope: !1566, file: !154, line: 666, baseType: !191, size: 32, offset: 192)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "edgemaxerror", scope: !1566, file: !154, line: 667, baseType: !191, size: 32, offset: 224)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "regionminsize", scope: !1566, file: !154, line: 668, baseType: !191, size: 32, offset: 256)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "regionmergesize", scope: !1566, file: !154, line: 669, baseType: !191, size: 32, offset: 288)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "vertsperpoly", scope: !1566, file: !154, line: 670, baseType: !22, size: 32, offset: 320)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "detailsampledist", scope: !1566, file: !154, line: 671, baseType: !191, size: 32, offset: 352)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "detailsamplemaxerror", scope: !1566, file: !154, line: 672, baseType: !191, size: 32, offset: 384)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1566, file: !154, line: 673, baseType: !48, size: 16, offset: 416)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1566, file: !154, line: 673, baseType: !48, size: 16, offset: 432)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !1537, file: !154, line: 692, baseType: !191, size: 32, offset: 1024)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "activityBoxRadius", scope: !1537, file: !154, line: 697, baseType: !191, size: 32, offset: 1056)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1537, file: !154, line: 703, baseType: !22, size: 32, offset: 1088)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1537, file: !154, line: 704, baseType: !48, size: 16, offset: 1120)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "matmode", scope: !1537, file: !154, line: 704, baseType: !48, size: 16, offset: 1136)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "occlusionRes", scope: !1537, file: !154, line: 705, baseType: !48, size: 16, offset: 1152)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "physicsEngine", scope: !1537, file: !154, line: 706, baseType: !48, size: 16, offset: 1168)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "exitkey", scope: !1537, file: !154, line: 707, baseType: !48, size: 16, offset: 1184)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "vsync", scope: !1537, file: !154, line: 708, baseType: !48, size: 16, offset: 1200)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "ticrate", scope: !1537, file: !154, line: 709, baseType: !48, size: 16, offset: 1216)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "maxlogicstep", scope: !1537, file: !154, line: 709, baseType: !48, size: 16, offset: 1232)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "physubstep", scope: !1537, file: !154, line: 709, baseType: !48, size: 16, offset: 1248)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "maxphystep", scope: !1537, file: !154, line: 709, baseType: !48, size: 16, offset: 1264)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "obstacleSimulation", scope: !1537, file: !154, line: 710, baseType: !48, size: 16, offset: 1280)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "raster_storage", scope: !1537, file: !154, line: 711, baseType: !48, size: 16, offset: 1296)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "levelHeight", scope: !1537, file: !154, line: 712, baseType: !191, size: 32, offset: 1312)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "deactivationtime", scope: !1537, file: !154, line: 713, baseType: !191, size: 32, offset: 1344)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "lineardeactthreshold", scope: !1537, file: !154, line: 713, baseType: !191, size: 32, offset: 1376)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "angulardeactthreshold", scope: !1537, file: !154, line: 713, baseType: !191, size: 32, offset: 1408)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1537, file: !154, line: 713, baseType: !191, size: 32, offset: 1440)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "unit", scope: !153, file: !154, line: 1278, baseType: !1604, size: 64, offset: 36800)
!1604 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UnitSettings", file: !154, line: 1197, size: 64, elements: !1605)
!1605 = !{!1606, !1607, !1608, !1609}
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "scale_length", scope: !1604, file: !154, line: 1199, baseType: !191, size: 32)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "system", scope: !1604, file: !154, line: 1200, baseType: !14, size: 8, offset: 32)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "system_rotation", scope: !1604, file: !154, line: 1201, baseType: !14, size: 8, offset: 40)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1604, file: !154, line: 1202, baseType: !48, size: 16, offset: 48)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !153, file: !154, line: 1281, baseType: !258, size: 64, offset: 36864)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "physics_settings", scope: !153, file: !154, line: 1284, baseType: !1612, size: 192, offset: 36928)
!1612 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PhysicsSettings", file: !154, line: 1208, size: 192, elements: !1613)
!1613 = !{!1614, !1615, !1616, !1617}
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !1612, file: !154, line: 1209, baseType: !227, size: 96)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1612, file: !154, line: 1210, baseType: !22, size: 32, offset: 96)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "quick_cache_step", scope: !1612, file: !154, line: 1210, baseType: !22, size: 32, offset: 128)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !1612, file: !154, line: 1210, baseType: !22, size: 32, offset: 160)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "clip", scope: !153, file: !154, line: 1287, baseType: !672, size: 64, offset: 37120)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask", scope: !153, file: !154, line: 1289, baseType: !401, size: 64, offset: 37184)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask_modal", scope: !153, file: !154, line: 1290, baseType: !401, size: 64, offset: 37248)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "view_settings", scope: !153, file: !154, line: 1293, baseType: !1237, size: 1280, offset: 37312)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "display_settings", scope: !153, file: !154, line: 1294, baseType: !1287, size: 512, offset: 38592)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "sequencer_colorspace_settings", scope: !153, file: !154, line: 1295, baseType: !663, size: 512, offset: 39104)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_world", scope: !153, file: !154, line: 1298, baseType: !1625, size: 64, offset: 39616)
!1625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1626, size: 64)
!1626 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyWorld", file: !154, line: 1298, flags: DIFlagFwdDecl)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "newscene", scope: !108, file: !109, line: 58, baseType: !152, size: 64, offset: 1536)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "redraws_flag", scope: !108, file: !109, line: 60, baseType: !22, size: 32, offset: 1600)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !108, file: !109, line: 61, baseType: !22, size: 32, offset: 1632)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !108, file: !109, line: 63, baseType: !48, size: 16, offset: 1664)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !108, file: !109, line: 64, baseType: !48, size: 16, offset: 1680)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "winid", scope: !108, file: !109, line: 65, baseType: !48, size: 16, offset: 1696)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw", scope: !108, file: !109, line: 66, baseType: !48, size: 16, offset: 1712)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "do_refresh", scope: !108, file: !109, line: 67, baseType: !48, size: 16, offset: 1728)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw_gesture", scope: !108, file: !109, line: 68, baseType: !48, size: 16, offset: 1744)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw_paintcursor", scope: !108, file: !109, line: 69, baseType: !48, size: 16, offset: 1760)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw_drag", scope: !108, file: !109, line: 70, baseType: !48, size: 16, offset: 1776)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "swap", scope: !108, file: !109, line: 71, baseType: !48, size: 16, offset: 1792)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "mainwin", scope: !108, file: !109, line: 73, baseType: !48, size: 16, offset: 1808)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "subwinactive", scope: !108, file: !109, line: 74, baseType: !48, size: 16, offset: 1824)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !108, file: !109, line: 76, baseType: !48, size: 16, offset: 1840)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "animtimer", scope: !108, file: !109, line: 78, baseType: !94, size: 64, offset: 1856)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !108, file: !109, line: 79, baseType: !56, size: 64, offset: 1920)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "newscreen", scope: !101, file: !28, line: 175, baseType: !107, size: 64, offset: 256)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "screenname", scope: !101, file: !28, line: 176, baseType: !33, size: 512, offset: 320)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "posx", scope: !101, file: !28, line: 178, baseType: !48, size: 16, offset: 832)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "posy", scope: !101, file: !28, line: 178, baseType: !48, size: 16, offset: 848)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "sizex", scope: !101, file: !28, line: 178, baseType: !48, size: 16, offset: 864)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "sizey", scope: !101, file: !28, line: 178, baseType: !48, size: 16, offset: 880)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "windowstate", scope: !101, file: !28, line: 179, baseType: !48, size: 16, offset: 896)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "monitor", scope: !101, file: !28, line: 180, baseType: !48, size: 16, offset: 912)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !101, file: !28, line: 181, baseType: !48, size: 16, offset: 928)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "cursor", scope: !101, file: !28, line: 182, baseType: !48, size: 16, offset: 944)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "lastcursor", scope: !101, file: !28, line: 183, baseType: !48, size: 16, offset: 960)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "modalcursor", scope: !101, file: !28, line: 184, baseType: !48, size: 16, offset: 976)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "grabcursor", scope: !101, file: !28, line: 185, baseType: !48, size: 16, offset: 992)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "addmousemove", scope: !101, file: !28, line: 186, baseType: !48, size: 16, offset: 1008)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "winid", scope: !101, file: !28, line: 188, baseType: !22, size: 32, offset: 1024)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "lock_pie_event", scope: !101, file: !28, line: 190, baseType: !48, size: 16, offset: 1056)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "last_pie_event", scope: !101, file: !28, line: 191, baseType: !48, size: 16, offset: 1072)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "eventstate", scope: !101, file: !28, line: 194, baseType: !1662, size: 64, offset: 1088)
!1662 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1663, size: 64)
!1663 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmEvent", file: !8, line: 421, size: 960, elements: !1664)
!1664 = !{!1665, !1666, !1667, !1668, !1669, !1670, !1671, !1672, !1673, !1674, !1675, !1676, !1677, !1678, !1679, !1681, !1682, !1683, !1684, !1685, !1686, !1687, !1688, !1689, !1690, !1698, !1699, !1700, !1701}
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1663, file: !8, line: 422, baseType: !1662, size: 64)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1663, file: !8, line: 422, baseType: !1662, size: 64, offset: 64)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1663, file: !8, line: 424, baseType: !48, size: 16, offset: 128)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1663, file: !8, line: 425, baseType: !48, size: 16, offset: 144)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1663, file: !8, line: 426, baseType: !22, size: 32, offset: 160)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !1663, file: !8, line: 426, baseType: !22, size: 32, offset: 192)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "mval", scope: !1663, file: !8, line: 427, baseType: !682, size: 64, offset: 224)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "utf8_buf", scope: !1663, file: !8, line: 428, baseType: !1233, size: 48, offset: 288)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "ascii", scope: !1663, file: !8, line: 431, baseType: !14, size: 8, offset: 336)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1663, file: !8, line: 432, baseType: !14, size: 8, offset: 344)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "prevtype", scope: !1663, file: !8, line: 435, baseType: !48, size: 16, offset: 352)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "prevval", scope: !1663, file: !8, line: 436, baseType: !48, size: 16, offset: 368)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "prevx", scope: !1663, file: !8, line: 437, baseType: !22, size: 32, offset: 384)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "prevy", scope: !1663, file: !8, line: 437, baseType: !22, size: 32, offset: 416)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "prevclicktime", scope: !1663, file: !8, line: 438, baseType: !1680, size: 64, offset: 448)
!1680 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "prevclickx", scope: !1663, file: !8, line: 439, baseType: !22, size: 32, offset: 512)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "prevclicky", scope: !1663, file: !8, line: 439, baseType: !22, size: 32, offset: 544)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "shift", scope: !1663, file: !8, line: 442, baseType: !48, size: 16, offset: 576)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "ctrl", scope: !1663, file: !8, line: 442, baseType: !48, size: 16, offset: 592)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "alt", scope: !1663, file: !8, line: 442, baseType: !48, size: 16, offset: 608)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "oskey", scope: !1663, file: !8, line: 442, baseType: !48, size: 16, offset: 624)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "keymodifier", scope: !1663, file: !8, line: 443, baseType: !48, size: 16, offset: 640)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "check_click", scope: !1663, file: !8, line: 446, baseType: !48, size: 16, offset: 656)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "keymap_idname", scope: !1663, file: !8, line: 449, baseType: !12, size: 64, offset: 704)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "tablet_data", scope: !1663, file: !8, line: 452, baseType: !1691, size: 64, offset: 768)
!1691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1692, size: 64)
!1692 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmTabletData", file: !8, line: 463, size: 128, elements: !1693)
!1693 = !{!1694, !1695, !1696, !1697}
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "Active", scope: !1692, file: !8, line: 464, baseType: !22, size: 32)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "Pressure", scope: !1692, file: !8, line: 465, baseType: !191, size: 32, offset: 32)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "Xtilt", scope: !1692, file: !8, line: 466, baseType: !191, size: 32, offset: 64)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "Ytilt", scope: !1692, file: !8, line: 467, baseType: !191, size: 32, offset: 96)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "custom", scope: !1663, file: !8, line: 455, baseType: !48, size: 16, offset: 832)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "customdatafree", scope: !1663, file: !8, line: 456, baseType: !48, size: 16, offset: 848)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1663, file: !8, line: 457, baseType: !22, size: 32, offset: 864)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "customdata", scope: !1663, file: !8, line: 458, baseType: !56, size: 64, offset: 896)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "curswin", scope: !101, file: !28, line: 196, baseType: !1703, size: 64, offset: 1152)
!1703 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1704, size: 64)
!1704 = !DICompositeType(tag: DW_TAG_structure_type, name: "wmSubWindow", file: !28, line: 55, flags: DIFlagFwdDecl)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "tweak", scope: !101, file: !28, line: 198, baseType: !1706, size: 64, offset: 1216)
!1706 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1707, size: 64)
!1707 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmGesture", file: !8, line: 398, size: 448, elements: !1708)
!1708 = !{!1709, !1710, !1711, !1712, !1713, !1714, !1715, !1716, !1717, !1718}
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1707, file: !8, line: 399, baseType: !1706, size: 64)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1707, file: !8, line: 399, baseType: !1706, size: 64, offset: 64)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "event_type", scope: !1707, file: !8, line: 400, baseType: !22, size: 32, offset: 128)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1707, file: !8, line: 401, baseType: !22, size: 32, offset: 160)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1707, file: !8, line: 402, baseType: !22, size: 32, offset: 192)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "swinid", scope: !1707, file: !8, line: 403, baseType: !22, size: 32, offset: 224)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "points", scope: !1707, file: !8, line: 404, baseType: !22, size: 32, offset: 256)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1707, file: !8, line: 405, baseType: !22, size: 32, offset: 288)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "customdata", scope: !1707, file: !8, line: 407, baseType: !56, size: 64, offset: 320)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "userdata", scope: !1707, file: !8, line: 414, baseType: !56, size: 64, offset: 384)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "drawmethod", scope: !101, file: !28, line: 200, baseType: !22, size: 32, offset: 1280)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "drawfail", scope: !101, file: !28, line: 200, baseType: !22, size: 32, offset: 1312)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "drawdata", scope: !101, file: !28, line: 201, baseType: !56, size: 64, offset: 1344)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !101, file: !28, line: 203, baseType: !58, size: 128, offset: 1408)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "handlers", scope: !101, file: !28, line: 204, baseType: !58, size: 128, offset: 1536)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "modalhandlers", scope: !101, file: !28, line: 205, baseType: !58, size: 128, offset: 1664)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "subwindows", scope: !101, file: !28, line: 207, baseType: !58, size: 128, offset: 1792)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "gesture", scope: !101, file: !28, line: 208, baseType: !58, size: 128, offset: 1920)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "timestep", scope: !95, file: !8, line: 495, baseType: !1680, size: 64, offset: 192)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "event_type", scope: !95, file: !8, line: 496, baseType: !22, size: 32, offset: 256)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "customdata", scope: !95, file: !8, line: 497, baseType: !56, size: 64, offset: 320)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !95, file: !8, line: 499, baseType: !1680, size: 64, offset: 384)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !95, file: !8, line: 500, baseType: !1680, size: 64, offset: 448)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "ltime", scope: !95, file: !8, line: 502, baseType: !1680, size: 64, offset: 512)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "ntime", scope: !95, file: !8, line: 503, baseType: !1680, size: 64, offset: 576)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !95, file: !8, line: 504, baseType: !1680, size: 64, offset: 640)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "sleep", scope: !95, file: !8, line: 505, baseType: !22, size: 32, offset: 704)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "macro", scope: !27, file: !28, line: 343, baseType: !58, size: 128, offset: 1024)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "opm", scope: !27, file: !28, line: 344, baseType: !26, size: 64, offset: 1152)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "layout", scope: !27, file: !28, line: 345, baseType: !1739, size: 64, offset: 1216)
!1739 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1740, size: 64)
!1740 = !DICompositeType(tag: DW_TAG_structure_type, name: "uiLayout", file: !28, line: 61, flags: DIFlagFwdDecl)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !27, file: !28, line: 346, baseType: !48, size: 16, offset: 1280)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !27, file: !28, line: 346, baseType: !1550, size: 48, offset: 1296)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "check", scope: !9, file: !8, line: 524, baseType: !1744, size: 64, offset: 320)
!1744 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1745, size: 64)
!1745 = !DISubroutineType(types: !1746)
!1746 = !{!1017, !23, !26}
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "invoke", scope: !9, file: !8, line: 530, baseType: !1748, size: 64, offset: 384)
!1748 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1749, size: 64)
!1749 = !DISubroutineType(types: !1750)
!1750 = !{!22, !23, !26, !1751}
!1751 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1752, size: 64)
!1752 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1663)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "cancel", scope: !9, file: !8, line: 531, baseType: !1754, size: 64, offset: 448)
!1754 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1755, size: 64)
!1755 = !DISubroutineType(types: !1756)
!1756 = !{null, !23, !26}
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "modal", scope: !9, file: !8, line: 532, baseType: !1748, size: 64, offset: 512)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !9, file: !8, line: 536, baseType: !1759, size: 64, offset: 576)
!1759 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1760, size: 64)
!1760 = !DISubroutineType(types: !1761)
!1761 = !{!22, !23}
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "ui", scope: !9, file: !8, line: 539, baseType: !1754, size: 64, offset: 640)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "srna", scope: !9, file: !8, line: 542, baseType: !81, size: 64, offset: 704)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "last_properties", scope: !9, file: !8, line: 545, baseType: !43, size: 64, offset: 768)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "prop", scope: !9, file: !8, line: 549, baseType: !1766, size: 64, offset: 832)
!1766 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1767, size: 64)
!1767 = !DIDerivedType(tag: DW_TAG_typedef, name: "PropertyRNA", file: !25, line: 333, baseType: !1768)
!1768 = !DICompositeType(tag: DW_TAG_structure_type, name: "PropertyRNA", file: !25, line: 39, flags: DIFlagFwdDecl)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "macro", scope: !9, file: !8, line: 552, baseType: !58, size: 128, offset: 896)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "modalkeymap", scope: !9, file: !8, line: 555, baseType: !1771, size: 64, offset: 1024)
!1771 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1772, size: 64)
!1772 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmKeyMap", file: !28, line: 281, size: 1088, elements: !1773)
!1773 = !{!1774, !1775, !1776, !1777, !1778, !1779, !1780, !1781, !1782, !1783, !1784}
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1772, file: !28, line: 282, baseType: !1771, size: 64)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1772, file: !28, line: 282, baseType: !1771, size: 64, offset: 64)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "items", scope: !1772, file: !28, line: 284, baseType: !58, size: 128, offset: 128)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "diff_items", scope: !1772, file: !28, line: 285, baseType: !58, size: 128, offset: 256)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !1772, file: !28, line: 287, baseType: !33, size: 512, offset: 384)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "spaceid", scope: !1772, file: !28, line: 288, baseType: !48, size: 16, offset: 896)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "regionid", scope: !1772, file: !28, line: 289, baseType: !48, size: 16, offset: 912)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1772, file: !28, line: 291, baseType: !48, size: 16, offset: 928)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "kmi_id", scope: !1772, file: !28, line: 292, baseType: !48, size: 16, offset: 944)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !1772, file: !28, line: 295, baseType: !1759, size: 64, offset: 960)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "modal_items", scope: !1772, file: !28, line: 296, baseType: !56, size: 64, offset: 1024)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "pyop_data", scope: !9, file: !8, line: 559, baseType: !56, size: 64, offset: 1088)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "pyop_poll", scope: !9, file: !8, line: 560, baseType: !1787, size: 64, offset: 1152)
!1787 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1788, size: 64)
!1788 = !DISubroutineType(types: !1789)
!1789 = !{!22, !23, !69}
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "ext", scope: !9, file: !8, line: 563, baseType: !1791, size: 256, offset: 1216)
!1791 = !DIDerivedType(tag: DW_TAG_typedef, name: "ExtensionRNA", file: !25, line: 436, baseType: !1792)
!1792 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ExtensionRNA", file: !25, line: 430, size: 256, elements: !1793)
!1793 = !{!1794, !1795, !1798, !1814}
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1792, file: !25, line: 431, baseType: !56, size: 64)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "srna", scope: !1792, file: !25, line: 432, baseType: !1796, size: 64, offset: 64)
!1796 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1797, size: 64)
!1797 = !DIDerivedType(tag: DW_TAG_typedef, name: "StructRNA", file: !25, line: 417, baseType: !82)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "call", scope: !1792, file: !25, line: 433, baseType: !1799, size: 64, offset: 128)
!1799 = !DIDerivedType(tag: DW_TAG_typedef, name: "StructCallbackFunc", file: !25, line: 408, baseType: !1800)
!1800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1801, size: 64)
!1801 = !DISubroutineType(types: !1802)
!1802 = !{!22, !23, !73, !1803, !1805}
!1803 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1804, size: 64)
!1804 = !DICompositeType(tag: DW_TAG_structure_type, name: "FunctionRNA", file: !25, line: 38, flags: DIFlagFwdDecl)
!1805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1806, size: 64)
!1806 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParameterList", file: !25, line: 348, baseType: !1807)
!1807 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParameterList", file: !25, line: 337, size: 256, elements: !1808)
!1808 = !{!1809, !1810, !1811, !1812, !1813}
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1807, file: !25, line: 339, baseType: !56, size: 64)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1807, file: !25, line: 342, baseType: !1803, size: 64, offset: 64)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_size", scope: !1807, file: !25, line: 345, baseType: !22, size: 32, offset: 128)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "arg_count", scope: !1807, file: !25, line: 347, baseType: !22, size: 32, offset: 160)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "ret_count", scope: !1807, file: !25, line: 347, baseType: !22, size: 32, offset: 192)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !1792, file: !25, line: 434, baseType: !1815, size: 64, offset: 192)
!1815 = !DIDerivedType(tag: DW_TAG_typedef, name: "StructFreeFunc", file: !25, line: 409, baseType: !550)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !9, file: !8, line: 566, baseType: !48, size: 16, offset: 1472)
!1817 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !1818, retainedTypes: !2112, globals: !2250, splitDebugInlining: false, nameTableKind: None)
!1818 = !{!1819, !1827, !1831, !1839, !1872, !1880, !1887, !1890, !2091, !2096, !2102, !2107}
!1819 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1820, line: 51, baseType: !223, size: 32, elements: !1821)
!1820 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_mask.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1821 = !{!1822, !1823, !1824, !1825, !1826}
!1822 = !DIEnumerator(name: "MASK_WHICH_HANDLE_NONE", value: 0, isUnsigned: true)
!1823 = !DIEnumerator(name: "MASK_WHICH_HANDLE_STICK", value: 1, isUnsigned: true)
!1824 = !DIEnumerator(name: "MASK_WHICH_HANDLE_LEFT", value: 2, isUnsigned: true)
!1825 = !DIEnumerator(name: "MASK_WHICH_HANDLE_RIGHT", value: 3, isUnsigned: true)
!1826 = !DIEnumerator(name: "MASK_WHICH_HANDLE_BOTH", value: 4, isUnsigned: true)
!1827 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1820, line: 59, baseType: !223, size: 32, elements: !1828)
!1828 = !{!1829, !1830}
!1829 = !DIEnumerator(name: "MASK_HANDLE_MODE_STICK", value: 1, isUnsigned: true)
!1830 = !DIEnumerator(name: "MASK_HANDLE_MODE_INDIVIDUAL_HANDLES", value: 2, isUnsigned: true)
!1831 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eBezTriple_Handle", file: !184, line: 361, baseType: !223, size: 32, elements: !1832)
!1832 = !{!1833, !1834, !1835, !1836, !1837, !1838}
!1833 = !DIEnumerator(name: "HD_FREE", value: 0, isUnsigned: true)
!1834 = !DIEnumerator(name: "HD_AUTO", value: 1, isUnsigned: true)
!1835 = !DIEnumerator(name: "HD_VECT", value: 2, isUnsigned: true)
!1836 = !DIEnumerator(name: "HD_ALIGN", value: 3, isUnsigned: true)
!1837 = !DIEnumerator(name: "HD_AUTO_ANIM", value: 4, isUnsigned: true)
!1838 = !DIEnumerator(name: "HD_ALIGN_DOUBLESIDE", value: 5, isUnsigned: true)
!1839 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "PropertyFlag", file: !25, line: 151, baseType: !223, size: 32, elements: !1840)
!1840 = !{!1841, !1842, !1843, !1844, !1845, !1846, !1847, !1848, !1849, !1850, !1851, !1852, !1853, !1854, !1855, !1856, !1857, !1858, !1859, !1860, !1861, !1862, !1863, !1864, !1865, !1866, !1867, !1868, !1869, !1870, !1871}
!1841 = !DIEnumerator(name: "PROP_EDITABLE", value: 1, isUnsigned: true)
!1842 = !DIEnumerator(name: "PROP_LIB_EXCEPTION", value: 65536, isUnsigned: true)
!1843 = !DIEnumerator(name: "PROP_ANIMATABLE", value: 2, isUnsigned: true)
!1844 = !DIEnumerator(name: "PROP_ICONS_CONSECUTIVE", value: 4096, isUnsigned: true)
!1845 = !DIEnumerator(name: "PROP_HIDDEN", value: 524288, isUnsigned: true)
!1846 = !DIEnumerator(name: "PROP_SKIP_SAVE", value: 268435456, isUnsigned: true)
!1847 = !DIEnumerator(name: "PROP_REQUIRED", value: 4, isUnsigned: true)
!1848 = !DIEnumerator(name: "PROP_OUTPUT", value: 8, isUnsigned: true)
!1849 = !DIEnumerator(name: "PROP_RNAPTR", value: 2048, isUnsigned: true)
!1850 = !DIEnumerator(name: "PROP_PYFUNC_OPTIONAL", value: 1073741824, isUnsigned: true)
!1851 = !DIEnumerator(name: "PROP_REGISTER", value: 16, isUnsigned: true)
!1852 = !DIEnumerator(name: "PROP_REGISTER_OPTIONAL", value: 48, isUnsigned: true)
!1853 = !DIEnumerator(name: "PROP_PROPORTIONAL", value: 67108864, isUnsigned: true)
!1854 = !DIEnumerator(name: "PROP_ID_REFCOUNT", value: 64, isUnsigned: true)
!1855 = !DIEnumerator(name: "PROP_ID_SELF_CHECK", value: 1048576, isUnsigned: true)
!1856 = !DIEnumerator(name: "PROP_NEVER_NULL", value: 262144, isUnsigned: true)
!1857 = !DIEnumerator(name: "PROP_NEVER_UNLINK", value: 33554432, isUnsigned: true)
!1858 = !DIEnumerator(name: "PROP_ENUM_FLAG", value: 2097152, isUnsigned: true)
!1859 = !DIEnumerator(name: "PROP_CONTEXT_UPDATE", value: 4194304, isUnsigned: true)
!1860 = !DIEnumerator(name: "PROP_CONTEXT_PROPERTY_UPDATE", value: 138412032, isUnsigned: true)
!1861 = !DIEnumerator(name: "PROP_THICK_WRAP", value: 8388608, isUnsigned: true)
!1862 = !DIEnumerator(name: "PROP_BUILTIN", value: 128, isUnsigned: true)
!1863 = !DIEnumerator(name: "PROP_EXPORT", value: 256, isUnsigned: true)
!1864 = !DIEnumerator(name: "PROP_RUNTIME", value: 512, isUnsigned: true)
!1865 = !DIEnumerator(name: "PROP_IDPROPERTY", value: 1024, isUnsigned: true)
!1866 = !DIEnumerator(name: "PROP_RAW_ACCESS", value: 8192, isUnsigned: true)
!1867 = !DIEnumerator(name: "PROP_RAW_ARRAY", value: 16384, isUnsigned: true)
!1868 = !DIEnumerator(name: "PROP_FREE_POINTERS", value: 32768, isUnsigned: true)
!1869 = !DIEnumerator(name: "PROP_DYNAMIC", value: 131072, isUnsigned: true)
!1870 = !DIEnumerator(name: "PROP_ENUM_NO_CONTEXT", value: 16777216, isUnsigned: true)
!1871 = !DIEnumerator(name: "PROP_ENUM_NO_TRANSLATE", value: 536870912, isUnsigned: true)
!1872 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !28, line: 351, baseType: !223, size: 32, elements: !1873)
!1873 = !{!1874, !1875, !1876, !1877, !1878, !1879}
!1874 = !DIEnumerator(name: "OPERATOR_RUNNING_MODAL", value: 1, isUnsigned: true)
!1875 = !DIEnumerator(name: "OPERATOR_CANCELLED", value: 2, isUnsigned: true)
!1876 = !DIEnumerator(name: "OPERATOR_FINISHED", value: 4, isUnsigned: true)
!1877 = !DIEnumerator(name: "OPERATOR_PASS_THROUGH", value: 8, isUnsigned: true)
!1878 = !DIEnumerator(name: "OPERATOR_HANDLED", value: 16, isUnsigned: true)
!1879 = !DIEnumerator(name: "OPERATOR_INTERFACE", value: 32, isUnsigned: true)
!1880 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !3, line: 457, baseType: !223, size: 32, elements: !1881)
!1881 = !{!1882, !1883, !1884, !1885, !1886}
!1882 = !DIEnumerator(name: "SLIDE_ACTION_NONE", value: 0, isUnsigned: true)
!1883 = !DIEnumerator(name: "SLIDE_ACTION_POINT", value: 1, isUnsigned: true)
!1884 = !DIEnumerator(name: "SLIDE_ACTION_HANDLE", value: 2, isUnsigned: true)
!1885 = !DIEnumerator(name: "SLIDE_ACTION_FEATHER", value: 3, isUnsigned: true)
!1886 = !DIEnumerator(name: "SLIDE_ACTION_SPLINE", value: 4, isUnsigned: true)
!1887 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !674, line: 163, baseType: !223, size: 32, elements: !1888)
!1888 = !{!1889}
!1889 = !DIEnumerator(name: "MCLIP_PROXY_RENDER_UNDISTORT", value: 1, isUnsigned: true)
!1890 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1891, line: 54, baseType: !223, size: 32, elements: !1892)
!1891 = !DIFile(filename: "blender/source/blender/windowmanager/wm_event_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1892 = !{!1893, !1894, !1895, !1896, !1897, !1898, !1899, !1900, !1901, !1902, !1903, !1904, !1905, !1906, !1907, !1908, !1909, !1910, !1911, !1912, !1913, !1914, !1915, !1916, !1917, !1918, !1919, !1920, !1921, !1922, !1923, !1924, !1925, !1926, !1927, !1928, !1929, !1930, !1931, !1932, !1933, !1934, !1935, !1936, !1937, !1938, !1939, !1940, !1941, !1942, !1943, !1944, !1945, !1946, !1947, !1948, !1949, !1950, !1951, !1952, !1953, !1954, !1955, !1956, !1957, !1958, !1959, !1960, !1961, !1962, !1963, !1964, !1965, !1966, !1967, !1968, !1969, !1970, !1971, !1972, !1973, !1974, !1975, !1976, !1977, !1978, !1979, !1980, !1981, !1982, !1983, !1984, !1985, !1986, !1987, !1988, !1989, !1990, !1991, !1992, !1993, !1994, !1995, !1996, !1997, !1998, !1999, !2000, !2001, !2002, !2003, !2004, !2005, !2006, !2007, !2008, !2009, !2010, !2011, !2012, !2013, !2014, !2015, !2016, !2017, !2018, !2019, !2020, !2021, !2022, !2023, !2024, !2025, !2026, !2027, !2028, !2029, !2030, !2031, !2032, !2033, !2034, !2035, !2036, !2037, !2038, !2039, !2040, !2041, !2042, !2043, !2044, !2045, !2046, !2047, !2048, !2049, !2050, !2051, !2052, !2053, !2054, !2055, !2056, !2057, !2058, !2059, !2060, !2061, !2062, !2063, !2064, !2065, !2066, !2067, !2068, !2069, !2070, !2071, !2072, !2073, !2074, !2075, !2076, !2077, !2078, !2079, !2080, !2081, !2082, !2083, !2084, !2085, !2086, !2087, !2088, !2089, !2090}
!1893 = !DIEnumerator(name: "EVENT_NONE", value: 0, isUnsigned: true)
!1894 = !DIEnumerator(name: "LEFTMOUSE", value: 1, isUnsigned: true)
!1895 = !DIEnumerator(name: "MIDDLEMOUSE", value: 2, isUnsigned: true)
!1896 = !DIEnumerator(name: "RIGHTMOUSE", value: 3, isUnsigned: true)
!1897 = !DIEnumerator(name: "MOUSEMOVE", value: 4, isUnsigned: true)
!1898 = !DIEnumerator(name: "ACTIONMOUSE", value: 5, isUnsigned: true)
!1899 = !DIEnumerator(name: "SELECTMOUSE", value: 6, isUnsigned: true)
!1900 = !DIEnumerator(name: "BUTTON4MOUSE", value: 7, isUnsigned: true)
!1901 = !DIEnumerator(name: "BUTTON5MOUSE", value: 8, isUnsigned: true)
!1902 = !DIEnumerator(name: "BUTTON6MOUSE", value: 18, isUnsigned: true)
!1903 = !DIEnumerator(name: "BUTTON7MOUSE", value: 19, isUnsigned: true)
!1904 = !DIEnumerator(name: "MOUSEPAN", value: 14, isUnsigned: true)
!1905 = !DIEnumerator(name: "MOUSEZOOM", value: 15, isUnsigned: true)
!1906 = !DIEnumerator(name: "MOUSEROTATE", value: 16, isUnsigned: true)
!1907 = !DIEnumerator(name: "WHEELUPMOUSE", value: 10, isUnsigned: true)
!1908 = !DIEnumerator(name: "WHEELDOWNMOUSE", value: 11, isUnsigned: true)
!1909 = !DIEnumerator(name: "WHEELINMOUSE", value: 12, isUnsigned: true)
!1910 = !DIEnumerator(name: "WHEELOUTMOUSE", value: 13, isUnsigned: true)
!1911 = !DIEnumerator(name: "INBETWEEN_MOUSEMOVE", value: 17, isUnsigned: true)
!1912 = !DIEnumerator(name: "AKEY", value: 97, isUnsigned: true)
!1913 = !DIEnumerator(name: "BKEY", value: 98, isUnsigned: true)
!1914 = !DIEnumerator(name: "CKEY", value: 99, isUnsigned: true)
!1915 = !DIEnumerator(name: "DKEY", value: 100, isUnsigned: true)
!1916 = !DIEnumerator(name: "EKEY", value: 101, isUnsigned: true)
!1917 = !DIEnumerator(name: "FKEY", value: 102, isUnsigned: true)
!1918 = !DIEnumerator(name: "GKEY", value: 103, isUnsigned: true)
!1919 = !DIEnumerator(name: "HKEY", value: 104, isUnsigned: true)
!1920 = !DIEnumerator(name: "IKEY", value: 105, isUnsigned: true)
!1921 = !DIEnumerator(name: "JKEY", value: 106, isUnsigned: true)
!1922 = !DIEnumerator(name: "KKEY", value: 107, isUnsigned: true)
!1923 = !DIEnumerator(name: "LKEY", value: 108, isUnsigned: true)
!1924 = !DIEnumerator(name: "MKEY", value: 109, isUnsigned: true)
!1925 = !DIEnumerator(name: "NKEY", value: 110, isUnsigned: true)
!1926 = !DIEnumerator(name: "OKEY", value: 111, isUnsigned: true)
!1927 = !DIEnumerator(name: "PKEY", value: 112, isUnsigned: true)
!1928 = !DIEnumerator(name: "QKEY", value: 113, isUnsigned: true)
!1929 = !DIEnumerator(name: "RKEY", value: 114, isUnsigned: true)
!1930 = !DIEnumerator(name: "SKEY", value: 115, isUnsigned: true)
!1931 = !DIEnumerator(name: "TKEY", value: 116, isUnsigned: true)
!1932 = !DIEnumerator(name: "UKEY", value: 117, isUnsigned: true)
!1933 = !DIEnumerator(name: "VKEY", value: 118, isUnsigned: true)
!1934 = !DIEnumerator(name: "WKEY", value: 119, isUnsigned: true)
!1935 = !DIEnumerator(name: "XKEY", value: 120, isUnsigned: true)
!1936 = !DIEnumerator(name: "YKEY", value: 121, isUnsigned: true)
!1937 = !DIEnumerator(name: "ZKEY", value: 122, isUnsigned: true)
!1938 = !DIEnumerator(name: "ZEROKEY", value: 48, isUnsigned: true)
!1939 = !DIEnumerator(name: "ONEKEY", value: 49, isUnsigned: true)
!1940 = !DIEnumerator(name: "TWOKEY", value: 50, isUnsigned: true)
!1941 = !DIEnumerator(name: "THREEKEY", value: 51, isUnsigned: true)
!1942 = !DIEnumerator(name: "FOURKEY", value: 52, isUnsigned: true)
!1943 = !DIEnumerator(name: "FIVEKEY", value: 53, isUnsigned: true)
!1944 = !DIEnumerator(name: "SIXKEY", value: 54, isUnsigned: true)
!1945 = !DIEnumerator(name: "SEVENKEY", value: 55, isUnsigned: true)
!1946 = !DIEnumerator(name: "EIGHTKEY", value: 56, isUnsigned: true)
!1947 = !DIEnumerator(name: "NINEKEY", value: 57, isUnsigned: true)
!1948 = !DIEnumerator(name: "CAPSLOCKKEY", value: 211, isUnsigned: true)
!1949 = !DIEnumerator(name: "LEFTCTRLKEY", value: 212, isUnsigned: true)
!1950 = !DIEnumerator(name: "LEFTALTKEY", value: 213, isUnsigned: true)
!1951 = !DIEnumerator(name: "RIGHTALTKEY", value: 214, isUnsigned: true)
!1952 = !DIEnumerator(name: "RIGHTCTRLKEY", value: 215, isUnsigned: true)
!1953 = !DIEnumerator(name: "RIGHTSHIFTKEY", value: 216, isUnsigned: true)
!1954 = !DIEnumerator(name: "LEFTSHIFTKEY", value: 217, isUnsigned: true)
!1955 = !DIEnumerator(name: "ESCKEY", value: 218, isUnsigned: true)
!1956 = !DIEnumerator(name: "TABKEY", value: 219, isUnsigned: true)
!1957 = !DIEnumerator(name: "RETKEY", value: 220, isUnsigned: true)
!1958 = !DIEnumerator(name: "SPACEKEY", value: 221, isUnsigned: true)
!1959 = !DIEnumerator(name: "LINEFEEDKEY", value: 222, isUnsigned: true)
!1960 = !DIEnumerator(name: "BACKSPACEKEY", value: 223, isUnsigned: true)
!1961 = !DIEnumerator(name: "DELKEY", value: 224, isUnsigned: true)
!1962 = !DIEnumerator(name: "SEMICOLONKEY", value: 225, isUnsigned: true)
!1963 = !DIEnumerator(name: "PERIODKEY", value: 226, isUnsigned: true)
!1964 = !DIEnumerator(name: "COMMAKEY", value: 227, isUnsigned: true)
!1965 = !DIEnumerator(name: "QUOTEKEY", value: 228, isUnsigned: true)
!1966 = !DIEnumerator(name: "ACCENTGRAVEKEY", value: 229, isUnsigned: true)
!1967 = !DIEnumerator(name: "MINUSKEY", value: 230, isUnsigned: true)
!1968 = !DIEnumerator(name: "SLASHKEY", value: 232, isUnsigned: true)
!1969 = !DIEnumerator(name: "BACKSLASHKEY", value: 233, isUnsigned: true)
!1970 = !DIEnumerator(name: "EQUALKEY", value: 234, isUnsigned: true)
!1971 = !DIEnumerator(name: "LEFTBRACKETKEY", value: 235, isUnsigned: true)
!1972 = !DIEnumerator(name: "RIGHTBRACKETKEY", value: 236, isUnsigned: true)
!1973 = !DIEnumerator(name: "LEFTARROWKEY", value: 137, isUnsigned: true)
!1974 = !DIEnumerator(name: "DOWNARROWKEY", value: 138, isUnsigned: true)
!1975 = !DIEnumerator(name: "RIGHTARROWKEY", value: 139, isUnsigned: true)
!1976 = !DIEnumerator(name: "UPARROWKEY", value: 140, isUnsigned: true)
!1977 = !DIEnumerator(name: "PAD0", value: 150, isUnsigned: true)
!1978 = !DIEnumerator(name: "PAD1", value: 151, isUnsigned: true)
!1979 = !DIEnumerator(name: "PAD2", value: 152, isUnsigned: true)
!1980 = !DIEnumerator(name: "PAD3", value: 153, isUnsigned: true)
!1981 = !DIEnumerator(name: "PAD4", value: 154, isUnsigned: true)
!1982 = !DIEnumerator(name: "PAD5", value: 155, isUnsigned: true)
!1983 = !DIEnumerator(name: "PAD6", value: 156, isUnsigned: true)
!1984 = !DIEnumerator(name: "PAD7", value: 157, isUnsigned: true)
!1985 = !DIEnumerator(name: "PAD8", value: 158, isUnsigned: true)
!1986 = !DIEnumerator(name: "PAD9", value: 159, isUnsigned: true)
!1987 = !DIEnumerator(name: "PADPERIOD", value: 199, isUnsigned: true)
!1988 = !DIEnumerator(name: "PADASTERKEY", value: 160, isUnsigned: true)
!1989 = !DIEnumerator(name: "PADSLASHKEY", value: 161, isUnsigned: true)
!1990 = !DIEnumerator(name: "PADMINUS", value: 162, isUnsigned: true)
!1991 = !DIEnumerator(name: "PADENTER", value: 163, isUnsigned: true)
!1992 = !DIEnumerator(name: "PADPLUSKEY", value: 164, isUnsigned: true)
!1993 = !DIEnumerator(name: "PAUSEKEY", value: 165, isUnsigned: true)
!1994 = !DIEnumerator(name: "INSERTKEY", value: 166, isUnsigned: true)
!1995 = !DIEnumerator(name: "HOMEKEY", value: 167, isUnsigned: true)
!1996 = !DIEnumerator(name: "PAGEUPKEY", value: 168, isUnsigned: true)
!1997 = !DIEnumerator(name: "PAGEDOWNKEY", value: 169, isUnsigned: true)
!1998 = !DIEnumerator(name: "ENDKEY", value: 170, isUnsigned: true)
!1999 = !DIEnumerator(name: "UNKNOWNKEY", value: 171, isUnsigned: true)
!2000 = !DIEnumerator(name: "OSKEY", value: 172, isUnsigned: true)
!2001 = !DIEnumerator(name: "GRLESSKEY", value: 173, isUnsigned: true)
!2002 = !DIEnumerator(name: "MEDIAPLAY", value: 174, isUnsigned: true)
!2003 = !DIEnumerator(name: "MEDIASTOP", value: 175, isUnsigned: true)
!2004 = !DIEnumerator(name: "MEDIAFIRST", value: 176, isUnsigned: true)
!2005 = !DIEnumerator(name: "MEDIALAST", value: 177, isUnsigned: true)
!2006 = !DIEnumerator(name: "F1KEY", value: 300, isUnsigned: true)
!2007 = !DIEnumerator(name: "F2KEY", value: 301, isUnsigned: true)
!2008 = !DIEnumerator(name: "F3KEY", value: 302, isUnsigned: true)
!2009 = !DIEnumerator(name: "F4KEY", value: 303, isUnsigned: true)
!2010 = !DIEnumerator(name: "F5KEY", value: 304, isUnsigned: true)
!2011 = !DIEnumerator(name: "F6KEY", value: 305, isUnsigned: true)
!2012 = !DIEnumerator(name: "F7KEY", value: 306, isUnsigned: true)
!2013 = !DIEnumerator(name: "F8KEY", value: 307, isUnsigned: true)
!2014 = !DIEnumerator(name: "F9KEY", value: 308, isUnsigned: true)
!2015 = !DIEnumerator(name: "F10KEY", value: 309, isUnsigned: true)
!2016 = !DIEnumerator(name: "F11KEY", value: 310, isUnsigned: true)
!2017 = !DIEnumerator(name: "F12KEY", value: 311, isUnsigned: true)
!2018 = !DIEnumerator(name: "F13KEY", value: 312, isUnsigned: true)
!2019 = !DIEnumerator(name: "F14KEY", value: 313, isUnsigned: true)
!2020 = !DIEnumerator(name: "F15KEY", value: 314, isUnsigned: true)
!2021 = !DIEnumerator(name: "F16KEY", value: 315, isUnsigned: true)
!2022 = !DIEnumerator(name: "F17KEY", value: 316, isUnsigned: true)
!2023 = !DIEnumerator(name: "F18KEY", value: 317, isUnsigned: true)
!2024 = !DIEnumerator(name: "F19KEY", value: 318, isUnsigned: true)
!2025 = !DIEnumerator(name: "NDOF_MOTION", value: 400, isUnsigned: true)
!2026 = !DIEnumerator(name: "NDOF_BUTTON_NONE", value: 400, isUnsigned: true)
!2027 = !DIEnumerator(name: "NDOF_BUTTON_MENU", value: 401, isUnsigned: true)
!2028 = !DIEnumerator(name: "NDOF_BUTTON_FIT", value: 402, isUnsigned: true)
!2029 = !DIEnumerator(name: "NDOF_BUTTON_TOP", value: 403, isUnsigned: true)
!2030 = !DIEnumerator(name: "NDOF_BUTTON_BOTTOM", value: 404, isUnsigned: true)
!2031 = !DIEnumerator(name: "NDOF_BUTTON_LEFT", value: 405, isUnsigned: true)
!2032 = !DIEnumerator(name: "NDOF_BUTTON_RIGHT", value: 406, isUnsigned: true)
!2033 = !DIEnumerator(name: "NDOF_BUTTON_FRONT", value: 407, isUnsigned: true)
!2034 = !DIEnumerator(name: "NDOF_BUTTON_BACK", value: 408, isUnsigned: true)
!2035 = !DIEnumerator(name: "NDOF_BUTTON_ISO1", value: 409, isUnsigned: true)
!2036 = !DIEnumerator(name: "NDOF_BUTTON_ISO2", value: 410, isUnsigned: true)
!2037 = !DIEnumerator(name: "NDOF_BUTTON_ROLL_CW", value: 411, isUnsigned: true)
!2038 = !DIEnumerator(name: "NDOF_BUTTON_ROLL_CCW", value: 412, isUnsigned: true)
!2039 = !DIEnumerator(name: "NDOF_BUTTON_SPIN_CW", value: 413, isUnsigned: true)
!2040 = !DIEnumerator(name: "NDOF_BUTTON_SPIN_CCW", value: 414, isUnsigned: true)
!2041 = !DIEnumerator(name: "NDOF_BUTTON_TILT_CW", value: 415, isUnsigned: true)
!2042 = !DIEnumerator(name: "NDOF_BUTTON_TILT_CCW", value: 416, isUnsigned: true)
!2043 = !DIEnumerator(name: "NDOF_BUTTON_ROTATE", value: 417, isUnsigned: true)
!2044 = !DIEnumerator(name: "NDOF_BUTTON_PANZOOM", value: 418, isUnsigned: true)
!2045 = !DIEnumerator(name: "NDOF_BUTTON_DOMINANT", value: 419, isUnsigned: true)
!2046 = !DIEnumerator(name: "NDOF_BUTTON_PLUS", value: 420, isUnsigned: true)
!2047 = !DIEnumerator(name: "NDOF_BUTTON_MINUS", value: 421, isUnsigned: true)
!2048 = !DIEnumerator(name: "NDOF_BUTTON_ESC", value: 422, isUnsigned: true)
!2049 = !DIEnumerator(name: "NDOF_BUTTON_ALT", value: 423, isUnsigned: true)
!2050 = !DIEnumerator(name: "NDOF_BUTTON_SHIFT", value: 424, isUnsigned: true)
!2051 = !DIEnumerator(name: "NDOF_BUTTON_CTRL", value: 425, isUnsigned: true)
!2052 = !DIEnumerator(name: "NDOF_BUTTON_1", value: 426, isUnsigned: true)
!2053 = !DIEnumerator(name: "NDOF_BUTTON_2", value: 427, isUnsigned: true)
!2054 = !DIEnumerator(name: "NDOF_BUTTON_3", value: 428, isUnsigned: true)
!2055 = !DIEnumerator(name: "NDOF_BUTTON_4", value: 429, isUnsigned: true)
!2056 = !DIEnumerator(name: "NDOF_BUTTON_5", value: 430, isUnsigned: true)
!2057 = !DIEnumerator(name: "NDOF_BUTTON_6", value: 431, isUnsigned: true)
!2058 = !DIEnumerator(name: "NDOF_BUTTON_7", value: 432, isUnsigned: true)
!2059 = !DIEnumerator(name: "NDOF_BUTTON_8", value: 433, isUnsigned: true)
!2060 = !DIEnumerator(name: "NDOF_BUTTON_9", value: 434, isUnsigned: true)
!2061 = !DIEnumerator(name: "NDOF_BUTTON_10", value: 435, isUnsigned: true)
!2062 = !DIEnumerator(name: "NDOF_BUTTON_A", value: 436, isUnsigned: true)
!2063 = !DIEnumerator(name: "NDOF_BUTTON_B", value: 437, isUnsigned: true)
!2064 = !DIEnumerator(name: "NDOF_BUTTON_C", value: 438, isUnsigned: true)
!2065 = !DIEnumerator(name: "NDOF_LAST", value: 439, isUnsigned: true)
!2066 = !DIEnumerator(name: "INPUTCHANGE", value: 259, isUnsigned: true)
!2067 = !DIEnumerator(name: "WINDEACTIVATE", value: 260, isUnsigned: true)
!2068 = !DIEnumerator(name: "TIMER", value: 272, isUnsigned: true)
!2069 = !DIEnumerator(name: "TIMER0", value: 273, isUnsigned: true)
!2070 = !DIEnumerator(name: "TIMER1", value: 274, isUnsigned: true)
!2071 = !DIEnumerator(name: "TIMER2", value: 275, isUnsigned: true)
!2072 = !DIEnumerator(name: "TIMERJOBS", value: 276, isUnsigned: true)
!2073 = !DIEnumerator(name: "TIMERAUTOSAVE", value: 277, isUnsigned: true)
!2074 = !DIEnumerator(name: "TIMERREPORT", value: 278, isUnsigned: true)
!2075 = !DIEnumerator(name: "TIMERREGION", value: 279, isUnsigned: true)
!2076 = !DIEnumerator(name: "TIMERF", value: 287, isUnsigned: true)
!2077 = !DIEnumerator(name: "EVT_ACTIONZONE_AREA", value: 20480, isUnsigned: true)
!2078 = !DIEnumerator(name: "EVT_ACTIONZONE_REGION", value: 20481, isUnsigned: true)
!2079 = !DIEnumerator(name: "EVT_ACTIONZONE_FULLSCREEN", value: 20482, isUnsigned: true)
!2080 = !DIEnumerator(name: "EVT_TWEAK_L", value: 20483, isUnsigned: true)
!2081 = !DIEnumerator(name: "EVT_TWEAK_M", value: 20484, isUnsigned: true)
!2082 = !DIEnumerator(name: "EVT_TWEAK_R", value: 20485, isUnsigned: true)
!2083 = !DIEnumerator(name: "EVT_TWEAK_A", value: 20486, isUnsigned: true)
!2084 = !DIEnumerator(name: "EVT_TWEAK_S", value: 20487, isUnsigned: true)
!2085 = !DIEnumerator(name: "EVT_GESTURE", value: 20496, isUnsigned: true)
!2086 = !DIEnumerator(name: "EVT_FILESELECT", value: 20512, isUnsigned: true)
!2087 = !DIEnumerator(name: "EVT_BUT_OPEN", value: 20513, isUnsigned: true)
!2088 = !DIEnumerator(name: "EVT_MODAL_MAP", value: 20514, isUnsigned: true)
!2089 = !DIEnumerator(name: "EVT_DROP", value: 20515, isUnsigned: true)
!2090 = !DIEnumerator(name: "EVT_BUT_CANCEL", value: 20516, isUnsigned: true)
!2091 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1820, line: 95, baseType: !22, size: 32, elements: !2092)
!2092 = !{!2093, !2094, !2095}
!2093 = !DIEnumerator(name: "MASK_PROJ_NEG", value: -1)
!2094 = !DIEnumerator(name: "MASK_PROJ_ANY", value: 0)
!2095 = !DIEnumerator(name: "MASK_PROJ_POS", value: 1)
!2096 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eAutokey_Mode", file: !2097, line: 671, baseType: !223, size: 32, elements: !2098)
!2097 = !DIFile(filename: "blender/source/blender/makesdna/DNA_userdef_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2098 = !{!2099, !2100, !2101}
!2099 = !DIEnumerator(name: "AUTOKEY_ON", value: 1, isUnsigned: true)
!2100 = !DIEnumerator(name: "AUTOKEY_MODE_NORMAL", value: 3, isUnsigned: true)
!2101 = !DIEnumerator(name: "AUTOKEY_MODE_EDITKEYS", value: 5, isUnsigned: true)
!2102 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !952, line: 155, baseType: !223, size: 32, elements: !2103)
!2103 = !{!2104, !2105, !2106}
!2104 = !DIEnumerator(name: "MASK_SPLINE_CYCLIC", value: 2, isUnsigned: true)
!2105 = !DIEnumerator(name: "MASK_SPLINE_NOFILL", value: 4, isUnsigned: true)
!2106 = !DIEnumerator(name: "MASK_SPLINE_NOINTERSECT", value: 8, isUnsigned: true)
!2107 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !163, line: 619, baseType: !223, size: 32, elements: !2108)
!2108 = !{!2109, !2110, !2111}
!2109 = !DIEnumerator(name: "OB_RESTRICT_VIEW", value: 1, isUnsigned: true)
!2110 = !DIEnumerator(name: "OB_RESTRICT_SELECT", value: 2, isUnsigned: true)
!2111 = !DIEnumerator(name: "OB_RESTRICT_RENDER", value: 4, isUnsigned: true)
!2112 = !{!56, !2113, !2228}
!2113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2114, size: 64)
!2114 = !DIDerivedType(tag: DW_TAG_typedef, name: "SlidePointData", file: !3, line: 499, baseType: !2115)
!2115 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SlidePointData", file: !3, line: 465, size: 1344, elements: !2116)
!2116 = !{!2117, !2118, !2119, !2122, !2203, !2206, !2207, !2208, !2209, !2211, !2212, !2213, !2214, !2215, !2216, !2217, !2218, !2219, !2220, !2221, !2222, !2223, !2224, !2225, !2226, !2227}
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "event_invoke_type", scope: !2115, file: !3, line: 467, baseType: !48, size: 16)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !2115, file: !3, line: 468, baseType: !22, size: 32, offset: 32)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !2115, file: !3, line: 469, baseType: !2120, size: 64, offset: 64)
!2120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2121, size: 64)
!2121 = !DIDerivedType(tag: DW_TAG_typedef, name: "Mask", file: !952, line: 57, baseType: !951)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "masklay", scope: !2115, file: !3, line: 470, baseType: !2123, size: 64, offset: 128)
!2123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2124, size: 64)
!2124 = !DIDerivedType(tag: DW_TAG_typedef, name: "MaskLayer", file: !952, line: 142, baseType: !2125)
!2125 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MaskLayer", file: !952, line: 122, size: 1152, elements: !2126)
!2126 = !{!2127, !2129, !2130, !2131, !2132, !2133, !2194, !2196, !2197, !2198, !2199, !2200, !2201, !2202}
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2125, file: !952, line: 123, baseType: !2128, size: 64)
!2128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2125, size: 64)
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2125, file: !952, line: 123, baseType: !2128, size: 64, offset: 64)
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2125, file: !952, line: 125, baseType: !33, size: 512, offset: 128)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "splines", scope: !2125, file: !952, line: 127, baseType: !58, size: 128, offset: 640)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "splines_shapes", scope: !2125, file: !952, line: 128, baseType: !58, size: 128, offset: 768)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "act_spline", scope: !2125, file: !952, line: 130, baseType: !2134, size: 64, offset: 896)
!2134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2135, size: 64)
!2135 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MaskSpline", file: !952, line: 88, size: 1792, elements: !2136)
!2136 = !{!2137, !2138, !2139, !2140, !2141, !2142, !2143, !2192, !2193}
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2135, file: !952, line: 89, baseType: !2134, size: 64)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2135, file: !952, line: 89, baseType: !2134, size: 64, offset: 64)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2135, file: !952, line: 91, baseType: !48, size: 16, offset: 128)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "offset_mode", scope: !2135, file: !952, line: 92, baseType: !14, size: 8, offset: 144)
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "weight_interp", scope: !2135, file: !952, line: 93, baseType: !14, size: 8, offset: 152)
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "tot_point", scope: !2135, file: !952, line: 95, baseType: !22, size: 32, offset: 160)
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "points", scope: !2135, file: !952, line: 96, baseType: !2144, size: 64, offset: 192)
!2144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2145, size: 64)
!2145 = !DIDerivedType(tag: DW_TAG_typedef, name: "MaskSplinePoint", file: !952, line: 86, baseType: !2146)
!2146 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MaskSplinePoint", file: !952, line: 80, size: 2176, elements: !2147)
!2147 = !{!2148, !2171, !2172, !2173, !2181}
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "bezt", scope: !2146, file: !952, line: 81, baseType: !2149, size: 576)
!2149 = !DIDerivedType(tag: DW_TAG_typedef, name: "BezTriple", file: !184, line: 133, baseType: !2150)
!2150 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BezTriple", file: !184, line: 117, size: 576, elements: !2151)
!2151 = !{!2152, !2155, !2156, !2157, !2158, !2159, !2160, !2161, !2162, !2163, !2164, !2165, !2166, !2167, !2168, !2169}
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2150, file: !184, line: 118, baseType: !2153, size: 288)
!2153 = !DICompositeType(tag: DW_TAG_array_type, baseType: !191, size: 288, elements: !2154)
!2154 = !{!194, !194}
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "alfa", scope: !2150, file: !184, line: 119, baseType: !191, size: 32, offset: 288)
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !2150, file: !184, line: 119, baseType: !191, size: 32, offset: 320)
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "radius", scope: !2150, file: !184, line: 119, baseType: !191, size: 32, offset: 352)
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !2150, file: !184, line: 121, baseType: !14, size: 8, offset: 384)
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "h1", scope: !2150, file: !184, line: 123, baseType: !14, size: 8, offset: 392)
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "h2", scope: !2150, file: !184, line: 123, baseType: !14, size: 8, offset: 400)
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "f1", scope: !2150, file: !184, line: 124, baseType: !14, size: 8, offset: 408)
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "f2", scope: !2150, file: !184, line: 124, baseType: !14, size: 8, offset: 416)
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "f3", scope: !2150, file: !184, line: 124, baseType: !14, size: 8, offset: 424)
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "hide", scope: !2150, file: !184, line: 126, baseType: !14, size: 8, offset: 432)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "easing", scope: !2150, file: !184, line: 128, baseType: !14, size: 8, offset: 440)
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "back", scope: !2150, file: !184, line: 129, baseType: !191, size: 32, offset: 448)
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "amplitude", scope: !2150, file: !184, line: 130, baseType: !191, size: 32, offset: 480)
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "period", scope: !2150, file: !184, line: 130, baseType: !191, size: 32, offset: 512)
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2150, file: !184, line: 132, baseType: !2170, size: 32, offset: 544)
!2170 = !DICompositeType(tag: DW_TAG_array_type, baseType: !14, size: 32, elements: !301)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2146, file: !952, line: 82, baseType: !22, size: 32, offset: 576)
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "tot_uw", scope: !2146, file: !952, line: 83, baseType: !22, size: 32, offset: 608)
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "uw", scope: !2146, file: !952, line: 84, baseType: !2174, size: 64, offset: 640)
!2174 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2175, size: 64)
!2175 = !DIDerivedType(tag: DW_TAG_typedef, name: "MaskSplinePointUW", file: !952, line: 78, baseType: !2176)
!2176 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MaskSplinePointUW", file: !952, line: 75, size: 96, elements: !2177)
!2177 = !{!2178, !2179, !2180}
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !2176, file: !952, line: 76, baseType: !191, size: 32)
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !2176, file: !952, line: 76, baseType: !191, size: 32, offset: 32)
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2176, file: !952, line: 77, baseType: !22, size: 32, offset: 64)
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !2146, file: !952, line: 85, baseType: !2182, size: 1472, offset: 704)
!2182 = !DIDerivedType(tag: DW_TAG_typedef, name: "MaskParent", file: !952, line: 73, baseType: !2183)
!2183 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MaskParent", file: !952, line: 59, size: 1472, elements: !2184)
!2184 = !{!2185, !2186, !2187, !2188, !2189, !2190, !2191}
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "id_type", scope: !2183, file: !952, line: 61, baseType: !22, size: 32)
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2183, file: !952, line: 62, baseType: !22, size: 32, offset: 32)
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2183, file: !952, line: 63, baseType: !125, size: 64, offset: 64)
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !2183, file: !952, line: 65, baseType: !33, size: 512, offset: 128)
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "sub_parent", scope: !2183, file: !952, line: 67, baseType: !33, size: 512, offset: 640)
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "parent_orig", scope: !2183, file: !952, line: 69, baseType: !420, size: 64, offset: 1152)
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "parent_corners_orig", scope: !2183, file: !952, line: 72, baseType: !788, size: 256, offset: 1216)
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !2135, file: !952, line: 97, baseType: !2182, size: 1472, offset: 256)
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "points_deform", scope: !2135, file: !952, line: 99, baseType: !2144, size: 64, offset: 1728)
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "act_point", scope: !2125, file: !952, line: 131, baseType: !2195, size: 64, offset: 960)
!2195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2146, size: 64)
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "alpha", scope: !2125, file: !952, line: 134, baseType: !191, size: 32, offset: 1024)
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "blend", scope: !2125, file: !952, line: 135, baseType: !14, size: 8, offset: 1056)
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "blend_flag", scope: !2125, file: !952, line: 136, baseType: !14, size: 8, offset: 1064)
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "falloff", scope: !2125, file: !952, line: 137, baseType: !14, size: 8, offset: 1072)
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2125, file: !952, line: 138, baseType: !904, size: 56, offset: 1080)
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2125, file: !952, line: 140, baseType: !14, size: 8, offset: 1136)
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "restrictflag", scope: !2125, file: !952, line: 141, baseType: !14, size: 8, offset: 1144)
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "spline", scope: !2115, file: !3, line: 471, baseType: !2204, size: 64, offset: 192)
!2204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2205, size: 64)
!2205 = !DIDerivedType(tag: DW_TAG_typedef, name: "MaskSpline", file: !952, line: 100, baseType: !2135)
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "orig_spline", scope: !2115, file: !3, line: 471, baseType: !2204, size: 64, offset: 256)
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "point", scope: !2115, file: !3, line: 472, baseType: !2144, size: 64, offset: 320)
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "uw", scope: !2115, file: !3, line: 473, baseType: !2174, size: 64, offset: 384)
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "which_handle", scope: !2115, file: !3, line: 474, baseType: !2210, size: 32, offset: 448)
!2210 = !DIDerivedType(tag: DW_TAG_typedef, name: "eMaskWhichHandle", file: !1820, line: 57, baseType: !1819)
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !2115, file: !3, line: 475, baseType: !22, size: 32, offset: 480)
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !2115, file: !3, line: 475, baseType: !22, size: 32, offset: 512)
!2213 = !DIDerivedType(tag: DW_TAG_member, name: "prev_mouse_coord", scope: !2115, file: !3, line: 477, baseType: !420, size: 64, offset: 544)
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "no", scope: !2115, file: !3, line: 478, baseType: !420, size: 64, offset: 608)
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "is_curvature_only", scope: !2115, file: !3, line: 480, baseType: !1017, size: 8, offset: 672)
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "is_accurate", scope: !2115, file: !3, line: 481, baseType: !1017, size: 8, offset: 680)
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "is_initial_feather", scope: !2115, file: !3, line: 482, baseType: !1017, size: 8, offset: 688)
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "is_overall_feather", scope: !2115, file: !3, line: 483, baseType: !1017, size: 8, offset: 696)
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "is_sliding_new_point", scope: !2115, file: !3, line: 485, baseType: !1017, size: 8, offset: 704)
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2115, file: !3, line: 488, baseType: !2153, size: 288, offset: 736)
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "old_h1", scope: !2115, file: !3, line: 489, baseType: !14, size: 8, offset: 1024)
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "old_h2", scope: !2115, file: !3, line: 489, baseType: !14, size: 8, offset: 1032)
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "orig_handle_coord", scope: !2115, file: !3, line: 494, baseType: !420, size: 64, offset: 1056)
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "prev_handle_coord", scope: !2115, file: !3, line: 494, baseType: !420, size: 64, offset: 1120)
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "prev_feather_coord", scope: !2115, file: !3, line: 497, baseType: !420, size: 64, offset: 1184)
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !2115, file: !3, line: 498, baseType: !191, size: 32, offset: 1248)
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "weight_scalar", scope: !2115, file: !3, line: 498, baseType: !191, size: 32, offset: 1280)
!2228 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2229, size: 64)
!2229 = !DIDerivedType(tag: DW_TAG_typedef, name: "SlideSplineCurvatureData", file: !3, line: 1161, baseType: !2230)
!2230 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SlideSplineCurvatureData", file: !3, line: 1144, size: 2112, elements: !2231)
!2231 = !{!2232, !2233, !2234, !2235, !2236, !2237, !2238, !2239, !2241, !2242, !2243, !2244, !2245, !2246, !2247, !2248, !2249}
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "event_invoke_type", scope: !2230, file: !3, line: 1145, baseType: !48, size: 16)
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !2230, file: !3, line: 1147, baseType: !2120, size: 64, offset: 64)
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "mask_layer", scope: !2230, file: !3, line: 1148, baseType: !2123, size: 64, offset: 128)
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "spline", scope: !2230, file: !3, line: 1149, baseType: !2204, size: 64, offset: 192)
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "point", scope: !2230, file: !3, line: 1150, baseType: !2144, size: 64, offset: 256)
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !2230, file: !3, line: 1151, baseType: !191, size: 32, offset: 320)
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "accurate", scope: !2230, file: !3, line: 1152, baseType: !1017, size: 8, offset: 352)
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "adjust_bezt", scope: !2230, file: !3, line: 1154, baseType: !2240, size: 64, offset: 384)
!2240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2149, size: 64)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "other_bezt", scope: !2230, file: !3, line: 1154, baseType: !2240, size: 64, offset: 448)
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "bezt_backup", scope: !2230, file: !3, line: 1155, baseType: !2149, size: 576, offset: 512)
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "other_bezt_backup", scope: !2230, file: !3, line: 1155, baseType: !2149, size: 576, offset: 1088)
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "prev_mouse_coord", scope: !2230, file: !3, line: 1157, baseType: !420, size: 64, offset: 1664)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "prev_spline_coord", scope: !2230, file: !3, line: 1158, baseType: !420, size: 64, offset: 1728)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "P0", scope: !2230, file: !3, line: 1160, baseType: !420, size: 64, offset: 1792)
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "P1", scope: !2230, file: !3, line: 1160, baseType: !420, size: 64, offset: 1856)
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "P2", scope: !2230, file: !3, line: 1160, baseType: !420, size: 64, offset: 1920)
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "P3", scope: !2230, file: !3, line: 1160, baseType: !227, size: 96, offset: 1984)
!2250 = !{!0, !2251}
!2251 = !DIGlobalVariableExpression(var: !2252, expr: !DIExpression())
!2252 = distinct !DIGlobalVariable(name: "direction_items", scope: !2253, file: !3, line: 2156, type: !2255, isLocal: true, isDefinition: true)
!2253 = distinct !DISubprogram(name: "MASK_OT_layer_move", scope: !3, file: !3, line: 2154, type: !4, scopeLine: 2155, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1817, retainedNodes: !2254)
!2254 = !{}
!2255 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2256, size: 960, elements: !228)
!2256 = !DIDerivedType(tag: DW_TAG_typedef, name: "EnumPropertyItem", file: !25, line: 308, baseType: !2257)
!2257 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "EnumPropertyItem", file: !25, line: 302, size: 320, elements: !2258)
!2258 = !{!2259, !2260, !2261, !2262, !2263}
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !2257, file: !25, line: 303, baseType: !22, size: 32)
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "identifier", scope: !2257, file: !25, line: 304, baseType: !12, size: 64, offset: 64)
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "icon", scope: !2257, file: !25, line: 305, baseType: !22, size: 32, offset: 128)
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2257, file: !25, line: 306, baseType: !12, size: 64, offset: 192)
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !2257, file: !25, line: 307, baseType: !12, size: 64, offset: 256)
!2264 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2256, size: 1920, elements: !1234)
!2265 = !{i32 7, !"Dwarf Version", i32 4}
!2266 = !{i32 2, !"Debug Info Version", i32 3}
!2267 = !{i32 1, !"wchar_size", i32 4}
!2268 = !{!"clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)"}
!2269 = distinct !DISubprogram(name: "ED_mask_point_find_nearest", scope: !3, file: !3, line: 70, type: !2270, scopeLine: 73, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1817, retainedNodes: !2254)
!2270 = !DISubroutineType(types: !2271)
!2271 = !{!2195, !2272, !2120, !2275, !2276, !2277, !2278, !2279, !2280}
!2272 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2273, size: 64)
!2273 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2274)
!2274 = !DIDerivedType(tag: DW_TAG_typedef, name: "bContext", file: !1477, line: 69, baseType: !24)
!2275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2276, size: 64)
!2276 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !191)
!2277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2123, size: 64)
!2278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2204, size: 64)
!2279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2210, size: 64)
!2280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !191, size: 64)
!2281 = !DILocalVariable(name: "C", arg: 1, scope: !2269, file: !3, line: 70, type: !2272)
!2282 = !DILocation(line: 70, column: 61, scope: !2269)
!2283 = !DILocalVariable(name: "mask", arg: 2, scope: !2269, file: !3, line: 70, type: !2120)
!2284 = !DILocation(line: 70, column: 70, scope: !2269)
!2285 = !DILocalVariable(name: "normal_co", arg: 3, scope: !2269, file: !3, line: 70, type: !2275)
!2286 = !DILocation(line: 70, column: 88, scope: !2269)
!2287 = !DILocalVariable(name: "threshold", arg: 4, scope: !2269, file: !3, line: 70, type: !2276)
!2288 = !DILocation(line: 70, column: 114, scope: !2269)
!2289 = !DILocalVariable(name: "masklay_r", arg: 5, scope: !2269, file: !3, line: 71, type: !2277)
!2290 = !DILocation(line: 71, column: 57, scope: !2269)
!2291 = !DILocalVariable(name: "spline_r", arg: 6, scope: !2269, file: !3, line: 71, type: !2278)
!2292 = !DILocation(line: 71, column: 81, scope: !2269)
!2293 = !DILocalVariable(name: "which_handle_r", arg: 7, scope: !2269, file: !3, line: 72, type: !2279)
!2294 = !DILocation(line: 72, column: 63, scope: !2269)
!2295 = !DILocalVariable(name: "score", arg: 8, scope: !2269, file: !3, line: 72, type: !2280)
!2296 = !DILocation(line: 72, column: 86, scope: !2269)
!2297 = !DILocalVariable(name: "sa", scope: !2269, file: !3, line: 74, type: !2298)
!2298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2299, size: 64)
!2299 = !DIDerivedType(tag: DW_TAG_typedef, name: "ScrArea", file: !109, line: 228, baseType: !2300)
!2300 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ScrArea", file: !109, line: 203, size: 1280, elements: !2301)
!2301 = !{!2302, !2304, !2305, !2322, !2323, !2324, !2325, !2328, !2329, !2330, !2331, !2332, !2333, !2334, !2335, !2336, !2337, !2338, !2339, !2342, !2343, !2344, !2345}
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2300, file: !109, line: 204, baseType: !2303, size: 64)
!2303 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2300, size: 64)
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2300, file: !109, line: 204, baseType: !2303, size: 64, offset: 64)
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2300, file: !109, line: 206, baseType: !2306, size: 64, offset: 128)
!2306 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2307, size: 64)
!2307 = !DIDerivedType(tag: DW_TAG_typedef, name: "ScrVert", file: !109, line: 87, baseType: !2308)
!2308 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ScrVert", file: !109, line: 82, size: 256, elements: !2309)
!2309 = !{!2310, !2312, !2313, !2314, !2320, !2321}
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2308, file: !109, line: 83, baseType: !2311, size: 64)
!2311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2308, size: 64)
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2308, file: !109, line: 83, baseType: !2311, size: 64, offset: 64)
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "newv", scope: !2308, file: !109, line: 83, baseType: !2311, size: 64, offset: 128)
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2308, file: !109, line: 84, baseType: !2315, size: 32, offset: 192)
!2315 = !DIDerivedType(tag: DW_TAG_typedef, name: "vec2s", file: !516, line: 43, baseType: !2316)
!2316 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vec2s", file: !516, line: 41, size: 32, elements: !2317)
!2317 = !{!2318, !2319}
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !2316, file: !516, line: 42, baseType: !48, size: 16)
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !2316, file: !516, line: 42, baseType: !48, size: 16, offset: 16)
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2308, file: !109, line: 86, baseType: !48, size: 16, offset: 224)
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "editflag", scope: !2308, file: !109, line: 86, baseType: !48, size: 16, offset: 240)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2300, file: !109, line: 206, baseType: !2306, size: 64, offset: 192)
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2300, file: !109, line: 206, baseType: !2306, size: 64, offset: 256)
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2300, file: !109, line: 206, baseType: !2306, size: 64, offset: 320)
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "full", scope: !2300, file: !109, line: 207, baseType: !2326, size: 64, offset: 384)
!2326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2327, size: 64)
!2327 = !DIDerivedType(tag: DW_TAG_typedef, name: "bScreen", file: !109, line: 80, baseType: !108)
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "totrct", scope: !2300, file: !109, line: 209, baseType: !1415, size: 128, offset: 448)
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "spacetype", scope: !2300, file: !109, line: 211, baseType: !14, size: 8, offset: 576)
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "butspacetype", scope: !2300, file: !109, line: 211, baseType: !14, size: 8, offset: 584)
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "winx", scope: !2300, file: !109, line: 212, baseType: !48, size: 16, offset: 592)
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "winy", scope: !2300, file: !109, line: 212, baseType: !48, size: 16, offset: 608)
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "headertype", scope: !2300, file: !109, line: 214, baseType: !48, size: 16, offset: 624)
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "do_refresh", scope: !2300, file: !109, line: 215, baseType: !48, size: 16, offset: 640)
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2300, file: !109, line: 216, baseType: !48, size: 16, offset: 656)
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "region_active_win", scope: !2300, file: !109, line: 217, baseType: !48, size: 16, offset: 672)
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !2300, file: !109, line: 219, baseType: !14, size: 8, offset: 688)
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2300, file: !109, line: 219, baseType: !14, size: 8, offset: 696)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2300, file: !109, line: 221, baseType: !2340, size: 64, offset: 704)
!2340 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2341, size: 64)
!2341 = !DICompositeType(tag: DW_TAG_structure_type, name: "SpaceType", file: !109, line: 39, flags: DIFlagFwdDecl)
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "spacedata", scope: !2300, file: !109, line: 223, baseType: !58, size: 128, offset: 768)
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "regionbase", scope: !2300, file: !109, line: 224, baseType: !58, size: 128, offset: 896)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "handlers", scope: !2300, file: !109, line: 225, baseType: !58, size: 128, offset: 1024)
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "actionzones", scope: !2300, file: !109, line: 227, baseType: !58, size: 128, offset: 1152)
!2346 = !DILocation(line: 74, column: 11, scope: !2269)
!2347 = !DILocation(line: 74, column: 28, scope: !2269)
!2348 = !DILocation(line: 74, column: 16, scope: !2269)
!2349 = !DILocalVariable(name: "ar", scope: !2269, file: !3, line: 75, type: !2350)
!2350 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2351, size: 64)
!2351 = !DIDerivedType(tag: DW_TAG_typedef, name: "ARegion", file: !109, line: 267, baseType: !2352)
!2352 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ARegion", file: !109, line: 230, size: 3072, elements: !2353)
!2353 = !{!2354, !2356, !2357, !2390, !2391, !2392, !2393, !2394, !2395, !2396, !2397, !2398, !2399, !2400, !2401, !2402, !2403, !2404, !2405, !2406, !2407, !2410, !2411, !2412, !2413, !2414, !2415, !2416, !2417, !2418, !2419}
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2352, file: !109, line: 231, baseType: !2355, size: 64)
!2355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2352, size: 64)
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2352, file: !109, line: 231, baseType: !2355, size: 64, offset: 64)
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "v2d", scope: !2352, file: !109, line: 233, baseType: !2358, size: 1280, offset: 128)
!2358 = !DIDerivedType(tag: DW_TAG_typedef, name: "View2D", file: !2359, line: 71, baseType: !2360)
!2359 = !DIFile(filename: "blender/source/blender/makesdna/DNA_view2d_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2360 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "View2D", file: !2359, line: 40, size: 1280, elements: !2361)
!2361 = !{!2362, !2363, !2364, !2365, !2366, !2367, !2368, !2369, !2370, !2371, !2372, !2373, !2374, !2375, !2376, !2377, !2378, !2379, !2380, !2381, !2382, !2383, !2384, !2385, !2386, !2389}
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "tot", scope: !2360, file: !2359, line: 41, baseType: !515, size: 128)
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !2360, file: !2359, line: 41, baseType: !515, size: 128, offset: 128)
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "vert", scope: !2360, file: !2359, line: 42, baseType: !1415, size: 128, offset: 256)
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "hor", scope: !2360, file: !2359, line: 42, baseType: !1415, size: 128, offset: 384)
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !2360, file: !2359, line: 43, baseType: !1415, size: 128, offset: 512)
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !2360, file: !2359, line: 45, baseType: !420, size: 64, offset: 640)
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !2360, file: !2359, line: 45, baseType: !420, size: 64, offset: 704)
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "minzoom", scope: !2360, file: !2359, line: 46, baseType: !191, size: 32, offset: 768)
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "maxzoom", scope: !2360, file: !2359, line: 46, baseType: !191, size: 32, offset: 800)
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "scroll", scope: !2360, file: !2359, line: 48, baseType: !48, size: 16, offset: 832)
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "scroll_ui", scope: !2360, file: !2359, line: 49, baseType: !48, size: 16, offset: 848)
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "keeptot", scope: !2360, file: !2359, line: 51, baseType: !48, size: 16, offset: 864)
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "keepzoom", scope: !2360, file: !2359, line: 52, baseType: !48, size: 16, offset: 880)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "keepofs", scope: !2360, file: !2359, line: 53, baseType: !48, size: 16, offset: 896)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2360, file: !2359, line: 55, baseType: !48, size: 16, offset: 912)
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !2360, file: !2359, line: 56, baseType: !48, size: 16, offset: 928)
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "winx", scope: !2360, file: !2359, line: 58, baseType: !48, size: 16, offset: 944)
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "winy", scope: !2360, file: !2359, line: 58, baseType: !48, size: 16, offset: 960)
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "oldwinx", scope: !2360, file: !2359, line: 59, baseType: !48, size: 16, offset: 976)
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "oldwiny", scope: !2360, file: !2359, line: 59, baseType: !48, size: 16, offset: 992)
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "around", scope: !2360, file: !2359, line: 61, baseType: !48, size: 16, offset: 1008)
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "tab_offset", scope: !2360, file: !2359, line: 63, baseType: !2280, size: 64, offset: 1024)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "tab_num", scope: !2360, file: !2359, line: 64, baseType: !22, size: 32, offset: 1088)
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "tab_cur", scope: !2360, file: !2359, line: 65, baseType: !22, size: 32, offset: 1120)
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "sms", scope: !2360, file: !2359, line: 68, baseType: !2387, size: 64, offset: 1152)
!2387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2388, size: 64)
!2388 = !DICompositeType(tag: DW_TAG_structure_type, name: "SmoothView2DStore", file: !2359, line: 68, flags: DIFlagFwdDecl)
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "smooth_timer", scope: !2360, file: !2359, line: 69, baseType: !94, size: 64, offset: 1216)
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "winrct", scope: !2352, file: !109, line: 234, baseType: !1415, size: 128, offset: 1408)
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "drawrct", scope: !2352, file: !109, line: 235, baseType: !1415, size: 128, offset: 1536)
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "winx", scope: !2352, file: !109, line: 236, baseType: !48, size: 16, offset: 1664)
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "winy", scope: !2352, file: !109, line: 236, baseType: !48, size: 16, offset: 1680)
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "swinid", scope: !2352, file: !109, line: 238, baseType: !48, size: 16, offset: 1696)
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "regiontype", scope: !2352, file: !109, line: 239, baseType: !48, size: 16, offset: 1712)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "alignment", scope: !2352, file: !109, line: 240, baseType: !48, size: 16, offset: 1728)
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2352, file: !109, line: 241, baseType: !48, size: 16, offset: 1744)
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "fsize", scope: !2352, file: !109, line: 243, baseType: !191, size: 32, offset: 1760)
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "sizex", scope: !2352, file: !109, line: 244, baseType: !48, size: 16, offset: 1792)
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "sizey", scope: !2352, file: !109, line: 244, baseType: !48, size: 16, offset: 1808)
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw", scope: !2352, file: !109, line: 246, baseType: !48, size: 16, offset: 1824)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw_overlay", scope: !2352, file: !109, line: 247, baseType: !48, size: 16, offset: 1840)
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "swap", scope: !2352, file: !109, line: 248, baseType: !48, size: 16, offset: 1856)
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "overlap", scope: !2352, file: !109, line: 249, baseType: !48, size: 16, offset: 1872)
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "flagfullscreen", scope: !2352, file: !109, line: 250, baseType: !48, size: 16, offset: 1888)
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2352, file: !109, line: 251, baseType: !48, size: 16, offset: 1904)
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2352, file: !109, line: 253, baseType: !2408, size: 64, offset: 1920)
!2408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2409, size: 64)
!2409 = !DICompositeType(tag: DW_TAG_structure_type, name: "ARegionType", file: !109, line: 42, flags: DIFlagFwdDecl)
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "uiblocks", scope: !2352, file: !109, line: 255, baseType: !58, size: 128, offset: 1984)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "panels", scope: !2352, file: !109, line: 256, baseType: !58, size: 128, offset: 2112)
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "panels_category_active", scope: !2352, file: !109, line: 257, baseType: !58, size: 128, offset: 2240)
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "ui_lists", scope: !2352, file: !109, line: 258, baseType: !58, size: 128, offset: 2368)
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "ui_previews", scope: !2352, file: !109, line: 259, baseType: !58, size: 128, offset: 2496)
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "handlers", scope: !2352, file: !109, line: 260, baseType: !58, size: 128, offset: 2624)
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "panels_category", scope: !2352, file: !109, line: 261, baseType: !58, size: 128, offset: 2752)
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "regiontimer", scope: !2352, file: !109, line: 263, baseType: !94, size: 64, offset: 2880)
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "headerstr", scope: !2352, file: !109, line: 265, baseType: !288, size: 64, offset: 2944)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "regiondata", scope: !2352, file: !109, line: 266, baseType: !56, size: 64, offset: 3008)
!2420 = !DILocation(line: 75, column: 11, scope: !2269)
!2421 = !DILocation(line: 75, column: 30, scope: !2269)
!2422 = !DILocation(line: 75, column: 16, scope: !2269)
!2423 = !DILocalVariable(name: "masklay", scope: !2269, file: !3, line: 77, type: !2123)
!2424 = !DILocation(line: 77, column: 13, scope: !2269)
!2425 = !DILocalVariable(name: "point_masklay", scope: !2269, file: !3, line: 78, type: !2123)
!2426 = !DILocation(line: 78, column: 13, scope: !2269)
!2427 = !DILocalVariable(name: "point_spline", scope: !2269, file: !3, line: 79, type: !2204)
!2428 = !DILocation(line: 79, column: 14, scope: !2269)
!2429 = !DILocalVariable(name: "point", scope: !2269, file: !3, line: 80, type: !2144)
!2430 = !DILocation(line: 80, column: 19, scope: !2269)
!2431 = !DILocalVariable(name: "co", scope: !2269, file: !3, line: 81, type: !420)
!2432 = !DILocation(line: 81, column: 8, scope: !2269)
!2433 = !DILocalVariable(name: "threshold_sq", scope: !2269, file: !3, line: 82, type: !2276)
!2434 = !DILocation(line: 82, column: 14, scope: !2269)
!2435 = !DILocation(line: 82, column: 29, scope: !2269)
!2436 = !DILocation(line: 82, column: 41, scope: !2269)
!2437 = !DILocation(line: 82, column: 39, scope: !2269)
!2438 = !DILocalVariable(name: "len_sq", scope: !2269, file: !3, line: 83, type: !191)
!2439 = !DILocation(line: 83, column: 8, scope: !2269)
!2440 = !DILocalVariable(name: "scalex", scope: !2269, file: !3, line: 83, type: !191)
!2441 = !DILocation(line: 83, column: 26, scope: !2269)
!2442 = !DILocalVariable(name: "scaley", scope: !2269, file: !3, line: 83, type: !191)
!2443 = !DILocation(line: 83, column: 34, scope: !2269)
!2444 = !DILocalVariable(name: "which_handle", scope: !2269, file: !3, line: 84, type: !2210)
!2445 = !DILocation(line: 84, column: 19, scope: !2269)
!2446 = !DILocalVariable(name: "width", scope: !2269, file: !3, line: 85, type: !22)
!2447 = !DILocation(line: 85, column: 6, scope: !2269)
!2448 = !DILocalVariable(name: "height", scope: !2269, file: !3, line: 85, type: !22)
!2449 = !DILocation(line: 85, column: 13, scope: !2269)
!2450 = !DILocation(line: 87, column: 19, scope: !2269)
!2451 = !DILocation(line: 87, column: 2, scope: !2269)
!2452 = !DILocation(line: 88, column: 28, scope: !2269)
!2453 = !DILocation(line: 88, column: 32, scope: !2269)
!2454 = !DILocation(line: 88, column: 2, scope: !2269)
!2455 = !DILocation(line: 90, column: 10, scope: !2269)
!2456 = !DILocation(line: 90, column: 25, scope: !2269)
!2457 = !DILocation(line: 90, column: 23, scope: !2269)
!2458 = !DILocation(line: 90, column: 2, scope: !2269)
!2459 = !DILocation(line: 90, column: 8, scope: !2269)
!2460 = !DILocation(line: 91, column: 10, scope: !2269)
!2461 = !DILocation(line: 91, column: 25, scope: !2269)
!2462 = !DILocation(line: 91, column: 23, scope: !2269)
!2463 = !DILocation(line: 91, column: 2, scope: !2269)
!2464 = !DILocation(line: 91, column: 8, scope: !2269)
!2465 = !DILocation(line: 93, column: 17, scope: !2466)
!2466 = distinct !DILexicalBlock(scope: !2269, file: !3, line: 93, column: 2)
!2467 = !DILocation(line: 93, column: 23, scope: !2466)
!2468 = !DILocation(line: 93, column: 34, scope: !2466)
!2469 = !DILocation(line: 93, column: 15, scope: !2466)
!2470 = !DILocation(line: 93, column: 7, scope: !2466)
!2471 = !DILocation(line: 93, column: 41, scope: !2472)
!2472 = distinct !DILexicalBlock(scope: !2466, file: !3, line: 93, column: 2)
!2473 = !DILocation(line: 93, column: 2, scope: !2466)
!2474 = !DILocalVariable(name: "spline", scope: !2475, file: !3, line: 94, type: !2204)
!2475 = distinct !DILexicalBlock(scope: !2472, file: !3, line: 93, column: 75)
!2476 = !DILocation(line: 94, column: 15, scope: !2475)
!2477 = !DILocation(line: 96, column: 7, scope: !2478)
!2478 = distinct !DILexicalBlock(scope: !2475, file: !3, line: 96, column: 7)
!2479 = !DILocation(line: 96, column: 16, scope: !2478)
!2480 = !DILocation(line: 96, column: 29, scope: !2478)
!2481 = !DILocation(line: 96, column: 7, scope: !2475)
!2482 = !DILocation(line: 97, column: 4, scope: !2483)
!2483 = distinct !DILexicalBlock(scope: !2478, file: !3, line: 96, column: 76)
!2484 = !DILocation(line: 100, column: 17, scope: !2485)
!2485 = distinct !DILexicalBlock(scope: !2475, file: !3, line: 100, column: 3)
!2486 = !DILocation(line: 100, column: 26, scope: !2485)
!2487 = !DILocation(line: 100, column: 34, scope: !2485)
!2488 = !DILocation(line: 100, column: 15, scope: !2485)
!2489 = !DILocation(line: 100, column: 8, scope: !2485)
!2490 = !DILocation(line: 100, column: 41, scope: !2491)
!2491 = distinct !DILexicalBlock(scope: !2485, file: !3, line: 100, column: 3)
!2492 = !DILocation(line: 100, column: 3, scope: !2485)
!2493 = !DILocalVariable(name: "points_array", scope: !2494, file: !3, line: 101, type: !2144)
!2494 = distinct !DILexicalBlock(scope: !2491, file: !3, line: 100, column: 72)
!2495 = !DILocation(line: 101, column: 21, scope: !2494)
!2496 = !DILocation(line: 101, column: 64, scope: !2494)
!2497 = !DILocation(line: 101, column: 36, scope: !2494)
!2498 = !DILocalVariable(name: "i", scope: !2494, file: !3, line: 103, type: !22)
!2499 = !DILocation(line: 103, column: 8, scope: !2494)
!2500 = !DILocation(line: 105, column: 11, scope: !2501)
!2501 = distinct !DILexicalBlock(scope: !2494, file: !3, line: 105, column: 4)
!2502 = !DILocation(line: 105, column: 9, scope: !2501)
!2503 = !DILocation(line: 105, column: 16, scope: !2504)
!2504 = distinct !DILexicalBlock(scope: !2501, file: !3, line: 105, column: 4)
!2505 = !DILocation(line: 105, column: 20, scope: !2504)
!2506 = !DILocation(line: 105, column: 28, scope: !2504)
!2507 = !DILocation(line: 105, column: 18, scope: !2504)
!2508 = !DILocation(line: 105, column: 4, scope: !2501)
!2509 = !DILocalVariable(name: "cur_point", scope: !2510, file: !3, line: 106, type: !2144)
!2510 = distinct !DILexicalBlock(scope: !2504, file: !3, line: 105, column: 44)
!2511 = !DILocation(line: 106, column: 22, scope: !2510)
!2512 = !DILocation(line: 106, column: 35, scope: !2510)
!2513 = !DILocation(line: 106, column: 43, scope: !2510)
!2514 = !DILocation(line: 106, column: 50, scope: !2510)
!2515 = !DILocalVariable(name: "cur_point_deform", scope: !2510, file: !3, line: 107, type: !2144)
!2516 = !DILocation(line: 107, column: 22, scope: !2510)
!2517 = !DILocation(line: 107, column: 42, scope: !2510)
!2518 = !DILocation(line: 107, column: 55, scope: !2510)
!2519 = !DILocalVariable(name: "cur_which_handle", scope: !2510, file: !3, line: 108, type: !2210)
!2520 = !DILocation(line: 108, column: 22, scope: !2510)
!2521 = !DILocalVariable(name: "bezt", scope: !2510, file: !3, line: 109, type: !2240)
!2522 = !DILocation(line: 109, column: 16, scope: !2510)
!2523 = !DILocation(line: 109, column: 24, scope: !2510)
!2524 = !DILocation(line: 109, column: 42, scope: !2510)
!2525 = !DILocalVariable(name: "cur_len_sq", scope: !2510, file: !3, line: 110, type: !191)
!2526 = !DILocation(line: 110, column: 11, scope: !2510)
!2527 = !DILocalVariable(name: "vec", scope: !2510, file: !3, line: 110, type: !420)
!2528 = !DILocation(line: 110, column: 23, scope: !2510)
!2529 = !DILocation(line: 112, column: 14, scope: !2510)
!2530 = !DILocation(line: 112, column: 20, scope: !2510)
!2531 = !DILocation(line: 112, column: 32, scope: !2510)
!2532 = !DILocation(line: 112, column: 30, scope: !2510)
!2533 = !DILocation(line: 112, column: 5, scope: !2510)
!2534 = !DILocation(line: 112, column: 12, scope: !2510)
!2535 = !DILocation(line: 113, column: 14, scope: !2510)
!2536 = !DILocation(line: 113, column: 20, scope: !2510)
!2537 = !DILocation(line: 113, column: 32, scope: !2510)
!2538 = !DILocation(line: 113, column: 30, scope: !2510)
!2539 = !DILocation(line: 113, column: 5, scope: !2510)
!2540 = !DILocation(line: 113, column: 12, scope: !2510)
!2541 = !DILocation(line: 115, column: 35, scope: !2510)
!2542 = !DILocation(line: 115, column: 39, scope: !2510)
!2543 = !DILocation(line: 115, column: 18, scope: !2510)
!2544 = !DILocation(line: 115, column: 16, scope: !2510)
!2545 = !DILocation(line: 117, column: 9, scope: !2546)
!2546 = distinct !DILexicalBlock(scope: !2510, file: !3, line: 117, column: 9)
!2547 = !DILocation(line: 117, column: 22, scope: !2546)
!2548 = !DILocation(line: 117, column: 20, scope: !2546)
!2549 = !DILocation(line: 117, column: 9, scope: !2510)
!2550 = !DILocation(line: 118, column: 21, scope: !2551)
!2551 = distinct !DILexicalBlock(scope: !2546, file: !3, line: 117, column: 30)
!2552 = !DILocation(line: 118, column: 19, scope: !2551)
!2553 = !DILocation(line: 119, column: 22, scope: !2551)
!2554 = !DILocation(line: 119, column: 20, scope: !2551)
!2555 = !DILocation(line: 120, column: 14, scope: !2551)
!2556 = !DILocation(line: 120, column: 12, scope: !2551)
!2557 = !DILocation(line: 121, column: 15, scope: !2551)
!2558 = !DILocation(line: 121, column: 13, scope: !2551)
!2559 = !DILocation(line: 122, column: 19, scope: !2551)
!2560 = !DILocation(line: 123, column: 5, scope: !2551)
!2561 = !DILocation(line: 125, column: 41, scope: !2562)
!2562 = distinct !DILexicalBlock(scope: !2510, file: !3, line: 125, column: 9)
!2563 = !DILocation(line: 125, column: 9, scope: !2562)
!2564 = !DILocation(line: 125, column: 59, scope: !2562)
!2565 = !DILocation(line: 125, column: 9, scope: !2510)
!2566 = !DILocalVariable(name: "handle", scope: !2567, file: !3, line: 126, type: !420)
!2567 = distinct !DILexicalBlock(scope: !2562, file: !3, line: 125, column: 86)
!2568 = !DILocation(line: 126, column: 12, scope: !2567)
!2569 = !DILocation(line: 127, column: 31, scope: !2567)
!2570 = !DILocation(line: 127, column: 74, scope: !2567)
!2571 = !DILocation(line: 127, column: 82, scope: !2567)
!2572 = !DILocation(line: 127, column: 90, scope: !2567)
!2573 = !DILocation(line: 127, column: 6, scope: !2567)
!2574 = !DILocation(line: 128, column: 36, scope: !2567)
!2575 = !DILocation(line: 128, column: 40, scope: !2567)
!2576 = !DILocation(line: 128, column: 19, scope: !2567)
!2577 = !DILocation(line: 128, column: 17, scope: !2567)
!2578 = !DILocation(line: 129, column: 23, scope: !2567)
!2579 = !DILocation(line: 130, column: 5, scope: !2567)
!2580 = !DILocalVariable(name: "handle_left", scope: !2581, file: !3, line: 132, type: !420)
!2581 = distinct !DILexicalBlock(scope: !2562, file: !3, line: 131, column: 10)
!2582 = !DILocation(line: 132, column: 12, scope: !2581)
!2583 = !DILocalVariable(name: "handle_right", scope: !2581, file: !3, line: 132, type: !420)
!2584 = !DILocation(line: 132, column: 28, scope: !2581)
!2585 = !DILocalVariable(name: "len_left_sq", scope: !2581, file: !3, line: 133, type: !191)
!2586 = !DILocation(line: 133, column: 12, scope: !2581)
!2587 = !DILocalVariable(name: "len_right_sq", scope: !2581, file: !3, line: 133, type: !191)
!2588 = !DILocation(line: 133, column: 25, scope: !2581)
!2589 = !DILocation(line: 134, column: 31, scope: !2581)
!2590 = !DILocation(line: 134, column: 73, scope: !2581)
!2591 = !DILocation(line: 134, column: 81, scope: !2581)
!2592 = !DILocation(line: 134, column: 89, scope: !2581)
!2593 = !DILocation(line: 134, column: 6, scope: !2581)
!2594 = !DILocation(line: 135, column: 31, scope: !2581)
!2595 = !DILocation(line: 135, column: 74, scope: !2581)
!2596 = !DILocation(line: 135, column: 82, scope: !2581)
!2597 = !DILocation(line: 135, column: 90, scope: !2581)
!2598 = !DILocation(line: 135, column: 6, scope: !2581)
!2599 = !DILocation(line: 137, column: 37, scope: !2581)
!2600 = !DILocation(line: 137, column: 41, scope: !2581)
!2601 = !DILocation(line: 137, column: 20, scope: !2581)
!2602 = !DILocation(line: 137, column: 18, scope: !2581)
!2603 = !DILocation(line: 138, column: 38, scope: !2581)
!2604 = !DILocation(line: 138, column: 42, scope: !2581)
!2605 = !DILocation(line: 138, column: 21, scope: !2581)
!2606 = !DILocation(line: 138, column: 19, scope: !2581)
!2607 = !DILocation(line: 139, column: 10, scope: !2608)
!2608 = distinct !DILexicalBlock(scope: !2581, file: !3, line: 139, column: 10)
!2609 = !DILocation(line: 139, column: 12, scope: !2608)
!2610 = !DILocation(line: 139, column: 10, scope: !2581)
!2611 = !DILocation(line: 140, column: 11, scope: !2612)
!2612 = distinct !DILexicalBlock(scope: !2613, file: !3, line: 140, column: 11)
!2613 = distinct !DILexicalBlock(scope: !2608, file: !3, line: 139, column: 18)
!2614 = !DILocation(line: 140, column: 26, scope: !2612)
!2615 = !DILocation(line: 140, column: 23, scope: !2612)
!2616 = !DILocation(line: 140, column: 11, scope: !2613)
!2617 = !DILocation(line: 141, column: 12, scope: !2618)
!2618 = distinct !DILexicalBlock(scope: !2619, file: !3, line: 141, column: 12)
!2619 = distinct !DILexicalBlock(scope: !2612, file: !3, line: 140, column: 40)
!2620 = !DILocation(line: 141, column: 18, scope: !2618)
!2621 = !DILocation(line: 141, column: 21, scope: !2618)
!2622 = !DILocation(line: 141, column: 12, scope: !2619)
!2623 = !DILocation(line: 142, column: 26, scope: !2624)
!2624 = distinct !DILexicalBlock(scope: !2618, file: !3, line: 141, column: 33)
!2625 = !DILocation(line: 143, column: 22, scope: !2624)
!2626 = !DILocation(line: 143, column: 20, scope: !2624)
!2627 = !DILocation(line: 144, column: 8, scope: !2624)
!2628 = !DILocation(line: 145, column: 7, scope: !2619)
!2629 = !DILocation(line: 146, column: 16, scope: !2630)
!2630 = distinct !DILexicalBlock(scope: !2612, file: !3, line: 146, column: 16)
!2631 = !DILocation(line: 146, column: 22, scope: !2630)
!2632 = !DILocation(line: 146, column: 25, scope: !2630)
!2633 = !DILocation(line: 146, column: 16, scope: !2612)
!2634 = !DILocation(line: 147, column: 25, scope: !2635)
!2635 = distinct !DILexicalBlock(scope: !2630, file: !3, line: 146, column: 37)
!2636 = !DILocation(line: 148, column: 21, scope: !2635)
!2637 = !DILocation(line: 148, column: 19, scope: !2635)
!2638 = !DILocation(line: 149, column: 7, scope: !2635)
!2639 = !DILocation(line: 150, column: 6, scope: !2613)
!2640 = !DILocation(line: 152, column: 11, scope: !2641)
!2641 = distinct !DILexicalBlock(scope: !2642, file: !3, line: 152, column: 11)
!2642 = distinct !DILexicalBlock(scope: !2608, file: !3, line: 151, column: 11)
!2643 = !DILocation(line: 152, column: 27, scope: !2641)
!2644 = !DILocation(line: 152, column: 24, scope: !2641)
!2645 = !DILocation(line: 152, column: 11, scope: !2642)
!2646 = !DILocation(line: 153, column: 12, scope: !2647)
!2647 = distinct !DILexicalBlock(scope: !2648, file: !3, line: 153, column: 12)
!2648 = distinct !DILexicalBlock(scope: !2641, file: !3, line: 152, column: 40)
!2649 = !DILocation(line: 153, column: 18, scope: !2647)
!2650 = !DILocation(line: 153, column: 21, scope: !2647)
!2651 = !DILocation(line: 153, column: 12, scope: !2648)
!2652 = !DILocation(line: 154, column: 26, scope: !2653)
!2653 = distinct !DILexicalBlock(scope: !2647, file: !3, line: 153, column: 33)
!2654 = !DILocation(line: 155, column: 22, scope: !2653)
!2655 = !DILocation(line: 155, column: 20, scope: !2653)
!2656 = !DILocation(line: 156, column: 8, scope: !2653)
!2657 = !DILocation(line: 157, column: 7, scope: !2648)
!2658 = !DILocation(line: 158, column: 16, scope: !2659)
!2659 = distinct !DILexicalBlock(scope: !2641, file: !3, line: 158, column: 16)
!2660 = !DILocation(line: 158, column: 22, scope: !2659)
!2661 = !DILocation(line: 158, column: 25, scope: !2659)
!2662 = !DILocation(line: 158, column: 16, scope: !2641)
!2663 = !DILocation(line: 159, column: 25, scope: !2664)
!2664 = distinct !DILexicalBlock(scope: !2659, file: !3, line: 158, column: 37)
!2665 = !DILocation(line: 160, column: 21, scope: !2664)
!2666 = !DILocation(line: 160, column: 19, scope: !2664)
!2667 = !DILocation(line: 161, column: 7, scope: !2664)
!2668 = !DILocation(line: 165, column: 9, scope: !2669)
!2669 = distinct !DILexicalBlock(scope: !2510, file: !3, line: 165, column: 9)
!2670 = !DILocation(line: 165, column: 23, scope: !2669)
!2671 = !DILocation(line: 165, column: 20, scope: !2669)
!2672 = !DILocation(line: 165, column: 30, scope: !2669)
!2673 = !DILocation(line: 165, column: 33, scope: !2669)
!2674 = !DILocation(line: 165, column: 50, scope: !2669)
!2675 = !DILocation(line: 165, column: 9, scope: !2510)
!2676 = !DILocation(line: 166, column: 22, scope: !2677)
!2677 = distinct !DILexicalBlock(scope: !2669, file: !3, line: 165, column: 77)
!2678 = !DILocation(line: 166, column: 20, scope: !2677)
!2679 = !DILocation(line: 167, column: 21, scope: !2677)
!2680 = !DILocation(line: 167, column: 19, scope: !2677)
!2681 = !DILocation(line: 168, column: 14, scope: !2677)
!2682 = !DILocation(line: 168, column: 12, scope: !2677)
!2683 = !DILocation(line: 169, column: 15, scope: !2677)
!2684 = !DILocation(line: 169, column: 13, scope: !2677)
!2685 = !DILocation(line: 170, column: 21, scope: !2677)
!2686 = !DILocation(line: 170, column: 19, scope: !2677)
!2687 = !DILocation(line: 171, column: 5, scope: !2677)
!2688 = !DILocation(line: 172, column: 4, scope: !2510)
!2689 = !DILocation(line: 105, column: 40, scope: !2504)
!2690 = !DILocation(line: 105, column: 4, scope: !2504)
!2691 = distinct !{!2691, !2508, !2692}
!2692 = !DILocation(line: 172, column: 4, scope: !2501)
!2693 = !DILocation(line: 173, column: 3, scope: !2494)
!2694 = !DILocation(line: 100, column: 58, scope: !2491)
!2695 = !DILocation(line: 100, column: 66, scope: !2491)
!2696 = !DILocation(line: 100, column: 56, scope: !2491)
!2697 = !DILocation(line: 100, column: 3, scope: !2491)
!2698 = distinct !{!2698, !2492, !2699}
!2699 = !DILocation(line: 173, column: 3, scope: !2485)
!2700 = !DILocation(line: 174, column: 2, scope: !2475)
!2701 = !DILocation(line: 93, column: 60, scope: !2472)
!2702 = !DILocation(line: 93, column: 69, scope: !2472)
!2703 = !DILocation(line: 93, column: 58, scope: !2472)
!2704 = !DILocation(line: 93, column: 2, scope: !2472)
!2705 = distinct !{!2705, !2473, !2706}
!2706 = !DILocation(line: 174, column: 2, scope: !2466)
!2707 = !DILocation(line: 176, column: 6, scope: !2708)
!2708 = distinct !DILexicalBlock(scope: !2269, file: !3, line: 176, column: 6)
!2709 = !DILocation(line: 176, column: 15, scope: !2708)
!2710 = !DILocation(line: 176, column: 13, scope: !2708)
!2711 = !DILocation(line: 176, column: 6, scope: !2269)
!2712 = !DILocation(line: 177, column: 7, scope: !2713)
!2713 = distinct !DILexicalBlock(scope: !2714, file: !3, line: 177, column: 7)
!2714 = distinct !DILexicalBlock(scope: !2708, file: !3, line: 176, column: 29)
!2715 = !DILocation(line: 177, column: 7, scope: !2714)
!2716 = !DILocation(line: 178, column: 17, scope: !2713)
!2717 = !DILocation(line: 178, column: 5, scope: !2713)
!2718 = !DILocation(line: 178, column: 15, scope: !2713)
!2719 = !DILocation(line: 178, column: 4, scope: !2713)
!2720 = !DILocation(line: 180, column: 7, scope: !2721)
!2721 = distinct !DILexicalBlock(scope: !2714, file: !3, line: 180, column: 7)
!2722 = !DILocation(line: 180, column: 7, scope: !2714)
!2723 = !DILocation(line: 181, column: 16, scope: !2721)
!2724 = !DILocation(line: 181, column: 5, scope: !2721)
!2725 = !DILocation(line: 181, column: 14, scope: !2721)
!2726 = !DILocation(line: 181, column: 4, scope: !2721)
!2727 = !DILocation(line: 183, column: 7, scope: !2728)
!2728 = distinct !DILexicalBlock(scope: !2714, file: !3, line: 183, column: 7)
!2729 = !DILocation(line: 183, column: 7, scope: !2714)
!2730 = !DILocation(line: 184, column: 22, scope: !2728)
!2731 = !DILocation(line: 184, column: 5, scope: !2728)
!2732 = !DILocation(line: 184, column: 20, scope: !2728)
!2733 = !DILocation(line: 184, column: 4, scope: !2728)
!2734 = !DILocation(line: 186, column: 7, scope: !2735)
!2735 = distinct !DILexicalBlock(scope: !2714, file: !3, line: 186, column: 7)
!2736 = !DILocation(line: 186, column: 7, scope: !2714)
!2737 = !DILocation(line: 187, column: 19, scope: !2735)
!2738 = !DILocation(line: 187, column: 13, scope: !2735)
!2739 = !DILocation(line: 187, column: 5, scope: !2735)
!2740 = !DILocation(line: 187, column: 11, scope: !2735)
!2741 = !DILocation(line: 187, column: 4, scope: !2735)
!2742 = !DILocation(line: 189, column: 10, scope: !2714)
!2743 = !DILocation(line: 189, column: 3, scope: !2714)
!2744 = !DILocation(line: 192, column: 6, scope: !2745)
!2745 = distinct !DILexicalBlock(scope: !2269, file: !3, line: 192, column: 6)
!2746 = !DILocation(line: 192, column: 6, scope: !2269)
!2747 = !DILocation(line: 193, column: 4, scope: !2745)
!2748 = !DILocation(line: 193, column: 14, scope: !2745)
!2749 = !DILocation(line: 193, column: 3, scope: !2745)
!2750 = !DILocation(line: 195, column: 6, scope: !2751)
!2751 = distinct !DILexicalBlock(scope: !2269, file: !3, line: 195, column: 6)
!2752 = !DILocation(line: 195, column: 6, scope: !2269)
!2753 = !DILocation(line: 196, column: 4, scope: !2751)
!2754 = !DILocation(line: 196, column: 13, scope: !2751)
!2755 = !DILocation(line: 196, column: 3, scope: !2751)
!2756 = !DILocation(line: 198, column: 6, scope: !2757)
!2757 = distinct !DILexicalBlock(scope: !2269, file: !3, line: 198, column: 6)
!2758 = !DILocation(line: 198, column: 6, scope: !2269)
!2759 = !DILocation(line: 199, column: 4, scope: !2757)
!2760 = !DILocation(line: 199, column: 19, scope: !2757)
!2761 = !DILocation(line: 199, column: 3, scope: !2757)
!2762 = !DILocation(line: 201, column: 2, scope: !2269)
!2763 = !DILocation(line: 202, column: 1, scope: !2269)
!2764 = distinct !DISubprogram(name: "len_squared_v2v2", scope: !2765, file: !2765, line: 719, type: !2766, scopeLine: 720, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1817, retainedNodes: !2254)
!2765 = !DIFile(filename: "blender/source/blender/blenlib/intern/math_vector_inline.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2766 = !DISubroutineType(types: !2767)
!2767 = !{!191, !2275, !2275}
!2768 = !DILocalVariable(name: "a", arg: 1, scope: !2764, file: !2765, line: 719, type: !2275)
!2769 = !DILocation(line: 719, column: 44, scope: !2764)
!2770 = !DILocalVariable(name: "b", arg: 2, scope: !2764, file: !2765, line: 719, type: !2275)
!2771 = !DILocation(line: 719, column: 62, scope: !2764)
!2772 = !DILocalVariable(name: "d", scope: !2764, file: !2765, line: 721, type: !420)
!2773 = !DILocation(line: 721, column: 8, scope: !2764)
!2774 = !DILocation(line: 723, column: 14, scope: !2764)
!2775 = !DILocation(line: 723, column: 17, scope: !2764)
!2776 = !DILocation(line: 723, column: 20, scope: !2764)
!2777 = !DILocation(line: 723, column: 2, scope: !2764)
!2778 = !DILocation(line: 724, column: 18, scope: !2764)
!2779 = !DILocation(line: 724, column: 21, scope: !2764)
!2780 = !DILocation(line: 724, column: 9, scope: !2764)
!2781 = !DILocation(line: 724, column: 2, scope: !2764)
!2782 = distinct !DISubprogram(name: "mask_point_scaled_handle", scope: !3, file: !3, line: 62, type: !2783, scopeLine: 64, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1817, retainedNodes: !2254)
!2783 = !DISubroutineType(types: !2784)
!2784 = !{null, !2144, !2210, !2276, !2276, !2280}
!2785 = !DILocalVariable(name: "point", arg: 1, scope: !2782, file: !3, line: 62, type: !2144)
!2786 = !DILocation(line: 62, column: 65, scope: !2782)
!2787 = !DILocalVariable(name: "which_handle", arg: 2, scope: !2782, file: !3, line: 62, type: !2210)
!2788 = !DILocation(line: 62, column: 99, scope: !2782)
!2789 = !DILocalVariable(name: "scalex", arg: 3, scope: !2782, file: !3, line: 63, type: !2276)
!2790 = !DILocation(line: 63, column: 50, scope: !2782)
!2791 = !DILocalVariable(name: "scaley", arg: 4, scope: !2782, file: !3, line: 63, type: !2276)
!2792 = !DILocation(line: 63, column: 70, scope: !2782)
!2793 = !DILocalVariable(name: "handle", arg: 5, scope: !2782, file: !3, line: 63, type: !2280)
!2794 = !DILocation(line: 63, column: 84, scope: !2782)
!2795 = !DILocation(line: 65, column: 24, scope: !2782)
!2796 = !DILocation(line: 65, column: 31, scope: !2782)
!2797 = !DILocation(line: 65, column: 45, scope: !2782)
!2798 = !DILocation(line: 65, column: 2, scope: !2782)
!2799 = !DILocation(line: 66, column: 15, scope: !2782)
!2800 = !DILocation(line: 66, column: 2, scope: !2782)
!2801 = !DILocation(line: 66, column: 12, scope: !2782)
!2802 = !DILocation(line: 67, column: 15, scope: !2782)
!2803 = !DILocation(line: 67, column: 2, scope: !2782)
!2804 = !DILocation(line: 67, column: 12, scope: !2782)
!2805 = !DILocation(line: 68, column: 1, scope: !2782)
!2806 = distinct !DISubprogram(name: "ED_mask_feather_find_nearest", scope: !3, file: !3, line: 204, type: !2807, scopeLine: 207, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1817, retainedNodes: !2254)
!2807 = !DISubroutineType(types: !2808)
!2808 = !{!1017, !2272, !2120, !2275, !2276, !2277, !2278, !2809, !2810, !2280}
!2809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2144, size: 64)
!2810 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2174, size: 64)
!2811 = !DILocalVariable(name: "C", arg: 1, scope: !2806, file: !3, line: 204, type: !2272)
!2812 = !DILocation(line: 204, column: 51, scope: !2806)
!2813 = !DILocalVariable(name: "mask", arg: 2, scope: !2806, file: !3, line: 204, type: !2120)
!2814 = !DILocation(line: 204, column: 60, scope: !2806)
!2815 = !DILocalVariable(name: "normal_co", arg: 3, scope: !2806, file: !3, line: 204, type: !2275)
!2816 = !DILocation(line: 204, column: 78, scope: !2806)
!2817 = !DILocalVariable(name: "threshold", arg: 4, scope: !2806, file: !3, line: 204, type: !2276)
!2818 = !DILocation(line: 204, column: 104, scope: !2806)
!2819 = !DILocalVariable(name: "masklay_r", arg: 5, scope: !2806, file: !3, line: 205, type: !2277)
!2820 = !DILocation(line: 205, column: 47, scope: !2806)
!2821 = !DILocalVariable(name: "spline_r", arg: 6, scope: !2806, file: !3, line: 205, type: !2278)
!2822 = !DILocation(line: 205, column: 71, scope: !2806)
!2823 = !DILocalVariable(name: "point_r", arg: 7, scope: !2806, file: !3, line: 205, type: !2809)
!2824 = !DILocation(line: 205, column: 99, scope: !2806)
!2825 = !DILocalVariable(name: "uw_r", arg: 8, scope: !2806, file: !3, line: 206, type: !2810)
!2826 = !DILocation(line: 206, column: 55, scope: !2806)
!2827 = !DILocalVariable(name: "score", arg: 9, scope: !2806, file: !3, line: 206, type: !2280)
!2828 = !DILocation(line: 206, column: 68, scope: !2806)
!2829 = !DILocalVariable(name: "sa", scope: !2806, file: !3, line: 208, type: !2298)
!2830 = !DILocation(line: 208, column: 11, scope: !2806)
!2831 = !DILocation(line: 208, column: 28, scope: !2806)
!2832 = !DILocation(line: 208, column: 16, scope: !2806)
!2833 = !DILocalVariable(name: "ar", scope: !2806, file: !3, line: 209, type: !2350)
!2834 = !DILocation(line: 209, column: 11, scope: !2806)
!2835 = !DILocation(line: 209, column: 30, scope: !2806)
!2836 = !DILocation(line: 209, column: 16, scope: !2806)
!2837 = !DILocalVariable(name: "masklay", scope: !2806, file: !3, line: 211, type: !2123)
!2838 = !DILocation(line: 211, column: 13, scope: !2806)
!2839 = !DILocalVariable(name: "point_masklay", scope: !2806, file: !3, line: 211, type: !2123)
!2840 = !DILocation(line: 211, column: 23, scope: !2806)
!2841 = !DILocalVariable(name: "point_spline", scope: !2806, file: !3, line: 212, type: !2204)
!2842 = !DILocation(line: 212, column: 14, scope: !2806)
!2843 = !DILocalVariable(name: "point", scope: !2806, file: !3, line: 213, type: !2144)
!2844 = !DILocation(line: 213, column: 19, scope: !2806)
!2845 = !DILocalVariable(name: "uw", scope: !2806, file: !3, line: 214, type: !2174)
!2846 = !DILocation(line: 214, column: 21, scope: !2806)
!2847 = !DILocalVariable(name: "threshold_sq", scope: !2806, file: !3, line: 215, type: !2276)
!2848 = !DILocation(line: 215, column: 14, scope: !2806)
!2849 = !DILocation(line: 215, column: 29, scope: !2806)
!2850 = !DILocation(line: 215, column: 41, scope: !2806)
!2851 = !DILocation(line: 215, column: 39, scope: !2806)
!2852 = !DILocalVariable(name: "len", scope: !2806, file: !3, line: 216, type: !191)
!2853 = !DILocation(line: 216, column: 8, scope: !2806)
!2854 = !DILocalVariable(name: "co", scope: !2806, file: !3, line: 216, type: !420)
!2855 = !DILocation(line: 216, column: 23, scope: !2806)
!2856 = !DILocalVariable(name: "scalex", scope: !2806, file: !3, line: 217, type: !191)
!2857 = !DILocation(line: 217, column: 8, scope: !2806)
!2858 = !DILocalVariable(name: "scaley", scope: !2806, file: !3, line: 217, type: !191)
!2859 = !DILocation(line: 217, column: 16, scope: !2806)
!2860 = !DILocalVariable(name: "width", scope: !2806, file: !3, line: 218, type: !22)
!2861 = !DILocation(line: 218, column: 6, scope: !2806)
!2862 = !DILocalVariable(name: "height", scope: !2806, file: !3, line: 218, type: !22)
!2863 = !DILocation(line: 218, column: 13, scope: !2806)
!2864 = !DILocation(line: 220, column: 19, scope: !2806)
!2865 = !DILocation(line: 220, column: 2, scope: !2806)
!2866 = !DILocation(line: 221, column: 28, scope: !2806)
!2867 = !DILocation(line: 221, column: 32, scope: !2806)
!2868 = !DILocation(line: 221, column: 2, scope: !2806)
!2869 = !DILocation(line: 223, column: 10, scope: !2806)
!2870 = !DILocation(line: 223, column: 25, scope: !2806)
!2871 = !DILocation(line: 223, column: 23, scope: !2806)
!2872 = !DILocation(line: 223, column: 2, scope: !2806)
!2873 = !DILocation(line: 223, column: 8, scope: !2806)
!2874 = !DILocation(line: 224, column: 10, scope: !2806)
!2875 = !DILocation(line: 224, column: 25, scope: !2806)
!2876 = !DILocation(line: 224, column: 23, scope: !2806)
!2877 = !DILocation(line: 224, column: 2, scope: !2806)
!2878 = !DILocation(line: 224, column: 8, scope: !2806)
!2879 = !DILocation(line: 226, column: 17, scope: !2880)
!2880 = distinct !DILexicalBlock(scope: !2806, file: !3, line: 226, column: 2)
!2881 = !DILocation(line: 226, column: 23, scope: !2880)
!2882 = !DILocation(line: 226, column: 34, scope: !2880)
!2883 = !DILocation(line: 226, column: 15, scope: !2880)
!2884 = !DILocation(line: 226, column: 7, scope: !2880)
!2885 = !DILocation(line: 226, column: 41, scope: !2886)
!2886 = distinct !DILexicalBlock(scope: !2880, file: !3, line: 226, column: 2)
!2887 = !DILocation(line: 226, column: 2, scope: !2880)
!2888 = !DILocalVariable(name: "spline", scope: !2889, file: !3, line: 227, type: !2204)
!2889 = distinct !DILexicalBlock(scope: !2886, file: !3, line: 226, column: 75)
!2890 = !DILocation(line: 227, column: 15, scope: !2889)
!2891 = !DILocation(line: 229, column: 17, scope: !2892)
!2892 = distinct !DILexicalBlock(scope: !2889, file: !3, line: 229, column: 3)
!2893 = !DILocation(line: 229, column: 26, scope: !2892)
!2894 = !DILocation(line: 229, column: 34, scope: !2892)
!2895 = !DILocation(line: 229, column: 15, scope: !2892)
!2896 = !DILocation(line: 229, column: 8, scope: !2892)
!2897 = !DILocation(line: 229, column: 41, scope: !2898)
!2898 = distinct !DILexicalBlock(scope: !2892, file: !3, line: 229, column: 3)
!2899 = !DILocation(line: 229, column: 3, scope: !2892)
!2900 = !DILocalVariable(name: "i", scope: !2901, file: !3, line: 232, type: !22)
!2901 = distinct !DILexicalBlock(scope: !2898, file: !3, line: 229, column: 72)
!2902 = !DILocation(line: 232, column: 8, scope: !2901)
!2903 = !DILocalVariable(name: "tot_feather_point", scope: !2901, file: !3, line: 232, type: !22)
!2904 = !DILocation(line: 232, column: 11, scope: !2901)
!2905 = !DILocalVariable(name: "feather_points", scope: !2901, file: !3, line: 233, type: !2906)
!2906 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !420, size: 64)
!2907 = !DILocation(line: 233, column: 12, scope: !2901)
!2908 = !DILocalVariable(name: "fp", scope: !2901, file: !3, line: 233, type: !2906)
!2909 = !DILocation(line: 233, column: 34, scope: !2901)
!2910 = !DILocation(line: 235, column: 8, scope: !2911)
!2911 = distinct !DILexicalBlock(scope: !2901, file: !3, line: 235, column: 8)
!2912 = !DILocation(line: 235, column: 17, scope: !2911)
!2913 = !DILocation(line: 235, column: 30, scope: !2911)
!2914 = !DILocation(line: 235, column: 8, scope: !2901)
!2915 = !DILocation(line: 236, column: 5, scope: !2916)
!2916 = distinct !DILexicalBlock(scope: !2911, file: !3, line: 235, column: 77)
!2917 = !DILocation(line: 239, column: 57, scope: !2901)
!2918 = !DILocation(line: 239, column: 26, scope: !2901)
!2919 = !DILocation(line: 239, column: 24, scope: !2901)
!2920 = !DILocation(line: 239, column: 19, scope: !2901)
!2921 = !DILocation(line: 241, column: 11, scope: !2922)
!2922 = distinct !DILexicalBlock(scope: !2901, file: !3, line: 241, column: 4)
!2923 = !DILocation(line: 241, column: 9, scope: !2922)
!2924 = !DILocation(line: 241, column: 16, scope: !2925)
!2925 = distinct !DILexicalBlock(scope: !2922, file: !3, line: 241, column: 4)
!2926 = !DILocation(line: 241, column: 20, scope: !2925)
!2927 = !DILocation(line: 241, column: 28, scope: !2925)
!2928 = !DILocation(line: 241, column: 18, scope: !2925)
!2929 = !DILocation(line: 241, column: 4, scope: !2922)
!2930 = !DILocalVariable(name: "j", scope: !2931, file: !3, line: 242, type: !22)
!2931 = distinct !DILexicalBlock(scope: !2925, file: !3, line: 241, column: 44)
!2932 = !DILocation(line: 242, column: 9, scope: !2931)
!2933 = !DILocalVariable(name: "cur_point", scope: !2931, file: !3, line: 243, type: !2144)
!2934 = !DILocation(line: 243, column: 22, scope: !2931)
!2935 = !DILocation(line: 243, column: 35, scope: !2931)
!2936 = !DILocation(line: 243, column: 43, scope: !2931)
!2937 = !DILocation(line: 243, column: 50, scope: !2931)
!2938 = !DILocation(line: 245, column: 12, scope: !2939)
!2939 = distinct !DILexicalBlock(scope: !2931, file: !3, line: 245, column: 5)
!2940 = !DILocation(line: 245, column: 10, scope: !2939)
!2941 = !DILocation(line: 245, column: 17, scope: !2942)
!2942 = distinct !DILexicalBlock(scope: !2939, file: !3, line: 245, column: 5)
!2943 = !DILocation(line: 245, column: 22, scope: !2942)
!2944 = !DILocation(line: 245, column: 33, scope: !2942)
!2945 = !DILocation(line: 245, column: 19, scope: !2942)
!2946 = !DILocation(line: 245, column: 5, scope: !2939)
!2947 = !DILocalVariable(name: "cur_len_sq", scope: !2948, file: !3, line: 246, type: !191)
!2948 = distinct !DILexicalBlock(scope: !2942, file: !3, line: 245, column: 46)
!2949 = !DILocation(line: 246, column: 12, scope: !2948)
!2950 = !DILocalVariable(name: "vec", scope: !2948, file: !3, line: 246, type: !420)
!2951 = !DILocation(line: 246, column: 24, scope: !2948)
!2952 = !DILocation(line: 248, column: 17, scope: !2948)
!2953 = !DILocation(line: 248, column: 15, scope: !2948)
!2954 = !DILocation(line: 248, column: 26, scope: !2948)
!2955 = !DILocation(line: 248, column: 24, scope: !2948)
!2956 = !DILocation(line: 248, column: 6, scope: !2948)
!2957 = !DILocation(line: 248, column: 13, scope: !2948)
!2958 = !DILocation(line: 249, column: 17, scope: !2948)
!2959 = !DILocation(line: 249, column: 15, scope: !2948)
!2960 = !DILocation(line: 249, column: 26, scope: !2948)
!2961 = !DILocation(line: 249, column: 24, scope: !2948)
!2962 = !DILocation(line: 249, column: 6, scope: !2948)
!2963 = !DILocation(line: 249, column: 13, scope: !2948)
!2964 = !DILocation(line: 251, column: 36, scope: !2948)
!2965 = !DILocation(line: 251, column: 41, scope: !2948)
!2966 = !DILocation(line: 251, column: 19, scope: !2948)
!2967 = !DILocation(line: 251, column: 17, scope: !2948)
!2968 = !DILocation(line: 253, column: 10, scope: !2969)
!2969 = distinct !DILexicalBlock(scope: !2948, file: !3, line: 253, column: 10)
!2970 = !DILocation(line: 253, column: 16, scope: !2969)
!2971 = !DILocation(line: 253, column: 24, scope: !2969)
!2972 = !DILocation(line: 253, column: 27, scope: !2969)
!2973 = !DILocation(line: 253, column: 40, scope: !2969)
!2974 = !DILocation(line: 253, column: 38, scope: !2969)
!2975 = !DILocation(line: 253, column: 10, scope: !2948)
!2976 = !DILocation(line: 254, column: 11, scope: !2977)
!2977 = distinct !DILexicalBlock(scope: !2978, file: !3, line: 254, column: 11)
!2978 = distinct !DILexicalBlock(scope: !2969, file: !3, line: 253, column: 45)
!2979 = !DILocation(line: 254, column: 13, scope: !2977)
!2980 = !DILocation(line: 254, column: 11, scope: !2978)
!2981 = !DILocation(line: 255, column: 11, scope: !2977)
!2982 = !DILocation(line: 255, column: 8, scope: !2977)
!2983 = !DILocation(line: 257, column: 14, scope: !2977)
!2984 = !DILocation(line: 257, column: 25, scope: !2977)
!2985 = !DILocation(line: 257, column: 28, scope: !2977)
!2986 = !DILocation(line: 257, column: 30, scope: !2977)
!2987 = !DILocation(line: 257, column: 11, scope: !2977)
!2988 = !DILocation(line: 259, column: 23, scope: !2978)
!2989 = !DILocation(line: 259, column: 21, scope: !2978)
!2990 = !DILocation(line: 260, column: 22, scope: !2978)
!2991 = !DILocation(line: 260, column: 20, scope: !2978)
!2992 = !DILocation(line: 261, column: 15, scope: !2978)
!2993 = !DILocation(line: 261, column: 13, scope: !2978)
!2994 = !DILocation(line: 262, column: 13, scope: !2978)
!2995 = !DILocation(line: 262, column: 11, scope: !2978)
!2996 = !DILocation(line: 263, column: 6, scope: !2978)
!2997 = !DILocation(line: 265, column: 8, scope: !2948)
!2998 = !DILocation(line: 266, column: 5, scope: !2948)
!2999 = !DILocation(line: 245, column: 42, scope: !2942)
!3000 = !DILocation(line: 245, column: 5, scope: !2942)
!3001 = distinct !{!3001, !2946, !3002}
!3002 = !DILocation(line: 266, column: 5, scope: !2939)
!3003 = !DILocation(line: 267, column: 4, scope: !2931)
!3004 = !DILocation(line: 241, column: 40, scope: !2925)
!3005 = !DILocation(line: 241, column: 4, scope: !2925)
!3006 = distinct !{!3006, !2929, !3007}
!3007 = !DILocation(line: 267, column: 4, scope: !2922)
!3008 = !DILocation(line: 269, column: 4, scope: !2901)
!3009 = !DILocation(line: 269, column: 14, scope: !2901)
!3010 = !DILocation(line: 270, column: 3, scope: !2901)
!3011 = !DILocation(line: 229, column: 58, scope: !2898)
!3012 = !DILocation(line: 229, column: 66, scope: !2898)
!3013 = !DILocation(line: 229, column: 56, scope: !2898)
!3014 = !DILocation(line: 229, column: 3, scope: !2898)
!3015 = distinct !{!3015, !2899, !3016}
!3016 = !DILocation(line: 270, column: 3, scope: !2892)
!3017 = !DILocation(line: 271, column: 2, scope: !2889)
!3018 = !DILocation(line: 226, column: 60, scope: !2886)
!3019 = !DILocation(line: 226, column: 69, scope: !2886)
!3020 = !DILocation(line: 226, column: 58, scope: !2886)
!3021 = !DILocation(line: 226, column: 2, scope: !2886)
!3022 = distinct !{!3022, !2887, !3023}
!3023 = !DILocation(line: 271, column: 2, scope: !2880)
!3024 = !DILocation(line: 273, column: 6, scope: !3025)
!3025 = distinct !DILexicalBlock(scope: !2806, file: !3, line: 273, column: 6)
!3026 = !DILocation(line: 273, column: 12, scope: !3025)
!3027 = !DILocation(line: 273, column: 10, scope: !3025)
!3028 = !DILocation(line: 273, column: 6, scope: !2806)
!3029 = !DILocation(line: 274, column: 7, scope: !3030)
!3030 = distinct !DILexicalBlock(scope: !3031, file: !3, line: 274, column: 7)
!3031 = distinct !DILexicalBlock(scope: !3025, file: !3, line: 273, column: 26)
!3032 = !DILocation(line: 274, column: 7, scope: !3031)
!3033 = !DILocation(line: 275, column: 17, scope: !3030)
!3034 = !DILocation(line: 275, column: 5, scope: !3030)
!3035 = !DILocation(line: 275, column: 15, scope: !3030)
!3036 = !DILocation(line: 275, column: 4, scope: !3030)
!3037 = !DILocation(line: 277, column: 7, scope: !3038)
!3038 = distinct !DILexicalBlock(scope: !3031, file: !3, line: 277, column: 7)
!3039 = !DILocation(line: 277, column: 7, scope: !3031)
!3040 = !DILocation(line: 278, column: 16, scope: !3038)
!3041 = !DILocation(line: 278, column: 5, scope: !3038)
!3042 = !DILocation(line: 278, column: 14, scope: !3038)
!3043 = !DILocation(line: 278, column: 4, scope: !3038)
!3044 = !DILocation(line: 280, column: 7, scope: !3045)
!3045 = distinct !DILexicalBlock(scope: !3031, file: !3, line: 280, column: 7)
!3046 = !DILocation(line: 280, column: 7, scope: !3031)
!3047 = !DILocation(line: 281, column: 15, scope: !3045)
!3048 = !DILocation(line: 281, column: 5, scope: !3045)
!3049 = !DILocation(line: 281, column: 13, scope: !3045)
!3050 = !DILocation(line: 281, column: 4, scope: !3045)
!3051 = !DILocation(line: 283, column: 7, scope: !3052)
!3052 = distinct !DILexicalBlock(scope: !3031, file: !3, line: 283, column: 7)
!3053 = !DILocation(line: 283, column: 7, scope: !3031)
!3054 = !DILocation(line: 284, column: 12, scope: !3052)
!3055 = !DILocation(line: 284, column: 5, scope: !3052)
!3056 = !DILocation(line: 284, column: 10, scope: !3052)
!3057 = !DILocation(line: 284, column: 4, scope: !3052)
!3058 = !DILocation(line: 286, column: 7, scope: !3059)
!3059 = distinct !DILexicalBlock(scope: !3031, file: !3, line: 286, column: 7)
!3060 = !DILocation(line: 286, column: 7, scope: !3031)
!3061 = !DILocation(line: 287, column: 19, scope: !3059)
!3062 = !DILocation(line: 287, column: 13, scope: !3059)
!3063 = !DILocation(line: 287, column: 5, scope: !3059)
!3064 = !DILocation(line: 287, column: 11, scope: !3059)
!3065 = !DILocation(line: 287, column: 4, scope: !3059)
!3066 = !DILocation(line: 289, column: 3, scope: !3031)
!3067 = !DILocation(line: 292, column: 6, scope: !3068)
!3068 = distinct !DILexicalBlock(scope: !2806, file: !3, line: 292, column: 6)
!3069 = !DILocation(line: 292, column: 6, scope: !2806)
!3070 = !DILocation(line: 293, column: 4, scope: !3068)
!3071 = !DILocation(line: 293, column: 14, scope: !3068)
!3072 = !DILocation(line: 293, column: 3, scope: !3068)
!3073 = !DILocation(line: 295, column: 6, scope: !3074)
!3074 = distinct !DILexicalBlock(scope: !2806, file: !3, line: 295, column: 6)
!3075 = !DILocation(line: 295, column: 6, scope: !2806)
!3076 = !DILocation(line: 296, column: 4, scope: !3074)
!3077 = !DILocation(line: 296, column: 13, scope: !3074)
!3078 = !DILocation(line: 296, column: 3, scope: !3074)
!3079 = !DILocation(line: 298, column: 6, scope: !3080)
!3080 = distinct !DILexicalBlock(scope: !2806, file: !3, line: 298, column: 6)
!3081 = !DILocation(line: 298, column: 6, scope: !2806)
!3082 = !DILocation(line: 299, column: 4, scope: !3080)
!3083 = !DILocation(line: 299, column: 12, scope: !3080)
!3084 = !DILocation(line: 299, column: 3, scope: !3080)
!3085 = !DILocation(line: 301, column: 2, scope: !2806)
!3086 = !DILocation(line: 302, column: 1, scope: !2806)
!3087 = distinct !DISubprogram(name: "ED_mask_new", scope: !3, file: !3, line: 307, type: !3088, scopeLine: 308, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1817, retainedNodes: !2254)
!3088 = !DISubroutineType(types: !3089)
!3089 = !{!950, !3090, !12}
!3090 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2274, size: 64)
!3091 = !DILocalVariable(name: "C", arg: 1, scope: !3087, file: !3, line: 307, type: !3090)
!3092 = !DILocation(line: 307, column: 29, scope: !3087)
!3093 = !DILocalVariable(name: "name", arg: 2, scope: !3087, file: !3, line: 307, type: !12)
!3094 = !DILocation(line: 307, column: 44, scope: !3087)
!3095 = !DILocalVariable(name: "sa", scope: !3087, file: !3, line: 309, type: !2298)
!3096 = !DILocation(line: 309, column: 11, scope: !3087)
!3097 = !DILocation(line: 309, column: 28, scope: !3087)
!3098 = !DILocation(line: 309, column: 16, scope: !3087)
!3099 = !DILocalVariable(name: "bmain", scope: !3087, file: !3, line: 310, type: !3100)
!3100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3101, size: 64)
!3101 = !DIDerivedType(tag: DW_TAG_typedef, name: "Main", file: !3102, line: 104, baseType: !3103)
!3102 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_main.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3103 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Main", file: !3102, line: 53, size: 15232, elements: !3104)
!3104 = !{!3105, !3107, !3108, !3109, !3110, !3111, !3112, !3113, !3114, !3118, !3119, !3120, !3121, !3122, !3123, !3124, !3125, !3126, !3127, !3128, !3129, !3130, !3131, !3132, !3133, !3134, !3135, !3136, !3137, !3138, !3139, !3140, !3141, !3142, !3143, !3144, !3145, !3146, !3147, !3148, !3149, !3150, !3151, !3152, !3153, !3154, !3155, !3161}
!3105 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3103, file: !3102, line: 54, baseType: !3106, size: 64)
!3106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3103, size: 64)
!3107 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3103, file: !3102, line: 54, baseType: !3106, size: 64, offset: 64)
!3108 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3103, file: !3102, line: 55, baseType: !130, size: 8192, offset: 128)
!3109 = !DIDerivedType(tag: DW_TAG_member, name: "versionfile", scope: !3103, file: !3102, line: 56, baseType: !48, size: 16, offset: 8320)
!3110 = !DIDerivedType(tag: DW_TAG_member, name: "subversionfile", scope: !3103, file: !3102, line: 56, baseType: !48, size: 16, offset: 8336)
!3111 = !DIDerivedType(tag: DW_TAG_member, name: "minversionfile", scope: !3103, file: !3102, line: 57, baseType: !48, size: 16, offset: 8352)
!3112 = !DIDerivedType(tag: DW_TAG_member, name: "minsubversionfile", scope: !3103, file: !3102, line: 57, baseType: !48, size: 16, offset: 8368)
!3113 = !DIDerivedType(tag: DW_TAG_member, name: "build_commit_timestamp", scope: !3103, file: !3102, line: 58, baseType: !401, size: 64, offset: 8384)
!3114 = !DIDerivedType(tag: DW_TAG_member, name: "build_hash", scope: !3103, file: !3102, line: 59, baseType: !3115, size: 128, offset: 8448)
!3115 = !DICompositeType(tag: DW_TAG_array_type, baseType: !14, size: 128, elements: !3116)
!3116 = !{!3117}
!3117 = !DISubrange(count: 16)
!3118 = !DIDerivedType(tag: DW_TAG_member, name: "recovered", scope: !3103, file: !3102, line: 60, baseType: !48, size: 16, offset: 8576)
!3119 = !DIDerivedType(tag: DW_TAG_member, name: "curlib", scope: !3103, file: !3102, line: 62, baseType: !120, size: 64, offset: 8640)
!3120 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !3103, file: !3102, line: 63, baseType: !58, size: 128, offset: 8704)
!3121 = !DIDerivedType(tag: DW_TAG_member, name: "library", scope: !3103, file: !3102, line: 64, baseType: !58, size: 128, offset: 8832)
!3122 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !3103, file: !3102, line: 65, baseType: !58, size: 128, offset: 8960)
!3123 = !DIDerivedType(tag: DW_TAG_member, name: "mesh", scope: !3103, file: !3102, line: 66, baseType: !58, size: 128, offset: 9088)
!3124 = !DIDerivedType(tag: DW_TAG_member, name: "curve", scope: !3103, file: !3102, line: 67, baseType: !58, size: 128, offset: 9216)
!3125 = !DIDerivedType(tag: DW_TAG_member, name: "mball", scope: !3103, file: !3102, line: 68, baseType: !58, size: 128, offset: 9344)
!3126 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !3103, file: !3102, line: 69, baseType: !58, size: 128, offset: 9472)
!3127 = !DIDerivedType(tag: DW_TAG_member, name: "tex", scope: !3103, file: !3102, line: 70, baseType: !58, size: 128, offset: 9600)
!3128 = !DIDerivedType(tag: DW_TAG_member, name: "image", scope: !3103, file: !3102, line: 71, baseType: !58, size: 128, offset: 9728)
!3129 = !DIDerivedType(tag: DW_TAG_member, name: "latt", scope: !3103, file: !3102, line: 72, baseType: !58, size: 128, offset: 9856)
!3130 = !DIDerivedType(tag: DW_TAG_member, name: "lamp", scope: !3103, file: !3102, line: 73, baseType: !58, size: 128, offset: 9984)
!3131 = !DIDerivedType(tag: DW_TAG_member, name: "camera", scope: !3103, file: !3102, line: 74, baseType: !58, size: 128, offset: 10112)
!3132 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !3103, file: !3102, line: 75, baseType: !58, size: 128, offset: 10240)
!3133 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !3103, file: !3102, line: 76, baseType: !58, size: 128, offset: 10368)
!3134 = !DIDerivedType(tag: DW_TAG_member, name: "world", scope: !3103, file: !3102, line: 77, baseType: !58, size: 128, offset: 10496)
!3135 = !DIDerivedType(tag: DW_TAG_member, name: "screen", scope: !3103, file: !3102, line: 78, baseType: !58, size: 128, offset: 10624)
!3136 = !DIDerivedType(tag: DW_TAG_member, name: "script", scope: !3103, file: !3102, line: 79, baseType: !58, size: 128, offset: 10752)
!3137 = !DIDerivedType(tag: DW_TAG_member, name: "vfont", scope: !3103, file: !3102, line: 80, baseType: !58, size: 128, offset: 10880)
!3138 = !DIDerivedType(tag: DW_TAG_member, name: "text", scope: !3103, file: !3102, line: 81, baseType: !58, size: 128, offset: 11008)
!3139 = !DIDerivedType(tag: DW_TAG_member, name: "speaker", scope: !3103, file: !3102, line: 82, baseType: !58, size: 128, offset: 11136)
!3140 = !DIDerivedType(tag: DW_TAG_member, name: "sound", scope: !3103, file: !3102, line: 83, baseType: !58, size: 128, offset: 11264)
!3141 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !3103, file: !3102, line: 84, baseType: !58, size: 128, offset: 11392)
!3142 = !DIDerivedType(tag: DW_TAG_member, name: "armature", scope: !3103, file: !3102, line: 85, baseType: !58, size: 128, offset: 11520)
!3143 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !3103, file: !3102, line: 86, baseType: !58, size: 128, offset: 11648)
!3144 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !3103, file: !3102, line: 87, baseType: !58, size: 128, offset: 11776)
!3145 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !3103, file: !3102, line: 88, baseType: !58, size: 128, offset: 11904)
!3146 = !DIDerivedType(tag: DW_TAG_member, name: "particle", scope: !3103, file: !3102, line: 89, baseType: !58, size: 128, offset: 12032)
!3147 = !DIDerivedType(tag: DW_TAG_member, name: "palettes", scope: !3103, file: !3102, line: 90, baseType: !58, size: 128, offset: 12160)
!3148 = !DIDerivedType(tag: DW_TAG_member, name: "paintcurves", scope: !3103, file: !3102, line: 91, baseType: !58, size: 128, offset: 12288)
!3149 = !DIDerivedType(tag: DW_TAG_member, name: "wm", scope: !3103, file: !3102, line: 92, baseType: !58, size: 128, offset: 12416)
!3150 = !DIDerivedType(tag: DW_TAG_member, name: "gpencil", scope: !3103, file: !3102, line: 93, baseType: !58, size: 128, offset: 12544)
!3151 = !DIDerivedType(tag: DW_TAG_member, name: "movieclip", scope: !3103, file: !3102, line: 94, baseType: !58, size: 128, offset: 12672)
!3152 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !3103, file: !3102, line: 95, baseType: !58, size: 128, offset: 12800)
!3153 = !DIDerivedType(tag: DW_TAG_member, name: "linestyle", scope: !3103, file: !3102, line: 96, baseType: !58, size: 128, offset: 12928)
!3154 = !DIDerivedType(tag: DW_TAG_member, name: "id_tag_update", scope: !3103, file: !3102, line: 98, baseType: !613, size: 2048, offset: 13056)
!3155 = !DIDerivedType(tag: DW_TAG_member, name: "eval_ctx", scope: !3103, file: !3102, line: 101, baseType: !3156, size: 64, offset: 15104)
!3156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3157, size: 64)
!3157 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "EvaluationContext", file: !3158, line: 58, size: 32, elements: !3159)
!3158 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_depsgraph.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3159 = !{!3160}
!3160 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3157, file: !3158, line: 59, baseType: !22, size: 32)
!3161 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3103, file: !3102, line: 103, baseType: !3162, size: 64, offset: 15168)
!3162 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3163, size: 64)
!3163 = !DICompositeType(tag: DW_TAG_structure_type, name: "MainLock", file: !3102, line: 51, flags: DIFlagFwdDecl)
!3164 = !DILocation(line: 310, column: 8, scope: !3087)
!3165 = !DILocation(line: 310, column: 30, scope: !3087)
!3166 = !DILocation(line: 310, column: 16, scope: !3087)
!3167 = !DILocalVariable(name: "mask", scope: !3087, file: !3, line: 311, type: !2120)
!3168 = !DILocation(line: 311, column: 8, scope: !3087)
!3169 = !DILocation(line: 313, column: 22, scope: !3087)
!3170 = !DILocation(line: 313, column: 29, scope: !3087)
!3171 = !DILocation(line: 313, column: 9, scope: !3087)
!3172 = !DILocation(line: 313, column: 7, scope: !3087)
!3173 = !DILocation(line: 315, column: 6, scope: !3174)
!3174 = distinct !DILexicalBlock(scope: !3087, file: !3, line: 315, column: 6)
!3175 = !DILocation(line: 315, column: 9, scope: !3174)
!3176 = !DILocation(line: 315, column: 12, scope: !3174)
!3177 = !DILocation(line: 315, column: 16, scope: !3174)
!3178 = !DILocation(line: 315, column: 26, scope: !3174)
!3179 = !DILocation(line: 315, column: 6, scope: !3087)
!3180 = !DILocation(line: 316, column: 11, scope: !3181)
!3181 = distinct !DILexicalBlock(scope: !3174, file: !3, line: 315, column: 33)
!3182 = !DILocation(line: 316, column: 15, scope: !3181)
!3183 = !DILocation(line: 316, column: 3, scope: !3181)
!3184 = !DILocalVariable(name: "sc", scope: !3185, file: !3, line: 319, type: !3187)
!3185 = distinct !DILexicalBlock(scope: !3186, file: !3, line: 318, column: 4)
!3186 = distinct !DILexicalBlock(scope: !3181, file: !3, line: 316, column: 26)
!3187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3188, size: 64)
!3188 = !DIDerivedType(tag: DW_TAG_typedef, name: "SpaceClip", file: !3189, line: 1110, baseType: !3190)
!3189 = !DIFile(filename: "blender/source/blender/makesdna/DNA_space_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3190 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SpaceClip", file: !3189, line: 1074, size: 3264, elements: !3191)
!3191 = !{!3192, !3205, !3206, !3207, !3208, !3209, !3210, !3211, !3212, !3213, !3219, !3220, !3241, !3242, !3243, !3244, !3245, !3246, !3247, !3248, !3249, !3250, !3251, !3252, !3253, !3254, !3255, !3256, !3257}
!3192 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3190, file: !3189, line: 1075, baseType: !3193, size: 64)
!3193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3194, size: 64)
!3194 = !DIDerivedType(tag: DW_TAG_typedef, name: "SpaceLink", file: !3189, line: 91, baseType: !3195)
!3195 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SpaceLink", file: !3189, line: 85, size: 448, elements: !3196)
!3196 = !{!3197, !3199, !3200, !3201, !3202, !3203}
!3197 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3195, file: !3189, line: 86, baseType: !3198, size: 64)
!3198 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3195, size: 64)
!3199 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3195, file: !3189, line: 86, baseType: !3198, size: 64, offset: 64)
!3200 = !DIDerivedType(tag: DW_TAG_member, name: "regionbase", scope: !3195, file: !3189, line: 87, baseType: !58, size: 128, offset: 128)
!3201 = !DIDerivedType(tag: DW_TAG_member, name: "spacetype", scope: !3195, file: !3189, line: 88, baseType: !22, size: 32, offset: 256)
!3202 = !DIDerivedType(tag: DW_TAG_member, name: "blockscale", scope: !3195, file: !3189, line: 89, baseType: !191, size: 32, offset: 288)
!3203 = !DIDerivedType(tag: DW_TAG_member, name: "blockhandler", scope: !3195, file: !3189, line: 90, baseType: !3204, size: 128, offset: 320)
!3204 = !DICompositeType(tag: DW_TAG_array_type, baseType: !48, size: 128, elements: !857)
!3205 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3190, file: !3189, line: 1075, baseType: !3193, size: 64, offset: 64)
!3206 = !DIDerivedType(tag: DW_TAG_member, name: "regionbase", scope: !3190, file: !3189, line: 1076, baseType: !58, size: 128, offset: 128)
!3207 = !DIDerivedType(tag: DW_TAG_member, name: "spacetype", scope: !3190, file: !3189, line: 1077, baseType: !22, size: 32, offset: 256)
!3208 = !DIDerivedType(tag: DW_TAG_member, name: "xof", scope: !3190, file: !3189, line: 1079, baseType: !191, size: 32, offset: 288)
!3209 = !DIDerivedType(tag: DW_TAG_member, name: "yof", scope: !3190, file: !3189, line: 1079, baseType: !191, size: 32, offset: 320)
!3210 = !DIDerivedType(tag: DW_TAG_member, name: "xlockof", scope: !3190, file: !3189, line: 1080, baseType: !191, size: 32, offset: 352)
!3211 = !DIDerivedType(tag: DW_TAG_member, name: "ylockof", scope: !3190, file: !3189, line: 1080, baseType: !191, size: 32, offset: 384)
!3212 = !DIDerivedType(tag: DW_TAG_member, name: "zoom", scope: !3190, file: !3189, line: 1081, baseType: !191, size: 32, offset: 416)
!3213 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !3190, file: !3189, line: 1083, baseType: !3214, size: 64, offset: 448)
!3214 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieClipUser", file: !674, line: 50, size: 64, elements: !3215)
!3215 = !{!3216, !3217, !3218}
!3216 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !3214, file: !674, line: 51, baseType: !22, size: 32)
!3217 = !DIDerivedType(tag: DW_TAG_member, name: "render_size", scope: !3214, file: !674, line: 52, baseType: !48, size: 16, offset: 32)
!3218 = !DIDerivedType(tag: DW_TAG_member, name: "render_flag", scope: !3214, file: !674, line: 52, baseType: !48, size: 16, offset: 48)
!3219 = !DIDerivedType(tag: DW_TAG_member, name: "clip", scope: !3190, file: !3189, line: 1084, baseType: !672, size: 64, offset: 512)
!3220 = !DIDerivedType(tag: DW_TAG_member, name: "scopes", scope: !3190, file: !3189, line: 1085, baseType: !3221, size: 1088, offset: 576)
!3221 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieClipScopes", file: !674, line: 103, size: 1088, elements: !3222)
!3222 = !{!3223, !3224, !3225, !3226, !3227, !3228, !3229, !3232, !3233, !3234, !3235, !3236, !3237, !3238, !3240}
!3223 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !3221, file: !674, line: 104, baseType: !48, size: 16)
!3224 = !DIDerivedType(tag: DW_TAG_member, name: "use_track_mask", scope: !3221, file: !674, line: 105, baseType: !48, size: 16, offset: 16)
!3225 = !DIDerivedType(tag: DW_TAG_member, name: "track_preview_height", scope: !3221, file: !674, line: 106, baseType: !22, size: 32, offset: 32)
!3226 = !DIDerivedType(tag: DW_TAG_member, name: "frame_width", scope: !3221, file: !674, line: 107, baseType: !22, size: 32, offset: 64)
!3227 = !DIDerivedType(tag: DW_TAG_member, name: "frame_height", scope: !3221, file: !674, line: 107, baseType: !22, size: 32, offset: 96)
!3228 = !DIDerivedType(tag: DW_TAG_member, name: "undist_marker", scope: !3221, file: !674, line: 108, baseType: !784, size: 512, offset: 128)
!3229 = !DIDerivedType(tag: DW_TAG_member, name: "track_search", scope: !3221, file: !674, line: 109, baseType: !3230, size: 64, offset: 640)
!3230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3231, size: 64)
!3231 = !DICompositeType(tag: DW_TAG_structure_type, name: "ImBuf", file: !1477, line: 56, flags: DIFlagFwdDecl)
!3232 = !DIDerivedType(tag: DW_TAG_member, name: "track_preview", scope: !3221, file: !674, line: 110, baseType: !3230, size: 64, offset: 704)
!3233 = !DIDerivedType(tag: DW_TAG_member, name: "track_pos", scope: !3221, file: !674, line: 111, baseType: !420, size: 64, offset: 768)
!3234 = !DIDerivedType(tag: DW_TAG_member, name: "track_disabled", scope: !3221, file: !674, line: 112, baseType: !48, size: 16, offset: 832)
!3235 = !DIDerivedType(tag: DW_TAG_member, name: "track_locked", scope: !3221, file: !674, line: 113, baseType: !48, size: 16, offset: 848)
!3236 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !3221, file: !674, line: 114, baseType: !22, size: 32, offset: 864)
!3237 = !DIDerivedType(tag: DW_TAG_member, name: "track", scope: !3221, file: !674, line: 115, baseType: !771, size: 64, offset: 896)
!3238 = !DIDerivedType(tag: DW_TAG_member, name: "marker", scope: !3221, file: !674, line: 116, baseType: !3239, size: 64, offset: 960)
!3239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !784, size: 64)
!3240 = !DIDerivedType(tag: DW_TAG_member, name: "slide_scale", scope: !3221, file: !674, line: 117, baseType: !420, size: 64, offset: 1024)
!3241 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3190, file: !3189, line: 1087, baseType: !22, size: 32, offset: 1664)
!3242 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3190, file: !3189, line: 1088, baseType: !48, size: 16, offset: 1696)
!3243 = !DIDerivedType(tag: DW_TAG_member, name: "view", scope: !3190, file: !3189, line: 1089, baseType: !48, size: 16, offset: 1712)
!3244 = !DIDerivedType(tag: DW_TAG_member, name: "path_length", scope: !3190, file: !3189, line: 1091, baseType: !22, size: 32, offset: 1728)
!3245 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !3190, file: !3189, line: 1094, baseType: !420, size: 64, offset: 1760)
!3246 = !DIDerivedType(tag: DW_TAG_member, name: "scale", scope: !3190, file: !3189, line: 1094, baseType: !191, size: 32, offset: 1824)
!3247 = !DIDerivedType(tag: DW_TAG_member, name: "angle", scope: !3190, file: !3189, line: 1094, baseType: !191, size: 32, offset: 1856)
!3248 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3190, file: !3189, line: 1095, baseType: !22, size: 32, offset: 1888)
!3249 = !DIDerivedType(tag: DW_TAG_member, name: "stabmat", scope: !3190, file: !3189, line: 1096, baseType: !309, size: 512, offset: 1920)
!3250 = !DIDerivedType(tag: DW_TAG_member, name: "unistabmat", scope: !3190, file: !3189, line: 1096, baseType: !309, size: 512, offset: 2432)
!3251 = !DIDerivedType(tag: DW_TAG_member, name: "postproc_flag", scope: !3190, file: !3189, line: 1100, baseType: !22, size: 32, offset: 2944)
!3252 = !DIDerivedType(tag: DW_TAG_member, name: "gpencil_src", scope: !3190, file: !3189, line: 1103, baseType: !48, size: 16, offset: 2976)
!3253 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !3190, file: !3189, line: 1103, baseType: !48, size: 16, offset: 2992)
!3254 = !DIDerivedType(tag: DW_TAG_member, name: "around", scope: !3190, file: !3189, line: 1105, baseType: !22, size: 32, offset: 3008)
!3255 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !3190, file: !3189, line: 1105, baseType: !22, size: 32, offset: 3040)
!3256 = !DIDerivedType(tag: DW_TAG_member, name: "cursor", scope: !3190, file: !3189, line: 1107, baseType: !420, size: 64, offset: 3072)
!3257 = !DIDerivedType(tag: DW_TAG_member, name: "mask_info", scope: !3190, file: !3189, line: 1109, baseType: !3258, size: 128, offset: 3136)
!3258 = !DIDerivedType(tag: DW_TAG_typedef, name: "MaskSpaceInfo", file: !3189, line: 554, baseType: !3259)
!3259 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MaskSpaceInfo", file: !3189, line: 545, size: 128, elements: !3260)
!3260 = !{!3261, !3262, !3263, !3264, !3265}
!3261 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !3259, file: !3189, line: 548, baseType: !950, size: 64)
!3262 = !DIDerivedType(tag: DW_TAG_member, name: "draw_flag", scope: !3259, file: !3189, line: 550, baseType: !14, size: 8, offset: 64)
!3263 = !DIDerivedType(tag: DW_TAG_member, name: "draw_type", scope: !3259, file: !3189, line: 551, baseType: !14, size: 8, offset: 72)
!3264 = !DIDerivedType(tag: DW_TAG_member, name: "overlay_mode", scope: !3259, file: !3189, line: 552, baseType: !14, size: 8, offset: 80)
!3265 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !3259, file: !3189, line: 553, baseType: !1064, size: 40, offset: 88)
!3266 = !DILocation(line: 319, column: 16, scope: !3185)
!3267 = !DILocation(line: 319, column: 21, scope: !3185)
!3268 = !DILocation(line: 319, column: 25, scope: !3185)
!3269 = !DILocation(line: 319, column: 35, scope: !3185)
!3270 = !DILocation(line: 320, column: 28, scope: !3185)
!3271 = !DILocation(line: 320, column: 31, scope: !3185)
!3272 = !DILocation(line: 320, column: 35, scope: !3185)
!3273 = !DILocation(line: 320, column: 5, scope: !3185)
!3274 = !DILocation(line: 321, column: 5, scope: !3185)
!3275 = !DILocation(line: 326, column: 5, scope: !3276)
!3276 = distinct !DILexicalBlock(scope: !3186, file: !3, line: 324, column: 4)
!3277 = !DILocalVariable(name: "sima", scope: !3278, file: !3, line: 330, type: !3279)
!3278 = distinct !DILexicalBlock(scope: !3186, file: !3, line: 329, column: 4)
!3279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3280, size: 64)
!3280 = !DIDerivedType(tag: DW_TAG_typedef, name: "SpaceImage", file: !3189, line: 743, baseType: !3281)
!3281 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SpaceImage", file: !3189, line: 710, size: 84672, elements: !3282)
!3282 = !{!3283, !3284, !3285, !3286, !3287, !3288, !3289, !3290, !3291, !3332, !3333, !3334, !3335, !3336, !3337, !3338, !3339, !3340, !3341, !3342, !3343, !3344, !3345, !3346, !3347, !3348, !3349}
!3283 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3281, file: !3189, line: 711, baseType: !3193, size: 64)
!3284 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3281, file: !3189, line: 711, baseType: !3193, size: 64, offset: 64)
!3285 = !DIDerivedType(tag: DW_TAG_member, name: "regionbase", scope: !3281, file: !3189, line: 712, baseType: !58, size: 128, offset: 128)
!3286 = !DIDerivedType(tag: DW_TAG_member, name: "spacetype", scope: !3281, file: !3189, line: 713, baseType: !22, size: 32, offset: 256)
!3287 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3281, file: !3189, line: 715, baseType: !22, size: 32, offset: 288)
!3288 = !DIDerivedType(tag: DW_TAG_member, name: "image", scope: !3281, file: !3189, line: 717, baseType: !840, size: 64, offset: 320)
!3289 = !DIDerivedType(tag: DW_TAG_member, name: "iuser", scope: !3281, file: !3189, line: 718, baseType: !427, size: 320, offset: 384)
!3290 = !DIDerivedType(tag: DW_TAG_member, name: "cumap", scope: !3281, file: !3189, line: 720, baseType: !1247, size: 64, offset: 704)
!3291 = !DIDerivedType(tag: DW_TAG_member, name: "scopes", scope: !3281, file: !3189, line: 722, baseType: !3292, size: 42112, offset: 768)
!3292 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Scopes", file: !664, line: 138, size: 42112, elements: !3293)
!3293 = !{!3294, !3295, !3296, !3297, !3298, !3299, !3300, !3301, !3302, !3303, !3304, !3307, !3326, !3327, !3328, !3329, !3330, !3331}
!3294 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !3292, file: !664, line: 139, baseType: !22, size: 32)
!3295 = !DIDerivedType(tag: DW_TAG_member, name: "sample_full", scope: !3292, file: !664, line: 140, baseType: !22, size: 32, offset: 32)
!3296 = !DIDerivedType(tag: DW_TAG_member, name: "sample_lines", scope: !3292, file: !664, line: 141, baseType: !22, size: 32, offset: 64)
!3297 = !DIDerivedType(tag: DW_TAG_member, name: "accuracy", scope: !3292, file: !664, line: 142, baseType: !191, size: 32, offset: 96)
!3298 = !DIDerivedType(tag: DW_TAG_member, name: "wavefrm_mode", scope: !3292, file: !664, line: 143, baseType: !22, size: 32, offset: 128)
!3299 = !DIDerivedType(tag: DW_TAG_member, name: "wavefrm_alpha", scope: !3292, file: !664, line: 144, baseType: !191, size: 32, offset: 160)
!3300 = !DIDerivedType(tag: DW_TAG_member, name: "wavefrm_yfac", scope: !3292, file: !664, line: 145, baseType: !191, size: 32, offset: 192)
!3301 = !DIDerivedType(tag: DW_TAG_member, name: "wavefrm_height", scope: !3292, file: !664, line: 146, baseType: !22, size: 32, offset: 224)
!3302 = !DIDerivedType(tag: DW_TAG_member, name: "vecscope_alpha", scope: !3292, file: !664, line: 147, baseType: !191, size: 32, offset: 256)
!3303 = !DIDerivedType(tag: DW_TAG_member, name: "vecscope_height", scope: !3292, file: !664, line: 148, baseType: !22, size: 32, offset: 288)
!3304 = !DIDerivedType(tag: DW_TAG_member, name: "minmax", scope: !3292, file: !664, line: 149, baseType: !3305, size: 192, offset: 320)
!3305 = !DICompositeType(tag: DW_TAG_array_type, baseType: !191, size: 192, elements: !3306)
!3306 = !{!194, !422}
!3307 = !DIDerivedType(tag: DW_TAG_member, name: "hist", scope: !3292, file: !664, line: 150, baseType: !3308, size: 41280, offset: 512)
!3308 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Histogram", file: !664, line: 118, size: 41280, elements: !3309)
!3309 = !{!3310, !3311, !3312, !3314, !3315, !3316, !3317, !3318, !3319, !3320, !3321, !3322, !3323}
!3310 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !3308, file: !664, line: 119, baseType: !22, size: 32)
!3311 = !DIDerivedType(tag: DW_TAG_member, name: "x_resolution", scope: !3308, file: !664, line: 120, baseType: !22, size: 32, offset: 32)
!3312 = !DIDerivedType(tag: DW_TAG_member, name: "data_luma", scope: !3308, file: !664, line: 121, baseType: !3313, size: 8192, offset: 64)
!3313 = !DICompositeType(tag: DW_TAG_array_type, baseType: !191, size: 8192, elements: !614)
!3314 = !DIDerivedType(tag: DW_TAG_member, name: "data_r", scope: !3308, file: !664, line: 122, baseType: !3313, size: 8192, offset: 8256)
!3315 = !DIDerivedType(tag: DW_TAG_member, name: "data_g", scope: !3308, file: !664, line: 123, baseType: !3313, size: 8192, offset: 16448)
!3316 = !DIDerivedType(tag: DW_TAG_member, name: "data_b", scope: !3308, file: !664, line: 124, baseType: !3313, size: 8192, offset: 24640)
!3317 = !DIDerivedType(tag: DW_TAG_member, name: "data_a", scope: !3308, file: !664, line: 125, baseType: !3313, size: 8192, offset: 32832)
!3318 = !DIDerivedType(tag: DW_TAG_member, name: "xmax", scope: !3308, file: !664, line: 126, baseType: !191, size: 32, offset: 41024)
!3319 = !DIDerivedType(tag: DW_TAG_member, name: "ymax", scope: !3308, file: !664, line: 126, baseType: !191, size: 32, offset: 41056)
!3320 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3308, file: !664, line: 127, baseType: !48, size: 16, offset: 41088)
!3321 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3308, file: !664, line: 128, baseType: !48, size: 16, offset: 41104)
!3322 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !3308, file: !664, line: 129, baseType: !22, size: 32, offset: 41120)
!3323 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !3308, file: !664, line: 133, baseType: !3324, size: 128, offset: 41152)
!3324 = !DICompositeType(tag: DW_TAG_array_type, baseType: !191, size: 128, elements: !3325)
!3325 = !{!422, !422}
!3326 = !DIDerivedType(tag: DW_TAG_member, name: "waveform_1", scope: !3292, file: !664, line: 151, baseType: !2280, size: 64, offset: 41792)
!3327 = !DIDerivedType(tag: DW_TAG_member, name: "waveform_2", scope: !3292, file: !664, line: 152, baseType: !2280, size: 64, offset: 41856)
!3328 = !DIDerivedType(tag: DW_TAG_member, name: "waveform_3", scope: !3292, file: !664, line: 153, baseType: !2280, size: 64, offset: 41920)
!3329 = !DIDerivedType(tag: DW_TAG_member, name: "vecscope", scope: !3292, file: !664, line: 154, baseType: !2280, size: 64, offset: 41984)
!3330 = !DIDerivedType(tag: DW_TAG_member, name: "waveform_tot", scope: !3292, file: !664, line: 155, baseType: !22, size: 32, offset: 42048)
!3331 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3292, file: !664, line: 156, baseType: !22, size: 32, offset: 42080)
!3332 = !DIDerivedType(tag: DW_TAG_member, name: "sample_line_hist", scope: !3281, file: !3189, line: 723, baseType: !3308, size: 41280, offset: 42880)
!3333 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !3281, file: !3189, line: 725, baseType: !258, size: 64, offset: 84160)
!3334 = !DIDerivedType(tag: DW_TAG_member, name: "cursor", scope: !3281, file: !3189, line: 727, baseType: !420, size: 64, offset: 84224)
!3335 = !DIDerivedType(tag: DW_TAG_member, name: "xof", scope: !3281, file: !3189, line: 728, baseType: !191, size: 32, offset: 84288)
!3336 = !DIDerivedType(tag: DW_TAG_member, name: "yof", scope: !3281, file: !3189, line: 728, baseType: !191, size: 32, offset: 84320)
!3337 = !DIDerivedType(tag: DW_TAG_member, name: "zoom", scope: !3281, file: !3189, line: 729, baseType: !191, size: 32, offset: 84352)
!3338 = !DIDerivedType(tag: DW_TAG_member, name: "centx", scope: !3281, file: !3189, line: 730, baseType: !191, size: 32, offset: 84384)
!3339 = !DIDerivedType(tag: DW_TAG_member, name: "centy", scope: !3281, file: !3189, line: 730, baseType: !191, size: 32, offset: 84416)
!3340 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3281, file: !3189, line: 732, baseType: !14, size: 8, offset: 84448)
!3341 = !DIDerivedType(tag: DW_TAG_member, name: "pin", scope: !3281, file: !3189, line: 733, baseType: !14, size: 8, offset: 84456)
!3342 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3281, file: !3189, line: 734, baseType: !48, size: 16, offset: 84464)
!3343 = !DIDerivedType(tag: DW_TAG_member, name: "curtile", scope: !3281, file: !3189, line: 735, baseType: !48, size: 16, offset: 84480)
!3344 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3281, file: !3189, line: 736, baseType: !48, size: 16, offset: 84496)
!3345 = !DIDerivedType(tag: DW_TAG_member, name: "dt_uv", scope: !3281, file: !3189, line: 737, baseType: !14, size: 8, offset: 84512)
!3346 = !DIDerivedType(tag: DW_TAG_member, name: "sticky", scope: !3281, file: !3189, line: 738, baseType: !14, size: 8, offset: 84520)
!3347 = !DIDerivedType(tag: DW_TAG_member, name: "dt_uvstretch", scope: !3281, file: !3189, line: 739, baseType: !14, size: 8, offset: 84528)
!3348 = !DIDerivedType(tag: DW_TAG_member, name: "around", scope: !3281, file: !3189, line: 740, baseType: !14, size: 8, offset: 84536)
!3349 = !DIDerivedType(tag: DW_TAG_member, name: "mask_info", scope: !3281, file: !3189, line: 742, baseType: !3258, size: 128, offset: 84544)
!3350 = !DILocation(line: 330, column: 17, scope: !3278)
!3351 = !DILocation(line: 330, column: 24, scope: !3278)
!3352 = !DILocation(line: 330, column: 28, scope: !3278)
!3353 = !DILocation(line: 330, column: 38, scope: !3278)
!3354 = !DILocation(line: 331, column: 29, scope: !3278)
!3355 = !DILocation(line: 331, column: 32, scope: !3278)
!3356 = !DILocation(line: 331, column: 38, scope: !3278)
!3357 = !DILocation(line: 331, column: 5, scope: !3278)
!3358 = !DILocation(line: 332, column: 5, scope: !3278)
!3359 = !DILocation(line: 335, column: 2, scope: !3181)
!3360 = !DILocation(line: 337, column: 9, scope: !3087)
!3361 = !DILocation(line: 337, column: 2, scope: !3087)
!3362 = distinct !DISubprogram(name: "ED_mask_layer_ensure", scope: !3, file: !3, line: 341, type: !3363, scopeLine: 342, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1817, retainedNodes: !2254)
!3363 = !DISubroutineType(types: !3364)
!3364 = !{!2128, !3090}
!3365 = !DILocalVariable(name: "C", arg: 1, scope: !3362, file: !3, line: 341, type: !3090)
!3366 = !DILocation(line: 341, column: 43, scope: !3362)
!3367 = !DILocalVariable(name: "mask", scope: !3362, file: !3, line: 343, type: !2120)
!3368 = !DILocation(line: 343, column: 8, scope: !3362)
!3369 = !DILocation(line: 343, column: 34, scope: !3362)
!3370 = !DILocation(line: 343, column: 15, scope: !3362)
!3371 = !DILocalVariable(name: "mask_layer", scope: !3362, file: !3, line: 344, type: !2123)
!3372 = !DILocation(line: 344, column: 13, scope: !3362)
!3373 = !DILocation(line: 346, column: 6, scope: !3374)
!3374 = distinct !DILexicalBlock(scope: !3362, file: !3, line: 346, column: 6)
!3375 = !DILocation(line: 346, column: 11, scope: !3374)
!3376 = !DILocation(line: 346, column: 6, scope: !3362)
!3377 = !DILocation(line: 348, column: 22, scope: !3378)
!3378 = distinct !DILexicalBlock(scope: !3374, file: !3, line: 346, column: 20)
!3379 = !DILocation(line: 348, column: 10, scope: !3378)
!3380 = !DILocation(line: 348, column: 8, scope: !3378)
!3381 = !DILocation(line: 349, column: 2, scope: !3378)
!3382 = !DILocation(line: 351, column: 37, scope: !3362)
!3383 = !DILocation(line: 351, column: 15, scope: !3362)
!3384 = !DILocation(line: 351, column: 13, scope: !3362)
!3385 = !DILocation(line: 352, column: 6, scope: !3386)
!3386 = distinct !DILexicalBlock(scope: !3362, file: !3, line: 352, column: 6)
!3387 = !DILocation(line: 352, column: 17, scope: !3386)
!3388 = !DILocation(line: 352, column: 6, scope: !3362)
!3389 = !DILocation(line: 354, column: 35, scope: !3390)
!3390 = distinct !DILexicalBlock(scope: !3386, file: !3, line: 352, column: 26)
!3391 = !DILocation(line: 354, column: 16, scope: !3390)
!3392 = !DILocation(line: 354, column: 14, scope: !3390)
!3393 = !DILocation(line: 355, column: 2, scope: !3390)
!3394 = !DILocation(line: 357, column: 9, scope: !3362)
!3395 = !DILocation(line: 357, column: 2, scope: !3362)
!3396 = distinct !DISubprogram(name: "MASK_OT_new", scope: !3, file: !3, line: 371, type: !4, scopeLine: 372, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1817, retainedNodes: !2254)
!3397 = !DILocalVariable(name: "ot", arg: 1, scope: !3396, file: !3, line: 371, type: !6)
!3398 = !DILocation(line: 371, column: 34, scope: !3396)
!3399 = !DILocation(line: 374, column: 2, scope: !3396)
!3400 = !DILocation(line: 374, column: 6, scope: !3396)
!3401 = !DILocation(line: 374, column: 11, scope: !3396)
!3402 = !DILocation(line: 375, column: 2, scope: !3396)
!3403 = !DILocation(line: 375, column: 6, scope: !3396)
!3404 = !DILocation(line: 375, column: 18, scope: !3396)
!3405 = !DILocation(line: 376, column: 2, scope: !3396)
!3406 = !DILocation(line: 376, column: 6, scope: !3396)
!3407 = !DILocation(line: 376, column: 13, scope: !3396)
!3408 = !DILocation(line: 379, column: 2, scope: !3396)
!3409 = !DILocation(line: 379, column: 6, scope: !3396)
!3410 = !DILocation(line: 379, column: 11, scope: !3396)
!3411 = !DILocation(line: 382, column: 2, scope: !3396)
!3412 = !DILocation(line: 382, column: 6, scope: !3396)
!3413 = !DILocation(line: 382, column: 11, scope: !3396)
!3414 = !DILocation(line: 383, column: 2, scope: !3396)
!3415 = !DILocation(line: 383, column: 6, scope: !3396)
!3416 = !DILocation(line: 383, column: 11, scope: !3396)
!3417 = !DILocation(line: 386, column: 17, scope: !3396)
!3418 = !DILocation(line: 386, column: 21, scope: !3396)
!3419 = !DILocation(line: 386, column: 2, scope: !3396)
!3420 = !DILocation(line: 387, column: 1, scope: !3396)
!3421 = distinct !DISubprogram(name: "mask_new_exec", scope: !3, file: !3, line: 360, type: !3422, scopeLine: 361, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1817, retainedNodes: !2254)
!3422 = !DISubroutineType(types: !3423)
!3423 = !{!22, !3090, !3424}
!3424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3425, size: 64)
!3425 = !DIDerivedType(tag: DW_TAG_typedef, name: "wmOperator", file: !28, line: 348, baseType: !27)
!3426 = !DILocalVariable(name: "C", arg: 1, scope: !3421, file: !3, line: 360, type: !3090)
!3427 = !DILocation(line: 360, column: 36, scope: !3421)
!3428 = !DILocalVariable(name: "op", arg: 2, scope: !3421, file: !3, line: 360, type: !3424)
!3429 = !DILocation(line: 360, column: 51, scope: !3421)
!3430 = !DILocalVariable(name: "name", scope: !3421, file: !3, line: 362, type: !33)
!3431 = !DILocation(line: 362, column: 7, scope: !3421)
!3432 = !DILocation(line: 364, column: 17, scope: !3421)
!3433 = !DILocation(line: 364, column: 21, scope: !3421)
!3434 = !DILocation(line: 364, column: 34, scope: !3421)
!3435 = !DILocation(line: 364, column: 2, scope: !3421)
!3436 = !DILocation(line: 366, column: 14, scope: !3421)
!3437 = !DILocation(line: 366, column: 17, scope: !3421)
!3438 = !DILocation(line: 366, column: 2, scope: !3421)
!3439 = !DILocation(line: 368, column: 2, scope: !3421)
!3440 = distinct !DISubprogram(name: "MASK_OT_layer_new", scope: !3, file: !3, line: 406, type: !4, scopeLine: 407, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1817, retainedNodes: !2254)
!3441 = !DILocalVariable(name: "ot", arg: 1, scope: !3440, file: !3, line: 406, type: !6)
!3442 = !DILocation(line: 406, column: 40, scope: !3440)
!3443 = !DILocation(line: 409, column: 2, scope: !3440)
!3444 = !DILocation(line: 409, column: 6, scope: !3440)
!3445 = !DILocation(line: 409, column: 11, scope: !3440)
!3446 = !DILocation(line: 410, column: 2, scope: !3440)
!3447 = !DILocation(line: 410, column: 6, scope: !3440)
!3448 = !DILocation(line: 410, column: 18, scope: !3440)
!3449 = !DILocation(line: 411, column: 2, scope: !3440)
!3450 = !DILocation(line: 411, column: 6, scope: !3440)
!3451 = !DILocation(line: 411, column: 13, scope: !3440)
!3452 = !DILocation(line: 414, column: 2, scope: !3440)
!3453 = !DILocation(line: 414, column: 6, scope: !3440)
!3454 = !DILocation(line: 414, column: 11, scope: !3440)
!3455 = !DILocation(line: 415, column: 2, scope: !3440)
!3456 = !DILocation(line: 415, column: 6, scope: !3440)
!3457 = !DILocation(line: 415, column: 11, scope: !3440)
!3458 = !DILocation(line: 418, column: 2, scope: !3440)
!3459 = !DILocation(line: 418, column: 6, scope: !3440)
!3460 = !DILocation(line: 418, column: 11, scope: !3440)
!3461 = !DILocation(line: 421, column: 17, scope: !3440)
!3462 = !DILocation(line: 421, column: 21, scope: !3440)
!3463 = !DILocation(line: 421, column: 2, scope: !3440)
!3464 = !DILocation(line: 422, column: 1, scope: !3440)
!3465 = distinct !DISubprogram(name: "masklay_new_exec", scope: !3, file: !3, line: 391, type: !3422, scopeLine: 392, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1817, retainedNodes: !2254)
!3466 = !DILocalVariable(name: "C", arg: 1, scope: !3465, file: !3, line: 391, type: !3090)
!3467 = !DILocation(line: 391, column: 39, scope: !3465)
!3468 = !DILocalVariable(name: "op", arg: 2, scope: !3465, file: !3, line: 391, type: !3424)
!3469 = !DILocation(line: 391, column: 54, scope: !3465)
!3470 = !DILocalVariable(name: "mask", scope: !3465, file: !3, line: 393, type: !2120)
!3471 = !DILocation(line: 393, column: 8, scope: !3465)
!3472 = !DILocation(line: 393, column: 34, scope: !3465)
!3473 = !DILocation(line: 393, column: 15, scope: !3465)
!3474 = !DILocalVariable(name: "name", scope: !3465, file: !3, line: 394, type: !33)
!3475 = !DILocation(line: 394, column: 7, scope: !3465)
!3476 = !DILocation(line: 396, column: 17, scope: !3465)
!3477 = !DILocation(line: 396, column: 21, scope: !3465)
!3478 = !DILocation(line: 396, column: 34, scope: !3465)
!3479 = !DILocation(line: 396, column: 2, scope: !3465)
!3480 = !DILocation(line: 398, column: 21, scope: !3465)
!3481 = !DILocation(line: 398, column: 27, scope: !3465)
!3482 = !DILocation(line: 398, column: 2, scope: !3465)
!3483 = !DILocation(line: 399, column: 22, scope: !3465)
!3484 = !DILocation(line: 399, column: 28, scope: !3465)
!3485 = !DILocation(line: 399, column: 40, scope: !3465)
!3486 = !DILocation(line: 399, column: 2, scope: !3465)
!3487 = !DILocation(line: 399, column: 8, scope: !3465)
!3488 = !DILocation(line: 399, column: 20, scope: !3465)
!3489 = !DILocation(line: 401, column: 24, scope: !3465)
!3490 = !DILocation(line: 401, column: 48, scope: !3465)
!3491 = !DILocation(line: 401, column: 2, scope: !3465)
!3492 = !DILocation(line: 403, column: 2, scope: !3465)
!3493 = distinct !DISubprogram(name: "MASK_OT_layer_remove", scope: !3, file: !3, line: 440, type: !4, scopeLine: 441, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1817, retainedNodes: !2254)
!3494 = !DILocalVariable(name: "ot", arg: 1, scope: !3493, file: !3, line: 440, type: !6)
!3495 = !DILocation(line: 440, column: 43, scope: !3493)
!3496 = !DILocation(line: 443, column: 2, scope: !3493)
!3497 = !DILocation(line: 443, column: 6, scope: !3493)
!3498 = !DILocation(line: 443, column: 11, scope: !3493)
!3499 = !DILocation(line: 444, column: 2, scope: !3493)
!3500 = !DILocation(line: 444, column: 6, scope: !3493)
!3501 = !DILocation(line: 444, column: 18, scope: !3493)
!3502 = !DILocation(line: 445, column: 2, scope: !3493)
!3503 = !DILocation(line: 445, column: 6, scope: !3493)
!3504 = !DILocation(line: 445, column: 13, scope: !3493)
!3505 = !DILocation(line: 448, column: 2, scope: !3493)
!3506 = !DILocation(line: 448, column: 6, scope: !3493)
!3507 = !DILocation(line: 448, column: 11, scope: !3493)
!3508 = !DILocation(line: 449, column: 2, scope: !3493)
!3509 = !DILocation(line: 449, column: 6, scope: !3493)
!3510 = !DILocation(line: 449, column: 11, scope: !3493)
!3511 = !DILocation(line: 452, column: 2, scope: !3493)
!3512 = !DILocation(line: 452, column: 6, scope: !3493)
!3513 = !DILocation(line: 452, column: 11, scope: !3493)
!3514 = !DILocation(line: 453, column: 1, scope: !3493)
!3515 = distinct !DISubprogram(name: "masklay_remove_exec", scope: !3, file: !3, line: 426, type: !3422, scopeLine: 427, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1817, retainedNodes: !2254)
!3516 = !DILocalVariable(name: "C", arg: 1, scope: !3515, file: !3, line: 426, type: !3090)
!3517 = !DILocation(line: 426, column: 42, scope: !3515)
!3518 = !DILocalVariable(name: "UNUSED_op", arg: 2, scope: !3515, file: !3, line: 426, type: !3424)
!3519 = !DILocation(line: 426, column: 57, scope: !3515)
!3520 = !DILocalVariable(name: "mask", scope: !3515, file: !3, line: 428, type: !2120)
!3521 = !DILocation(line: 428, column: 8, scope: !3515)
!3522 = !DILocation(line: 428, column: 34, scope: !3515)
!3523 = !DILocation(line: 428, column: 15, scope: !3515)
!3524 = !DILocalVariable(name: "masklay", scope: !3515, file: !3, line: 429, type: !2123)
!3525 = !DILocation(line: 429, column: 13, scope: !3515)
!3526 = !DILocation(line: 429, column: 45, scope: !3515)
!3527 = !DILocation(line: 429, column: 23, scope: !3515)
!3528 = !DILocation(line: 431, column: 6, scope: !3529)
!3529 = distinct !DILexicalBlock(scope: !3515, file: !3, line: 431, column: 6)
!3530 = !DILocation(line: 431, column: 6, scope: !3515)
!3531 = !DILocation(line: 432, column: 25, scope: !3532)
!3532 = distinct !DILexicalBlock(scope: !3529, file: !3, line: 431, column: 15)
!3533 = !DILocation(line: 432, column: 31, scope: !3532)
!3534 = !DILocation(line: 432, column: 3, scope: !3532)
!3535 = !DILocation(line: 434, column: 25, scope: !3532)
!3536 = !DILocation(line: 434, column: 49, scope: !3532)
!3537 = !DILocation(line: 434, column: 3, scope: !3532)
!3538 = !DILocation(line: 435, column: 2, scope: !3532)
!3539 = !DILocation(line: 437, column: 2, scope: !3515)
!3540 = distinct !DISubprogram(name: "MASK_OT_slide_point", scope: !3, file: !3, line: 1119, type: !4, scopeLine: 1120, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1817, retainedNodes: !2254)
!3541 = !DILocalVariable(name: "ot", arg: 1, scope: !3540, file: !3, line: 1119, type: !6)
!3542 = !DILocation(line: 1119, column: 42, scope: !3540)
!3543 = !DILocalVariable(name: "prop", scope: !3540, file: !3, line: 1121, type: !1766)
!3544 = !DILocation(line: 1121, column: 15, scope: !3540)
!3545 = !DILocation(line: 1124, column: 2, scope: !3540)
!3546 = !DILocation(line: 1124, column: 6, scope: !3540)
!3547 = !DILocation(line: 1124, column: 11, scope: !3540)
!3548 = !DILocation(line: 1125, column: 2, scope: !3540)
!3549 = !DILocation(line: 1125, column: 6, scope: !3540)
!3550 = !DILocation(line: 1125, column: 18, scope: !3540)
!3551 = !DILocation(line: 1126, column: 2, scope: !3540)
!3552 = !DILocation(line: 1126, column: 6, scope: !3540)
!3553 = !DILocation(line: 1126, column: 13, scope: !3540)
!3554 = !DILocation(line: 1129, column: 2, scope: !3540)
!3555 = !DILocation(line: 1129, column: 6, scope: !3540)
!3556 = !DILocation(line: 1129, column: 13, scope: !3540)
!3557 = !DILocation(line: 1130, column: 2, scope: !3540)
!3558 = !DILocation(line: 1130, column: 6, scope: !3540)
!3559 = !DILocation(line: 1130, column: 12, scope: !3540)
!3560 = !DILocation(line: 1131, column: 2, scope: !3540)
!3561 = !DILocation(line: 1131, column: 6, scope: !3540)
!3562 = !DILocation(line: 1131, column: 11, scope: !3540)
!3563 = !DILocation(line: 1134, column: 2, scope: !3540)
!3564 = !DILocation(line: 1134, column: 6, scope: !3540)
!3565 = !DILocation(line: 1134, column: 11, scope: !3540)
!3566 = !DILocation(line: 1136, column: 18, scope: !3540)
!3567 = !DILocation(line: 1136, column: 22, scope: !3540)
!3568 = !DILocation(line: 1136, column: 2, scope: !3540)
!3569 = !DILocation(line: 1138, column: 25, scope: !3540)
!3570 = !DILocation(line: 1138, column: 29, scope: !3540)
!3571 = !DILocation(line: 1138, column: 9, scope: !3540)
!3572 = !DILocation(line: 1138, column: 7, scope: !3540)
!3573 = !DILocation(line: 1139, column: 24, scope: !3540)
!3574 = !DILocation(line: 1139, column: 2, scope: !3540)
!3575 = !DILocation(line: 1140, column: 1, scope: !3540)
!3576 = distinct !DISubprogram(name: "slide_point_invoke", scope: !3, file: !3, line: 781, type: !3577, scopeLine: 782, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1817, retainedNodes: !2254)
!3577 = !DISubroutineType(types: !3578)
!3578 = !{!22, !3090, !3424, !3579}
!3579 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3580, size: 64)
!3580 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3581)
!3581 = !DIDerivedType(tag: DW_TAG_typedef, name: "wmEvent", file: !8, line: 460, baseType: !1663)
!3582 = !DILocalVariable(name: "C", arg: 1, scope: !3576, file: !3, line: 781, type: !3090)
!3583 = !DILocation(line: 781, column: 41, scope: !3576)
!3584 = !DILocalVariable(name: "op", arg: 2, scope: !3576, file: !3, line: 781, type: !3424)
!3585 = !DILocation(line: 781, column: 56, scope: !3576)
!3586 = !DILocalVariable(name: "event", arg: 3, scope: !3576, file: !3, line: 781, type: !3579)
!3587 = !DILocation(line: 781, column: 75, scope: !3576)
!3588 = !DILocalVariable(name: "mask", scope: !3576, file: !3, line: 783, type: !2120)
!3589 = !DILocation(line: 783, column: 8, scope: !3576)
!3590 = !DILocation(line: 783, column: 34, scope: !3576)
!3591 = !DILocation(line: 783, column: 15, scope: !3576)
!3592 = !DILocalVariable(name: "slidedata", scope: !3576, file: !3, line: 784, type: !2113)
!3593 = !DILocation(line: 784, column: 18, scope: !3576)
!3594 = !DILocation(line: 786, column: 6, scope: !3595)
!3595 = distinct !DILexicalBlock(scope: !3576, file: !3, line: 786, column: 6)
!3596 = !DILocation(line: 786, column: 11, scope: !3595)
!3597 = !DILocation(line: 786, column: 6, scope: !3576)
!3598 = !DILocation(line: 787, column: 3, scope: !3599)
!3599 = distinct !DILexicalBlock(scope: !3595, file: !3, line: 786, column: 20)
!3600 = !DILocation(line: 790, column: 37, scope: !3576)
!3601 = !DILocation(line: 790, column: 40, scope: !3576)
!3602 = !DILocation(line: 790, column: 44, scope: !3576)
!3603 = !DILocation(line: 790, column: 14, scope: !3576)
!3604 = !DILocation(line: 790, column: 12, scope: !3576)
!3605 = !DILocation(line: 792, column: 6, scope: !3606)
!3606 = distinct !DILexicalBlock(scope: !3576, file: !3, line: 792, column: 6)
!3607 = !DILocation(line: 792, column: 6, scope: !3576)
!3608 = !DILocation(line: 793, column: 20, scope: !3609)
!3609 = distinct !DILexicalBlock(scope: !3606, file: !3, line: 792, column: 17)
!3610 = !DILocation(line: 793, column: 3, scope: !3609)
!3611 = !DILocation(line: 793, column: 7, scope: !3609)
!3612 = !DILocation(line: 793, column: 18, scope: !3609)
!3613 = !DILocation(line: 795, column: 30, scope: !3609)
!3614 = !DILocation(line: 795, column: 33, scope: !3609)
!3615 = !DILocation(line: 795, column: 3, scope: !3609)
!3616 = !DILocation(line: 797, column: 36, scope: !3609)
!3617 = !DILocation(line: 797, column: 47, scope: !3609)
!3618 = !DILocation(line: 797, column: 3, scope: !3609)
!3619 = !DILocation(line: 797, column: 14, scope: !3609)
!3620 = !DILocation(line: 797, column: 23, scope: !3609)
!3621 = !DILocation(line: 797, column: 34, scope: !3609)
!3622 = !DILocation(line: 798, column: 35, scope: !3609)
!3623 = !DILocation(line: 798, column: 46, scope: !3609)
!3624 = !DILocation(line: 798, column: 3, scope: !3609)
!3625 = !DILocation(line: 798, column: 14, scope: !3609)
!3626 = !DILocation(line: 798, column: 23, scope: !3609)
!3627 = !DILocation(line: 798, column: 33, scope: !3609)
!3628 = !DILocation(line: 800, column: 25, scope: !3609)
!3629 = !DILocation(line: 800, column: 49, scope: !3609)
!3630 = !DILocation(line: 800, column: 3, scope: !3609)
!3631 = !DILocation(line: 802, column: 3, scope: !3609)
!3632 = !DILocation(line: 805, column: 2, scope: !3576)
!3633 = !DILocation(line: 806, column: 1, scope: !3576)
!3634 = distinct !DISubprogram(name: "slide_point_modal", scope: !3, file: !3, line: 869, type: !3577, scopeLine: 870, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1817, retainedNodes: !2254)
!3635 = !DILocalVariable(name: "C", arg: 1, scope: !3634, file: !3, line: 869, type: !3090)
!3636 = !DILocation(line: 869, column: 40, scope: !3634)
!3637 = !DILocalVariable(name: "op", arg: 2, scope: !3634, file: !3, line: 869, type: !3424)
!3638 = !DILocation(line: 869, column: 55, scope: !3634)
!3639 = !DILocalVariable(name: "event", arg: 3, scope: !3634, file: !3, line: 869, type: !3579)
!3640 = !DILocation(line: 869, column: 74, scope: !3634)
!3641 = !DILocalVariable(name: "data", scope: !3634, file: !3, line: 871, type: !2113)
!3642 = !DILocation(line: 871, column: 18, scope: !3634)
!3643 = !DILocation(line: 871, column: 43, scope: !3634)
!3644 = !DILocation(line: 871, column: 47, scope: !3634)
!3645 = !DILocation(line: 871, column: 25, scope: !3634)
!3646 = !DILocalVariable(name: "bezt", scope: !3634, file: !3, line: 872, type: !2240)
!3647 = !DILocation(line: 872, column: 13, scope: !3634)
!3648 = !DILocation(line: 872, column: 21, scope: !3634)
!3649 = !DILocation(line: 872, column: 27, scope: !3634)
!3650 = !DILocation(line: 872, column: 34, scope: !3634)
!3651 = !DILocalVariable(name: "co", scope: !3634, file: !3, line: 873, type: !420)
!3652 = !DILocation(line: 873, column: 8, scope: !3634)
!3653 = !DILocation(line: 875, column: 10, scope: !3634)
!3654 = !DILocation(line: 875, column: 17, scope: !3634)
!3655 = !DILocation(line: 875, column: 2, scope: !3634)
!3656 = !DILocation(line: 880, column: 8, scope: !3657)
!3657 = distinct !DILexicalBlock(scope: !3658, file: !3, line: 880, column: 8)
!3658 = distinct !DILexicalBlock(scope: !3634, file: !3, line: 875, column: 23)
!3659 = !DILocation(line: 880, column: 8, scope: !3658)
!3660 = !DILocation(line: 881, column: 9, scope: !3661)
!3661 = distinct !DILexicalBlock(scope: !3662, file: !3, line: 881, column: 9)
!3662 = distinct !DILexicalBlock(scope: !3657, file: !3, line: 880, column: 52)
!3663 = !DILocation(line: 881, column: 15, scope: !3661)
!3664 = !DILocation(line: 881, column: 22, scope: !3661)
!3665 = !DILocation(line: 881, column: 9, scope: !3662)
!3666 = !DILocation(line: 882, column: 34, scope: !3667)
!3667 = distinct !DILexicalBlock(scope: !3661, file: !3, line: 881, column: 47)
!3668 = !DILocation(line: 882, column: 41, scope: !3667)
!3669 = !DILocation(line: 882, column: 45, scope: !3667)
!3670 = !DILocation(line: 882, column: 33, scope: !3667)
!3671 = !DILocation(line: 882, column: 6, scope: !3667)
!3672 = !DILocation(line: 882, column: 12, scope: !3667)
!3673 = !DILocation(line: 882, column: 31, scope: !3667)
!3674 = !DILocation(line: 883, column: 5, scope: !3667)
!3675 = !DILocation(line: 885, column: 33, scope: !3676)
!3676 = distinct !DILexicalBlock(scope: !3661, file: !3, line: 884, column: 10)
!3677 = !DILocation(line: 885, column: 40, scope: !3676)
!3678 = !DILocation(line: 885, column: 44, scope: !3676)
!3679 = !DILocation(line: 885, column: 32, scope: !3676)
!3680 = !DILocation(line: 885, column: 6, scope: !3676)
!3681 = !DILocation(line: 885, column: 12, scope: !3676)
!3682 = !DILocation(line: 885, column: 30, scope: !3676)
!3683 = !DILocation(line: 887, column: 4, scope: !3662)
!3684 = !DILocation(line: 889, column: 8, scope: !3685)
!3685 = distinct !DILexicalBlock(scope: !3658, file: !3, line: 889, column: 8)
!3686 = !DILocation(line: 889, column: 8, scope: !3658)
!3687 = !DILocation(line: 890, column: 26, scope: !3685)
!3688 = !DILocation(line: 890, column: 33, scope: !3685)
!3689 = !DILocation(line: 890, column: 37, scope: !3685)
!3690 = !DILocation(line: 890, column: 25, scope: !3685)
!3691 = !DILocation(line: 890, column: 5, scope: !3685)
!3692 = !DILocation(line: 890, column: 11, scope: !3685)
!3693 = !DILocation(line: 890, column: 23, scope: !3685)
!3694 = !DILocalVariable(name: "sa", scope: !3695, file: !3, line: 895, type: !2298)
!3695 = distinct !DILexicalBlock(scope: !3658, file: !3, line: 894, column: 3)
!3696 = !DILocation(line: 895, column: 13, scope: !3695)
!3697 = !DILocation(line: 895, column: 30, scope: !3695)
!3698 = !DILocation(line: 895, column: 18, scope: !3695)
!3699 = !DILocalVariable(name: "ar", scope: !3695, file: !3, line: 896, type: !2350)
!3700 = !DILocation(line: 896, column: 13, scope: !3695)
!3701 = !DILocation(line: 896, column: 32, scope: !3695)
!3702 = !DILocation(line: 896, column: 18, scope: !3695)
!3703 = !DILocalVariable(name: "delta", scope: !3695, file: !3, line: 897, type: !420)
!3704 = !DILocation(line: 897, column: 10, scope: !3695)
!3705 = !DILocation(line: 899, column: 22, scope: !3695)
!3706 = !DILocation(line: 899, column: 26, scope: !3695)
!3707 = !DILocation(line: 899, column: 30, scope: !3695)
!3708 = !DILocation(line: 899, column: 37, scope: !3695)
!3709 = !DILocation(line: 899, column: 43, scope: !3695)
!3710 = !DILocation(line: 899, column: 4, scope: !3695)
!3711 = !DILocation(line: 900, column: 16, scope: !3695)
!3712 = !DILocation(line: 900, column: 23, scope: !3695)
!3713 = !DILocation(line: 900, column: 27, scope: !3695)
!3714 = !DILocation(line: 900, column: 33, scope: !3695)
!3715 = !DILocation(line: 900, column: 4, scope: !3695)
!3716 = !DILocation(line: 901, column: 8, scope: !3717)
!3717 = distinct !DILexicalBlock(scope: !3695, file: !3, line: 901, column: 8)
!3718 = !DILocation(line: 901, column: 14, scope: !3717)
!3719 = !DILocation(line: 901, column: 8, scope: !3695)
!3720 = !DILocation(line: 902, column: 15, scope: !3721)
!3721 = distinct !DILexicalBlock(scope: !3717, file: !3, line: 901, column: 27)
!3722 = !DILocation(line: 902, column: 5, scope: !3721)
!3723 = !DILocation(line: 903, column: 4, scope: !3721)
!3724 = !DILocation(line: 904, column: 15, scope: !3695)
!3725 = !DILocation(line: 904, column: 21, scope: !3695)
!3726 = !DILocation(line: 904, column: 39, scope: !3695)
!3727 = !DILocation(line: 904, column: 4, scope: !3695)
!3728 = !DILocation(line: 906, column: 8, scope: !3729)
!3729 = distinct !DILexicalBlock(scope: !3695, file: !3, line: 906, column: 8)
!3730 = !DILocation(line: 906, column: 14, scope: !3729)
!3731 = !DILocation(line: 906, column: 21, scope: !3729)
!3732 = !DILocation(line: 906, column: 8, scope: !3695)
!3733 = !DILocalVariable(name: "new_handle", scope: !3734, file: !3, line: 907, type: !420)
!3734 = distinct !DILexicalBlock(scope: !3729, file: !3, line: 906, column: 45)
!3735 = !DILocation(line: 907, column: 11, scope: !3734)
!3736 = !DILocation(line: 909, column: 9, scope: !3737)
!3737 = distinct !DILexicalBlock(scope: !3734, file: !3, line: 909, column: 9)
!3738 = !DILocation(line: 909, column: 15, scope: !3737)
!3739 = !DILocation(line: 909, column: 36, scope: !3737)
!3740 = !DILocation(line: 909, column: 39, scope: !3737)
!3741 = !DILocation(line: 909, column: 45, scope: !3737)
!3742 = !DILocation(line: 909, column: 58, scope: !3737)
!3743 = !DILocation(line: 909, column: 9, scope: !3734)
!3744 = !DILocation(line: 910, column: 10, scope: !3745)
!3745 = distinct !DILexicalBlock(scope: !3746, file: !3, line: 910, column: 10)
!3746 = distinct !DILexicalBlock(scope: !3737, file: !3, line: 909, column: 86)
!3747 = !DILocation(line: 910, column: 10, scope: !3746)
!3748 = !DILocalVariable(name: "sw_ap", scope: !3749, file: !3, line: 913, type: !191)
!3749 = distinct !DILexicalBlock(scope: !3750, file: !3, line: 913, column: 7)
!3750 = distinct !DILexicalBlock(scope: !3745, file: !3, line: 912, column: 6)
!3751 = !DILocation(line: 913, column: 7, scope: !3749)
!3752 = !DILocation(line: 914, column: 7, scope: !3750)
!3753 = !DILocation(line: 914, column: 16, scope: !3750)
!3754 = !DILocation(line: 917, column: 11, scope: !3755)
!3755 = distinct !DILexicalBlock(scope: !3750, file: !3, line: 917, column: 11)
!3756 = !DILocation(line: 917, column: 17, scope: !3755)
!3757 = !DILocation(line: 917, column: 27, scope: !3755)
!3758 = !DILocation(line: 917, column: 33, scope: !3755)
!3759 = !DILocation(line: 917, column: 41, scope: !3755)
!3760 = !DILocation(line: 917, column: 23, scope: !3755)
!3761 = !DILocation(line: 917, column: 11, scope: !3750)
!3762 = !DILocation(line: 918, column: 18, scope: !3763)
!3763 = distinct !DILexicalBlock(scope: !3755, file: !3, line: 917, column: 52)
!3764 = !DILocation(line: 918, column: 8, scope: !3763)
!3765 = !DILocation(line: 919, column: 7, scope: !3763)
!3766 = !DILocation(line: 920, column: 6, scope: !3750)
!3767 = !DILocation(line: 921, column: 5, scope: !3746)
!3768 = !DILocation(line: 923, column: 17, scope: !3734)
!3769 = !DILocation(line: 923, column: 29, scope: !3734)
!3770 = !DILocation(line: 923, column: 35, scope: !3734)
!3771 = !DILocation(line: 923, column: 54, scope: !3734)
!3772 = !DILocation(line: 923, column: 5, scope: !3734)
!3773 = !DILocation(line: 925, column: 31, scope: !3734)
!3774 = !DILocation(line: 925, column: 37, scope: !3734)
!3775 = !DILocation(line: 925, column: 44, scope: !3734)
!3776 = !DILocation(line: 925, column: 50, scope: !3734)
!3777 = !DILocation(line: 926, column: 31, scope: !3734)
!3778 = !DILocation(line: 926, column: 43, scope: !3734)
!3779 = !DILocation(line: 926, column: 49, scope: !3734)
!3780 = !DILocation(line: 927, column: 31, scope: !3734)
!3781 = !DILocation(line: 927, column: 37, scope: !3734)
!3782 = !DILocation(line: 927, column: 56, scope: !3734)
!3783 = !DILocation(line: 927, column: 62, scope: !3734)
!3784 = !DILocation(line: 925, column: 5, scope: !3734)
!3785 = !DILocation(line: 928, column: 27, scope: !3734)
!3786 = !DILocation(line: 928, column: 33, scope: !3734)
!3787 = !DILocation(line: 928, column: 40, scope: !3734)
!3788 = !DILocation(line: 928, column: 46, scope: !3734)
!3789 = !DILocation(line: 928, column: 60, scope: !3734)
!3790 = !DILocation(line: 928, column: 66, scope: !3734)
!3791 = !DILocation(line: 928, column: 5, scope: !3734)
!3792 = !DILocation(line: 930, column: 9, scope: !3793)
!3793 = distinct !DILexicalBlock(scope: !3734, file: !3, line: 930, column: 9)
!3794 = !DILocation(line: 930, column: 15, scope: !3793)
!3795 = !DILocation(line: 930, column: 9, scope: !3734)
!3796 = !DILocation(line: 931, column: 10, scope: !3797)
!3797 = distinct !DILexicalBlock(scope: !3798, file: !3, line: 931, column: 10)
!3798 = distinct !DILexicalBlock(scope: !3793, file: !3, line: 930, column: 37)
!3799 = !DILocation(line: 931, column: 10, scope: !3798)
!3800 = !DILocalVariable(name: "bezt", scope: !3801, file: !3, line: 932, type: !2240)
!3801 = distinct !DILexicalBlock(scope: !3797, file: !3, line: 931, column: 85)
!3802 = !DILocation(line: 932, column: 18, scope: !3801)
!3803 = !DILocation(line: 932, column: 26, scope: !3801)
!3804 = !DILocation(line: 932, column: 32, scope: !3801)
!3805 = !DILocation(line: 932, column: 39, scope: !3801)
!3806 = !DILocalVariable(name: "vec", scope: !3801, file: !3, line: 933, type: !420)
!3807 = !DILocation(line: 933, column: 13, scope: !3801)
!3808 = !DILocalVariable(name: "self_handle", scope: !3801, file: !3, line: 934, type: !48)
!3809 = !DILocation(line: 934, column: 13, scope: !3801)
!3810 = !DILocation(line: 934, column: 28, scope: !3801)
!3811 = !DILocation(line: 934, column: 34, scope: !3801)
!3812 = !DILocation(line: 934, column: 47, scope: !3801)
!3813 = !DILocation(line: 934, column: 27, scope: !3801)
!3814 = !DILocalVariable(name: "other_handle", scope: !3801, file: !3, line: 935, type: !48)
!3815 = !DILocation(line: 935, column: 13, scope: !3801)
!3816 = !DILocation(line: 935, column: 29, scope: !3801)
!3817 = !DILocation(line: 935, column: 35, scope: !3801)
!3818 = !DILocation(line: 935, column: 48, scope: !3801)
!3819 = !DILocation(line: 935, column: 28, scope: !3801)
!3820 = !DILocation(line: 937, column: 19, scope: !3801)
!3821 = !DILocation(line: 937, column: 24, scope: !3801)
!3822 = !DILocation(line: 937, column: 30, scope: !3801)
!3823 = !DILocation(line: 937, column: 38, scope: !3801)
!3824 = !DILocation(line: 937, column: 44, scope: !3801)
!3825 = !DILocation(line: 937, column: 48, scope: !3801)
!3826 = !DILocation(line: 937, column: 7, scope: !3801)
!3827 = !DILocation(line: 938, column: 19, scope: !3801)
!3828 = !DILocation(line: 938, column: 25, scope: !3801)
!3829 = !DILocation(line: 938, column: 29, scope: !3801)
!3830 = !DILocation(line: 938, column: 44, scope: !3801)
!3831 = !DILocation(line: 938, column: 50, scope: !3801)
!3832 = !DILocation(line: 938, column: 58, scope: !3801)
!3833 = !DILocation(line: 938, column: 7, scope: !3801)
!3834 = !DILocation(line: 939, column: 6, scope: !3801)
!3835 = !DILocation(line: 940, column: 5, scope: !3798)
!3836 = !DILocation(line: 941, column: 4, scope: !3734)
!3837 = !DILocation(line: 942, column: 13, scope: !3838)
!3838 = distinct !DILexicalBlock(scope: !3729, file: !3, line: 942, column: 13)
!3839 = !DILocation(line: 942, column: 19, scope: !3838)
!3840 = !DILocation(line: 942, column: 26, scope: !3838)
!3841 = !DILocation(line: 942, column: 13, scope: !3729)
!3842 = !DILocation(line: 943, column: 15, scope: !3843)
!3843 = distinct !DILexicalBlock(scope: !3838, file: !3, line: 942, column: 49)
!3844 = !DILocation(line: 943, column: 21, scope: !3843)
!3845 = !DILocation(line: 943, column: 29, scope: !3843)
!3846 = !DILocation(line: 943, column: 5, scope: !3843)
!3847 = !DILocation(line: 944, column: 15, scope: !3843)
!3848 = !DILocation(line: 944, column: 21, scope: !3843)
!3849 = !DILocation(line: 944, column: 29, scope: !3843)
!3850 = !DILocation(line: 944, column: 5, scope: !3843)
!3851 = !DILocation(line: 945, column: 15, scope: !3843)
!3852 = !DILocation(line: 945, column: 21, scope: !3843)
!3853 = !DILocation(line: 945, column: 29, scope: !3843)
!3854 = !DILocation(line: 945, column: 5, scope: !3843)
!3855 = !DILocation(line: 946, column: 4, scope: !3843)
!3856 = !DILocation(line: 947, column: 13, scope: !3857)
!3857 = distinct !DILexicalBlock(scope: !3838, file: !3, line: 947, column: 13)
!3858 = !DILocation(line: 947, column: 19, scope: !3857)
!3859 = !DILocation(line: 947, column: 26, scope: !3857)
!3860 = !DILocation(line: 947, column: 13, scope: !3838)
!3861 = !DILocalVariable(name: "vec", scope: !3862, file: !3, line: 948, type: !420)
!3862 = distinct !DILexicalBlock(scope: !3857, file: !3, line: 947, column: 51)
!3863 = !DILocation(line: 948, column: 11, scope: !3862)
!3864 = !DILocalVariable(name: "no", scope: !3862, file: !3, line: 948, type: !420)
!3865 = !DILocation(line: 948, column: 19, scope: !3862)
!3866 = !DILocalVariable(name: "p", scope: !3862, file: !3, line: 948, type: !420)
!3867 = !DILocation(line: 948, column: 26, scope: !3862)
!3868 = !DILocalVariable(name: "c", scope: !3862, file: !3, line: 948, type: !420)
!3869 = !DILocation(line: 948, column: 32, scope: !3862)
!3870 = !DILocalVariable(name: "w", scope: !3862, file: !3, line: 948, type: !191)
!3871 = !DILocation(line: 948, column: 38, scope: !3862)
!3872 = !DILocalVariable(name: "offco", scope: !3862, file: !3, line: 948, type: !420)
!3873 = !DILocation(line: 948, column: 41, scope: !3862)
!3874 = !DILocalVariable(name: "weight", scope: !3862, file: !3, line: 949, type: !2280)
!3875 = !DILocation(line: 949, column: 12, scope: !3862)
!3876 = !DILocalVariable(name: "weight_scalar", scope: !3862, file: !3, line: 950, type: !191)
!3877 = !DILocation(line: 950, column: 11, scope: !3862)
!3878 = !DILocalVariable(name: "is_overall_feather", scope: !3862, file: !3, line: 951, type: !1017)
!3879 = !DILocation(line: 951, column: 10, scope: !3862)
!3880 = !DILocation(line: 951, column: 31, scope: !3862)
!3881 = !DILocation(line: 951, column: 37, scope: !3862)
!3882 = !DILocation(line: 951, column: 56, scope: !3862)
!3883 = !DILocation(line: 951, column: 59, scope: !3862)
!3884 = !DILocation(line: 951, column: 65, scope: !3862)
!3885 = !DILocation(line: 953, column: 17, scope: !3862)
!3886 = !DILocation(line: 953, column: 24, scope: !3862)
!3887 = !DILocation(line: 953, column: 30, scope: !3862)
!3888 = !DILocation(line: 953, column: 50, scope: !3862)
!3889 = !DILocation(line: 953, column: 5, scope: !3862)
!3890 = !DILocation(line: 955, column: 9, scope: !3891)
!3891 = distinct !DILexicalBlock(scope: !3862, file: !3, line: 955, column: 9)
!3892 = !DILocation(line: 955, column: 15, scope: !3891)
!3893 = !DILocation(line: 955, column: 9, scope: !3862)
!3894 = !DILocalVariable(name: "u_pos", scope: !3895, file: !3, line: 958, type: !2276)
!3895 = distinct !DILexicalBlock(scope: !3891, file: !3, line: 955, column: 19)
!3896 = !DILocation(line: 958, column: 18, scope: !3895)
!3897 = !DILocation(line: 958, column: 53, scope: !3895)
!3898 = !DILocation(line: 958, column: 59, scope: !3895)
!3899 = !DILocation(line: 958, column: 67, scope: !3895)
!3900 = !DILocation(line: 958, column: 73, scope: !3895)
!3901 = !DILocation(line: 959, column: 53, scope: !3895)
!3902 = !DILocation(line: 959, column: 59, scope: !3895)
!3903 = !DILocation(line: 959, column: 63, scope: !3895)
!3904 = !DILocation(line: 959, column: 66, scope: !3895)
!3905 = !DILocation(line: 958, column: 26, scope: !3895)
!3906 = !DILocalVariable(name: "u_neg", scope: !3895, file: !3, line: 960, type: !2276)
!3907 = !DILocation(line: 960, column: 18, scope: !3895)
!3908 = !DILocation(line: 960, column: 53, scope: !3895)
!3909 = !DILocation(line: 960, column: 59, scope: !3895)
!3910 = !DILocation(line: 960, column: 67, scope: !3895)
!3911 = !DILocation(line: 960, column: 73, scope: !3895)
!3912 = !DILocation(line: 961, column: 53, scope: !3895)
!3913 = !DILocation(line: 961, column: 59, scope: !3895)
!3914 = !DILocation(line: 961, column: 63, scope: !3895)
!3915 = !DILocation(line: 961, column: 66, scope: !3895)
!3916 = !DILocation(line: 960, column: 26, scope: !3895)
!3917 = !DILocalVariable(name: "dist_pos", scope: !3895, file: !3, line: 962, type: !191)
!3918 = !DILocation(line: 962, column: 12, scope: !3895)
!3919 = !DILocalVariable(name: "dist_neg", scope: !3895, file: !3, line: 963, type: !191)
!3920 = !DILocation(line: 963, column: 12, scope: !3895)
!3921 = !DILocalVariable(name: "co_pos", scope: !3895, file: !3, line: 964, type: !420)
!3922 = !DILocation(line: 964, column: 12, scope: !3895)
!3923 = !DILocalVariable(name: "co_neg", scope: !3895, file: !3, line: 965, type: !420)
!3924 = !DILocation(line: 965, column: 12, scope: !3895)
!3925 = !DILocalVariable(name: "u", scope: !3895, file: !3, line: 966, type: !191)
!3926 = !DILocation(line: 966, column: 12, scope: !3895)
!3927 = !DILocation(line: 968, column: 10, scope: !3928)
!3928 = distinct !DILexicalBlock(scope: !3895, file: !3, line: 968, column: 10)
!3929 = !DILocation(line: 968, column: 16, scope: !3928)
!3930 = !DILocation(line: 968, column: 23, scope: !3928)
!3931 = !DILocation(line: 968, column: 26, scope: !3928)
!3932 = !DILocation(line: 968, column: 32, scope: !3928)
!3933 = !DILocation(line: 968, column: 10, scope: !3895)
!3934 = !DILocation(line: 969, column: 33, scope: !3935)
!3935 = distinct !DILexicalBlock(scope: !3928, file: !3, line: 968, column: 40)
!3936 = !DILocation(line: 969, column: 39, scope: !3935)
!3937 = !DILocation(line: 969, column: 47, scope: !3935)
!3938 = !DILocation(line: 969, column: 53, scope: !3935)
!3939 = !DILocation(line: 969, column: 60, scope: !3935)
!3940 = !DILocation(line: 969, column: 67, scope: !3935)
!3941 = !DILocation(line: 969, column: 7, scope: !3935)
!3942 = !DILocation(line: 970, column: 35, scope: !3935)
!3943 = !DILocation(line: 970, column: 42, scope: !3935)
!3944 = !DILocation(line: 970, column: 18, scope: !3935)
!3945 = !DILocation(line: 970, column: 16, scope: !3935)
!3946 = !DILocation(line: 971, column: 6, scope: !3935)
!3947 = !DILocation(line: 973, column: 10, scope: !3948)
!3948 = distinct !DILexicalBlock(scope: !3895, file: !3, line: 973, column: 10)
!3949 = !DILocation(line: 973, column: 16, scope: !3948)
!3950 = !DILocation(line: 973, column: 23, scope: !3948)
!3951 = !DILocation(line: 973, column: 26, scope: !3948)
!3952 = !DILocation(line: 973, column: 32, scope: !3948)
!3953 = !DILocation(line: 973, column: 10, scope: !3895)
!3954 = !DILocation(line: 974, column: 33, scope: !3955)
!3955 = distinct !DILexicalBlock(scope: !3948, file: !3, line: 973, column: 40)
!3956 = !DILocation(line: 974, column: 39, scope: !3955)
!3957 = !DILocation(line: 974, column: 47, scope: !3955)
!3958 = !DILocation(line: 974, column: 53, scope: !3955)
!3959 = !DILocation(line: 974, column: 60, scope: !3955)
!3960 = !DILocation(line: 974, column: 67, scope: !3955)
!3961 = !DILocation(line: 974, column: 7, scope: !3955)
!3962 = !DILocation(line: 975, column: 35, scope: !3955)
!3963 = !DILocation(line: 975, column: 42, scope: !3955)
!3964 = !DILocation(line: 975, column: 18, scope: !3955)
!3965 = !DILocation(line: 975, column: 16, scope: !3955)
!3966 = !DILocation(line: 976, column: 6, scope: !3955)
!3967 = !DILocation(line: 978, column: 10, scope: !3895)
!3968 = !DILocation(line: 978, column: 21, scope: !3895)
!3969 = !DILocation(line: 978, column: 19, scope: !3895)
!3970 = !DILocation(line: 978, column: 32, scope: !3895)
!3971 = !DILocation(line: 978, column: 40, scope: !3895)
!3972 = !DILocation(line: 978, column: 8, scope: !3895)
!3973 = !DILocation(line: 980, column: 10, scope: !3974)
!3974 = distinct !DILexicalBlock(scope: !3895, file: !3, line: 980, column: 10)
!3975 = !DILocation(line: 980, column: 12, scope: !3974)
!3976 = !DILocation(line: 980, column: 19, scope: !3974)
!3977 = !DILocation(line: 980, column: 22, scope: !3974)
!3978 = !DILocation(line: 980, column: 24, scope: !3974)
!3979 = !DILocation(line: 980, column: 10, scope: !3895)
!3980 = !DILocation(line: 981, column: 21, scope: !3981)
!3981 = distinct !DILexicalBlock(scope: !3974, file: !3, line: 980, column: 32)
!3982 = !DILocation(line: 981, column: 7, scope: !3981)
!3983 = !DILocation(line: 981, column: 13, scope: !3981)
!3984 = !DILocation(line: 981, column: 17, scope: !3981)
!3985 = !DILocation(line: 981, column: 19, scope: !3981)
!3986 = !DILocation(line: 983, column: 41, scope: !3981)
!3987 = !DILocation(line: 983, column: 47, scope: !3981)
!3988 = !DILocation(line: 983, column: 54, scope: !3981)
!3989 = !DILocation(line: 983, column: 60, scope: !3981)
!3990 = !DILocation(line: 983, column: 18, scope: !3981)
!3991 = !DILocation(line: 983, column: 7, scope: !3981)
!3992 = !DILocation(line: 983, column: 13, scope: !3981)
!3993 = !DILocation(line: 983, column: 16, scope: !3981)
!3994 = !DILocation(line: 984, column: 17, scope: !3981)
!3995 = !DILocation(line: 984, column: 23, scope: !3981)
!3996 = !DILocation(line: 984, column: 27, scope: !3981)
!3997 = !DILocation(line: 984, column: 14, scope: !3981)
!3998 = !DILocation(line: 985, column: 52, scope: !3981)
!3999 = !DILocation(line: 985, column: 58, scope: !3981)
!4000 = !DILocation(line: 985, column: 66, scope: !3981)
!4001 = !DILocation(line: 985, column: 72, scope: !3981)
!4002 = !DILocation(line: 985, column: 79, scope: !3981)
!4003 = !DILocation(line: 985, column: 23, scope: !3981)
!4004 = !DILocation(line: 985, column: 21, scope: !3981)
!4005 = !DILocation(line: 986, column: 11, scope: !4006)
!4006 = distinct !DILexicalBlock(scope: !3981, file: !3, line: 986, column: 11)
!4007 = !DILocation(line: 986, column: 25, scope: !4006)
!4008 = !DILocation(line: 986, column: 11, scope: !3981)
!4009 = !DILocation(line: 987, column: 31, scope: !4010)
!4010 = distinct !DILexicalBlock(scope: !4006, file: !3, line: 986, column: 34)
!4011 = !DILocation(line: 987, column: 29, scope: !4010)
!4012 = !DILocation(line: 987, column: 22, scope: !4010)
!4013 = !DILocation(line: 988, column: 7, scope: !4010)
!4014 = !DILocation(line: 990, column: 29, scope: !3981)
!4015 = !DILocation(line: 990, column: 35, scope: !3981)
!4016 = !DILocation(line: 990, column: 43, scope: !3981)
!4017 = !DILocation(line: 990, column: 49, scope: !3981)
!4018 = !DILocation(line: 990, column: 56, scope: !3981)
!4019 = !DILocation(line: 990, column: 62, scope: !3981)
!4020 = !DILocation(line: 990, column: 66, scope: !3981)
!4021 = !DILocation(line: 990, column: 69, scope: !3981)
!4022 = !DILocation(line: 990, column: 7, scope: !3981)
!4023 = !DILocation(line: 991, column: 33, scope: !3981)
!4024 = !DILocation(line: 991, column: 39, scope: !3981)
!4025 = !DILocation(line: 991, column: 47, scope: !3981)
!4026 = !DILocation(line: 991, column: 53, scope: !3981)
!4027 = !DILocation(line: 991, column: 60, scope: !3981)
!4028 = !DILocation(line: 991, column: 66, scope: !3981)
!4029 = !DILocation(line: 991, column: 70, scope: !3981)
!4030 = !DILocation(line: 991, column: 73, scope: !3981)
!4031 = !DILocation(line: 991, column: 7, scope: !3981)
!4032 = !DILocation(line: 992, column: 6, scope: !3981)
!4033 = !DILocation(line: 993, column: 5, scope: !3895)
!4034 = !DILocation(line: 995, column: 16, scope: !4035)
!4035 = distinct !DILexicalBlock(scope: !3891, file: !3, line: 994, column: 10)
!4036 = !DILocation(line: 995, column: 22, scope: !4035)
!4037 = !DILocation(line: 995, column: 13, scope: !4035)
!4038 = !DILocation(line: 997, column: 17, scope: !4035)
!4039 = !DILocation(line: 997, column: 21, scope: !4035)
!4040 = !DILocation(line: 997, column: 27, scope: !4035)
!4041 = !DILocation(line: 997, column: 6, scope: !4035)
!4042 = !DILocation(line: 998, column: 17, scope: !4035)
!4043 = !DILocation(line: 998, column: 20, scope: !4035)
!4044 = !DILocation(line: 998, column: 26, scope: !4035)
!4045 = !DILocation(line: 998, column: 6, scope: !4035)
!4046 = !DILocation(line: 1001, column: 9, scope: !4047)
!4047 = distinct !DILexicalBlock(scope: !3862, file: !3, line: 1001, column: 9)
!4048 = !DILocation(line: 1001, column: 9, scope: !3862)
!4049 = !DILocation(line: 1002, column: 18, scope: !4050)
!4050 = distinct !DILexicalBlock(scope: !4047, file: !3, line: 1001, column: 17)
!4051 = !DILocation(line: 1002, column: 21, scope: !4050)
!4052 = !DILocation(line: 1002, column: 28, scope: !4050)
!4053 = !DILocation(line: 1002, column: 6, scope: !4050)
!4054 = !DILocation(line: 1003, column: 22, scope: !4050)
!4055 = !DILocation(line: 1003, column: 27, scope: !4050)
!4056 = !DILocation(line: 1003, column: 30, scope: !4050)
!4057 = !DILocation(line: 1003, column: 6, scope: !4050)
!4058 = !DILocation(line: 1005, column: 17, scope: !4050)
!4059 = !DILocation(line: 1005, column: 10, scope: !4050)
!4060 = !DILocation(line: 1005, column: 8, scope: !4050)
!4061 = !DILocation(line: 1007, column: 10, scope: !4062)
!4062 = distinct !DILexicalBlock(scope: !4050, file: !3, line: 1007, column: 10)
!4063 = !DILocation(line: 1007, column: 10, scope: !4050)
!4064 = !DILocalVariable(name: "delta", scope: !4065, file: !3, line: 1008, type: !191)
!4065 = distinct !DILexicalBlock(scope: !4062, file: !3, line: 1007, column: 30)
!4066 = !DILocation(line: 1008, column: 13, scope: !4065)
!4067 = !DILocation(line: 1010, column: 20, scope: !4068)
!4068 = distinct !DILexicalBlock(scope: !4065, file: !3, line: 1010, column: 11)
!4069 = !DILocation(line: 1010, column: 24, scope: !4068)
!4070 = !DILocation(line: 1010, column: 11, scope: !4068)
!4071 = !DILocation(line: 1010, column: 29, scope: !4068)
!4072 = !DILocation(line: 1010, column: 11, scope: !4065)
!4073 = !DILocation(line: 1011, column: 13, scope: !4068)
!4074 = !DILocation(line: 1011, column: 12, scope: !4068)
!4075 = !DILocation(line: 1011, column: 10, scope: !4068)
!4076 = !DILocation(line: 1011, column: 8, scope: !4068)
!4077 = !DILocation(line: 1013, column: 15, scope: !4065)
!4078 = !DILocation(line: 1013, column: 19, scope: !4065)
!4079 = !DILocation(line: 1013, column: 25, scope: !4065)
!4080 = !DILocation(line: 1013, column: 34, scope: !4065)
!4081 = !DILocation(line: 1013, column: 40, scope: !4065)
!4082 = !DILocation(line: 1013, column: 32, scope: !4065)
!4083 = !DILocation(line: 1013, column: 17, scope: !4065)
!4084 = !DILocation(line: 1013, column: 13, scope: !4065)
!4085 = !DILocation(line: 1015, column: 11, scope: !4086)
!4086 = distinct !DILexicalBlock(scope: !4065, file: !3, line: 1015, column: 11)
!4087 = !DILocation(line: 1015, column: 17, scope: !4086)
!4088 = !DILocation(line: 1015, column: 29, scope: !4086)
!4089 = !DILocation(line: 1015, column: 11, scope: !4065)
!4090 = !DILocation(line: 1019, column: 18, scope: !4091)
!4091 = distinct !DILexicalBlock(scope: !4086, file: !3, line: 1015, column: 38)
!4092 = !DILocation(line: 1019, column: 24, scope: !4091)
!4093 = !DILocation(line: 1019, column: 9, scope: !4091)
!4094 = !DILocation(line: 1019, column: 16, scope: !4091)
!4095 = !DILocation(line: 1021, column: 49, scope: !4091)
!4096 = !DILocation(line: 1021, column: 55, scope: !4091)
!4097 = !DILocation(line: 1021, column: 28, scope: !4091)
!4098 = !DILocation(line: 1021, column: 8, scope: !4091)
!4099 = !DILocation(line: 1021, column: 14, scope: !4091)
!4100 = !DILocation(line: 1021, column: 26, scope: !4091)
!4101 = !DILocation(line: 1022, column: 7, scope: !4091)
!4102 = !DILocation(line: 1024, column: 11, scope: !4103)
!4103 = distinct !DILexicalBlock(scope: !4065, file: !3, line: 1024, column: 11)
!4104 = !DILocation(line: 1024, column: 17, scope: !4103)
!4105 = !DILocation(line: 1024, column: 11, scope: !4065)
!4106 = !DILocation(line: 1025, column: 18, scope: !4107)
!4107 = distinct !DILexicalBlock(scope: !4103, file: !3, line: 1024, column: 37)
!4108 = !DILocation(line: 1025, column: 22, scope: !4107)
!4109 = !DILocation(line: 1025, column: 20, scope: !4107)
!4110 = !DILocation(line: 1025, column: 9, scope: !4107)
!4111 = !DILocation(line: 1025, column: 16, scope: !4107)
!4112 = !DILocation(line: 1026, column: 7, scope: !4107)
!4113 = !DILocation(line: 1028, column: 37, scope: !4065)
!4114 = !DILocation(line: 1028, column: 43, scope: !4065)
!4115 = !DILocation(line: 1028, column: 7, scope: !4065)
!4116 = !DILocation(line: 1029, column: 6, scope: !4065)
!4117 = !DILocation(line: 1031, column: 20, scope: !4118)
!4118 = distinct !DILexicalBlock(scope: !4119, file: !3, line: 1031, column: 11)
!4119 = distinct !DILexicalBlock(scope: !4062, file: !3, line: 1030, column: 11)
!4120 = !DILocation(line: 1031, column: 24, scope: !4118)
!4121 = !DILocation(line: 1031, column: 11, scope: !4118)
!4122 = !DILocation(line: 1031, column: 29, scope: !4118)
!4123 = !DILocation(line: 1031, column: 11, scope: !4119)
!4124 = !DILocation(line: 1032, column: 10, scope: !4118)
!4125 = !DILocation(line: 1032, column: 8, scope: !4118)
!4126 = !DILocation(line: 1034, column: 11, scope: !4127)
!4127 = distinct !DILexicalBlock(scope: !4119, file: !3, line: 1034, column: 11)
!4128 = !DILocation(line: 1034, column: 17, scope: !4127)
!4129 = !DILocation(line: 1034, column: 11, scope: !4119)
!4130 = !DILocation(line: 1036, column: 35, scope: !4131)
!4131 = distinct !DILexicalBlock(scope: !4127, file: !3, line: 1034, column: 30)
!4132 = !DILocation(line: 1036, column: 8, scope: !4131)
!4133 = !DILocation(line: 1038, column: 29, scope: !4131)
!4134 = !DILocation(line: 1038, column: 35, scope: !4131)
!4135 = !DILocation(line: 1038, column: 8, scope: !4131)
!4136 = !DILocation(line: 1039, column: 8, scope: !4131)
!4137 = !DILocation(line: 1039, column: 14, scope: !4131)
!4138 = !DILocation(line: 1039, column: 26, scope: !4131)
!4139 = !DILocation(line: 1040, column: 7, scope: !4131)
!4140 = !DILocation(line: 1042, column: 11, scope: !4141)
!4141 = distinct !DILexicalBlock(scope: !4119, file: !3, line: 1042, column: 11)
!4142 = !DILocation(line: 1042, column: 25, scope: !4141)
!4143 = !DILocation(line: 1042, column: 11, scope: !4119)
!4144 = !DILocation(line: 1043, column: 18, scope: !4145)
!4145 = distinct !DILexicalBlock(scope: !4141, file: !3, line: 1042, column: 34)
!4146 = !DILocation(line: 1043, column: 22, scope: !4145)
!4147 = !DILocation(line: 1043, column: 20, scope: !4145)
!4148 = !DILocation(line: 1043, column: 9, scope: !4145)
!4149 = !DILocation(line: 1043, column: 16, scope: !4145)
!4150 = !DILocation(line: 1044, column: 7, scope: !4145)
!4151 = !DILocation(line: 1047, column: 17, scope: !4050)
!4152 = !DILocation(line: 1047, column: 23, scope: !4050)
!4153 = !DILocation(line: 1047, column: 43, scope: !4050)
!4154 = !DILocation(line: 1047, column: 6, scope: !4050)
!4155 = !DILocation(line: 1048, column: 5, scope: !4050)
!4156 = !DILocation(line: 1049, column: 4, scope: !3862)
!4157 = !DILocation(line: 1050, column: 13, scope: !4158)
!4158 = distinct !DILexicalBlock(scope: !3857, file: !3, line: 1050, column: 13)
!4159 = !DILocation(line: 1050, column: 19, scope: !4158)
!4160 = !DILocation(line: 1050, column: 26, scope: !4158)
!4161 = !DILocation(line: 1050, column: 13, scope: !3857)
!4162 = !DILocalVariable(name: "i", scope: !4163, file: !3, line: 1051, type: !22)
!4163 = distinct !DILexicalBlock(scope: !4158, file: !3, line: 1050, column: 50)
!4164 = !DILocation(line: 1051, column: 9, scope: !4163)
!4165 = !DILocation(line: 1053, column: 9, scope: !4166)
!4166 = distinct !DILexicalBlock(scope: !4163, file: !3, line: 1053, column: 9)
!4167 = !DILocation(line: 1053, column: 15, scope: !4166)
!4168 = !DILocation(line: 1053, column: 27, scope: !4166)
!4169 = !DILocation(line: 1053, column: 9, scope: !4163)
!4170 = !DILocation(line: 1054, column: 47, scope: !4171)
!4171 = distinct !DILexicalBlock(scope: !4166, file: !3, line: 1053, column: 36)
!4172 = !DILocation(line: 1054, column: 53, scope: !4171)
!4173 = !DILocation(line: 1054, column: 26, scope: !4171)
!4174 = !DILocation(line: 1054, column: 6, scope: !4171)
!4175 = !DILocation(line: 1054, column: 12, scope: !4171)
!4176 = !DILocation(line: 1054, column: 24, scope: !4171)
!4177 = !DILocation(line: 1055, column: 5, scope: !4171)
!4178 = !DILocation(line: 1057, column: 12, scope: !4179)
!4179 = distinct !DILexicalBlock(scope: !4163, file: !3, line: 1057, column: 5)
!4180 = !DILocation(line: 1057, column: 10, scope: !4179)
!4181 = !DILocation(line: 1057, column: 17, scope: !4182)
!4182 = distinct !DILexicalBlock(scope: !4179, file: !3, line: 1057, column: 5)
!4183 = !DILocation(line: 1057, column: 21, scope: !4182)
!4184 = !DILocation(line: 1057, column: 27, scope: !4182)
!4185 = !DILocation(line: 1057, column: 35, scope: !4182)
!4186 = !DILocation(line: 1057, column: 19, scope: !4182)
!4187 = !DILocation(line: 1057, column: 5, scope: !4179)
!4188 = !DILocalVariable(name: "point", scope: !4189, file: !3, line: 1058, type: !2144)
!4189 = distinct !DILexicalBlock(scope: !4182, file: !3, line: 1057, column: 51)
!4190 = !DILocation(line: 1058, column: 23, scope: !4189)
!4191 = !DILocation(line: 1058, column: 32, scope: !4189)
!4192 = !DILocation(line: 1058, column: 38, scope: !4189)
!4193 = !DILocation(line: 1058, column: 46, scope: !4189)
!4194 = !DILocation(line: 1058, column: 53, scope: !4189)
!4195 = !DILocation(line: 1059, column: 16, scope: !4189)
!4196 = !DILocation(line: 1059, column: 23, scope: !4189)
!4197 = !DILocation(line: 1059, column: 28, scope: !4189)
!4198 = !DILocation(line: 1059, column: 36, scope: !4189)
!4199 = !DILocation(line: 1059, column: 6, scope: !4189)
!4200 = !DILocation(line: 1060, column: 16, scope: !4189)
!4201 = !DILocation(line: 1060, column: 23, scope: !4189)
!4202 = !DILocation(line: 1060, column: 28, scope: !4189)
!4203 = !DILocation(line: 1060, column: 36, scope: !4189)
!4204 = !DILocation(line: 1060, column: 6, scope: !4189)
!4205 = !DILocation(line: 1061, column: 16, scope: !4189)
!4206 = !DILocation(line: 1061, column: 23, scope: !4189)
!4207 = !DILocation(line: 1061, column: 28, scope: !4189)
!4208 = !DILocation(line: 1061, column: 36, scope: !4189)
!4209 = !DILocation(line: 1061, column: 6, scope: !4189)
!4210 = !DILocation(line: 1062, column: 5, scope: !4189)
!4211 = !DILocation(line: 1057, column: 47, scope: !4182)
!4212 = !DILocation(line: 1057, column: 5, scope: !4182)
!4213 = distinct !{!4213, !4187, !4214}
!4214 = !DILocation(line: 1062, column: 5, scope: !4179)
!4215 = !DILocation(line: 1063, column: 4, scope: !4163)
!4216 = !DILocation(line: 1065, column: 26, scope: !3695)
!4217 = !DILocation(line: 1065, column: 50, scope: !3695)
!4218 = !DILocation(line: 1065, column: 56, scope: !3695)
!4219 = !DILocation(line: 1065, column: 4, scope: !3695)
!4220 = !DILocation(line: 1066, column: 23, scope: !3695)
!4221 = !DILocation(line: 1066, column: 29, scope: !3695)
!4222 = !DILocation(line: 1066, column: 35, scope: !3695)
!4223 = !DILocation(line: 1066, column: 4, scope: !3695)
!4224 = !DILocation(line: 1068, column: 4, scope: !3695)
!4225 = !DILocation(line: 1073, column: 8, scope: !4226)
!4226 = distinct !DILexicalBlock(scope: !3658, file: !3, line: 1073, column: 8)
!4227 = !DILocation(line: 1073, column: 15, scope: !4226)
!4228 = !DILocation(line: 1073, column: 23, scope: !4226)
!4229 = !DILocation(line: 1073, column: 29, scope: !4226)
!4230 = !DILocation(line: 1073, column: 20, scope: !4226)
!4231 = !DILocation(line: 1073, column: 47, scope: !4226)
!4232 = !DILocation(line: 1073, column: 50, scope: !4226)
!4233 = !DILocation(line: 1073, column: 57, scope: !4226)
!4234 = !DILocation(line: 1073, column: 61, scope: !4226)
!4235 = !DILocation(line: 1073, column: 8, scope: !3658)
!4236 = !DILocalVariable(name: "scene", scope: !4237, file: !3, line: 1074, type: !4238)
!4237 = distinct !DILexicalBlock(scope: !4226, file: !3, line: 1073, column: 76)
!4238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4239, size: 64)
!4239 = !DIDerivedType(tag: DW_TAG_typedef, name: "Scene", file: !154, line: 1299, baseType: !153)
!4240 = !DILocation(line: 1074, column: 12, scope: !4237)
!4241 = !DILocation(line: 1074, column: 35, scope: !4237)
!4242 = !DILocation(line: 1074, column: 20, scope: !4237)
!4243 = !DILocation(line: 1077, column: 10, scope: !4244)
!4244 = distinct !DILexicalBlock(scope: !4237, file: !3, line: 1077, column: 9)
!4245 = !DILocation(line: 1077, column: 16, scope: !4244)
!4246 = !DILocation(line: 1077, column: 23, scope: !4244)
!4247 = !DILocation(line: 1077, column: 47, scope: !4244)
!4248 = !DILocation(line: 1077, column: 50, scope: !4244)
!4249 = !DILocation(line: 1077, column: 56, scope: !4244)
!4250 = !DILocation(line: 0, scope: !4244)
!4251 = !DILocation(line: 1077, column: 60, scope: !4244)
!4252 = !DILocation(line: 1077, column: 9, scope: !4237)
!4253 = !DILocation(line: 1078, column: 10, scope: !4254)
!4254 = distinct !DILexicalBlock(scope: !4255, file: !3, line: 1078, column: 10)
!4255 = distinct !DILexicalBlock(scope: !4244, file: !3, line: 1077, column: 70)
!4256 = !DILocation(line: 1078, column: 10, scope: !4255)
!4257 = !DILocation(line: 1079, column: 36, scope: !4258)
!4258 = distinct !DILexicalBlock(scope: !4254, file: !3, line: 1078, column: 32)
!4259 = !DILocation(line: 1079, column: 42, scope: !4258)
!4260 = !DILocation(line: 1079, column: 51, scope: !4258)
!4261 = !DILocation(line: 1079, column: 7, scope: !4258)
!4262 = !DILocation(line: 1080, column: 6, scope: !4258)
!4263 = !DILocation(line: 1081, column: 5, scope: !4255)
!4264 = !DILocation(line: 1083, column: 9, scope: !4265)
!4265 = distinct !DILexicalBlock(scope: !4237, file: !3, line: 1083, column: 9)
!4266 = !DILocation(line: 1083, column: 15, scope: !4265)
!4267 = !DILocation(line: 1083, column: 9, scope: !4237)
!4268 = !DILocalVariable(name: "bezt", scope: !4269, file: !3, line: 1084, type: !2240)
!4269 = distinct !DILexicalBlock(scope: !4265, file: !3, line: 1083, column: 37)
!4270 = !DILocation(line: 1084, column: 17, scope: !4269)
!4271 = !DILocation(line: 1084, column: 25, scope: !4269)
!4272 = !DILocation(line: 1084, column: 31, scope: !4269)
!4273 = !DILocation(line: 1084, column: 38, scope: !4269)
!4274 = !DILocation(line: 1085, column: 27, scope: !4275)
!4275 = distinct !DILexicalBlock(scope: !4269, file: !3, line: 1085, column: 10)
!4276 = !DILocation(line: 1085, column: 33, scope: !4275)
!4277 = !DILocation(line: 1085, column: 41, scope: !4275)
!4278 = !DILocation(line: 1085, column: 47, scope: !4275)
!4279 = !DILocation(line: 1085, column: 10, scope: !4275)
!4280 = !DILocation(line: 1085, column: 55, scope: !4275)
!4281 = !DILocation(line: 1085, column: 10, scope: !4269)
!4282 = !DILocation(line: 1086, column: 7, scope: !4283)
!4283 = distinct !DILexicalBlock(scope: !4275, file: !3, line: 1085, column: 70)
!4284 = !DILocation(line: 1086, column: 13, scope: !4283)
!4285 = !DILocation(line: 1086, column: 16, scope: !4283)
!4286 = !DILocation(line: 1087, column: 6, scope: !4283)
!4287 = !DILocation(line: 1088, column: 27, scope: !4288)
!4288 = distinct !DILexicalBlock(scope: !4269, file: !3, line: 1088, column: 10)
!4289 = !DILocation(line: 1088, column: 33, scope: !4288)
!4290 = !DILocation(line: 1088, column: 41, scope: !4288)
!4291 = !DILocation(line: 1088, column: 47, scope: !4288)
!4292 = !DILocation(line: 1088, column: 10, scope: !4288)
!4293 = !DILocation(line: 1088, column: 55, scope: !4288)
!4294 = !DILocation(line: 1088, column: 10, scope: !4269)
!4295 = !DILocation(line: 1089, column: 7, scope: !4296)
!4296 = distinct !DILexicalBlock(scope: !4288, file: !3, line: 1088, column: 70)
!4297 = !DILocation(line: 1089, column: 13, scope: !4296)
!4298 = !DILocation(line: 1089, column: 16, scope: !4296)
!4299 = !DILocation(line: 1090, column: 6, scope: !4296)
!4300 = !DILocation(line: 1091, column: 5, scope: !4269)
!4301 = !DILocation(line: 1093, column: 27, scope: !4237)
!4302 = !DILocation(line: 1093, column: 51, scope: !4237)
!4303 = !DILocation(line: 1093, column: 57, scope: !4237)
!4304 = !DILocation(line: 1093, column: 5, scope: !4237)
!4305 = !DILocation(line: 1094, column: 24, scope: !4237)
!4306 = !DILocation(line: 1094, column: 30, scope: !4237)
!4307 = !DILocation(line: 1094, column: 36, scope: !4237)
!4308 = !DILocation(line: 1094, column: 5, scope: !4237)
!4309 = !DILocation(line: 1096, column: 27, scope: !4237)
!4310 = !DILocation(line: 1096, column: 31, scope: !4237)
!4311 = !DILocation(line: 1096, column: 5, scope: !4237)
!4312 = !DILocation(line: 1097, column: 5, scope: !4237)
!4313 = !DILocation(line: 1099, column: 13, scope: !4314)
!4314 = distinct !DILexicalBlock(scope: !4226, file: !3, line: 1099, column: 13)
!4315 = !DILocation(line: 1099, column: 20, scope: !4314)
!4316 = !DILocation(line: 1099, column: 28, scope: !4314)
!4317 = !DILocation(line: 1099, column: 34, scope: !4314)
!4318 = !DILocation(line: 1099, column: 25, scope: !4314)
!4319 = !DILocation(line: 1099, column: 52, scope: !4314)
!4320 = !DILocation(line: 1099, column: 55, scope: !4314)
!4321 = !DILocation(line: 1099, column: 62, scope: !4314)
!4322 = !DILocation(line: 1099, column: 66, scope: !4314)
!4323 = !DILocation(line: 1099, column: 13, scope: !4226)
!4324 = !DILocation(line: 1101, column: 4, scope: !4325)
!4325 = distinct !DILexicalBlock(scope: !4314, file: !3, line: 1099, column: 79)
!4326 = !DILocation(line: 1103, column: 5, scope: !4327)
!4327 = distinct !DILexicalBlock(scope: !4314, file: !3, line: 1102, column: 9)
!4328 = !DILocation(line: 1073, column: 64, scope: !4226)
!4329 = !DILocation(line: 1107, column: 23, scope: !3658)
!4330 = !DILocation(line: 1107, column: 27, scope: !3658)
!4331 = !DILocation(line: 1107, column: 4, scope: !3658)
!4332 = !DILocation(line: 1109, column: 26, scope: !3658)
!4333 = !DILocation(line: 1109, column: 50, scope: !3658)
!4334 = !DILocation(line: 1109, column: 56, scope: !3658)
!4335 = !DILocation(line: 1109, column: 4, scope: !3658)
!4336 = !DILocation(line: 1110, column: 23, scope: !3658)
!4337 = !DILocation(line: 1110, column: 29, scope: !3658)
!4338 = !DILocation(line: 1110, column: 35, scope: !3658)
!4339 = !DILocation(line: 1110, column: 4, scope: !3658)
!4340 = !DILocation(line: 1112, column: 26, scope: !3658)
!4341 = !DILocation(line: 1112, column: 30, scope: !3658)
!4342 = !DILocation(line: 1112, column: 4, scope: !3658)
!4343 = !DILocation(line: 1113, column: 4, scope: !3658)
!4344 = !DILocation(line: 1116, column: 2, scope: !3634)
!4345 = !DILocation(line: 1117, column: 1, scope: !3634)
!4346 = distinct !DISubprogram(name: "MASK_OT_slide_spline_curvature", scope: !3, file: !3, line: 1509, type: !4, scopeLine: 1510, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1817, retainedNodes: !2254)
!4347 = !DILocalVariable(name: "ot", arg: 1, scope: !4346, file: !3, line: 1509, type: !6)
!4348 = !DILocation(line: 1509, column: 53, scope: !4346)
!4349 = !DILocation(line: 1512, column: 2, scope: !4346)
!4350 = !DILocation(line: 1512, column: 6, scope: !4346)
!4351 = !DILocation(line: 1512, column: 11, scope: !4346)
!4352 = !DILocation(line: 1513, column: 2, scope: !4346)
!4353 = !DILocation(line: 1513, column: 6, scope: !4346)
!4354 = !DILocation(line: 1513, column: 18, scope: !4346)
!4355 = !DILocation(line: 1514, column: 2, scope: !4346)
!4356 = !DILocation(line: 1514, column: 6, scope: !4346)
!4357 = !DILocation(line: 1514, column: 13, scope: !4346)
!4358 = !DILocation(line: 1517, column: 2, scope: !4346)
!4359 = !DILocation(line: 1517, column: 6, scope: !4346)
!4360 = !DILocation(line: 1517, column: 13, scope: !4346)
!4361 = !DILocation(line: 1518, column: 2, scope: !4346)
!4362 = !DILocation(line: 1518, column: 6, scope: !4346)
!4363 = !DILocation(line: 1518, column: 12, scope: !4346)
!4364 = !DILocation(line: 1519, column: 2, scope: !4346)
!4365 = !DILocation(line: 1519, column: 6, scope: !4346)
!4366 = !DILocation(line: 1519, column: 11, scope: !4346)
!4367 = !DILocation(line: 1522, column: 2, scope: !4346)
!4368 = !DILocation(line: 1522, column: 6, scope: !4346)
!4369 = !DILocation(line: 1522, column: 11, scope: !4346)
!4370 = !DILocation(line: 1523, column: 1, scope: !4346)
!4371 = distinct !DISubprogram(name: "slide_spline_curvature_invoke", scope: !3, file: !3, line: 1283, type: !3577, scopeLine: 1284, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1817, retainedNodes: !2254)
!4372 = !DILocalVariable(name: "C", arg: 1, scope: !4371, file: !3, line: 1283, type: !3090)
!4373 = !DILocation(line: 1283, column: 52, scope: !4371)
!4374 = !DILocalVariable(name: "op", arg: 2, scope: !4371, file: !3, line: 1283, type: !3424)
!4375 = !DILocation(line: 1283, column: 67, scope: !4371)
!4376 = !DILocalVariable(name: "event", arg: 3, scope: !4371, file: !3, line: 1283, type: !3579)
!4377 = !DILocation(line: 1283, column: 86, scope: !4371)
!4378 = !DILocalVariable(name: "mask", scope: !4371, file: !3, line: 1285, type: !2120)
!4379 = !DILocation(line: 1285, column: 8, scope: !4371)
!4380 = !DILocation(line: 1285, column: 34, scope: !4371)
!4381 = !DILocation(line: 1285, column: 15, scope: !4371)
!4382 = !DILocalVariable(name: "slide_data", scope: !4371, file: !3, line: 1286, type: !2228)
!4383 = !DILocation(line: 1286, column: 28, scope: !4371)
!4384 = !DILocation(line: 1288, column: 6, scope: !4385)
!4385 = distinct !DILexicalBlock(scope: !4371, file: !3, line: 1288, column: 6)
!4386 = !DILocation(line: 1288, column: 11, scope: !4385)
!4387 = !DILocation(line: 1288, column: 6, scope: !4371)
!4388 = !DILocation(line: 1289, column: 3, scope: !4389)
!4389 = distinct !DILexicalBlock(scope: !4385, file: !3, line: 1288, column: 20)
!4390 = !DILocation(line: 1293, column: 36, scope: !4391)
!4391 = distinct !DILexicalBlock(scope: !4371, file: !3, line: 1293, column: 6)
!4392 = !DILocation(line: 1293, column: 39, scope: !4391)
!4393 = !DILocation(line: 1293, column: 7, scope: !4391)
!4394 = !DILocation(line: 1293, column: 6, scope: !4371)
!4395 = !DILocation(line: 1294, column: 3, scope: !4396)
!4396 = distinct !DILexicalBlock(scope: !4391, file: !3, line: 1293, column: 47)
!4397 = !DILocation(line: 1297, column: 49, scope: !4371)
!4398 = !DILocation(line: 1297, column: 52, scope: !4371)
!4399 = !DILocation(line: 1297, column: 15, scope: !4371)
!4400 = !DILocation(line: 1297, column: 13, scope: !4371)
!4401 = !DILocation(line: 1298, column: 6, scope: !4402)
!4402 = distinct !DILexicalBlock(scope: !4371, file: !3, line: 1298, column: 6)
!4403 = !DILocation(line: 1298, column: 17, scope: !4402)
!4404 = !DILocation(line: 1298, column: 6, scope: !4371)
!4405 = !DILocation(line: 1299, column: 20, scope: !4406)
!4406 = distinct !DILexicalBlock(scope: !4402, file: !3, line: 1298, column: 26)
!4407 = !DILocation(line: 1299, column: 3, scope: !4406)
!4408 = !DILocation(line: 1299, column: 7, scope: !4406)
!4409 = !DILocation(line: 1299, column: 18, scope: !4406)
!4410 = !DILocation(line: 1300, column: 30, scope: !4406)
!4411 = !DILocation(line: 1300, column: 33, scope: !4406)
!4412 = !DILocation(line: 1300, column: 3, scope: !4406)
!4413 = !DILocation(line: 1301, column: 25, scope: !4406)
!4414 = !DILocation(line: 1301, column: 49, scope: !4406)
!4415 = !DILocation(line: 1301, column: 3, scope: !4406)
!4416 = !DILocation(line: 1302, column: 3, scope: !4406)
!4417 = !DILocation(line: 1305, column: 2, scope: !4371)
!4418 = !DILocation(line: 1306, column: 1, scope: !4371)
!4419 = distinct !DISubprogram(name: "slide_spline_curvature_modal", scope: !3, file: !3, line: 1340, type: !3577, scopeLine: 1341, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1817, retainedNodes: !2254)
!4420 = !DILocalVariable(name: "C", arg: 1, scope: !4419, file: !3, line: 1340, type: !3090)
!4421 = !DILocation(line: 1340, column: 51, scope: !4419)
!4422 = !DILocalVariable(name: "op", arg: 2, scope: !4419, file: !3, line: 1340, type: !3424)
!4423 = !DILocation(line: 1340, column: 66, scope: !4419)
!4424 = !DILocalVariable(name: "event", arg: 3, scope: !4419, file: !3, line: 1340, type: !3579)
!4425 = !DILocation(line: 1340, column: 85, scope: !4419)
!4426 = !DILocalVariable(name: "scene", scope: !4419, file: !3, line: 1342, type: !4238)
!4427 = !DILocation(line: 1342, column: 9, scope: !4419)
!4428 = !DILocation(line: 1342, column: 32, scope: !4419)
!4429 = !DILocation(line: 1342, column: 17, scope: !4419)
!4430 = !DILocalVariable(name: "margin", scope: !4419, file: !3, line: 1343, type: !2276)
!4431 = !DILocation(line: 1343, column: 14, scope: !4419)
!4432 = !DILocalVariable(name: "slide_data", scope: !4419, file: !3, line: 1344, type: !2228)
!4433 = !DILocation(line: 1344, column: 28, scope: !4419)
!4434 = !DILocation(line: 1344, column: 70, scope: !4419)
!4435 = !DILocation(line: 1344, column: 74, scope: !4419)
!4436 = !DILocation(line: 1344, column: 41, scope: !4419)
!4437 = !DILocalVariable(name: "u", scope: !4419, file: !3, line: 1345, type: !191)
!4438 = !DILocation(line: 1345, column: 8, scope: !4419)
!4439 = !DILocation(line: 1345, column: 12, scope: !4419)
!4440 = !DILocation(line: 1345, column: 24, scope: !4419)
!4441 = !DILocation(line: 1347, column: 10, scope: !4419)
!4442 = !DILocation(line: 1347, column: 17, scope: !4419)
!4443 = !DILocation(line: 1347, column: 2, scope: !4419)
!4444 = !DILocation(line: 1352, column: 8, scope: !4445)
!4445 = distinct !DILexicalBlock(scope: !4446, file: !3, line: 1352, column: 8)
!4446 = distinct !DILexicalBlock(scope: !4419, file: !3, line: 1347, column: 23)
!4447 = !DILocation(line: 1352, column: 8, scope: !4446)
!4448 = !DILocation(line: 1353, column: 29, scope: !4449)
!4449 = distinct !DILexicalBlock(scope: !4445, file: !3, line: 1352, column: 56)
!4450 = !DILocation(line: 1353, column: 36, scope: !4449)
!4451 = !DILocation(line: 1353, column: 40, scope: !4449)
!4452 = !DILocation(line: 1353, column: 28, scope: !4449)
!4453 = !DILocation(line: 1353, column: 5, scope: !4449)
!4454 = !DILocation(line: 1353, column: 17, scope: !4449)
!4455 = !DILocation(line: 1353, column: 26, scope: !4449)
!4456 = !DILocation(line: 1354, column: 4, scope: !4449)
!4457 = !DILocation(line: 1356, column: 8, scope: !4458)
!4458 = distinct !DILexicalBlock(scope: !4446, file: !3, line: 1356, column: 8)
!4459 = !DILocation(line: 1356, column: 8, scope: !4446)
!4460 = !DILocation(line: 1357, column: 9, scope: !4461)
!4461 = distinct !DILexicalBlock(scope: !4462, file: !3, line: 1357, column: 9)
!4462 = distinct !DILexicalBlock(scope: !4458, file: !3, line: 1356, column: 54)
!4463 = !DILocation(line: 1357, column: 16, scope: !4461)
!4464 = !DILocation(line: 1357, column: 20, scope: !4461)
!4465 = !DILocation(line: 1357, column: 9, scope: !4462)
!4466 = !DILocation(line: 1358, column: 36, scope: !4467)
!4467 = distinct !DILexicalBlock(scope: !4461, file: !3, line: 1357, column: 33)
!4468 = !DILocation(line: 1358, column: 48, scope: !4467)
!4469 = !DILocation(line: 1358, column: 61, scope: !4467)
!4470 = !DILocation(line: 1358, column: 64, scope: !4467)
!4471 = !DILocation(line: 1358, column: 6, scope: !4467)
!4472 = !DILocation(line: 1358, column: 18, scope: !4467)
!4473 = !DILocation(line: 1358, column: 31, scope: !4467)
!4474 = !DILocation(line: 1358, column: 34, scope: !4467)
!4475 = !DILocation(line: 1359, column: 11, scope: !4476)
!4476 = distinct !DILexicalBlock(scope: !4467, file: !3, line: 1359, column: 10)
!4477 = !DILocation(line: 1359, column: 13, scope: !4476)
!4478 = !DILocation(line: 1359, column: 22, scope: !4476)
!4479 = !DILocation(line: 1359, column: 25, scope: !4476)
!4480 = !DILocation(line: 1359, column: 27, scope: !4476)
!4481 = !DILocation(line: 1359, column: 35, scope: !4476)
!4482 = !DILocation(line: 1359, column: 39, scope: !4476)
!4483 = !DILocation(line: 1359, column: 41, scope: !4476)
!4484 = !DILocation(line: 1359, column: 49, scope: !4476)
!4485 = !DILocation(line: 1359, column: 52, scope: !4476)
!4486 = !DILocation(line: 1359, column: 54, scope: !4476)
!4487 = !DILocation(line: 1359, column: 10, scope: !4467)
!4488 = !DILocation(line: 1360, column: 36, scope: !4489)
!4489 = distinct !DILexicalBlock(scope: !4476, file: !3, line: 1359, column: 72)
!4490 = !DILocation(line: 1360, column: 48, scope: !4489)
!4491 = !DILocation(line: 1360, column: 60, scope: !4489)
!4492 = !DILocation(line: 1360, column: 63, scope: !4489)
!4493 = !DILocation(line: 1360, column: 7, scope: !4489)
!4494 = !DILocation(line: 1360, column: 19, scope: !4489)
!4495 = !DILocation(line: 1360, column: 31, scope: !4489)
!4496 = !DILocation(line: 1360, column: 34, scope: !4489)
!4497 = !DILocation(line: 1361, column: 6, scope: !4489)
!4498 = !DILocation(line: 1362, column: 5, scope: !4467)
!4499 = !DILocation(line: 1363, column: 14, scope: !4500)
!4500 = distinct !DILexicalBlock(scope: !4461, file: !3, line: 1363, column: 14)
!4501 = !DILocation(line: 1363, column: 21, scope: !4500)
!4502 = !DILocation(line: 1363, column: 25, scope: !4500)
!4503 = !DILocation(line: 1363, column: 14, scope: !4461)
!4504 = !DILocation(line: 1364, column: 36, scope: !4505)
!4505 = distinct !DILexicalBlock(scope: !4500, file: !3, line: 1363, column: 40)
!4506 = !DILocation(line: 1364, column: 48, scope: !4505)
!4507 = !DILocation(line: 1364, column: 60, scope: !4505)
!4508 = !DILocation(line: 1364, column: 6, scope: !4505)
!4509 = !DILocation(line: 1364, column: 18, scope: !4505)
!4510 = !DILocation(line: 1364, column: 31, scope: !4505)
!4511 = !DILocation(line: 1364, column: 34, scope: !4505)
!4512 = !DILocation(line: 1365, column: 36, scope: !4505)
!4513 = !DILocation(line: 1365, column: 48, scope: !4505)
!4514 = !DILocation(line: 1365, column: 60, scope: !4505)
!4515 = !DILocation(line: 1365, column: 6, scope: !4505)
!4516 = !DILocation(line: 1365, column: 18, scope: !4505)
!4517 = !DILocation(line: 1365, column: 31, scope: !4505)
!4518 = !DILocation(line: 1365, column: 34, scope: !4505)
!4519 = !DILocation(line: 1366, column: 35, scope: !4505)
!4520 = !DILocation(line: 1366, column: 47, scope: !4505)
!4521 = !DILocation(line: 1366, column: 65, scope: !4505)
!4522 = !DILocation(line: 1366, column: 6, scope: !4505)
!4523 = !DILocation(line: 1366, column: 18, scope: !4505)
!4524 = !DILocation(line: 1366, column: 30, scope: !4505)
!4525 = !DILocation(line: 1366, column: 33, scope: !4505)
!4526 = !DILocation(line: 1367, column: 35, scope: !4505)
!4527 = !DILocation(line: 1367, column: 47, scope: !4505)
!4528 = !DILocation(line: 1367, column: 65, scope: !4505)
!4529 = !DILocation(line: 1367, column: 6, scope: !4505)
!4530 = !DILocation(line: 1367, column: 18, scope: !4505)
!4531 = !DILocation(line: 1367, column: 30, scope: !4505)
!4532 = !DILocation(line: 1367, column: 33, scope: !4505)
!4533 = !DILocation(line: 1368, column: 5, scope: !4505)
!4534 = !DILocation(line: 1370, column: 9, scope: !4535)
!4535 = distinct !DILexicalBlock(scope: !4462, file: !3, line: 1370, column: 9)
!4536 = !DILocation(line: 1370, column: 11, scope: !4535)
!4537 = !DILocation(line: 1370, column: 9, scope: !4462)
!4538 = !DILocation(line: 1371, column: 17, scope: !4539)
!4539 = distinct !DILexicalBlock(scope: !4535, file: !3, line: 1370, column: 19)
!4540 = !DILocation(line: 1371, column: 29, scope: !4539)
!4541 = !DILocation(line: 1371, column: 42, scope: !4539)
!4542 = !DILocation(line: 1371, column: 50, scope: !4539)
!4543 = !DILocation(line: 1371, column: 62, scope: !4539)
!4544 = !DILocation(line: 1371, column: 74, scope: !4539)
!4545 = !DILocation(line: 1371, column: 6, scope: !4539)
!4546 = !DILocation(line: 1372, column: 17, scope: !4539)
!4547 = !DILocation(line: 1372, column: 29, scope: !4539)
!4548 = !DILocation(line: 1372, column: 41, scope: !4539)
!4549 = !DILocation(line: 1372, column: 49, scope: !4539)
!4550 = !DILocation(line: 1372, column: 61, scope: !4539)
!4551 = !DILocation(line: 1372, column: 79, scope: !4539)
!4552 = !DILocation(line: 1372, column: 6, scope: !4539)
!4553 = !DILocation(line: 1373, column: 5, scope: !4539)
!4554 = !DILocation(line: 1375, column: 17, scope: !4555)
!4555 = distinct !DILexicalBlock(scope: !4535, file: !3, line: 1374, column: 10)
!4556 = !DILocation(line: 1375, column: 29, scope: !4555)
!4557 = !DILocation(line: 1375, column: 42, scope: !4555)
!4558 = !DILocation(line: 1375, column: 50, scope: !4555)
!4559 = !DILocation(line: 1375, column: 62, scope: !4555)
!4560 = !DILocation(line: 1375, column: 74, scope: !4555)
!4561 = !DILocation(line: 1375, column: 6, scope: !4555)
!4562 = !DILocation(line: 1376, column: 17, scope: !4555)
!4563 = !DILocation(line: 1376, column: 29, scope: !4555)
!4564 = !DILocation(line: 1376, column: 41, scope: !4555)
!4565 = !DILocation(line: 1376, column: 49, scope: !4555)
!4566 = !DILocation(line: 1376, column: 61, scope: !4555)
!4567 = !DILocation(line: 1376, column: 79, scope: !4555)
!4568 = !DILocation(line: 1376, column: 6, scope: !4555)
!4569 = !DILocation(line: 1379, column: 4, scope: !4462)
!4570 = !DILocalVariable(name: "B", scope: !4571, file: !3, line: 1384, type: !420)
!4571 = distinct !DILexicalBlock(scope: !4446, file: !3, line: 1383, column: 3)
!4572 = !DILocation(line: 1384, column: 10, scope: !4571)
!4573 = !DILocalVariable(name: "mouse_coord", scope: !4571, file: !3, line: 1384, type: !420)
!4574 = !DILocation(line: 1384, column: 16, scope: !4571)
!4575 = !DILocalVariable(name: "delta", scope: !4571, file: !3, line: 1384, type: !420)
!4576 = !DILocation(line: 1384, column: 32, scope: !4571)
!4577 = !DILocation(line: 1387, column: 34, scope: !4571)
!4578 = !DILocation(line: 1387, column: 22, scope: !4571)
!4579 = !DILocation(line: 1387, column: 52, scope: !4571)
!4580 = !DILocation(line: 1387, column: 38, scope: !4571)
!4581 = !DILocation(line: 1387, column: 56, scope: !4571)
!4582 = !DILocation(line: 1387, column: 63, scope: !4571)
!4583 = !DILocation(line: 1387, column: 69, scope: !4571)
!4584 = !DILocation(line: 1387, column: 4, scope: !4571)
!4585 = !DILocation(line: 1388, column: 16, scope: !4571)
!4586 = !DILocation(line: 1388, column: 23, scope: !4571)
!4587 = !DILocation(line: 1388, column: 36, scope: !4571)
!4588 = !DILocation(line: 1388, column: 48, scope: !4571)
!4589 = !DILocation(line: 1388, column: 4, scope: !4571)
!4590 = !DILocation(line: 1389, column: 8, scope: !4591)
!4591 = distinct !DILexicalBlock(scope: !4571, file: !3, line: 1389, column: 8)
!4592 = !DILocation(line: 1389, column: 20, scope: !4591)
!4593 = !DILocation(line: 1389, column: 8, scope: !4571)
!4594 = !DILocation(line: 1390, column: 15, scope: !4595)
!4595 = distinct !DILexicalBlock(scope: !4591, file: !3, line: 1389, column: 30)
!4596 = !DILocation(line: 1390, column: 5, scope: !4595)
!4597 = !DILocation(line: 1391, column: 4, scope: !4595)
!4598 = !DILocation(line: 1392, column: 16, scope: !4571)
!4599 = !DILocation(line: 1392, column: 19, scope: !4571)
!4600 = !DILocation(line: 1392, column: 31, scope: !4571)
!4601 = !DILocation(line: 1392, column: 50, scope: !4571)
!4602 = !DILocation(line: 1392, column: 4, scope: !4571)
!4603 = !DILocation(line: 1393, column: 15, scope: !4571)
!4604 = !DILocation(line: 1393, column: 27, scope: !4571)
!4605 = !DILocation(line: 1393, column: 46, scope: !4571)
!4606 = !DILocation(line: 1393, column: 4, scope: !4571)
!4607 = !DILocation(line: 1394, column: 15, scope: !4571)
!4608 = !DILocation(line: 1394, column: 27, scope: !4571)
!4609 = !DILocation(line: 1394, column: 45, scope: !4571)
!4610 = !DILocation(line: 1394, column: 4, scope: !4571)
!4611 = !DILocation(line: 1396, column: 8, scope: !4612)
!4612 = distinct !DILexicalBlock(scope: !4571, file: !3, line: 1396, column: 8)
!4613 = !DILocation(line: 1396, column: 10, scope: !4612)
!4614 = !DILocation(line: 1396, column: 8, scope: !4571)
!4615 = !DILocalVariable(name: "oldP2", scope: !4616, file: !3, line: 1397, type: !420)
!4616 = distinct !DILexicalBlock(scope: !4612, file: !3, line: 1396, column: 18)
!4617 = !DILocation(line: 1397, column: 11, scope: !4616)
!4618 = !DILocalVariable(name: "need_restore_P2", scope: !4616, file: !3, line: 1398, type: !1017)
!4619 = !DILocation(line: 1398, column: 10, scope: !4616)
!4620 = !DILocation(line: 1400, column: 9, scope: !4621)
!4621 = distinct !DILexicalBlock(scope: !4616, file: !3, line: 1400, column: 9)
!4622 = !DILocation(line: 1400, column: 11, scope: !4621)
!4623 = !DILocation(line: 1400, column: 9, scope: !4616)
!4624 = !DILocalVariable(name: "solution", scope: !4625, file: !3, line: 1401, type: !420)
!4625 = distinct !DILexicalBlock(scope: !4621, file: !3, line: 1400, column: 21)
!4626 = !DILocation(line: 1401, column: 12, scope: !4625)
!4627 = !DILocalVariable(name: "x", scope: !4625, file: !3, line: 1402, type: !191)
!4628 = !DILocation(line: 1402, column: 12, scope: !4625)
!4629 = !DILocation(line: 1402, column: 17, scope: !4625)
!4630 = !DILocation(line: 1402, column: 19, scope: !4625)
!4631 = !DILocation(line: 1402, column: 29, scope: !4625)
!4632 = !DILocation(line: 1402, column: 36, scope: !4625)
!4633 = !DILocalVariable(name: "weight", scope: !4625, file: !3, line: 1403, type: !191)
!4634 = !DILocation(line: 1403, column: 12, scope: !4625)
!4635 = !DILocation(line: 1403, column: 27, scope: !4625)
!4636 = !DILocation(line: 1403, column: 25, scope: !4625)
!4637 = !DILocation(line: 1403, column: 31, scope: !4625)
!4638 = !DILocation(line: 1403, column: 29, scope: !4625)
!4639 = !DILocation(line: 1403, column: 39, scope: !4625)
!4640 = !DILocation(line: 1403, column: 37, scope: !4625)
!4641 = !DILocation(line: 1403, column: 43, scope: !4625)
!4642 = !DILocation(line: 1403, column: 41, scope: !4625)
!4643 = !DILocation(line: 1403, column: 47, scope: !4625)
!4644 = !DILocation(line: 1403, column: 45, scope: !4625)
!4645 = !DILocation(line: 1403, column: 33, scope: !4625)
!4646 = !DILocation(line: 1405, column: 28, scope: !4625)
!4647 = !DILocation(line: 1405, column: 31, scope: !4625)
!4648 = !DILocation(line: 1406, column: 28, scope: !4625)
!4649 = !DILocation(line: 1406, column: 40, scope: !4625)
!4650 = !DILocation(line: 1407, column: 28, scope: !4625)
!4651 = !DILocation(line: 1407, column: 40, scope: !4625)
!4652 = !DILocation(line: 1408, column: 28, scope: !4625)
!4653 = !DILocation(line: 1408, column: 40, scope: !4625)
!4654 = !DILocation(line: 1409, column: 28, scope: !4625)
!4655 = !DILocation(line: 1405, column: 6, scope: !4625)
!4656 = !DILocation(line: 1411, column: 17, scope: !4625)
!4657 = !DILocation(line: 1411, column: 24, scope: !4625)
!4658 = !DILocation(line: 1411, column: 36, scope: !4625)
!4659 = !DILocation(line: 1411, column: 6, scope: !4625)
!4660 = !DILocation(line: 1412, column: 21, scope: !4625)
!4661 = !DILocation(line: 1412, column: 33, scope: !4625)
!4662 = !DILocation(line: 1412, column: 37, scope: !4625)
!4663 = !DILocation(line: 1412, column: 49, scope: !4625)
!4664 = !DILocation(line: 1412, column: 53, scope: !4625)
!4665 = !DILocation(line: 1412, column: 63, scope: !4625)
!4666 = !DILocation(line: 1412, column: 6, scope: !4625)
!4667 = !DILocation(line: 1413, column: 17, scope: !4625)
!4668 = !DILocation(line: 1413, column: 29, scope: !4625)
!4669 = !DILocation(line: 1413, column: 41, scope: !4625)
!4670 = !DILocation(line: 1413, column: 49, scope: !4625)
!4671 = !DILocation(line: 1413, column: 61, scope: !4625)
!4672 = !DILocation(line: 1413, column: 6, scope: !4625)
!4673 = !DILocation(line: 1414, column: 22, scope: !4625)
!4674 = !DILocation(line: 1417, column: 10, scope: !4675)
!4675 = distinct !DILexicalBlock(scope: !4625, file: !3, line: 1417, column: 10)
!4676 = !DILocation(line: 1417, column: 17, scope: !4675)
!4677 = !DILocation(line: 1417, column: 10, scope: !4625)
!4678 = !DILocation(line: 1418, column: 11, scope: !4679)
!4679 = distinct !DILexicalBlock(scope: !4680, file: !3, line: 1418, column: 11)
!4680 = distinct !DILexicalBlock(scope: !4675, file: !3, line: 1417, column: 25)
!4681 = !DILocation(line: 1418, column: 23, scope: !4679)
!4682 = !DILocation(line: 1418, column: 35, scope: !4679)
!4683 = !DILocation(line: 1418, column: 38, scope: !4679)
!4684 = !DILocation(line: 1418, column: 11, scope: !4680)
!4685 = !DILocation(line: 1419, column: 8, scope: !4686)
!4686 = distinct !DILexicalBlock(scope: !4679, file: !3, line: 1418, column: 50)
!4687 = !DILocation(line: 1419, column: 20, scope: !4686)
!4688 = !DILocation(line: 1419, column: 32, scope: !4686)
!4689 = !DILocation(line: 1419, column: 35, scope: !4686)
!4690 = !DILocation(line: 1420, column: 7, scope: !4686)
!4691 = !DILocation(line: 1421, column: 6, scope: !4680)
!4692 = !DILocation(line: 1422, column: 5, scope: !4625)
!4693 = !DILocation(line: 1424, column: 27, scope: !4616)
!4694 = !DILocation(line: 1424, column: 30, scope: !4616)
!4695 = !DILocation(line: 1425, column: 27, scope: !4616)
!4696 = !DILocation(line: 1425, column: 39, scope: !4616)
!4697 = !DILocation(line: 1426, column: 27, scope: !4616)
!4698 = !DILocation(line: 1426, column: 39, scope: !4616)
!4699 = !DILocation(line: 1427, column: 27, scope: !4616)
!4700 = !DILocation(line: 1427, column: 39, scope: !4616)
!4701 = !DILocation(line: 1428, column: 27, scope: !4616)
!4702 = !DILocation(line: 1428, column: 39, scope: !4616)
!4703 = !DILocation(line: 1428, column: 52, scope: !4616)
!4704 = !DILocation(line: 1424, column: 5, scope: !4616)
!4705 = !DILocation(line: 1430, column: 9, scope: !4706)
!4706 = distinct !DILexicalBlock(scope: !4616, file: !3, line: 1430, column: 9)
!4707 = !DILocation(line: 1430, column: 9, scope: !4616)
!4708 = !DILocation(line: 1431, column: 17, scope: !4709)
!4709 = distinct !DILexicalBlock(scope: !4706, file: !3, line: 1430, column: 26)
!4710 = !DILocation(line: 1431, column: 29, scope: !4709)
!4711 = !DILocation(line: 1431, column: 33, scope: !4709)
!4712 = !DILocation(line: 1431, column: 6, scope: !4709)
!4713 = !DILocation(line: 1432, column: 5, scope: !4709)
!4714 = !DILocation(line: 1433, column: 4, scope: !4616)
!4715 = !DILocalVariable(name: "oldP1", scope: !4716, file: !3, line: 1435, type: !420)
!4716 = distinct !DILexicalBlock(scope: !4612, file: !3, line: 1434, column: 9)
!4717 = !DILocation(line: 1435, column: 11, scope: !4716)
!4718 = !DILocalVariable(name: "need_restore_P1", scope: !4716, file: !3, line: 1436, type: !1017)
!4719 = !DILocation(line: 1436, column: 10, scope: !4716)
!4720 = !DILocation(line: 1438, column: 9, scope: !4721)
!4721 = distinct !DILexicalBlock(scope: !4716, file: !3, line: 1438, column: 9)
!4722 = !DILocation(line: 1438, column: 11, scope: !4721)
!4723 = !DILocation(line: 1438, column: 9, scope: !4716)
!4724 = !DILocalVariable(name: "solution", scope: !4725, file: !3, line: 1439, type: !420)
!4725 = distinct !DILexicalBlock(scope: !4721, file: !3, line: 1438, column: 28)
!4726 = !DILocation(line: 1439, column: 12, scope: !4725)
!4727 = !DILocalVariable(name: "x", scope: !4725, file: !3, line: 1440, type: !191)
!4728 = !DILocation(line: 1440, column: 12, scope: !4725)
!4729 = !DILocation(line: 1440, column: 25, scope: !4725)
!4730 = !DILocation(line: 1440, column: 23, scope: !4725)
!4731 = !DILocation(line: 1440, column: 28, scope: !4725)
!4732 = !DILocation(line: 1440, column: 38, scope: !4725)
!4733 = !DILocation(line: 1440, column: 45, scope: !4725)
!4734 = !DILocalVariable(name: "weight", scope: !4725, file: !3, line: 1441, type: !191)
!4735 = !DILocation(line: 1441, column: 12, scope: !4725)
!4736 = !DILocation(line: 1441, column: 25, scope: !4725)
!4737 = !DILocation(line: 1441, column: 23, scope: !4725)
!4738 = !DILocation(line: 1441, column: 29, scope: !4725)
!4739 = !DILocation(line: 1441, column: 27, scope: !4725)
!4740 = !DILocation(line: 1441, column: 37, scope: !4725)
!4741 = !DILocation(line: 1441, column: 35, scope: !4725)
!4742 = !DILocation(line: 1441, column: 41, scope: !4725)
!4743 = !DILocation(line: 1441, column: 39, scope: !4725)
!4744 = !DILocation(line: 1441, column: 45, scope: !4725)
!4745 = !DILocation(line: 1441, column: 43, scope: !4725)
!4746 = !DILocation(line: 1441, column: 31, scope: !4725)
!4747 = !DILocation(line: 1443, column: 28, scope: !4725)
!4748 = !DILocation(line: 1443, column: 31, scope: !4725)
!4749 = !DILocation(line: 1444, column: 28, scope: !4725)
!4750 = !DILocation(line: 1444, column: 40, scope: !4725)
!4751 = !DILocation(line: 1445, column: 28, scope: !4725)
!4752 = !DILocation(line: 1445, column: 40, scope: !4725)
!4753 = !DILocation(line: 1446, column: 28, scope: !4725)
!4754 = !DILocation(line: 1446, column: 40, scope: !4725)
!4755 = !DILocation(line: 1447, column: 28, scope: !4725)
!4756 = !DILocation(line: 1443, column: 6, scope: !4725)
!4757 = !DILocation(line: 1449, column: 17, scope: !4725)
!4758 = !DILocation(line: 1449, column: 24, scope: !4725)
!4759 = !DILocation(line: 1449, column: 36, scope: !4725)
!4760 = !DILocation(line: 1449, column: 6, scope: !4725)
!4761 = !DILocation(line: 1450, column: 21, scope: !4725)
!4762 = !DILocation(line: 1450, column: 33, scope: !4725)
!4763 = !DILocation(line: 1450, column: 37, scope: !4725)
!4764 = !DILocation(line: 1450, column: 49, scope: !4725)
!4765 = !DILocation(line: 1450, column: 53, scope: !4725)
!4766 = !DILocation(line: 1450, column: 63, scope: !4725)
!4767 = !DILocation(line: 1450, column: 6, scope: !4725)
!4768 = !DILocation(line: 1451, column: 17, scope: !4725)
!4769 = !DILocation(line: 1451, column: 29, scope: !4725)
!4770 = !DILocation(line: 1451, column: 41, scope: !4725)
!4771 = !DILocation(line: 1451, column: 49, scope: !4725)
!4772 = !DILocation(line: 1451, column: 61, scope: !4725)
!4773 = !DILocation(line: 1451, column: 6, scope: !4725)
!4774 = !DILocation(line: 1452, column: 22, scope: !4725)
!4775 = !DILocation(line: 1455, column: 10, scope: !4776)
!4776 = distinct !DILexicalBlock(scope: !4725, file: !3, line: 1455, column: 10)
!4777 = !DILocation(line: 1455, column: 17, scope: !4776)
!4778 = !DILocation(line: 1455, column: 10, scope: !4725)
!4779 = !DILocation(line: 1456, column: 11, scope: !4780)
!4780 = distinct !DILexicalBlock(scope: !4781, file: !3, line: 1456, column: 11)
!4781 = distinct !DILexicalBlock(scope: !4776, file: !3, line: 1455, column: 25)
!4782 = !DILocation(line: 1456, column: 23, scope: !4780)
!4783 = !DILocation(line: 1456, column: 35, scope: !4780)
!4784 = !DILocation(line: 1456, column: 38, scope: !4780)
!4785 = !DILocation(line: 1456, column: 11, scope: !4781)
!4786 = !DILocation(line: 1457, column: 8, scope: !4787)
!4787 = distinct !DILexicalBlock(scope: !4780, file: !3, line: 1456, column: 50)
!4788 = !DILocation(line: 1457, column: 20, scope: !4787)
!4789 = !DILocation(line: 1457, column: 32, scope: !4787)
!4790 = !DILocation(line: 1457, column: 35, scope: !4787)
!4791 = !DILocation(line: 1458, column: 7, scope: !4787)
!4792 = !DILocation(line: 1459, column: 6, scope: !4781)
!4793 = !DILocation(line: 1460, column: 5, scope: !4725)
!4794 = !DILocation(line: 1462, column: 27, scope: !4716)
!4795 = !DILocation(line: 1462, column: 30, scope: !4716)
!4796 = !DILocation(line: 1463, column: 27, scope: !4716)
!4797 = !DILocation(line: 1463, column: 39, scope: !4716)
!4798 = !DILocation(line: 1464, column: 27, scope: !4716)
!4799 = !DILocation(line: 1464, column: 39, scope: !4716)
!4800 = !DILocation(line: 1465, column: 27, scope: !4716)
!4801 = !DILocation(line: 1465, column: 39, scope: !4716)
!4802 = !DILocation(line: 1466, column: 27, scope: !4716)
!4803 = !DILocation(line: 1466, column: 39, scope: !4716)
!4804 = !DILocation(line: 1466, column: 52, scope: !4716)
!4805 = !DILocation(line: 1462, column: 5, scope: !4716)
!4806 = !DILocation(line: 1468, column: 9, scope: !4807)
!4807 = distinct !DILexicalBlock(scope: !4716, file: !3, line: 1468, column: 9)
!4808 = !DILocation(line: 1468, column: 9, scope: !4716)
!4809 = !DILocation(line: 1469, column: 17, scope: !4810)
!4810 = distinct !DILexicalBlock(scope: !4807, file: !3, line: 1468, column: 26)
!4811 = !DILocation(line: 1469, column: 29, scope: !4810)
!4812 = !DILocation(line: 1469, column: 33, scope: !4810)
!4813 = !DILocation(line: 1469, column: 6, scope: !4810)
!4814 = !DILocation(line: 1470, column: 5, scope: !4810)
!4815 = !DILocation(line: 1473, column: 26, scope: !4571)
!4816 = !DILocation(line: 1473, column: 50, scope: !4571)
!4817 = !DILocation(line: 1473, column: 62, scope: !4571)
!4818 = !DILocation(line: 1473, column: 4, scope: !4571)
!4819 = !DILocation(line: 1474, column: 23, scope: !4571)
!4820 = !DILocation(line: 1474, column: 35, scope: !4571)
!4821 = !DILocation(line: 1474, column: 41, scope: !4571)
!4822 = !DILocation(line: 1474, column: 4, scope: !4571)
!4823 = !DILocation(line: 1476, column: 4, scope: !4571)
!4824 = !DILocation(line: 1481, column: 8, scope: !4825)
!4825 = distinct !DILexicalBlock(scope: !4446, file: !3, line: 1481, column: 8)
!4826 = !DILocation(line: 1481, column: 15, scope: !4825)
!4827 = !DILocation(line: 1481, column: 23, scope: !4825)
!4828 = !DILocation(line: 1481, column: 35, scope: !4825)
!4829 = !DILocation(line: 1481, column: 20, scope: !4825)
!4830 = !DILocation(line: 1481, column: 53, scope: !4825)
!4831 = !DILocation(line: 1481, column: 56, scope: !4825)
!4832 = !DILocation(line: 1481, column: 63, scope: !4825)
!4833 = !DILocation(line: 1481, column: 67, scope: !4825)
!4834 = !DILocation(line: 1481, column: 8, scope: !4446)
!4835 = !DILocation(line: 1483, column: 9, scope: !4836)
!4836 = distinct !DILexicalBlock(scope: !4837, file: !3, line: 1483, column: 9)
!4837 = distinct !DILexicalBlock(scope: !4825, file: !3, line: 1481, column: 82)
!4838 = !DILocation(line: 1483, column: 9, scope: !4837)
!4839 = !DILocation(line: 1484, column: 35, scope: !4840)
!4840 = distinct !DILexicalBlock(scope: !4836, file: !3, line: 1483, column: 31)
!4841 = !DILocation(line: 1484, column: 47, scope: !4840)
!4842 = !DILocation(line: 1484, column: 59, scope: !4840)
!4843 = !DILocation(line: 1484, column: 6, scope: !4840)
!4844 = !DILocation(line: 1485, column: 5, scope: !4840)
!4845 = !DILocation(line: 1487, column: 27, scope: !4837)
!4846 = !DILocation(line: 1487, column: 51, scope: !4837)
!4847 = !DILocation(line: 1487, column: 63, scope: !4837)
!4848 = !DILocation(line: 1487, column: 5, scope: !4837)
!4849 = !DILocation(line: 1488, column: 24, scope: !4837)
!4850 = !DILocation(line: 1488, column: 36, scope: !4837)
!4851 = !DILocation(line: 1488, column: 42, scope: !4837)
!4852 = !DILocation(line: 1488, column: 5, scope: !4837)
!4853 = !DILocation(line: 1490, column: 38, scope: !4837)
!4854 = !DILocation(line: 1490, column: 5, scope: !4837)
!4855 = !DILocation(line: 1491, column: 5, scope: !4837)
!4856 = !DILocation(line: 1494, column: 4, scope: !4446)
!4857 = !DILocation(line: 1497, column: 34, scope: !4446)
!4858 = !DILocation(line: 1497, column: 4, scope: !4446)
!4859 = !DILocation(line: 1499, column: 26, scope: !4446)
!4860 = !DILocation(line: 1499, column: 50, scope: !4446)
!4861 = !DILocation(line: 1499, column: 62, scope: !4446)
!4862 = !DILocation(line: 1499, column: 4, scope: !4446)
!4863 = !DILocation(line: 1500, column: 23, scope: !4446)
!4864 = !DILocation(line: 1500, column: 35, scope: !4446)
!4865 = !DILocation(line: 1500, column: 41, scope: !4446)
!4866 = !DILocation(line: 1500, column: 4, scope: !4446)
!4867 = !DILocation(line: 1502, column: 37, scope: !4446)
!4868 = !DILocation(line: 1502, column: 41, scope: !4446)
!4869 = !DILocation(line: 1502, column: 4, scope: !4446)
!4870 = !DILocation(line: 1503, column: 4, scope: !4446)
!4871 = !DILocation(line: 1506, column: 2, scope: !4419)
!4872 = !DILocation(line: 1507, column: 1, scope: !4419)
!4873 = distinct !DISubprogram(name: "MASK_OT_cyclic_toggle", scope: !3, file: !3, line: 1552, type: !4, scopeLine: 1553, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1817, retainedNodes: !2254)
!4874 = !DILocalVariable(name: "ot", arg: 1, scope: !4873, file: !3, line: 1552, type: !6)
!4875 = !DILocation(line: 1552, column: 44, scope: !4873)
!4876 = !DILocation(line: 1555, column: 2, scope: !4873)
!4877 = !DILocation(line: 1555, column: 6, scope: !4873)
!4878 = !DILocation(line: 1555, column: 11, scope: !4873)
!4879 = !DILocation(line: 1556, column: 2, scope: !4873)
!4880 = !DILocation(line: 1556, column: 6, scope: !4873)
!4881 = !DILocation(line: 1556, column: 18, scope: !4873)
!4882 = !DILocation(line: 1557, column: 2, scope: !4873)
!4883 = !DILocation(line: 1557, column: 6, scope: !4873)
!4884 = !DILocation(line: 1557, column: 13, scope: !4873)
!4885 = !DILocation(line: 1560, column: 2, scope: !4873)
!4886 = !DILocation(line: 1560, column: 6, scope: !4873)
!4887 = !DILocation(line: 1560, column: 11, scope: !4873)
!4888 = !DILocation(line: 1561, column: 2, scope: !4873)
!4889 = !DILocation(line: 1561, column: 6, scope: !4873)
!4890 = !DILocation(line: 1561, column: 11, scope: !4873)
!4891 = !DILocation(line: 1564, column: 2, scope: !4873)
!4892 = !DILocation(line: 1564, column: 6, scope: !4873)
!4893 = !DILocation(line: 1564, column: 11, scope: !4873)
!4894 = !DILocation(line: 1565, column: 1, scope: !4873)
!4895 = distinct !DISubprogram(name: "cyclic_toggle_exec", scope: !3, file: !3, line: 1527, type: !3422, scopeLine: 1528, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1817, retainedNodes: !2254)
!4896 = !DILocalVariable(name: "C", arg: 1, scope: !4895, file: !3, line: 1527, type: !3090)
!4897 = !DILocation(line: 1527, column: 41, scope: !4895)
!4898 = !DILocalVariable(name: "UNUSED_op", arg: 2, scope: !4895, file: !3, line: 1527, type: !3424)
!4899 = !DILocation(line: 1527, column: 56, scope: !4895)
!4900 = !DILocalVariable(name: "mask", scope: !4895, file: !3, line: 1529, type: !2120)
!4901 = !DILocation(line: 1529, column: 8, scope: !4895)
!4902 = !DILocation(line: 1529, column: 34, scope: !4895)
!4903 = !DILocation(line: 1529, column: 15, scope: !4895)
!4904 = !DILocalVariable(name: "masklay", scope: !4895, file: !3, line: 1530, type: !2123)
!4905 = !DILocation(line: 1530, column: 13, scope: !4895)
!4906 = !DILocation(line: 1532, column: 17, scope: !4907)
!4907 = distinct !DILexicalBlock(scope: !4895, file: !3, line: 1532, column: 2)
!4908 = !DILocation(line: 1532, column: 23, scope: !4907)
!4909 = !DILocation(line: 1532, column: 34, scope: !4907)
!4910 = !DILocation(line: 1532, column: 15, scope: !4907)
!4911 = !DILocation(line: 1532, column: 7, scope: !4907)
!4912 = !DILocation(line: 1532, column: 41, scope: !4913)
!4913 = distinct !DILexicalBlock(scope: !4907, file: !3, line: 1532, column: 2)
!4914 = !DILocation(line: 1532, column: 2, scope: !4907)
!4915 = !DILocalVariable(name: "spline", scope: !4916, file: !3, line: 1533, type: !2204)
!4916 = distinct !DILexicalBlock(scope: !4913, file: !3, line: 1532, column: 75)
!4917 = !DILocation(line: 1533, column: 15, scope: !4916)
!4918 = !DILocation(line: 1535, column: 7, scope: !4919)
!4919 = distinct !DILexicalBlock(scope: !4916, file: !3, line: 1535, column: 7)
!4920 = !DILocation(line: 1535, column: 16, scope: !4919)
!4921 = !DILocation(line: 1535, column: 29, scope: !4919)
!4922 = !DILocation(line: 1535, column: 7, scope: !4916)
!4923 = !DILocation(line: 1536, column: 4, scope: !4924)
!4924 = distinct !DILexicalBlock(scope: !4919, file: !3, line: 1535, column: 76)
!4925 = !DILocation(line: 1539, column: 17, scope: !4926)
!4926 = distinct !DILexicalBlock(scope: !4916, file: !3, line: 1539, column: 3)
!4927 = !DILocation(line: 1539, column: 26, scope: !4926)
!4928 = !DILocation(line: 1539, column: 34, scope: !4926)
!4929 = !DILocation(line: 1539, column: 15, scope: !4926)
!4930 = !DILocation(line: 1539, column: 8, scope: !4926)
!4931 = !DILocation(line: 1539, column: 41, scope: !4932)
!4932 = distinct !DILexicalBlock(scope: !4926, file: !3, line: 1539, column: 3)
!4933 = !DILocation(line: 1539, column: 3, scope: !4926)
!4934 = !DILocation(line: 1540, column: 36, scope: !4935)
!4935 = distinct !DILexicalBlock(scope: !4936, file: !3, line: 1540, column: 8)
!4936 = distinct !DILexicalBlock(scope: !4932, file: !3, line: 1539, column: 72)
!4937 = !DILocation(line: 1540, column: 8, scope: !4935)
!4938 = !DILocation(line: 1540, column: 8, scope: !4936)
!4939 = !DILocation(line: 1541, column: 5, scope: !4940)
!4940 = distinct !DILexicalBlock(scope: !4935, file: !3, line: 1540, column: 45)
!4941 = !DILocation(line: 1541, column: 13, scope: !4940)
!4942 = !DILocation(line: 1541, column: 18, scope: !4940)
!4943 = !DILocation(line: 1542, column: 4, scope: !4940)
!4944 = !DILocation(line: 1543, column: 3, scope: !4936)
!4945 = !DILocation(line: 1539, column: 58, scope: !4932)
!4946 = !DILocation(line: 1539, column: 66, scope: !4932)
!4947 = !DILocation(line: 1539, column: 56, scope: !4932)
!4948 = !DILocation(line: 1539, column: 3, scope: !4932)
!4949 = distinct !{!4949, !4933, !4950}
!4950 = !DILocation(line: 1543, column: 3, scope: !4926)
!4951 = !DILocation(line: 1544, column: 2, scope: !4916)
!4952 = !DILocation(line: 1532, column: 60, scope: !4913)
!4953 = !DILocation(line: 1532, column: 69, scope: !4913)
!4954 = !DILocation(line: 1532, column: 58, scope: !4913)
!4955 = !DILocation(line: 1532, column: 2, scope: !4913)
!4956 = distinct !{!4956, !4914, !4957}
!4957 = !DILocation(line: 1544, column: 2, scope: !4907)
!4958 = !DILocation(line: 1546, column: 21, scope: !4895)
!4959 = !DILocation(line: 1546, column: 27, scope: !4895)
!4960 = !DILocation(line: 1546, column: 2, scope: !4895)
!4961 = !DILocation(line: 1547, column: 24, scope: !4895)
!4962 = !DILocation(line: 1547, column: 48, scope: !4895)
!4963 = !DILocation(line: 1547, column: 2, scope: !4895)
!4964 = !DILocation(line: 1549, column: 2, scope: !4895)
!4965 = distinct !DISubprogram(name: "MASK_OT_delete", scope: !3, file: !3, line: 1707, type: !4, scopeLine: 1708, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1817, retainedNodes: !2254)
!4966 = !DILocalVariable(name: "ot", arg: 1, scope: !4965, file: !3, line: 1707, type: !6)
!4967 = !DILocation(line: 1707, column: 37, scope: !4965)
!4968 = !DILocation(line: 1710, column: 2, scope: !4965)
!4969 = !DILocation(line: 1710, column: 6, scope: !4965)
!4970 = !DILocation(line: 1710, column: 11, scope: !4965)
!4971 = !DILocation(line: 1711, column: 2, scope: !4965)
!4972 = !DILocation(line: 1711, column: 6, scope: !4965)
!4973 = !DILocation(line: 1711, column: 18, scope: !4965)
!4974 = !DILocation(line: 1712, column: 2, scope: !4965)
!4975 = !DILocation(line: 1712, column: 6, scope: !4965)
!4976 = !DILocation(line: 1712, column: 13, scope: !4965)
!4977 = !DILocation(line: 1715, column: 2, scope: !4965)
!4978 = !DILocation(line: 1715, column: 6, scope: !4965)
!4979 = !DILocation(line: 1715, column: 13, scope: !4965)
!4980 = !DILocation(line: 1716, column: 2, scope: !4965)
!4981 = !DILocation(line: 1716, column: 6, scope: !4965)
!4982 = !DILocation(line: 1716, column: 11, scope: !4965)
!4983 = !DILocation(line: 1717, column: 2, scope: !4965)
!4984 = !DILocation(line: 1717, column: 6, scope: !4965)
!4985 = !DILocation(line: 1717, column: 11, scope: !4965)
!4986 = !DILocation(line: 1720, column: 2, scope: !4965)
!4987 = !DILocation(line: 1720, column: 6, scope: !4965)
!4988 = !DILocation(line: 1720, column: 11, scope: !4965)
!4989 = !DILocation(line: 1721, column: 1, scope: !4965)
!4990 = distinct !DISubprogram(name: "delete_exec", scope: !3, file: !3, line: 1605, type: !3422, scopeLine: 1606, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1817, retainedNodes: !2254)
!4991 = !DILocalVariable(name: "C", arg: 1, scope: !4990, file: !3, line: 1605, type: !3090)
!4992 = !DILocation(line: 1605, column: 34, scope: !4990)
!4993 = !DILocalVariable(name: "UNUSED_op", arg: 2, scope: !4990, file: !3, line: 1605, type: !3424)
!4994 = !DILocation(line: 1605, column: 49, scope: !4990)
!4995 = !DILocalVariable(name: "scene", scope: !4990, file: !3, line: 1607, type: !4238)
!4996 = !DILocation(line: 1607, column: 9, scope: !4990)
!4997 = !DILocation(line: 1607, column: 32, scope: !4990)
!4998 = !DILocation(line: 1607, column: 17, scope: !4990)
!4999 = !DILocalVariable(name: "mask", scope: !4990, file: !3, line: 1608, type: !2120)
!5000 = !DILocation(line: 1608, column: 8, scope: !4990)
!5001 = !DILocation(line: 1608, column: 34, scope: !4990)
!5002 = !DILocation(line: 1608, column: 15, scope: !4990)
!5003 = !DILocalVariable(name: "masklay", scope: !4990, file: !3, line: 1609, type: !2123)
!5004 = !DILocation(line: 1609, column: 13, scope: !4990)
!5005 = !DILocalVariable(name: "changed", scope: !4990, file: !3, line: 1610, type: !1017)
!5006 = !DILocation(line: 1610, column: 7, scope: !4990)
!5007 = !DILocation(line: 1612, column: 17, scope: !5008)
!5008 = distinct !DILexicalBlock(scope: !4990, file: !3, line: 1612, column: 2)
!5009 = !DILocation(line: 1612, column: 23, scope: !5008)
!5010 = !DILocation(line: 1612, column: 34, scope: !5008)
!5011 = !DILocation(line: 1612, column: 15, scope: !5008)
!5012 = !DILocation(line: 1612, column: 7, scope: !5008)
!5013 = !DILocation(line: 1612, column: 41, scope: !5014)
!5014 = distinct !DILexicalBlock(scope: !5008, file: !3, line: 1612, column: 2)
!5015 = !DILocation(line: 1612, column: 2, scope: !5008)
!5016 = !DILocalVariable(name: "spline", scope: !5017, file: !3, line: 1613, type: !2204)
!5017 = distinct !DILexicalBlock(scope: !5014, file: !3, line: 1612, column: 75)
!5018 = !DILocation(line: 1613, column: 15, scope: !5017)
!5019 = !DILocalVariable(name: "mask_layer_shape_ofs", scope: !5017, file: !3, line: 1614, type: !22)
!5020 = !DILocation(line: 1614, column: 7, scope: !5017)
!5021 = !DILocation(line: 1616, column: 7, scope: !5022)
!5022 = distinct !DILexicalBlock(scope: !5017, file: !3, line: 1616, column: 7)
!5023 = !DILocation(line: 1616, column: 16, scope: !5022)
!5024 = !DILocation(line: 1616, column: 29, scope: !5022)
!5025 = !DILocation(line: 1616, column: 7, scope: !5017)
!5026 = !DILocation(line: 1617, column: 4, scope: !5027)
!5027 = distinct !DILexicalBlock(scope: !5022, file: !3, line: 1616, column: 76)
!5028 = !DILocation(line: 1620, column: 12, scope: !5017)
!5029 = !DILocation(line: 1620, column: 21, scope: !5017)
!5030 = !DILocation(line: 1620, column: 29, scope: !5017)
!5031 = !DILocation(line: 1620, column: 10, scope: !5017)
!5032 = !DILocation(line: 1622, column: 3, scope: !5017)
!5033 = !DILocation(line: 1622, column: 10, scope: !5017)
!5034 = !DILocalVariable(name: "tot_point_orig", scope: !5035, file: !3, line: 1623, type: !5036)
!5035 = distinct !DILexicalBlock(scope: !5017, file: !3, line: 1622, column: 18)
!5036 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !22)
!5037 = !DILocation(line: 1623, column: 14, scope: !5035)
!5038 = !DILocation(line: 1623, column: 31, scope: !5035)
!5039 = !DILocation(line: 1623, column: 39, scope: !5035)
!5040 = !DILocalVariable(name: "i", scope: !5035, file: !3, line: 1624, type: !22)
!5041 = !DILocation(line: 1624, column: 8, scope: !5035)
!5042 = !DILocalVariable(name: "count", scope: !5035, file: !3, line: 1624, type: !22)
!5043 = !DILocation(line: 1624, column: 11, scope: !5035)
!5044 = !DILocalVariable(name: "next_spline", scope: !5035, file: !3, line: 1625, type: !2204)
!5045 = !DILocation(line: 1625, column: 16, scope: !5035)
!5046 = !DILocation(line: 1625, column: 30, scope: !5035)
!5047 = !DILocation(line: 1625, column: 38, scope: !5035)
!5048 = !DILocation(line: 1628, column: 11, scope: !5049)
!5049 = distinct !DILexicalBlock(scope: !5035, file: !3, line: 1628, column: 4)
!5050 = !DILocation(line: 1628, column: 9, scope: !5049)
!5051 = !DILocation(line: 1628, column: 16, scope: !5052)
!5052 = distinct !DILexicalBlock(scope: !5049, file: !3, line: 1628, column: 4)
!5053 = !DILocation(line: 1628, column: 20, scope: !5052)
!5054 = !DILocation(line: 1628, column: 28, scope: !5052)
!5055 = !DILocation(line: 1628, column: 18, scope: !5052)
!5056 = !DILocation(line: 1628, column: 4, scope: !5049)
!5057 = !DILocalVariable(name: "point", scope: !5058, file: !3, line: 1629, type: !2144)
!5058 = distinct !DILexicalBlock(scope: !5052, file: !3, line: 1628, column: 44)
!5059 = !DILocation(line: 1629, column: 22, scope: !5058)
!5060 = !DILocation(line: 1629, column: 31, scope: !5058)
!5061 = !DILocation(line: 1629, column: 39, scope: !5058)
!5062 = !DILocation(line: 1629, column: 46, scope: !5058)
!5063 = !DILocation(line: 1631, column: 10, scope: !5064)
!5064 = distinct !DILexicalBlock(scope: !5058, file: !3, line: 1631, column: 9)
!5065 = !DILocation(line: 1631, column: 9, scope: !5058)
!5066 = !DILocation(line: 1632, column: 11, scope: !5064)
!5067 = !DILocation(line: 1632, column: 6, scope: !5064)
!5068 = !DILocation(line: 1633, column: 4, scope: !5058)
!5069 = !DILocation(line: 1628, column: 40, scope: !5052)
!5070 = !DILocation(line: 1628, column: 4, scope: !5052)
!5071 = distinct !{!5071, !5056, !5072}
!5072 = !DILocation(line: 1633, column: 4, scope: !5049)
!5073 = !DILocation(line: 1635, column: 8, scope: !5074)
!5074 = distinct !DILexicalBlock(scope: !5035, file: !3, line: 1635, column: 8)
!5075 = !DILocation(line: 1635, column: 14, scope: !5074)
!5076 = !DILocation(line: 1635, column: 8, scope: !5035)
!5077 = !DILocation(line: 1637, column: 18, scope: !5078)
!5078 = distinct !DILexicalBlock(scope: !5074, file: !3, line: 1635, column: 20)
!5079 = !DILocation(line: 1637, column: 27, scope: !5078)
!5080 = !DILocation(line: 1637, column: 36, scope: !5078)
!5081 = !DILocation(line: 1637, column: 5, scope: !5078)
!5082 = !DILocation(line: 1638, column: 26, scope: !5078)
!5083 = !DILocation(line: 1638, column: 5, scope: !5078)
!5084 = !DILocation(line: 1640, column: 9, scope: !5085)
!5085 = distinct !DILexicalBlock(scope: !5078, file: !3, line: 1640, column: 9)
!5086 = !DILocation(line: 1640, column: 19, scope: !5085)
!5087 = !DILocation(line: 1640, column: 28, scope: !5085)
!5088 = !DILocation(line: 1640, column: 16, scope: !5085)
!5089 = !DILocation(line: 1640, column: 9, scope: !5078)
!5090 = !DILocation(line: 1641, column: 6, scope: !5091)
!5091 = distinct !DILexicalBlock(scope: !5085, file: !3, line: 1640, column: 40)
!5092 = !DILocation(line: 1641, column: 15, scope: !5091)
!5093 = !DILocation(line: 1641, column: 26, scope: !5091)
!5094 = !DILocation(line: 1642, column: 6, scope: !5091)
!5095 = !DILocation(line: 1642, column: 15, scope: !5091)
!5096 = !DILocation(line: 1642, column: 25, scope: !5091)
!5097 = !DILocation(line: 1643, column: 5, scope: !5091)
!5098 = !DILocation(line: 1645, column: 41, scope: !5078)
!5099 = !DILocation(line: 1645, column: 50, scope: !5078)
!5100 = !DILocation(line: 1645, column: 72, scope: !5078)
!5101 = !DILocation(line: 1645, column: 5, scope: !5078)
!5102 = !DILocation(line: 1646, column: 4, scope: !5078)
!5103 = !DILocalVariable(name: "new_points", scope: !5104, file: !3, line: 1648, type: !2144)
!5104 = distinct !DILexicalBlock(scope: !5074, file: !3, line: 1647, column: 9)
!5105 = !DILocation(line: 1648, column: 22, scope: !5104)
!5106 = !DILocalVariable(name: "j", scope: !5104, file: !3, line: 1649, type: !22)
!5107 = !DILocation(line: 1649, column: 9, scope: !5104)
!5108 = !DILocation(line: 1651, column: 18, scope: !5104)
!5109 = !DILocation(line: 1651, column: 30, scope: !5104)
!5110 = !DILocation(line: 1651, column: 36, scope: !5104)
!5111 = !DILocation(line: 1651, column: 16, scope: !5104)
!5112 = !DILocation(line: 1653, column: 12, scope: !5113)
!5113 = distinct !DILexicalBlock(scope: !5104, file: !3, line: 1653, column: 5)
!5114 = !DILocation(line: 1653, column: 19, scope: !5113)
!5115 = !DILocation(line: 1653, column: 10, scope: !5113)
!5116 = !DILocation(line: 1653, column: 24, scope: !5117)
!5117 = distinct !DILexicalBlock(scope: !5113, file: !3, line: 1653, column: 5)
!5118 = !DILocation(line: 1653, column: 28, scope: !5117)
!5119 = !DILocation(line: 1653, column: 26, scope: !5117)
!5120 = !DILocation(line: 1653, column: 5, scope: !5113)
!5121 = !DILocalVariable(name: "point", scope: !5122, file: !3, line: 1654, type: !2144)
!5122 = distinct !DILexicalBlock(scope: !5117, file: !3, line: 1653, column: 49)
!5123 = !DILocation(line: 1654, column: 23, scope: !5122)
!5124 = !DILocation(line: 1654, column: 32, scope: !5122)
!5125 = !DILocation(line: 1654, column: 40, scope: !5122)
!5126 = !DILocation(line: 1654, column: 47, scope: !5122)
!5127 = !DILocation(line: 1656, column: 11, scope: !5128)
!5128 = distinct !DILexicalBlock(scope: !5122, file: !3, line: 1656, column: 10)
!5129 = !DILocation(line: 1656, column: 10, scope: !5122)
!5130 = !DILocation(line: 1657, column: 11, scope: !5131)
!5131 = distinct !DILexicalBlock(scope: !5132, file: !3, line: 1657, column: 11)
!5132 = distinct !DILexicalBlock(scope: !5128, file: !3, line: 1656, column: 39)
!5133 = !DILocation(line: 1657, column: 20, scope: !5131)
!5134 = !DILocation(line: 1657, column: 29, scope: !5131)
!5135 = !DILocation(line: 1657, column: 17, scope: !5131)
!5136 = !DILocation(line: 1657, column: 11, scope: !5132)
!5137 = !DILocation(line: 1658, column: 30, scope: !5131)
!5138 = !DILocation(line: 1658, column: 41, scope: !5131)
!5139 = !DILocation(line: 1658, column: 8, scope: !5131)
!5140 = !DILocation(line: 1658, column: 17, scope: !5131)
!5141 = !DILocation(line: 1658, column: 27, scope: !5131)
!5142 = !DILocation(line: 1660, column: 29, scope: !5132)
!5143 = !DILocation(line: 1660, column: 7, scope: !5132)
!5144 = !DILocation(line: 1662, column: 7, scope: !5132)
!5145 = !DILocation(line: 1662, column: 18, scope: !5132)
!5146 = !DILocation(line: 1662, column: 24, scope: !5132)
!5147 = !DILocation(line: 1662, column: 23, scope: !5132)
!5148 = !DILocation(line: 1663, column: 8, scope: !5132)
!5149 = !DILocation(line: 1664, column: 6, scope: !5132)
!5150 = !DILocation(line: 1666, column: 11, scope: !5151)
!5151 = distinct !DILexicalBlock(scope: !5152, file: !3, line: 1666, column: 11)
!5152 = distinct !DILexicalBlock(scope: !5128, file: !3, line: 1665, column: 11)
!5153 = !DILocation(line: 1666, column: 20, scope: !5151)
!5154 = !DILocation(line: 1666, column: 29, scope: !5151)
!5155 = !DILocation(line: 1666, column: 17, scope: !5151)
!5156 = !DILocation(line: 1666, column: 11, scope: !5152)
!5157 = !DILocation(line: 1667, column: 8, scope: !5151)
!5158 = !DILocation(line: 1667, column: 17, scope: !5151)
!5159 = !DILocation(line: 1667, column: 27, scope: !5151)
!5160 = !DILocation(line: 1669, column: 27, scope: !5152)
!5161 = !DILocation(line: 1669, column: 7, scope: !5152)
!5162 = !DILocation(line: 1670, column: 7, scope: !5152)
!5163 = !DILocation(line: 1670, column: 15, scope: !5152)
!5164 = !DILocation(line: 1670, column: 24, scope: !5152)
!5165 = !DILocation(line: 1672, column: 43, scope: !5152)
!5166 = !DILocation(line: 1672, column: 52, scope: !5152)
!5167 = !DILocation(line: 1672, column: 75, scope: !5152)
!5168 = !DILocation(line: 1672, column: 73, scope: !5152)
!5169 = !DILocation(line: 1672, column: 7, scope: !5152)
!5170 = !DILocation(line: 1674, column: 5, scope: !5122)
!5171 = !DILocation(line: 1653, column: 45, scope: !5117)
!5172 = !DILocation(line: 1653, column: 5, scope: !5117)
!5173 = distinct !{!5173, !5120, !5174}
!5174 = !DILocation(line: 1674, column: 5, scope: !5113)
!5175 = !DILocation(line: 1676, column: 29, scope: !5104)
!5176 = !DILocation(line: 1676, column: 37, scope: !5104)
!5177 = !DILocation(line: 1676, column: 26, scope: !5104)
!5178 = !DILocation(line: 1678, column: 5, scope: !5104)
!5179 = !DILocation(line: 1678, column: 15, scope: !5104)
!5180 = !DILocation(line: 1678, column: 23, scope: !5104)
!5181 = !DILocation(line: 1679, column: 22, scope: !5104)
!5182 = !DILocation(line: 1679, column: 5, scope: !5104)
!5183 = !DILocation(line: 1679, column: 13, scope: !5104)
!5184 = !DILocation(line: 1679, column: 20, scope: !5104)
!5185 = !DILocation(line: 1681, column: 30, scope: !5104)
!5186 = !DILocation(line: 1681, column: 5, scope: !5104)
!5187 = !DILocation(line: 1684, column: 12, scope: !5035)
!5188 = !DILocation(line: 1685, column: 13, scope: !5035)
!5189 = !DILocation(line: 1685, column: 11, scope: !5035)
!5190 = distinct !{!5190, !5032, !5191}
!5191 = !DILocation(line: 1686, column: 3, scope: !5017)
!5192 = !DILocation(line: 1690, column: 30, scope: !5193)
!5193 = distinct !DILexicalBlock(scope: !5017, file: !3, line: 1690, column: 7)
!5194 = !DILocation(line: 1690, column: 39, scope: !5193)
!5195 = !DILocation(line: 1690, column: 7, scope: !5193)
!5196 = !DILocation(line: 1690, column: 7, scope: !5017)
!5197 = !DILocation(line: 1691, column: 31, scope: !5198)
!5198 = distinct !DILexicalBlock(scope: !5193, file: !3, line: 1690, column: 49)
!5199 = !DILocation(line: 1691, column: 4, scope: !5198)
!5200 = !DILocation(line: 1692, column: 3, scope: !5198)
!5201 = !DILocation(line: 1693, column: 2, scope: !5017)
!5202 = !DILocation(line: 1612, column: 60, scope: !5014)
!5203 = !DILocation(line: 1612, column: 69, scope: !5014)
!5204 = !DILocation(line: 1612, column: 58, scope: !5014)
!5205 = !DILocation(line: 1612, column: 2, scope: !5014)
!5206 = distinct !{!5206, !5015, !5207}
!5207 = !DILocation(line: 1693, column: 2, scope: !5008)
!5208 = !DILocation(line: 1695, column: 7, scope: !5209)
!5209 = distinct !DILexicalBlock(scope: !4990, file: !3, line: 1695, column: 6)
!5210 = !DILocation(line: 1695, column: 6, scope: !4990)
!5211 = !DILocation(line: 1696, column: 3, scope: !5212)
!5212 = distinct !DILexicalBlock(scope: !5209, file: !3, line: 1695, column: 16)
!5213 = !DILocation(line: 1700, column: 26, scope: !4990)
!5214 = !DILocation(line: 1700, column: 32, scope: !4990)
!5215 = !DILocation(line: 1700, column: 2, scope: !4990)
!5216 = !DILocation(line: 1702, column: 24, scope: !4990)
!5217 = !DILocation(line: 1702, column: 48, scope: !4990)
!5218 = !DILocation(line: 1702, column: 2, scope: !4990)
!5219 = !DILocation(line: 1704, column: 2, scope: !4990)
!5220 = !DILocation(line: 1705, column: 1, scope: !4990)
!5221 = distinct !DISubprogram(name: "MASK_OT_switch_direction", scope: !3, file: !3, line: 1769, type: !4, scopeLine: 1770, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1817, retainedNodes: !2254)
!5222 = !DILocalVariable(name: "ot", arg: 1, scope: !5221, file: !3, line: 1769, type: !6)
!5223 = !DILocation(line: 1769, column: 47, scope: !5221)
!5224 = !DILocation(line: 1772, column: 2, scope: !5221)
!5225 = !DILocation(line: 1772, column: 6, scope: !5221)
!5226 = !DILocation(line: 1772, column: 11, scope: !5221)
!5227 = !DILocation(line: 1773, column: 2, scope: !5221)
!5228 = !DILocation(line: 1773, column: 6, scope: !5221)
!5229 = !DILocation(line: 1773, column: 18, scope: !5221)
!5230 = !DILocation(line: 1774, column: 2, scope: !5221)
!5231 = !DILocation(line: 1774, column: 6, scope: !5221)
!5232 = !DILocation(line: 1774, column: 13, scope: !5221)
!5233 = !DILocation(line: 1777, column: 2, scope: !5221)
!5234 = !DILocation(line: 1777, column: 6, scope: !5221)
!5235 = !DILocation(line: 1777, column: 11, scope: !5221)
!5236 = !DILocation(line: 1778, column: 2, scope: !5221)
!5237 = !DILocation(line: 1778, column: 6, scope: !5221)
!5238 = !DILocation(line: 1778, column: 11, scope: !5221)
!5239 = !DILocation(line: 1781, column: 2, scope: !5221)
!5240 = !DILocation(line: 1781, column: 6, scope: !5221)
!5241 = !DILocation(line: 1781, column: 11, scope: !5221)
!5242 = !DILocation(line: 1782, column: 1, scope: !5221)
!5243 = distinct !DISubprogram(name: "mask_switch_direction_exec", scope: !3, file: !3, line: 1724, type: !3422, scopeLine: 1725, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1817, retainedNodes: !2254)
!5244 = !DILocalVariable(name: "C", arg: 1, scope: !5243, file: !3, line: 1724, type: !3090)
!5245 = !DILocation(line: 1724, column: 49, scope: !5243)
!5246 = !DILocalVariable(name: "UNUSED_op", arg: 2, scope: !5243, file: !3, line: 1724, type: !3424)
!5247 = !DILocation(line: 1724, column: 64, scope: !5243)
!5248 = !DILocalVariable(name: "scene", scope: !5243, file: !3, line: 1726, type: !4238)
!5249 = !DILocation(line: 1726, column: 9, scope: !5243)
!5250 = !DILocation(line: 1726, column: 32, scope: !5243)
!5251 = !DILocation(line: 1726, column: 17, scope: !5243)
!5252 = !DILocalVariable(name: "mask", scope: !5243, file: !3, line: 1727, type: !2120)
!5253 = !DILocation(line: 1727, column: 8, scope: !5243)
!5254 = !DILocation(line: 1727, column: 34, scope: !5243)
!5255 = !DILocation(line: 1727, column: 15, scope: !5243)
!5256 = !DILocalVariable(name: "masklay", scope: !5243, file: !3, line: 1728, type: !2123)
!5257 = !DILocation(line: 1728, column: 13, scope: !5243)
!5258 = !DILocalVariable(name: "changed", scope: !5243, file: !3, line: 1730, type: !1017)
!5259 = !DILocation(line: 1730, column: 7, scope: !5243)
!5260 = !DILocation(line: 1733, column: 17, scope: !5261)
!5261 = distinct !DILexicalBlock(scope: !5243, file: !3, line: 1733, column: 2)
!5262 = !DILocation(line: 1733, column: 23, scope: !5261)
!5263 = !DILocation(line: 1733, column: 34, scope: !5261)
!5264 = !DILocation(line: 1733, column: 15, scope: !5261)
!5265 = !DILocation(line: 1733, column: 7, scope: !5261)
!5266 = !DILocation(line: 1733, column: 41, scope: !5267)
!5267 = distinct !DILexicalBlock(scope: !5261, file: !3, line: 1733, column: 2)
!5268 = !DILocation(line: 1733, column: 2, scope: !5261)
!5269 = !DILocalVariable(name: "spline", scope: !5270, file: !3, line: 1734, type: !2204)
!5270 = distinct !DILexicalBlock(scope: !5267, file: !3, line: 1733, column: 75)
!5271 = !DILocation(line: 1734, column: 15, scope: !5270)
!5272 = !DILocalVariable(name: "changed_layer", scope: !5270, file: !3, line: 1735, type: !1017)
!5273 = !DILocation(line: 1735, column: 8, scope: !5270)
!5274 = !DILocation(line: 1737, column: 7, scope: !5275)
!5275 = distinct !DILexicalBlock(scope: !5270, file: !3, line: 1737, column: 7)
!5276 = !DILocation(line: 1737, column: 16, scope: !5275)
!5277 = !DILocation(line: 1737, column: 29, scope: !5275)
!5278 = !DILocation(line: 1737, column: 7, scope: !5270)
!5279 = !DILocation(line: 1738, column: 4, scope: !5280)
!5280 = distinct !DILexicalBlock(scope: !5275, file: !3, line: 1737, column: 76)
!5281 = !DILocation(line: 1741, column: 17, scope: !5282)
!5282 = distinct !DILexicalBlock(scope: !5270, file: !3, line: 1741, column: 3)
!5283 = !DILocation(line: 1741, column: 26, scope: !5282)
!5284 = !DILocation(line: 1741, column: 34, scope: !5282)
!5285 = !DILocation(line: 1741, column: 15, scope: !5282)
!5286 = !DILocation(line: 1741, column: 8, scope: !5282)
!5287 = !DILocation(line: 1741, column: 41, scope: !5288)
!5288 = distinct !DILexicalBlock(scope: !5282, file: !3, line: 1741, column: 3)
!5289 = !DILocation(line: 1741, column: 3, scope: !5282)
!5290 = !DILocation(line: 1742, column: 36, scope: !5291)
!5291 = distinct !DILexicalBlock(scope: !5292, file: !3, line: 1742, column: 8)
!5292 = distinct !DILexicalBlock(scope: !5288, file: !3, line: 1741, column: 72)
!5293 = !DILocation(line: 1742, column: 8, scope: !5291)
!5294 = !DILocation(line: 1742, column: 8, scope: !5292)
!5295 = !DILocation(line: 1743, column: 38, scope: !5296)
!5296 = distinct !DILexicalBlock(scope: !5291, file: !3, line: 1742, column: 45)
!5297 = !DILocation(line: 1743, column: 47, scope: !5296)
!5298 = !DILocation(line: 1743, column: 5, scope: !5296)
!5299 = !DILocation(line: 1744, column: 13, scope: !5296)
!5300 = !DILocation(line: 1745, column: 19, scope: !5296)
!5301 = !DILocation(line: 1746, column: 4, scope: !5296)
!5302 = !DILocation(line: 1747, column: 3, scope: !5292)
!5303 = !DILocation(line: 1741, column: 58, scope: !5288)
!5304 = !DILocation(line: 1741, column: 66, scope: !5288)
!5305 = !DILocation(line: 1741, column: 56, scope: !5288)
!5306 = !DILocation(line: 1741, column: 3, scope: !5288)
!5307 = distinct !{!5307, !5289, !5308}
!5308 = !DILocation(line: 1747, column: 3, scope: !5282)
!5309 = !DILocation(line: 1749, column: 7, scope: !5310)
!5310 = distinct !DILexicalBlock(scope: !5270, file: !3, line: 1749, column: 7)
!5311 = !DILocation(line: 1749, column: 7, scope: !5270)
!5312 = !DILocation(line: 1750, column: 8, scope: !5313)
!5313 = distinct !DILexicalBlock(scope: !5314, file: !3, line: 1750, column: 8)
!5314 = distinct !DILexicalBlock(scope: !5310, file: !3, line: 1749, column: 22)
!5315 = !DILocation(line: 1750, column: 8, scope: !5314)
!5316 = !DILocation(line: 1751, column: 34, scope: !5317)
!5317 = distinct !DILexicalBlock(scope: !5313, file: !3, line: 1750, column: 30)
!5318 = !DILocation(line: 1751, column: 43, scope: !5317)
!5319 = !DILocation(line: 1751, column: 5, scope: !5317)
!5320 = !DILocation(line: 1752, column: 4, scope: !5317)
!5321 = !DILocation(line: 1753, column: 3, scope: !5314)
!5322 = !DILocation(line: 1754, column: 2, scope: !5270)
!5323 = !DILocation(line: 1733, column: 60, scope: !5267)
!5324 = !DILocation(line: 1733, column: 69, scope: !5267)
!5325 = !DILocation(line: 1733, column: 58, scope: !5267)
!5326 = !DILocation(line: 1733, column: 2, scope: !5267)
!5327 = distinct !{!5327, !5268, !5328}
!5328 = !DILocation(line: 1754, column: 2, scope: !5261)
!5329 = !DILocation(line: 1756, column: 6, scope: !5330)
!5330 = distinct !DILexicalBlock(scope: !5243, file: !3, line: 1756, column: 6)
!5331 = !DILocation(line: 1756, column: 6, scope: !5243)
!5332 = !DILocation(line: 1758, column: 27, scope: !5333)
!5333 = distinct !DILexicalBlock(scope: !5330, file: !3, line: 1756, column: 15)
!5334 = !DILocation(line: 1758, column: 33, scope: !5333)
!5335 = !DILocation(line: 1758, column: 3, scope: !5333)
!5336 = !DILocation(line: 1760, column: 25, scope: !5333)
!5337 = !DILocation(line: 1760, column: 49, scope: !5333)
!5338 = !DILocation(line: 1760, column: 3, scope: !5333)
!5339 = !DILocation(line: 1761, column: 25, scope: !5333)
!5340 = !DILocation(line: 1761, column: 49, scope: !5333)
!5341 = !DILocation(line: 1761, column: 3, scope: !5333)
!5342 = !DILocation(line: 1763, column: 3, scope: !5333)
!5343 = !DILocation(line: 1766, column: 2, scope: !5243)
!5344 = !DILocation(line: 1767, column: 1, scope: !5243)
!5345 = distinct !DISubprogram(name: "MASK_OT_normals_make_consistent", scope: !3, file: !3, line: 1837, type: !4, scopeLine: 1838, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1817, retainedNodes: !2254)
!5346 = !DILocalVariable(name: "ot", arg: 1, scope: !5345, file: !3, line: 1837, type: !6)
!5347 = !DILocation(line: 1837, column: 54, scope: !5345)
!5348 = !DILocation(line: 1840, column: 2, scope: !5345)
!5349 = !DILocation(line: 1840, column: 6, scope: !5345)
!5350 = !DILocation(line: 1840, column: 11, scope: !5345)
!5351 = !DILocation(line: 1841, column: 2, scope: !5345)
!5352 = !DILocation(line: 1841, column: 6, scope: !5345)
!5353 = !DILocation(line: 1841, column: 18, scope: !5345)
!5354 = !DILocation(line: 1842, column: 2, scope: !5345)
!5355 = !DILocation(line: 1842, column: 6, scope: !5345)
!5356 = !DILocation(line: 1842, column: 13, scope: !5345)
!5357 = !DILocation(line: 1845, column: 2, scope: !5345)
!5358 = !DILocation(line: 1845, column: 6, scope: !5345)
!5359 = !DILocation(line: 1845, column: 11, scope: !5345)
!5360 = !DILocation(line: 1846, column: 2, scope: !5345)
!5361 = !DILocation(line: 1846, column: 6, scope: !5345)
!5362 = !DILocation(line: 1846, column: 11, scope: !5345)
!5363 = !DILocation(line: 1849, column: 2, scope: !5345)
!5364 = !DILocation(line: 1849, column: 6, scope: !5345)
!5365 = !DILocation(line: 1849, column: 11, scope: !5345)
!5366 = !DILocation(line: 1850, column: 1, scope: !5345)
!5367 = distinct !DISubprogram(name: "mask_normals_make_consistent_exec", scope: !3, file: !3, line: 1786, type: !3422, scopeLine: 1787, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1817, retainedNodes: !2254)
!5368 = !DILocalVariable(name: "C", arg: 1, scope: !5367, file: !3, line: 1786, type: !3090)
!5369 = !DILocation(line: 1786, column: 56, scope: !5367)
!5370 = !DILocalVariable(name: "UNUSED_op", arg: 2, scope: !5367, file: !3, line: 1786, type: !3424)
!5371 = !DILocation(line: 1786, column: 71, scope: !5367)
!5372 = !DILocalVariable(name: "scene", scope: !5367, file: !3, line: 1788, type: !4238)
!5373 = !DILocation(line: 1788, column: 9, scope: !5367)
!5374 = !DILocation(line: 1788, column: 32, scope: !5367)
!5375 = !DILocation(line: 1788, column: 17, scope: !5367)
!5376 = !DILocalVariable(name: "mask", scope: !5367, file: !3, line: 1789, type: !2120)
!5377 = !DILocation(line: 1789, column: 8, scope: !5367)
!5378 = !DILocation(line: 1789, column: 34, scope: !5367)
!5379 = !DILocation(line: 1789, column: 15, scope: !5367)
!5380 = !DILocalVariable(name: "masklay", scope: !5367, file: !3, line: 1790, type: !2123)
!5381 = !DILocation(line: 1790, column: 13, scope: !5367)
!5382 = !DILocalVariable(name: "i", scope: !5367, file: !3, line: 1791, type: !22)
!5383 = !DILocation(line: 1791, column: 6, scope: !5367)
!5384 = !DILocalVariable(name: "changed", scope: !5367, file: !3, line: 1793, type: !1017)
!5385 = !DILocation(line: 1793, column: 7, scope: !5367)
!5386 = !DILocation(line: 1796, column: 17, scope: !5387)
!5387 = distinct !DILexicalBlock(scope: !5367, file: !3, line: 1796, column: 2)
!5388 = !DILocation(line: 1796, column: 23, scope: !5387)
!5389 = !DILocation(line: 1796, column: 34, scope: !5387)
!5390 = !DILocation(line: 1796, column: 15, scope: !5387)
!5391 = !DILocation(line: 1796, column: 7, scope: !5387)
!5392 = !DILocation(line: 1796, column: 41, scope: !5393)
!5393 = distinct !DILexicalBlock(scope: !5387, file: !3, line: 1796, column: 2)
!5394 = !DILocation(line: 1796, column: 2, scope: !5387)
!5395 = !DILocalVariable(name: "spline", scope: !5396, file: !3, line: 1797, type: !2204)
!5396 = distinct !DILexicalBlock(scope: !5393, file: !3, line: 1796, column: 75)
!5397 = !DILocation(line: 1797, column: 15, scope: !5396)
!5398 = !DILocalVariable(name: "changed_layer", scope: !5396, file: !3, line: 1798, type: !1017)
!5399 = !DILocation(line: 1798, column: 8, scope: !5396)
!5400 = !DILocation(line: 1800, column: 7, scope: !5401)
!5401 = distinct !DILexicalBlock(scope: !5396, file: !3, line: 1800, column: 7)
!5402 = !DILocation(line: 1800, column: 16, scope: !5401)
!5403 = !DILocation(line: 1800, column: 29, scope: !5401)
!5404 = !DILocation(line: 1800, column: 7, scope: !5396)
!5405 = !DILocation(line: 1801, column: 4, scope: !5406)
!5406 = distinct !DILexicalBlock(scope: !5401, file: !3, line: 1800, column: 76)
!5407 = !DILocation(line: 1804, column: 17, scope: !5408)
!5408 = distinct !DILexicalBlock(scope: !5396, file: !3, line: 1804, column: 3)
!5409 = !DILocation(line: 1804, column: 26, scope: !5408)
!5410 = !DILocation(line: 1804, column: 34, scope: !5408)
!5411 = !DILocation(line: 1804, column: 15, scope: !5408)
!5412 = !DILocation(line: 1804, column: 8, scope: !5408)
!5413 = !DILocation(line: 1804, column: 41, scope: !5414)
!5414 = distinct !DILexicalBlock(scope: !5408, file: !3, line: 1804, column: 3)
!5415 = !DILocation(line: 1804, column: 3, scope: !5408)
!5416 = !DILocation(line: 1805, column: 11, scope: !5417)
!5417 = distinct !DILexicalBlock(scope: !5418, file: !3, line: 1805, column: 4)
!5418 = distinct !DILexicalBlock(scope: !5414, file: !3, line: 1804, column: 72)
!5419 = !DILocation(line: 1805, column: 9, scope: !5417)
!5420 = !DILocation(line: 1805, column: 16, scope: !5421)
!5421 = distinct !DILexicalBlock(scope: !5417, file: !3, line: 1805, column: 4)
!5422 = !DILocation(line: 1805, column: 20, scope: !5421)
!5423 = !DILocation(line: 1805, column: 28, scope: !5421)
!5424 = !DILocation(line: 1805, column: 18, scope: !5421)
!5425 = !DILocation(line: 1805, column: 4, scope: !5417)
!5426 = !DILocalVariable(name: "point", scope: !5427, file: !3, line: 1806, type: !2144)
!5427 = distinct !DILexicalBlock(scope: !5421, file: !3, line: 1805, column: 44)
!5428 = !DILocation(line: 1806, column: 22, scope: !5427)
!5429 = !DILocation(line: 1806, column: 31, scope: !5427)
!5430 = !DILocation(line: 1806, column: 39, scope: !5427)
!5431 = !DILocation(line: 1806, column: 46, scope: !5427)
!5432 = !DILocation(line: 1808, column: 9, scope: !5433)
!5433 = distinct !DILexicalBlock(scope: !5427, file: !3, line: 1808, column: 9)
!5434 = !DILocation(line: 1808, column: 9, scope: !5427)
!5435 = !DILocation(line: 1809, column: 38, scope: !5436)
!5436 = distinct !DILexicalBlock(scope: !5433, file: !3, line: 1808, column: 37)
!5437 = !DILocation(line: 1809, column: 46, scope: !5436)
!5438 = !DILocation(line: 1809, column: 6, scope: !5436)
!5439 = !DILocation(line: 1810, column: 14, scope: !5436)
!5440 = !DILocation(line: 1811, column: 20, scope: !5436)
!5441 = !DILocation(line: 1812, column: 5, scope: !5436)
!5442 = !DILocation(line: 1813, column: 4, scope: !5427)
!5443 = !DILocation(line: 1805, column: 40, scope: !5421)
!5444 = !DILocation(line: 1805, column: 4, scope: !5421)
!5445 = distinct !{!5445, !5425, !5446}
!5446 = !DILocation(line: 1813, column: 4, scope: !5417)
!5447 = !DILocation(line: 1814, column: 3, scope: !5418)
!5448 = !DILocation(line: 1804, column: 58, scope: !5414)
!5449 = !DILocation(line: 1804, column: 66, scope: !5414)
!5450 = !DILocation(line: 1804, column: 56, scope: !5414)
!5451 = !DILocation(line: 1804, column: 3, scope: !5414)
!5452 = distinct !{!5452, !5415, !5453}
!5453 = !DILocation(line: 1814, column: 3, scope: !5408)
!5454 = !DILocation(line: 1816, column: 7, scope: !5455)
!5455 = distinct !DILexicalBlock(scope: !5396, file: !3, line: 1816, column: 7)
!5456 = !DILocation(line: 1816, column: 7, scope: !5396)
!5457 = !DILocation(line: 1817, column: 8, scope: !5458)
!5458 = distinct !DILexicalBlock(scope: !5459, file: !3, line: 1817, column: 8)
!5459 = distinct !DILexicalBlock(scope: !5455, file: !3, line: 1816, column: 22)
!5460 = !DILocation(line: 1817, column: 8, scope: !5459)
!5461 = !DILocation(line: 1818, column: 34, scope: !5462)
!5462 = distinct !DILexicalBlock(scope: !5458, file: !3, line: 1817, column: 30)
!5463 = !DILocation(line: 1818, column: 43, scope: !5462)
!5464 = !DILocation(line: 1818, column: 5, scope: !5462)
!5465 = !DILocation(line: 1819, column: 4, scope: !5462)
!5466 = !DILocation(line: 1820, column: 3, scope: !5459)
!5467 = !DILocation(line: 1821, column: 2, scope: !5396)
!5468 = !DILocation(line: 1796, column: 60, scope: !5393)
!5469 = !DILocation(line: 1796, column: 69, scope: !5393)
!5470 = !DILocation(line: 1796, column: 58, scope: !5393)
!5471 = !DILocation(line: 1796, column: 2, scope: !5393)
!5472 = distinct !{!5472, !5394, !5473}
!5473 = !DILocation(line: 1821, column: 2, scope: !5387)
!5474 = !DILocation(line: 1823, column: 6, scope: !5475)
!5475 = distinct !DILexicalBlock(scope: !5367, file: !3, line: 1823, column: 6)
!5476 = !DILocation(line: 1823, column: 6, scope: !5367)
!5477 = !DILocation(line: 1825, column: 27, scope: !5478)
!5478 = distinct !DILexicalBlock(scope: !5475, file: !3, line: 1823, column: 15)
!5479 = !DILocation(line: 1825, column: 33, scope: !5478)
!5480 = !DILocation(line: 1825, column: 3, scope: !5478)
!5481 = !DILocation(line: 1827, column: 25, scope: !5478)
!5482 = !DILocation(line: 1827, column: 49, scope: !5478)
!5483 = !DILocation(line: 1827, column: 3, scope: !5478)
!5484 = !DILocation(line: 1828, column: 25, scope: !5478)
!5485 = !DILocation(line: 1828, column: 49, scope: !5478)
!5486 = !DILocation(line: 1828, column: 3, scope: !5478)
!5487 = !DILocation(line: 1830, column: 3, scope: !5478)
!5488 = !DILocation(line: 1833, column: 2, scope: !5367)
!5489 = !DILocation(line: 1834, column: 1, scope: !5367)
!5490 = !DILocalVariable(name: "ot", arg: 1, scope: !2, file: !3, line: 1912, type: !6)
!5491 = !DILocation(line: 1912, column: 46, scope: !2)
!5492 = !DILocation(line: 1924, column: 2, scope: !2)
!5493 = !DILocation(line: 1924, column: 6, scope: !2)
!5494 = !DILocation(line: 1924, column: 11, scope: !2)
!5495 = !DILocation(line: 1925, column: 2, scope: !2)
!5496 = !DILocation(line: 1925, column: 6, scope: !2)
!5497 = !DILocation(line: 1925, column: 18, scope: !2)
!5498 = !DILocation(line: 1926, column: 2, scope: !2)
!5499 = !DILocation(line: 1926, column: 6, scope: !2)
!5500 = !DILocation(line: 1926, column: 13, scope: !2)
!5501 = !DILocation(line: 1929, column: 2, scope: !2)
!5502 = !DILocation(line: 1929, column: 6, scope: !2)
!5503 = !DILocation(line: 1929, column: 13, scope: !2)
!5504 = !DILocation(line: 1930, column: 2, scope: !2)
!5505 = !DILocation(line: 1930, column: 6, scope: !2)
!5506 = !DILocation(line: 1930, column: 11, scope: !2)
!5507 = !DILocation(line: 1931, column: 2, scope: !2)
!5508 = !DILocation(line: 1931, column: 6, scope: !2)
!5509 = !DILocation(line: 1931, column: 11, scope: !2)
!5510 = !DILocation(line: 1934, column: 2, scope: !2)
!5511 = !DILocation(line: 1934, column: 6, scope: !2)
!5512 = !DILocation(line: 1934, column: 11, scope: !2)
!5513 = !DILocation(line: 1937, column: 26, scope: !2)
!5514 = !DILocation(line: 1937, column: 30, scope: !2)
!5515 = !DILocation(line: 1937, column: 13, scope: !2)
!5516 = !DILocation(line: 1937, column: 2, scope: !2)
!5517 = !DILocation(line: 1937, column: 6, scope: !2)
!5518 = !DILocation(line: 1937, column: 11, scope: !2)
!5519 = !DILocation(line: 1938, column: 1, scope: !2)
!5520 = distinct !DISubprogram(name: "set_handle_type_exec", scope: !3, file: !3, line: 1855, type: !3422, scopeLine: 1856, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1817, retainedNodes: !2254)
!5521 = !DILocalVariable(name: "C", arg: 1, scope: !5520, file: !3, line: 1855, type: !3090)
!5522 = !DILocation(line: 1855, column: 43, scope: !5520)
!5523 = !DILocalVariable(name: "op", arg: 2, scope: !5520, file: !3, line: 1855, type: !3424)
!5524 = !DILocation(line: 1855, column: 58, scope: !5520)
!5525 = !DILocalVariable(name: "mask", scope: !5520, file: !3, line: 1857, type: !2120)
!5526 = !DILocation(line: 1857, column: 8, scope: !5520)
!5527 = !DILocation(line: 1857, column: 34, scope: !5520)
!5528 = !DILocation(line: 1857, column: 15, scope: !5520)
!5529 = !DILocalVariable(name: "masklay", scope: !5520, file: !3, line: 1858, type: !2123)
!5530 = !DILocation(line: 1858, column: 13, scope: !5520)
!5531 = !DILocalVariable(name: "handle_type", scope: !5520, file: !3, line: 1859, type: !22)
!5532 = !DILocation(line: 1859, column: 6, scope: !5520)
!5533 = !DILocation(line: 1859, column: 33, scope: !5520)
!5534 = !DILocation(line: 1859, column: 37, scope: !5520)
!5535 = !DILocation(line: 1859, column: 20, scope: !5520)
!5536 = !DILocalVariable(name: "changed", scope: !5520, file: !3, line: 1861, type: !1017)
!5537 = !DILocation(line: 1861, column: 7, scope: !5520)
!5538 = !DILocation(line: 1863, column: 17, scope: !5539)
!5539 = distinct !DILexicalBlock(scope: !5520, file: !3, line: 1863, column: 2)
!5540 = !DILocation(line: 1863, column: 23, scope: !5539)
!5541 = !DILocation(line: 1863, column: 34, scope: !5539)
!5542 = !DILocation(line: 1863, column: 15, scope: !5539)
!5543 = !DILocation(line: 1863, column: 7, scope: !5539)
!5544 = !DILocation(line: 1863, column: 41, scope: !5545)
!5545 = distinct !DILexicalBlock(scope: !5539, file: !3, line: 1863, column: 2)
!5546 = !DILocation(line: 1863, column: 2, scope: !5539)
!5547 = !DILocalVariable(name: "spline", scope: !5548, file: !3, line: 1864, type: !2204)
!5548 = distinct !DILexicalBlock(scope: !5545, file: !3, line: 1863, column: 75)
!5549 = !DILocation(line: 1864, column: 15, scope: !5548)
!5550 = !DILocalVariable(name: "i", scope: !5548, file: !3, line: 1865, type: !22)
!5551 = !DILocation(line: 1865, column: 7, scope: !5548)
!5552 = !DILocation(line: 1867, column: 7, scope: !5553)
!5553 = distinct !DILexicalBlock(scope: !5548, file: !3, line: 1867, column: 7)
!5554 = !DILocation(line: 1867, column: 16, scope: !5553)
!5555 = !DILocation(line: 1867, column: 29, scope: !5553)
!5556 = !DILocation(line: 1867, column: 7, scope: !5548)
!5557 = !DILocation(line: 1868, column: 4, scope: !5558)
!5558 = distinct !DILexicalBlock(scope: !5553, file: !3, line: 1867, column: 76)
!5559 = !DILocation(line: 1871, column: 17, scope: !5560)
!5560 = distinct !DILexicalBlock(scope: !5548, file: !3, line: 1871, column: 3)
!5561 = !DILocation(line: 1871, column: 26, scope: !5560)
!5562 = !DILocation(line: 1871, column: 34, scope: !5560)
!5563 = !DILocation(line: 1871, column: 15, scope: !5560)
!5564 = !DILocation(line: 1871, column: 8, scope: !5560)
!5565 = !DILocation(line: 1871, column: 41, scope: !5566)
!5566 = distinct !DILexicalBlock(scope: !5560, file: !3, line: 1871, column: 3)
!5567 = !DILocation(line: 1871, column: 3, scope: !5560)
!5568 = !DILocation(line: 1872, column: 11, scope: !5569)
!5569 = distinct !DILexicalBlock(scope: !5570, file: !3, line: 1872, column: 4)
!5570 = distinct !DILexicalBlock(scope: !5566, file: !3, line: 1871, column: 72)
!5571 = !DILocation(line: 1872, column: 9, scope: !5569)
!5572 = !DILocation(line: 1872, column: 16, scope: !5573)
!5573 = distinct !DILexicalBlock(scope: !5569, file: !3, line: 1872, column: 4)
!5574 = !DILocation(line: 1872, column: 20, scope: !5573)
!5575 = !DILocation(line: 1872, column: 28, scope: !5573)
!5576 = !DILocation(line: 1872, column: 18, scope: !5573)
!5577 = !DILocation(line: 1872, column: 4, scope: !5569)
!5578 = !DILocalVariable(name: "point", scope: !5579, file: !3, line: 1873, type: !2144)
!5579 = distinct !DILexicalBlock(scope: !5573, file: !3, line: 1872, column: 44)
!5580 = !DILocation(line: 1873, column: 22, scope: !5579)
!5581 = !DILocation(line: 1873, column: 31, scope: !5579)
!5582 = !DILocation(line: 1873, column: 39, scope: !5579)
!5583 = !DILocation(line: 1873, column: 46, scope: !5579)
!5584 = !DILocation(line: 1875, column: 9, scope: !5585)
!5585 = distinct !DILexicalBlock(scope: !5579, file: !3, line: 1875, column: 9)
!5586 = !DILocation(line: 1875, column: 9, scope: !5579)
!5587 = !DILocalVariable(name: "bezt", scope: !5588, file: !3, line: 1876, type: !2240)
!5588 = distinct !DILexicalBlock(scope: !5585, file: !3, line: 1875, column: 37)
!5589 = !DILocation(line: 1876, column: 17, scope: !5588)
!5590 = !DILocation(line: 1876, column: 25, scope: !5588)
!5591 = !DILocation(line: 1876, column: 32, scope: !5588)
!5592 = !DILocation(line: 1878, column: 10, scope: !5593)
!5593 = distinct !DILexicalBlock(scope: !5588, file: !3, line: 1878, column: 10)
!5594 = !DILocation(line: 1878, column: 16, scope: !5593)
!5595 = !DILocation(line: 1878, column: 19, scope: !5593)
!5596 = !DILocation(line: 1878, column: 10, scope: !5588)
!5597 = !DILocation(line: 1879, column: 18, scope: !5598)
!5598 = distinct !DILexicalBlock(scope: !5593, file: !3, line: 1878, column: 29)
!5599 = !DILocation(line: 1879, column: 7, scope: !5598)
!5600 = !DILocation(line: 1879, column: 13, scope: !5598)
!5601 = !DILocation(line: 1879, column: 16, scope: !5598)
!5602 = !DILocation(line: 1880, column: 18, scope: !5598)
!5603 = !DILocation(line: 1880, column: 7, scope: !5598)
!5604 = !DILocation(line: 1880, column: 13, scope: !5598)
!5605 = !DILocation(line: 1880, column: 16, scope: !5598)
!5606 = !DILocation(line: 1881, column: 6, scope: !5598)
!5607 = !DILocation(line: 1883, column: 11, scope: !5608)
!5608 = distinct !DILexicalBlock(scope: !5609, file: !3, line: 1883, column: 11)
!5609 = distinct !DILexicalBlock(scope: !5593, file: !3, line: 1882, column: 11)
!5610 = !DILocation(line: 1883, column: 17, scope: !5608)
!5611 = !DILocation(line: 1883, column: 20, scope: !5608)
!5612 = !DILocation(line: 1883, column: 11, scope: !5609)
!5613 = !DILocation(line: 1884, column: 19, scope: !5614)
!5614 = distinct !DILexicalBlock(scope: !5608, file: !3, line: 1883, column: 30)
!5615 = !DILocation(line: 1884, column: 8, scope: !5614)
!5616 = !DILocation(line: 1884, column: 14, scope: !5614)
!5617 = !DILocation(line: 1884, column: 17, scope: !5614)
!5618 = !DILocation(line: 1885, column: 7, scope: !5614)
!5619 = !DILocation(line: 1886, column: 11, scope: !5620)
!5620 = distinct !DILexicalBlock(scope: !5609, file: !3, line: 1886, column: 11)
!5621 = !DILocation(line: 1886, column: 17, scope: !5620)
!5622 = !DILocation(line: 1886, column: 20, scope: !5620)
!5623 = !DILocation(line: 1886, column: 11, scope: !5609)
!5624 = !DILocation(line: 1887, column: 19, scope: !5625)
!5625 = distinct !DILexicalBlock(scope: !5620, file: !3, line: 1886, column: 30)
!5626 = !DILocation(line: 1887, column: 8, scope: !5625)
!5627 = !DILocation(line: 1887, column: 14, scope: !5625)
!5628 = !DILocation(line: 1887, column: 17, scope: !5625)
!5629 = !DILocation(line: 1888, column: 7, scope: !5625)
!5630 = !DILocation(line: 1891, column: 10, scope: !5631)
!5631 = distinct !DILexicalBlock(scope: !5588, file: !3, line: 1891, column: 10)
!5632 = !DILocation(line: 1891, column: 22, scope: !5631)
!5633 = !DILocation(line: 1891, column: 10, scope: !5588)
!5634 = !DILocalVariable(name: "vec", scope: !5635, file: !3, line: 1892, type: !227)
!5635 = distinct !DILexicalBlock(scope: !5631, file: !3, line: 1891, column: 35)
!5636 = !DILocation(line: 1892, column: 13, scope: !5635)
!5637 = !DILocation(line: 1893, column: 19, scope: !5635)
!5638 = !DILocation(line: 1893, column: 24, scope: !5635)
!5639 = !DILocation(line: 1893, column: 30, scope: !5635)
!5640 = !DILocation(line: 1893, column: 38, scope: !5635)
!5641 = !DILocation(line: 1893, column: 44, scope: !5635)
!5642 = !DILocation(line: 1893, column: 7, scope: !5635)
!5643 = !DILocation(line: 1894, column: 19, scope: !5635)
!5644 = !DILocation(line: 1894, column: 25, scope: !5635)
!5645 = !DILocation(line: 1894, column: 33, scope: !5635)
!5646 = !DILocation(line: 1894, column: 39, scope: !5635)
!5647 = !DILocation(line: 1894, column: 47, scope: !5635)
!5648 = !DILocation(line: 1894, column: 7, scope: !5635)
!5649 = !DILocation(line: 1895, column: 6, scope: !5635)
!5650 = !DILocation(line: 1897, column: 14, scope: !5588)
!5651 = !DILocation(line: 1898, column: 5, scope: !5588)
!5652 = !DILocation(line: 1899, column: 4, scope: !5579)
!5653 = !DILocation(line: 1872, column: 40, scope: !5573)
!5654 = !DILocation(line: 1872, column: 4, scope: !5573)
!5655 = distinct !{!5655, !5577, !5656}
!5656 = !DILocation(line: 1899, column: 4, scope: !5569)
!5657 = !DILocation(line: 1900, column: 3, scope: !5570)
!5658 = !DILocation(line: 1871, column: 58, scope: !5566)
!5659 = !DILocation(line: 1871, column: 66, scope: !5566)
!5660 = !DILocation(line: 1871, column: 56, scope: !5566)
!5661 = !DILocation(line: 1871, column: 3, scope: !5566)
!5662 = distinct !{!5662, !5567, !5663}
!5663 = !DILocation(line: 1900, column: 3, scope: !5560)
!5664 = !DILocation(line: 1901, column: 2, scope: !5548)
!5665 = !DILocation(line: 1863, column: 60, scope: !5545)
!5666 = !DILocation(line: 1863, column: 69, scope: !5545)
!5667 = !DILocation(line: 1863, column: 58, scope: !5545)
!5668 = !DILocation(line: 1863, column: 2, scope: !5545)
!5669 = distinct !{!5669, !5546, !5670}
!5670 = !DILocation(line: 1901, column: 2, scope: !5539)
!5671 = !DILocation(line: 1903, column: 6, scope: !5672)
!5672 = distinct !DILexicalBlock(scope: !5520, file: !3, line: 1903, column: 6)
!5673 = !DILocation(line: 1903, column: 6, scope: !5520)
!5674 = !DILocation(line: 1904, column: 25, scope: !5675)
!5675 = distinct !DILexicalBlock(scope: !5672, file: !3, line: 1903, column: 15)
!5676 = !DILocation(line: 1904, column: 47, scope: !5675)
!5677 = !DILocation(line: 1904, column: 3, scope: !5675)
!5678 = !DILocation(line: 1905, column: 22, scope: !5675)
!5679 = !DILocation(line: 1905, column: 28, scope: !5675)
!5680 = !DILocation(line: 1905, column: 3, scope: !5675)
!5681 = !DILocation(line: 1907, column: 3, scope: !5675)
!5682 = !DILocation(line: 1909, column: 2, scope: !5520)
!5683 = !DILocation(line: 1910, column: 1, scope: !5520)
!5684 = distinct !DISubprogram(name: "MASK_OT_hide_view_clear", scope: !3, file: !3, line: 1968, type: !4, scopeLine: 1969, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1817, retainedNodes: !2254)
!5685 = !DILocalVariable(name: "ot", arg: 1, scope: !5684, file: !3, line: 1968, type: !6)
!5686 = !DILocation(line: 1968, column: 46, scope: !5684)
!5687 = !DILocation(line: 1972, column: 2, scope: !5684)
!5688 = !DILocation(line: 1972, column: 6, scope: !5684)
!5689 = !DILocation(line: 1972, column: 11, scope: !5684)
!5690 = !DILocation(line: 1973, column: 2, scope: !5684)
!5691 = !DILocation(line: 1973, column: 6, scope: !5684)
!5692 = !DILocation(line: 1973, column: 18, scope: !5684)
!5693 = !DILocation(line: 1974, column: 2, scope: !5684)
!5694 = !DILocation(line: 1974, column: 6, scope: !5684)
!5695 = !DILocation(line: 1974, column: 13, scope: !5684)
!5696 = !DILocation(line: 1977, column: 2, scope: !5684)
!5697 = !DILocation(line: 1977, column: 6, scope: !5684)
!5698 = !DILocation(line: 1977, column: 11, scope: !5684)
!5699 = !DILocation(line: 1978, column: 2, scope: !5684)
!5700 = !DILocation(line: 1978, column: 6, scope: !5684)
!5701 = !DILocation(line: 1978, column: 11, scope: !5684)
!5702 = !DILocation(line: 1981, column: 2, scope: !5684)
!5703 = !DILocation(line: 1981, column: 6, scope: !5684)
!5704 = !DILocation(line: 1981, column: 11, scope: !5684)
!5705 = !DILocation(line: 1982, column: 1, scope: !5684)
!5706 = distinct !DISubprogram(name: "mask_hide_view_clear_exec", scope: !3, file: !3, line: 1942, type: !3422, scopeLine: 1943, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1817, retainedNodes: !2254)
!5707 = !DILocalVariable(name: "C", arg: 1, scope: !5706, file: !3, line: 1942, type: !3090)
!5708 = !DILocation(line: 1942, column: 48, scope: !5706)
!5709 = !DILocalVariable(name: "UNUSED_op", arg: 2, scope: !5706, file: !3, line: 1942, type: !3424)
!5710 = !DILocation(line: 1942, column: 63, scope: !5706)
!5711 = !DILocalVariable(name: "mask", scope: !5706, file: !3, line: 1944, type: !2120)
!5712 = !DILocation(line: 1944, column: 8, scope: !5706)
!5713 = !DILocation(line: 1944, column: 34, scope: !5706)
!5714 = !DILocation(line: 1944, column: 15, scope: !5706)
!5715 = !DILocalVariable(name: "masklay", scope: !5706, file: !3, line: 1945, type: !2123)
!5716 = !DILocation(line: 1945, column: 13, scope: !5706)
!5717 = !DILocalVariable(name: "changed", scope: !5706, file: !3, line: 1946, type: !1017)
!5718 = !DILocation(line: 1946, column: 7, scope: !5706)
!5719 = !DILocation(line: 1948, column: 17, scope: !5720)
!5720 = distinct !DILexicalBlock(scope: !5706, file: !3, line: 1948, column: 2)
!5721 = !DILocation(line: 1948, column: 23, scope: !5720)
!5722 = !DILocation(line: 1948, column: 34, scope: !5720)
!5723 = !DILocation(line: 1948, column: 15, scope: !5720)
!5724 = !DILocation(line: 1948, column: 7, scope: !5720)
!5725 = !DILocation(line: 1948, column: 41, scope: !5726)
!5726 = distinct !DILexicalBlock(scope: !5720, file: !3, line: 1948, column: 2)
!5727 = !DILocation(line: 1948, column: 2, scope: !5720)
!5728 = !DILocation(line: 1950, column: 7, scope: !5729)
!5729 = distinct !DILexicalBlock(scope: !5730, file: !3, line: 1950, column: 7)
!5730 = distinct !DILexicalBlock(scope: !5726, file: !3, line: 1948, column: 75)
!5731 = !DILocation(line: 1950, column: 16, scope: !5729)
!5732 = !DILocation(line: 1950, column: 29, scope: !5729)
!5733 = !DILocation(line: 1950, column: 7, scope: !5730)
!5734 = !DILocation(line: 1951, column: 29, scope: !5735)
!5735 = distinct !DILexicalBlock(scope: !5729, file: !3, line: 1950, column: 49)
!5736 = !DILocation(line: 1951, column: 4, scope: !5735)
!5737 = !DILocation(line: 1952, column: 4, scope: !5735)
!5738 = !DILocation(line: 1952, column: 13, scope: !5735)
!5739 = !DILocation(line: 1952, column: 26, scope: !5735)
!5740 = !DILocation(line: 1953, column: 12, scope: !5735)
!5741 = !DILocation(line: 1954, column: 3, scope: !5735)
!5742 = !DILocation(line: 1955, column: 2, scope: !5730)
!5743 = !DILocation(line: 1948, column: 60, scope: !5726)
!5744 = !DILocation(line: 1948, column: 69, scope: !5726)
!5745 = !DILocation(line: 1948, column: 58, scope: !5726)
!5746 = !DILocation(line: 1948, column: 2, scope: !5726)
!5747 = distinct !{!5747, !5727, !5748}
!5748 = !DILocation(line: 1955, column: 2, scope: !5720)
!5749 = !DILocation(line: 1957, column: 6, scope: !5750)
!5750 = distinct !DILexicalBlock(scope: !5706, file: !3, line: 1957, column: 6)
!5751 = !DILocation(line: 1957, column: 6, scope: !5706)
!5752 = !DILocation(line: 1958, column: 25, scope: !5753)
!5753 = distinct !DILexicalBlock(scope: !5750, file: !3, line: 1957, column: 15)
!5754 = !DILocation(line: 1958, column: 47, scope: !5753)
!5755 = !DILocation(line: 1958, column: 3, scope: !5753)
!5756 = !DILocation(line: 1959, column: 22, scope: !5753)
!5757 = !DILocation(line: 1959, column: 28, scope: !5753)
!5758 = !DILocation(line: 1959, column: 3, scope: !5753)
!5759 = !DILocation(line: 1961, column: 3, scope: !5753)
!5760 = !DILocation(line: 1964, column: 3, scope: !5761)
!5761 = distinct !DILexicalBlock(scope: !5750, file: !3, line: 1963, column: 7)
!5762 = !DILocation(line: 1966, column: 1, scope: !5706)
!5763 = distinct !DISubprogram(name: "MASK_OT_hide_view_set", scope: !3, file: !3, line: 2030, type: !4, scopeLine: 2031, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1817, retainedNodes: !2254)
!5764 = !DILocalVariable(name: "ot", arg: 1, scope: !5763, file: !3, line: 2030, type: !6)
!5765 = !DILocation(line: 2030, column: 44, scope: !5763)
!5766 = !DILocation(line: 2033, column: 2, scope: !5763)
!5767 = !DILocation(line: 2033, column: 6, scope: !5763)
!5768 = !DILocation(line: 2033, column: 11, scope: !5763)
!5769 = !DILocation(line: 2034, column: 2, scope: !5763)
!5770 = !DILocation(line: 2034, column: 6, scope: !5763)
!5771 = !DILocation(line: 2034, column: 18, scope: !5763)
!5772 = !DILocation(line: 2035, column: 2, scope: !5763)
!5773 = !DILocation(line: 2035, column: 6, scope: !5763)
!5774 = !DILocation(line: 2035, column: 13, scope: !5763)
!5775 = !DILocation(line: 2038, column: 2, scope: !5763)
!5776 = !DILocation(line: 2038, column: 6, scope: !5763)
!5777 = !DILocation(line: 2038, column: 11, scope: !5763)
!5778 = !DILocation(line: 2039, column: 2, scope: !5763)
!5779 = !DILocation(line: 2039, column: 6, scope: !5763)
!5780 = !DILocation(line: 2039, column: 11, scope: !5763)
!5781 = !DILocation(line: 2042, column: 2, scope: !5763)
!5782 = !DILocation(line: 2042, column: 6, scope: !5763)
!5783 = !DILocation(line: 2042, column: 11, scope: !5763)
!5784 = !DILocation(line: 2044, column: 18, scope: !5763)
!5785 = !DILocation(line: 2044, column: 22, scope: !5763)
!5786 = !DILocation(line: 2044, column: 2, scope: !5763)
!5787 = !DILocation(line: 2045, column: 1, scope: !5763)
!5788 = distinct !DISubprogram(name: "mask_hide_view_set_exec", scope: !3, file: !3, line: 1984, type: !3422, scopeLine: 1985, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1817, retainedNodes: !2254)
!5789 = !DILocalVariable(name: "C", arg: 1, scope: !5788, file: !3, line: 1984, type: !3090)
!5790 = !DILocation(line: 1984, column: 46, scope: !5788)
!5791 = !DILocalVariable(name: "op", arg: 2, scope: !5788, file: !3, line: 1984, type: !3424)
!5792 = !DILocation(line: 1984, column: 61, scope: !5788)
!5793 = !DILocalVariable(name: "mask", scope: !5788, file: !3, line: 1986, type: !2120)
!5794 = !DILocation(line: 1986, column: 8, scope: !5788)
!5795 = !DILocation(line: 1986, column: 34, scope: !5788)
!5796 = !DILocation(line: 1986, column: 15, scope: !5788)
!5797 = !DILocalVariable(name: "masklay", scope: !5788, file: !3, line: 1987, type: !2123)
!5798 = !DILocation(line: 1987, column: 13, scope: !5788)
!5799 = !DILocalVariable(name: "unselected", scope: !5788, file: !3, line: 1988, type: !5800)
!5800 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1017)
!5801 = !DILocation(line: 1988, column: 13, scope: !5788)
!5802 = !DILocation(line: 1988, column: 42, scope: !5788)
!5803 = !DILocation(line: 1988, column: 46, scope: !5788)
!5804 = !DILocation(line: 1988, column: 26, scope: !5788)
!5805 = !DILocalVariable(name: "changed", scope: !5788, file: !3, line: 1989, type: !1017)
!5806 = !DILocation(line: 1989, column: 7, scope: !5788)
!5807 = !DILocation(line: 1991, column: 17, scope: !5808)
!5808 = distinct !DILexicalBlock(scope: !5788, file: !3, line: 1991, column: 2)
!5809 = !DILocation(line: 1991, column: 23, scope: !5808)
!5810 = !DILocation(line: 1991, column: 34, scope: !5808)
!5811 = !DILocation(line: 1991, column: 15, scope: !5808)
!5812 = !DILocation(line: 1991, column: 7, scope: !5808)
!5813 = !DILocation(line: 1991, column: 41, scope: !5814)
!5814 = distinct !DILexicalBlock(scope: !5808, file: !3, line: 1991, column: 2)
!5815 = !DILocation(line: 1991, column: 2, scope: !5808)
!5816 = !DILocation(line: 1993, column: 7, scope: !5817)
!5817 = distinct !DILexicalBlock(scope: !5818, file: !3, line: 1993, column: 7)
!5818 = distinct !DILexicalBlock(scope: !5814, file: !3, line: 1991, column: 75)
!5819 = !DILocation(line: 1993, column: 16, scope: !5817)
!5820 = !DILocation(line: 1993, column: 29, scope: !5817)
!5821 = !DILocation(line: 1993, column: 7, scope: !5818)
!5822 = !DILocation(line: 1994, column: 4, scope: !5823)
!5823 = distinct !DILexicalBlock(scope: !5817, file: !3, line: 1993, column: 53)
!5824 = !DILocation(line: 1997, column: 8, scope: !5825)
!5825 = distinct !DILexicalBlock(scope: !5818, file: !3, line: 1997, column: 7)
!5826 = !DILocation(line: 1997, column: 7, scope: !5818)
!5827 = !DILocation(line: 1998, column: 35, scope: !5828)
!5828 = distinct !DILexicalBlock(scope: !5829, file: !3, line: 1998, column: 8)
!5829 = distinct !DILexicalBlock(scope: !5825, file: !3, line: 1997, column: 20)
!5830 = !DILocation(line: 1998, column: 8, scope: !5828)
!5831 = !DILocation(line: 1998, column: 8, scope: !5829)
!5832 = !DILocation(line: 1999, column: 30, scope: !5833)
!5833 = distinct !DILexicalBlock(scope: !5828, file: !3, line: 1998, column: 45)
!5834 = !DILocation(line: 1999, column: 5, scope: !5833)
!5835 = !DILocation(line: 2001, column: 5, scope: !5833)
!5836 = !DILocation(line: 2001, column: 14, scope: !5833)
!5837 = !DILocation(line: 2001, column: 27, scope: !5833)
!5838 = !DILocation(line: 2002, column: 13, scope: !5833)
!5839 = !DILocation(line: 2003, column: 9, scope: !5840)
!5840 = distinct !DILexicalBlock(scope: !5833, file: !3, line: 2003, column: 9)
!5841 = !DILocation(line: 2003, column: 42, scope: !5840)
!5842 = !DILocation(line: 2003, column: 20, scope: !5840)
!5843 = !DILocation(line: 2003, column: 17, scope: !5840)
!5844 = !DILocation(line: 2003, column: 9, scope: !5833)
!5845 = !DILocation(line: 2004, column: 32, scope: !5846)
!5846 = distinct !DILexicalBlock(scope: !5840, file: !3, line: 2003, column: 49)
!5847 = !DILocation(line: 2004, column: 6, scope: !5846)
!5848 = !DILocation(line: 2005, column: 5, scope: !5846)
!5849 = !DILocation(line: 2006, column: 4, scope: !5833)
!5850 = !DILocation(line: 2007, column: 3, scope: !5829)
!5851 = !DILocation(line: 2009, column: 36, scope: !5852)
!5852 = distinct !DILexicalBlock(scope: !5853, file: !3, line: 2009, column: 8)
!5853 = distinct !DILexicalBlock(scope: !5825, file: !3, line: 2008, column: 8)
!5854 = !DILocation(line: 2009, column: 9, scope: !5852)
!5855 = !DILocation(line: 2009, column: 8, scope: !5853)
!5856 = !DILocation(line: 2010, column: 5, scope: !5857)
!5857 = distinct !DILexicalBlock(scope: !5852, file: !3, line: 2009, column: 46)
!5858 = !DILocation(line: 2010, column: 14, scope: !5857)
!5859 = !DILocation(line: 2010, column: 27, scope: !5857)
!5860 = !DILocation(line: 2011, column: 13, scope: !5857)
!5861 = !DILocation(line: 2012, column: 9, scope: !5862)
!5862 = distinct !DILexicalBlock(scope: !5857, file: !3, line: 2012, column: 9)
!5863 = !DILocation(line: 2012, column: 42, scope: !5862)
!5864 = !DILocation(line: 2012, column: 20, scope: !5862)
!5865 = !DILocation(line: 2012, column: 17, scope: !5862)
!5866 = !DILocation(line: 2012, column: 9, scope: !5857)
!5867 = !DILocation(line: 2013, column: 32, scope: !5868)
!5868 = distinct !DILexicalBlock(scope: !5862, file: !3, line: 2012, column: 49)
!5869 = !DILocation(line: 2013, column: 6, scope: !5868)
!5870 = !DILocation(line: 2014, column: 5, scope: !5868)
!5871 = !DILocation(line: 2015, column: 4, scope: !5857)
!5872 = !DILocation(line: 2017, column: 2, scope: !5818)
!5873 = !DILocation(line: 1991, column: 60, scope: !5814)
!5874 = !DILocation(line: 1991, column: 69, scope: !5814)
!5875 = !DILocation(line: 1991, column: 58, scope: !5814)
!5876 = !DILocation(line: 1991, column: 2, scope: !5814)
!5877 = distinct !{!5877, !5815, !5878}
!5878 = !DILocation(line: 2017, column: 2, scope: !5808)
!5879 = !DILocation(line: 2019, column: 6, scope: !5880)
!5880 = distinct !DILexicalBlock(scope: !5788, file: !3, line: 2019, column: 6)
!5881 = !DILocation(line: 2019, column: 6, scope: !5788)
!5882 = !DILocation(line: 2020, column: 25, scope: !5883)
!5883 = distinct !DILexicalBlock(scope: !5880, file: !3, line: 2019, column: 15)
!5884 = !DILocation(line: 2020, column: 47, scope: !5883)
!5885 = !DILocation(line: 2020, column: 3, scope: !5883)
!5886 = !DILocation(line: 2021, column: 22, scope: !5883)
!5887 = !DILocation(line: 2021, column: 28, scope: !5883)
!5888 = !DILocation(line: 2021, column: 3, scope: !5883)
!5889 = !DILocation(line: 2023, column: 3, scope: !5883)
!5890 = !DILocation(line: 2026, column: 3, scope: !5891)
!5891 = distinct !DILexicalBlock(scope: !5880, file: !3, line: 2025, column: 7)
!5892 = !DILocation(line: 2028, column: 1, scope: !5788)
!5893 = distinct !DISubprogram(name: "MASK_OT_feather_weight_clear", scope: !3, file: !3, line: 2090, type: !4, scopeLine: 2091, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1817, retainedNodes: !2254)
!5894 = !DILocalVariable(name: "ot", arg: 1, scope: !5893, file: !3, line: 2090, type: !6)
!5895 = !DILocation(line: 2090, column: 51, scope: !5893)
!5896 = !DILocation(line: 2093, column: 2, scope: !5893)
!5897 = !DILocation(line: 2093, column: 6, scope: !5893)
!5898 = !DILocation(line: 2093, column: 11, scope: !5893)
!5899 = !DILocation(line: 2094, column: 2, scope: !5893)
!5900 = !DILocation(line: 2094, column: 6, scope: !5893)
!5901 = !DILocation(line: 2094, column: 18, scope: !5893)
!5902 = !DILocation(line: 2095, column: 2, scope: !5893)
!5903 = !DILocation(line: 2095, column: 6, scope: !5893)
!5904 = !DILocation(line: 2095, column: 13, scope: !5893)
!5905 = !DILocation(line: 2098, column: 2, scope: !5893)
!5906 = !DILocation(line: 2098, column: 6, scope: !5893)
!5907 = !DILocation(line: 2098, column: 11, scope: !5893)
!5908 = !DILocation(line: 2099, column: 2, scope: !5893)
!5909 = !DILocation(line: 2099, column: 6, scope: !5893)
!5910 = !DILocation(line: 2099, column: 11, scope: !5893)
!5911 = !DILocation(line: 2102, column: 2, scope: !5893)
!5912 = !DILocation(line: 2102, column: 6, scope: !5893)
!5913 = !DILocation(line: 2102, column: 11, scope: !5893)
!5914 = !DILocation(line: 2103, column: 1, scope: !5893)
!5915 = distinct !DISubprogram(name: "mask_feather_weight_clear_exec", scope: !3, file: !3, line: 2048, type: !3422, scopeLine: 2049, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1817, retainedNodes: !2254)
!5916 = !DILocalVariable(name: "C", arg: 1, scope: !5915, file: !3, line: 2048, type: !3090)
!5917 = !DILocation(line: 2048, column: 53, scope: !5915)
!5918 = !DILocalVariable(name: "UNUSED_op", arg: 2, scope: !5915, file: !3, line: 2048, type: !3424)
!5919 = !DILocation(line: 2048, column: 68, scope: !5915)
!5920 = !DILocalVariable(name: "scene", scope: !5915, file: !3, line: 2050, type: !4238)
!5921 = !DILocation(line: 2050, column: 9, scope: !5915)
!5922 = !DILocation(line: 2050, column: 32, scope: !5915)
!5923 = !DILocation(line: 2050, column: 17, scope: !5915)
!5924 = !DILocalVariable(name: "mask", scope: !5915, file: !3, line: 2051, type: !2120)
!5925 = !DILocation(line: 2051, column: 8, scope: !5915)
!5926 = !DILocation(line: 2051, column: 34, scope: !5915)
!5927 = !DILocation(line: 2051, column: 15, scope: !5915)
!5928 = !DILocalVariable(name: "masklay", scope: !5915, file: !3, line: 2052, type: !2123)
!5929 = !DILocation(line: 2052, column: 13, scope: !5915)
!5930 = !DILocalVariable(name: "changed", scope: !5915, file: !3, line: 2053, type: !1017)
!5931 = !DILocation(line: 2053, column: 7, scope: !5915)
!5932 = !DILocalVariable(name: "i", scope: !5915, file: !3, line: 2054, type: !22)
!5933 = !DILocation(line: 2054, column: 6, scope: !5915)
!5934 = !DILocation(line: 2056, column: 17, scope: !5935)
!5935 = distinct !DILexicalBlock(scope: !5915, file: !3, line: 2056, column: 2)
!5936 = !DILocation(line: 2056, column: 23, scope: !5935)
!5937 = !DILocation(line: 2056, column: 34, scope: !5935)
!5938 = !DILocation(line: 2056, column: 15, scope: !5935)
!5939 = !DILocation(line: 2056, column: 7, scope: !5935)
!5940 = !DILocation(line: 2056, column: 41, scope: !5941)
!5941 = distinct !DILexicalBlock(scope: !5935, file: !3, line: 2056, column: 2)
!5942 = !DILocation(line: 2056, column: 2, scope: !5935)
!5943 = !DILocalVariable(name: "spline", scope: !5944, file: !3, line: 2057, type: !2204)
!5944 = distinct !DILexicalBlock(scope: !5941, file: !3, line: 2056, column: 75)
!5945 = !DILocation(line: 2057, column: 15, scope: !5944)
!5946 = !DILocation(line: 2059, column: 7, scope: !5947)
!5947 = distinct !DILexicalBlock(scope: !5944, file: !3, line: 2059, column: 7)
!5948 = !DILocation(line: 2059, column: 16, scope: !5947)
!5949 = !DILocation(line: 2059, column: 29, scope: !5947)
!5950 = !DILocation(line: 2059, column: 7, scope: !5944)
!5951 = !DILocation(line: 2060, column: 4, scope: !5952)
!5952 = distinct !DILexicalBlock(scope: !5947, file: !3, line: 2059, column: 76)
!5953 = !DILocation(line: 2063, column: 17, scope: !5954)
!5954 = distinct !DILexicalBlock(scope: !5944, file: !3, line: 2063, column: 3)
!5955 = !DILocation(line: 2063, column: 26, scope: !5954)
!5956 = !DILocation(line: 2063, column: 34, scope: !5954)
!5957 = !DILocation(line: 2063, column: 15, scope: !5954)
!5958 = !DILocation(line: 2063, column: 8, scope: !5954)
!5959 = !DILocation(line: 2063, column: 41, scope: !5960)
!5960 = distinct !DILexicalBlock(scope: !5954, file: !3, line: 2063, column: 3)
!5961 = !DILocation(line: 2063, column: 3, scope: !5954)
!5962 = !DILocation(line: 2064, column: 11, scope: !5963)
!5963 = distinct !DILexicalBlock(scope: !5964, file: !3, line: 2064, column: 4)
!5964 = distinct !DILexicalBlock(scope: !5960, file: !3, line: 2063, column: 72)
!5965 = !DILocation(line: 2064, column: 9, scope: !5963)
!5966 = !DILocation(line: 2064, column: 16, scope: !5967)
!5967 = distinct !DILexicalBlock(scope: !5963, file: !3, line: 2064, column: 4)
!5968 = !DILocation(line: 2064, column: 20, scope: !5967)
!5969 = !DILocation(line: 2064, column: 28, scope: !5967)
!5970 = !DILocation(line: 2064, column: 18, scope: !5967)
!5971 = !DILocation(line: 2064, column: 4, scope: !5963)
!5972 = !DILocalVariable(name: "point", scope: !5973, file: !3, line: 2065, type: !2144)
!5973 = distinct !DILexicalBlock(scope: !5967, file: !3, line: 2064, column: 44)
!5974 = !DILocation(line: 2065, column: 22, scope: !5973)
!5975 = !DILocation(line: 2065, column: 31, scope: !5973)
!5976 = !DILocation(line: 2065, column: 39, scope: !5973)
!5977 = !DILocation(line: 2065, column: 46, scope: !5973)
!5978 = !DILocation(line: 2067, column: 9, scope: !5979)
!5979 = distinct !DILexicalBlock(scope: !5973, file: !3, line: 2067, column: 9)
!5980 = !DILocation(line: 2067, column: 9, scope: !5973)
!5981 = !DILocalVariable(name: "bezt", scope: !5982, file: !3, line: 2068, type: !2240)
!5982 = distinct !DILexicalBlock(scope: !5979, file: !3, line: 2067, column: 37)
!5983 = !DILocation(line: 2068, column: 17, scope: !5982)
!5984 = !DILocation(line: 2068, column: 25, scope: !5982)
!5985 = !DILocation(line: 2068, column: 32, scope: !5982)
!5986 = !DILocation(line: 2069, column: 6, scope: !5982)
!5987 = !DILocation(line: 2069, column: 12, scope: !5982)
!5988 = !DILocation(line: 2069, column: 19, scope: !5982)
!5989 = !DILocation(line: 2070, column: 14, scope: !5982)
!5990 = !DILocation(line: 2071, column: 5, scope: !5982)
!5991 = !DILocation(line: 2072, column: 4, scope: !5973)
!5992 = !DILocation(line: 2064, column: 40, scope: !5967)
!5993 = !DILocation(line: 2064, column: 4, scope: !5967)
!5994 = distinct !{!5994, !5971, !5995}
!5995 = !DILocation(line: 2072, column: 4, scope: !5963)
!5996 = !DILocation(line: 2073, column: 3, scope: !5964)
!5997 = !DILocation(line: 2063, column: 58, scope: !5960)
!5998 = !DILocation(line: 2063, column: 66, scope: !5960)
!5999 = !DILocation(line: 2063, column: 56, scope: !5960)
!6000 = !DILocation(line: 2063, column: 3, scope: !5960)
!6001 = distinct !{!6001, !5961, !6002}
!6002 = !DILocation(line: 2073, column: 3, scope: !5954)
!6003 = !DILocation(line: 2074, column: 2, scope: !5944)
!6004 = !DILocation(line: 2056, column: 60, scope: !5941)
!6005 = !DILocation(line: 2056, column: 69, scope: !5941)
!6006 = !DILocation(line: 2056, column: 58, scope: !5941)
!6007 = !DILocation(line: 2056, column: 2, scope: !5941)
!6008 = distinct !{!6008, !5942, !6009}
!6009 = !DILocation(line: 2074, column: 2, scope: !5935)
!6010 = !DILocation(line: 2076, column: 6, scope: !6011)
!6011 = distinct !DILexicalBlock(scope: !5915, file: !3, line: 2076, column: 6)
!6012 = !DILocation(line: 2076, column: 6, scope: !5915)
!6013 = !DILocation(line: 2078, column: 27, scope: !6014)
!6014 = distinct !DILexicalBlock(scope: !6011, file: !3, line: 2076, column: 15)
!6015 = !DILocation(line: 2078, column: 33, scope: !6014)
!6016 = !DILocation(line: 2078, column: 3, scope: !6014)
!6017 = !DILocation(line: 2080, column: 25, scope: !6014)
!6018 = !DILocation(line: 2080, column: 47, scope: !6014)
!6019 = !DILocation(line: 2080, column: 3, scope: !6014)
!6020 = !DILocation(line: 2081, column: 22, scope: !6014)
!6021 = !DILocation(line: 2081, column: 28, scope: !6014)
!6022 = !DILocation(line: 2081, column: 3, scope: !6014)
!6023 = !DILocation(line: 2083, column: 3, scope: !6014)
!6024 = !DILocation(line: 2086, column: 3, scope: !6025)
!6025 = distinct !DILexicalBlock(scope: !6011, file: !3, line: 2085, column: 7)
!6026 = !DILocation(line: 2088, column: 1, scope: !5915)
!6027 = !DILocalVariable(name: "ot", arg: 1, scope: !2253, file: !3, line: 2154, type: !6)
!6028 = !DILocation(line: 2154, column: 41, scope: !2253)
!6029 = !DILocation(line: 2163, column: 2, scope: !2253)
!6030 = !DILocation(line: 2163, column: 6, scope: !2253)
!6031 = !DILocation(line: 2163, column: 11, scope: !2253)
!6032 = !DILocation(line: 2164, column: 2, scope: !2253)
!6033 = !DILocation(line: 2164, column: 6, scope: !2253)
!6034 = !DILocation(line: 2164, column: 18, scope: !2253)
!6035 = !DILocation(line: 2165, column: 2, scope: !2253)
!6036 = !DILocation(line: 2165, column: 6, scope: !2253)
!6037 = !DILocation(line: 2165, column: 13, scope: !2253)
!6038 = !DILocation(line: 2168, column: 2, scope: !2253)
!6039 = !DILocation(line: 2168, column: 6, scope: !2253)
!6040 = !DILocation(line: 2168, column: 11, scope: !2253)
!6041 = !DILocation(line: 2169, column: 2, scope: !2253)
!6042 = !DILocation(line: 2169, column: 6, scope: !2253)
!6043 = !DILocation(line: 2169, column: 11, scope: !2253)
!6044 = !DILocation(line: 2172, column: 2, scope: !2253)
!6045 = !DILocation(line: 2172, column: 6, scope: !2253)
!6046 = !DILocation(line: 2172, column: 11, scope: !2253)
!6047 = !DILocation(line: 2175, column: 15, scope: !2253)
!6048 = !DILocation(line: 2175, column: 19, scope: !2253)
!6049 = !DILocation(line: 2175, column: 2, scope: !2253)
!6050 = !DILocation(line: 2176, column: 1, scope: !2253)
!6051 = distinct !DISubprogram(name: "mask_layer_move_exec", scope: !3, file: !3, line: 2118, type: !3422, scopeLine: 2119, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1817, retainedNodes: !2254)
!6052 = !DILocalVariable(name: "C", arg: 1, scope: !6051, file: !3, line: 2118, type: !3090)
!6053 = !DILocation(line: 2118, column: 43, scope: !6051)
!6054 = !DILocalVariable(name: "op", arg: 2, scope: !6051, file: !3, line: 2118, type: !3424)
!6055 = !DILocation(line: 2118, column: 58, scope: !6051)
!6056 = !DILocalVariable(name: "mask", scope: !6051, file: !3, line: 2120, type: !2120)
!6057 = !DILocation(line: 2120, column: 8, scope: !6051)
!6058 = !DILocation(line: 2120, column: 34, scope: !6051)
!6059 = !DILocation(line: 2120, column: 15, scope: !6051)
!6060 = !DILocalVariable(name: "mask_layer", scope: !6051, file: !3, line: 2121, type: !2123)
!6061 = !DILocation(line: 2121, column: 13, scope: !6051)
!6062 = !DILocation(line: 2121, column: 40, scope: !6051)
!6063 = !DILocation(line: 2121, column: 46, scope: !6051)
!6064 = !DILocation(line: 2121, column: 58, scope: !6051)
!6065 = !DILocation(line: 2121, column: 64, scope: !6051)
!6066 = !DILocation(line: 2121, column: 26, scope: !6051)
!6067 = !DILocalVariable(name: "mask_layer_other", scope: !6051, file: !3, line: 2122, type: !2123)
!6068 = !DILocation(line: 2122, column: 13, scope: !6051)
!6069 = !DILocalVariable(name: "direction", scope: !6051, file: !3, line: 2123, type: !22)
!6070 = !DILocation(line: 2123, column: 6, scope: !6051)
!6071 = !DILocation(line: 2123, column: 31, scope: !6051)
!6072 = !DILocation(line: 2123, column: 35, scope: !6051)
!6073 = !DILocation(line: 2123, column: 18, scope: !6051)
!6074 = !DILocation(line: 2125, column: 7, scope: !6075)
!6075 = distinct !DILexicalBlock(scope: !6051, file: !3, line: 2125, column: 6)
!6076 = !DILocation(line: 2125, column: 6, scope: !6051)
!6077 = !DILocation(line: 2126, column: 3, scope: !6075)
!6078 = !DILocation(line: 2128, column: 6, scope: !6079)
!6079 = distinct !DILexicalBlock(scope: !6051, file: !3, line: 2128, column: 6)
!6080 = !DILocation(line: 2128, column: 16, scope: !6079)
!6081 = !DILocation(line: 2128, column: 6, scope: !6051)
!6082 = !DILocation(line: 2129, column: 22, scope: !6083)
!6083 = distinct !DILexicalBlock(scope: !6079, file: !3, line: 2128, column: 23)
!6084 = !DILocation(line: 2129, column: 34, scope: !6083)
!6085 = !DILocation(line: 2129, column: 20, scope: !6083)
!6086 = !DILocation(line: 2131, column: 8, scope: !6087)
!6087 = distinct !DILexicalBlock(scope: !6083, file: !3, line: 2131, column: 7)
!6088 = !DILocation(line: 2131, column: 7, scope: !6083)
!6089 = !DILocation(line: 2132, column: 4, scope: !6087)
!6090 = !DILocation(line: 2134, column: 16, scope: !6083)
!6091 = !DILocation(line: 2134, column: 22, scope: !6083)
!6092 = !DILocation(line: 2134, column: 34, scope: !6083)
!6093 = !DILocation(line: 2134, column: 3, scope: !6083)
!6094 = !DILocation(line: 2135, column: 25, scope: !6083)
!6095 = !DILocation(line: 2135, column: 31, scope: !6083)
!6096 = !DILocation(line: 2135, column: 43, scope: !6083)
!6097 = !DILocation(line: 2135, column: 61, scope: !6083)
!6098 = !DILocation(line: 2135, column: 3, scope: !6083)
!6099 = !DILocation(line: 2136, column: 3, scope: !6083)
!6100 = !DILocation(line: 2136, column: 9, scope: !6083)
!6101 = !DILocation(line: 2136, column: 20, scope: !6083)
!6102 = !DILocation(line: 2137, column: 2, scope: !6083)
!6103 = !DILocation(line: 2138, column: 11, scope: !6104)
!6104 = distinct !DILexicalBlock(scope: !6079, file: !3, line: 2138, column: 11)
!6105 = !DILocation(line: 2138, column: 21, scope: !6104)
!6106 = !DILocation(line: 2138, column: 11, scope: !6079)
!6107 = !DILocation(line: 2139, column: 22, scope: !6108)
!6108 = distinct !DILexicalBlock(scope: !6104, file: !3, line: 2138, column: 27)
!6109 = !DILocation(line: 2139, column: 34, scope: !6108)
!6110 = !DILocation(line: 2139, column: 20, scope: !6108)
!6111 = !DILocation(line: 2141, column: 8, scope: !6112)
!6112 = distinct !DILexicalBlock(scope: !6108, file: !3, line: 2141, column: 7)
!6113 = !DILocation(line: 2141, column: 7, scope: !6108)
!6114 = !DILocation(line: 2142, column: 4, scope: !6112)
!6115 = !DILocation(line: 2144, column: 16, scope: !6108)
!6116 = !DILocation(line: 2144, column: 22, scope: !6108)
!6117 = !DILocation(line: 2144, column: 34, scope: !6108)
!6118 = !DILocation(line: 2144, column: 3, scope: !6108)
!6119 = !DILocation(line: 2145, column: 24, scope: !6108)
!6120 = !DILocation(line: 2145, column: 30, scope: !6108)
!6121 = !DILocation(line: 2145, column: 42, scope: !6108)
!6122 = !DILocation(line: 2145, column: 60, scope: !6108)
!6123 = !DILocation(line: 2145, column: 3, scope: !6108)
!6124 = !DILocation(line: 2146, column: 3, scope: !6108)
!6125 = !DILocation(line: 2146, column: 9, scope: !6108)
!6126 = !DILocation(line: 2146, column: 20, scope: !6108)
!6127 = !DILocation(line: 2147, column: 2, scope: !6108)
!6128 = !DILocation(line: 2149, column: 24, scope: !6051)
!6129 = !DILocation(line: 2149, column: 48, scope: !6051)
!6130 = !DILocation(line: 2149, column: 2, scope: !6051)
!6131 = !DILocation(line: 2151, column: 2, scope: !6051)
!6132 = !DILocation(line: 2152, column: 1, scope: !6051)
!6133 = distinct !DISubprogram(name: "mask_layer_move_poll", scope: !3, file: !3, line: 2107, type: !6134, scopeLine: 2108, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1817, retainedNodes: !2254)
!6134 = !DISubroutineType(types: !6135)
!6135 = !{!22, !3090}
!6136 = !DILocalVariable(name: "C", arg: 1, scope: !6133, file: !3, line: 2107, type: !3090)
!6137 = !DILocation(line: 2107, column: 43, scope: !6133)
!6138 = !DILocation(line: 2109, column: 28, scope: !6139)
!6139 = distinct !DILexicalBlock(scope: !6133, file: !3, line: 2109, column: 6)
!6140 = !DILocation(line: 2109, column: 6, scope: !6139)
!6141 = !DILocation(line: 2109, column: 6, scope: !6133)
!6142 = !DILocalVariable(name: "mask", scope: !6143, file: !3, line: 2110, type: !2120)
!6143 = distinct !DILexicalBlock(scope: !6139, file: !3, line: 2109, column: 32)
!6144 = !DILocation(line: 2110, column: 9, scope: !6143)
!6145 = !DILocation(line: 2110, column: 35, scope: !6143)
!6146 = !DILocation(line: 2110, column: 16, scope: !6143)
!6147 = !DILocation(line: 2112, column: 10, scope: !6143)
!6148 = !DILocation(line: 2112, column: 16, scope: !6143)
!6149 = !DILocation(line: 2112, column: 28, scope: !6143)
!6150 = !DILocation(line: 2112, column: 3, scope: !6143)
!6151 = !DILocation(line: 2115, column: 2, scope: !6133)
!6152 = !DILocation(line: 2116, column: 1, scope: !6133)
!6153 = distinct !DISubprogram(name: "MASK_OT_duplicate", scope: !3, file: !3, line: 2288, type: !4, scopeLine: 2289, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1817, retainedNodes: !2254)
!6154 = !DILocalVariable(name: "ot", arg: 1, scope: !6153, file: !3, line: 2288, type: !6)
!6155 = !DILocation(line: 2288, column: 40, scope: !6153)
!6156 = !DILocation(line: 2291, column: 2, scope: !6153)
!6157 = !DILocation(line: 2291, column: 6, scope: !6153)
!6158 = !DILocation(line: 2291, column: 11, scope: !6153)
!6159 = !DILocation(line: 2292, column: 2, scope: !6153)
!6160 = !DILocation(line: 2292, column: 6, scope: !6153)
!6161 = !DILocation(line: 2292, column: 18, scope: !6153)
!6162 = !DILocation(line: 2293, column: 2, scope: !6153)
!6163 = !DILocation(line: 2293, column: 6, scope: !6153)
!6164 = !DILocation(line: 2293, column: 13, scope: !6153)
!6165 = !DILocation(line: 2296, column: 2, scope: !6153)
!6166 = !DILocation(line: 2296, column: 6, scope: !6153)
!6167 = !DILocation(line: 2296, column: 11, scope: !6153)
!6168 = !DILocation(line: 2297, column: 2, scope: !6153)
!6169 = !DILocation(line: 2297, column: 6, scope: !6153)
!6170 = !DILocation(line: 2297, column: 11, scope: !6153)
!6171 = !DILocation(line: 2300, column: 2, scope: !6153)
!6172 = !DILocation(line: 2300, column: 6, scope: !6153)
!6173 = !DILocation(line: 2300, column: 11, scope: !6153)
!6174 = !DILocation(line: 2301, column: 1, scope: !6153)
!6175 = distinct !DISubprogram(name: "mask_duplicate_exec", scope: !3, file: !3, line: 2180, type: !3422, scopeLine: 2181, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1817, retainedNodes: !2254)
!6176 = !DILocalVariable(name: "C", arg: 1, scope: !6175, file: !3, line: 2180, type: !3090)
!6177 = !DILocation(line: 2180, column: 42, scope: !6175)
!6178 = !DILocalVariable(name: "UNUSED_op", arg: 2, scope: !6175, file: !3, line: 2180, type: !3424)
!6179 = !DILocation(line: 2180, column: 57, scope: !6175)
!6180 = !DILocalVariable(name: "scene", scope: !6175, file: !3, line: 2182, type: !4238)
!6181 = !DILocation(line: 2182, column: 9, scope: !6175)
!6182 = !DILocation(line: 2182, column: 32, scope: !6175)
!6183 = !DILocation(line: 2182, column: 17, scope: !6175)
!6184 = !DILocalVariable(name: "mask", scope: !6175, file: !3, line: 2183, type: !2120)
!6185 = !DILocation(line: 2183, column: 8, scope: !6175)
!6186 = !DILocation(line: 2183, column: 34, scope: !6175)
!6187 = !DILocation(line: 2183, column: 15, scope: !6175)
!6188 = !DILocalVariable(name: "mask_layer", scope: !6175, file: !3, line: 2184, type: !2123)
!6189 = !DILocation(line: 2184, column: 13, scope: !6175)
!6190 = !DILocation(line: 2186, column: 20, scope: !6191)
!6191 = distinct !DILexicalBlock(scope: !6175, file: !3, line: 2186, column: 2)
!6192 = !DILocation(line: 2186, column: 26, scope: !6191)
!6193 = !DILocation(line: 2186, column: 37, scope: !6191)
!6194 = !DILocation(line: 2186, column: 18, scope: !6191)
!6195 = !DILocation(line: 2186, column: 7, scope: !6191)
!6196 = !DILocation(line: 2187, column: 7, scope: !6197)
!6197 = distinct !DILexicalBlock(scope: !6191, file: !3, line: 2186, column: 2)
!6198 = !DILocation(line: 2186, column: 2, scope: !6191)
!6199 = !DILocalVariable(name: "spline", scope: !6200, file: !3, line: 2190, type: !2204)
!6200 = distinct !DILexicalBlock(scope: !6197, file: !3, line: 2189, column: 2)
!6201 = !DILocation(line: 2190, column: 15, scope: !6200)
!6202 = !DILocation(line: 2192, column: 17, scope: !6203)
!6203 = distinct !DILexicalBlock(scope: !6200, file: !3, line: 2192, column: 3)
!6204 = !DILocation(line: 2192, column: 29, scope: !6203)
!6205 = !DILocation(line: 2192, column: 37, scope: !6203)
!6206 = !DILocation(line: 2192, column: 15, scope: !6203)
!6207 = !DILocation(line: 2192, column: 8, scope: !6203)
!6208 = !DILocation(line: 2193, column: 8, scope: !6209)
!6209 = distinct !DILexicalBlock(scope: !6203, file: !3, line: 2192, column: 3)
!6210 = !DILocation(line: 2192, column: 3, scope: !6203)
!6211 = !DILocalVariable(name: "point", scope: !6212, file: !3, line: 2196, type: !2144)
!6212 = distinct !DILexicalBlock(scope: !6209, file: !3, line: 2195, column: 3)
!6213 = !DILocation(line: 2196, column: 21, scope: !6212)
!6214 = !DILocation(line: 2196, column: 29, scope: !6212)
!6215 = !DILocation(line: 2196, column: 37, scope: !6212)
!6216 = !DILocalVariable(name: "i", scope: !6212, file: !3, line: 2197, type: !22)
!6217 = !DILocation(line: 2197, column: 8, scope: !6212)
!6218 = !DILocation(line: 2198, column: 4, scope: !6212)
!6219 = !DILocation(line: 2198, column: 11, scope: !6212)
!6220 = !DILocation(line: 2198, column: 15, scope: !6212)
!6221 = !DILocation(line: 2198, column: 23, scope: !6212)
!6222 = !DILocation(line: 2198, column: 13, scope: !6212)
!6223 = !DILocalVariable(name: "start", scope: !6224, file: !3, line: 2199, type: !22)
!6224 = distinct !DILexicalBlock(scope: !6212, file: !3, line: 2198, column: 34)
!6225 = !DILocation(line: 2199, column: 9, scope: !6224)
!6226 = !DILocation(line: 2199, column: 17, scope: !6224)
!6227 = !DILocalVariable(name: "end", scope: !6224, file: !3, line: 2199, type: !22)
!6228 = !DILocation(line: 2199, column: 20, scope: !6224)
!6229 = !DILocation(line: 2201, column: 5, scope: !6224)
!6230 = !DILocation(line: 2201, column: 12, scope: !6224)
!6231 = !DILocation(line: 2202, column: 32, scope: !6232)
!6232 = distinct !DILexicalBlock(scope: !6224, file: !3, line: 2201, column: 40)
!6233 = !DILocation(line: 2202, column: 6, scope: !6232)
!6234 = !DILocation(line: 2203, column: 12, scope: !6232)
!6235 = !DILocation(line: 2203, column: 10, scope: !6232)
!6236 = !DILocation(line: 2204, column: 10, scope: !6237)
!6237 = distinct !DILexicalBlock(scope: !6232, file: !3, line: 2204, column: 10)
!6238 = !DILocation(line: 2204, column: 15, scope: !6237)
!6239 = !DILocation(line: 2204, column: 23, scope: !6237)
!6240 = !DILocation(line: 2204, column: 33, scope: !6237)
!6241 = !DILocation(line: 2204, column: 12, scope: !6237)
!6242 = !DILocation(line: 2204, column: 10, scope: !6232)
!6243 = !DILocation(line: 2205, column: 7, scope: !6244)
!6244 = distinct !DILexicalBlock(scope: !6237, file: !3, line: 2204, column: 38)
!6245 = !DILocation(line: 2207, column: 7, scope: !6232)
!6246 = !DILocation(line: 2208, column: 11, scope: !6232)
!6247 = distinct !{!6247, !6229, !6248}
!6248 = !DILocation(line: 2209, column: 5, scope: !6224)
!6249 = !DILocation(line: 2210, column: 9, scope: !6250)
!6250 = distinct !DILexicalBlock(scope: !6224, file: !3, line: 2210, column: 9)
!6251 = !DILocation(line: 2210, column: 16, scope: !6250)
!6252 = !DILocation(line: 2210, column: 13, scope: !6250)
!6253 = !DILocation(line: 2210, column: 9, scope: !6224)
!6254 = !DILocalVariable(name: "tot_point", scope: !6255, file: !3, line: 2211, type: !22)
!6255 = distinct !DILexicalBlock(scope: !6250, file: !3, line: 2210, column: 23)
!6256 = !DILocation(line: 2211, column: 10, scope: !6255)
!6257 = !DILocalVariable(name: "tot_point_shape_start", scope: !6255, file: !3, line: 2212, type: !22)
!6258 = !DILocation(line: 2212, column: 10, scope: !6255)
!6259 = !DILocalVariable(name: "new_spline", scope: !6255, file: !3, line: 2213, type: !2204)
!6260 = !DILocation(line: 2213, column: 18, scope: !6255)
!6261 = !DILocation(line: 2213, column: 51, scope: !6255)
!6262 = !DILocation(line: 2213, column: 31, scope: !6255)
!6263 = !DILocalVariable(name: "new_point", scope: !6255, file: !3, line: 2214, type: !2144)
!6264 = !DILocation(line: 2214, column: 23, scope: !6255)
!6265 = !DILocalVariable(name: "b", scope: !6255, file: !3, line: 2215, type: !22)
!6266 = !DILocation(line: 2215, column: 10, scope: !6255)
!6267 = !DILocation(line: 2218, column: 10, scope: !6268)
!6268 = distinct !DILexicalBlock(scope: !6255, file: !3, line: 2218, column: 10)
!6269 = !DILocation(line: 2218, column: 22, scope: !6268)
!6270 = !DILocation(line: 2218, column: 10, scope: !6255)
!6271 = !DILocation(line: 2219, column: 7, scope: !6272)
!6272 = distinct !DILexicalBlock(scope: !6268, file: !3, line: 2218, column: 30)
!6273 = !DILocation(line: 2219, column: 17, scope: !6272)
!6274 = !DILocation(line: 2219, column: 29, scope: !6272)
!6275 = !DILocation(line: 2220, column: 6, scope: !6272)
!6276 = !DILocation(line: 2223, column: 25, scope: !6255)
!6277 = !DILocation(line: 2223, column: 33, scope: !6255)
!6278 = !DILocation(line: 2223, column: 6, scope: !6255)
!6279 = !DILocation(line: 2223, column: 18, scope: !6255)
!6280 = !DILocation(line: 2223, column: 23, scope: !6255)
!6281 = !DILocation(line: 2224, column: 32, scope: !6255)
!6282 = !DILocation(line: 2224, column: 40, scope: !6255)
!6283 = !DILocation(line: 2224, column: 6, scope: !6255)
!6284 = !DILocation(line: 2224, column: 18, scope: !6255)
!6285 = !DILocation(line: 2224, column: 30, scope: !6255)
!6286 = !DILocation(line: 2225, column: 34, scope: !6255)
!6287 = !DILocation(line: 2225, column: 42, scope: !6255)
!6288 = !DILocation(line: 2225, column: 6, scope: !6255)
!6289 = !DILocation(line: 2225, column: 18, scope: !6255)
!6290 = !DILocation(line: 2225, column: 32, scope: !6255)
!6291 = !DILocation(line: 2226, column: 6, scope: !6255)
!6292 = !DILocation(line: 2226, column: 18, scope: !6255)
!6293 = !DILocation(line: 2226, column: 27, scope: !6255)
!6294 = !DILocation(line: 2226, column: 35, scope: !6255)
!6295 = !DILocation(line: 2229, column: 30, scope: !6255)
!6296 = !DILocation(line: 2229, column: 36, scope: !6255)
!6297 = !DILocation(line: 2229, column: 34, scope: !6255)
!6298 = !DILocation(line: 2229, column: 42, scope: !6255)
!6299 = !DILocation(line: 2229, column: 6, scope: !6255)
!6300 = !DILocation(line: 2229, column: 18, scope: !6255)
!6301 = !DILocation(line: 2229, column: 28, scope: !6255)
!6302 = !DILocation(line: 2230, column: 27, scope: !6255)
!6303 = !DILocation(line: 2230, column: 65, scope: !6255)
!6304 = !DILocation(line: 2230, column: 77, scope: !6255)
!6305 = !DILocation(line: 2230, column: 63, scope: !6255)
!6306 = !DILocation(line: 2230, column: 6, scope: !6255)
!6307 = !DILocation(line: 2230, column: 18, scope: !6255)
!6308 = !DILocation(line: 2230, column: 25, scope: !6255)
!6309 = !DILocation(line: 2233, column: 13, scope: !6255)
!6310 = !DILocation(line: 2233, column: 25, scope: !6255)
!6311 = !DILocation(line: 2233, column: 6, scope: !6255)
!6312 = !DILocation(line: 2233, column: 33, scope: !6255)
!6313 = !DILocation(line: 2233, column: 41, scope: !6255)
!6314 = !DILocation(line: 2233, column: 50, scope: !6255)
!6315 = !DILocation(line: 2233, column: 48, scope: !6255)
!6316 = !DILocation(line: 2234, column: 13, scope: !6255)
!6317 = !DILocation(line: 2234, column: 25, scope: !6255)
!6318 = !DILocation(line: 2234, column: 35, scope: !6255)
!6319 = !DILocation(line: 2236, column: 18, scope: !6255)
!6320 = !DILocation(line: 2236, column: 30, scope: !6255)
!6321 = !DILocation(line: 2236, column: 16, scope: !6255)
!6322 = !DILocation(line: 2239, column: 10, scope: !6323)
!6323 = distinct !DILexicalBlock(scope: !6255, file: !3, line: 2239, column: 10)
!6324 = !DILocation(line: 2239, column: 22, scope: !6323)
!6325 = !DILocation(line: 2239, column: 37, scope: !6323)
!6326 = !DILocation(line: 2239, column: 10, scope: !6255)
!6327 = !DILocation(line: 2240, column: 7, scope: !6328)
!6328 = distinct !DILexicalBlock(scope: !6323, file: !3, line: 2239, column: 44)
!6329 = !DILocation(line: 2240, column: 19, scope: !6328)
!6330 = !DILocation(line: 2240, column: 29, scope: !6328)
!6331 = !DILocation(line: 2241, column: 68, scope: !6328)
!6332 = !DILocation(line: 2241, column: 80, scope: !6328)
!6333 = !DILocation(line: 2241, column: 31, scope: !6328)
!6334 = !DILocation(line: 2241, column: 29, scope: !6328)
!6335 = !DILocation(line: 2242, column: 6, scope: !6328)
!6336 = !DILocation(line: 2245, column: 13, scope: !6337)
!6337 = distinct !DILexicalBlock(scope: !6255, file: !3, line: 2245, column: 6)
!6338 = !DILocation(line: 2245, column: 30, scope: !6337)
!6339 = !DILocation(line: 2245, column: 42, scope: !6337)
!6340 = !DILocation(line: 2245, column: 28, scope: !6337)
!6341 = !DILocation(line: 2245, column: 11, scope: !6337)
!6342 = !DILocation(line: 2246, column: 11, scope: !6343)
!6343 = distinct !DILexicalBlock(scope: !6337, file: !3, line: 2245, column: 6)
!6344 = !DILocation(line: 2246, column: 15, scope: !6343)
!6345 = !DILocation(line: 2246, column: 13, scope: !6343)
!6346 = !DILocation(line: 2245, column: 6, scope: !6337)
!6347 = !DILocation(line: 2249, column: 11, scope: !6348)
!6348 = distinct !DILexicalBlock(scope: !6349, file: !3, line: 2249, column: 11)
!6349 = distinct !DILexicalBlock(scope: !6343, file: !3, line: 2248, column: 6)
!6350 = !DILocation(line: 2249, column: 22, scope: !6348)
!6351 = !DILocation(line: 2249, column: 11, scope: !6349)
!6352 = !DILocation(line: 2250, column: 24, scope: !6353)
!6353 = distinct !DILexicalBlock(scope: !6348, file: !3, line: 2249, column: 26)
!6354 = !DILocation(line: 2250, column: 38, scope: !6353)
!6355 = !DILocation(line: 2250, column: 49, scope: !6353)
!6356 = !DILocation(line: 2250, column: 8, scope: !6353)
!6357 = !DILocation(line: 2250, column: 19, scope: !6353)
!6358 = !DILocation(line: 2250, column: 22, scope: !6353)
!6359 = !DILocation(line: 2251, column: 7, scope: !6353)
!6360 = !DILocation(line: 2252, column: 33, scope: !6349)
!6361 = !DILocation(line: 2252, column: 7, scope: !6349)
!6362 = !DILocation(line: 2255, column: 11, scope: !6363)
!6363 = distinct !DILexicalBlock(scope: !6349, file: !3, line: 2255, column: 11)
!6364 = !DILocation(line: 2255, column: 23, scope: !6363)
!6365 = !DILocation(line: 2255, column: 38, scope: !6363)
!6366 = !DILocation(line: 2255, column: 11, scope: !6349)
!6367 = !DILocation(line: 2256, column: 8, scope: !6368)
!6368 = distinct !DILexicalBlock(scope: !6363, file: !3, line: 2255, column: 45)
!6369 = !DILocation(line: 2256, column: 20, scope: !6368)
!6370 = !DILocation(line: 2256, column: 29, scope: !6368)
!6371 = !DILocation(line: 2257, column: 41, scope: !6368)
!6372 = !DILocation(line: 2257, column: 53, scope: !6368)
!6373 = !DILocation(line: 2257, column: 77, scope: !6368)
!6374 = !DILocation(line: 2257, column: 75, scope: !6368)
!6375 = !DILocation(line: 2257, column: 8, scope: !6368)
!6376 = !DILocation(line: 2258, column: 7, scope: !6368)
!6377 = !DILocation(line: 2259, column: 6, scope: !6349)
!6378 = !DILocation(line: 2247, column: 12, scope: !6343)
!6379 = !DILocation(line: 2247, column: 25, scope: !6343)
!6380 = !DILocation(line: 2245, column: 6, scope: !6343)
!6381 = distinct !{!6381, !6346, !6382}
!6382 = !DILocation(line: 2259, column: 6, scope: !6337)
!6383 = !DILocation(line: 2262, column: 10, scope: !6384)
!6384 = distinct !DILexicalBlock(scope: !6255, file: !3, line: 2262, column: 10)
!6385 = !DILocation(line: 2262, column: 22, scope: !6384)
!6386 = !DILocation(line: 2262, column: 27, scope: !6384)
!6387 = !DILocation(line: 2262, column: 10, scope: !6255)
!6388 = !DILocation(line: 2263, column: 11, scope: !6389)
!6389 = distinct !DILexicalBlock(scope: !6390, file: !3, line: 2263, column: 11)
!6390 = distinct !DILexicalBlock(scope: !6384, file: !3, line: 2262, column: 49)
!6391 = !DILocation(line: 2263, column: 17, scope: !6389)
!6392 = !DILocation(line: 2263, column: 22, scope: !6389)
!6393 = !DILocation(line: 2263, column: 25, scope: !6389)
!6394 = !DILocation(line: 2263, column: 32, scope: !6389)
!6395 = !DILocation(line: 2263, column: 40, scope: !6389)
!6396 = !DILocation(line: 2263, column: 50, scope: !6389)
!6397 = !DILocation(line: 2263, column: 29, scope: !6389)
!6398 = !DILocation(line: 2263, column: 11, scope: !6390)
!6399 = !DILocation(line: 2264, column: 8, scope: !6400)
!6400 = distinct !DILexicalBlock(scope: !6389, file: !3, line: 2263, column: 55)
!6401 = !DILocation(line: 2264, column: 20, scope: !6400)
!6402 = !DILocation(line: 2264, column: 25, scope: !6400)
!6403 = !DILocation(line: 2265, column: 7, scope: !6400)
!6404 = !DILocation(line: 2266, column: 6, scope: !6390)
!6405 = !DILocation(line: 2269, column: 6, scope: !6255)
!6406 = !DILocation(line: 2269, column: 18, scope: !6255)
!6407 = !DILocation(line: 2269, column: 23, scope: !6255)
!6408 = !DILocation(line: 2270, column: 6, scope: !6255)
!6409 = !DILocation(line: 2270, column: 14, scope: !6255)
!6410 = !DILocation(line: 2270, column: 19, scope: !6255)
!6411 = !DILocation(line: 2272, column: 31, scope: !6255)
!6412 = !DILocation(line: 2272, column: 6, scope: !6255)
!6413 = !DILocation(line: 2272, column: 18, scope: !6255)
!6414 = !DILocation(line: 2272, column: 29, scope: !6255)
!6415 = !DILocation(line: 2273, column: 5, scope: !6255)
!6416 = !DILocation(line: 2274, column: 6, scope: !6224)
!6417 = !DILocation(line: 2275, column: 10, scope: !6224)
!6418 = distinct !{!6418, !6218, !6419}
!6419 = !DILocation(line: 2276, column: 4, scope: !6212)
!6420 = !DILocation(line: 2277, column: 3, scope: !6212)
!6421 = !DILocation(line: 2194, column: 17, scope: !6209)
!6422 = !DILocation(line: 2194, column: 25, scope: !6209)
!6423 = !DILocation(line: 2194, column: 15, scope: !6209)
!6424 = !DILocation(line: 2192, column: 3, scope: !6209)
!6425 = distinct !{!6425, !6210, !6426}
!6426 = !DILocation(line: 2277, column: 3, scope: !6203)
!6427 = !DILocation(line: 2278, column: 2, scope: !6200)
!6428 = !DILocation(line: 2188, column: 20, scope: !6197)
!6429 = !DILocation(line: 2188, column: 32, scope: !6197)
!6430 = !DILocation(line: 2188, column: 18, scope: !6197)
!6431 = !DILocation(line: 2186, column: 2, scope: !6197)
!6432 = distinct !{!6432, !6198, !6433}
!6433 = !DILocation(line: 2278, column: 2, scope: !6191)
!6434 = !DILocation(line: 2281, column: 26, scope: !6175)
!6435 = !DILocation(line: 2281, column: 32, scope: !6175)
!6436 = !DILocation(line: 2281, column: 2, scope: !6175)
!6437 = !DILocation(line: 2283, column: 24, scope: !6175)
!6438 = !DILocation(line: 2283, column: 48, scope: !6175)
!6439 = !DILocation(line: 2283, column: 2, scope: !6175)
!6440 = !DILocation(line: 2285, column: 2, scope: !6175)
!6441 = distinct !DISubprogram(name: "MASK_OT_copy_splines", scope: !3, file: !3, line: 2319, type: !4, scopeLine: 2320, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1817, retainedNodes: !2254)
!6442 = !DILocalVariable(name: "ot", arg: 1, scope: !6441, file: !3, line: 2319, type: !6)
!6443 = !DILocation(line: 2319, column: 43, scope: !6441)
!6444 = !DILocation(line: 2322, column: 2, scope: !6441)
!6445 = !DILocation(line: 2322, column: 6, scope: !6441)
!6446 = !DILocation(line: 2322, column: 11, scope: !6441)
!6447 = !DILocation(line: 2323, column: 2, scope: !6441)
!6448 = !DILocation(line: 2323, column: 6, scope: !6441)
!6449 = !DILocation(line: 2323, column: 18, scope: !6441)
!6450 = !DILocation(line: 2324, column: 2, scope: !6441)
!6451 = !DILocation(line: 2324, column: 6, scope: !6441)
!6452 = !DILocation(line: 2324, column: 13, scope: !6441)
!6453 = !DILocation(line: 2327, column: 2, scope: !6441)
!6454 = !DILocation(line: 2327, column: 6, scope: !6441)
!6455 = !DILocation(line: 2327, column: 11, scope: !6441)
!6456 = !DILocation(line: 2328, column: 2, scope: !6441)
!6457 = !DILocation(line: 2328, column: 6, scope: !6441)
!6458 = !DILocation(line: 2328, column: 11, scope: !6441)
!6459 = !DILocation(line: 2331, column: 2, scope: !6441)
!6460 = !DILocation(line: 2331, column: 6, scope: !6441)
!6461 = !DILocation(line: 2331, column: 11, scope: !6441)
!6462 = !DILocation(line: 2332, column: 1, scope: !6441)
!6463 = distinct !DISubprogram(name: "copy_splines_exec", scope: !3, file: !3, line: 2305, type: !3422, scopeLine: 2306, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1817, retainedNodes: !2254)
!6464 = !DILocalVariable(name: "C", arg: 1, scope: !6463, file: !3, line: 2305, type: !3090)
!6465 = !DILocation(line: 2305, column: 40, scope: !6463)
!6466 = !DILocalVariable(name: "UNUSED_op", arg: 2, scope: !6463, file: !3, line: 2305, type: !3424)
!6467 = !DILocation(line: 2305, column: 55, scope: !6463)
!6468 = !DILocalVariable(name: "mask", scope: !6463, file: !3, line: 2307, type: !2120)
!6469 = !DILocation(line: 2307, column: 8, scope: !6463)
!6470 = !DILocation(line: 2307, column: 34, scope: !6463)
!6471 = !DILocation(line: 2307, column: 15, scope: !6463)
!6472 = !DILocalVariable(name: "mask_layer", scope: !6463, file: !3, line: 2308, type: !2123)
!6473 = !DILocation(line: 2308, column: 13, scope: !6463)
!6474 = !DILocation(line: 2308, column: 48, scope: !6463)
!6475 = !DILocation(line: 2308, column: 26, scope: !6463)
!6476 = !DILocation(line: 2310, column: 6, scope: !6477)
!6477 = distinct !DILexicalBlock(scope: !6463, file: !3, line: 2310, column: 6)
!6478 = !DILocation(line: 2310, column: 17, scope: !6477)
!6479 = !DILocation(line: 2310, column: 6, scope: !6463)
!6480 = !DILocation(line: 2311, column: 3, scope: !6481)
!6481 = distinct !DILexicalBlock(scope: !6477, file: !3, line: 2310, column: 26)
!6482 = !DILocation(line: 2314, column: 37, scope: !6463)
!6483 = !DILocation(line: 2314, column: 2, scope: !6463)
!6484 = !DILocation(line: 2316, column: 2, scope: !6463)
!6485 = !DILocation(line: 2317, column: 1, scope: !6463)
!6486 = distinct !DISubprogram(name: "MASK_OT_paste_splines", scope: !3, file: !3, line: 2365, type: !4, scopeLine: 2366, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1817, retainedNodes: !2254)
!6487 = !DILocalVariable(name: "ot", arg: 1, scope: !6486, file: !3, line: 2365, type: !6)
!6488 = !DILocation(line: 2365, column: 44, scope: !6486)
!6489 = !DILocation(line: 2368, column: 2, scope: !6486)
!6490 = !DILocation(line: 2368, column: 6, scope: !6486)
!6491 = !DILocation(line: 2368, column: 11, scope: !6486)
!6492 = !DILocation(line: 2369, column: 2, scope: !6486)
!6493 = !DILocation(line: 2369, column: 6, scope: !6486)
!6494 = !DILocation(line: 2369, column: 18, scope: !6486)
!6495 = !DILocation(line: 2370, column: 2, scope: !6486)
!6496 = !DILocation(line: 2370, column: 6, scope: !6486)
!6497 = !DILocation(line: 2370, column: 13, scope: !6486)
!6498 = !DILocation(line: 2373, column: 2, scope: !6486)
!6499 = !DILocation(line: 2373, column: 6, scope: !6486)
!6500 = !DILocation(line: 2373, column: 11, scope: !6486)
!6501 = !DILocation(line: 2374, column: 2, scope: !6486)
!6502 = !DILocation(line: 2374, column: 6, scope: !6486)
!6503 = !DILocation(line: 2374, column: 11, scope: !6486)
!6504 = !DILocation(line: 2377, column: 2, scope: !6486)
!6505 = !DILocation(line: 2377, column: 6, scope: !6486)
!6506 = !DILocation(line: 2377, column: 11, scope: !6486)
!6507 = !DILocation(line: 2378, column: 1, scope: !6486)
!6508 = distinct !DISubprogram(name: "paste_splines_exec", scope: !3, file: !3, line: 2345, type: !3422, scopeLine: 2346, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1817, retainedNodes: !2254)
!6509 = !DILocalVariable(name: "C", arg: 1, scope: !6508, file: !3, line: 2345, type: !3090)
!6510 = !DILocation(line: 2345, column: 41, scope: !6508)
!6511 = !DILocalVariable(name: "UNUSED_op", arg: 2, scope: !6508, file: !3, line: 2345, type: !3424)
!6512 = !DILocation(line: 2345, column: 56, scope: !6508)
!6513 = !DILocalVariable(name: "scene", scope: !6508, file: !3, line: 2347, type: !4238)
!6514 = !DILocation(line: 2347, column: 9, scope: !6508)
!6515 = !DILocation(line: 2347, column: 32, scope: !6508)
!6516 = !DILocation(line: 2347, column: 17, scope: !6508)
!6517 = !DILocalVariable(name: "mask", scope: !6508, file: !3, line: 2348, type: !2120)
!6518 = !DILocation(line: 2348, column: 8, scope: !6508)
!6519 = !DILocation(line: 2348, column: 34, scope: !6508)
!6520 = !DILocation(line: 2348, column: 15, scope: !6508)
!6521 = !DILocalVariable(name: "mask_layer", scope: !6508, file: !3, line: 2349, type: !2123)
!6522 = !DILocation(line: 2349, column: 13, scope: !6508)
!6523 = !DILocation(line: 2349, column: 48, scope: !6508)
!6524 = !DILocation(line: 2349, column: 26, scope: !6508)
!6525 = !DILocation(line: 2351, column: 6, scope: !6526)
!6526 = distinct !DILexicalBlock(scope: !6508, file: !3, line: 2351, column: 6)
!6527 = !DILocation(line: 2351, column: 17, scope: !6526)
!6528 = !DILocation(line: 2351, column: 6, scope: !6508)
!6529 = !DILocation(line: 2352, column: 35, scope: !6530)
!6530 = distinct !DILexicalBlock(scope: !6526, file: !3, line: 2351, column: 26)
!6531 = !DILocation(line: 2352, column: 16, scope: !6530)
!6532 = !DILocation(line: 2352, column: 14, scope: !6530)
!6533 = !DILocation(line: 2353, column: 2, scope: !6530)
!6534 = !DILocation(line: 2355, column: 50, scope: !6508)
!6535 = !DILocation(line: 2355, column: 36, scope: !6508)
!6536 = !DILocation(line: 2355, column: 54, scope: !6508)
!6537 = !DILocation(line: 2355, column: 2, scope: !6508)
!6538 = !DILocation(line: 2358, column: 26, scope: !6508)
!6539 = !DILocation(line: 2358, column: 32, scope: !6508)
!6540 = !DILocation(line: 2358, column: 2, scope: !6508)
!6541 = !DILocation(line: 2360, column: 24, scope: !6508)
!6542 = !DILocation(line: 2360, column: 48, scope: !6508)
!6543 = !DILocation(line: 2360, column: 2, scope: !6508)
!6544 = !DILocation(line: 2362, column: 2, scope: !6508)
!6545 = distinct !DISubprogram(name: "paste_splines_poll", scope: !3, file: !3, line: 2336, type: !6134, scopeLine: 2337, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1817, retainedNodes: !2254)
!6546 = !DILocalVariable(name: "C", arg: 1, scope: !6545, file: !3, line: 2336, type: !3090)
!6547 = !DILocation(line: 2336, column: 41, scope: !6545)
!6548 = !DILocation(line: 2338, column: 28, scope: !6549)
!6549 = distinct !DILexicalBlock(scope: !6545, file: !3, line: 2338, column: 6)
!6550 = !DILocation(line: 2338, column: 6, scope: !6549)
!6551 = !DILocation(line: 2338, column: 6, scope: !6545)
!6552 = !DILocation(line: 2339, column: 10, scope: !6553)
!6553 = distinct !DILexicalBlock(scope: !6549, file: !3, line: 2338, column: 32)
!6554 = !DILocation(line: 2339, column: 40, scope: !6553)
!6555 = !DILocation(line: 2339, column: 3, scope: !6553)
!6556 = !DILocation(line: 2342, column: 2, scope: !6545)
!6557 = !DILocation(line: 2343, column: 1, scope: !6545)
!6558 = distinct !DISubprogram(name: "sub_v2_v2v2", scope: !2765, file: !2765, line: 338, type: !6559, scopeLine: 339, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1817, retainedNodes: !2254)
!6559 = !DISubroutineType(types: !6560)
!6560 = !{null, !2280, !2275, !2275}
!6561 = !DILocalVariable(name: "r", arg: 1, scope: !6558, file: !2765, line: 338, type: !2280)
!6562 = !DILocation(line: 338, column: 32, scope: !6558)
!6563 = !DILocalVariable(name: "a", arg: 2, scope: !6558, file: !2765, line: 338, type: !2275)
!6564 = !DILocation(line: 338, column: 50, scope: !6558)
!6565 = !DILocalVariable(name: "b", arg: 3, scope: !6558, file: !2765, line: 338, type: !2275)
!6566 = !DILocation(line: 338, column: 68, scope: !6558)
!6567 = !DILocation(line: 340, column: 9, scope: !6558)
!6568 = !DILocation(line: 340, column: 16, scope: !6558)
!6569 = !DILocation(line: 340, column: 14, scope: !6558)
!6570 = !DILocation(line: 340, column: 2, scope: !6558)
!6571 = !DILocation(line: 340, column: 7, scope: !6558)
!6572 = !DILocation(line: 341, column: 9, scope: !6558)
!6573 = !DILocation(line: 341, column: 16, scope: !6558)
!6574 = !DILocation(line: 341, column: 14, scope: !6558)
!6575 = !DILocation(line: 341, column: 2, scope: !6558)
!6576 = !DILocation(line: 341, column: 7, scope: !6558)
!6577 = !DILocation(line: 342, column: 1, scope: !6558)
!6578 = distinct !DISubprogram(name: "dot_v2v2", scope: !2765, file: !2765, line: 614, type: !2766, scopeLine: 615, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1817, retainedNodes: !2254)
!6579 = !DILocalVariable(name: "a", arg: 1, scope: !6578, file: !2765, line: 614, type: !2275)
!6580 = !DILocation(line: 614, column: 36, scope: !6578)
!6581 = !DILocalVariable(name: "b", arg: 2, scope: !6578, file: !2765, line: 614, type: !2275)
!6582 = !DILocation(line: 614, column: 54, scope: !6578)
!6583 = !DILocation(line: 616, column: 9, scope: !6578)
!6584 = !DILocation(line: 616, column: 16, scope: !6578)
!6585 = !DILocation(line: 616, column: 14, scope: !6578)
!6586 = !DILocation(line: 616, column: 23, scope: !6578)
!6587 = !DILocation(line: 616, column: 30, scope: !6578)
!6588 = !DILocation(line: 616, column: 28, scope: !6578)
!6589 = !DILocation(line: 616, column: 21, scope: !6578)
!6590 = !DILocation(line: 616, column: 2, scope: !6578)
!6591 = distinct !DISubprogram(name: "slide_point_customdata", scope: !3, file: !3, line: 670, type: !6592, scopeLine: 671, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1817, retainedNodes: !2254)
!6592 = !DISubroutineType(types: !6593)
!6593 = !{!56, !3090, !3424, !3579}
!6594 = !DILocalVariable(name: "C", arg: 1, scope: !6591, file: !3, line: 670, type: !3090)
!6595 = !DILocation(line: 670, column: 47, scope: !6591)
!6596 = !DILocalVariable(name: "op", arg: 2, scope: !6591, file: !3, line: 670, type: !3424)
!6597 = !DILocation(line: 670, column: 62, scope: !6591)
!6598 = !DILocalVariable(name: "event", arg: 3, scope: !6591, file: !3, line: 670, type: !3579)
!6599 = !DILocation(line: 670, column: 81, scope: !6591)
!6600 = !DILocalVariable(name: "sa", scope: !6591, file: !3, line: 672, type: !2298)
!6601 = !DILocation(line: 672, column: 11, scope: !6591)
!6602 = !DILocation(line: 672, column: 28, scope: !6591)
!6603 = !DILocation(line: 672, column: 16, scope: !6591)
!6604 = !DILocalVariable(name: "ar", scope: !6591, file: !3, line: 673, type: !2350)
!6605 = !DILocation(line: 673, column: 11, scope: !6591)
!6606 = !DILocation(line: 673, column: 30, scope: !6591)
!6607 = !DILocation(line: 673, column: 16, scope: !6591)
!6608 = !DILocalVariable(name: "mask", scope: !6591, file: !3, line: 675, type: !2120)
!6609 = !DILocation(line: 675, column: 8, scope: !6591)
!6610 = !DILocation(line: 675, column: 34, scope: !6591)
!6611 = !DILocation(line: 675, column: 15, scope: !6591)
!6612 = !DILocalVariable(name: "customdata", scope: !6591, file: !3, line: 676, type: !2113)
!6613 = !DILocation(line: 676, column: 18, scope: !6591)
!6614 = !DILocalVariable(name: "masklay", scope: !6591, file: !3, line: 677, type: !2123)
!6615 = !DILocation(line: 677, column: 13, scope: !6591)
!6616 = !DILocalVariable(name: "cv_masklay", scope: !6591, file: !3, line: 677, type: !2123)
!6617 = !DILocation(line: 677, column: 23, scope: !6591)
!6618 = !DILocalVariable(name: "feather_masklay", scope: !6591, file: !3, line: 677, type: !2123)
!6619 = !DILocation(line: 677, column: 36, scope: !6591)
!6620 = !DILocalVariable(name: "spline", scope: !6591, file: !3, line: 678, type: !2204)
!6621 = !DILocation(line: 678, column: 14, scope: !6591)
!6622 = !DILocalVariable(name: "cv_spline", scope: !6591, file: !3, line: 678, type: !2204)
!6623 = !DILocation(line: 678, column: 23, scope: !6591)
!6624 = !DILocalVariable(name: "feather_spline", scope: !6591, file: !3, line: 678, type: !2204)
!6625 = !DILocation(line: 678, column: 35, scope: !6591)
!6626 = !DILocalVariable(name: "point", scope: !6591, file: !3, line: 679, type: !2144)
!6627 = !DILocation(line: 679, column: 19, scope: !6591)
!6628 = !DILocalVariable(name: "cv_point", scope: !6591, file: !3, line: 679, type: !2144)
!6629 = !DILocation(line: 679, column: 27, scope: !6591)
!6630 = !DILocalVariable(name: "feather_point", scope: !6591, file: !3, line: 679, type: !2144)
!6631 = !DILocation(line: 679, column: 38, scope: !6591)
!6632 = !DILocalVariable(name: "uw", scope: !6591, file: !3, line: 680, type: !2174)
!6633 = !DILocation(line: 680, column: 21, scope: !6591)
!6634 = !DILocalVariable(name: "width", scope: !6591, file: !3, line: 681, type: !22)
!6635 = !DILocation(line: 681, column: 6, scope: !6591)
!6636 = !DILocalVariable(name: "height", scope: !6591, file: !3, line: 681, type: !22)
!6637 = !DILocation(line: 681, column: 13, scope: !6591)
!6638 = !DILocalVariable(name: "action", scope: !6591, file: !3, line: 681, type: !22)
!6639 = !DILocation(line: 681, column: 21, scope: !6591)
!6640 = !DILocalVariable(name: "slide_feather", scope: !6591, file: !3, line: 682, type: !5800)
!6641 = !DILocation(line: 682, column: 13, scope: !6591)
!6642 = !DILocation(line: 682, column: 45, scope: !6591)
!6643 = !DILocation(line: 682, column: 49, scope: !6591)
!6644 = !DILocation(line: 682, column: 29, scope: !6591)
!6645 = !DILocalVariable(name: "co", scope: !6591, file: !3, line: 683, type: !420)
!6646 = !DILocation(line: 683, column: 8, scope: !6591)
!6647 = !DILocalVariable(name: "cv_score", scope: !6591, file: !3, line: 683, type: !191)
!6648 = !DILocation(line: 683, column: 15, scope: !6591)
!6649 = !DILocalVariable(name: "feather_score", scope: !6591, file: !3, line: 683, type: !191)
!6650 = !DILocation(line: 683, column: 25, scope: !6591)
!6651 = !DILocalVariable(name: "threshold", scope: !6591, file: !3, line: 684, type: !2276)
!6652 = !DILocation(line: 684, column: 14, scope: !6591)
!6653 = !DILocalVariable(name: "which_handle", scope: !6591, file: !3, line: 685, type: !2210)
!6654 = !DILocation(line: 685, column: 19, scope: !6591)
!6655 = !DILocation(line: 687, column: 20, scope: !6591)
!6656 = !DILocation(line: 687, column: 24, scope: !6591)
!6657 = !DILocation(line: 687, column: 28, scope: !6591)
!6658 = !DILocation(line: 687, column: 35, scope: !6591)
!6659 = !DILocation(line: 687, column: 41, scope: !6591)
!6660 = !DILocation(line: 687, column: 2, scope: !6591)
!6661 = !DILocation(line: 688, column: 19, scope: !6591)
!6662 = !DILocation(line: 688, column: 2, scope: !6591)
!6663 = !DILocation(line: 690, column: 40, scope: !6591)
!6664 = !DILocation(line: 690, column: 43, scope: !6591)
!6665 = !DILocation(line: 690, column: 49, scope: !6591)
!6666 = !DILocation(line: 690, column: 13, scope: !6591)
!6667 = !DILocation(line: 690, column: 11, scope: !6591)
!6668 = !DILocation(line: 692, column: 35, scope: !6669)
!6669 = distinct !DILexicalBlock(scope: !6591, file: !3, line: 692, column: 6)
!6670 = !DILocation(line: 692, column: 38, scope: !6669)
!6671 = !DILocation(line: 692, column: 44, scope: !6669)
!6672 = !DILocation(line: 692, column: 6, scope: !6669)
!6673 = !DILocation(line: 692, column: 6, scope: !6591)
!6674 = !DILocation(line: 693, column: 7, scope: !6675)
!6675 = distinct !DILexicalBlock(scope: !6676, file: !3, line: 693, column: 7)
!6676 = distinct !DILexicalBlock(scope: !6669, file: !3, line: 692, column: 132)
!6677 = !DILocation(line: 693, column: 21, scope: !6675)
!6678 = !DILocation(line: 693, column: 25, scope: !6675)
!6679 = !DILocation(line: 693, column: 34, scope: !6675)
!6680 = !DILocation(line: 693, column: 37, scope: !6675)
!6681 = !DILocation(line: 693, column: 53, scope: !6675)
!6682 = !DILocation(line: 693, column: 51, scope: !6675)
!6683 = !DILocation(line: 693, column: 7, scope: !6676)
!6684 = !DILocation(line: 694, column: 11, scope: !6685)
!6685 = distinct !DILexicalBlock(scope: !6675, file: !3, line: 693, column: 63)
!6686 = !DILocation(line: 696, column: 14, scope: !6685)
!6687 = !DILocation(line: 696, column: 12, scope: !6685)
!6688 = !DILocation(line: 697, column: 13, scope: !6685)
!6689 = !DILocation(line: 697, column: 11, scope: !6685)
!6690 = !DILocation(line: 698, column: 12, scope: !6685)
!6691 = !DILocation(line: 698, column: 10, scope: !6685)
!6692 = !DILocation(line: 699, column: 3, scope: !6685)
!6693 = !DILocation(line: 700, column: 2, scope: !6676)
!6694 = !DILocation(line: 702, column: 6, scope: !6695)
!6695 = distinct !DILexicalBlock(scope: !6591, file: !3, line: 702, column: 6)
!6696 = !DILocation(line: 702, column: 15, scope: !6695)
!6697 = !DILocation(line: 702, column: 18, scope: !6695)
!6698 = !DILocation(line: 702, column: 25, scope: !6695)
!6699 = !DILocation(line: 702, column: 6, scope: !6591)
!6700 = !DILocation(line: 703, column: 7, scope: !6701)
!6701 = distinct !DILexicalBlock(scope: !6702, file: !3, line: 703, column: 7)
!6702 = distinct !DILexicalBlock(scope: !6695, file: !3, line: 702, column: 47)
!6703 = !DILocation(line: 703, column: 20, scope: !6701)
!6704 = !DILocation(line: 703, column: 7, scope: !6702)
!6705 = !DILocation(line: 704, column: 11, scope: !6701)
!6706 = !DILocation(line: 704, column: 4, scope: !6701)
!6707 = !DILocation(line: 706, column: 11, scope: !6701)
!6708 = !DILocation(line: 708, column: 13, scope: !6702)
!6709 = !DILocation(line: 708, column: 11, scope: !6702)
!6710 = !DILocation(line: 709, column: 12, scope: !6702)
!6711 = !DILocation(line: 709, column: 10, scope: !6702)
!6712 = !DILocation(line: 710, column: 11, scope: !6702)
!6713 = !DILocation(line: 710, column: 9, scope: !6702)
!6714 = !DILocation(line: 711, column: 2, scope: !6702)
!6715 = !DILocation(line: 713, column: 6, scope: !6716)
!6716 = distinct !DILexicalBlock(scope: !6591, file: !3, line: 713, column: 6)
!6717 = !DILocation(line: 713, column: 13, scope: !6716)
!6718 = !DILocation(line: 713, column: 6, scope: !6591)
!6719 = !DILocation(line: 714, column: 30, scope: !6720)
!6720 = distinct !DILexicalBlock(scope: !6721, file: !3, line: 714, column: 7)
!6721 = distinct !DILexicalBlock(scope: !6716, file: !3, line: 713, column: 35)
!6722 = !DILocation(line: 714, column: 33, scope: !6720)
!6723 = !DILocation(line: 714, column: 39, scope: !6720)
!6724 = !DILocation(line: 714, column: 7, scope: !6720)
!6725 = !DILocation(line: 714, column: 7, scope: !6721)
!6726 = !DILocation(line: 715, column: 11, scope: !6727)
!6727 = distinct !DILexicalBlock(scope: !6720, file: !3, line: 714, column: 63)
!6728 = !DILocation(line: 716, column: 10, scope: !6727)
!6729 = !DILocation(line: 717, column: 3, scope: !6727)
!6730 = !DILocation(line: 718, column: 2, scope: !6721)
!6731 = !DILocation(line: 720, column: 6, scope: !6732)
!6732 = distinct !DILexicalBlock(scope: !6591, file: !3, line: 720, column: 6)
!6733 = !DILocation(line: 720, column: 13, scope: !6732)
!6734 = !DILocation(line: 720, column: 6, scope: !6591)
!6735 = !DILocation(line: 721, column: 16, scope: !6736)
!6736 = distinct !DILexicalBlock(scope: !6732, file: !3, line: 720, column: 35)
!6737 = !DILocation(line: 721, column: 14, scope: !6736)
!6738 = !DILocation(line: 722, column: 35, scope: !6736)
!6739 = !DILocation(line: 722, column: 42, scope: !6736)
!6740 = !DILocation(line: 722, column: 3, scope: !6736)
!6741 = !DILocation(line: 722, column: 15, scope: !6736)
!6742 = !DILocation(line: 722, column: 33, scope: !6736)
!6743 = !DILocation(line: 723, column: 22, scope: !6736)
!6744 = !DILocation(line: 723, column: 3, scope: !6736)
!6745 = !DILocation(line: 723, column: 15, scope: !6736)
!6746 = !DILocation(line: 723, column: 20, scope: !6736)
!6747 = !DILocation(line: 724, column: 25, scope: !6736)
!6748 = !DILocation(line: 724, column: 3, scope: !6736)
!6749 = !DILocation(line: 724, column: 15, scope: !6736)
!6750 = !DILocation(line: 724, column: 23, scope: !6736)
!6751 = !DILocation(line: 725, column: 24, scope: !6736)
!6752 = !DILocation(line: 725, column: 3, scope: !6736)
!6753 = !DILocation(line: 725, column: 15, scope: !6736)
!6754 = !DILocation(line: 725, column: 22, scope: !6736)
!6755 = !DILocation(line: 726, column: 23, scope: !6736)
!6756 = !DILocation(line: 726, column: 3, scope: !6736)
!6757 = !DILocation(line: 726, column: 15, scope: !6736)
!6758 = !DILocation(line: 726, column: 21, scope: !6736)
!6759 = !DILocation(line: 727, column: 23, scope: !6736)
!6760 = !DILocation(line: 727, column: 3, scope: !6736)
!6761 = !DILocation(line: 727, column: 15, scope: !6736)
!6762 = !DILocation(line: 727, column: 21, scope: !6736)
!6763 = !DILocation(line: 728, column: 24, scope: !6736)
!6764 = !DILocation(line: 728, column: 3, scope: !6736)
!6765 = !DILocation(line: 728, column: 15, scope: !6736)
!6766 = !DILocation(line: 728, column: 22, scope: !6736)
!6767 = !DILocation(line: 729, column: 24, scope: !6736)
!6768 = !DILocation(line: 729, column: 3, scope: !6736)
!6769 = !DILocation(line: 729, column: 15, scope: !6736)
!6770 = !DILocation(line: 729, column: 22, scope: !6736)
!6771 = !DILocation(line: 730, column: 20, scope: !6736)
!6772 = !DILocation(line: 730, column: 3, scope: !6736)
!6773 = !DILocation(line: 730, column: 15, scope: !6736)
!6774 = !DILocation(line: 730, column: 18, scope: !6736)
!6775 = !DILocation(line: 732, column: 54, scope: !6736)
!6776 = !DILocation(line: 732, column: 58, scope: !6736)
!6777 = !DILocation(line: 732, column: 38, scope: !6736)
!6778 = !DILocation(line: 732, column: 3, scope: !6736)
!6779 = !DILocation(line: 732, column: 15, scope: !6736)
!6780 = !DILocation(line: 732, column: 36, scope: !6736)
!6781 = !DILocation(line: 734, column: 7, scope: !6782)
!6782 = distinct !DILexicalBlock(scope: !6736, file: !3, line: 734, column: 7)
!6783 = !DILocation(line: 734, column: 19, scope: !6782)
!6784 = !DILocation(line: 734, column: 26, scope: !6782)
!6785 = !DILocation(line: 734, column: 7, scope: !6736)
!6786 = !DILocation(line: 735, column: 25, scope: !6787)
!6787 = distinct !DILexicalBlock(scope: !6782, file: !3, line: 734, column: 50)
!6788 = !DILocation(line: 735, column: 32, scope: !6787)
!6789 = !DILocation(line: 735, column: 37, scope: !6787)
!6790 = !DILocation(line: 735, column: 4, scope: !6787)
!6791 = !DILocation(line: 735, column: 16, scope: !6787)
!6792 = !DILocation(line: 735, column: 23, scope: !6787)
!6793 = !DILocation(line: 736, column: 25, scope: !6787)
!6794 = !DILocation(line: 736, column: 32, scope: !6787)
!6795 = !DILocation(line: 736, column: 37, scope: !6787)
!6796 = !DILocation(line: 736, column: 4, scope: !6787)
!6797 = !DILocation(line: 736, column: 16, scope: !6787)
!6798 = !DILocation(line: 736, column: 23, scope: !6787)
!6799 = !DILocation(line: 737, column: 25, scope: !6787)
!6800 = !DILocation(line: 737, column: 31, scope: !6787)
!6801 = !DILocation(line: 737, column: 40, scope: !6787)
!6802 = !DILocation(line: 737, column: 48, scope: !6787)
!6803 = !DILocation(line: 737, column: 55, scope: !6787)
!6804 = !DILocation(line: 737, column: 4, scope: !6787)
!6805 = !DILocation(line: 738, column: 30, scope: !6787)
!6806 = !DILocation(line: 738, column: 37, scope: !6787)
!6807 = !DILocation(line: 738, column: 4, scope: !6787)
!6808 = !DILocation(line: 739, column: 3, scope: !6787)
!6809 = !DILocation(line: 741, column: 7, scope: !6810)
!6810 = distinct !DILexicalBlock(scope: !6736, file: !3, line: 741, column: 7)
!6811 = !DILocation(line: 741, column: 7, scope: !6736)
!6812 = !DILocalVariable(name: "co_uw", scope: !6813, file: !3, line: 742, type: !420)
!6813 = distinct !DILexicalBlock(scope: !6810, file: !3, line: 741, column: 11)
!6814 = !DILocation(line: 742, column: 10, scope: !6813)
!6815 = !DILocalVariable(name: "weight_scalar", scope: !6813, file: !3, line: 743, type: !191)
!6816 = !DILocation(line: 743, column: 10, scope: !6813)
!6817 = !DILocation(line: 743, column: 55, scope: !6813)
!6818 = !DILocation(line: 743, column: 63, scope: !6813)
!6819 = !DILocation(line: 743, column: 70, scope: !6813)
!6820 = !DILocation(line: 743, column: 74, scope: !6813)
!6821 = !DILocation(line: 743, column: 26, scope: !6813)
!6822 = !DILocation(line: 745, column: 25, scope: !6813)
!6823 = !DILocation(line: 745, column: 29, scope: !6813)
!6824 = !DILocation(line: 745, column: 4, scope: !6813)
!6825 = !DILocation(line: 745, column: 16, scope: !6813)
!6826 = !DILocation(line: 745, column: 23, scope: !6813)
!6827 = !DILocation(line: 746, column: 32, scope: !6813)
!6828 = !DILocation(line: 746, column: 4, scope: !6813)
!6829 = !DILocation(line: 746, column: 16, scope: !6813)
!6830 = !DILocation(line: 746, column: 30, scope: !6813)
!6831 = !DILocation(line: 747, column: 30, scope: !6813)
!6832 = !DILocation(line: 747, column: 38, scope: !6813)
!6833 = !DILocation(line: 747, column: 45, scope: !6813)
!6834 = !DILocation(line: 747, column: 49, scope: !6813)
!6835 = !DILocation(line: 747, column: 52, scope: !6813)
!6836 = !DILocation(line: 747, column: 4, scope: !6813)
!6837 = !DILocation(line: 748, column: 26, scope: !6813)
!6838 = !DILocation(line: 748, column: 34, scope: !6813)
!6839 = !DILocation(line: 748, column: 41, scope: !6813)
!6840 = !DILocation(line: 748, column: 45, scope: !6813)
!6841 = !DILocation(line: 748, column: 48, scope: !6813)
!6842 = !DILocation(line: 748, column: 60, scope: !6813)
!6843 = !DILocation(line: 748, column: 4, scope: !6813)
!6844 = !DILocation(line: 750, column: 19, scope: !6813)
!6845 = !DILocation(line: 750, column: 31, scope: !6813)
!6846 = !DILocation(line: 750, column: 51, scope: !6813)
!6847 = !DILocation(line: 750, column: 58, scope: !6813)
!6848 = !DILocation(line: 750, column: 70, scope: !6813)
!6849 = !DILocation(line: 750, column: 74, scope: !6813)
!6850 = !DILocation(line: 750, column: 78, scope: !6813)
!6851 = !DILocation(line: 750, column: 82, scope: !6813)
!6852 = !DILocation(line: 750, column: 80, scope: !6813)
!6853 = !DILocation(line: 750, column: 4, scope: !6813)
!6854 = !DILocation(line: 751, column: 3, scope: !6813)
!6855 = !DILocation(line: 752, column: 12, scope: !6856)
!6856 = distinct !DILexicalBlock(scope: !6810, file: !3, line: 752, column: 12)
!6857 = !DILocation(line: 752, column: 24, scope: !6856)
!6858 = !DILocation(line: 752, column: 31, scope: !6856)
!6859 = !DILocation(line: 752, column: 12, scope: !6810)
!6860 = !DILocalVariable(name: "bezt", scope: !6861, file: !3, line: 753, type: !2240)
!6861 = distinct !DILexicalBlock(scope: !6856, file: !3, line: 752, column: 55)
!6862 = !DILocation(line: 753, column: 15, scope: !6861)
!6863 = !DILocation(line: 753, column: 23, scope: !6861)
!6864 = !DILocation(line: 753, column: 30, scope: !6861)
!6865 = !DILocation(line: 755, column: 25, scope: !6861)
!6866 = !DILocation(line: 755, column: 31, scope: !6861)
!6867 = !DILocation(line: 755, column: 4, scope: !6861)
!6868 = !DILocation(line: 755, column: 16, scope: !6861)
!6869 = !DILocation(line: 755, column: 23, scope: !6861)
!6870 = !DILocation(line: 756, column: 4, scope: !6861)
!6871 = !DILocation(line: 756, column: 16, scope: !6861)
!6872 = !DILocation(line: 756, column: 30, scope: !6861)
!6873 = !DILocation(line: 757, column: 26, scope: !6861)
!6874 = !DILocation(line: 757, column: 34, scope: !6861)
!6875 = !DILocation(line: 757, column: 47, scope: !6861)
!6876 = !DILocation(line: 757, column: 59, scope: !6861)
!6877 = !DILocation(line: 757, column: 4, scope: !6861)
!6878 = !DILocation(line: 759, column: 19, scope: !6861)
!6879 = !DILocation(line: 759, column: 31, scope: !6861)
!6880 = !DILocation(line: 759, column: 51, scope: !6861)
!6881 = !DILocation(line: 759, column: 57, scope: !6861)
!6882 = !DILocation(line: 759, column: 65, scope: !6861)
!6883 = !DILocation(line: 759, column: 77, scope: !6861)
!6884 = !DILocation(line: 759, column: 81, scope: !6861)
!6885 = !DILocation(line: 759, column: 87, scope: !6861)
!6886 = !DILocation(line: 759, column: 4, scope: !6861)
!6887 = !DILocation(line: 760, column: 3, scope: !6861)
!6888 = !DILocation(line: 762, column: 7, scope: !6889)
!6889 = distinct !DILexicalBlock(scope: !6736, file: !3, line: 762, column: 7)
!6890 = !DILocation(line: 762, column: 19, scope: !6889)
!6891 = !DILocation(line: 762, column: 26, scope: !6889)
!6892 = !DILocation(line: 762, column: 7, scope: !6736)
!6893 = !DILocation(line: 763, column: 71, scope: !6894)
!6894 = distinct !DILexicalBlock(scope: !6889, file: !3, line: 762, column: 51)
!6895 = !DILocation(line: 763, column: 37, scope: !6894)
!6896 = !DILocation(line: 763, column: 4, scope: !6894)
!6897 = !DILocation(line: 763, column: 16, scope: !6894)
!6898 = !DILocation(line: 763, column: 35, scope: !6894)
!6899 = !DILocation(line: 764, column: 3, scope: !6894)
!6900 = !DILocation(line: 766, column: 7, scope: !6901)
!6901 = distinct !DILexicalBlock(scope: !6736, file: !3, line: 766, column: 7)
!6902 = !DILocation(line: 766, column: 19, scope: !6901)
!6903 = !DILocation(line: 766, column: 26, scope: !6901)
!6904 = !DILocation(line: 766, column: 7, scope: !6736)
!6905 = !DILocation(line: 767, column: 15, scope: !6906)
!6906 = distinct !DILexicalBlock(scope: !6901, file: !3, line: 766, column: 50)
!6907 = !DILocation(line: 767, column: 27, scope: !6906)
!6908 = !DILocation(line: 767, column: 32, scope: !6906)
!6909 = !DILocation(line: 767, column: 39, scope: !6906)
!6910 = !DILocation(line: 767, column: 44, scope: !6906)
!6911 = !DILocation(line: 767, column: 4, scope: !6906)
!6912 = !DILocation(line: 768, column: 8, scope: !6913)
!6913 = distinct !DILexicalBlock(scope: !6906, file: !3, line: 768, column: 8)
!6914 = !DILocation(line: 768, column: 21, scope: !6913)
!6915 = !DILocation(line: 768, column: 8, scope: !6906)
!6916 = !DILocation(line: 769, column: 27, scope: !6917)
!6917 = distinct !DILexicalBlock(scope: !6913, file: !3, line: 768, column: 48)
!6918 = !DILocation(line: 769, column: 34, scope: !6917)
!6919 = !DILocation(line: 769, column: 48, scope: !6917)
!6920 = !DILocation(line: 769, column: 60, scope: !6917)
!6921 = !DILocation(line: 769, column: 5, scope: !6917)
!6922 = !DILocation(line: 770, column: 16, scope: !6917)
!6923 = !DILocation(line: 770, column: 28, scope: !6917)
!6924 = !DILocation(line: 770, column: 47, scope: !6917)
!6925 = !DILocation(line: 770, column: 59, scope: !6917)
!6926 = !DILocation(line: 770, column: 5, scope: !6917)
!6927 = !DILocation(line: 771, column: 4, scope: !6917)
!6928 = !DILocation(line: 772, column: 3, scope: !6906)
!6929 = !DILocation(line: 773, column: 30, scope: !6736)
!6930 = !DILocation(line: 773, column: 3, scope: !6736)
!6931 = !DILocation(line: 773, column: 15, scope: !6736)
!6932 = !DILocation(line: 773, column: 28, scope: !6736)
!6933 = !DILocation(line: 775, column: 21, scope: !6736)
!6934 = !DILocation(line: 775, column: 25, scope: !6736)
!6935 = !DILocation(line: 775, column: 29, scope: !6736)
!6936 = !DILocation(line: 775, column: 36, scope: !6736)
!6937 = !DILocation(line: 775, column: 42, scope: !6736)
!6938 = !DILocation(line: 775, column: 54, scope: !6736)
!6939 = !DILocation(line: 775, column: 3, scope: !6736)
!6940 = !DILocation(line: 776, column: 2, scope: !6736)
!6941 = !DILocation(line: 778, column: 9, scope: !6591)
!6942 = !DILocation(line: 778, column: 2, scope: !6591)
!6943 = distinct !DISubprogram(name: "spline_under_mouse_get", scope: !3, file: !3, line: 508, type: !6944, scopeLine: 512, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1817, retainedNodes: !2254)
!6944 = !DISubroutineType(types: !6945)
!6945 = !{!1017, !2272, !2120, !2275, !2277, !2278}
!6946 = !DILocalVariable(name: "C", arg: 1, scope: !6943, file: !3, line: 508, type: !2272)
!6947 = !DILocation(line: 508, column: 52, scope: !6943)
!6948 = !DILocalVariable(name: "mask", arg: 2, scope: !6943, file: !3, line: 509, type: !2120)
!6949 = !DILocation(line: 509, column: 42, scope: !6943)
!6950 = !DILocalVariable(name: "co", arg: 3, scope: !6943, file: !3, line: 509, type: !2275)
!6951 = !DILocation(line: 509, column: 60, scope: !6943)
!6952 = !DILocalVariable(name: "mask_layer_r", arg: 4, scope: !6943, file: !3, line: 510, type: !2277)
!6953 = !DILocation(line: 510, column: 48, scope: !6943)
!6954 = !DILocalVariable(name: "mask_spline_r", arg: 5, scope: !6943, file: !3, line: 511, type: !2278)
!6955 = !DILocation(line: 511, column: 49, scope: !6943)
!6956 = !DILocalVariable(name: "threshold", scope: !6943, file: !3, line: 513, type: !2276)
!6957 = !DILocation(line: 513, column: 14, scope: !6943)
!6958 = !DILocalVariable(name: "sa", scope: !6943, file: !3, line: 514, type: !2298)
!6959 = !DILocation(line: 514, column: 11, scope: !6943)
!6960 = !DILocation(line: 514, column: 28, scope: !6943)
!6961 = !DILocation(line: 514, column: 16, scope: !6943)
!6962 = !DILocalVariable(name: "sc", scope: !6943, file: !3, line: 515, type: !3187)
!6963 = !DILocation(line: 515, column: 13, scope: !6943)
!6964 = !DILocation(line: 515, column: 36, scope: !6943)
!6965 = !DILocation(line: 515, column: 18, scope: !6943)
!6966 = !DILocalVariable(name: "mask_layer", scope: !6943, file: !3, line: 516, type: !2123)
!6967 = !DILocation(line: 516, column: 13, scope: !6943)
!6968 = !DILocalVariable(name: "width", scope: !6943, file: !3, line: 517, type: !22)
!6969 = !DILocation(line: 517, column: 6, scope: !6943)
!6970 = !DILocalVariable(name: "height", scope: !6943, file: !3, line: 517, type: !22)
!6971 = !DILocation(line: 517, column: 13, scope: !6943)
!6972 = !DILocalVariable(name: "pixel_co", scope: !6943, file: !3, line: 518, type: !420)
!6973 = !DILocation(line: 518, column: 8, scope: !6943)
!6974 = !DILocalVariable(name: "closest_dist_squared", scope: !6943, file: !3, line: 519, type: !191)
!6975 = !DILocation(line: 519, column: 8, scope: !6943)
!6976 = !DILocalVariable(name: "closest_layer", scope: !6943, file: !3, line: 520, type: !2123)
!6977 = !DILocation(line: 520, column: 13, scope: !6943)
!6978 = !DILocalVariable(name: "closest_spline", scope: !6943, file: !3, line: 521, type: !2204)
!6979 = !DILocation(line: 521, column: 14, scope: !6943)
!6980 = !DILocalVariable(name: "undistort", scope: !6943, file: !3, line: 522, type: !1017)
!6981 = !DILocation(line: 522, column: 7, scope: !6943)
!6982 = !DILocation(line: 523, column: 3, scope: !6943)
!6983 = !DILocation(line: 523, column: 16, scope: !6943)
!6984 = !DILocation(line: 524, column: 3, scope: !6943)
!6985 = !DILocation(line: 524, column: 17, scope: !6943)
!6986 = !DILocation(line: 525, column: 19, scope: !6943)
!6987 = !DILocation(line: 525, column: 2, scope: !6943)
!6988 = !DILocation(line: 526, column: 16, scope: !6943)
!6989 = !DILocation(line: 526, column: 24, scope: !6943)
!6990 = !DILocation(line: 526, column: 22, scope: !6943)
!6991 = !DILocation(line: 526, column: 2, scope: !6943)
!6992 = !DILocation(line: 526, column: 14, scope: !6943)
!6993 = !DILocation(line: 527, column: 16, scope: !6943)
!6994 = !DILocation(line: 527, column: 24, scope: !6943)
!6995 = !DILocation(line: 527, column: 22, scope: !6943)
!6996 = !DILocation(line: 527, column: 2, scope: !6943)
!6997 = !DILocation(line: 527, column: 14, scope: !6943)
!6998 = !DILocation(line: 528, column: 6, scope: !6999)
!6999 = distinct !DILexicalBlock(scope: !6943, file: !3, line: 528, column: 6)
!7000 = !DILocation(line: 528, column: 9, scope: !6999)
!7001 = !DILocation(line: 528, column: 6, scope: !6943)
!7002 = !DILocation(line: 529, column: 16, scope: !7003)
!7003 = distinct !DILexicalBlock(scope: !6999, file: !3, line: 528, column: 18)
!7004 = !DILocation(line: 529, column: 20, scope: !7003)
!7005 = !DILocation(line: 529, column: 25, scope: !7003)
!7006 = !DILocation(line: 529, column: 34, scope: !7003)
!7007 = !DILocation(line: 530, column: 16, scope: !7003)
!7008 = !DILocation(line: 530, column: 20, scope: !7003)
!7009 = !DILocation(line: 530, column: 25, scope: !7003)
!7010 = !DILocation(line: 530, column: 37, scope: !7003)
!7011 = !DILocation(line: 530, column: 69, scope: !7003)
!7012 = !DILocation(line: 0, scope: !7003)
!7013 = !DILocation(line: 529, column: 15, scope: !7003)
!7014 = !DILocation(line: 529, column: 13, scope: !7003)
!7015 = !DILocation(line: 531, column: 2, scope: !7003)
!7016 = !DILocation(line: 532, column: 20, scope: !7017)
!7017 = distinct !DILexicalBlock(scope: !6943, file: !3, line: 532, column: 2)
!7018 = !DILocation(line: 532, column: 26, scope: !7017)
!7019 = !DILocation(line: 532, column: 37, scope: !7017)
!7020 = !DILocation(line: 532, column: 18, scope: !7017)
!7021 = !DILocation(line: 532, column: 7, scope: !7017)
!7022 = !DILocation(line: 533, column: 7, scope: !7023)
!7023 = distinct !DILexicalBlock(scope: !7017, file: !3, line: 532, column: 2)
!7024 = !DILocation(line: 533, column: 18, scope: !7023)
!7025 = !DILocation(line: 532, column: 2, scope: !7017)
!7026 = !DILocalVariable(name: "spline", scope: !7027, file: !3, line: 536, type: !2204)
!7027 = distinct !DILexicalBlock(scope: !7023, file: !3, line: 535, column: 2)
!7028 = !DILocation(line: 536, column: 15, scope: !7027)
!7029 = !DILocation(line: 537, column: 7, scope: !7030)
!7030 = distinct !DILexicalBlock(scope: !7027, file: !3, line: 537, column: 7)
!7031 = !DILocation(line: 537, column: 19, scope: !7030)
!7032 = !DILocation(line: 537, column: 32, scope: !7030)
!7033 = !DILocation(line: 537, column: 7, scope: !7027)
!7034 = !DILocation(line: 538, column: 4, scope: !7035)
!7035 = distinct !DILexicalBlock(scope: !7030, file: !3, line: 537, column: 56)
!7036 = !DILocation(line: 541, column: 17, scope: !7037)
!7037 = distinct !DILexicalBlock(scope: !7027, file: !3, line: 541, column: 3)
!7038 = !DILocation(line: 541, column: 29, scope: !7037)
!7039 = !DILocation(line: 541, column: 37, scope: !7037)
!7040 = !DILocation(line: 541, column: 15, scope: !7037)
!7041 = !DILocation(line: 541, column: 8, scope: !7037)
!7042 = !DILocation(line: 542, column: 8, scope: !7043)
!7043 = distinct !DILexicalBlock(scope: !7037, file: !3, line: 541, column: 3)
!7044 = !DILocation(line: 542, column: 15, scope: !7043)
!7045 = !DILocation(line: 541, column: 3, scope: !7037)
!7046 = !DILocalVariable(name: "points_array", scope: !7047, file: !3, line: 545, type: !2144)
!7047 = distinct !DILexicalBlock(scope: !7043, file: !3, line: 544, column: 3)
!7048 = !DILocation(line: 545, column: 21, scope: !7047)
!7049 = !DILocalVariable(name: "min", scope: !7047, file: !3, line: 546, type: !420)
!7050 = !DILocation(line: 546, column: 10, scope: !7047)
!7051 = !DILocalVariable(name: "max", scope: !7047, file: !3, line: 546, type: !420)
!7052 = !DILocation(line: 546, column: 18, scope: !7047)
!7053 = !DILocalVariable(name: "center", scope: !7047, file: !3, line: 546, type: !420)
!7054 = !DILocation(line: 546, column: 26, scope: !7047)
!7055 = !DILocalVariable(name: "dist_squared", scope: !7047, file: !3, line: 547, type: !191)
!7056 = !DILocation(line: 547, column: 10, scope: !7047)
!7057 = !DILocalVariable(name: "i", scope: !7047, file: !3, line: 548, type: !22)
!7058 = !DILocation(line: 548, column: 8, scope: !7047)
!7059 = !DILocalVariable(name: "max_bb_side", scope: !7047, file: !3, line: 549, type: !191)
!7060 = !DILocation(line: 549, column: 10, scope: !7047)
!7061 = !DILocation(line: 550, column: 9, scope: !7062)
!7062 = distinct !DILexicalBlock(scope: !7047, file: !3, line: 550, column: 8)
!7063 = !DILocation(line: 550, column: 17, scope: !7062)
!7064 = !DILocation(line: 550, column: 22, scope: !7062)
!7065 = !DILocation(line: 550, column: 32, scope: !7062)
!7066 = !DILocation(line: 550, column: 8, scope: !7047)
!7067 = !DILocation(line: 551, column: 5, scope: !7068)
!7068 = distinct !DILexicalBlock(scope: !7062, file: !3, line: 550, column: 38)
!7069 = !DILocation(line: 554, column: 47, scope: !7047)
!7070 = !DILocation(line: 554, column: 19, scope: !7047)
!7071 = !DILocation(line: 554, column: 17, scope: !7047)
!7072 = !DILocation(line: 555, column: 4, scope: !7073)
!7073 = distinct !DILexicalBlock(scope: !7047, file: !3, line: 555, column: 4)
!7074 = !DILocation(line: 556, column: 11, scope: !7075)
!7075 = distinct !DILexicalBlock(scope: !7047, file: !3, line: 556, column: 4)
!7076 = !DILocation(line: 556, column: 9, scope: !7075)
!7077 = !DILocation(line: 556, column: 16, scope: !7078)
!7078 = distinct !DILexicalBlock(scope: !7075, file: !3, line: 556, column: 4)
!7079 = !DILocation(line: 556, column: 20, scope: !7078)
!7080 = !DILocation(line: 556, column: 28, scope: !7078)
!7081 = !DILocation(line: 556, column: 18, scope: !7078)
!7082 = !DILocation(line: 556, column: 4, scope: !7075)
!7083 = !DILocalVariable(name: "point_deform", scope: !7084, file: !3, line: 557, type: !2144)
!7084 = distinct !DILexicalBlock(scope: !7078, file: !3, line: 556, column: 44)
!7085 = !DILocation(line: 557, column: 22, scope: !7084)
!7086 = !DILocation(line: 557, column: 38, scope: !7084)
!7087 = !DILocation(line: 557, column: 51, scope: !7084)
!7088 = !DILocalVariable(name: "bezt", scope: !7084, file: !3, line: 558, type: !2240)
!7089 = !DILocation(line: 558, column: 16, scope: !7084)
!7090 = !DILocation(line: 558, column: 24, scope: !7084)
!7091 = !DILocation(line: 558, column: 38, scope: !7084)
!7092 = !DILocalVariable(name: "vert", scope: !7084, file: !3, line: 560, type: !420)
!7093 = !DILocation(line: 560, column: 11, scope: !7084)
!7094 = !DILocation(line: 562, column: 16, scope: !7084)
!7095 = !DILocation(line: 562, column: 22, scope: !7084)
!7096 = !DILocation(line: 562, column: 28, scope: !7084)
!7097 = !DILocation(line: 562, column: 5, scope: !7084)
!7098 = !DILocation(line: 564, column: 9, scope: !7099)
!7099 = distinct !DILexicalBlock(scope: !7084, file: !3, line: 564, column: 9)
!7100 = !DILocation(line: 564, column: 9, scope: !7084)
!7101 = !DILocation(line: 565, column: 31, scope: !7102)
!7102 = distinct !DILexicalBlock(scope: !7099, file: !3, line: 564, column: 20)
!7103 = !DILocation(line: 565, column: 35, scope: !7102)
!7104 = !DILocation(line: 565, column: 41, scope: !7102)
!7105 = !DILocation(line: 565, column: 6, scope: !7102)
!7106 = !DILocation(line: 566, column: 5, scope: !7102)
!7107 = !DILocation(line: 568, column: 20, scope: !7084)
!7108 = !DILocation(line: 568, column: 25, scope: !7084)
!7109 = !DILocation(line: 568, column: 30, scope: !7084)
!7110 = !DILocation(line: 568, column: 5, scope: !7084)
!7111 = !DILocation(line: 569, column: 4, scope: !7084)
!7112 = !DILocation(line: 556, column: 40, scope: !7078)
!7113 = !DILocation(line: 556, column: 4, scope: !7078)
!7114 = distinct !{!7114, !7082, !7115}
!7115 = !DILocation(line: 569, column: 4, scope: !7075)
!7116 = !DILocation(line: 571, column: 17, scope: !7047)
!7117 = !DILocation(line: 571, column: 26, scope: !7047)
!7118 = !DILocation(line: 571, column: 24, scope: !7047)
!7119 = !DILocation(line: 571, column: 34, scope: !7047)
!7120 = !DILocation(line: 571, column: 43, scope: !7047)
!7121 = !DILocation(line: 571, column: 41, scope: !7047)
!7122 = !DILocation(line: 571, column: 4, scope: !7047)
!7123 = !DILocation(line: 571, column: 14, scope: !7047)
!7124 = !DILocation(line: 572, column: 17, scope: !7047)
!7125 = !DILocation(line: 572, column: 26, scope: !7047)
!7126 = !DILocation(line: 572, column: 24, scope: !7047)
!7127 = !DILocation(line: 572, column: 34, scope: !7047)
!7128 = !DILocation(line: 572, column: 43, scope: !7047)
!7129 = !DILocation(line: 572, column: 41, scope: !7047)
!7130 = !DILocation(line: 572, column: 4, scope: !7047)
!7131 = !DILocation(line: 572, column: 14, scope: !7047)
!7132 = !DILocation(line: 573, column: 36, scope: !7047)
!7133 = !DILocation(line: 573, column: 46, scope: !7047)
!7134 = !DILocation(line: 573, column: 19, scope: !7047)
!7135 = !DILocation(line: 573, column: 17, scope: !7047)
!7136 = !DILocation(line: 574, column: 26, scope: !7047)
!7137 = !DILocation(line: 574, column: 35, scope: !7047)
!7138 = !DILocation(line: 574, column: 33, scope: !7047)
!7139 = !DILocation(line: 574, column: 45, scope: !7047)
!7140 = !DILocation(line: 574, column: 43, scope: !7047)
!7141 = !DILocation(line: 574, column: 53, scope: !7047)
!7142 = !DILocation(line: 574, column: 62, scope: !7047)
!7143 = !DILocation(line: 574, column: 60, scope: !7047)
!7144 = !DILocation(line: 574, column: 72, scope: !7047)
!7145 = !DILocation(line: 574, column: 70, scope: !7047)
!7146 = !DILocation(line: 574, column: 18, scope: !7047)
!7147 = !DILocation(line: 574, column: 16, scope: !7047)
!7148 = !DILocation(line: 575, column: 8, scope: !7149)
!7149 = distinct !DILexicalBlock(scope: !7047, file: !3, line: 575, column: 8)
!7150 = !DILocation(line: 575, column: 24, scope: !7149)
!7151 = !DILocation(line: 575, column: 38, scope: !7149)
!7152 = !DILocation(line: 575, column: 36, scope: !7149)
!7153 = !DILocation(line: 575, column: 50, scope: !7149)
!7154 = !DILocation(line: 575, column: 21, scope: !7149)
!7155 = !DILocation(line: 575, column: 57, scope: !7149)
!7156 = !DILocation(line: 576, column: 9, scope: !7149)
!7157 = !DILocation(line: 576, column: 24, scope: !7149)
!7158 = !DILocation(line: 576, column: 32, scope: !7149)
!7159 = !DILocation(line: 576, column: 35, scope: !7149)
!7160 = !DILocation(line: 576, column: 50, scope: !7149)
!7161 = !DILocation(line: 576, column: 48, scope: !7149)
!7162 = !DILocation(line: 575, column: 8, scope: !7047)
!7163 = !DILocation(line: 578, column: 21, scope: !7164)
!7164 = distinct !DILexicalBlock(scope: !7149, file: !3, line: 577, column: 4)
!7165 = !DILocation(line: 578, column: 19, scope: !7164)
!7166 = !DILocation(line: 579, column: 22, scope: !7164)
!7167 = !DILocation(line: 579, column: 20, scope: !7164)
!7168 = !DILocation(line: 580, column: 28, scope: !7164)
!7169 = !DILocation(line: 580, column: 26, scope: !7164)
!7170 = !DILocation(line: 581, column: 4, scope: !7164)
!7171 = !DILocation(line: 582, column: 3, scope: !7047)
!7172 = !DILocation(line: 543, column: 17, scope: !7043)
!7173 = !DILocation(line: 543, column: 25, scope: !7043)
!7174 = !DILocation(line: 543, column: 15, scope: !7043)
!7175 = !DILocation(line: 541, column: 3, scope: !7043)
!7176 = distinct !{!7176, !7045, !7177}
!7177 = !DILocation(line: 582, column: 3, scope: !7037)
!7178 = !DILocation(line: 583, column: 2, scope: !7027)
!7179 = !DILocation(line: 534, column: 20, scope: !7023)
!7180 = !DILocation(line: 534, column: 32, scope: !7023)
!7181 = !DILocation(line: 534, column: 18, scope: !7023)
!7182 = !DILocation(line: 532, column: 2, scope: !7023)
!7183 = distinct !{!7183, !7025, !7184}
!7184 = !DILocation(line: 583, column: 2, scope: !7017)
!7185 = !DILocation(line: 584, column: 6, scope: !7186)
!7186 = distinct !DILexicalBlock(scope: !6943, file: !3, line: 584, column: 6)
!7187 = !DILocation(line: 584, column: 27, scope: !7186)
!7188 = !DILocation(line: 584, column: 47, scope: !7186)
!7189 = !DILocation(line: 584, column: 50, scope: !7186)
!7190 = !DILocation(line: 584, column: 65, scope: !7186)
!7191 = !DILocation(line: 584, column: 6, scope: !6943)
!7192 = !DILocalVariable(name: "diff_score", scope: !7193, file: !3, line: 585, type: !191)
!7193 = distinct !DILexicalBlock(scope: !7186, file: !3, line: 584, column: 74)
!7194 = !DILocation(line: 585, column: 9, scope: !7193)
!7195 = !DILocation(line: 586, column: 39, scope: !7196)
!7196 = distinct !DILexicalBlock(scope: !7193, file: !3, line: 586, column: 7)
!7197 = !DILocation(line: 586, column: 42, scope: !7196)
!7198 = !DILocation(line: 586, column: 48, scope: !7196)
!7199 = !DILocation(line: 586, column: 7, scope: !7196)
!7200 = !DILocation(line: 586, column: 7, scope: !7193)
!7201 = !DILocation(line: 591, column: 8, scope: !7202)
!7202 = distinct !DILexicalBlock(scope: !7203, file: !3, line: 591, column: 8)
!7203 = distinct !DILexicalBlock(scope: !7196, file: !3, line: 590, column: 3)
!7204 = !DILocation(line: 591, column: 29, scope: !7202)
!7205 = !DILocation(line: 591, column: 27, scope: !7202)
!7206 = !DILocation(line: 591, column: 8, scope: !7203)
!7207 = !DILocation(line: 592, column: 5, scope: !7208)
!7208 = distinct !DILexicalBlock(scope: !7202, file: !3, line: 591, column: 51)
!7209 = !DILocation(line: 594, column: 3, scope: !7203)
!7210 = !DILocation(line: 596, column: 19, scope: !7193)
!7211 = !DILocation(line: 596, column: 4, scope: !7193)
!7212 = !DILocation(line: 596, column: 17, scope: !7193)
!7213 = !DILocation(line: 597, column: 20, scope: !7193)
!7214 = !DILocation(line: 597, column: 4, scope: !7193)
!7215 = !DILocation(line: 597, column: 18, scope: !7193)
!7216 = !DILocation(line: 598, column: 3, scope: !7193)
!7217 = !DILocation(line: 600, column: 2, scope: !6943)
!7218 = !DILocation(line: 601, column: 1, scope: !6943)
!7219 = distinct !DISubprogram(name: "select_sliding_point", scope: !3, file: !3, line: 618, type: !7220, scopeLine: 620, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1817, retainedNodes: !2254)
!7220 = !DISubroutineType(types: !7221)
!7221 = !{null, !2120, !2123, !2204, !2144, !2210}
!7222 = !DILocalVariable(name: "mask", arg: 1, scope: !7219, file: !3, line: 618, type: !2120)
!7223 = !DILocation(line: 618, column: 40, scope: !7219)
!7224 = !DILocalVariable(name: "mask_layer", arg: 2, scope: !7219, file: !3, line: 618, type: !2123)
!7225 = !DILocation(line: 618, column: 57, scope: !7219)
!7226 = !DILocalVariable(name: "spline", arg: 3, scope: !7219, file: !3, line: 618, type: !2204)
!7227 = !DILocation(line: 618, column: 81, scope: !7219)
!7228 = !DILocalVariable(name: "point", arg: 4, scope: !7219, file: !3, line: 619, type: !2144)
!7229 = !DILocation(line: 619, column: 51, scope: !7219)
!7230 = !DILocalVariable(name: "which_handle", arg: 5, scope: !7219, file: !3, line: 619, type: !2210)
!7231 = !DILocation(line: 619, column: 75, scope: !7219)
!7232 = !DILocation(line: 621, column: 28, scope: !7219)
!7233 = !DILocation(line: 621, column: 2, scope: !7219)
!7234 = !DILocation(line: 623, column: 10, scope: !7219)
!7235 = !DILocation(line: 623, column: 2, scope: !7219)
!7236 = !DILocation(line: 625, column: 30, scope: !7237)
!7237 = distinct !DILexicalBlock(scope: !7219, file: !3, line: 623, column: 24)
!7238 = !DILocation(line: 625, column: 4, scope: !7237)
!7239 = !DILocation(line: 626, column: 4, scope: !7237)
!7240 = !DILocation(line: 628, column: 4, scope: !7237)
!7241 = !DILocation(line: 628, column: 11, scope: !7237)
!7242 = !DILocation(line: 628, column: 16, scope: !7237)
!7243 = !DILocation(line: 628, column: 19, scope: !7237)
!7244 = !DILocation(line: 629, column: 4, scope: !7237)
!7245 = !DILocation(line: 631, column: 4, scope: !7237)
!7246 = !DILocation(line: 631, column: 11, scope: !7237)
!7247 = !DILocation(line: 631, column: 16, scope: !7237)
!7248 = !DILocation(line: 631, column: 19, scope: !7237)
!7249 = !DILocation(line: 632, column: 4, scope: !7237)
!7250 = !DILocation(line: 634, column: 4, scope: !7237)
!7251 = !DILocation(line: 634, column: 11, scope: !7237)
!7252 = !DILocation(line: 634, column: 16, scope: !7237)
!7253 = !DILocation(line: 634, column: 19, scope: !7237)
!7254 = !DILocation(line: 635, column: 4, scope: !7237)
!7255 = !DILocation(line: 635, column: 11, scope: !7237)
!7256 = !DILocation(line: 635, column: 16, scope: !7237)
!7257 = !DILocation(line: 635, column: 19, scope: !7237)
!7258 = !DILocation(line: 636, column: 4, scope: !7237)
!7259 = !DILocation(line: 639, column: 2, scope: !7237)
!7260 = !DILocation(line: 641, column: 27, scope: !7219)
!7261 = !DILocation(line: 641, column: 2, scope: !7219)
!7262 = !DILocation(line: 641, column: 14, scope: !7219)
!7263 = !DILocation(line: 641, column: 25, scope: !7219)
!7264 = !DILocation(line: 642, column: 26, scope: !7219)
!7265 = !DILocation(line: 642, column: 2, scope: !7219)
!7266 = !DILocation(line: 642, column: 14, scope: !7219)
!7267 = !DILocation(line: 642, column: 24, scope: !7219)
!7268 = !DILocation(line: 643, column: 27, scope: !7219)
!7269 = !DILocation(line: 643, column: 2, scope: !7219)
!7270 = !DILocation(line: 644, column: 1, scope: !7219)
!7271 = distinct !DISubprogram(name: "check_sliding_handle_type", scope: !3, file: !3, line: 646, type: !7272, scopeLine: 647, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1817, retainedNodes: !2254)
!7272 = !DISubroutineType(types: !7273)
!7273 = !{null, !2144, !2210}
!7274 = !DILocalVariable(name: "point", arg: 1, scope: !7271, file: !3, line: 646, type: !2144)
!7275 = !DILocation(line: 646, column: 56, scope: !7271)
!7276 = !DILocalVariable(name: "which_handle", arg: 2, scope: !7271, file: !3, line: 646, type: !2210)
!7277 = !DILocation(line: 646, column: 80, scope: !7271)
!7278 = !DILocalVariable(name: "bezt", scope: !7271, file: !3, line: 648, type: !2240)
!7279 = !DILocation(line: 648, column: 13, scope: !7271)
!7280 = !DILocation(line: 648, column: 21, scope: !7271)
!7281 = !DILocation(line: 648, column: 28, scope: !7271)
!7282 = !DILocation(line: 650, column: 6, scope: !7283)
!7283 = distinct !DILexicalBlock(scope: !7271, file: !3, line: 650, column: 6)
!7284 = !DILocation(line: 650, column: 19, scope: !7283)
!7285 = !DILocation(line: 650, column: 6, scope: !7271)
!7286 = !DILocation(line: 651, column: 7, scope: !7287)
!7287 = distinct !DILexicalBlock(scope: !7288, file: !3, line: 651, column: 7)
!7288 = distinct !DILexicalBlock(scope: !7283, file: !3, line: 650, column: 46)
!7289 = !DILocation(line: 651, column: 13, scope: !7287)
!7290 = !DILocation(line: 651, column: 16, scope: !7287)
!7291 = !DILocation(line: 651, column: 7, scope: !7288)
!7292 = !DILocation(line: 652, column: 4, scope: !7293)
!7293 = distinct !DILexicalBlock(scope: !7287, file: !3, line: 651, column: 28)
!7294 = !DILocation(line: 652, column: 10, scope: !7293)
!7295 = !DILocation(line: 652, column: 13, scope: !7293)
!7296 = !DILocation(line: 653, column: 3, scope: !7293)
!7297 = !DILocation(line: 654, column: 12, scope: !7298)
!7298 = distinct !DILexicalBlock(scope: !7287, file: !3, line: 654, column: 12)
!7299 = !DILocation(line: 654, column: 18, scope: !7298)
!7300 = !DILocation(line: 654, column: 21, scope: !7298)
!7301 = !DILocation(line: 654, column: 12, scope: !7287)
!7302 = !DILocation(line: 655, column: 4, scope: !7303)
!7303 = distinct !DILexicalBlock(scope: !7298, file: !3, line: 654, column: 33)
!7304 = !DILocation(line: 655, column: 10, scope: !7303)
!7305 = !DILocation(line: 655, column: 13, scope: !7303)
!7306 = !DILocation(line: 656, column: 4, scope: !7303)
!7307 = !DILocation(line: 656, column: 10, scope: !7303)
!7308 = !DILocation(line: 656, column: 13, scope: !7303)
!7309 = !DILocation(line: 657, column: 3, scope: !7303)
!7310 = !DILocation(line: 658, column: 2, scope: !7288)
!7311 = !DILocation(line: 659, column: 11, scope: !7312)
!7312 = distinct !DILexicalBlock(scope: !7283, file: !3, line: 659, column: 11)
!7313 = !DILocation(line: 659, column: 24, scope: !7312)
!7314 = !DILocation(line: 659, column: 11, scope: !7283)
!7315 = !DILocation(line: 660, column: 7, scope: !7316)
!7316 = distinct !DILexicalBlock(scope: !7317, file: !3, line: 660, column: 7)
!7317 = distinct !DILexicalBlock(scope: !7312, file: !3, line: 659, column: 52)
!7318 = !DILocation(line: 660, column: 13, scope: !7316)
!7319 = !DILocation(line: 660, column: 16, scope: !7316)
!7320 = !DILocation(line: 660, column: 7, scope: !7317)
!7321 = !DILocation(line: 661, column: 4, scope: !7322)
!7322 = distinct !DILexicalBlock(scope: !7316, file: !3, line: 660, column: 28)
!7323 = !DILocation(line: 661, column: 10, scope: !7322)
!7324 = !DILocation(line: 661, column: 13, scope: !7322)
!7325 = !DILocation(line: 662, column: 3, scope: !7322)
!7326 = !DILocation(line: 663, column: 12, scope: !7327)
!7327 = distinct !DILexicalBlock(scope: !7316, file: !3, line: 663, column: 12)
!7328 = !DILocation(line: 663, column: 18, scope: !7327)
!7329 = !DILocation(line: 663, column: 21, scope: !7327)
!7330 = !DILocation(line: 663, column: 12, scope: !7316)
!7331 = !DILocation(line: 664, column: 4, scope: !7332)
!7332 = distinct !DILexicalBlock(scope: !7327, file: !3, line: 663, column: 33)
!7333 = !DILocation(line: 664, column: 10, scope: !7332)
!7334 = !DILocation(line: 664, column: 13, scope: !7332)
!7335 = !DILocation(line: 665, column: 4, scope: !7332)
!7336 = !DILocation(line: 665, column: 10, scope: !7332)
!7337 = !DILocation(line: 665, column: 13, scope: !7332)
!7338 = !DILocation(line: 666, column: 3, scope: !7332)
!7339 = !DILocation(line: 667, column: 2, scope: !7317)
!7340 = !DILocation(line: 668, column: 1, scope: !7271)
!7341 = distinct !DISubprogram(name: "madd_v2_v2v2fl", scope: !2765, file: !2765, line: 521, type: !7342, scopeLine: 522, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1817, retainedNodes: !2254)
!7342 = !DISubroutineType(types: !7343)
!7343 = !{null, !2280, !2275, !2275, !191}
!7344 = !DILocalVariable(name: "r", arg: 1, scope: !7341, file: !2765, line: 521, type: !2280)
!7345 = !DILocation(line: 521, column: 35, scope: !7341)
!7346 = !DILocalVariable(name: "a", arg: 2, scope: !7341, file: !2765, line: 521, type: !2275)
!7347 = !DILocation(line: 521, column: 53, scope: !7341)
!7348 = !DILocalVariable(name: "b", arg: 3, scope: !7341, file: !2765, line: 521, type: !2275)
!7349 = !DILocation(line: 521, column: 71, scope: !7341)
!7350 = !DILocalVariable(name: "f", arg: 4, scope: !7341, file: !2765, line: 521, type: !191)
!7351 = !DILocation(line: 521, column: 83, scope: !7341)
!7352 = !DILocation(line: 523, column: 9, scope: !7341)
!7353 = !DILocation(line: 523, column: 16, scope: !7341)
!7354 = !DILocation(line: 523, column: 23, scope: !7341)
!7355 = !DILocation(line: 523, column: 21, scope: !7341)
!7356 = !DILocation(line: 523, column: 14, scope: !7341)
!7357 = !DILocation(line: 523, column: 2, scope: !7341)
!7358 = !DILocation(line: 523, column: 7, scope: !7341)
!7359 = !DILocation(line: 524, column: 9, scope: !7341)
!7360 = !DILocation(line: 524, column: 16, scope: !7341)
!7361 = !DILocation(line: 524, column: 23, scope: !7341)
!7362 = !DILocation(line: 524, column: 21, scope: !7341)
!7363 = !DILocation(line: 524, column: 14, scope: !7341)
!7364 = !DILocation(line: 524, column: 2, scope: !7341)
!7365 = !DILocation(line: 524, column: 7, scope: !7341)
!7366 = !DILocation(line: 525, column: 1, scope: !7341)
!7367 = distinct !DISubprogram(name: "slide_point_check_initial_feather", scope: !3, file: !3, line: 603, type: !7368, scopeLine: 604, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1817, retainedNodes: !2254)
!7368 = !DISubroutineType(types: !7369)
!7369 = !{!1017, !2204}
!7370 = !DILocalVariable(name: "spline", arg: 1, scope: !7367, file: !3, line: 603, type: !2204)
!7371 = !DILocation(line: 603, column: 59, scope: !7367)
!7372 = !DILocalVariable(name: "i", scope: !7367, file: !3, line: 605, type: !22)
!7373 = !DILocation(line: 605, column: 6, scope: !7367)
!7374 = !DILocation(line: 607, column: 9, scope: !7375)
!7375 = distinct !DILexicalBlock(scope: !7367, file: !3, line: 607, column: 2)
!7376 = !DILocation(line: 607, column: 7, scope: !7375)
!7377 = !DILocation(line: 607, column: 14, scope: !7378)
!7378 = distinct !DILexicalBlock(scope: !7375, file: !3, line: 607, column: 2)
!7379 = !DILocation(line: 607, column: 18, scope: !7378)
!7380 = !DILocation(line: 607, column: 26, scope: !7378)
!7381 = !DILocation(line: 607, column: 16, scope: !7378)
!7382 = !DILocation(line: 607, column: 2, scope: !7375)
!7383 = !DILocalVariable(name: "point", scope: !7384, file: !3, line: 608, type: !2144)
!7384 = distinct !DILexicalBlock(scope: !7378, file: !3, line: 607, column: 42)
!7385 = !DILocation(line: 608, column: 20, scope: !7384)
!7386 = !DILocation(line: 608, column: 29, scope: !7384)
!7387 = !DILocation(line: 608, column: 37, scope: !7384)
!7388 = !DILocation(line: 608, column: 44, scope: !7384)
!7389 = !DILocation(line: 610, column: 7, scope: !7390)
!7390 = distinct !DILexicalBlock(scope: !7384, file: !3, line: 610, column: 7)
!7391 = !DILocation(line: 610, column: 14, scope: !7390)
!7392 = !DILocation(line: 610, column: 19, scope: !7390)
!7393 = !DILocation(line: 610, column: 26, scope: !7390)
!7394 = !DILocation(line: 610, column: 7, scope: !7384)
!7395 = !DILocation(line: 611, column: 4, scope: !7396)
!7396 = distinct !DILexicalBlock(scope: !7390, file: !3, line: 610, column: 35)
!7397 = !DILocation(line: 613, column: 2, scope: !7384)
!7398 = !DILocation(line: 607, column: 38, scope: !7378)
!7399 = !DILocation(line: 607, column: 2, scope: !7378)
!7400 = distinct !{!7400, !7382, !7401}
!7401 = !DILocation(line: 613, column: 2, scope: !7375)
!7402 = !DILocation(line: 615, column: 2, scope: !7367)
!7403 = !DILocation(line: 616, column: 1, scope: !7367)
!7404 = distinct !DISubprogram(name: "copy_v2_v2", scope: !2765, file: !2765, line: 58, type: !7405, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1817, retainedNodes: !2254)
!7405 = !DISubroutineType(types: !7406)
!7406 = !{null, !2280, !2275}
!7407 = !DILocalVariable(name: "r", arg: 1, scope: !7404, file: !2765, line: 58, type: !2280)
!7408 = !DILocation(line: 58, column: 31, scope: !7404)
!7409 = !DILocalVariable(name: "a", arg: 2, scope: !7404, file: !2765, line: 58, type: !2275)
!7410 = !DILocation(line: 58, column: 49, scope: !7404)
!7411 = !DILocation(line: 60, column: 9, scope: !7404)
!7412 = !DILocation(line: 60, column: 2, scope: !7404)
!7413 = !DILocation(line: 60, column: 7, scope: !7404)
!7414 = !DILocation(line: 61, column: 9, scope: !7404)
!7415 = !DILocation(line: 61, column: 2, scope: !7404)
!7416 = !DILocation(line: 61, column: 7, scope: !7404)
!7417 = !DILocation(line: 62, column: 1, scope: !7404)
!7418 = distinct !DISubprogram(name: "mask_point_undistort_pos", scope: !3, file: !3, line: 501, type: !7419, scopeLine: 502, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1817, retainedNodes: !2254)
!7419 = !DISubroutineType(types: !7420)
!7420 = !{null, !3187, !2280, !2275}
!7421 = !DILocalVariable(name: "sc", arg: 1, scope: !7418, file: !3, line: 501, type: !3187)
!7422 = !DILocation(line: 501, column: 49, scope: !7418)
!7423 = !DILocalVariable(name: "r_co", arg: 2, scope: !7418, file: !3, line: 501, type: !2280)
!7424 = !DILocation(line: 501, column: 59, scope: !7418)
!7425 = !DILocalVariable(name: "co", arg: 3, scope: !7418, file: !3, line: 501, type: !2275)
!7426 = !DILocation(line: 501, column: 80, scope: !7418)
!7427 = !DILocation(line: 503, column: 30, scope: !7418)
!7428 = !DILocation(line: 503, column: 34, scope: !7418)
!7429 = !DILocation(line: 503, column: 41, scope: !7418)
!7430 = !DILocation(line: 503, column: 45, scope: !7418)
!7431 = !DILocation(line: 503, column: 51, scope: !7418)
!7432 = !DILocation(line: 503, column: 57, scope: !7418)
!7433 = !DILocation(line: 503, column: 2, scope: !7418)
!7434 = !DILocation(line: 504, column: 32, scope: !7418)
!7435 = !DILocation(line: 504, column: 36, scope: !7418)
!7436 = !DILocation(line: 504, column: 42, scope: !7418)
!7437 = !DILocation(line: 504, column: 2, scope: !7418)
!7438 = !DILocation(line: 505, column: 32, scope: !7418)
!7439 = !DILocation(line: 505, column: 36, scope: !7418)
!7440 = !DILocation(line: 505, column: 43, scope: !7418)
!7441 = !DILocation(line: 505, column: 47, scope: !7418)
!7442 = !DILocation(line: 505, column: 53, scope: !7418)
!7443 = !DILocation(line: 505, column: 59, scope: !7418)
!7444 = !DILocation(line: 505, column: 2, scope: !7418)
!7445 = !DILocation(line: 506, column: 1, scope: !7418)
!7446 = distinct !DISubprogram(name: "min_ff", scope: !7447, file: !7447, line: 202, type: !7448, scopeLine: 203, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1817, retainedNodes: !2254)
!7447 = !DIFile(filename: "blender/source/blender/blenlib/intern/math_base_inline.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!7448 = !DISubroutineType(types: !7449)
!7449 = !{!191, !191, !191}
!7450 = !DILocalVariable(name: "a", arg: 1, scope: !7446, file: !7447, line: 202, type: !191)
!7451 = !DILocation(line: 202, column: 28, scope: !7446)
!7452 = !DILocalVariable(name: "b", arg: 2, scope: !7446, file: !7447, line: 202, type: !191)
!7453 = !DILocation(line: 202, column: 37, scope: !7446)
!7454 = !DILocation(line: 204, column: 10, scope: !7446)
!7455 = !DILocation(line: 204, column: 14, scope: !7446)
!7456 = !DILocation(line: 204, column: 12, scope: !7446)
!7457 = !DILocation(line: 204, column: 9, scope: !7446)
!7458 = !DILocation(line: 204, column: 19, scope: !7446)
!7459 = !DILocation(line: 204, column: 23, scope: !7446)
!7460 = !DILocation(line: 204, column: 2, scope: !7446)
!7461 = distinct !DISubprogram(name: "mul_v2_fl", scope: !2765, file: !2765, line: 380, type: !7462, scopeLine: 381, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1817, retainedNodes: !2254)
!7462 = !DISubroutineType(types: !7463)
!7463 = !{null, !2280, !191}
!7464 = !DILocalVariable(name: "r", arg: 1, scope: !7461, file: !2765, line: 380, type: !2280)
!7465 = !DILocation(line: 380, column: 30, scope: !7461)
!7466 = !DILocalVariable(name: "f", arg: 2, scope: !7461, file: !2765, line: 380, type: !191)
!7467 = !DILocation(line: 380, column: 42, scope: !7461)
!7468 = !DILocation(line: 382, column: 10, scope: !7461)
!7469 = !DILocation(line: 382, column: 2, scope: !7461)
!7470 = !DILocation(line: 382, column: 7, scope: !7461)
!7471 = !DILocation(line: 383, column: 10, scope: !7461)
!7472 = !DILocation(line: 383, column: 2, scope: !7461)
!7473 = !DILocation(line: 383, column: 7, scope: !7461)
!7474 = !DILocation(line: 384, column: 1, scope: !7461)
!7475 = distinct !DISubprogram(name: "negate_v2", scope: !2765, file: !2765, line: 564, type: !7476, scopeLine: 565, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1817, retainedNodes: !2254)
!7476 = !DISubroutineType(types: !7477)
!7477 = !{null, !2280}
!7478 = !DILocalVariable(name: "r", arg: 1, scope: !7475, file: !2765, line: 564, type: !2280)
!7479 = !DILocation(line: 564, column: 30, scope: !7475)
!7480 = !DILocation(line: 566, column: 10, scope: !7475)
!7481 = !DILocation(line: 566, column: 9, scope: !7475)
!7482 = !DILocation(line: 566, column: 2, scope: !7475)
!7483 = !DILocation(line: 566, column: 7, scope: !7475)
!7484 = !DILocation(line: 567, column: 10, scope: !7475)
!7485 = !DILocation(line: 567, column: 9, scope: !7475)
!7486 = !DILocation(line: 567, column: 2, scope: !7475)
!7487 = !DILocation(line: 567, column: 7, scope: !7475)
!7488 = !DILocation(line: 568, column: 1, scope: !7475)
!7489 = distinct !DISubprogram(name: "add_v2_v2v2", scope: !2765, file: !2765, line: 290, type: !6559, scopeLine: 291, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1817, retainedNodes: !2254)
!7490 = !DILocalVariable(name: "r", arg: 1, scope: !7489, file: !2765, line: 290, type: !2280)
!7491 = !DILocation(line: 290, column: 32, scope: !7489)
!7492 = !DILocalVariable(name: "a", arg: 2, scope: !7489, file: !2765, line: 290, type: !2275)
!7493 = !DILocation(line: 290, column: 50, scope: !7489)
!7494 = !DILocalVariable(name: "b", arg: 3, scope: !7489, file: !2765, line: 290, type: !2275)
!7495 = !DILocation(line: 290, column: 68, scope: !7489)
!7496 = !DILocation(line: 292, column: 9, scope: !7489)
!7497 = !DILocation(line: 292, column: 16, scope: !7489)
!7498 = !DILocation(line: 292, column: 14, scope: !7489)
!7499 = !DILocation(line: 292, column: 2, scope: !7489)
!7500 = !DILocation(line: 292, column: 7, scope: !7489)
!7501 = !DILocation(line: 293, column: 9, scope: !7489)
!7502 = !DILocation(line: 293, column: 16, scope: !7489)
!7503 = !DILocation(line: 293, column: 14, scope: !7489)
!7504 = !DILocation(line: 293, column: 2, scope: !7489)
!7505 = !DILocation(line: 293, column: 7, scope: !7489)
!7506 = !DILocation(line: 294, column: 1, scope: !7489)
!7507 = distinct !DISubprogram(name: "add_v2_v2", scope: !2765, file: !2765, line: 284, type: !7405, scopeLine: 285, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1817, retainedNodes: !2254)
!7508 = !DILocalVariable(name: "r", arg: 1, scope: !7507, file: !2765, line: 284, type: !2280)
!7509 = !DILocation(line: 284, column: 30, scope: !7507)
!7510 = !DILocalVariable(name: "a", arg: 2, scope: !7507, file: !2765, line: 284, type: !2275)
!7511 = !DILocation(line: 284, column: 48, scope: !7507)
!7512 = !DILocation(line: 286, column: 10, scope: !7507)
!7513 = !DILocation(line: 286, column: 2, scope: !7507)
!7514 = !DILocation(line: 286, column: 7, scope: !7507)
!7515 = !DILocation(line: 287, column: 10, scope: !7507)
!7516 = !DILocation(line: 287, column: 2, scope: !7507)
!7517 = !DILocation(line: 287, column: 7, scope: !7507)
!7518 = !DILocation(line: 288, column: 1, scope: !7507)
!7519 = distinct !DISubprogram(name: "len_v2", scope: !2765, file: !2765, line: 691, type: !7520, scopeLine: 692, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1817, retainedNodes: !2254)
!7520 = !DISubroutineType(types: !7521)
!7521 = !{!191, !2275}
!7522 = !DILocalVariable(name: "v", arg: 1, scope: !7519, file: !2765, line: 691, type: !2275)
!7523 = !DILocation(line: 691, column: 34, scope: !7519)
!7524 = !DILocation(line: 693, column: 15, scope: !7519)
!7525 = !DILocation(line: 693, column: 22, scope: !7519)
!7526 = !DILocation(line: 693, column: 20, scope: !7519)
!7527 = !DILocation(line: 693, column: 29, scope: !7519)
!7528 = !DILocation(line: 693, column: 36, scope: !7519)
!7529 = !DILocation(line: 693, column: 34, scope: !7519)
!7530 = !DILocation(line: 693, column: 27, scope: !7519)
!7531 = !DILocation(line: 693, column: 9, scope: !7519)
!7532 = !DILocation(line: 693, column: 2, scope: !7519)
!7533 = distinct !DISubprogram(name: "slide_point_delta_all_feather", scope: !3, file: !3, line: 808, type: !7534, scopeLine: 809, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1817, retainedNodes: !2254)
!7534 = !DISubroutineType(types: !7535)
!7535 = !{null, !2113, !191}
!7536 = !DILocalVariable(name: "data", arg: 1, scope: !7533, file: !3, line: 808, type: !2113)
!7537 = !DILocation(line: 808, column: 59, scope: !7533)
!7538 = !DILocalVariable(name: "delta", arg: 2, scope: !7533, file: !3, line: 808, type: !191)
!7539 = !DILocation(line: 808, column: 71, scope: !7533)
!7540 = !DILocalVariable(name: "i", scope: !7533, file: !3, line: 810, type: !22)
!7541 = !DILocation(line: 810, column: 6, scope: !7533)
!7542 = !DILocation(line: 812, column: 9, scope: !7543)
!7543 = distinct !DILexicalBlock(scope: !7533, file: !3, line: 812, column: 2)
!7544 = !DILocation(line: 812, column: 7, scope: !7543)
!7545 = !DILocation(line: 812, column: 14, scope: !7546)
!7546 = distinct !DILexicalBlock(scope: !7543, file: !3, line: 812, column: 2)
!7547 = !DILocation(line: 812, column: 18, scope: !7546)
!7548 = !DILocation(line: 812, column: 24, scope: !7546)
!7549 = !DILocation(line: 812, column: 32, scope: !7546)
!7550 = !DILocation(line: 812, column: 16, scope: !7546)
!7551 = !DILocation(line: 812, column: 2, scope: !7543)
!7552 = !DILocalVariable(name: "point", scope: !7553, file: !3, line: 813, type: !2144)
!7553 = distinct !DILexicalBlock(scope: !7546, file: !3, line: 812, column: 48)
!7554 = !DILocation(line: 813, column: 20, scope: !7553)
!7555 = !DILocation(line: 813, column: 29, scope: !7553)
!7556 = !DILocation(line: 813, column: 35, scope: !7553)
!7557 = !DILocation(line: 813, column: 43, scope: !7553)
!7558 = !DILocation(line: 813, column: 50, scope: !7553)
!7559 = !DILocalVariable(name: "orig_point", scope: !7553, file: !3, line: 814, type: !2144)
!7560 = !DILocation(line: 814, column: 20, scope: !7553)
!7561 = !DILocation(line: 814, column: 34, scope: !7553)
!7562 = !DILocation(line: 814, column: 40, scope: !7553)
!7563 = !DILocation(line: 814, column: 53, scope: !7553)
!7564 = !DILocation(line: 814, column: 60, scope: !7553)
!7565 = !DILocation(line: 816, column: 24, scope: !7553)
!7566 = !DILocation(line: 816, column: 36, scope: !7553)
!7567 = !DILocation(line: 816, column: 41, scope: !7553)
!7568 = !DILocation(line: 816, column: 50, scope: !7553)
!7569 = !DILocation(line: 816, column: 48, scope: !7553)
!7570 = !DILocation(line: 816, column: 3, scope: !7553)
!7571 = !DILocation(line: 816, column: 10, scope: !7553)
!7572 = !DILocation(line: 816, column: 15, scope: !7553)
!7573 = !DILocation(line: 816, column: 22, scope: !7553)
!7574 = !DILocation(line: 817, column: 7, scope: !7575)
!7575 = distinct !DILexicalBlock(scope: !7553, file: !3, line: 817, column: 7)
!7576 = !DILocation(line: 817, column: 14, scope: !7575)
!7577 = !DILocation(line: 817, column: 19, scope: !7575)
!7578 = !DILocation(line: 817, column: 26, scope: !7575)
!7579 = !DILocation(line: 817, column: 7, scope: !7553)
!7580 = !DILocation(line: 818, column: 4, scope: !7581)
!7581 = distinct !DILexicalBlock(scope: !7575, file: !3, line: 817, column: 34)
!7582 = !DILocation(line: 818, column: 11, scope: !7581)
!7583 = !DILocation(line: 818, column: 16, scope: !7581)
!7584 = !DILocation(line: 818, column: 23, scope: !7581)
!7585 = !DILocation(line: 819, column: 3, scope: !7581)
!7586 = !DILocation(line: 820, column: 2, scope: !7553)
!7587 = !DILocation(line: 812, column: 44, scope: !7546)
!7588 = !DILocation(line: 812, column: 2, scope: !7546)
!7589 = distinct !{!7589, !7551, !7590}
!7590 = !DILocation(line: 820, column: 2, scope: !7543)
!7591 = !DILocation(line: 821, column: 1, scope: !7533)
!7592 = distinct !DISubprogram(name: "slide_point_restore_spline", scope: !3, file: !3, line: 823, type: !7593, scopeLine: 824, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1817, retainedNodes: !2254)
!7593 = !DISubroutineType(types: !7594)
!7594 = !{null, !2113}
!7595 = !DILocalVariable(name: "data", arg: 1, scope: !7592, file: !3, line: 823, type: !2113)
!7596 = !DILocation(line: 823, column: 56, scope: !7592)
!7597 = !DILocalVariable(name: "i", scope: !7592, file: !3, line: 825, type: !22)
!7598 = !DILocation(line: 825, column: 6, scope: !7592)
!7599 = !DILocation(line: 827, column: 9, scope: !7600)
!7600 = distinct !DILexicalBlock(scope: !7592, file: !3, line: 827, column: 2)
!7601 = !DILocation(line: 827, column: 7, scope: !7600)
!7602 = !DILocation(line: 827, column: 14, scope: !7603)
!7603 = distinct !DILexicalBlock(scope: !7600, file: !3, line: 827, column: 2)
!7604 = !DILocation(line: 827, column: 18, scope: !7603)
!7605 = !DILocation(line: 827, column: 24, scope: !7603)
!7606 = !DILocation(line: 827, column: 32, scope: !7603)
!7607 = !DILocation(line: 827, column: 16, scope: !7603)
!7608 = !DILocation(line: 827, column: 2, scope: !7600)
!7609 = !DILocalVariable(name: "point", scope: !7610, file: !3, line: 828, type: !2144)
!7610 = distinct !DILexicalBlock(scope: !7603, file: !3, line: 827, column: 48)
!7611 = !DILocation(line: 828, column: 20, scope: !7610)
!7612 = !DILocation(line: 828, column: 29, scope: !7610)
!7613 = !DILocation(line: 828, column: 35, scope: !7610)
!7614 = !DILocation(line: 828, column: 43, scope: !7610)
!7615 = !DILocation(line: 828, column: 50, scope: !7610)
!7616 = !DILocalVariable(name: "orig_point", scope: !7610, file: !3, line: 829, type: !2144)
!7617 = !DILocation(line: 829, column: 20, scope: !7610)
!7618 = !DILocation(line: 829, column: 34, scope: !7610)
!7619 = !DILocation(line: 829, column: 40, scope: !7610)
!7620 = !DILocation(line: 829, column: 53, scope: !7610)
!7621 = !DILocation(line: 829, column: 60, scope: !7610)
!7622 = !DILocalVariable(name: "j", scope: !7610, file: !3, line: 830, type: !22)
!7623 = !DILocation(line: 830, column: 7, scope: !7610)
!7624 = !DILocation(line: 832, column: 3, scope: !7610)
!7625 = !DILocation(line: 832, column: 10, scope: !7610)
!7626 = !DILocation(line: 832, column: 17, scope: !7610)
!7627 = !DILocation(line: 832, column: 29, scope: !7610)
!7628 = !DILocation(line: 834, column: 10, scope: !7629)
!7629 = distinct !DILexicalBlock(scope: !7610, file: !3, line: 834, column: 3)
!7630 = !DILocation(line: 834, column: 8, scope: !7629)
!7631 = !DILocation(line: 834, column: 15, scope: !7632)
!7632 = distinct !DILexicalBlock(scope: !7629, file: !3, line: 834, column: 3)
!7633 = !DILocation(line: 834, column: 19, scope: !7632)
!7634 = !DILocation(line: 834, column: 26, scope: !7632)
!7635 = !DILocation(line: 834, column: 17, scope: !7632)
!7636 = !DILocation(line: 834, column: 3, scope: !7629)
!7637 = !DILocation(line: 835, column: 4, scope: !7632)
!7638 = !DILocation(line: 835, column: 11, scope: !7632)
!7639 = !DILocation(line: 835, column: 14, scope: !7632)
!7640 = !DILocation(line: 835, column: 19, scope: !7632)
!7641 = !DILocation(line: 835, column: 31, scope: !7632)
!7642 = !DILocation(line: 835, column: 34, scope: !7632)
!7643 = !DILocation(line: 834, column: 35, scope: !7632)
!7644 = !DILocation(line: 834, column: 3, scope: !7632)
!7645 = distinct !{!7645, !7636, !7646}
!7646 = !DILocation(line: 835, column: 35, scope: !7629)
!7647 = !DILocation(line: 836, column: 2, scope: !7610)
!7648 = !DILocation(line: 827, column: 44, scope: !7603)
!7649 = !DILocation(line: 827, column: 2, scope: !7603)
!7650 = distinct !{!7650, !7608, !7651}
!7651 = !DILocation(line: 836, column: 2, scope: !7600)
!7652 = !DILocation(line: 837, column: 1, scope: !7592)
!7653 = distinct !DISubprogram(name: "free_slide_point_data", scope: !3, file: !3, line: 861, type: !7593, scopeLine: 862, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1817, retainedNodes: !2254)
!7654 = !DILocalVariable(name: "data", arg: 1, scope: !7653, file: !3, line: 861, type: !2113)
!7655 = !DILocation(line: 861, column: 51, scope: !7653)
!7656 = !DILocation(line: 863, column: 6, scope: !7657)
!7657 = distinct !DILexicalBlock(scope: !7653, file: !3, line: 863, column: 6)
!7658 = !DILocation(line: 863, column: 12, scope: !7657)
!7659 = !DILocation(line: 863, column: 6, scope: !7653)
!7660 = !DILocation(line: 864, column: 24, scope: !7657)
!7661 = !DILocation(line: 864, column: 30, scope: !7657)
!7662 = !DILocation(line: 864, column: 3, scope: !7657)
!7663 = !DILocation(line: 866, column: 2, scope: !7653)
!7664 = !DILocation(line: 866, column: 12, scope: !7653)
!7665 = !DILocation(line: 867, column: 1, scope: !7653)
!7666 = distinct !DISubprogram(name: "cancel_slide_point", scope: !3, file: !3, line: 839, type: !7593, scopeLine: 840, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1817, retainedNodes: !2254)
!7667 = !DILocalVariable(name: "data", arg: 1, scope: !7666, file: !3, line: 839, type: !2113)
!7668 = !DILocation(line: 839, column: 48, scope: !7666)
!7669 = !DILocation(line: 843, column: 6, scope: !7670)
!7670 = distinct !DILexicalBlock(scope: !7666, file: !3, line: 843, column: 6)
!7671 = !DILocation(line: 843, column: 12, scope: !7670)
!7672 = !DILocation(line: 843, column: 6, scope: !7666)
!7673 = !DILocation(line: 844, column: 30, scope: !7674)
!7674 = distinct !DILexicalBlock(scope: !7670, file: !3, line: 843, column: 25)
!7675 = !DILocation(line: 844, column: 3, scope: !7674)
!7676 = !DILocation(line: 845, column: 2, scope: !7674)
!7677 = !DILocation(line: 847, column: 7, scope: !7678)
!7678 = distinct !DILexicalBlock(scope: !7679, file: !3, line: 847, column: 7)
!7679 = distinct !DILexicalBlock(scope: !7670, file: !3, line: 846, column: 7)
!7680 = !DILocation(line: 847, column: 13, scope: !7678)
!7681 = !DILocation(line: 847, column: 20, scope: !7678)
!7682 = !DILocation(line: 847, column: 7, scope: !7679)
!7683 = !DILocation(line: 848, column: 8, scope: !7684)
!7684 = distinct !DILexicalBlock(scope: !7685, file: !3, line: 848, column: 8)
!7685 = distinct !DILexicalBlock(scope: !7678, file: !3, line: 847, column: 45)
!7686 = !DILocation(line: 848, column: 14, scope: !7684)
!7687 = !DILocation(line: 848, column: 8, scope: !7685)
!7688 = !DILocation(line: 849, column: 19, scope: !7684)
!7689 = !DILocation(line: 849, column: 25, scope: !7684)
!7690 = !DILocation(line: 849, column: 5, scope: !7684)
!7691 = !DILocation(line: 849, column: 11, scope: !7684)
!7692 = !DILocation(line: 849, column: 15, scope: !7684)
!7693 = !DILocation(line: 849, column: 17, scope: !7684)
!7694 = !DILocation(line: 851, column: 32, scope: !7684)
!7695 = !DILocation(line: 851, column: 38, scope: !7684)
!7696 = !DILocation(line: 851, column: 5, scope: !7684)
!7697 = !DILocation(line: 851, column: 11, scope: !7684)
!7698 = !DILocation(line: 851, column: 18, scope: !7684)
!7699 = !DILocation(line: 851, column: 23, scope: !7684)
!7700 = !DILocation(line: 851, column: 30, scope: !7684)
!7701 = !DILocation(line: 852, column: 3, scope: !7685)
!7702 = !DILocation(line: 853, column: 12, scope: !7703)
!7703 = distinct !DILexicalBlock(scope: !7678, file: !3, line: 853, column: 12)
!7704 = !DILocation(line: 853, column: 18, scope: !7703)
!7705 = !DILocation(line: 853, column: 25, scope: !7703)
!7706 = !DILocation(line: 853, column: 12, scope: !7678)
!7707 = !DILocation(line: 854, column: 15, scope: !7708)
!7708 = distinct !DILexicalBlock(scope: !7703, file: !3, line: 853, column: 49)
!7709 = !DILocation(line: 854, column: 21, scope: !7708)
!7710 = !DILocation(line: 854, column: 28, scope: !7708)
!7711 = !DILocation(line: 854, column: 33, scope: !7708)
!7712 = !DILocation(line: 854, column: 38, scope: !7708)
!7713 = !DILocation(line: 854, column: 44, scope: !7708)
!7714 = !DILocation(line: 854, column: 4, scope: !7708)
!7715 = !DILocation(line: 855, column: 27, scope: !7708)
!7716 = !DILocation(line: 855, column: 33, scope: !7708)
!7717 = !DILocation(line: 855, column: 4, scope: !7708)
!7718 = !DILocation(line: 855, column: 10, scope: !7708)
!7719 = !DILocation(line: 855, column: 17, scope: !7708)
!7720 = !DILocation(line: 855, column: 22, scope: !7708)
!7721 = !DILocation(line: 855, column: 25, scope: !7708)
!7722 = !DILocation(line: 856, column: 27, scope: !7708)
!7723 = !DILocation(line: 856, column: 33, scope: !7708)
!7724 = !DILocation(line: 856, column: 4, scope: !7708)
!7725 = !DILocation(line: 856, column: 10, scope: !7708)
!7726 = !DILocation(line: 856, column: 17, scope: !7708)
!7727 = !DILocation(line: 856, column: 22, scope: !7708)
!7728 = !DILocation(line: 856, column: 25, scope: !7708)
!7729 = !DILocation(line: 857, column: 3, scope: !7708)
!7730 = !DILocation(line: 859, column: 1, scope: !7666)
!7731 = distinct !DISubprogram(name: "slide_spline_curvature_check", scope: !3, file: !3, line: 1175, type: !7732, scopeLine: 1176, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1817, retainedNodes: !2254)
!7732 = !DISubroutineType(types: !7733)
!7733 = !{!1017, !3090, !3579}
!7734 = !DILocalVariable(name: "C", arg: 1, scope: !7731, file: !3, line: 1175, type: !3090)
!7735 = !DILocation(line: 1175, column: 52, scope: !7731)
!7736 = !DILocalVariable(name: "event", arg: 2, scope: !7731, file: !3, line: 1175, type: !3579)
!7737 = !DILocation(line: 1175, column: 70, scope: !7731)
!7738 = !DILocalVariable(name: "mask", scope: !7731, file: !3, line: 1177, type: !2120)
!7739 = !DILocation(line: 1177, column: 8, scope: !7731)
!7740 = !DILocation(line: 1177, column: 34, scope: !7731)
!7741 = !DILocation(line: 1177, column: 15, scope: !7731)
!7742 = !DILocalVariable(name: "co", scope: !7731, file: !3, line: 1178, type: !420)
!7743 = !DILocation(line: 1178, column: 8, scope: !7731)
!7744 = !DILocalVariable(name: "threshold", scope: !7731, file: !3, line: 1179, type: !2276)
!7745 = !DILocation(line: 1179, column: 14, scope: !7731)
!7746 = !DILocation(line: 1181, column: 32, scope: !7731)
!7747 = !DILocation(line: 1181, column: 20, scope: !7731)
!7748 = !DILocation(line: 1181, column: 50, scope: !7731)
!7749 = !DILocation(line: 1181, column: 36, scope: !7731)
!7750 = !DILocation(line: 1181, column: 54, scope: !7731)
!7751 = !DILocation(line: 1181, column: 61, scope: !7731)
!7752 = !DILocation(line: 1181, column: 67, scope: !7731)
!7753 = !DILocation(line: 1181, column: 2, scope: !7731)
!7754 = !DILocation(line: 1183, column: 33, scope: !7755)
!7755 = distinct !DILexicalBlock(scope: !7731, file: !3, line: 1183, column: 6)
!7756 = !DILocation(line: 1183, column: 36, scope: !7755)
!7757 = !DILocation(line: 1183, column: 42, scope: !7755)
!7758 = !DILocation(line: 1183, column: 6, scope: !7755)
!7759 = !DILocation(line: 1183, column: 6, scope: !7731)
!7760 = !DILocation(line: 1184, column: 3, scope: !7761)
!7761 = distinct !DILexicalBlock(scope: !7755, file: !3, line: 1183, column: 82)
!7762 = !DILocation(line: 1187, column: 35, scope: !7763)
!7763 = distinct !DILexicalBlock(scope: !7731, file: !3, line: 1187, column: 6)
!7764 = !DILocation(line: 1187, column: 38, scope: !7763)
!7765 = !DILocation(line: 1187, column: 44, scope: !7763)
!7766 = !DILocation(line: 1187, column: 6, scope: !7763)
!7767 = !DILocation(line: 1187, column: 6, scope: !7731)
!7768 = !DILocation(line: 1188, column: 3, scope: !7769)
!7769 = distinct !DILexicalBlock(scope: !7763, file: !3, line: 1187, column: 90)
!7770 = !DILocation(line: 1191, column: 2, scope: !7731)
!7771 = !DILocation(line: 1192, column: 1, scope: !7731)
!7772 = distinct !DISubprogram(name: "slide_spline_curvature_customdata", scope: !3, file: !3, line: 1194, type: !7773, scopeLine: 1196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1817, retainedNodes: !2254)
!7773 = !DISubroutineType(types: !7774)
!7774 = !{!2228, !3090, !3579}
!7775 = !DILocalVariable(name: "C", arg: 1, scope: !7772, file: !3, line: 1195, type: !3090)
!7776 = !DILocation(line: 1195, column: 12, scope: !7772)
!7777 = !DILocalVariable(name: "event", arg: 2, scope: !7772, file: !3, line: 1195, type: !3579)
!7778 = !DILocation(line: 1195, column: 30, scope: !7772)
!7779 = !DILocalVariable(name: "threshold", scope: !7772, file: !3, line: 1197, type: !2276)
!7780 = !DILocation(line: 1197, column: 14, scope: !7772)
!7781 = !DILocalVariable(name: "mask", scope: !7772, file: !3, line: 1199, type: !2120)
!7782 = !DILocation(line: 1199, column: 8, scope: !7772)
!7783 = !DILocation(line: 1199, column: 34, scope: !7772)
!7784 = !DILocation(line: 1199, column: 15, scope: !7772)
!7785 = !DILocalVariable(name: "slide_data", scope: !7772, file: !3, line: 1200, type: !2228)
!7786 = !DILocation(line: 1200, column: 28, scope: !7772)
!7787 = !DILocalVariable(name: "mask_layer", scope: !7772, file: !3, line: 1201, type: !2123)
!7788 = !DILocation(line: 1201, column: 13, scope: !7772)
!7789 = !DILocalVariable(name: "spline", scope: !7772, file: !3, line: 1202, type: !2204)
!7790 = !DILocation(line: 1202, column: 14, scope: !7772)
!7791 = !DILocalVariable(name: "point", scope: !7772, file: !3, line: 1203, type: !2144)
!7792 = !DILocation(line: 1203, column: 19, scope: !7772)
!7793 = !DILocalVariable(name: "u", scope: !7772, file: !3, line: 1204, type: !191)
!7794 = !DILocation(line: 1204, column: 8, scope: !7772)
!7795 = !DILocalVariable(name: "co", scope: !7772, file: !3, line: 1204, type: !420)
!7796 = !DILocation(line: 1204, column: 11, scope: !7772)
!7797 = !DILocalVariable(name: "next_bezt", scope: !7772, file: !3, line: 1205, type: !2240)
!7798 = !DILocation(line: 1205, column: 13, scope: !7772)
!7799 = !DILocation(line: 1207, column: 32, scope: !7772)
!7800 = !DILocation(line: 1207, column: 20, scope: !7772)
!7801 = !DILocation(line: 1207, column: 50, scope: !7772)
!7802 = !DILocation(line: 1207, column: 36, scope: !7772)
!7803 = !DILocation(line: 1207, column: 54, scope: !7772)
!7804 = !DILocation(line: 1207, column: 61, scope: !7772)
!7805 = !DILocation(line: 1207, column: 67, scope: !7772)
!7806 = !DILocation(line: 1207, column: 2, scope: !7772)
!7807 = !DILocation(line: 1209, column: 39, scope: !7808)
!7808 = distinct !DILexicalBlock(scope: !7772, file: !3, line: 1209, column: 6)
!7809 = !DILocation(line: 1209, column: 42, scope: !7808)
!7810 = !DILocation(line: 1209, column: 48, scope: !7808)
!7811 = !DILocation(line: 1209, column: 7, scope: !7808)
!7812 = !DILocation(line: 1209, column: 6, scope: !7772)
!7813 = !DILocation(line: 1214, column: 3, scope: !7814)
!7814 = distinct !DILexicalBlock(scope: !7808, file: !3, line: 1213, column: 2)
!7815 = !DILocation(line: 1217, column: 46, scope: !7772)
!7816 = !DILocation(line: 1217, column: 54, scope: !7772)
!7817 = !DILocation(line: 1217, column: 62, scope: !7772)
!7818 = !DILocation(line: 1217, column: 70, scope: !7772)
!7819 = !DILocation(line: 1217, column: 14, scope: !7772)
!7820 = !DILocation(line: 1217, column: 12, scope: !7772)
!7821 = !DILocation(line: 1218, column: 6, scope: !7822)
!7822 = distinct !DILexicalBlock(scope: !7772, file: !3, line: 1218, column: 6)
!7823 = !DILocation(line: 1218, column: 16, scope: !7822)
!7824 = !DILocation(line: 1218, column: 6, scope: !7772)
!7825 = !DILocation(line: 1219, column: 3, scope: !7826)
!7826 = distinct !DILexicalBlock(scope: !7822, file: !3, line: 1218, column: 25)
!7827 = !DILocation(line: 1222, column: 15, scope: !7772)
!7828 = !DILocation(line: 1222, column: 13, scope: !7772)
!7829 = !DILocation(line: 1223, column: 34, scope: !7772)
!7830 = !DILocation(line: 1223, column: 41, scope: !7772)
!7831 = !DILocation(line: 1223, column: 2, scope: !7772)
!7832 = !DILocation(line: 1223, column: 14, scope: !7772)
!7833 = !DILocation(line: 1223, column: 32, scope: !7772)
!7834 = !DILocation(line: 1224, column: 21, scope: !7772)
!7835 = !DILocation(line: 1224, column: 2, scope: !7772)
!7836 = !DILocation(line: 1224, column: 14, scope: !7772)
!7837 = !DILocation(line: 1224, column: 19, scope: !7772)
!7838 = !DILocation(line: 1225, column: 27, scope: !7772)
!7839 = !DILocation(line: 1225, column: 2, scope: !7772)
!7840 = !DILocation(line: 1225, column: 14, scope: !7772)
!7841 = !DILocation(line: 1225, column: 25, scope: !7772)
!7842 = !DILocation(line: 1226, column: 23, scope: !7772)
!7843 = !DILocation(line: 1226, column: 2, scope: !7772)
!7844 = !DILocation(line: 1226, column: 14, scope: !7772)
!7845 = !DILocation(line: 1226, column: 21, scope: !7772)
!7846 = !DILocation(line: 1227, column: 22, scope: !7772)
!7847 = !DILocation(line: 1227, column: 2, scope: !7772)
!7848 = !DILocation(line: 1227, column: 14, scope: !7772)
!7849 = !DILocation(line: 1227, column: 20, scope: !7772)
!7850 = !DILocation(line: 1228, column: 18, scope: !7772)
!7851 = !DILocation(line: 1228, column: 2, scope: !7772)
!7852 = !DILocation(line: 1228, column: 14, scope: !7772)
!7853 = !DILocation(line: 1228, column: 16, scope: !7772)
!7854 = !DILocation(line: 1230, column: 13, scope: !7772)
!7855 = !DILocation(line: 1230, column: 25, scope: !7772)
!7856 = !DILocation(line: 1230, column: 43, scope: !7772)
!7857 = !DILocation(line: 1230, column: 2, scope: !7772)
!7858 = !DILocation(line: 1231, column: 28, scope: !7772)
!7859 = !DILocation(line: 1231, column: 36, scope: !7772)
!7860 = !DILocation(line: 1231, column: 43, scope: !7772)
!7861 = !DILocation(line: 1231, column: 46, scope: !7772)
!7862 = !DILocation(line: 1231, column: 58, scope: !7772)
!7863 = !DILocation(line: 1231, column: 2, scope: !7772)
!7864 = !DILocation(line: 1233, column: 13, scope: !7772)
!7865 = !DILocation(line: 1233, column: 25, scope: !7772)
!7866 = !DILocation(line: 1233, column: 29, scope: !7772)
!7867 = !DILocation(line: 1233, column: 36, scope: !7772)
!7868 = !DILocation(line: 1233, column: 41, scope: !7772)
!7869 = !DILocation(line: 1233, column: 2, scope: !7772)
!7870 = !DILocation(line: 1234, column: 13, scope: !7772)
!7871 = !DILocation(line: 1234, column: 25, scope: !7772)
!7872 = !DILocation(line: 1234, column: 29, scope: !7772)
!7873 = !DILocation(line: 1234, column: 36, scope: !7772)
!7874 = !DILocation(line: 1234, column: 41, scope: !7772)
!7875 = !DILocation(line: 1234, column: 2, scope: !7772)
!7876 = !DILocation(line: 1235, column: 13, scope: !7772)
!7877 = !DILocation(line: 1235, column: 25, scope: !7772)
!7878 = !DILocation(line: 1235, column: 29, scope: !7772)
!7879 = !DILocation(line: 1235, column: 40, scope: !7772)
!7880 = !DILocation(line: 1235, column: 2, scope: !7772)
!7881 = !DILocation(line: 1236, column: 13, scope: !7772)
!7882 = !DILocation(line: 1236, column: 25, scope: !7772)
!7883 = !DILocation(line: 1236, column: 29, scope: !7772)
!7884 = !DILocation(line: 1236, column: 40, scope: !7772)
!7885 = !DILocation(line: 1236, column: 2, scope: !7772)
!7886 = !DILocation(line: 1239, column: 6, scope: !7887)
!7887 = distinct !DILexicalBlock(scope: !7772, file: !3, line: 1239, column: 6)
!7888 = !DILocation(line: 1239, column: 8, scope: !7887)
!7889 = !DILocation(line: 1239, column: 6, scope: !7772)
!7890 = !DILocation(line: 1240, column: 30, scope: !7891)
!7891 = distinct !DILexicalBlock(scope: !7887, file: !3, line: 1239, column: 17)
!7892 = !DILocation(line: 1240, column: 37, scope: !7891)
!7893 = !DILocation(line: 1240, column: 3, scope: !7891)
!7894 = !DILocation(line: 1240, column: 15, scope: !7891)
!7895 = !DILocation(line: 1240, column: 27, scope: !7891)
!7896 = !DILocation(line: 1241, column: 28, scope: !7891)
!7897 = !DILocation(line: 1241, column: 3, scope: !7891)
!7898 = !DILocation(line: 1241, column: 15, scope: !7891)
!7899 = !DILocation(line: 1241, column: 26, scope: !7891)
!7900 = !DILocation(line: 1242, column: 2, scope: !7891)
!7901 = !DILocation(line: 1244, column: 29, scope: !7902)
!7902 = distinct !DILexicalBlock(scope: !7887, file: !3, line: 1243, column: 7)
!7903 = !DILocation(line: 1244, column: 3, scope: !7902)
!7904 = !DILocation(line: 1244, column: 15, scope: !7902)
!7905 = !DILocation(line: 1244, column: 27, scope: !7902)
!7906 = !DILocation(line: 1245, column: 29, scope: !7902)
!7907 = !DILocation(line: 1245, column: 36, scope: !7902)
!7908 = !DILocation(line: 1245, column: 3, scope: !7902)
!7909 = !DILocation(line: 1245, column: 15, scope: !7902)
!7910 = !DILocation(line: 1245, column: 26, scope: !7902)
!7911 = !DILocation(line: 1249, column: 2, scope: !7772)
!7912 = !DILocation(line: 1249, column: 14, scope: !7772)
!7913 = !DILocation(line: 1249, column: 29, scope: !7772)
!7914 = !DILocation(line: 1249, column: 41, scope: !7772)
!7915 = !DILocation(line: 1249, column: 28, scope: !7772)
!7916 = !DILocation(line: 1250, column: 2, scope: !7772)
!7917 = !DILocation(line: 1250, column: 14, scope: !7772)
!7918 = !DILocation(line: 1250, column: 35, scope: !7772)
!7919 = !DILocation(line: 1250, column: 47, scope: !7772)
!7920 = !DILocation(line: 1250, column: 34, scope: !7772)
!7921 = !DILocation(line: 1253, column: 6, scope: !7922)
!7922 = distinct !DILexicalBlock(scope: !7772, file: !3, line: 1253, column: 6)
!7923 = !DILocation(line: 1253, column: 8, scope: !7922)
!7924 = !DILocation(line: 1253, column: 6, scope: !7772)
!7925 = !DILocation(line: 1254, column: 7, scope: !7926)
!7926 = distinct !DILexicalBlock(scope: !7927, file: !3, line: 1254, column: 7)
!7927 = distinct !DILexicalBlock(scope: !7922, file: !3, line: 1253, column: 16)
!7928 = !DILocation(line: 1254, column: 19, scope: !7926)
!7929 = !DILocation(line: 1254, column: 32, scope: !7926)
!7930 = !DILocation(line: 1254, column: 35, scope: !7926)
!7931 = !DILocation(line: 1254, column: 7, scope: !7927)
!7932 = !DILocation(line: 1255, column: 4, scope: !7933)
!7933 = distinct !DILexicalBlock(scope: !7926, file: !3, line: 1254, column: 47)
!7934 = !DILocation(line: 1255, column: 16, scope: !7933)
!7935 = !DILocation(line: 1255, column: 29, scope: !7933)
!7936 = !DILocation(line: 1255, column: 32, scope: !7933)
!7937 = !DILocation(line: 1256, column: 3, scope: !7933)
!7938 = !DILocation(line: 1257, column: 2, scope: !7927)
!7939 = !DILocation(line: 1259, column: 7, scope: !7940)
!7940 = distinct !DILexicalBlock(scope: !7941, file: !3, line: 1259, column: 7)
!7941 = distinct !DILexicalBlock(scope: !7922, file: !3, line: 1258, column: 7)
!7942 = !DILocation(line: 1259, column: 19, scope: !7940)
!7943 = !DILocation(line: 1259, column: 32, scope: !7940)
!7944 = !DILocation(line: 1259, column: 35, scope: !7940)
!7945 = !DILocation(line: 1259, column: 7, scope: !7941)
!7946 = !DILocation(line: 1260, column: 4, scope: !7947)
!7947 = distinct !DILexicalBlock(scope: !7940, file: !3, line: 1259, column: 47)
!7948 = !DILocation(line: 1260, column: 16, scope: !7947)
!7949 = !DILocation(line: 1260, column: 29, scope: !7947)
!7950 = !DILocation(line: 1260, column: 32, scope: !7947)
!7951 = !DILocation(line: 1261, column: 3, scope: !7947)
!7952 = !DILocation(line: 1265, column: 28, scope: !7772)
!7953 = !DILocation(line: 1265, column: 2, scope: !7772)
!7954 = !DILocation(line: 1266, column: 2, scope: !7772)
!7955 = !DILocation(line: 1266, column: 14, scope: !7772)
!7956 = !DILocation(line: 1266, column: 27, scope: !7772)
!7957 = !DILocation(line: 1266, column: 30, scope: !7772)
!7958 = !DILocation(line: 1267, column: 2, scope: !7772)
!7959 = !DILocation(line: 1267, column: 14, scope: !7772)
!7960 = !DILocation(line: 1267, column: 26, scope: !7772)
!7961 = !DILocation(line: 1267, column: 29, scope: !7772)
!7962 = !DILocation(line: 1268, column: 6, scope: !7963)
!7963 = distinct !DILexicalBlock(scope: !7772, file: !3, line: 1268, column: 6)
!7964 = !DILocation(line: 1268, column: 8, scope: !7963)
!7965 = !DILocation(line: 1268, column: 6, scope: !7772)
!7966 = !DILocation(line: 1269, column: 3, scope: !7967)
!7967 = distinct !DILexicalBlock(scope: !7963, file: !3, line: 1268, column: 16)
!7968 = !DILocation(line: 1269, column: 15, scope: !7967)
!7969 = !DILocation(line: 1269, column: 28, scope: !7967)
!7970 = !DILocation(line: 1269, column: 31, scope: !7967)
!7971 = !DILocation(line: 1270, column: 3, scope: !7967)
!7972 = !DILocation(line: 1270, column: 15, scope: !7967)
!7973 = !DILocation(line: 1270, column: 27, scope: !7967)
!7974 = !DILocation(line: 1270, column: 30, scope: !7967)
!7975 = !DILocation(line: 1271, column: 2, scope: !7967)
!7976 = !DILocation(line: 1273, column: 3, scope: !7977)
!7977 = distinct !DILexicalBlock(scope: !7963, file: !3, line: 1272, column: 7)
!7978 = !DILocation(line: 1273, column: 15, scope: !7977)
!7979 = !DILocation(line: 1273, column: 28, scope: !7977)
!7980 = !DILocation(line: 1273, column: 31, scope: !7977)
!7981 = !DILocation(line: 1274, column: 3, scope: !7977)
!7982 = !DILocation(line: 1274, column: 15, scope: !7977)
!7983 = !DILocation(line: 1274, column: 27, scope: !7977)
!7984 = !DILocation(line: 1274, column: 30, scope: !7977)
!7985 = !DILocation(line: 1276, column: 27, scope: !7772)
!7986 = !DILocation(line: 1276, column: 2, scope: !7772)
!7987 = !DILocation(line: 1276, column: 14, scope: !7772)
!7988 = !DILocation(line: 1276, column: 25, scope: !7772)
!7989 = !DILocation(line: 1277, column: 26, scope: !7772)
!7990 = !DILocation(line: 1277, column: 2, scope: !7772)
!7991 = !DILocation(line: 1277, column: 14, scope: !7772)
!7992 = !DILocation(line: 1277, column: 24, scope: !7772)
!7993 = !DILocation(line: 1278, column: 27, scope: !7772)
!7994 = !DILocation(line: 1278, column: 2, scope: !7772)
!7995 = !DILocation(line: 1280, column: 9, scope: !7772)
!7996 = !DILocation(line: 1280, column: 2, scope: !7772)
!7997 = !DILocation(line: 1281, column: 1, scope: !7772)
!7998 = distinct !DISubprogram(name: "slide_spline_solve_P2", scope: !3, file: !3, line: 1324, type: !7999, scopeLine: 1330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1817, retainedNodes: !2254)
!7999 = !DISubroutineType(types: !8000)
!8000 = !{null, !2276, !2275, !2275, !2275, !2275, !2280}
!8001 = !DILocalVariable(name: "u", arg: 1, scope: !7998, file: !3, line: 1324, type: !2276)
!8002 = !DILocation(line: 1324, column: 47, scope: !7998)
!8003 = !DILocalVariable(name: "B", arg: 2, scope: !7998, file: !3, line: 1325, type: !2275)
!8004 = !DILocation(line: 1325, column: 47, scope: !7998)
!8005 = !DILocalVariable(name: "P0", arg: 3, scope: !7998, file: !3, line: 1326, type: !2275)
!8006 = !DILocation(line: 1326, column: 47, scope: !7998)
!8007 = !DILocalVariable(name: "P1", arg: 4, scope: !7998, file: !3, line: 1327, type: !2275)
!8008 = !DILocation(line: 1327, column: 47, scope: !7998)
!8009 = !DILocalVariable(name: "P3", arg: 5, scope: !7998, file: !3, line: 1328, type: !2275)
!8010 = !DILocation(line: 1328, column: 47, scope: !7998)
!8011 = !DILocalVariable(name: "solution", arg: 6, scope: !7998, file: !3, line: 1329, type: !2280)
!8012 = !DILocation(line: 1329, column: 41, scope: !7998)
!8013 = !DILocalVariable(name: "u2", scope: !7998, file: !3, line: 1331, type: !2276)
!8014 = !DILocation(line: 1331, column: 14, scope: !7998)
!8015 = !DILocation(line: 1331, column: 19, scope: !7998)
!8016 = !DILocation(line: 1331, column: 23, scope: !7998)
!8017 = !DILocation(line: 1331, column: 21, scope: !7998)
!8018 = !DILocalVariable(name: "u3", scope: !7998, file: !3, line: 1331, type: !2276)
!8019 = !DILocation(line: 1331, column: 26, scope: !7998)
!8020 = !DILocation(line: 1331, column: 31, scope: !7998)
!8021 = !DILocation(line: 1331, column: 35, scope: !7998)
!8022 = !DILocation(line: 1331, column: 33, scope: !7998)
!8023 = !DILocation(line: 1331, column: 39, scope: !7998)
!8024 = !DILocation(line: 1331, column: 37, scope: !7998)
!8025 = !DILocalVariable(name: "v", scope: !7998, file: !3, line: 1332, type: !2276)
!8026 = !DILocation(line: 1332, column: 14, scope: !7998)
!8027 = !DILocation(line: 1332, column: 25, scope: !7998)
!8028 = !DILocation(line: 1332, column: 23, scope: !7998)
!8029 = !DILocalVariable(name: "v2", scope: !7998, file: !3, line: 1333, type: !2276)
!8030 = !DILocation(line: 1333, column: 14, scope: !7998)
!8031 = !DILocation(line: 1333, column: 19, scope: !7998)
!8032 = !DILocation(line: 1333, column: 23, scope: !7998)
!8033 = !DILocation(line: 1333, column: 21, scope: !7998)
!8034 = !DILocalVariable(name: "v3", scope: !7998, file: !3, line: 1333, type: !2276)
!8035 = !DILocation(line: 1333, column: 26, scope: !7998)
!8036 = !DILocation(line: 1333, column: 31, scope: !7998)
!8037 = !DILocation(line: 1333, column: 35, scope: !7998)
!8038 = !DILocation(line: 1333, column: 33, scope: !7998)
!8039 = !DILocation(line: 1333, column: 39, scope: !7998)
!8040 = !DILocation(line: 1333, column: 37, scope: !7998)
!8041 = !DILocalVariable(name: "inv_divider", scope: !7998, file: !3, line: 1334, type: !2276)
!8042 = !DILocation(line: 1334, column: 14, scope: !7998)
!8043 = !DILocation(line: 1334, column: 43, scope: !7998)
!8044 = !DILocation(line: 1334, column: 41, scope: !7998)
!8045 = !DILocation(line: 1334, column: 47, scope: !7998)
!8046 = !DILocation(line: 1334, column: 45, scope: !7998)
!8047 = !DILocation(line: 1334, column: 33, scope: !7998)
!8048 = !DILocalVariable(name: "t", scope: !7998, file: !3, line: 1335, type: !2276)
!8049 = !DILocation(line: 1335, column: 14, scope: !7998)
!8050 = !DILocation(line: 1335, column: 25, scope: !7998)
!8051 = !DILocation(line: 1335, column: 23, scope: !7998)
!8052 = !DILocation(line: 1335, column: 30, scope: !7998)
!8053 = !DILocation(line: 1335, column: 28, scope: !7998)
!8054 = !DILocation(line: 1336, column: 18, scope: !7998)
!8055 = !DILocation(line: 1336, column: 23, scope: !7998)
!8056 = !DILocation(line: 1336, column: 21, scope: !7998)
!8057 = !DILocation(line: 1336, column: 31, scope: !7998)
!8058 = !DILocation(line: 1336, column: 35, scope: !7998)
!8059 = !DILocation(line: 1336, column: 33, scope: !7998)
!8060 = !DILocation(line: 1336, column: 29, scope: !7998)
!8061 = !DILocation(line: 1336, column: 43, scope: !7998)
!8062 = !DILocation(line: 1336, column: 48, scope: !7998)
!8063 = !DILocation(line: 1336, column: 46, scope: !7998)
!8064 = !DILocation(line: 1336, column: 41, scope: !7998)
!8065 = !DILocation(line: 1336, column: 56, scope: !7998)
!8066 = !DILocation(line: 1336, column: 54, scope: !7998)
!8067 = !DILocation(line: 1336, column: 16, scope: !7998)
!8068 = !DILocation(line: 1336, column: 64, scope: !7998)
!8069 = !DILocation(line: 1336, column: 62, scope: !7998)
!8070 = !DILocation(line: 1336, column: 2, scope: !7998)
!8071 = !DILocation(line: 1336, column: 14, scope: !7998)
!8072 = !DILocation(line: 1337, column: 18, scope: !7998)
!8073 = !DILocation(line: 1337, column: 23, scope: !7998)
!8074 = !DILocation(line: 1337, column: 21, scope: !7998)
!8075 = !DILocation(line: 1337, column: 31, scope: !7998)
!8076 = !DILocation(line: 1337, column: 35, scope: !7998)
!8077 = !DILocation(line: 1337, column: 33, scope: !7998)
!8078 = !DILocation(line: 1337, column: 29, scope: !7998)
!8079 = !DILocation(line: 1337, column: 43, scope: !7998)
!8080 = !DILocation(line: 1337, column: 48, scope: !7998)
!8081 = !DILocation(line: 1337, column: 46, scope: !7998)
!8082 = !DILocation(line: 1337, column: 41, scope: !7998)
!8083 = !DILocation(line: 1337, column: 56, scope: !7998)
!8084 = !DILocation(line: 1337, column: 54, scope: !7998)
!8085 = !DILocation(line: 1337, column: 16, scope: !7998)
!8086 = !DILocation(line: 1337, column: 64, scope: !7998)
!8087 = !DILocation(line: 1337, column: 62, scope: !7998)
!8088 = !DILocation(line: 1337, column: 2, scope: !7998)
!8089 = !DILocation(line: 1337, column: 14, scope: !7998)
!8090 = !DILocation(line: 1338, column: 1, scope: !7998)
!8091 = distinct !DISubprogram(name: "slide_spline_solve_P1", scope: !3, file: !3, line: 1308, type: !7999, scopeLine: 1314, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1817, retainedNodes: !2254)
!8092 = !DILocalVariable(name: "u", arg: 1, scope: !8091, file: !3, line: 1308, type: !2276)
!8093 = !DILocation(line: 1308, column: 47, scope: !8091)
!8094 = !DILocalVariable(name: "B", arg: 2, scope: !8091, file: !3, line: 1309, type: !2275)
!8095 = !DILocation(line: 1309, column: 47, scope: !8091)
!8096 = !DILocalVariable(name: "P0", arg: 3, scope: !8091, file: !3, line: 1310, type: !2275)
!8097 = !DILocation(line: 1310, column: 47, scope: !8091)
!8098 = !DILocalVariable(name: "P2", arg: 4, scope: !8091, file: !3, line: 1311, type: !2275)
!8099 = !DILocation(line: 1311, column: 47, scope: !8091)
!8100 = !DILocalVariable(name: "P3", arg: 5, scope: !8091, file: !3, line: 1312, type: !2275)
!8101 = !DILocation(line: 1312, column: 47, scope: !8091)
!8102 = !DILocalVariable(name: "solution", arg: 6, scope: !8091, file: !3, line: 1313, type: !2280)
!8103 = !DILocation(line: 1313, column: 41, scope: !8091)
!8104 = !DILocalVariable(name: "u2", scope: !8091, file: !3, line: 1315, type: !2276)
!8105 = !DILocation(line: 1315, column: 14, scope: !8091)
!8106 = !DILocation(line: 1315, column: 19, scope: !8091)
!8107 = !DILocation(line: 1315, column: 23, scope: !8091)
!8108 = !DILocation(line: 1315, column: 21, scope: !8091)
!8109 = !DILocalVariable(name: "u3", scope: !8091, file: !3, line: 1315, type: !2276)
!8110 = !DILocation(line: 1315, column: 26, scope: !8091)
!8111 = !DILocation(line: 1315, column: 31, scope: !8091)
!8112 = !DILocation(line: 1315, column: 35, scope: !8091)
!8113 = !DILocation(line: 1315, column: 33, scope: !8091)
!8114 = !DILocation(line: 1315, column: 39, scope: !8091)
!8115 = !DILocation(line: 1315, column: 37, scope: !8091)
!8116 = !DILocalVariable(name: "v", scope: !8091, file: !3, line: 1316, type: !2276)
!8117 = !DILocation(line: 1316, column: 14, scope: !8091)
!8118 = !DILocation(line: 1316, column: 25, scope: !8091)
!8119 = !DILocation(line: 1316, column: 23, scope: !8091)
!8120 = !DILocalVariable(name: "v2", scope: !8091, file: !3, line: 1317, type: !2276)
!8121 = !DILocation(line: 1317, column: 14, scope: !8091)
!8122 = !DILocation(line: 1317, column: 19, scope: !8091)
!8123 = !DILocation(line: 1317, column: 23, scope: !8091)
!8124 = !DILocation(line: 1317, column: 21, scope: !8091)
!8125 = !DILocalVariable(name: "v3", scope: !8091, file: !3, line: 1317, type: !2276)
!8126 = !DILocation(line: 1317, column: 26, scope: !8091)
!8127 = !DILocation(line: 1317, column: 31, scope: !8091)
!8128 = !DILocation(line: 1317, column: 35, scope: !8091)
!8129 = !DILocation(line: 1317, column: 33, scope: !8091)
!8130 = !DILocation(line: 1317, column: 39, scope: !8091)
!8131 = !DILocation(line: 1317, column: 37, scope: !8091)
!8132 = !DILocalVariable(name: "inv_divider", scope: !8091, file: !3, line: 1318, type: !2276)
!8133 = !DILocation(line: 1318, column: 14, scope: !8091)
!8134 = !DILocation(line: 1318, column: 43, scope: !8091)
!8135 = !DILocation(line: 1318, column: 41, scope: !8091)
!8136 = !DILocation(line: 1318, column: 48, scope: !8091)
!8137 = !DILocation(line: 1318, column: 46, scope: !8091)
!8138 = !DILocation(line: 1318, column: 33, scope: !8091)
!8139 = !DILocalVariable(name: "t", scope: !8091, file: !3, line: 1319, type: !2276)
!8140 = !DILocation(line: 1319, column: 14, scope: !8091)
!8141 = !DILocation(line: 1319, column: 25, scope: !8091)
!8142 = !DILocation(line: 1319, column: 23, scope: !8091)
!8143 = !DILocation(line: 1319, column: 29, scope: !8091)
!8144 = !DILocation(line: 1319, column: 27, scope: !8091)
!8145 = !DILocation(line: 1320, column: 18, scope: !8091)
!8146 = !DILocation(line: 1320, column: 23, scope: !8091)
!8147 = !DILocation(line: 1320, column: 21, scope: !8091)
!8148 = !DILocation(line: 1320, column: 31, scope: !8091)
!8149 = !DILocation(line: 1320, column: 35, scope: !8091)
!8150 = !DILocation(line: 1320, column: 33, scope: !8091)
!8151 = !DILocation(line: 1320, column: 29, scope: !8091)
!8152 = !DILocation(line: 1320, column: 43, scope: !8091)
!8153 = !DILocation(line: 1320, column: 48, scope: !8091)
!8154 = !DILocation(line: 1320, column: 46, scope: !8091)
!8155 = !DILocation(line: 1320, column: 41, scope: !8091)
!8156 = !DILocation(line: 1320, column: 56, scope: !8091)
!8157 = !DILocation(line: 1320, column: 54, scope: !8091)
!8158 = !DILocation(line: 1320, column: 16, scope: !8091)
!8159 = !DILocation(line: 1320, column: 64, scope: !8091)
!8160 = !DILocation(line: 1320, column: 62, scope: !8091)
!8161 = !DILocation(line: 1320, column: 2, scope: !8091)
!8162 = !DILocation(line: 1320, column: 14, scope: !8091)
!8163 = !DILocation(line: 1321, column: 18, scope: !8091)
!8164 = !DILocation(line: 1321, column: 23, scope: !8091)
!8165 = !DILocation(line: 1321, column: 21, scope: !8091)
!8166 = !DILocation(line: 1321, column: 31, scope: !8091)
!8167 = !DILocation(line: 1321, column: 35, scope: !8091)
!8168 = !DILocation(line: 1321, column: 33, scope: !8091)
!8169 = !DILocation(line: 1321, column: 29, scope: !8091)
!8170 = !DILocation(line: 1321, column: 43, scope: !8091)
!8171 = !DILocation(line: 1321, column: 48, scope: !8091)
!8172 = !DILocation(line: 1321, column: 46, scope: !8091)
!8173 = !DILocation(line: 1321, column: 41, scope: !8091)
!8174 = !DILocation(line: 1321, column: 56, scope: !8091)
!8175 = !DILocation(line: 1321, column: 54, scope: !8091)
!8176 = !DILocation(line: 1321, column: 16, scope: !8091)
!8177 = !DILocation(line: 1321, column: 64, scope: !8091)
!8178 = !DILocation(line: 1321, column: 62, scope: !8091)
!8179 = !DILocation(line: 1321, column: 2, scope: !8091)
!8180 = !DILocation(line: 1321, column: 14, scope: !8091)
!8181 = !DILocation(line: 1322, column: 1, scope: !8091)
!8182 = distinct !DISubprogram(name: "free_slide_spline_curvature_data", scope: !3, file: !3, line: 1170, type: !8183, scopeLine: 1171, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1817, retainedNodes: !2254)
!8183 = !DISubroutineType(types: !8184)
!8184 = !{null, !2228}
!8185 = !DILocalVariable(name: "slide_data", arg: 1, scope: !8182, file: !3, line: 1170, type: !2228)
!8186 = !DILocation(line: 1170, column: 72, scope: !8182)
!8187 = !DILocation(line: 1172, column: 2, scope: !8182)
!8188 = !DILocation(line: 1172, column: 12, scope: !8182)
!8189 = !DILocation(line: 1173, column: 1, scope: !8182)
!8190 = distinct !DISubprogram(name: "cancel_slide_spline_curvature", scope: !3, file: !3, line: 1163, type: !8183, scopeLine: 1164, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1817, retainedNodes: !2254)
!8191 = !DILocalVariable(name: "slide_data", arg: 1, scope: !8190, file: !3, line: 1163, type: !2228)
!8192 = !DILocation(line: 1163, column: 69, scope: !8190)
!8193 = !DILocation(line: 1165, column: 3, scope: !8190)
!8194 = !DILocation(line: 1165, column: 15, scope: !8190)
!8195 = !DILocation(line: 1165, column: 29, scope: !8190)
!8196 = !DILocation(line: 1165, column: 41, scope: !8190)
!8197 = !DILocation(line: 1166, column: 3, scope: !8190)
!8198 = !DILocation(line: 1166, column: 15, scope: !8190)
!8199 = !DILocation(line: 1166, column: 28, scope: !8190)
!8200 = !DILocation(line: 1166, column: 40, scope: !8190)
!8201 = !DILocation(line: 1167, column: 1, scope: !8190)
!8202 = distinct !DISubprogram(name: "delete_feather_points", scope: !3, file: !3, line: 1569, type: !8203, scopeLine: 1570, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1817, retainedNodes: !2254)
!8203 = !DISubroutineType(types: !8204)
!8204 = !{null, !2144}
!8205 = !DILocalVariable(name: "point", arg: 1, scope: !8202, file: !3, line: 1569, type: !2144)
!8206 = !DILocation(line: 1569, column: 52, scope: !8202)
!8207 = !DILocalVariable(name: "i", scope: !8202, file: !3, line: 1571, type: !22)
!8208 = !DILocation(line: 1571, column: 6, scope: !8202)
!8209 = !DILocalVariable(name: "count", scope: !8202, file: !3, line: 1571, type: !22)
!8210 = !DILocation(line: 1571, column: 9, scope: !8202)
!8211 = !DILocation(line: 1573, column: 7, scope: !8212)
!8212 = distinct !DILexicalBlock(scope: !8202, file: !3, line: 1573, column: 6)
!8213 = !DILocation(line: 1573, column: 14, scope: !8212)
!8214 = !DILocation(line: 1573, column: 6, scope: !8202)
!8215 = !DILocation(line: 1574, column: 3, scope: !8212)
!8216 = !DILocation(line: 1576, column: 9, scope: !8217)
!8217 = distinct !DILexicalBlock(scope: !8202, file: !3, line: 1576, column: 2)
!8218 = !DILocation(line: 1576, column: 7, scope: !8217)
!8219 = !DILocation(line: 1576, column: 14, scope: !8220)
!8220 = distinct !DILexicalBlock(scope: !8217, file: !3, line: 1576, column: 2)
!8221 = !DILocation(line: 1576, column: 18, scope: !8220)
!8222 = !DILocation(line: 1576, column: 25, scope: !8220)
!8223 = !DILocation(line: 1576, column: 16, scope: !8220)
!8224 = !DILocation(line: 1576, column: 2, scope: !8217)
!8225 = !DILocation(line: 1577, column: 8, scope: !8226)
!8226 = distinct !DILexicalBlock(scope: !8227, file: !3, line: 1577, column: 7)
!8227 = distinct !DILexicalBlock(scope: !8220, file: !3, line: 1576, column: 38)
!8228 = !DILocation(line: 1577, column: 15, scope: !8226)
!8229 = !DILocation(line: 1577, column: 18, scope: !8226)
!8230 = !DILocation(line: 1577, column: 21, scope: !8226)
!8231 = !DILocation(line: 1577, column: 26, scope: !8226)
!8232 = !DILocation(line: 1577, column: 36, scope: !8226)
!8233 = !DILocation(line: 1577, column: 7, scope: !8227)
!8234 = !DILocation(line: 1578, column: 9, scope: !8226)
!8235 = !DILocation(line: 1578, column: 4, scope: !8226)
!8236 = !DILocation(line: 1579, column: 2, scope: !8227)
!8237 = !DILocation(line: 1576, column: 34, scope: !8220)
!8238 = !DILocation(line: 1576, column: 2, scope: !8220)
!8239 = distinct !{!8239, !8224, !8240}
!8240 = !DILocation(line: 1579, column: 2, scope: !8217)
!8241 = !DILocation(line: 1581, column: 6, scope: !8242)
!8242 = distinct !DILexicalBlock(scope: !8202, file: !3, line: 1581, column: 6)
!8243 = !DILocation(line: 1581, column: 12, scope: !8242)
!8244 = !DILocation(line: 1581, column: 6, scope: !8202)
!8245 = !DILocation(line: 1582, column: 3, scope: !8246)
!8246 = distinct !DILexicalBlock(scope: !8242, file: !3, line: 1581, column: 18)
!8247 = !DILocation(line: 1582, column: 13, scope: !8246)
!8248 = !DILocation(line: 1582, column: 20, scope: !8246)
!8249 = !DILocation(line: 1583, column: 3, scope: !8246)
!8250 = !DILocation(line: 1583, column: 10, scope: !8246)
!8251 = !DILocation(line: 1583, column: 13, scope: !8246)
!8252 = !DILocation(line: 1584, column: 3, scope: !8246)
!8253 = !DILocation(line: 1584, column: 10, scope: !8246)
!8254 = !DILocation(line: 1584, column: 17, scope: !8246)
!8255 = !DILocation(line: 1585, column: 2, scope: !8246)
!8256 = !DILocalVariable(name: "new_uw", scope: !8257, file: !3, line: 1587, type: !2174)
!8257 = distinct !DILexicalBlock(scope: !8242, file: !3, line: 1586, column: 7)
!8258 = !DILocation(line: 1587, column: 22, scope: !8257)
!8259 = !DILocalVariable(name: "j", scope: !8257, file: !3, line: 1588, type: !22)
!8260 = !DILocation(line: 1588, column: 7, scope: !8257)
!8261 = !DILocation(line: 1590, column: 12, scope: !8257)
!8262 = !DILocation(line: 1590, column: 24, scope: !8257)
!8263 = !DILocation(line: 1590, column: 30, scope: !8257)
!8264 = !DILocation(line: 1590, column: 10, scope: !8257)
!8265 = !DILocation(line: 1592, column: 10, scope: !8266)
!8266 = distinct !DILexicalBlock(scope: !8257, file: !3, line: 1592, column: 3)
!8267 = !DILocation(line: 1592, column: 8, scope: !8266)
!8268 = !DILocation(line: 1592, column: 15, scope: !8269)
!8269 = distinct !DILexicalBlock(scope: !8266, file: !3, line: 1592, column: 3)
!8270 = !DILocation(line: 1592, column: 19, scope: !8269)
!8271 = !DILocation(line: 1592, column: 26, scope: !8269)
!8272 = !DILocation(line: 1592, column: 17, scope: !8269)
!8273 = !DILocation(line: 1592, column: 3, scope: !8266)
!8274 = !DILocation(line: 1593, column: 9, scope: !8275)
!8275 = distinct !DILexicalBlock(scope: !8276, file: !3, line: 1593, column: 8)
!8276 = distinct !DILexicalBlock(scope: !8269, file: !3, line: 1592, column: 39)
!8277 = !DILocation(line: 1593, column: 16, scope: !8275)
!8278 = !DILocation(line: 1593, column: 19, scope: !8275)
!8279 = !DILocation(line: 1593, column: 22, scope: !8275)
!8280 = !DILocation(line: 1593, column: 27, scope: !8275)
!8281 = !DILocation(line: 1593, column: 37, scope: !8275)
!8282 = !DILocation(line: 1593, column: 8, scope: !8276)
!8283 = !DILocation(line: 1594, column: 5, scope: !8284)
!8284 = distinct !DILexicalBlock(scope: !8275, file: !3, line: 1593, column: 43)
!8285 = !DILocation(line: 1594, column: 13, scope: !8284)
!8286 = !DILocation(line: 1594, column: 19, scope: !8284)
!8287 = !DILocation(line: 1594, column: 26, scope: !8284)
!8288 = !DILocation(line: 1594, column: 29, scope: !8284)
!8289 = !DILocation(line: 1595, column: 4, scope: !8284)
!8290 = !DILocation(line: 1596, column: 3, scope: !8276)
!8291 = !DILocation(line: 1592, column: 35, scope: !8269)
!8292 = !DILocation(line: 1592, column: 3, scope: !8269)
!8293 = distinct !{!8293, !8273, !8294}
!8294 = !DILocation(line: 1596, column: 3, scope: !8266)
!8295 = !DILocation(line: 1598, column: 3, scope: !8257)
!8296 = !DILocation(line: 1598, column: 13, scope: !8257)
!8297 = !DILocation(line: 1598, column: 20, scope: !8257)
!8298 = !DILocation(line: 1600, column: 15, scope: !8257)
!8299 = !DILocation(line: 1600, column: 3, scope: !8257)
!8300 = !DILocation(line: 1600, column: 10, scope: !8257)
!8301 = !DILocation(line: 1600, column: 13, scope: !8257)
!8302 = !DILocation(line: 1601, column: 19, scope: !8257)
!8303 = !DILocation(line: 1601, column: 3, scope: !8257)
!8304 = !DILocation(line: 1601, column: 10, scope: !8257)
!8305 = !DILocation(line: 1601, column: 17, scope: !8257)
!8306 = !DILocation(line: 1603, column: 1, scope: !8202)
!8307 = distinct !DISubprogram(name: "BLI_listbase_is_empty", scope: !8308, file: !8308, line: 88, type: !8309, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1817, retainedNodes: !2254)
!8308 = !DIFile(filename: "blender/source/blender/blenlib/BLI_listbase.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!8309 = !DISubroutineType(types: !8310)
!8310 = !{!1017, !8311}
!8311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8312, size: 64)
!8312 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !60)
!8313 = !DILocalVariable(name: "lb", arg: 1, scope: !8307, file: !8308, line: 88, type: !8311)
!8314 = !DILocation(line: 88, column: 62, scope: !8307)
!8315 = !DILocation(line: 88, column: 76, scope: !8307)
!8316 = !DILocation(line: 88, column: 80, scope: !8307)
!8317 = !DILocation(line: 88, column: 86, scope: !8307)
!8318 = !DILocation(line: 88, column: 75, scope: !8307)
!8319 = !DILocation(line: 88, column: 68, scope: !8307)
!8320 = distinct !DISubprogram(name: "sub_v3_v3v3", scope: !2765, file: !2765, line: 357, type: !6559, scopeLine: 358, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1817, retainedNodes: !2254)
!8321 = !DILocalVariable(name: "r", arg: 1, scope: !8320, file: !2765, line: 357, type: !2280)
!8322 = !DILocation(line: 357, column: 32, scope: !8320)
!8323 = !DILocalVariable(name: "a", arg: 2, scope: !8320, file: !2765, line: 357, type: !2275)
!8324 = !DILocation(line: 357, column: 50, scope: !8320)
!8325 = !DILocalVariable(name: "b", arg: 3, scope: !8320, file: !2765, line: 357, type: !2275)
!8326 = !DILocation(line: 357, column: 68, scope: !8320)
!8327 = !DILocation(line: 359, column: 9, scope: !8320)
!8328 = !DILocation(line: 359, column: 16, scope: !8320)
!8329 = !DILocation(line: 359, column: 14, scope: !8320)
!8330 = !DILocation(line: 359, column: 2, scope: !8320)
!8331 = !DILocation(line: 359, column: 7, scope: !8320)
!8332 = !DILocation(line: 360, column: 9, scope: !8320)
!8333 = !DILocation(line: 360, column: 16, scope: !8320)
!8334 = !DILocation(line: 360, column: 14, scope: !8320)
!8335 = !DILocation(line: 360, column: 2, scope: !8320)
!8336 = !DILocation(line: 360, column: 7, scope: !8320)
!8337 = !DILocation(line: 361, column: 9, scope: !8320)
!8338 = !DILocation(line: 361, column: 16, scope: !8320)
!8339 = !DILocation(line: 361, column: 14, scope: !8320)
!8340 = !DILocation(line: 361, column: 2, scope: !8320)
!8341 = !DILocation(line: 361, column: 7, scope: !8320)
!8342 = !DILocation(line: 362, column: 1, scope: !8320)
!8343 = distinct !DISubprogram(name: "add_v3_v3v3", scope: !2765, file: !2765, line: 309, type: !6559, scopeLine: 310, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1817, retainedNodes: !2254)
!8344 = !DILocalVariable(name: "r", arg: 1, scope: !8343, file: !2765, line: 309, type: !2280)
!8345 = !DILocation(line: 309, column: 32, scope: !8343)
!8346 = !DILocalVariable(name: "a", arg: 2, scope: !8343, file: !2765, line: 309, type: !2275)
!8347 = !DILocation(line: 309, column: 50, scope: !8343)
!8348 = !DILocalVariable(name: "b", arg: 3, scope: !8343, file: !2765, line: 309, type: !2275)
!8349 = !DILocation(line: 309, column: 68, scope: !8343)
!8350 = !DILocation(line: 311, column: 9, scope: !8343)
!8351 = !DILocation(line: 311, column: 16, scope: !8343)
!8352 = !DILocation(line: 311, column: 14, scope: !8343)
!8353 = !DILocation(line: 311, column: 2, scope: !8343)
!8354 = !DILocation(line: 311, column: 7, scope: !8343)
!8355 = !DILocation(line: 312, column: 9, scope: !8343)
!8356 = !DILocation(line: 312, column: 16, scope: !8343)
!8357 = !DILocation(line: 312, column: 14, scope: !8343)
!8358 = !DILocation(line: 312, column: 2, scope: !8343)
!8359 = !DILocation(line: 312, column: 7, scope: !8343)
!8360 = !DILocation(line: 313, column: 9, scope: !8343)
!8361 = !DILocation(line: 313, column: 16, scope: !8343)
!8362 = !DILocation(line: 313, column: 14, scope: !8343)
!8363 = !DILocation(line: 313, column: 2, scope: !8343)
!8364 = !DILocation(line: 313, column: 7, scope: !8343)
!8365 = !DILocation(line: 314, column: 1, scope: !8343)
