; ModuleID = 'blender/source/blender/editors/space_view3d/drawarmature.c'
source_filename = "blender/source/blender/editors/space_view3d/drawarmature.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.Global = type { %struct.Main*, [1024 x i8], [1024 x i8], i8, i8, i8, %struct.ListBase, i8, i8, i8, i16, i16, i16, i8, i16, i32, i32, i8, i32, i32, [200 x i8] }
%struct.Main = type opaque
%struct.ListBase = type { i8*, i8* }
%struct.ThemeWireColor = type { [4 x i8], [4 x i8], [4 x i8], i16, i16 }
%struct.UserDef = type { i32, i32, i32, i32, i32, [768 x i8], [768 x i8], [1024 x i8], [768 x i8], [768 x i8], [768 x i8], [768 x i8], [768 x i8], [1024 x i8], [1024 x i8], i32, i16, i16, i16, i16, i16, i16, i32, i32, i32, i16, i16, i32, i32, i32, i32, i32, i32, i32, i16, i16, i16, i16, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, [64 x i8], i16, i16, i16, i16, i16, i16, i16, i16, [3 x %struct.SolidLight], i16, i16, i16, i16, i16, i16, i16, i16, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i8, i8, i8, i8, i16, i16, i16, i16, i16, i16, float, float, i32, i16, i16, float, i16, i16, i16, i16, %struct.ColorBand, [3 x float], [4 x float], i16, i8, i8, [80 x i8], [1024 x i8], i32, i32, float, float, i32, i16, i16, i16, i16, i16, i16, %struct.WalkNavigation }
%struct.SolidLight = type { i32, i32, [4 x float], [4 x float], [4 x float] }
%struct.ColorBand = type { i16, i16, i8, i8, i8, [1 x i8], [32 x %struct.CBData] }
%struct.CBData = type { float, float, float, float, float, i32 }
%struct.WalkNavigation = type { float, float, float, float, float, float, i16, [3 x i16] }
%struct.Scene = type { %struct.ID, %struct.AnimData*, %struct.Object*, %struct.World*, %struct.Scene*, %struct.ListBase, %struct.Base*, %struct.Object*, [3 x float], [3 x float], [3 x float], [3 x float], i32, i32, i32, i16, i8, [1 x i8], %struct.bNodeTree*, %struct.Editing*, %struct.ToolSettings*, %struct.SceneStats*, %struct.RenderData, %struct.AudioData, %struct.ListBase, %struct.ListBase, i8*, i8*, i8*, i8*, i8*, %struct.DagForest*, i16, i16, i32, %struct.ListBase, %struct.GameFraming, %struct.GameData, %struct.UnitSettings, %struct.bGPdata*, %struct.PhysicsSettings, %struct.MovieClip*, i64, i64, %struct.ColorManagedViewSettings, %struct.ColorManagedDisplaySettings, %struct.ColorManagedColorspaceSettings, %struct.RigidBodyWorld* }
%struct.ID = type { i8*, i8*, %struct.ID*, %struct.Library*, [66 x i8], i16, i32, i32, i32, %struct.IDProperty* }
%struct.Library = type { %struct.ID, %struct.ID*, %struct.FileData*, [1024 x i8], [1024 x i8], %struct.Library*, %struct.PackedFile* }
%struct.FileData = type opaque
%struct.PackedFile = type opaque
%struct.IDProperty = type { %struct.IDProperty*, %struct.IDProperty*, i8, i8, i16, [64 x i8], i32, %struct.IDPropertyData, i32, i32 }
%struct.IDPropertyData = type { i8*, %struct.ListBase, i32, i32 }
%struct.AnimData = type { %struct.bAction*, %struct.bAction*, %struct.AnimMapper*, %struct.ListBase, %struct.NlaStrip*, %struct.ListBase, %struct.ListBase, i32, i32, i16, i16, float }
%struct.bAction = type { %struct.ID, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, i32, i32, i32, i32 }
%struct.AnimMapper = type { %struct.AnimMapper*, %struct.AnimMapper*, %struct.bAction*, %struct.ListBase }
%struct.NlaStrip = type { %struct.NlaStrip*, %struct.NlaStrip*, %struct.ListBase, %struct.bAction*, %struct.AnimMapper*, %struct.ListBase, %struct.ListBase, [64 x i8], float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i16, i8*, i32, i32 }
%struct.World = type opaque
%struct.Object = type { %struct.ID, %struct.AnimData*, %struct.SculptSession*, i16, i16, i32, i32, i32, [64 x i8], %struct.Object*, %struct.Object*, %struct.Object*, %struct.Object*, %struct.Object*, %struct.Ipo*, %struct.BoundBox*, %struct.bAction*, %struct.bAction*, %struct.bPose*, i8*, %struct.bGPdata*, %struct.bAnimVizSettings, %struct.bMotionPath*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, i32, i32, %struct.Material**, i8*, i32, i32, [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [4 x float], [4 x float], [3 x float], [3 x float], float, float, [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i8, i8, i32, i32, i32, i32, i32, float, float, float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i8, i8, i16, i8, i8, float, float, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, float, i16, i16, [4 x float], i32, i32, %struct.BulletSoftBody*, i8, i8, i16, [3 x float], %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.PartDeflect*, %struct.SoftBody*, %struct.Group*, i8, i8, i16, float, %struct.FluidsimSettings*, %struct.CurveCache*, %struct.DerivedMesh*, %struct.DerivedMesh*, i64, i64, i32, i32, %struct.ListBase, %struct.ListBase, %struct.ListBase*, %struct.RigidBodyOb*, %struct.RigidBodyCon*, [2 x float], %struct.ImageUser*, %struct.ListBase, %struct.LodLevel* }
%struct.SculptSession = type opaque
%struct.Ipo = type opaque
%struct.BoundBox = type { [8 x [3 x float]], i32, i32 }
%struct.bPose = type { %struct.ListBase, %struct.GHash*, i16, i16, i32, i32, float, [3 x float], [3 x float], %struct.ListBase, i32, i32, i8*, i8*, %struct.bAnimVizSettings, [64 x i8] }
%struct.GHash = type opaque
%struct.bAnimVizSettings = type { i32, i32, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i32, i32, i32, i32 }
%struct.bMotionPath = type { %struct.bMotionPathVert*, i32, i32, i32, i32 }
%struct.bMotionPathVert = type { [3 x float], i32 }
%struct.Material = type opaque
%struct.BulletSoftBody = type opaque
%struct.PartDeflect = type opaque
%struct.SoftBody = type opaque
%struct.Group = type opaque
%struct.FluidsimSettings = type opaque
%struct.CurveCache = type opaque
%struct.DerivedMesh = type opaque
%struct.RigidBodyOb = type opaque
%struct.RigidBodyCon = type opaque
%struct.ImageUser = type { %struct.Scene*, i32, i32, i32, i32, i8, i8, i8, i8, i16, i16, i16, i16, i32 }
%struct.LodLevel = type { %struct.LodLevel*, %struct.LodLevel*, %struct.Object*, i32, float }
%struct.bNodeTree = type opaque
%struct.Editing = type opaque
%struct.ToolSettings = type { %struct.VPaint*, %struct.VPaint*, %struct.Sculpt*, %struct.UvSculpt*, float, float, float, i16, i16, i8, i8, i8, i8, float, i16, i8, [5 x i8], %struct.ImagePaintSettings, %struct.ParticleEditSettings, float, float, i16, i16, i8, [1 x i8], i16, float, float, float, float, float, float, float, float, float, float, i16, i8, i8, [3 x i8], i8, %struct.Object*, i8, i8, i8, i8, i8, [8 x i8], [8 x i8], i8, i8, i8, i8, i8, i16, i16, i16, i16, i8, i8, i8, i8, i8, i8, i32, i32, i32, i32, i16, i16, i32, float, float, %struct.UnifiedPaintSettings, %struct.MeshStatVis }
%struct.VPaint = type { %struct.Paint, i16, i16, i32, i32*, %struct.MDeformVert*, i8* }
%struct.Paint = type { %struct.Brush*, %struct.Palette*, i8*, [4 x i8], i32, i32, i32 }
%struct.Brush = type opaque
%struct.Palette = type opaque
%struct.MDeformVert = type opaque
%struct.Sculpt = type { %struct.Paint, i32, [3 x i32], float, i32, float, float, %struct.Object*, i8* }
%struct.UvSculpt = type { %struct.Paint }
%struct.ImagePaintSettings = type { %struct.Paint, i16, i16, i16, i16, [2 x i16], i32, i8*, %struct.Image*, %struct.Image*, %struct.Image*, [3 x float], float }
%struct.Image = type { %struct.ID, [1024 x i8], %struct.MovieCache*, %struct.GPUTexture*, %struct.anim*, %struct.RenderResult*, [8 x %struct.RenderResult*], i16, i16, i16, i16, i16, i16, i32, i16, i16, i16, i16, i16, i16, i32, i32*, %struct.PackedFile*, %struct.PreviewImage*, float, i32, i16, i16, i32, i32, i8, i8, i16, [4 x float], float, float, %struct.ColorManagedColorspaceSettings, i8, [7 x i8], [8 x %struct.RenderSlot] }
%struct.MovieCache = type opaque
%struct.GPUTexture = type opaque
%struct.anim = type opaque
%struct.RenderResult = type opaque
%struct.PreviewImage = type { [2 x i32], [2 x i32], [2 x i16], [2 x i16], [2 x i32*], [2 x %struct.GPUTexture*] }
%struct.RenderSlot = type { [64 x i8] }
%struct.ParticleEditSettings = type { i16, i16, i16, i16, [7 x %struct.ParticleBrushData], i8*, float, float, i32, i32, i32, i32, %struct.Scene*, %struct.Object* }
%struct.ParticleBrushData = type { i16, i16, i16, i16, i32, float }
%struct.UnifiedPaintSettings = type { i32, float, float, float, [3 x float], [3 x float], i32, [2 x float], float, i32, i32, i8, [7 x i8], float, [2 x float], i32, float, [2 x float], [2 x float], i32, %struct.ColorSpace*, float, i32 }
%struct.ColorSpace = type opaque
%struct.MeshStatVis = type { i8, [2 x i8], i8, float, float, float, float, i8, [3 x i8], float, float, float, float }
%struct.SceneStats = type opaque
%struct.RenderData = type { %struct.ImageFormatData, %struct.AviCodecData*, %struct.QuicktimeCodecData*, %struct.QuicktimeCodecSettings, %struct.FFMpegCodecData, i32, i32, i32, float, i32, i32, i32, i32, i16, i16, float, float, float, float, float, i16, i16, i16, i16, i16, i16, i32, i16, i16, i16, i16, i16, i16, i32, i32, i16, i16, i32, i32, i16, i16, i16, i16, i16, i8, i8, i32, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, %struct.rctf, %struct.rctf, %struct.rcti, %struct.ListBase, i16, i16, float, float, float, float, i32, float, float, float, float, i16, i16, i16, i16, i16, i16, float, float, i16, i16, float, float, [1024 x i8], i32, i16, i16, [768 x i8], [4 x float], [4 x float], i8, i8, i8, [5 x i8], i32, i16, i16, float, float, i16, i16, float, i16, i16, i32, i16, i16, i16, i16, float, float, %struct.Text*, i32, float, [32 x i8], %struct.BakeData, i32, i32 }
%struct.ImageFormatData = type { i8, i8, i8, i8, i8, i8, i8, i8, i16, i16, float, i8, i8, [6 x i8], %struct.ColorManagedViewSettings, %struct.ColorManagedDisplaySettings }
%struct.AviCodecData = type { i8*, i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [128 x i8] }
%struct.QuicktimeCodecData = type { i8*, i8*, i32, i32, [128 x i8] }
%struct.QuicktimeCodecSettings = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32, i32 }
%struct.FFMpegCodecData = type { i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, i32, i32, i32, %struct.IDProperty* }
%struct.rctf = type { float, float, float, float }
%struct.rcti = type { i32, i32, i32, i32 }
%struct.Text = type opaque
%struct.BakeData = type { %struct.ImageFormatData, [1024 x i8], i16, i16, i16, i16, float, float, [3 x i8], i8, i8, [3 x i8], [64 x i8] }
%struct.AudioData = type { i32, float, float, float, i32, i16, i16, float, float }
%struct.DagForest = type opaque
%struct.GameFraming = type { [3 x float], i8, i8, i8, i8 }
%struct.GameData = type { %struct.GameFraming, i16, i16, i16, i16, i16, i16, i16, i16, i16, [3 x i16], %struct.GameDome, i16, i16, float, %struct.RecastData, float, float, i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, float, float, float, float, float }
%struct.GameDome = type { i16, i16, i16, i16, float, float, %struct.Text* }
%struct.RecastData = type { float, float, float, float, float, float, float, float, float, float, i32, float, float, i16, i16 }
%struct.UnitSettings = type { float, i8, i8, i16 }
%struct.bGPdata = type opaque
%struct.PhysicsSettings = type { [3 x float], i32, i32, i32 }
%struct.MovieClip = type { %struct.ID, %struct.AnimData*, [1024 x i8], i32, i32, [2 x i32], float, float, %struct.anim*, %struct.MovieClipCache*, %struct.bGPdata*, %struct.MovieTracking, i8*, %struct.MovieClipProxy, i32, i32, i32, i32, %struct.ColorManagedColorspaceSettings }
%struct.MovieClipCache = type opaque
%struct.MovieTracking = type { %struct.MovieTrackingSettings, %struct.MovieTrackingCamera, %struct.ListBase, %struct.ListBase, %struct.MovieTrackingReconstruction, %struct.MovieTrackingStabilization, %struct.MovieTrackingTrack*, %struct.MovieTrackingPlaneTrack*, %struct.ListBase, i32, i32, %struct.MovieTrackingStats*, %struct.MovieTrackingDopesheet }
%struct.MovieTrackingSettings = type { i32, i16, i16, float, i16, i16, i16, i16, i16, i16, float, i16, i16, i32, i32, i32, i16, i16, float, i32, i32, float, float, i32 }
%struct.MovieTrackingCamera = type { i8*, i16, i16, float, float, float, i16, i16, [2 x float], float, float, float, float, float }
%struct.MovieTrackingReconstruction = type { i32, float, i32, i32, %struct.MovieReconstructedCamera* }
%struct.MovieReconstructedCamera = type { i32, float, [4 x [4 x float]] }
%struct.MovieTrackingStabilization = type { i32, i32, i32, float, %struct.MovieTrackingTrack*, float, float, float, i32, i32, float }
%struct.MovieTrackingTrack = type { %struct.MovieTrackingTrack*, %struct.MovieTrackingTrack*, [64 x i8], [2 x float], [2 x float], [2 x float], [2 x float], [2 x float], i32, i32, %struct.MovieTrackingMarker*, [3 x float], float, i32, i32, i32, [3 x float], i16, i16, i16, i16, i32, float, %struct.bGPdata*, float, float }
%struct.MovieTrackingMarker = type { [2 x float], [4 x [2 x float]], [2 x float], [2 x float], i32, i32 }
%struct.MovieTrackingPlaneTrack = type { %struct.MovieTrackingPlaneTrack*, %struct.MovieTrackingPlaneTrack*, [64 x i8], %struct.MovieTrackingTrack**, i32, i32, %struct.MovieTrackingPlaneMarker*, i32, i32, %struct.Image*, float, i32 }
%struct.MovieTrackingPlaneMarker = type { [4 x [2 x float]], i32, i32 }
%struct.MovieTrackingStats = type { [256 x i8] }
%struct.MovieTrackingDopesheet = type { i32, i16, i16, %struct.ListBase, %struct.ListBase, i32, i32 }
%struct.MovieClipProxy = type { [768 x i8], i16, i16, i16, i16 }
%struct.ColorManagedViewSettings = type { i32, i32, [64 x i8], [64 x i8], float, float, %struct.CurveMapping*, i8* }
%struct.CurveMapping = type { i32, i32, i32, i32, %struct.rctf, %struct.rctf, [4 x %struct.CurveMap], [3 x float], [3 x float], [3 x float], [3 x float] }
%struct.CurveMap = type { i16, i16, float, float, float, [2 x float], [2 x float], %struct.CurveMapPoint*, %struct.CurveMapPoint*, %struct.CurveMapPoint*, [2 x float], [2 x float] }
%struct.CurveMapPoint = type { float, float, i16, i16 }
%struct.ColorManagedDisplaySettings = type { [64 x i8] }
%struct.ColorManagedColorspaceSettings = type { [64 x i8] }
%struct.RigidBodyWorld = type opaque
%struct.View3D = type { %struct.SpaceLink*, %struct.SpaceLink*, %struct.ListBase, i32, float, [8 x i16], [4 x float], float, float, i8, [3 x i8], i32, i32, i16, i16, %struct.Object*, %struct.Object*, %struct.rctf, %struct.ListBase, %struct.BGpic*, %struct.View3D*, [64 x i8], i32, i32, i16, i16, i16, i16, i16, i16, float, float, float, float, [3 x float], [3 x float], i16, i16, i16, i8, i8, i8, i8, [2 x i8], %struct.ListBase, %struct.ListBase, %struct.ListBase, i8, i8, i8, [5 x i8], i8*, %struct.Material*, %struct.bGPdata* }
%struct.SpaceLink = type opaque
%struct.BGpic = type { %struct.BGpic*, %struct.BGpic*, %struct.Image*, %struct.ImageUser, %struct.MovieClip*, %struct.MovieClipUser, float, float, float, float, i16, i16, i16, i16 }
%struct.MovieClipUser = type { i32, i16, i16 }
%struct.ARegion = type { %struct.ARegion*, %struct.ARegion*, %struct.View2D, %struct.rcti, %struct.rcti, i16, i16, i16, i16, i16, i16, float, i16, i16, i16, i16, i16, i16, i16, i16, %struct.ARegionType*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.wmTimer*, i8*, i8* }
%struct.View2D = type { %struct.rctf, %struct.rctf, %struct.rcti, %struct.rcti, %struct.rcti, [2 x float], [2 x float], float, float, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, float*, i32, i32, %struct.SmoothView2DStore*, %struct.wmTimer* }
%struct.SmoothView2DStore = type opaque
%struct.ARegionType = type opaque
%struct.wmTimer = type opaque
%struct.Base = type { %struct.Base*, %struct.Base*, i32, i32, i32, i16, i16, %struct.Object* }
%struct.bArmature = type { %struct.ID, %struct.AnimData*, %struct.ListBase, %struct.ListBase, %struct.ListBase*, %struct.Bone*, %struct.EditBone*, i8*, i32, i32, i32, i32, i16, i16, i32, i32, i32, i16, i16, i16, i16, i32, i32, i32, i32, i32, i32 }
%struct.Bone = type { %struct.Bone*, %struct.Bone*, %struct.IDProperty*, %struct.Bone*, %struct.ListBase, [64 x i8], float, [3 x float], [3 x float], [3 x [3 x float]], i32, [3 x float], [3 x float], [4 x [4 x float]], float, float, float, float, float, float, float, float, float, float, [3 x float], i32, i16, [1 x i16] }
%struct.EditBone = type { %struct.EditBone*, %struct.EditBone*, %struct.IDProperty*, %struct.EditBone*, i8*, [64 x i8], float, [3 x float], [3 x float], i32, i32, float, float, float, float, float, float, float, float, float, float, i16 }
%struct.RegionView3D = type { [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [6 x [4 x float]], [6 x [4 x float]], %struct.BoundBox*, %struct.RegionView3D*, %struct.RenderEngine*, %struct.ViewDepths*, i8*, %struct.SmoothView3DStore*, %struct.wmTimer*, [4 x [4 x float]], [4 x float], float, float, float, float, [3 x float], float, i8, i8, i8, i8, i8, [3 x i8], [2 x float], i16, i16, [4 x float], i16, i16, float, [3 x float], float, [3 x float] }
%struct.RenderEngine = type opaque
%struct.ViewDepths = type { i16, i16, i16, i16, float*, [2 x double], i8 }
%struct.SmoothView3DStore = type opaque
%struct.bPoseChannel = type { %struct.bPoseChannel*, %struct.bPoseChannel*, %struct.IDProperty*, %struct.ListBase, [64 x i8], i16, i16, i16, i16, i8, i8, [6 x i8], %struct.Bone*, %struct.bPoseChannel*, %struct.bPoseChannel*, %struct.ListBase, %struct.ListBase, %struct.bMotionPath*, %struct.Object*, %struct.bPoseChannel*, [3 x float], [3 x float], [3 x float], [4 x float], [3 x float], float, i16, i16, [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], float, float, float, i8* }
%struct.DLRBT_Tree = type { i8*, i8*, i8* }
%struct.ActKeyColumn = type { %struct.ActKeyColumn*, %struct.ActKeyColumn*, %struct.ActKeyColumn*, %struct.ActKeyColumn*, %struct.ActKeyColumn*, i8, i8, i16, float, i16, i16 }
%struct.GLUquadric = type opaque
%struct.Mat4 = type { [4 x [4 x float]] }
%struct.bActionGroup = type { %struct.bActionGroup*, %struct.bActionGroup*, %struct.ListBase, i32, i32, [64 x i8], %struct.ThemeWireColor }
%struct.bTheme = type { %struct.bTheme*, %struct.bTheme*, [32 x i8], %struct.ThemeUI, %struct.ThemeSpace, %struct.ThemeSpace, %struct.ThemeSpace, %struct.ThemeSpace, %struct.ThemeSpace, %struct.ThemeSpace, %struct.ThemeSpace, %struct.ThemeSpace, %struct.ThemeSpace, %struct.ThemeSpace, %struct.ThemeSpace, %struct.ThemeSpace, %struct.ThemeSpace, %struct.ThemeSpace, %struct.ThemeSpace, %struct.ThemeSpace, %struct.ThemeSpace, [20 x %struct.ThemeWireColor], i32, i32 }
%struct.ThemeUI = type { %struct.uiWidgetColors, %struct.uiWidgetColors, %struct.uiWidgetColors, %struct.uiWidgetColors, %struct.uiWidgetColors, %struct.uiWidgetColors, %struct.uiWidgetColors, %struct.uiWidgetColors, %struct.uiWidgetColors, %struct.uiWidgetColors, %struct.uiWidgetColors, %struct.uiWidgetColors, %struct.uiWidgetColors, %struct.uiWidgetColors, %struct.uiWidgetColors, %struct.uiWidgetColors, %struct.uiWidgetColors, %struct.uiWidgetColors, %struct.uiWidgetStateColors, %struct.uiPanelColors, [4 x i8], float, i16, [3 x i16], [256 x i8], float, [4 x i8], [4 x i8], [4 x i8] }
%struct.uiWidgetColors = type { [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], i16, i16, i16, i16 }
%struct.uiWidgetStateColors = type { [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], float, float }
%struct.uiPanelColors = type { [4 x i8], [4 x i8], i16, i16, i32 }
%struct.ThemeSpace = type { [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], %struct.uiPanelColors, %struct.uiGradientColors, [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], i8, i8, i8, i8, [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], i8, [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [3 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8] }
%struct.uiGradientColors = type { [4 x i8], [4 x i8], i32, i32 }
%struct.bConstraint = type { %struct.bConstraint*, %struct.bConstraint*, i8*, i16, i16, i8, i8, [64 x i8], i16, float, float, %struct.Ipo*, float, float }
%struct.bKinematicConstraint = type { %struct.Object*, i16, i16, i16, i16, [64 x i8], %struct.Object*, [64 x i8], float, float, float, [3 x float], i16, i16, float }
%struct.bSplineIKConstraint = type { %struct.Object*, float*, i16, i16, i16, i16 }

@__const.draw_armature.white = private unnamed_addr constant [4 x float] [float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00], align 16
@G = external dso_local global %struct.Global, align 8
@si = internal constant [16 x float] [float 0.000000e+00, float 0x3FC9C42660000000, float 0x3FD93D2060000000, float 0x3FE247D440000000, float 0x3FE73180A0000000, float 0x3FEB281800000000, float 0x3FEE0210C0000000, float 0x3FEFA18860000000, float 0x3FEFF57C40000000, float 0x3FEEFA7CE0000000, float 0x3FECBAD0A0000000, float 0x3FE94E08E0000000, float 0x3FE4D80B20000000, float 0x3FDF0F3000000000, float 0x3FD328C3E0000000, float 0x3FB9E62AC0000000], align 16, !dbg !0
@co = internal constant [16 x float] [float 1.000000e+00, float 0x3FEF584F20000000, float 0x3FED681A40000000, float 0x3FEA43B1C0000000, float 0x3FE60C0460000000, float 0x3FE0ED45E0000000, float 0x3FD63A3FC0000000, float 0x3FC361FC40000000, float 0xBFA9EEAFC0000000, float 0xBFD00AB0E0000000, float 0xBFDC2F6B00000000, float 0xBFE3965F40000000, float 0xBFE847BF20000000, float 0xBFEBFAA5C0000000, float 0xBFEE884F00000000, float 0xBFEFD5F820000000], align 16, !dbg !1916
@bcolor = internal global %struct.ThemeWireColor* null, align 8, !dbg !1922
@draw_bonevert_solid.displist = internal global i32 0, align 4, !dbg !1925
@draw_bonevert.displist = internal global i32 0, align 4, !dbg !1931
@drawsolidcube_size.displist = internal global i32 0, align 4, !dbg !1934
@cube = internal constant [8 x [3 x float]] [[3 x float] [float -1.000000e+00, float 0.000000e+00, float -1.000000e+00], [3 x float] [float -1.000000e+00, float 0.000000e+00, float 1.000000e+00], [3 x float] [float -1.000000e+00, float 1.000000e+00, float 1.000000e+00], [3 x float] [float -1.000000e+00, float 1.000000e+00, float -1.000000e+00], [3 x float] [float 1.000000e+00, float 0.000000e+00, float -1.000000e+00], [3 x float] [float 1.000000e+00, float 0.000000e+00, float 1.000000e+00], [3 x float] [float 1.000000e+00, float 1.000000e+00, float 1.000000e+00], [3 x float] [float 1.000000e+00, float 1.000000e+00, float -1.000000e+00]], align 16, !dbg !1939
@drawcube_size.displist = internal global i32 0, align 4, !dbg !1942
@draw_bone_solid_octahedral.displist = internal global i32 0, align 4, !dbg !1945
@bone_octahedral_solid_normals = internal constant [8 x [3 x float]] [[3 x float] [float 0x3FE6A09E60000000, float 0xBFE6A09E60000000, float 0.000000e+00], [3 x float] [float -0.000000e+00, float 0xBFE6A09E60000000, float 0xBFE6A09E60000000], [3 x float] [float 0xBFE6A09E60000000, float 0xBFE6A09E60000000, float 0.000000e+00], [3 x float] [float 0.000000e+00, float 0xBFE6A09E60000000, float 0x3FE6A09E60000000], [3 x float] [float 0x3FEFCDE540000000, float 0x3FBC453DC0000000, float -0.000000e+00], [3 x float] [float 0.000000e+00, float 0x3FBC453DC0000000, float 0xBFEFCDE540000000], [3 x float] [float 0xBFEFCDE540000000, float 0x3FBC453DC0000000, float 0.000000e+00], [3 x float] [float 0.000000e+00, float 0x3FBC453DC0000000, float 0x3FEFCDE540000000]], align 16, !dbg !1948
@bone_octahedral_verts = internal constant [6 x [3 x float]] [[3 x float] zeroinitializer, [3 x float] [float 0x3FB99999A0000000, float 0x3FB99999A0000000, float 0x3FB99999A0000000], [3 x float] [float 0x3FB99999A0000000, float 0x3FB99999A0000000, float 0xBFB99999A0000000], [3 x float] [float 0xBFB99999A0000000, float 0x3FB99999A0000000, float 0xBFB99999A0000000], [3 x float] [float 0xBFB99999A0000000, float 0x3FB99999A0000000, float 0x3FB99999A0000000], [3 x float] [float 0.000000e+00, float 1.000000e+00, float 0.000000e+00]], align 16, !dbg !1950
@bone_octahedral_solid_tris = internal constant [8 x [3 x i32]] [[3 x i32] [i32 2, i32 1, i32 0], [3 x i32] [i32 3, i32 2, i32 0], [3 x i32] [i32 4, i32 3, i32 0], [3 x i32] [i32 1, i32 4, i32 0], [3 x i32] [i32 5, i32 1, i32 2], [3 x i32] [i32 5, i32 2, i32 3], [3 x i32] [i32 5, i32 3, i32 4], [3 x i32] [i32 5, i32 4, i32 1]], align 16, !dbg !1954
@draw_bone_octahedral.displist = internal global i32 0, align 4, !dbg !1958
@bone_octahedral_wire_sides = internal constant [8 x i32] [i32 0, i32 1, i32 5, i32 3, i32 0, i32 4, i32 5, i32 2], align 16, !dbg !1961
@bone_octahedral_wire_square = internal constant [8 x i32] [i32 1, i32 2, i32 3, i32 4, i32 1, i32 0, i32 0, i32 0], align 16, !dbg !1964
@U = external dso_local global %struct.UserDef, align 8
@bm_dot8 = internal global [8 x i8] c"<~\FF\FF\FF\FF~<", align 1, !dbg !1966
@bm_dot7 = internal global [8 x i8] c"\008|\FE\FE\FE|8", align 1, !dbg !1970
@bm_dot6 = internal global [8 x i8] c"\00\18<~~<\18\00", align 1, !dbg !1972
@bm_dot5 = internal global [8 x i8] c"\00\00\108|8\10\00", align 1, !dbg !1974
@__const.draw_dof_ellipse.staticSine = private unnamed_addr constant [16 x float] [float 0.000000e+00, float 0x3FBAC260A0000000, float 0x3FCA9CD9A0000000, float 0x3FD3C6EF40000000, float 0x3FDA07F920000000, float 5.000000e-01, float 0x3FE2CF2300000000, float 0x3FE56984A0000000, float 0x3FE7C7D7A0000000, float 0x3FE9E377A0000000, float 0x3FEBB67AE0000000, float 0x3FED3BC3A0000000, float 0x3FEE6F0E20000000, float 0x3FEF4CFC40000000, float 0x3FEFD31FA0000000, float 1.000000e+00], align 16

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @draw_armature(%struct.Scene* %scene, %struct.View3D* %v3d, %struct.ARegion* %ar, %struct.Base* %base, i16 signext %dt, i16 signext %dflag, i8* %ob_wire_col, i8 zeroext %is_outline) #0 !dbg !1980 {
entry:
  %retval = alloca i8, align 1
  %scene.addr = alloca %struct.Scene*, align 8
  %v3d.addr = alloca %struct.View3D*, align 8
  %ar.addr = alloca %struct.ARegion*, align 8
  %base.addr = alloca %struct.Base*, align 8
  %dt.addr = alloca i16, align 2
  %dflag.addr = alloca i16, align 2
  %ob_wire_col.addr = alloca i8*, align 8
  %is_outline.addr = alloca i8, align 1
  %ob = alloca %struct.Object*, align 8
  %arm = alloca %struct.bArmature*, align 8
  %retval1 = alloca i8, align 1
  %white = alloca [4 x float], align 16
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !2148, metadata !DIExpression()), !dbg !2149
  store %struct.View3D* %v3d, %struct.View3D** %v3d.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.View3D** %v3d.addr, metadata !2150, metadata !DIExpression()), !dbg !2151
  store %struct.ARegion* %ar, %struct.ARegion** %ar.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar.addr, metadata !2152, metadata !DIExpression()), !dbg !2153
  store %struct.Base* %base, %struct.Base** %base.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Base** %base.addr, metadata !2154, metadata !DIExpression()), !dbg !2155
  store i16 %dt, i16* %dt.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %dt.addr, metadata !2156, metadata !DIExpression()), !dbg !2157
  store i16 %dflag, i16* %dflag.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %dflag.addr, metadata !2158, metadata !DIExpression()), !dbg !2159
  store i8* %ob_wire_col, i8** %ob_wire_col.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ob_wire_col.addr, metadata !2160, metadata !DIExpression()), !dbg !2161
  store i8 %is_outline, i8* %is_outline.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %is_outline.addr, metadata !2162, metadata !DIExpression()), !dbg !2163
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !2164, metadata !DIExpression()), !dbg !2167
  %0 = load %struct.Base*, %struct.Base** %base.addr, align 8, !dbg !2168
  %object = getelementptr inbounds %struct.Base, %struct.Base* %0, i32 0, i32 7, !dbg !2169
  %1 = load %struct.Object*, %struct.Object** %object, align 8, !dbg !2169
  store %struct.Object* %1, %struct.Object** %ob, align 8, !dbg !2167
  call void @llvm.dbg.declare(metadata %struct.bArmature** %arm, metadata !2170, metadata !DIExpression()), !dbg !2171
  %2 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !2172
  %data = getelementptr inbounds %struct.Object, %struct.Object* %2, i32 0, i32 19, !dbg !2173
  %3 = load i8*, i8** %data, align 8, !dbg !2173
  %4 = bitcast i8* %3 to %struct.bArmature*, !dbg !2172
  store %struct.bArmature* %4, %struct.bArmature** %arm, align 8, !dbg !2171
  call void @llvm.dbg.declare(metadata i8* %retval1, metadata !2174, metadata !DIExpression()), !dbg !2175
  store i8 0, i8* %retval1, align 1, !dbg !2175
  %5 = load %struct.View3D*, %struct.View3D** %v3d.addr, align 8, !dbg !2176
  %flag2 = getelementptr inbounds %struct.View3D, %struct.View3D* %5, i32 0, i32 29, !dbg !2178
  %6 = load i16, i16* %flag2, align 2, !dbg !2178
  %conv = sext i16 %6 to i32, !dbg !2176
  %and = and i32 %conv, 4, !dbg !2179
  %tobool = icmp ne i32 %and, 0, !dbg !2179
  br i1 %tobool, label %if.then, label %if.end, !dbg !2180

if.then:                                          ; preds = %entry
  store i8 1, i8* %retval, align 1, !dbg !2181
  br label %return, !dbg !2181

if.end:                                           ; preds = %entry
  %7 = load i16, i16* %dt.addr, align 2, !dbg !2182
  %conv2 = sext i16 %7 to i32, !dbg !2182
  %cmp = icmp sgt i32 %conv2, 2, !dbg !2184
  br i1 %cmp, label %land.lhs.true, label %if.end13, !dbg !2185

land.lhs.true:                                    ; preds = %if.end
  %8 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !2186
  %drawtype = getelementptr inbounds %struct.bArmature, %struct.bArmature* %8, i32 0, i32 9, !dbg !2186
  %9 = load i32, i32* %drawtype, align 4, !dbg !2186
  %cmp4 = icmp eq i32 %9, 1, !dbg !2186
  br i1 %cmp4, label %if.end13, label %lor.lhs.false, !dbg !2186

lor.lhs.false:                                    ; preds = %land.lhs.true
  %10 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !2186
  %drawtype6 = getelementptr inbounds %struct.bArmature, %struct.bArmature* %10, i32 0, i32 9, !dbg !2186
  %11 = load i32, i32* %drawtype6, align 4, !dbg !2186
  %cmp7 = icmp eq i32 %11, 4, !dbg !2186
  br i1 %cmp7, label %if.end13, label %if.then9, !dbg !2187

if.then9:                                         ; preds = %lor.lhs.false
  call void @llvm.dbg.declare(metadata [4 x float]* %white, metadata !2188, metadata !DIExpression()), !dbg !2191
  %12 = bitcast [4 x float]* %white to i8*, !dbg !2191
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %12, i8* align 16 bitcast ([4 x float]* @__const.draw_armature.white to i8*), i64 16, i1 false), !dbg !2191
  %arraydecay = getelementptr inbounds [4 x float], [4 x float]* %white, i64 0, i64 0, !dbg !2192
  call void @glMaterialfv(i32 1032, i32 4610, float* %arraydecay), !dbg !2193
  call void @glColorMaterial(i32 1032, i32 4609), !dbg !2194
  %13 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !2195
  %transflag = getelementptr inbounds %struct.Object, %struct.Object* %13, i32 0, i32 55, !dbg !2196
  %14 = load i16, i16* %transflag, align 8, !dbg !2196
  %conv10 = sext i16 %14 to i32, !dbg !2195
  %and11 = and i32 %conv10, 4, !dbg !2197
  %tobool12 = icmp ne i32 %and11, 0, !dbg !2198
  %15 = zext i1 %tobool12 to i64, !dbg !2198
  %cond = select i1 %tobool12, i32 2304, i32 2305, !dbg !2198
  call void @glFrontFace(i32 %cond), !dbg !2199
  br label %if.end13, !dbg !2200

if.end13:                                         ; preds = %if.then9, %lor.lhs.false, %land.lhs.true, %if.end
  %16 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !2201
  %edbo = getelementptr inbounds %struct.bArmature, %struct.bArmature* %16, i32 0, i32 4, !dbg !2203
  %17 = load %struct.ListBase*, %struct.ListBase** %edbo, align 8, !dbg !2203
  %tobool14 = icmp ne %struct.ListBase* %17, null, !dbg !2201
  br i1 %tobool14, label %if.then15, label %if.else, !dbg !2204

if.then15:                                        ; preds = %if.end13
  %18 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !2205
  %flag = getelementptr inbounds %struct.bArmature, %struct.bArmature* %18, i32 0, i32 8, !dbg !2207
  %19 = load i32, i32* %flag, align 8, !dbg !2208
  %or = or i32 %19, 32, !dbg !2208
  store i32 %or, i32* %flag, align 8, !dbg !2208
  %20 = load %struct.View3D*, %struct.View3D** %v3d.addr, align 8, !dbg !2209
  %21 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !2210
  %22 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !2211
  %23 = load i16, i16* %dt.addr, align 2, !dbg !2212
  call void @draw_ebones(%struct.View3D* %20, %struct.ARegion* %21, %struct.Object* %22, i16 signext %23), !dbg !2213
  %24 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !2214
  %flag16 = getelementptr inbounds %struct.bArmature, %struct.bArmature* %24, i32 0, i32 8, !dbg !2215
  %25 = load i32, i32* %flag16, align 8, !dbg !2216
  %and17 = and i32 %25, -33, !dbg !2216
  store i32 %and17, i32* %flag16, align 8, !dbg !2216
  br label %if.end130, !dbg !2217

if.else:                                          ; preds = %if.end13
  %26 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !2218
  %pose = getelementptr inbounds %struct.Object, %struct.Object* %26, i32 0, i32 18, !dbg !2221
  %27 = load %struct.bPose*, %struct.bPose** %pose, align 8, !dbg !2221
  %tobool18 = icmp ne %struct.bPose* %27, null, !dbg !2218
  br i1 %tobool18, label %land.lhs.true19, label %if.else128, !dbg !2222

land.lhs.true19:                                  ; preds = %if.else
  %28 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !2223
  %pose20 = getelementptr inbounds %struct.Object, %struct.Object* %28, i32 0, i32 18, !dbg !2224
  %29 = load %struct.bPose*, %struct.bPose** %pose20, align 8, !dbg !2224
  %chanbase = getelementptr inbounds %struct.bPose, %struct.bPose* %29, i32 0, i32 0, !dbg !2225
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %chanbase, i32 0, i32 0, !dbg !2226
  %30 = load i8*, i8** %first, align 8, !dbg !2226
  %tobool21 = icmp ne i8* %30, null, !dbg !2223
  br i1 %tobool21, label %if.then22, label %if.else128, !dbg !2227

if.then22:                                        ; preds = %land.lhs.true19
  %31 = load %struct.Base*, %struct.Base** %base.addr, align 8, !dbg !2228
  %flag23 = getelementptr inbounds %struct.Base, %struct.Base* %31, i32 0, i32 4, !dbg !2231
  %32 = load i32, i32* %flag23, align 8, !dbg !2231
  %and24 = and i32 %32, 512, !dbg !2232
  %tobool25 = icmp ne i32 %and24, 0, !dbg !2232
  br i1 %tobool25, label %if.end117, label %if.then26, !dbg !2233

if.then26:                                        ; preds = %if.then22
  %33 = load i32, i32* getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 15), align 8, !dbg !2234
  %and27 = and i32 %33, 32, !dbg !2237
  %tobool28 = icmp ne i32 %and27, 0, !dbg !2237
  br i1 %tobool28, label %if.then29, label %if.else36, !dbg !2238

if.then29:                                        ; preds = %if.then26
  %34 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !2239
  %mode = getelementptr inbounds %struct.Object, %struct.Object* %34, i32 0, i32 27, !dbg !2242
  %35 = load i32, i32* %mode, align 8, !dbg !2242
  %and30 = and i32 %35, 64, !dbg !2243
  %tobool31 = icmp ne i32 %and30, 0, !dbg !2243
  br i1 %tobool31, label %if.then32, label %if.end35, !dbg !2244

if.then32:                                        ; preds = %if.then29
  %36 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !2245
  %flag33 = getelementptr inbounds %struct.bArmature, %struct.bArmature* %36, i32 0, i32 8, !dbg !2247
  %37 = load i32, i32* %flag33, align 8, !dbg !2248
  %or34 = or i32 %37, 16, !dbg !2248
  store i32 %or34, i32* %flag33, align 8, !dbg !2248
  br label %if.end35, !dbg !2249

if.end35:                                         ; preds = %if.then32, %if.then29
  br label %if.end116, !dbg !2250

if.else36:                                        ; preds = %if.then26
  %38 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !2251
  %mode37 = getelementptr inbounds %struct.Object, %struct.Object* %38, i32 0, i32 27, !dbg !2253
  %39 = load i32, i32* %mode37, align 8, !dbg !2253
  %and38 = and i32 %39, 64, !dbg !2254
  %tobool39 = icmp ne i32 %and38, 0, !dbg !2254
  br i1 %tobool39, label %if.then40, label %if.end115, !dbg !2255

if.then40:                                        ; preds = %if.else36
  %40 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !2256
  %ghosttype = getelementptr inbounds %struct.bArmature, %struct.bArmature* %40, i32 0, i32 19, !dbg !2259
  %41 = load i16, i16* %ghosttype, align 4, !dbg !2259
  %conv41 = sext i16 %41 to i32, !dbg !2256
  %cmp42 = icmp eq i32 %conv41, 1, !dbg !2260
  br i1 %cmp42, label %if.then44, label %if.else45, !dbg !2261

if.then44:                                        ; preds = %if.then40
  %42 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !2262
  %43 = load %struct.View3D*, %struct.View3D** %v3d.addr, align 8, !dbg !2264
  %44 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !2265
  %45 = load %struct.Base*, %struct.Base** %base.addr, align 8, !dbg !2266
  call void @draw_ghost_poses_range(%struct.Scene* %42, %struct.View3D* %43, %struct.ARegion* %44, %struct.Base* %45), !dbg !2267
  br label %if.end62, !dbg !2268

if.else45:                                        ; preds = %if.then40
  %46 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !2269
  %ghosttype46 = getelementptr inbounds %struct.bArmature, %struct.bArmature* %46, i32 0, i32 19, !dbg !2271
  %47 = load i16, i16* %ghosttype46, align 4, !dbg !2271
  %conv47 = sext i16 %47 to i32, !dbg !2269
  %cmp48 = icmp eq i32 %conv47, 2, !dbg !2272
  br i1 %cmp48, label %if.then50, label %if.else51, !dbg !2273

if.then50:                                        ; preds = %if.else45
  %48 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !2274
  %49 = load %struct.View3D*, %struct.View3D** %v3d.addr, align 8, !dbg !2276
  %50 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !2277
  %51 = load %struct.Base*, %struct.Base** %base.addr, align 8, !dbg !2278
  call void @draw_ghost_poses_keys(%struct.Scene* %48, %struct.View3D* %49, %struct.ARegion* %50, %struct.Base* %51), !dbg !2279
  br label %if.end61, !dbg !2280

if.else51:                                        ; preds = %if.else45
  %52 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !2281
  %ghosttype52 = getelementptr inbounds %struct.bArmature, %struct.bArmature* %52, i32 0, i32 19, !dbg !2283
  %53 = load i16, i16* %ghosttype52, align 4, !dbg !2283
  %conv53 = sext i16 %53 to i32, !dbg !2281
  %cmp54 = icmp eq i32 %conv53, 0, !dbg !2284
  br i1 %cmp54, label %if.then56, label %if.end60, !dbg !2285

if.then56:                                        ; preds = %if.else51
  %54 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !2286
  %ghostep = getelementptr inbounds %struct.bArmature, %struct.bArmature* %54, i32 0, i32 17, !dbg !2289
  %55 = load i16, i16* %ghostep, align 8, !dbg !2289
  %tobool57 = icmp ne i16 %55, 0, !dbg !2286
  br i1 %tobool57, label %if.then58, label %if.end59, !dbg !2290

if.then58:                                        ; preds = %if.then56
  %56 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !2291
  %57 = load %struct.View3D*, %struct.View3D** %v3d.addr, align 8, !dbg !2292
  %58 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !2293
  %59 = load %struct.Base*, %struct.Base** %base.addr, align 8, !dbg !2294
  call void @draw_ghost_poses(%struct.Scene* %56, %struct.View3D* %57, %struct.ARegion* %58, %struct.Base* %59), !dbg !2295
  br label %if.end59, !dbg !2295

if.end59:                                         ; preds = %if.then58, %if.then56
  br label %if.end60, !dbg !2296

if.end60:                                         ; preds = %if.end59, %if.else51
  br label %if.end61

if.end61:                                         ; preds = %if.end60, %if.then50
  br label %if.end62

if.end62:                                         ; preds = %if.end61, %if.then44
  %60 = load i16, i16* %dflag.addr, align 2, !dbg !2297
  %conv63 = sext i16 %60 to i32, !dbg !2297
  %and64 = and i32 %conv63, 4, !dbg !2299
  %cmp65 = icmp eq i32 %and64, 0, !dbg !2300
  br i1 %cmp65, label %if.then67, label %if.end114, !dbg !2301

if.then67:                                        ; preds = %if.end62
  %61 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !2302
  %62 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !2305
  %basact = getelementptr inbounds %struct.Scene, %struct.Scene* %62, i32 0, i32 6, !dbg !2305
  %63 = load %struct.Base*, %struct.Base** %basact, align 8, !dbg !2305
  %tobool68 = icmp ne %struct.Base* %63, null, !dbg !2305
  br i1 %tobool68, label %cond.true, label %cond.false, !dbg !2305

cond.true:                                        ; preds = %if.then67
  %64 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !2305
  %basact69 = getelementptr inbounds %struct.Scene, %struct.Scene* %64, i32 0, i32 6, !dbg !2305
  %65 = load %struct.Base*, %struct.Base** %basact69, align 8, !dbg !2305
  %object70 = getelementptr inbounds %struct.Base, %struct.Base* %65, i32 0, i32 7, !dbg !2305
  %66 = load %struct.Object*, %struct.Object** %object70, align 8, !dbg !2305
  br label %cond.end, !dbg !2305

cond.false:                                       ; preds = %if.then67
  br label %cond.end, !dbg !2305

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond71 = phi %struct.Object* [ %66, %cond.true ], [ null, %cond.false ], !dbg !2305
  %cmp72 = icmp eq %struct.Object* %61, %cond71, !dbg !2306
  br i1 %cmp72, label %if.then74, label %if.else77, !dbg !2307

if.then74:                                        ; preds = %cond.end
  %67 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !2308
  %flag75 = getelementptr inbounds %struct.bArmature, %struct.bArmature* %67, i32 0, i32 8, !dbg !2309
  %68 = load i32, i32* %flag75, align 8, !dbg !2310
  %or76 = or i32 %68, 16, !dbg !2310
  store i32 %or76, i32* %flag75, align 8, !dbg !2310
  br label %if.end113, !dbg !2308

if.else77:                                        ; preds = %cond.end
  %69 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !2311
  %basact78 = getelementptr inbounds %struct.Scene, %struct.Scene* %69, i32 0, i32 6, !dbg !2311
  %70 = load %struct.Base*, %struct.Base** %basact78, align 8, !dbg !2311
  %tobool79 = icmp ne %struct.Base* %70, null, !dbg !2311
  br i1 %tobool79, label %cond.true80, label %cond.false84, !dbg !2313

cond.true80:                                      ; preds = %if.else77
  %71 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !2311
  %basact81 = getelementptr inbounds %struct.Scene, %struct.Scene* %71, i32 0, i32 6, !dbg !2311
  %72 = load %struct.Base*, %struct.Base** %basact81, align 8, !dbg !2311
  %object82 = getelementptr inbounds %struct.Base, %struct.Base* %72, i32 0, i32 7, !dbg !2311
  %73 = load %struct.Object*, %struct.Object** %object82, align 8, !dbg !2311
  %tobool83 = icmp ne %struct.Object* %73, null, !dbg !2311
  br i1 %tobool83, label %land.lhs.true85, label %if.end112, !dbg !2311

cond.false84:                                     ; preds = %if.else77
  br i1 false, label %land.lhs.true85, label %if.end112, !dbg !2313

land.lhs.true85:                                  ; preds = %cond.false84, %cond.true80
  %74 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !2314
  %basact86 = getelementptr inbounds %struct.Scene, %struct.Scene* %74, i32 0, i32 6, !dbg !2314
  %75 = load %struct.Base*, %struct.Base** %basact86, align 8, !dbg !2314
  %tobool87 = icmp ne %struct.Base* %75, null, !dbg !2314
  br i1 %tobool87, label %cond.true88, label %cond.false91, !dbg !2314

cond.true88:                                      ; preds = %land.lhs.true85
  %76 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !2314
  %basact89 = getelementptr inbounds %struct.Scene, %struct.Scene* %76, i32 0, i32 6, !dbg !2314
  %77 = load %struct.Base*, %struct.Base** %basact89, align 8, !dbg !2314
  %object90 = getelementptr inbounds %struct.Base, %struct.Base* %77, i32 0, i32 7, !dbg !2314
  %78 = load %struct.Object*, %struct.Object** %object90, align 8, !dbg !2314
  br label %cond.end92, !dbg !2314

cond.false91:                                     ; preds = %land.lhs.true85
  br label %cond.end92, !dbg !2314

cond.end92:                                       ; preds = %cond.false91, %cond.true88
  %cond93 = phi %struct.Object* [ %78, %cond.true88 ], [ null, %cond.false91 ], !dbg !2314
  %mode94 = getelementptr inbounds %struct.Object, %struct.Object* %cond93, i32 0, i32 27, !dbg !2315
  %79 = load i32, i32* %mode94, align 8, !dbg !2315
  %and95 = and i32 %79, 8, !dbg !2316
  %tobool96 = icmp ne i32 %and95, 0, !dbg !2316
  br i1 %tobool96, label %if.then97, label %if.end112, !dbg !2317

if.then97:                                        ; preds = %cond.end92
  %80 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !2318
  %81 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !2321
  %basact98 = getelementptr inbounds %struct.Scene, %struct.Scene* %81, i32 0, i32 6, !dbg !2321
  %82 = load %struct.Base*, %struct.Base** %basact98, align 8, !dbg !2321
  %tobool99 = icmp ne %struct.Base* %82, null, !dbg !2321
  br i1 %tobool99, label %cond.true100, label %cond.false103, !dbg !2321

cond.true100:                                     ; preds = %if.then97
  %83 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !2321
  %basact101 = getelementptr inbounds %struct.Scene, %struct.Scene* %83, i32 0, i32 6, !dbg !2321
  %84 = load %struct.Base*, %struct.Base** %basact101, align 8, !dbg !2321
  %object102 = getelementptr inbounds %struct.Base, %struct.Base* %84, i32 0, i32 7, !dbg !2321
  %85 = load %struct.Object*, %struct.Object** %object102, align 8, !dbg !2321
  br label %cond.end104, !dbg !2321

cond.false103:                                    ; preds = %if.then97
  br label %cond.end104, !dbg !2321

cond.end104:                                      ; preds = %cond.false103, %cond.true100
  %cond105 = phi %struct.Object* [ %85, %cond.true100 ], [ null, %cond.false103 ], !dbg !2321
  %call = call %struct.Object* @modifiers_isDeformedByArmature(%struct.Object* %cond105), !dbg !2322
  %cmp106 = icmp eq %struct.Object* %80, %call, !dbg !2323
  br i1 %cmp106, label %if.then108, label %if.end111, !dbg !2324

if.then108:                                       ; preds = %cond.end104
  %86 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !2325
  %flag109 = getelementptr inbounds %struct.bArmature, %struct.bArmature* %86, i32 0, i32 8, !dbg !2326
  %87 = load i32, i32* %flag109, align 8, !dbg !2327
  %or110 = or i32 %87, 16, !dbg !2327
  store i32 %or110, i32* %flag109, align 8, !dbg !2327
  br label %if.end111, !dbg !2325

if.end111:                                        ; preds = %if.then108, %cond.end104
  br label %if.end112, !dbg !2328

if.end112:                                        ; preds = %if.end111, %cond.end92, %cond.false84, %cond.true80
  br label %if.end113

if.end113:                                        ; preds = %if.end112, %if.then74
  %88 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !2329
  %89 = load %struct.View3D*, %struct.View3D** %v3d.addr, align 8, !dbg !2330
  %90 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !2331
  %91 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !2332
  call void @draw_pose_paths(%struct.Scene* %88, %struct.View3D* %89, %struct.ARegion* %90, %struct.Object* %91), !dbg !2333
  br label %if.end114, !dbg !2334

if.end114:                                        ; preds = %if.end113, %if.end62
  br label %if.end115, !dbg !2335

if.end115:                                        ; preds = %if.end114, %if.else36
  br label %if.end116

if.end116:                                        ; preds = %if.end115, %if.end35
  br label %if.end117, !dbg !2336

if.end117:                                        ; preds = %if.end116, %if.then22
  %92 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !2337
  %93 = load %struct.View3D*, %struct.View3D** %v3d.addr, align 8, !dbg !2338
  %94 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !2339
  %95 = load %struct.Base*, %struct.Base** %base.addr, align 8, !dbg !2340
  %96 = load i16, i16* %dt.addr, align 2, !dbg !2341
  %97 = load i8*, i8** %ob_wire_col.addr, align 8, !dbg !2342
  %98 = load i16, i16* %dflag.addr, align 2, !dbg !2343
  %conv118 = sext i16 %98 to i32, !dbg !2343
  %and119 = and i32 %conv118, 2, !dbg !2344
  %conv120 = trunc i32 %and119 to i8, !dbg !2345
  %99 = load i8, i8* %is_outline.addr, align 1, !dbg !2346
  call void @draw_pose_bones(%struct.Scene* %92, %struct.View3D* %93, %struct.ARegion* %94, %struct.Base* %95, i16 signext %96, i8* %97, i8 zeroext %conv120, i8 zeroext %99), !dbg !2347
  %100 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !2348
  %flag121 = getelementptr inbounds %struct.bArmature, %struct.bArmature* %100, i32 0, i32 8, !dbg !2349
  %101 = load i32, i32* %flag121, align 8, !dbg !2350
  %and122 = and i32 %101, -17, !dbg !2350
  store i32 %and122, i32* %flag121, align 8, !dbg !2350
  %102 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !2351
  %mode123 = getelementptr inbounds %struct.Object, %struct.Object* %102, i32 0, i32 27, !dbg !2353
  %103 = load i32, i32* %mode123, align 8, !dbg !2353
  %and124 = and i32 %103, 64, !dbg !2354
  %tobool125 = icmp ne i32 %and124, 0, !dbg !2354
  br i1 %tobool125, label %if.then126, label %if.end127, !dbg !2355

if.then126:                                       ; preds = %if.end117
  call void @UI_ThemeColor(i32 25), !dbg !2356
  br label %if.end127, !dbg !2356

if.end127:                                        ; preds = %if.then126, %if.end117
  br label %if.end129, !dbg !2357

if.else128:                                       ; preds = %land.lhs.true19, %if.else
  store i8 1, i8* %retval1, align 1, !dbg !2358
  br label %if.end129

if.end129:                                        ; preds = %if.else128, %if.end127
  br label %if.end130

if.end130:                                        ; preds = %if.end129, %if.then15
  call void @glFrontFace(i32 2305), !dbg !2360
  %104 = load i8, i8* %retval1, align 1, !dbg !2361
  store i8 %104, i8* %retval, align 1, !dbg !2362
  br label %return, !dbg !2362

return:                                           ; preds = %if.end130, %if.then
  %105 = load i8, i8* %retval, align 1, !dbg !2363
  ret i8 %105, !dbg !2363
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #2

declare dso_local void @glMaterialfv(i32, i32, float*) #3

declare dso_local void @glColorMaterial(i32, i32) #3

declare dso_local void @glFrontFace(i32) #3

; Function Attrs: noinline nounwind uwtable
define internal void @draw_ebones(%struct.View3D* %v3d, %struct.ARegion* %ar, %struct.Object* %ob, i16 signext %dt) #0 !dbg !2364 {
entry:
  %v3d.addr = alloca %struct.View3D*, align 8
  %ar.addr = alloca %struct.ARegion*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %dt.addr = alloca i16, align 2
  %rv3d = alloca %struct.RegionView3D*, align 8
  %eBone = alloca %struct.EditBone*, align 8
  %arm = alloca %struct.bArmature*, align 8
  %smat = alloca [4 x [4 x float]], align 16
  %imat = alloca [4 x [4 x float]], align 16
  %bmat = alloca [4 x [4 x float]], align 16
  %index = alloca i32, align 4
  %flag = alloca i32, align 4
  %vec = alloca [3 x float], align 4
  %col = alloca [4 x i8], align 1
  store %struct.View3D* %v3d, %struct.View3D** %v3d.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.View3D** %v3d.addr, metadata !2367, metadata !DIExpression()), !dbg !2368
  store %struct.ARegion* %ar, %struct.ARegion** %ar.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar.addr, metadata !2369, metadata !DIExpression()), !dbg !2370
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !2371, metadata !DIExpression()), !dbg !2372
  store i16 %dt, i16* %dt.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %dt.addr, metadata !2373, metadata !DIExpression()), !dbg !2374
  call void @llvm.dbg.declare(metadata %struct.RegionView3D** %rv3d, metadata !2375, metadata !DIExpression()), !dbg !2440
  %0 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !2441
  %regiondata = getelementptr inbounds %struct.ARegion, %struct.ARegion* %0, i32 0, i32 30, !dbg !2442
  %1 = load i8*, i8** %regiondata, align 8, !dbg !2442
  %2 = bitcast i8* %1 to %struct.RegionView3D*, !dbg !2441
  store %struct.RegionView3D* %2, %struct.RegionView3D** %rv3d, align 8, !dbg !2440
  call void @llvm.dbg.declare(metadata %struct.EditBone** %eBone, metadata !2443, metadata !DIExpression()), !dbg !2444
  call void @llvm.dbg.declare(metadata %struct.bArmature** %arm, metadata !2445, metadata !DIExpression()), !dbg !2446
  %3 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !2447
  %data = getelementptr inbounds %struct.Object, %struct.Object* %3, i32 0, i32 19, !dbg !2448
  %4 = load i8*, i8** %data, align 8, !dbg !2448
  %5 = bitcast i8* %4 to %struct.bArmature*, !dbg !2447
  store %struct.bArmature* %5, %struct.bArmature** %arm, align 8, !dbg !2446
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %smat, metadata !2449, metadata !DIExpression()), !dbg !2450
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %imat, metadata !2451, metadata !DIExpression()), !dbg !2452
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %bmat, metadata !2453, metadata !DIExpression()), !dbg !2454
  call void @llvm.dbg.declare(metadata i32* %index, metadata !2455, metadata !DIExpression()), !dbg !2456
  call void @llvm.dbg.declare(metadata i32* %flag, metadata !2457, metadata !DIExpression()), !dbg !2458
  %6 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !2459
  %layer_used = getelementptr inbounds %struct.bArmature, %struct.bArmature* %6, i32 0, i32 14, !dbg !2460
  store i32 0, i32* %layer_used, align 4, !dbg !2461
  %7 = load %struct.RegionView3D*, %struct.RegionView3D** %rv3d, align 8, !dbg !2462
  %8 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !2463
  %drawtype = getelementptr inbounds %struct.bArmature, %struct.bArmature* %8, i32 0, i32 9, !dbg !2465
  %9 = load i32, i32* %drawtype, align 4, !dbg !2465
  %cmp = icmp eq i32 %9, 3, !dbg !2466
  br i1 %cmp, label %if.then, label %if.end29, !dbg !2467

if.then:                                          ; preds = %entry
  %arraydecay = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %smat, i64 0, i64 0, !dbg !2468
  %10 = load %struct.RegionView3D*, %struct.RegionView3D** %rv3d, align 8, !dbg !2470
  %viewmatob = getelementptr inbounds %struct.RegionView3D, %struct.RegionView3D* %10, i32 0, i32 5, !dbg !2471
  %arraydecay1 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %viewmatob, i64 0, i64 0, !dbg !2470
  call void @copy_m4_m4([4 x float]* %arraydecay, [4 x float]* %arraydecay1), !dbg !2472
  %arraydecay2 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %smat, i64 0, i64 0, !dbg !2473
  %11 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !2474
  %obmat = getelementptr inbounds %struct.Object, %struct.Object* %11, i32 0, i32 47, !dbg !2475
  %arrayidx = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat, i64 0, i64 0, !dbg !2474
  %arraydecay3 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx, i64 0, i64 0, !dbg !2474
  %call = call float @len_v3(float* %arraydecay3), !dbg !2476
  %div = fdiv float 1.000000e+00, %call, !dbg !2477
  call void @mul_mat3_m4_fl([4 x float]* %arraydecay2, float %div), !dbg !2478
  %arraydecay4 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %imat, i64 0, i64 0, !dbg !2479
  %arraydecay5 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %smat, i64 0, i64 0, !dbg !2480
  %call6 = call zeroext i8 @invert_m4_m4([4 x float]* %arraydecay4, [4 x float]* %arraydecay5), !dbg !2481
  call void @glEnable(i32 3042), !dbg !2482
  %12 = load %struct.View3D*, %struct.View3D** %v3d.addr, align 8, !dbg !2483
  %zbuf = getelementptr inbounds %struct.View3D, %struct.View3D* %12, i32 0, i32 47, !dbg !2485
  %13 = load i8, i8* %zbuf, align 8, !dbg !2485
  %tobool = icmp ne i8 %13, 0, !dbg !2483
  br i1 %tobool, label %if.then7, label %if.end, !dbg !2486

if.then7:                                         ; preds = %if.then
  call void @glDisable(i32 2929), !dbg !2487
  br label %if.end, !dbg !2487

if.end:                                           ; preds = %if.then7, %if.then
  %14 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !2488
  %edbo = getelementptr inbounds %struct.bArmature, %struct.bArmature* %14, i32 0, i32 4, !dbg !2490
  %15 = load %struct.ListBase*, %struct.ListBase** %edbo, align 8, !dbg !2490
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %15, i32 0, i32 0, !dbg !2491
  %16 = load i8*, i8** %first, align 8, !dbg !2491
  %17 = bitcast i8* %16 to %struct.EditBone*, !dbg !2488
  store %struct.EditBone* %17, %struct.EditBone** %eBone, align 8, !dbg !2492
  br label %for.cond, !dbg !2493

for.cond:                                         ; preds = %for.inc, %if.end
  %18 = load %struct.EditBone*, %struct.EditBone** %eBone, align 8, !dbg !2494
  %tobool8 = icmp ne %struct.EditBone* %18, null, !dbg !2496
  br i1 %tobool8, label %for.body, label %for.end, !dbg !2496

for.body:                                         ; preds = %for.cond
  %19 = load %struct.EditBone*, %struct.EditBone** %eBone, align 8, !dbg !2497
  %layer = getelementptr inbounds %struct.EditBone, %struct.EditBone* %19, i32 0, i32 10, !dbg !2500
  %20 = load i32, i32* %layer, align 8, !dbg !2500
  %21 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !2501
  %layer9 = getelementptr inbounds %struct.bArmature, %struct.bArmature* %21, i32 0, i32 15, !dbg !2502
  %22 = load i32, i32* %layer9, align 8, !dbg !2502
  %and = and i32 %20, %22, !dbg !2503
  %tobool10 = icmp ne i32 %and, 0, !dbg !2503
  br i1 %tobool10, label %if.then11, label %if.end24, !dbg !2504

if.then11:                                        ; preds = %for.body
  %23 = load %struct.EditBone*, %struct.EditBone** %eBone, align 8, !dbg !2505
  %flag12 = getelementptr inbounds %struct.EditBone, %struct.EditBone* %23, i32 0, i32 9, !dbg !2508
  %24 = load i32, i32* %flag12, align 4, !dbg !2508
  %and13 = and i32 %24, 5120, !dbg !2509
  %cmp14 = icmp eq i32 %and13, 0, !dbg !2510
  br i1 %cmp14, label %if.then15, label %if.end23, !dbg !2511

if.then15:                                        ; preds = %if.then11
  %25 = load %struct.EditBone*, %struct.EditBone** %eBone, align 8, !dbg !2512
  %flag16 = getelementptr inbounds %struct.EditBone, %struct.EditBone* %25, i32 0, i32 9, !dbg !2515
  %26 = load i32, i32* %flag16, align 4, !dbg !2515
  %and17 = and i32 %26, 7, !dbg !2516
  %tobool18 = icmp ne i32 %and17, 0, !dbg !2516
  br i1 %tobool18, label %if.then19, label %if.end22, !dbg !2517

if.then19:                                        ; preds = %if.then15
  %arraydecay20 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %smat, i64 0, i64 0, !dbg !2518
  %arraydecay21 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %imat, i64 0, i64 0, !dbg !2519
  %27 = load %struct.EditBone*, %struct.EditBone** %eBone, align 8, !dbg !2520
  call void @draw_sphere_bone_dist([4 x float]* %arraydecay20, [4 x float]* %arraydecay21, %struct.bPoseChannel* null, %struct.EditBone* %27), !dbg !2521
  br label %if.end22, !dbg !2521

if.end22:                                         ; preds = %if.then19, %if.then15
  br label %if.end23, !dbg !2522

if.end23:                                         ; preds = %if.end22, %if.then11
  br label %if.end24, !dbg !2523

if.end24:                                         ; preds = %if.end23, %for.body
  br label %for.inc, !dbg !2524

for.inc:                                          ; preds = %if.end24
  %28 = load %struct.EditBone*, %struct.EditBone** %eBone, align 8, !dbg !2525
  %next = getelementptr inbounds %struct.EditBone, %struct.EditBone* %28, i32 0, i32 0, !dbg !2526
  %29 = load %struct.EditBone*, %struct.EditBone** %next, align 8, !dbg !2526
  store %struct.EditBone* %29, %struct.EditBone** %eBone, align 8, !dbg !2527
  br label %for.cond, !dbg !2528, !llvm.loop !2529

for.end:                                          ; preds = %for.cond
  %30 = load %struct.View3D*, %struct.View3D** %v3d.addr, align 8, !dbg !2531
  %zbuf25 = getelementptr inbounds %struct.View3D, %struct.View3D* %30, i32 0, i32 47, !dbg !2533
  %31 = load i8, i8* %zbuf25, align 8, !dbg !2533
  %tobool26 = icmp ne i8 %31, 0, !dbg !2531
  br i1 %tobool26, label %if.then27, label %if.end28, !dbg !2534

if.then27:                                        ; preds = %for.end
  call void @glEnable(i32 2929), !dbg !2535
  br label %if.end28, !dbg !2535

if.end28:                                         ; preds = %if.then27, %for.end
  call void @glDisable(i32 3042), !dbg !2536
  br label %if.end29, !dbg !2537

if.end29:                                         ; preds = %if.end28, %entry
  %32 = load i16, i16* %dt.addr, align 2, !dbg !2538
  %conv = sext i16 %32 to i32, !dbg !2538
  %cmp30 = icmp sgt i32 %conv, 2, !dbg !2540
  br i1 %cmp30, label %land.lhs.true, label %if.end98, !dbg !2541

land.lhs.true:                                    ; preds = %if.end29
  %33 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !2542
  %drawtype32 = getelementptr inbounds %struct.bArmature, %struct.bArmature* %33, i32 0, i32 9, !dbg !2543
  %34 = load i32, i32* %drawtype32, align 4, !dbg !2543
  %cmp33 = icmp ne i32 %34, 1, !dbg !2544
  br i1 %cmp33, label %if.then35, label %if.end98, !dbg !2545

if.then35:                                        ; preds = %land.lhs.true
  %35 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !2546
  %edbo36 = getelementptr inbounds %struct.bArmature, %struct.bArmature* %35, i32 0, i32 4, !dbg !2549
  %36 = load %struct.ListBase*, %struct.ListBase** %edbo36, align 8, !dbg !2549
  %first37 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %36, i32 0, i32 0, !dbg !2550
  %37 = load i8*, i8** %first37, align 8, !dbg !2550
  %38 = bitcast i8* %37 to %struct.EditBone*, !dbg !2546
  store %struct.EditBone* %38, %struct.EditBone** %eBone, align 8, !dbg !2551
  store i32 0, i32* %index, align 4, !dbg !2552
  br label %for.cond38, !dbg !2553

for.cond38:                                       ; preds = %for.inc95, %if.then35
  %39 = load %struct.EditBone*, %struct.EditBone** %eBone, align 8, !dbg !2554
  %tobool39 = icmp ne %struct.EditBone* %39, null, !dbg !2556
  br i1 %tobool39, label %for.body40, label %for.end97, !dbg !2556

for.body40:                                       ; preds = %for.cond38
  %40 = load %struct.EditBone*, %struct.EditBone** %eBone, align 8, !dbg !2557
  %layer41 = getelementptr inbounds %struct.EditBone, %struct.EditBone* %40, i32 0, i32 10, !dbg !2560
  %41 = load i32, i32* %layer41, align 8, !dbg !2560
  %42 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !2561
  %layer42 = getelementptr inbounds %struct.bArmature, %struct.bArmature* %42, i32 0, i32 15, !dbg !2562
  %43 = load i32, i32* %layer42, align 8, !dbg !2562
  %and43 = and i32 %41, %43, !dbg !2563
  %tobool44 = icmp ne i32 %and43, 0, !dbg !2563
  br i1 %tobool44, label %if.then45, label %if.end94, !dbg !2564

if.then45:                                        ; preds = %for.body40
  %44 = load %struct.EditBone*, %struct.EditBone** %eBone, align 8, !dbg !2565
  %flag46 = getelementptr inbounds %struct.EditBone, %struct.EditBone* %44, i32 0, i32 9, !dbg !2568
  %45 = load i32, i32* %flag46, align 4, !dbg !2568
  %and47 = and i32 %45, 1024, !dbg !2569
  %cmp48 = icmp eq i32 %and47, 0, !dbg !2570
  br i1 %cmp48, label %if.then50, label %if.end93, !dbg !2571

if.then50:                                        ; preds = %if.then45
  call void @glPushMatrix(), !dbg !2572
  %46 = load %struct.EditBone*, %struct.EditBone** %eBone, align 8, !dbg !2574
  %arraydecay51 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %bmat, i64 0, i64 0, !dbg !2575
  call void @get_matrix_editbone(%struct.EditBone* %46, [4 x float]* %arraydecay51), !dbg !2576
  %arraydecay52 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %bmat, i64 0, i64 0, !dbg !2577
  %47 = bitcast [4 x float]* %arraydecay52 to float*, !dbg !2577
  call void @glMultMatrixf(float* %47), !dbg !2577
  %48 = load %struct.EditBone*, %struct.EditBone** %eBone, align 8, !dbg !2578
  %flag53 = getelementptr inbounds %struct.EditBone, %struct.EditBone* %48, i32 0, i32 9, !dbg !2579
  %49 = load i32, i32* %flag53, align 4, !dbg !2579
  store i32 %49, i32* %flag, align 4, !dbg !2580
  %50 = load %struct.EditBone*, %struct.EditBone** %eBone, align 8, !dbg !2581
  %parent = getelementptr inbounds %struct.EditBone, %struct.EditBone* %50, i32 0, i32 3, !dbg !2583
  %51 = load %struct.EditBone*, %struct.EditBone** %parent, align 8, !dbg !2583
  %tobool54 = icmp ne %struct.EditBone* %51, null, !dbg !2584
  br i1 %tobool54, label %land.lhs.true55, label %if.end67, !dbg !2585

land.lhs.true55:                                  ; preds = %if.then50
  %52 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !2586
  %layer56 = getelementptr inbounds %struct.bArmature, %struct.bArmature* %52, i32 0, i32 15, !dbg !2586
  %53 = load i32, i32* %layer56, align 8, !dbg !2586
  %54 = load %struct.EditBone*, %struct.EditBone** %eBone, align 8, !dbg !2586
  %parent57 = getelementptr inbounds %struct.EditBone, %struct.EditBone* %54, i32 0, i32 3, !dbg !2586
  %55 = load %struct.EditBone*, %struct.EditBone** %parent57, align 8, !dbg !2586
  %layer58 = getelementptr inbounds %struct.EditBone, %struct.EditBone* %55, i32 0, i32 10, !dbg !2586
  %56 = load i32, i32* %layer58, align 8, !dbg !2586
  %and59 = and i32 %53, %56, !dbg !2586
  %tobool60 = icmp ne i32 %and59, 0, !dbg !2586
  br i1 %tobool60, label %land.rhs, label %land.end, !dbg !2586

land.rhs:                                         ; preds = %land.lhs.true55
  %57 = load %struct.EditBone*, %struct.EditBone** %eBone, align 8, !dbg !2586
  %parent61 = getelementptr inbounds %struct.EditBone, %struct.EditBone* %57, i32 0, i32 3, !dbg !2586
  %58 = load %struct.EditBone*, %struct.EditBone** %parent61, align 8, !dbg !2586
  %flag62 = getelementptr inbounds %struct.EditBone, %struct.EditBone* %58, i32 0, i32 9, !dbg !2586
  %59 = load i32, i32* %flag62, align 4, !dbg !2586
  %and63 = and i32 %59, 1024, !dbg !2586
  %tobool64 = icmp ne i32 %and63, 0, !dbg !2586
  %lnot = xor i1 %tobool64, true, !dbg !2586
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true55
  %60 = phi i1 [ false, %land.lhs.true55 ], [ %lnot, %land.rhs ], !dbg !2587
  br i1 %60, label %if.end67, label %if.then65, !dbg !2588

if.then65:                                        ; preds = %land.end
  %61 = load i32, i32* %flag, align 4, !dbg !2589
  %and66 = and i32 %61, -17, !dbg !2589
  store i32 %and66, i32* %flag, align 4, !dbg !2589
  br label %if.end67, !dbg !2591

if.end67:                                         ; preds = %if.then65, %land.end, %if.then50
  %62 = load %struct.EditBone*, %struct.EditBone** %eBone, align 8, !dbg !2592
  %63 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !2594
  %act_edbone = getelementptr inbounds %struct.bArmature, %struct.bArmature* %63, i32 0, i32 6, !dbg !2595
  %64 = load %struct.EditBone*, %struct.EditBone** %act_edbone, align 8, !dbg !2595
  %cmp68 = icmp eq %struct.EditBone* %62, %64, !dbg !2596
  br i1 %cmp68, label %if.then70, label %if.end71, !dbg !2597

if.then70:                                        ; preds = %if.end67
  %65 = load i32, i32* %flag, align 4, !dbg !2598
  %or = or i32 %65, 256, !dbg !2598
  store i32 %or, i32* %flag, align 4, !dbg !2598
  br label %if.end71, !dbg !2599

if.end71:                                         ; preds = %if.then70, %if.end67
  %66 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !2600
  %drawtype72 = getelementptr inbounds %struct.bArmature, %struct.bArmature* %66, i32 0, i32 9, !dbg !2602
  %67 = load i32, i32* %drawtype72, align 4, !dbg !2602
  %cmp73 = icmp eq i32 %67, 3, !dbg !2603
  br i1 %cmp73, label %if.then75, label %if.else, !dbg !2604

if.then75:                                        ; preds = %if.end71
  %68 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !2605
  %flag76 = getelementptr inbounds %struct.bArmature, %struct.bArmature* %68, i32 0, i32 8, !dbg !2606
  %69 = load i32, i32* %flag76, align 8, !dbg !2606
  %70 = load i32, i32* %flag, align 4, !dbg !2607
  %71 = load i32, i32* %index, align 4, !dbg !2608
  %72 = load %struct.EditBone*, %struct.EditBone** %eBone, align 8, !dbg !2609
  call void @draw_sphere_bone(i16 signext 3, i32 %69, i32 %70, i16 signext 0, i32 %71, %struct.bPoseChannel* null, %struct.EditBone* %72), !dbg !2610
  br label %if.end92, !dbg !2610

if.else:                                          ; preds = %if.end71
  %73 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !2611
  %drawtype77 = getelementptr inbounds %struct.bArmature, %struct.bArmature* %73, i32 0, i32 9, !dbg !2613
  %74 = load i32, i32* %drawtype77, align 4, !dbg !2613
  %cmp78 = icmp eq i32 %74, 2, !dbg !2614
  br i1 %cmp78, label %if.then80, label %if.else82, !dbg !2615

if.then80:                                        ; preds = %if.else
  %75 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !2616
  %flag81 = getelementptr inbounds %struct.bArmature, %struct.bArmature* %75, i32 0, i32 8, !dbg !2617
  %76 = load i32, i32* %flag81, align 8, !dbg !2617
  %77 = load i32, i32* %flag, align 4, !dbg !2618
  %78 = load i32, i32* %index, align 4, !dbg !2619
  %79 = load %struct.EditBone*, %struct.EditBone** %eBone, align 8, !dbg !2620
  call void @draw_b_bone(i16 signext 3, i32 %76, i32 %77, i16 signext 0, i32 %78, %struct.bPoseChannel* null, %struct.EditBone* %79), !dbg !2621
  br label %if.end91, !dbg !2621

if.else82:                                        ; preds = %if.else
  %80 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !2622
  %drawtype83 = getelementptr inbounds %struct.bArmature, %struct.bArmature* %80, i32 0, i32 9, !dbg !2624
  %81 = load i32, i32* %drawtype83, align 4, !dbg !2624
  %cmp84 = icmp eq i32 %81, 4, !dbg !2625
  br i1 %cmp84, label %if.then86, label %if.else88, !dbg !2626

if.then86:                                        ; preds = %if.else82
  %82 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !2627
  %flag87 = getelementptr inbounds %struct.bArmature, %struct.bArmature* %82, i32 0, i32 8, !dbg !2628
  %83 = load i32, i32* %flag87, align 8, !dbg !2628
  %84 = load i32, i32* %flag, align 4, !dbg !2629
  %85 = load i32, i32* %index, align 4, !dbg !2630
  %86 = load %struct.EditBone*, %struct.EditBone** %eBone, align 8, !dbg !2631
  call void @draw_wire_bone(i16 signext 3, i32 %83, i32 %84, i16 signext 0, i32 %85, %struct.bPoseChannel* null, %struct.EditBone* %86), !dbg !2632
  br label %if.end90, !dbg !2632

if.else88:                                        ; preds = %if.else82
  %87 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !2633
  %flag89 = getelementptr inbounds %struct.bArmature, %struct.bArmature* %87, i32 0, i32 8, !dbg !2635
  %88 = load i32, i32* %flag89, align 8, !dbg !2635
  %89 = load i32, i32* %flag, align 4, !dbg !2636
  %90 = load i32, i32* %index, align 4, !dbg !2637
  %91 = load %struct.EditBone*, %struct.EditBone** %eBone, align 8, !dbg !2638
  %length = getelementptr inbounds %struct.EditBone, %struct.EditBone* %91, i32 0, i32 14, !dbg !2639
  %92 = load float, float* %length, align 8, !dbg !2639
  call void @draw_bone(i16 signext 3, i32 %88, i32 %89, i16 signext 0, i32 %90, float %92), !dbg !2640
  br label %if.end90

if.end90:                                         ; preds = %if.else88, %if.then86
  br label %if.end91

if.end91:                                         ; preds = %if.end90, %if.then80
  br label %if.end92

if.end92:                                         ; preds = %if.end91, %if.then75
  call void @glPopMatrix(), !dbg !2641
  br label %if.end93, !dbg !2642

if.end93:                                         ; preds = %if.end92, %if.then45
  br label %if.end94, !dbg !2643

if.end94:                                         ; preds = %if.end93, %for.body40
  br label %for.inc95, !dbg !2644

for.inc95:                                        ; preds = %if.end94
  %93 = load %struct.EditBone*, %struct.EditBone** %eBone, align 8, !dbg !2645
  %next96 = getelementptr inbounds %struct.EditBone, %struct.EditBone* %93, i32 0, i32 0, !dbg !2646
  %94 = load %struct.EditBone*, %struct.EditBone** %next96, align 8, !dbg !2646
  store %struct.EditBone* %94, %struct.EditBone** %eBone, align 8, !dbg !2647
  %95 = load i32, i32* %index, align 4, !dbg !2648
  %inc = add i32 %95, 1, !dbg !2648
  store i32 %inc, i32* %index, align 4, !dbg !2648
  br label %for.cond38, !dbg !2649, !llvm.loop !2650

for.end97:                                        ; preds = %for.cond38
  br label %if.end98, !dbg !2652

if.end98:                                         ; preds = %for.end97, %land.lhs.true, %if.end29
  store i32 -1, i32* %index, align 4, !dbg !2653
  %call99 = call zeroext i8 @GPU_select_load_id(i32 -1), !dbg !2654
  %96 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !2655
  %drawtype100 = getelementptr inbounds %struct.bArmature, %struct.bArmature* %96, i32 0, i32 9, !dbg !2655
  %97 = load i32, i32* %drawtype100, align 4, !dbg !2655
  %cmp101 = icmp eq i32 %97, 1, !dbg !2655
  br i1 %cmp101, label %if.then106, label %lor.lhs.false, !dbg !2655

lor.lhs.false:                                    ; preds = %if.end98
  %98 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !2655
  %drawtype103 = getelementptr inbounds %struct.bArmature, %struct.bArmature* %98, i32 0, i32 9, !dbg !2655
  %99 = load i32, i32* %drawtype103, align 4, !dbg !2655
  %cmp104 = icmp eq i32 %99, 4, !dbg !2655
  br i1 %cmp104, label %if.then106, label %if.else111, !dbg !2657

if.then106:                                       ; preds = %lor.lhs.false, %if.end98
  %100 = load i32, i32* getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 15), align 8, !dbg !2658
  %and107 = and i32 %100, 32, !dbg !2661
  %tobool108 = icmp ne i32 %and107, 0, !dbg !2661
  br i1 %tobool108, label %if.then109, label %if.end110, !dbg !2662

if.then109:                                       ; preds = %if.then106
  store i32 0, i32* %index, align 4, !dbg !2663
  br label %if.end110, !dbg !2664

if.end110:                                        ; preds = %if.then109, %if.then106
  br label %if.end123, !dbg !2665

if.else111:                                       ; preds = %lor.lhs.false
  %101 = load i16, i16* %dt.addr, align 2, !dbg !2666
  %conv112 = sext i16 %101 to i32, !dbg !2666
  %cmp113 = icmp sgt i32 %conv112, 2, !dbg !2668
  br i1 %cmp113, label %if.then115, label %if.else116, !dbg !2669

if.then115:                                       ; preds = %if.else111
  %102 = load %struct.RegionView3D*, %struct.RegionView3D** %rv3d, align 8, !dbg !2670
  call void @ED_view3d_polygon_offset(%struct.RegionView3D* %102, float 1.000000e+00), !dbg !2671
  br label %if.end122, !dbg !2671

if.else116:                                       ; preds = %if.else111
  %103 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !2672
  %flag117 = getelementptr inbounds %struct.bArmature, %struct.bArmature* %103, i32 0, i32 8, !dbg !2674
  %104 = load i32, i32* %flag117, align 8, !dbg !2674
  %and118 = and i32 %104, 32, !dbg !2675
  %tobool119 = icmp ne i32 %and118, 0, !dbg !2675
  br i1 %tobool119, label %if.then120, label %if.end121, !dbg !2676

if.then120:                                       ; preds = %if.else116
  store i32 0, i32* %index, align 4, !dbg !2677
  br label %if.end121, !dbg !2678

if.end121:                                        ; preds = %if.then120, %if.else116
  br label %if.end122

if.end122:                                        ; preds = %if.end121, %if.then115
  br label %if.end123

if.end123:                                        ; preds = %if.end122, %if.end110
  %105 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !2679
  %edbo124 = getelementptr inbounds %struct.bArmature, %struct.bArmature* %105, i32 0, i32 4, !dbg !2681
  %106 = load %struct.ListBase*, %struct.ListBase** %edbo124, align 8, !dbg !2681
  %first125 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %106, i32 0, i32 0, !dbg !2682
  %107 = load i8*, i8** %first125, align 8, !dbg !2682
  %108 = bitcast i8* %107 to %struct.EditBone*, !dbg !2679
  store %struct.EditBone* %108, %struct.EditBone** %eBone, align 8, !dbg !2683
  br label %for.cond126, !dbg !2684

for.cond126:                                      ; preds = %for.inc221, %if.end123
  %109 = load %struct.EditBone*, %struct.EditBone** %eBone, align 8, !dbg !2685
  %tobool127 = icmp ne %struct.EditBone* %109, null, !dbg !2687
  br i1 %tobool127, label %for.body128, label %for.end223, !dbg !2687

for.body128:                                      ; preds = %for.cond126
  %110 = load %struct.EditBone*, %struct.EditBone** %eBone, align 8, !dbg !2688
  %layer129 = getelementptr inbounds %struct.EditBone, %struct.EditBone* %110, i32 0, i32 10, !dbg !2690
  %111 = load i32, i32* %layer129, align 8, !dbg !2690
  %112 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !2691
  %layer_used130 = getelementptr inbounds %struct.bArmature, %struct.bArmature* %112, i32 0, i32 14, !dbg !2692
  %113 = load i32, i32* %layer_used130, align 4, !dbg !2693
  %or131 = or i32 %113, %111, !dbg !2693
  store i32 %or131, i32* %layer_used130, align 4, !dbg !2693
  %114 = load %struct.EditBone*, %struct.EditBone** %eBone, align 8, !dbg !2694
  %layer132 = getelementptr inbounds %struct.EditBone, %struct.EditBone* %114, i32 0, i32 10, !dbg !2696
  %115 = load i32, i32* %layer132, align 8, !dbg !2696
  %116 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !2697
  %layer133 = getelementptr inbounds %struct.bArmature, %struct.bArmature* %116, i32 0, i32 15, !dbg !2698
  %117 = load i32, i32* %layer133, align 8, !dbg !2698
  %and134 = and i32 %115, %117, !dbg !2699
  %tobool135 = icmp ne i32 %and134, 0, !dbg !2699
  br i1 %tobool135, label %if.then136, label %if.end215, !dbg !2700

if.then136:                                       ; preds = %for.body128
  %118 = load %struct.EditBone*, %struct.EditBone** %eBone, align 8, !dbg !2701
  %flag137 = getelementptr inbounds %struct.EditBone, %struct.EditBone* %118, i32 0, i32 9, !dbg !2704
  %119 = load i32, i32* %flag137, align 4, !dbg !2704
  %and138 = and i32 %119, 1024, !dbg !2705
  %cmp139 = icmp eq i32 %and138, 0, !dbg !2706
  br i1 %cmp139, label %if.then141, label %if.end214, !dbg !2707

if.then141:                                       ; preds = %if.then136
  %120 = load %struct.EditBone*, %struct.EditBone** %eBone, align 8, !dbg !2708
  %flag142 = getelementptr inbounds %struct.EditBone, %struct.EditBone* %120, i32 0, i32 9, !dbg !2710
  %121 = load i32, i32* %flag142, align 4, !dbg !2710
  store i32 %121, i32* %flag, align 4, !dbg !2711
  %122 = load %struct.EditBone*, %struct.EditBone** %eBone, align 8, !dbg !2712
  %parent143 = getelementptr inbounds %struct.EditBone, %struct.EditBone* %122, i32 0, i32 3, !dbg !2714
  %123 = load %struct.EditBone*, %struct.EditBone** %parent143, align 8, !dbg !2714
  %tobool144 = icmp ne %struct.EditBone* %123, null, !dbg !2715
  br i1 %tobool144, label %land.lhs.true145, label %if.end160, !dbg !2716

land.lhs.true145:                                 ; preds = %if.then141
  %124 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !2717
  %layer146 = getelementptr inbounds %struct.bArmature, %struct.bArmature* %124, i32 0, i32 15, !dbg !2717
  %125 = load i32, i32* %layer146, align 8, !dbg !2717
  %126 = load %struct.EditBone*, %struct.EditBone** %eBone, align 8, !dbg !2717
  %parent147 = getelementptr inbounds %struct.EditBone, %struct.EditBone* %126, i32 0, i32 3, !dbg !2717
  %127 = load %struct.EditBone*, %struct.EditBone** %parent147, align 8, !dbg !2717
  %layer148 = getelementptr inbounds %struct.EditBone, %struct.EditBone* %127, i32 0, i32 10, !dbg !2717
  %128 = load i32, i32* %layer148, align 8, !dbg !2717
  %and149 = and i32 %125, %128, !dbg !2717
  %tobool150 = icmp ne i32 %and149, 0, !dbg !2717
  br i1 %tobool150, label %land.rhs151, label %land.end157, !dbg !2717

land.rhs151:                                      ; preds = %land.lhs.true145
  %129 = load %struct.EditBone*, %struct.EditBone** %eBone, align 8, !dbg !2717
  %parent152 = getelementptr inbounds %struct.EditBone, %struct.EditBone* %129, i32 0, i32 3, !dbg !2717
  %130 = load %struct.EditBone*, %struct.EditBone** %parent152, align 8, !dbg !2717
  %flag153 = getelementptr inbounds %struct.EditBone, %struct.EditBone* %130, i32 0, i32 9, !dbg !2717
  %131 = load i32, i32* %flag153, align 4, !dbg !2717
  %and154 = and i32 %131, 1024, !dbg !2717
  %tobool155 = icmp ne i32 %and154, 0, !dbg !2717
  %lnot156 = xor i1 %tobool155, true, !dbg !2717
  br label %land.end157

land.end157:                                      ; preds = %land.rhs151, %land.lhs.true145
  %132 = phi i1 [ false, %land.lhs.true145 ], [ %lnot156, %land.rhs151 ], !dbg !2718
  br i1 %132, label %if.end160, label %if.then158, !dbg !2719

if.then158:                                       ; preds = %land.end157
  %133 = load i32, i32* %flag, align 4, !dbg !2720
  %and159 = and i32 %133, -17, !dbg !2720
  store i32 %and159, i32* %flag, align 4, !dbg !2720
  br label %if.end160, !dbg !2722

if.end160:                                        ; preds = %if.then158, %land.end157, %if.then141
  %134 = load %struct.EditBone*, %struct.EditBone** %eBone, align 8, !dbg !2723
  %135 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !2725
  %act_edbone161 = getelementptr inbounds %struct.bArmature, %struct.bArmature* %135, i32 0, i32 6, !dbg !2726
  %136 = load %struct.EditBone*, %struct.EditBone** %act_edbone161, align 8, !dbg !2726
  %cmp162 = icmp eq %struct.EditBone* %134, %136, !dbg !2727
  br i1 %cmp162, label %if.then164, label %if.end166, !dbg !2728

if.then164:                                       ; preds = %if.end160
  %137 = load i32, i32* %flag, align 4, !dbg !2729
  %or165 = or i32 %137, 256, !dbg !2729
  store i32 %or165, i32* %flag, align 4, !dbg !2729
  br label %if.end166, !dbg !2730

if.end166:                                        ; preds = %if.then164, %if.end160
  %138 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !2731
  %drawtype167 = getelementptr inbounds %struct.bArmature, %struct.bArmature* %138, i32 0, i32 9, !dbg !2733
  %139 = load i32, i32* %drawtype167, align 4, !dbg !2733
  %cmp168 = icmp eq i32 %139, 3, !dbg !2734
  br i1 %cmp168, label %if.then170, label %if.else179, !dbg !2735

if.then170:                                       ; preds = %if.end166
  %140 = load i16, i16* %dt.addr, align 2, !dbg !2736
  %conv171 = sext i16 %140 to i32, !dbg !2736
  %cmp172 = icmp slt i32 %conv171, 3, !dbg !2739
  br i1 %cmp172, label %if.then174, label %if.end178, !dbg !2740

if.then174:                                       ; preds = %if.then170
  %arraydecay175 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %smat, i64 0, i64 0, !dbg !2741
  %arraydecay176 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %imat, i64 0, i64 0, !dbg !2742
  %141 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !2743
  %flag177 = getelementptr inbounds %struct.bArmature, %struct.bArmature* %141, i32 0, i32 8, !dbg !2744
  %142 = load i32, i32* %flag177, align 8, !dbg !2744
  %143 = load i32, i32* %flag, align 4, !dbg !2745
  %144 = load i32, i32* %index, align 4, !dbg !2746
  %145 = load %struct.EditBone*, %struct.EditBone** %eBone, align 8, !dbg !2747
  call void @draw_sphere_bone_wire([4 x float]* %arraydecay175, [4 x float]* %arraydecay176, i32 %142, i32 %143, i16 signext 0, i32 %144, %struct.bPoseChannel* null, %struct.EditBone* %145), !dbg !2748
  br label %if.end178, !dbg !2748

if.end178:                                        ; preds = %if.then174, %if.then170
  br label %if.end205, !dbg !2749

if.else179:                                       ; preds = %if.end166
  call void @glPushMatrix(), !dbg !2750
  %146 = load %struct.EditBone*, %struct.EditBone** %eBone, align 8, !dbg !2752
  %arraydecay180 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %bmat, i64 0, i64 0, !dbg !2753
  call void @get_matrix_editbone(%struct.EditBone* %146, [4 x float]* %arraydecay180), !dbg !2754
  %arraydecay181 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %bmat, i64 0, i64 0, !dbg !2755
  %147 = bitcast [4 x float]* %arraydecay181 to float*, !dbg !2755
  call void @glMultMatrixf(float* %147), !dbg !2755
  %148 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !2756
  %drawtype182 = getelementptr inbounds %struct.bArmature, %struct.bArmature* %148, i32 0, i32 9, !dbg !2758
  %149 = load i32, i32* %drawtype182, align 4, !dbg !2758
  %cmp183 = icmp eq i32 %149, 1, !dbg !2759
  br i1 %cmp183, label %if.then185, label %if.else187, !dbg !2760

if.then185:                                       ; preds = %if.else179
  %150 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !2761
  %flag186 = getelementptr inbounds %struct.bArmature, %struct.bArmature* %150, i32 0, i32 8, !dbg !2762
  %151 = load i32, i32* %flag186, align 8, !dbg !2762
  %152 = load i32, i32* %flag, align 4, !dbg !2763
  %153 = load i32, i32* %index, align 4, !dbg !2764
  %154 = load %struct.EditBone*, %struct.EditBone** %eBone, align 8, !dbg !2765
  call void @draw_line_bone(i32 %151, i32 %152, i16 signext 0, i32 %153, %struct.bPoseChannel* null, %struct.EditBone* %154), !dbg !2766
  br label %if.end204, !dbg !2766

if.else187:                                       ; preds = %if.else179
  %155 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !2767
  %drawtype188 = getelementptr inbounds %struct.bArmature, %struct.bArmature* %155, i32 0, i32 9, !dbg !2769
  %156 = load i32, i32* %drawtype188, align 4, !dbg !2769
  %cmp189 = icmp eq i32 %156, 4, !dbg !2770
  br i1 %cmp189, label %if.then191, label %if.else193, !dbg !2771

if.then191:                                       ; preds = %if.else187
  %157 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !2772
  %flag192 = getelementptr inbounds %struct.bArmature, %struct.bArmature* %157, i32 0, i32 8, !dbg !2773
  %158 = load i32, i32* %flag192, align 8, !dbg !2773
  %159 = load i32, i32* %flag, align 4, !dbg !2774
  %160 = load i32, i32* %index, align 4, !dbg !2775
  %161 = load %struct.EditBone*, %struct.EditBone** %eBone, align 8, !dbg !2776
  call void @draw_wire_bone(i16 signext 2, i32 %158, i32 %159, i16 signext 0, i32 %160, %struct.bPoseChannel* null, %struct.EditBone* %161), !dbg !2777
  br label %if.end203, !dbg !2777

if.else193:                                       ; preds = %if.else187
  %162 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !2778
  %drawtype194 = getelementptr inbounds %struct.bArmature, %struct.bArmature* %162, i32 0, i32 9, !dbg !2780
  %163 = load i32, i32* %drawtype194, align 4, !dbg !2780
  %cmp195 = icmp eq i32 %163, 2, !dbg !2781
  br i1 %cmp195, label %if.then197, label %if.else199, !dbg !2782

if.then197:                                       ; preds = %if.else193
  %164 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !2783
  %flag198 = getelementptr inbounds %struct.bArmature, %struct.bArmature* %164, i32 0, i32 8, !dbg !2784
  %165 = load i32, i32* %flag198, align 8, !dbg !2784
  %166 = load i32, i32* %flag, align 4, !dbg !2785
  %167 = load i32, i32* %index, align 4, !dbg !2786
  %168 = load %struct.EditBone*, %struct.EditBone** %eBone, align 8, !dbg !2787
  call void @draw_b_bone(i16 signext 2, i32 %165, i32 %166, i16 signext 0, i32 %167, %struct.bPoseChannel* null, %struct.EditBone* %168), !dbg !2788
  br label %if.end202, !dbg !2788

if.else199:                                       ; preds = %if.else193
  %169 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !2789
  %flag200 = getelementptr inbounds %struct.bArmature, %struct.bArmature* %169, i32 0, i32 8, !dbg !2790
  %170 = load i32, i32* %flag200, align 8, !dbg !2790
  %171 = load i32, i32* %flag, align 4, !dbg !2791
  %172 = load i32, i32* %index, align 4, !dbg !2792
  %173 = load %struct.EditBone*, %struct.EditBone** %eBone, align 8, !dbg !2793
  %length201 = getelementptr inbounds %struct.EditBone, %struct.EditBone* %173, i32 0, i32 14, !dbg !2794
  %174 = load float, float* %length201, align 8, !dbg !2794
  call void @draw_bone(i16 signext 2, i32 %170, i32 %171, i16 signext 0, i32 %172, float %174), !dbg !2795
  br label %if.end202

if.end202:                                        ; preds = %if.else199, %if.then197
  br label %if.end203

if.end203:                                        ; preds = %if.end202, %if.then191
  br label %if.end204

if.end204:                                        ; preds = %if.end203, %if.then185
  call void @glPopMatrix(), !dbg !2796
  br label %if.end205

if.end205:                                        ; preds = %if.end204, %if.end178
  %175 = load %struct.EditBone*, %struct.EditBone** %eBone, align 8, !dbg !2797
  %parent206 = getelementptr inbounds %struct.EditBone, %struct.EditBone* %175, i32 0, i32 3, !dbg !2799
  %176 = load %struct.EditBone*, %struct.EditBone** %parent206, align 8, !dbg !2799
  %tobool207 = icmp ne %struct.EditBone* %176, null, !dbg !2797
  br i1 %tobool207, label %if.then208, label %if.end213, !dbg !2800

if.then208:                                       ; preds = %if.end205
  call void @UI_ThemeColor(i32 27), !dbg !2801
  %call209 = call zeroext i8 @GPU_select_load_id(i32 -1), !dbg !2803
  call void @setlinestyle(i32 3), !dbg !2804
  call void @glBegin(i32 1), !dbg !2805
  %177 = load %struct.EditBone*, %struct.EditBone** %eBone, align 8, !dbg !2806
  %parent210 = getelementptr inbounds %struct.EditBone, %struct.EditBone* %177, i32 0, i32 3, !dbg !2807
  %178 = load %struct.EditBone*, %struct.EditBone** %parent210, align 8, !dbg !2807
  %tail = getelementptr inbounds %struct.EditBone, %struct.EditBone* %178, i32 0, i32 8, !dbg !2808
  %arraydecay211 = getelementptr inbounds [3 x float], [3 x float]* %tail, i64 0, i64 0, !dbg !2806
  call void @glVertex3fv(float* %arraydecay211), !dbg !2809
  %179 = load %struct.EditBone*, %struct.EditBone** %eBone, align 8, !dbg !2810
  %head = getelementptr inbounds %struct.EditBone, %struct.EditBone* %179, i32 0, i32 7, !dbg !2811
  %arraydecay212 = getelementptr inbounds [3 x float], [3 x float]* %head, i64 0, i64 0, !dbg !2810
  call void @glVertex3fv(float* %arraydecay212), !dbg !2812
  call void @glEnd(), !dbg !2813
  call void @setlinestyle(i32 0), !dbg !2814
  br label %if.end213, !dbg !2815

if.end213:                                        ; preds = %if.then208, %if.end205
  br label %if.end214, !dbg !2816

if.end214:                                        ; preds = %if.end213, %if.then136
  br label %if.end215, !dbg !2817

if.end215:                                        ; preds = %if.end214, %for.body128
  %180 = load i32, i32* %index, align 4, !dbg !2818
  %cmp216 = icmp ne i32 %180, -1, !dbg !2820
  br i1 %cmp216, label %if.then218, label %if.end220, !dbg !2821

if.then218:                                       ; preds = %if.end215
  %181 = load i32, i32* %index, align 4, !dbg !2822
  %inc219 = add i32 %181, 1, !dbg !2822
  store i32 %inc219, i32* %index, align 4, !dbg !2822
  br label %if.end220, !dbg !2823

if.end220:                                        ; preds = %if.then218, %if.end215
  br label %for.inc221, !dbg !2824

for.inc221:                                       ; preds = %if.end220
  %182 = load %struct.EditBone*, %struct.EditBone** %eBone, align 8, !dbg !2825
  %next222 = getelementptr inbounds %struct.EditBone, %struct.EditBone* %182, i32 0, i32 0, !dbg !2826
  %183 = load %struct.EditBone*, %struct.EditBone** %next222, align 8, !dbg !2826
  store %struct.EditBone* %183, %struct.EditBone** %eBone, align 8, !dbg !2827
  br label %for.cond126, !dbg !2828, !llvm.loop !2829

for.end223:                                       ; preds = %for.cond126
  %184 = load i32, i32* %index, align 4, !dbg !2831
  %cmp224 = icmp ne i32 %184, -1, !dbg !2833
  br i1 %cmp224, label %if.then226, label %if.end228, !dbg !2834

if.then226:                                       ; preds = %for.end223
  %call227 = call zeroext i8 @GPU_select_load_id(i32 -1), !dbg !2835
  br label %if.end228, !dbg !2837

if.end228:                                        ; preds = %if.then226, %for.end223
  %185 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !2838
  %drawtype229 = getelementptr inbounds %struct.bArmature, %struct.bArmature* %185, i32 0, i32 9, !dbg !2838
  %186 = load i32, i32* %drawtype229, align 4, !dbg !2838
  %cmp230 = icmp eq i32 %186, 1, !dbg !2838
  br i1 %cmp230, label %if.then236, label %lor.lhs.false232, !dbg !2838

lor.lhs.false232:                                 ; preds = %if.end228
  %187 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !2838
  %drawtype233 = getelementptr inbounds %struct.bArmature, %struct.bArmature* %187, i32 0, i32 9, !dbg !2838
  %188 = load i32, i32* %drawtype233, align 4, !dbg !2838
  %cmp234 = icmp eq i32 %188, 4, !dbg !2838
  br i1 %cmp234, label %if.then236, label %if.else237, !dbg !2840

if.then236:                                       ; preds = %lor.lhs.false232, %if.end228
  br label %if.end243, !dbg !2841

if.else237:                                       ; preds = %lor.lhs.false232
  %189 = load i16, i16* %dt.addr, align 2, !dbg !2843
  %conv238 = sext i16 %189 to i32, !dbg !2843
  %cmp239 = icmp sgt i32 %conv238, 2, !dbg !2845
  br i1 %cmp239, label %if.then241, label %if.end242, !dbg !2846

if.then241:                                       ; preds = %if.else237
  %190 = load %struct.RegionView3D*, %struct.RegionView3D** %rv3d, align 8, !dbg !2847
  call void @ED_view3d_polygon_offset(%struct.RegionView3D* %190, float 0.000000e+00), !dbg !2849
  br label %if.end242, !dbg !2850

if.end242:                                        ; preds = %if.then241, %if.else237
  br label %if.end243

if.end243:                                        ; preds = %if.end242, %if.then236
  %191 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !2851
  %flag244 = getelementptr inbounds %struct.bArmature, %struct.bArmature* %191, i32 0, i32 8, !dbg !2853
  %192 = load i32, i32* %flag244, align 8, !dbg !2853
  %and245 = and i32 %192, 12, !dbg !2854
  %tobool246 = icmp ne i32 %and245, 0, !dbg !2854
  br i1 %tobool246, label %if.then247, label %if.end314, !dbg !2855

if.then247:                                       ; preds = %if.end243
  %193 = load i32, i32* getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 15), align 8, !dbg !2856
  %and248 = and i32 %193, 32, !dbg !2859
  %cmp249 = icmp eq i32 %and248, 0, !dbg !2860
  br i1 %cmp249, label %if.then251, label %if.end313, !dbg !2861

if.then251:                                       ; preds = %if.then247
  call void @llvm.dbg.declare(metadata [3 x float]* %vec, metadata !2862, metadata !DIExpression()), !dbg !2864
  call void @llvm.dbg.declare(metadata [4 x i8]* %col, metadata !2865, metadata !DIExpression()), !dbg !2866
  %arrayidx252 = getelementptr inbounds [4 x i8], [4 x i8]* %col, i64 0, i64 3, !dbg !2867
  store i8 -1, i8* %arrayidx252, align 1, !dbg !2868
  %194 = load %struct.View3D*, %struct.View3D** %v3d.addr, align 8, !dbg !2869
  %zbuf253 = getelementptr inbounds %struct.View3D, %struct.View3D* %194, i32 0, i32 47, !dbg !2871
  %195 = load i8, i8* %zbuf253, align 8, !dbg !2871
  %tobool254 = icmp ne i8 %195, 0, !dbg !2869
  br i1 %tobool254, label %if.then255, label %if.end256, !dbg !2872

if.then255:                                       ; preds = %if.then251
  call void @glDisable(i32 2929), !dbg !2873
  br label %if.end256, !dbg !2873

if.end256:                                        ; preds = %if.then255, %if.then251
  %196 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !2874
  %edbo257 = getelementptr inbounds %struct.bArmature, %struct.bArmature* %196, i32 0, i32 4, !dbg !2876
  %197 = load %struct.ListBase*, %struct.ListBase** %edbo257, align 8, !dbg !2876
  %first258 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %197, i32 0, i32 0, !dbg !2877
  %198 = load i8*, i8** %first258, align 8, !dbg !2877
  %199 = bitcast i8* %198 to %struct.EditBone*, !dbg !2874
  store %struct.EditBone* %199, %struct.EditBone** %eBone, align 8, !dbg !2878
  br label %for.cond259, !dbg !2879

for.cond259:                                      ; preds = %for.inc306, %if.end256
  %200 = load %struct.EditBone*, %struct.EditBone** %eBone, align 8, !dbg !2880
  %tobool260 = icmp ne %struct.EditBone* %200, null, !dbg !2882
  br i1 %tobool260, label %for.body261, label %for.end308, !dbg !2882

for.body261:                                      ; preds = %for.cond259
  %201 = load %struct.EditBone*, %struct.EditBone** %eBone, align 8, !dbg !2883
  %layer262 = getelementptr inbounds %struct.EditBone, %struct.EditBone* %201, i32 0, i32 10, !dbg !2886
  %202 = load i32, i32* %layer262, align 8, !dbg !2886
  %203 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !2887
  %layer263 = getelementptr inbounds %struct.bArmature, %struct.bArmature* %203, i32 0, i32 15, !dbg !2888
  %204 = load i32, i32* %layer263, align 8, !dbg !2888
  %and264 = and i32 %202, %204, !dbg !2889
  %tobool265 = icmp ne i32 %and264, 0, !dbg !2889
  br i1 %tobool265, label %if.then266, label %if.end305, !dbg !2890

if.then266:                                       ; preds = %for.body261
  %205 = load %struct.EditBone*, %struct.EditBone** %eBone, align 8, !dbg !2891
  %flag267 = getelementptr inbounds %struct.EditBone, %struct.EditBone* %205, i32 0, i32 9, !dbg !2894
  %206 = load i32, i32* %flag267, align 4, !dbg !2894
  %and268 = and i32 %206, 1024, !dbg !2895
  %cmp269 = icmp eq i32 %and268, 0, !dbg !2896
  br i1 %cmp269, label %if.then271, label %if.end304, !dbg !2897

if.then271:                                       ; preds = %if.then266
  %207 = load %struct.EditBone*, %struct.EditBone** %eBone, align 8, !dbg !2898
  %flag272 = getelementptr inbounds %struct.EditBone, %struct.EditBone* %207, i32 0, i32 9, !dbg !2900
  %208 = load i32, i32* %flag272, align 4, !dbg !2900
  %and273 = and i32 %208, 1, !dbg !2901
  %tobool274 = icmp ne i32 %and273, 0, !dbg !2902
  %209 = zext i1 %tobool274 to i64, !dbg !2902
  %cond = select i1 %tobool274, i32 4, i32 3, !dbg !2902
  %arraydecay275 = getelementptr inbounds [4 x i8], [4 x i8]* %col, i64 0, i64 0, !dbg !2903
  call void @UI_GetThemeColor3ubv(i32 %cond, i8* %arraydecay275), !dbg !2904
  %210 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !2905
  %flag276 = getelementptr inbounds %struct.bArmature, %struct.bArmature* %210, i32 0, i32 8, !dbg !2907
  %211 = load i32, i32* %flag276, align 8, !dbg !2907
  %and277 = and i32 %211, 8, !dbg !2908
  %tobool278 = icmp ne i32 %and277, 0, !dbg !2908
  br i1 %tobool278, label %if.then279, label %if.end292, !dbg !2909

if.then279:                                       ; preds = %if.then271
  %arraydecay280 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !2910
  %212 = load %struct.EditBone*, %struct.EditBone** %eBone, align 8, !dbg !2912
  %head281 = getelementptr inbounds %struct.EditBone, %struct.EditBone* %212, i32 0, i32 7, !dbg !2913
  %arraydecay282 = getelementptr inbounds [3 x float], [3 x float]* %head281, i64 0, i64 0, !dbg !2912
  %213 = load %struct.EditBone*, %struct.EditBone** %eBone, align 8, !dbg !2914
  %tail283 = getelementptr inbounds %struct.EditBone, %struct.EditBone* %213, i32 0, i32 8, !dbg !2915
  %arraydecay284 = getelementptr inbounds [3 x float], [3 x float]* %tail283, i64 0, i64 0, !dbg !2914
  call void @mid_v3_v3v3(float* %arraydecay280, float* %arraydecay282, float* %arraydecay284), !dbg !2916
  %arraydecay285 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !2917
  call void @glRasterPos3fv(float* %arraydecay285), !dbg !2918
  %arraydecay286 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !2919
  %214 = load %struct.EditBone*, %struct.EditBone** %eBone, align 8, !dbg !2920
  %name = getelementptr inbounds %struct.EditBone, %struct.EditBone* %214, i32 0, i32 5, !dbg !2921
  %arraydecay287 = getelementptr inbounds [64 x i8], [64 x i8]* %name, i64 0, i64 0, !dbg !2920
  %215 = load %struct.EditBone*, %struct.EditBone** %eBone, align 8, !dbg !2922
  %name288 = getelementptr inbounds %struct.EditBone, %struct.EditBone* %215, i32 0, i32 5, !dbg !2923
  %arraydecay289 = getelementptr inbounds [64 x i8], [64 x i8]* %name288, i64 0, i64 0, !dbg !2922
  %call290 = call i64 @strlen(i8* %arraydecay289) #6, !dbg !2924
  %arraydecay291 = getelementptr inbounds [4 x i8], [4 x i8]* %col, i64 0, i64 0, !dbg !2925
  call void @view3d_cached_text_draw_add(float* %arraydecay286, i8* %arraydecay287, i64 %call290, i16 signext 10, i16 signext 0, i8* %arraydecay291), !dbg !2926
  br label %if.end292, !dbg !2927

if.end292:                                        ; preds = %if.then279, %if.then271
  %216 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !2928
  %flag293 = getelementptr inbounds %struct.bArmature, %struct.bArmature* %216, i32 0, i32 8, !dbg !2930
  %217 = load i32, i32* %flag293, align 8, !dbg !2930
  %and294 = and i32 %217, 4, !dbg !2931
  %tobool295 = icmp ne i32 %and294, 0, !dbg !2931
  br i1 %tobool295, label %if.then296, label %if.end303, !dbg !2932

if.then296:                                       ; preds = %if.end292
  call void @glPushMatrix(), !dbg !2933
  %218 = load %struct.EditBone*, %struct.EditBone** %eBone, align 8, !dbg !2935
  %arraydecay297 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %bmat, i64 0, i64 0, !dbg !2936
  call void @get_matrix_editbone(%struct.EditBone* %218, [4 x float]* %arraydecay297), !dbg !2937
  %arraydecay298 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %bmat, i64 0, i64 0, !dbg !2938
  %219 = load %struct.EditBone*, %struct.EditBone** %eBone, align 8, !dbg !2939
  %length299 = getelementptr inbounds %struct.EditBone, %struct.EditBone* %219, i32 0, i32 14, !dbg !2940
  %220 = load float, float* %length299, align 8, !dbg !2940
  call void @bone_matrix_translate_y([4 x float]* %arraydecay298, float %220), !dbg !2941
  %arraydecay300 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %bmat, i64 0, i64 0, !dbg !2942
  %221 = bitcast [4 x float]* %arraydecay300 to float*, !dbg !2942
  call void @glMultMatrixf(float* %221), !dbg !2942
  %arraydecay301 = getelementptr inbounds [4 x i8], [4 x i8]* %col, i64 0, i64 0, !dbg !2943
  call void @glColor3ubv(i8* %arraydecay301), !dbg !2944
  %222 = load %struct.EditBone*, %struct.EditBone** %eBone, align 8, !dbg !2945
  %length302 = getelementptr inbounds %struct.EditBone, %struct.EditBone* %222, i32 0, i32 14, !dbg !2946
  %223 = load float, float* %length302, align 8, !dbg !2946
  %mul = fmul float %223, 2.500000e-01, !dbg !2947
  call void @drawaxes(float %mul, i8 zeroext 1), !dbg !2948
  call void @glPopMatrix(), !dbg !2949
  br label %if.end303, !dbg !2950

if.end303:                                        ; preds = %if.then296, %if.end292
  br label %if.end304, !dbg !2951

if.end304:                                        ; preds = %if.end303, %if.then266
  br label %if.end305, !dbg !2952

if.end305:                                        ; preds = %if.end304, %for.body261
  br label %for.inc306, !dbg !2953

for.inc306:                                       ; preds = %if.end305
  %224 = load %struct.EditBone*, %struct.EditBone** %eBone, align 8, !dbg !2954
  %next307 = getelementptr inbounds %struct.EditBone, %struct.EditBone* %224, i32 0, i32 0, !dbg !2955
  %225 = load %struct.EditBone*, %struct.EditBone** %next307, align 8, !dbg !2955
  store %struct.EditBone* %225, %struct.EditBone** %eBone, align 8, !dbg !2956
  br label %for.cond259, !dbg !2957, !llvm.loop !2958

for.end308:                                       ; preds = %for.cond259
  %226 = load %struct.View3D*, %struct.View3D** %v3d.addr, align 8, !dbg !2960
  %zbuf309 = getelementptr inbounds %struct.View3D, %struct.View3D* %226, i32 0, i32 47, !dbg !2962
  %227 = load i8, i8* %zbuf309, align 8, !dbg !2962
  %tobool310 = icmp ne i8 %227, 0, !dbg !2960
  br i1 %tobool310, label %if.then311, label %if.end312, !dbg !2963

if.then311:                                       ; preds = %for.end308
  call void @glEnable(i32 2929), !dbg !2964
  br label %if.end312, !dbg !2964

if.end312:                                        ; preds = %if.then311, %for.end308
  br label %if.end313, !dbg !2965

if.end313:                                        ; preds = %if.end312, %if.then247
  br label %if.end314, !dbg !2966

if.end314:                                        ; preds = %if.end313, %if.end243
  ret void, !dbg !2967
}

; Function Attrs: noinline nounwind uwtable
define internal void @draw_ghost_poses_range(%struct.Scene* %scene, %struct.View3D* %v3d, %struct.ARegion* %ar, %struct.Base* %base) #0 !dbg !2968 {
entry:
  %scene.addr = alloca %struct.Scene*, align 8
  %v3d.addr = alloca %struct.View3D*, align 8
  %ar.addr = alloca %struct.ARegion*, align 8
  %base.addr = alloca %struct.Base*, align 8
  %ob = alloca %struct.Object*, align 8
  %adt = alloca %struct.AnimData*, align 8
  %arm = alloca %struct.bArmature*, align 8
  %posen = alloca %struct.bPose*, align 8
  %poseo = alloca %struct.bPose*, align 8
  %start = alloca float, align 4
  %end = alloca float, align 4
  %stepsize = alloca float, align 4
  %range = alloca float, align 4
  %colfac = alloca float, align 4
  %cfrao = alloca i32, align 4
  %flago = alloca i32, align 4
  %ipoflago = alloca i32, align 4
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !2971, metadata !DIExpression()), !dbg !2972
  store %struct.View3D* %v3d, %struct.View3D** %v3d.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.View3D** %v3d.addr, metadata !2973, metadata !DIExpression()), !dbg !2974
  store %struct.ARegion* %ar, %struct.ARegion** %ar.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar.addr, metadata !2975, metadata !DIExpression()), !dbg !2976
  store %struct.Base* %base, %struct.Base** %base.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Base** %base.addr, metadata !2977, metadata !DIExpression()), !dbg !2978
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !2979, metadata !DIExpression()), !dbg !2980
  %0 = load %struct.Base*, %struct.Base** %base.addr, align 8, !dbg !2981
  %object = getelementptr inbounds %struct.Base, %struct.Base* %0, i32 0, i32 7, !dbg !2982
  %1 = load %struct.Object*, %struct.Object** %object, align 8, !dbg !2982
  store %struct.Object* %1, %struct.Object** %ob, align 8, !dbg !2980
  call void @llvm.dbg.declare(metadata %struct.AnimData** %adt, metadata !2983, metadata !DIExpression()), !dbg !2986
  %2 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !2987
  %id = getelementptr inbounds %struct.Object, %struct.Object* %2, i32 0, i32 0, !dbg !2988
  %call = call %struct.AnimData* @BKE_animdata_from_id(%struct.ID* %id), !dbg !2989
  store %struct.AnimData* %call, %struct.AnimData** %adt, align 8, !dbg !2986
  call void @llvm.dbg.declare(metadata %struct.bArmature** %arm, metadata !2990, metadata !DIExpression()), !dbg !2991
  %3 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !2992
  %data = getelementptr inbounds %struct.Object, %struct.Object* %3, i32 0, i32 19, !dbg !2993
  %4 = load i8*, i8** %data, align 8, !dbg !2993
  %5 = bitcast i8* %4 to %struct.bArmature*, !dbg !2992
  store %struct.bArmature* %5, %struct.bArmature** %arm, align 8, !dbg !2991
  call void @llvm.dbg.declare(metadata %struct.bPose** %posen, metadata !2994, metadata !DIExpression()), !dbg !2997
  call void @llvm.dbg.declare(metadata %struct.bPose** %poseo, metadata !2998, metadata !DIExpression()), !dbg !2999
  call void @llvm.dbg.declare(metadata float* %start, metadata !3000, metadata !DIExpression()), !dbg !3001
  call void @llvm.dbg.declare(metadata float* %end, metadata !3002, metadata !DIExpression()), !dbg !3003
  call void @llvm.dbg.declare(metadata float* %stepsize, metadata !3004, metadata !DIExpression()), !dbg !3005
  call void @llvm.dbg.declare(metadata float* %range, metadata !3006, metadata !DIExpression()), !dbg !3007
  call void @llvm.dbg.declare(metadata float* %colfac, metadata !3008, metadata !DIExpression()), !dbg !3009
  call void @llvm.dbg.declare(metadata i32* %cfrao, metadata !3010, metadata !DIExpression()), !dbg !3011
  call void @llvm.dbg.declare(metadata i32* %flago, metadata !3012, metadata !DIExpression()), !dbg !3013
  call void @llvm.dbg.declare(metadata i32* %ipoflago, metadata !3014, metadata !DIExpression()), !dbg !3015
  %6 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !3016
  %ghostsf = getelementptr inbounds %struct.bArmature, %struct.bArmature* %6, i32 0, i32 21, !dbg !3017
  %7 = load i32, i32* %ghostsf, align 8, !dbg !3017
  %conv = sitofp i32 %7 to float, !dbg !3018
  store float %conv, float* %start, align 4, !dbg !3019
  %8 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !3020
  %ghostef = getelementptr inbounds %struct.bArmature, %struct.bArmature* %8, i32 0, i32 22, !dbg !3021
  %9 = load i32, i32* %ghostef, align 4, !dbg !3021
  %conv1 = sitofp i32 %9 to float, !dbg !3022
  store float %conv1, float* %end, align 4, !dbg !3023
  %10 = load float, float* %end, align 4, !dbg !3024
  %11 = load float, float* %start, align 4, !dbg !3026
  %cmp = fcmp ole float %10, %11, !dbg !3027
  br i1 %cmp, label %if.then, label %if.end, !dbg !3028

if.then:                                          ; preds = %entry
  br label %return, !dbg !3029

if.end:                                           ; preds = %entry
  %12 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !3030
  %ghostsize = getelementptr inbounds %struct.bArmature, %struct.bArmature* %12, i32 0, i32 18, !dbg !3031
  %13 = load i16, i16* %ghostsize, align 2, !dbg !3031
  %conv3 = sitofp i16 %13 to float, !dbg !3032
  store float %conv3, float* %stepsize, align 4, !dbg !3033
  %14 = load float, float* %end, align 4, !dbg !3034
  %15 = load float, float* %start, align 4, !dbg !3035
  %sub = fsub float %14, %15, !dbg !3036
  store float %sub, float* %range, align 4, !dbg !3037
  %16 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !3038
  %mode = getelementptr inbounds %struct.Object, %struct.Object* %16, i32 0, i32 27, !dbg !3039
  %17 = load i32, i32* %mode, align 8, !dbg !3040
  %and = and i32 %17, -65, !dbg !3040
  store i32 %and, i32* %mode, align 8, !dbg !3040
  %18 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !3041
  %r = getelementptr inbounds %struct.Scene, %struct.Scene* %18, i32 0, i32 22, !dbg !3041
  %cfra = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r, i32 0, i32 5, !dbg !3041
  %19 = load i32, i32* %cfra, align 8, !dbg !3041
  store i32 %19, i32* %cfrao, align 4, !dbg !3042
  %20 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !3043
  %flag = getelementptr inbounds %struct.bArmature, %struct.bArmature* %20, i32 0, i32 8, !dbg !3044
  %21 = load i32, i32* %flag, align 8, !dbg !3044
  store i32 %21, i32* %flago, align 4, !dbg !3045
  %22 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !3046
  %flag4 = getelementptr inbounds %struct.bArmature, %struct.bArmature* %22, i32 0, i32 8, !dbg !3047
  %23 = load i32, i32* %flag4, align 8, !dbg !3048
  %and5 = and i32 %23, -13, !dbg !3048
  store i32 %and5, i32* %flag4, align 8, !dbg !3048
  %24 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !3049
  %ipoflag = getelementptr inbounds %struct.Object, %struct.Object* %24, i32 0, i32 60, !dbg !3050
  %25 = load i16, i16* %ipoflag, align 2, !dbg !3050
  %conv6 = sext i16 %25 to i32, !dbg !3049
  store i32 %conv6, i32* %ipoflago, align 4, !dbg !3051
  %26 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !3052
  %ipoflag7 = getelementptr inbounds %struct.Object, %struct.Object* %26, i32 0, i32 60, !dbg !3053
  %27 = load i16, i16* %ipoflag7, align 2, !dbg !3054
  %conv8 = sext i16 %27 to i32, !dbg !3054
  %or = or i32 %conv8, 1024, !dbg !3054
  %conv9 = trunc i32 %or to i16, !dbg !3054
  store i16 %conv9, i16* %ipoflag7, align 2, !dbg !3054
  %28 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !3055
  %pose = getelementptr inbounds %struct.Object, %struct.Object* %28, i32 0, i32 18, !dbg !3056
  %29 = load %struct.bPose*, %struct.bPose** %pose, align 8, !dbg !3056
  store %struct.bPose* %29, %struct.bPose** %poseo, align 8, !dbg !3057
  %30 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !3058
  %pose10 = getelementptr inbounds %struct.Object, %struct.Object* %30, i32 0, i32 18, !dbg !3059
  %31 = load %struct.bPose*, %struct.bPose** %pose10, align 8, !dbg !3059
  call void @BKE_pose_copy_data(%struct.bPose** %posen, %struct.bPose* %31, i8 zeroext 1), !dbg !3060
  %32 = load %struct.bPose*, %struct.bPose** %posen, align 8, !dbg !3061
  %33 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !3062
  %pose11 = getelementptr inbounds %struct.Object, %struct.Object* %33, i32 0, i32 18, !dbg !3063
  store %struct.bPose* %32, %struct.bPose** %pose11, align 8, !dbg !3064
  %34 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !3065
  %35 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !3066
  %data12 = getelementptr inbounds %struct.Object, %struct.Object* %35, i32 0, i32 19, !dbg !3067
  %36 = load i8*, i8** %data12, align 8, !dbg !3067
  %37 = bitcast i8* %36 to %struct.bArmature*, !dbg !3066
  call void @BKE_pose_rebuild(%struct.Object* %34, %struct.bArmature* %37), !dbg !3068
  %38 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !3069
  call void @ghost_poses_tag_unselected(%struct.Object* %38, i16 signext 0), !dbg !3070
  call void @glEnable(i32 3042), !dbg !3071
  %39 = load %struct.View3D*, %struct.View3D** %v3d.addr, align 8, !dbg !3072
  %zbuf = getelementptr inbounds %struct.View3D, %struct.View3D* %39, i32 0, i32 47, !dbg !3074
  %40 = load i8, i8* %zbuf, align 8, !dbg !3074
  %tobool = icmp ne i8 %40, 0, !dbg !3072
  br i1 %tobool, label %if.then13, label %if.end14, !dbg !3075

if.then13:                                        ; preds = %if.end
  call void @glDisable(i32 2929), !dbg !3076
  br label %if.end14, !dbg !3076

if.end14:                                         ; preds = %if.then13, %if.end
  %41 = load float, float* %start, align 4, !dbg !3077
  %conv15 = fptosi float %41 to i32, !dbg !3079
  %42 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !3080
  %r16 = getelementptr inbounds %struct.Scene, %struct.Scene* %42, i32 0, i32 22, !dbg !3080
  %cfra17 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r16, i32 0, i32 5, !dbg !3080
  store i32 %conv15, i32* %cfra17, align 8, !dbg !3081
  br label %for.cond, !dbg !3080

for.cond:                                         ; preds = %for.inc, %if.end14
  %43 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !3082
  %r18 = getelementptr inbounds %struct.Scene, %struct.Scene* %43, i32 0, i32 22, !dbg !3082
  %cfra19 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r18, i32 0, i32 5, !dbg !3082
  %44 = load i32, i32* %cfra19, align 8, !dbg !3082
  %conv20 = sitofp i32 %44 to float, !dbg !3082
  %45 = load float, float* %end, align 4, !dbg !3084
  %cmp21 = fcmp olt float %conv20, %45, !dbg !3085
  br i1 %cmp21, label %for.body, label %for.end, !dbg !3086

for.body:                                         ; preds = %for.cond
  %46 = load float, float* %end, align 4, !dbg !3087
  %47 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !3089
  %r23 = getelementptr inbounds %struct.Scene, %struct.Scene* %47, i32 0, i32 22, !dbg !3089
  %cfra24 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r23, i32 0, i32 5, !dbg !3089
  %48 = load i32, i32* %cfra24, align 8, !dbg !3089
  %conv25 = sitofp i32 %48 to float, !dbg !3090
  %sub26 = fsub float %46, %conv25, !dbg !3091
  %49 = load float, float* %range, align 4, !dbg !3092
  %div = fdiv float %sub26, %49, !dbg !3093
  store float %div, float* %colfac, align 4, !dbg !3094
  %50 = load float, float* %colfac, align 4, !dbg !3095
  %call27 = call float @sqrtf(float %50) #7, !dbg !3096
  %mul = fmul float 1.200000e+02, %call27, !dbg !3097
  %conv28 = fptosi float %mul to i32, !dbg !3098
  %sub29 = sub nsw i32 -128, %conv28, !dbg !3099
  call void @UI_ThemeColorShadeAlpha(i32 25, i32 0, i32 %sub29), !dbg !3100
  %51 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !3101
  %52 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !3102
  %id30 = getelementptr inbounds %struct.Object, %struct.Object* %52, i32 0, i32 0, !dbg !3103
  %53 = load %struct.AnimData*, %struct.AnimData** %adt, align 8, !dbg !3104
  %54 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !3105
  %r31 = getelementptr inbounds %struct.Scene, %struct.Scene* %54, i32 0, i32 22, !dbg !3105
  %cfra32 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r31, i32 0, i32 5, !dbg !3105
  %55 = load i32, i32* %cfra32, align 8, !dbg !3105
  %conv33 = sitofp i32 %55 to float, !dbg !3106
  call void @BKE_animsys_evaluate_animdata(%struct.Scene* %51, %struct.ID* %id30, %struct.AnimData* %53, float %conv33, i16 signext 3), !dbg !3107
  %56 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !3108
  %57 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !3109
  call void @BKE_pose_where_is(%struct.Scene* %56, %struct.Object* %57), !dbg !3110
  %58 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !3111
  %59 = load %struct.View3D*, %struct.View3D** %v3d.addr, align 8, !dbg !3112
  %60 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !3113
  %61 = load %struct.Base*, %struct.Base** %base.addr, align 8, !dbg !3114
  call void @draw_pose_bones(%struct.Scene* %58, %struct.View3D* %59, %struct.ARegion* %60, %struct.Base* %61, i16 signext 2, i8* null, i8 zeroext 1, i8 zeroext 0), !dbg !3115
  br label %for.inc, !dbg !3116

for.inc:                                          ; preds = %for.body
  %62 = load float, float* %stepsize, align 4, !dbg !3117
  %conv34 = fptosi float %62 to i32, !dbg !3118
  %63 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !3119
  %r35 = getelementptr inbounds %struct.Scene, %struct.Scene* %63, i32 0, i32 22, !dbg !3119
  %cfra36 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r35, i32 0, i32 5, !dbg !3119
  %64 = load i32, i32* %cfra36, align 8, !dbg !3120
  %add = add nsw i32 %64, %conv34, !dbg !3120
  store i32 %add, i32* %cfra36, align 8, !dbg !3120
  br label %for.cond, !dbg !3121, !llvm.loop !3122

for.end:                                          ; preds = %for.cond
  call void @glDisable(i32 3042), !dbg !3124
  %65 = load %struct.View3D*, %struct.View3D** %v3d.addr, align 8, !dbg !3125
  %zbuf37 = getelementptr inbounds %struct.View3D, %struct.View3D* %65, i32 0, i32 47, !dbg !3127
  %66 = load i8, i8* %zbuf37, align 8, !dbg !3127
  %tobool38 = icmp ne i8 %66, 0, !dbg !3125
  br i1 %tobool38, label %if.then39, label %if.end40, !dbg !3128

if.then39:                                        ; preds = %for.end
  call void @glEnable(i32 2929), !dbg !3129
  br label %if.end40, !dbg !3129

if.end40:                                         ; preds = %if.then39, %for.end
  %67 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !3130
  %68 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !3131
  %id41 = getelementptr inbounds %struct.Object, %struct.Object* %68, i32 0, i32 0, !dbg !3132
  %69 = load %struct.AnimData*, %struct.AnimData** %adt, align 8, !dbg !3133
  %70 = load i32, i32* %cfrao, align 4, !dbg !3134
  %conv42 = sitofp i32 %70 to float, !dbg !3135
  call void @BKE_animsys_evaluate_animdata(%struct.Scene* %67, %struct.ID* %id41, %struct.AnimData* %69, float %conv42, i16 signext 3), !dbg !3136
  %71 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !3137
  call void @ghost_poses_tag_unselected(%struct.Object* %71, i16 signext 1), !dbg !3138
  %72 = load %struct.bPose*, %struct.bPose** %posen, align 8, !dbg !3139
  call void @BKE_pose_free(%struct.bPose* %72), !dbg !3140
  %73 = load i32, i32* %cfrao, align 4, !dbg !3141
  %74 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !3142
  %r43 = getelementptr inbounds %struct.Scene, %struct.Scene* %74, i32 0, i32 22, !dbg !3142
  %cfra44 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r43, i32 0, i32 5, !dbg !3142
  store i32 %73, i32* %cfra44, align 8, !dbg !3143
  %75 = load %struct.bPose*, %struct.bPose** %poseo, align 8, !dbg !3144
  %76 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !3145
  %pose45 = getelementptr inbounds %struct.Object, %struct.Object* %76, i32 0, i32 18, !dbg !3146
  store %struct.bPose* %75, %struct.bPose** %pose45, align 8, !dbg !3147
  %77 = load i32, i32* %flago, align 4, !dbg !3148
  %78 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !3149
  %flag46 = getelementptr inbounds %struct.bArmature, %struct.bArmature* %78, i32 0, i32 8, !dbg !3150
  store i32 %77, i32* %flag46, align 8, !dbg !3151
  %79 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !3152
  %mode47 = getelementptr inbounds %struct.Object, %struct.Object* %79, i32 0, i32 27, !dbg !3153
  %80 = load i32, i32* %mode47, align 8, !dbg !3154
  %or48 = or i32 %80, 64, !dbg !3154
  store i32 %or48, i32* %mode47, align 8, !dbg !3154
  %81 = load i32, i32* %ipoflago, align 4, !dbg !3155
  %conv49 = trunc i32 %81 to i16, !dbg !3155
  %82 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !3156
  %ipoflag50 = getelementptr inbounds %struct.Object, %struct.Object* %82, i32 0, i32 60, !dbg !3157
  store i16 %conv49, i16* %ipoflag50, align 2, !dbg !3158
  br label %return, !dbg !3159

return:                                           ; preds = %if.end40, %if.then
  ret void, !dbg !3159
}

; Function Attrs: noinline nounwind uwtable
define internal void @draw_ghost_poses_keys(%struct.Scene* %scene, %struct.View3D* %v3d, %struct.ARegion* %ar, %struct.Base* %base) #0 !dbg !3160 {
entry:
  %scene.addr = alloca %struct.Scene*, align 8
  %v3d.addr = alloca %struct.View3D*, align 8
  %ar.addr = alloca %struct.ARegion*, align 8
  %base.addr = alloca %struct.Base*, align 8
  %ob = alloca %struct.Object*, align 8
  %adt = alloca %struct.AnimData*, align 8
  %act = alloca %struct.bAction*, align 8
  %arm = alloca %struct.bArmature*, align 8
  %posen = alloca %struct.bPose*, align 8
  %poseo = alloca %struct.bPose*, align 8
  %keys = alloca %struct.DLRBT_Tree, align 8
  %ak = alloca %struct.ActKeyColumn*, align 8
  %akn = alloca %struct.ActKeyColumn*, align 8
  %start = alloca float, align 4
  %end = alloca float, align 4
  %range = alloca float, align 4
  %colfac = alloca float, align 4
  %i = alloca float, align 4
  %cfrao = alloca i32, align 4
  %flago = alloca i32, align 4
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !3161, metadata !DIExpression()), !dbg !3162
  store %struct.View3D* %v3d, %struct.View3D** %v3d.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.View3D** %v3d.addr, metadata !3163, metadata !DIExpression()), !dbg !3164
  store %struct.ARegion* %ar, %struct.ARegion** %ar.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar.addr, metadata !3165, metadata !DIExpression()), !dbg !3166
  store %struct.Base* %base, %struct.Base** %base.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Base** %base.addr, metadata !3167, metadata !DIExpression()), !dbg !3168
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !3169, metadata !DIExpression()), !dbg !3170
  %0 = load %struct.Base*, %struct.Base** %base.addr, align 8, !dbg !3171
  %object = getelementptr inbounds %struct.Base, %struct.Base* %0, i32 0, i32 7, !dbg !3172
  %1 = load %struct.Object*, %struct.Object** %object, align 8, !dbg !3172
  store %struct.Object* %1, %struct.Object** %ob, align 8, !dbg !3170
  call void @llvm.dbg.declare(metadata %struct.AnimData** %adt, metadata !3173, metadata !DIExpression()), !dbg !3174
  %2 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !3175
  %id = getelementptr inbounds %struct.Object, %struct.Object* %2, i32 0, i32 0, !dbg !3176
  %call = call %struct.AnimData* @BKE_animdata_from_id(%struct.ID* %id), !dbg !3177
  store %struct.AnimData* %call, %struct.AnimData** %adt, align 8, !dbg !3174
  call void @llvm.dbg.declare(metadata %struct.bAction** %act, metadata !3178, metadata !DIExpression()), !dbg !3179
  %3 = load %struct.AnimData*, %struct.AnimData** %adt, align 8, !dbg !3180
  %tobool = icmp ne %struct.AnimData* %3, null, !dbg !3181
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !3181

cond.true:                                        ; preds = %entry
  %4 = load %struct.AnimData*, %struct.AnimData** %adt, align 8, !dbg !3182
  %action = getelementptr inbounds %struct.AnimData, %struct.AnimData* %4, i32 0, i32 0, !dbg !3183
  %5 = load %struct.bAction*, %struct.bAction** %action, align 8, !dbg !3183
  br label %cond.end, !dbg !3181

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !3181

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.bAction* [ %5, %cond.true ], [ null, %cond.false ], !dbg !3181
  store %struct.bAction* %cond, %struct.bAction** %act, align 8, !dbg !3179
  call void @llvm.dbg.declare(metadata %struct.bArmature** %arm, metadata !3184, metadata !DIExpression()), !dbg !3185
  %6 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !3186
  %data = getelementptr inbounds %struct.Object, %struct.Object* %6, i32 0, i32 19, !dbg !3187
  %7 = load i8*, i8** %data, align 8, !dbg !3187
  %8 = bitcast i8* %7 to %struct.bArmature*, !dbg !3186
  store %struct.bArmature* %8, %struct.bArmature** %arm, align 8, !dbg !3185
  call void @llvm.dbg.declare(metadata %struct.bPose** %posen, metadata !3188, metadata !DIExpression()), !dbg !3189
  call void @llvm.dbg.declare(metadata %struct.bPose** %poseo, metadata !3190, metadata !DIExpression()), !dbg !3191
  call void @llvm.dbg.declare(metadata %struct.DLRBT_Tree* %keys, metadata !3192, metadata !DIExpression()), !dbg !3200
  call void @llvm.dbg.declare(metadata %struct.ActKeyColumn** %ak, metadata !3201, metadata !DIExpression()), !dbg !3219
  call void @llvm.dbg.declare(metadata %struct.ActKeyColumn** %akn, metadata !3220, metadata !DIExpression()), !dbg !3221
  call void @llvm.dbg.declare(metadata float* %start, metadata !3222, metadata !DIExpression()), !dbg !3223
  call void @llvm.dbg.declare(metadata float* %end, metadata !3224, metadata !DIExpression()), !dbg !3225
  call void @llvm.dbg.declare(metadata float* %range, metadata !3226, metadata !DIExpression()), !dbg !3227
  call void @llvm.dbg.declare(metadata float* %colfac, metadata !3228, metadata !DIExpression()), !dbg !3229
  call void @llvm.dbg.declare(metadata float* %i, metadata !3230, metadata !DIExpression()), !dbg !3231
  call void @llvm.dbg.declare(metadata i32* %cfrao, metadata !3232, metadata !DIExpression()), !dbg !3233
  call void @llvm.dbg.declare(metadata i32* %flago, metadata !3234, metadata !DIExpression()), !dbg !3235
  %9 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !3236
  %ghostsf = getelementptr inbounds %struct.bArmature, %struct.bArmature* %9, i32 0, i32 21, !dbg !3237
  %10 = load i32, i32* %ghostsf, align 8, !dbg !3237
  %conv = sitofp i32 %10 to float, !dbg !3238
  store float %conv, float* %start, align 4, !dbg !3239
  %11 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !3240
  %ghostef = getelementptr inbounds %struct.bArmature, %struct.bArmature* %11, i32 0, i32 22, !dbg !3241
  %12 = load i32, i32* %ghostef, align 4, !dbg !3241
  %conv1 = sitofp i32 %12 to float, !dbg !3242
  store float %conv1, float* %end, align 4, !dbg !3243
  %13 = load float, float* %end, align 4, !dbg !3244
  %14 = load float, float* %start, align 4, !dbg !3246
  %cmp = fcmp ole float %13, %14, !dbg !3247
  br i1 %cmp, label %if.then, label %if.end, !dbg !3248

if.then:                                          ; preds = %cond.end
  br label %return, !dbg !3249

if.end:                                           ; preds = %cond.end
  call void @BLI_dlrbTree_init(%struct.DLRBT_Tree* %keys), !dbg !3250
  %15 = load %struct.AnimData*, %struct.AnimData** %adt, align 8, !dbg !3251
  %16 = load %struct.bAction*, %struct.bAction** %act, align 8, !dbg !3252
  call void @action_to_keylist(%struct.AnimData* %15, %struct.bAction* %16, %struct.DLRBT_Tree* %keys, %struct.DLRBT_Tree* null), !dbg !3253
  call void @BLI_dlrbTree_linkedlist_sync(%struct.DLRBT_Tree* %keys), !dbg !3254
  store float 0.000000e+00, float* %range, align 4, !dbg !3255
  %first = getelementptr inbounds %struct.DLRBT_Tree, %struct.DLRBT_Tree* %keys, i32 0, i32 0, !dbg !3256
  %17 = load i8*, i8** %first, align 8, !dbg !3256
  %18 = bitcast i8* %17 to %struct.ActKeyColumn*, !dbg !3258
  store %struct.ActKeyColumn* %18, %struct.ActKeyColumn** %ak, align 8, !dbg !3259
  br label %for.cond, !dbg !3260

for.cond:                                         ; preds = %for.inc, %if.end
  %19 = load %struct.ActKeyColumn*, %struct.ActKeyColumn** %ak, align 8, !dbg !3261
  %tobool3 = icmp ne %struct.ActKeyColumn* %19, null, !dbg !3263
  br i1 %tobool3, label %for.body, label %for.end, !dbg !3263

for.body:                                         ; preds = %for.cond
  %20 = load %struct.ActKeyColumn*, %struct.ActKeyColumn** %ak, align 8, !dbg !3264
  %next = getelementptr inbounds %struct.ActKeyColumn, %struct.ActKeyColumn* %20, i32 0, i32 0, !dbg !3266
  %21 = load %struct.ActKeyColumn*, %struct.ActKeyColumn** %next, align 8, !dbg !3266
  store %struct.ActKeyColumn* %21, %struct.ActKeyColumn** %akn, align 8, !dbg !3267
  %22 = load %struct.ActKeyColumn*, %struct.ActKeyColumn** %ak, align 8, !dbg !3268
  %cfra = getelementptr inbounds %struct.ActKeyColumn, %struct.ActKeyColumn* %22, i32 0, i32 8, !dbg !3270
  %23 = load float, float* %cfra, align 4, !dbg !3270
  %24 = load float, float* %start, align 4, !dbg !3271
  %cmp4 = fcmp olt float %23, %24, !dbg !3272
  br i1 %cmp4, label %if.then9, label %lor.lhs.false, !dbg !3273

lor.lhs.false:                                    ; preds = %for.body
  %25 = load %struct.ActKeyColumn*, %struct.ActKeyColumn** %ak, align 8, !dbg !3274
  %cfra6 = getelementptr inbounds %struct.ActKeyColumn, %struct.ActKeyColumn* %25, i32 0, i32 8, !dbg !3275
  %26 = load float, float* %cfra6, align 4, !dbg !3275
  %27 = load float, float* %end, align 4, !dbg !3276
  %cmp7 = fcmp ogt float %26, %27, !dbg !3277
  br i1 %cmp7, label %if.then9, label %if.else, !dbg !3278

if.then9:                                         ; preds = %lor.lhs.false, %for.body
  %28 = bitcast %struct.DLRBT_Tree* %keys to %struct.ListBase*, !dbg !3279
  %29 = load %struct.ActKeyColumn*, %struct.ActKeyColumn** %ak, align 8, !dbg !3280
  %30 = bitcast %struct.ActKeyColumn* %29 to i8*, !dbg !3280
  call void @BLI_freelinkN(%struct.ListBase* %28, i8* %30), !dbg !3281
  br label %if.end10, !dbg !3281

if.else:                                          ; preds = %lor.lhs.false
  %31 = load float, float* %range, align 4, !dbg !3282
  %inc = fadd float %31, 1.000000e+00, !dbg !3282
  store float %inc, float* %range, align 4, !dbg !3282
  br label %if.end10

if.end10:                                         ; preds = %if.else, %if.then9
  br label %for.inc, !dbg !3283

for.inc:                                          ; preds = %if.end10
  %32 = load %struct.ActKeyColumn*, %struct.ActKeyColumn** %akn, align 8, !dbg !3284
  store %struct.ActKeyColumn* %32, %struct.ActKeyColumn** %ak, align 8, !dbg !3285
  br label %for.cond, !dbg !3286, !llvm.loop !3287

for.end:                                          ; preds = %for.cond
  %33 = load float, float* %range, align 4, !dbg !3289
  %cmp11 = fcmp oeq float %33, 0.000000e+00, !dbg !3291
  br i1 %cmp11, label %if.then13, label %if.end14, !dbg !3292

if.then13:                                        ; preds = %for.end
  br label %return, !dbg !3293

if.end14:                                         ; preds = %for.end
  %34 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !3294
  %mode = getelementptr inbounds %struct.Object, %struct.Object* %34, i32 0, i32 27, !dbg !3295
  %35 = load i32, i32* %mode, align 8, !dbg !3296
  %and = and i32 %35, -65, !dbg !3296
  store i32 %and, i32* %mode, align 8, !dbg !3296
  %36 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !3297
  %r = getelementptr inbounds %struct.Scene, %struct.Scene* %36, i32 0, i32 22, !dbg !3297
  %cfra15 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r, i32 0, i32 5, !dbg !3297
  %37 = load i32, i32* %cfra15, align 8, !dbg !3297
  store i32 %37, i32* %cfrao, align 4, !dbg !3298
  %38 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !3299
  %flag = getelementptr inbounds %struct.bArmature, %struct.bArmature* %38, i32 0, i32 8, !dbg !3300
  %39 = load i32, i32* %flag, align 8, !dbg !3300
  store i32 %39, i32* %flago, align 4, !dbg !3301
  %40 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !3302
  %flag16 = getelementptr inbounds %struct.bArmature, %struct.bArmature* %40, i32 0, i32 8, !dbg !3303
  %41 = load i32, i32* %flag16, align 8, !dbg !3304
  %and17 = and i32 %41, -13, !dbg !3304
  store i32 %and17, i32* %flag16, align 8, !dbg !3304
  %42 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !3305
  %ipoflag = getelementptr inbounds %struct.Object, %struct.Object* %42, i32 0, i32 60, !dbg !3306
  %43 = load i16, i16* %ipoflag, align 2, !dbg !3307
  %conv18 = sext i16 %43 to i32, !dbg !3307
  %or = or i32 %conv18, 1024, !dbg !3307
  %conv19 = trunc i32 %or to i16, !dbg !3307
  store i16 %conv19, i16* %ipoflag, align 2, !dbg !3307
  %44 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !3308
  %pose = getelementptr inbounds %struct.Object, %struct.Object* %44, i32 0, i32 18, !dbg !3309
  %45 = load %struct.bPose*, %struct.bPose** %pose, align 8, !dbg !3309
  store %struct.bPose* %45, %struct.bPose** %poseo, align 8, !dbg !3310
  %46 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !3311
  %pose20 = getelementptr inbounds %struct.Object, %struct.Object* %46, i32 0, i32 18, !dbg !3312
  %47 = load %struct.bPose*, %struct.bPose** %pose20, align 8, !dbg !3312
  call void @BKE_pose_copy_data(%struct.bPose** %posen, %struct.bPose* %47, i8 zeroext 1), !dbg !3313
  %48 = load %struct.bPose*, %struct.bPose** %posen, align 8, !dbg !3314
  %49 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !3315
  %pose21 = getelementptr inbounds %struct.Object, %struct.Object* %49, i32 0, i32 18, !dbg !3316
  store %struct.bPose* %48, %struct.bPose** %pose21, align 8, !dbg !3317
  %50 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !3318
  %51 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !3319
  %data22 = getelementptr inbounds %struct.Object, %struct.Object* %51, i32 0, i32 19, !dbg !3320
  %52 = load i8*, i8** %data22, align 8, !dbg !3320
  %53 = bitcast i8* %52 to %struct.bArmature*, !dbg !3319
  call void @BKE_pose_rebuild(%struct.Object* %50, %struct.bArmature* %53), !dbg !3321
  %54 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !3322
  call void @ghost_poses_tag_unselected(%struct.Object* %54, i16 signext 0), !dbg !3323
  call void @glEnable(i32 3042), !dbg !3324
  %55 = load %struct.View3D*, %struct.View3D** %v3d.addr, align 8, !dbg !3325
  %zbuf = getelementptr inbounds %struct.View3D, %struct.View3D* %55, i32 0, i32 47, !dbg !3327
  %56 = load i8, i8* %zbuf, align 8, !dbg !3327
  %tobool23 = icmp ne i8 %56, 0, !dbg !3325
  br i1 %tobool23, label %if.then24, label %if.end25, !dbg !3328

if.then24:                                        ; preds = %if.end14
  call void @glDisable(i32 2929), !dbg !3329
  br label %if.end25, !dbg !3329

if.end25:                                         ; preds = %if.then24, %if.end14
  %first26 = getelementptr inbounds %struct.DLRBT_Tree, %struct.DLRBT_Tree* %keys, i32 0, i32 0, !dbg !3330
  %57 = load i8*, i8** %first26, align 8, !dbg !3330
  %58 = bitcast i8* %57 to %struct.ActKeyColumn*, !dbg !3332
  store %struct.ActKeyColumn* %58, %struct.ActKeyColumn** %ak, align 8, !dbg !3333
  store float 0.000000e+00, float* %i, align 4, !dbg !3334
  br label %for.cond27, !dbg !3335

for.cond27:                                       ; preds = %for.inc40, %if.end25
  %59 = load %struct.ActKeyColumn*, %struct.ActKeyColumn** %ak, align 8, !dbg !3336
  %tobool28 = icmp ne %struct.ActKeyColumn* %59, null, !dbg !3338
  br i1 %tobool28, label %for.body29, label %for.end43, !dbg !3338

for.body29:                                       ; preds = %for.cond27
  %60 = load float, float* %i, align 4, !dbg !3339
  %61 = load float, float* %range, align 4, !dbg !3341
  %div = fdiv float %60, %61, !dbg !3342
  store float %div, float* %colfac, align 4, !dbg !3343
  %62 = load float, float* %colfac, align 4, !dbg !3344
  %call30 = call float @sqrtf(float %62) #7, !dbg !3345
  %mul = fmul float 1.200000e+02, %call30, !dbg !3346
  %conv31 = fptosi float %mul to i32, !dbg !3347
  %sub = sub nsw i32 -128, %conv31, !dbg !3348
  call void @UI_ThemeColorShadeAlpha(i32 25, i32 0, i32 %sub), !dbg !3349
  %63 = load %struct.ActKeyColumn*, %struct.ActKeyColumn** %ak, align 8, !dbg !3350
  %cfra32 = getelementptr inbounds %struct.ActKeyColumn, %struct.ActKeyColumn* %63, i32 0, i32 8, !dbg !3351
  %64 = load float, float* %cfra32, align 4, !dbg !3351
  %conv33 = fptosi float %64 to i32, !dbg !3352
  %65 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !3353
  %r34 = getelementptr inbounds %struct.Scene, %struct.Scene* %65, i32 0, i32 22, !dbg !3353
  %cfra35 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r34, i32 0, i32 5, !dbg !3353
  store i32 %conv33, i32* %cfra35, align 8, !dbg !3354
  %66 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !3355
  %67 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !3356
  %id36 = getelementptr inbounds %struct.Object, %struct.Object* %67, i32 0, i32 0, !dbg !3357
  %68 = load %struct.AnimData*, %struct.AnimData** %adt, align 8, !dbg !3358
  %69 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !3359
  %r37 = getelementptr inbounds %struct.Scene, %struct.Scene* %69, i32 0, i32 22, !dbg !3359
  %cfra38 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r37, i32 0, i32 5, !dbg !3359
  %70 = load i32, i32* %cfra38, align 8, !dbg !3359
  %conv39 = sitofp i32 %70 to float, !dbg !3360
  call void @BKE_animsys_evaluate_animdata(%struct.Scene* %66, %struct.ID* %id36, %struct.AnimData* %68, float %conv39, i16 signext 3), !dbg !3361
  %71 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !3362
  %72 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !3363
  call void @BKE_pose_where_is(%struct.Scene* %71, %struct.Object* %72), !dbg !3364
  %73 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !3365
  %74 = load %struct.View3D*, %struct.View3D** %v3d.addr, align 8, !dbg !3366
  %75 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !3367
  %76 = load %struct.Base*, %struct.Base** %base.addr, align 8, !dbg !3368
  call void @draw_pose_bones(%struct.Scene* %73, %struct.View3D* %74, %struct.ARegion* %75, %struct.Base* %76, i16 signext 2, i8* null, i8 zeroext 1, i8 zeroext 0), !dbg !3369
  br label %for.inc40, !dbg !3370

for.inc40:                                        ; preds = %for.body29
  %77 = load %struct.ActKeyColumn*, %struct.ActKeyColumn** %ak, align 8, !dbg !3371
  %next41 = getelementptr inbounds %struct.ActKeyColumn, %struct.ActKeyColumn* %77, i32 0, i32 0, !dbg !3372
  %78 = load %struct.ActKeyColumn*, %struct.ActKeyColumn** %next41, align 8, !dbg !3372
  store %struct.ActKeyColumn* %78, %struct.ActKeyColumn** %ak, align 8, !dbg !3373
  %79 = load float, float* %i, align 4, !dbg !3374
  %inc42 = fadd float %79, 1.000000e+00, !dbg !3374
  store float %inc42, float* %i, align 4, !dbg !3374
  br label %for.cond27, !dbg !3375, !llvm.loop !3376

for.end43:                                        ; preds = %for.cond27
  call void @glDisable(i32 3042), !dbg !3378
  %80 = load %struct.View3D*, %struct.View3D** %v3d.addr, align 8, !dbg !3379
  %zbuf44 = getelementptr inbounds %struct.View3D, %struct.View3D* %80, i32 0, i32 47, !dbg !3381
  %81 = load i8, i8* %zbuf44, align 8, !dbg !3381
  %tobool45 = icmp ne i8 %81, 0, !dbg !3379
  br i1 %tobool45, label %if.then46, label %if.end47, !dbg !3382

if.then46:                                        ; preds = %for.end43
  call void @glEnable(i32 2929), !dbg !3383
  br label %if.end47, !dbg !3383

if.end47:                                         ; preds = %if.then46, %for.end43
  %82 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !3384
  %83 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !3385
  %id48 = getelementptr inbounds %struct.Object, %struct.Object* %83, i32 0, i32 0, !dbg !3386
  %84 = load %struct.AnimData*, %struct.AnimData** %adt, align 8, !dbg !3387
  %85 = load i32, i32* %cfrao, align 4, !dbg !3388
  %conv49 = sitofp i32 %85 to float, !dbg !3389
  call void @BKE_animsys_evaluate_animdata(%struct.Scene* %82, %struct.ID* %id48, %struct.AnimData* %84, float %conv49, i16 signext 3), !dbg !3390
  %86 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !3391
  call void @ghost_poses_tag_unselected(%struct.Object* %86, i16 signext 1), !dbg !3392
  call void @BLI_dlrbTree_free(%struct.DLRBT_Tree* %keys), !dbg !3393
  %87 = load %struct.bPose*, %struct.bPose** %posen, align 8, !dbg !3394
  call void @BKE_pose_free(%struct.bPose* %87), !dbg !3395
  %88 = load i32, i32* %cfrao, align 4, !dbg !3396
  %89 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !3397
  %r50 = getelementptr inbounds %struct.Scene, %struct.Scene* %89, i32 0, i32 22, !dbg !3397
  %cfra51 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r50, i32 0, i32 5, !dbg !3397
  store i32 %88, i32* %cfra51, align 8, !dbg !3398
  %90 = load %struct.bPose*, %struct.bPose** %poseo, align 8, !dbg !3399
  %91 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !3400
  %pose52 = getelementptr inbounds %struct.Object, %struct.Object* %91, i32 0, i32 18, !dbg !3401
  store %struct.bPose* %90, %struct.bPose** %pose52, align 8, !dbg !3402
  %92 = load i32, i32* %flago, align 4, !dbg !3403
  %93 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !3404
  %flag53 = getelementptr inbounds %struct.bArmature, %struct.bArmature* %93, i32 0, i32 8, !dbg !3405
  store i32 %92, i32* %flag53, align 8, !dbg !3406
  %94 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !3407
  %mode54 = getelementptr inbounds %struct.Object, %struct.Object* %94, i32 0, i32 27, !dbg !3408
  %95 = load i32, i32* %mode54, align 8, !dbg !3409
  %or55 = or i32 %95, 64, !dbg !3409
  store i32 %or55, i32* %mode54, align 8, !dbg !3409
  br label %return, !dbg !3410

return:                                           ; preds = %if.end47, %if.then13, %if.then
  ret void, !dbg !3410
}

; Function Attrs: noinline nounwind uwtable
define internal void @draw_ghost_poses(%struct.Scene* %scene, %struct.View3D* %v3d, %struct.ARegion* %ar, %struct.Base* %base) #0 !dbg !3411 {
entry:
  %scene.addr = alloca %struct.Scene*, align 8
  %v3d.addr = alloca %struct.View3D*, align 8
  %ar.addr = alloca %struct.ARegion*, align 8
  %base.addr = alloca %struct.Base*, align 8
  %ob = alloca %struct.Object*, align 8
  %adt = alloca %struct.AnimData*, align 8
  %arm = alloca %struct.bArmature*, align 8
  %posen = alloca %struct.bPose*, align 8
  %poseo = alloca %struct.bPose*, align 8
  %cur = alloca float, align 4
  %start = alloca float, align 4
  %end = alloca float, align 4
  %stepsize = alloca float, align 4
  %range = alloca float, align 4
  %colfac = alloca float, align 4
  %actframe = alloca float, align 4
  %ctime = alloca float, align 4
  %cfrao = alloca i32, align 4
  %flago = alloca i32, align 4
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !3412, metadata !DIExpression()), !dbg !3413
  store %struct.View3D* %v3d, %struct.View3D** %v3d.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.View3D** %v3d.addr, metadata !3414, metadata !DIExpression()), !dbg !3415
  store %struct.ARegion* %ar, %struct.ARegion** %ar.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar.addr, metadata !3416, metadata !DIExpression()), !dbg !3417
  store %struct.Base* %base, %struct.Base** %base.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Base** %base.addr, metadata !3418, metadata !DIExpression()), !dbg !3419
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !3420, metadata !DIExpression()), !dbg !3421
  %0 = load %struct.Base*, %struct.Base** %base.addr, align 8, !dbg !3422
  %object = getelementptr inbounds %struct.Base, %struct.Base* %0, i32 0, i32 7, !dbg !3423
  %1 = load %struct.Object*, %struct.Object** %object, align 8, !dbg !3423
  store %struct.Object* %1, %struct.Object** %ob, align 8, !dbg !3421
  call void @llvm.dbg.declare(metadata %struct.AnimData** %adt, metadata !3424, metadata !DIExpression()), !dbg !3425
  %2 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !3426
  %id = getelementptr inbounds %struct.Object, %struct.Object* %2, i32 0, i32 0, !dbg !3427
  %call = call %struct.AnimData* @BKE_animdata_from_id(%struct.ID* %id), !dbg !3428
  store %struct.AnimData* %call, %struct.AnimData** %adt, align 8, !dbg !3425
  call void @llvm.dbg.declare(metadata %struct.bArmature** %arm, metadata !3429, metadata !DIExpression()), !dbg !3430
  %3 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !3431
  %data = getelementptr inbounds %struct.Object, %struct.Object* %3, i32 0, i32 19, !dbg !3432
  %4 = load i8*, i8** %data, align 8, !dbg !3432
  %5 = bitcast i8* %4 to %struct.bArmature*, !dbg !3431
  store %struct.bArmature* %5, %struct.bArmature** %arm, align 8, !dbg !3430
  call void @llvm.dbg.declare(metadata %struct.bPose** %posen, metadata !3433, metadata !DIExpression()), !dbg !3434
  call void @llvm.dbg.declare(metadata %struct.bPose** %poseo, metadata !3435, metadata !DIExpression()), !dbg !3436
  call void @llvm.dbg.declare(metadata float* %cur, metadata !3437, metadata !DIExpression()), !dbg !3438
  call void @llvm.dbg.declare(metadata float* %start, metadata !3439, metadata !DIExpression()), !dbg !3440
  call void @llvm.dbg.declare(metadata float* %end, metadata !3441, metadata !DIExpression()), !dbg !3442
  call void @llvm.dbg.declare(metadata float* %stepsize, metadata !3443, metadata !DIExpression()), !dbg !3444
  call void @llvm.dbg.declare(metadata float* %range, metadata !3445, metadata !DIExpression()), !dbg !3446
  call void @llvm.dbg.declare(metadata float* %colfac, metadata !3447, metadata !DIExpression()), !dbg !3448
  call void @llvm.dbg.declare(metadata float* %actframe, metadata !3449, metadata !DIExpression()), !dbg !3450
  call void @llvm.dbg.declare(metadata float* %ctime, metadata !3451, metadata !DIExpression()), !dbg !3452
  call void @llvm.dbg.declare(metadata i32* %cfrao, metadata !3453, metadata !DIExpression()), !dbg !3454
  call void @llvm.dbg.declare(metadata i32* %flago, metadata !3455, metadata !DIExpression()), !dbg !3456
  %6 = load %struct.AnimData*, %struct.AnimData** %adt, align 8, !dbg !3457
  %cmp = icmp eq %struct.AnimData* null, %6, !dbg !3457
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !3457

lor.lhs.false:                                    ; preds = %entry
  %7 = load %struct.AnimData*, %struct.AnimData** %adt, align 8, !dbg !3457
  %action = getelementptr inbounds %struct.AnimData, %struct.AnimData* %7, i32 0, i32 0, !dbg !3457
  %8 = load %struct.bAction*, %struct.bAction** %action, align 8, !dbg !3457
  %cmp1 = icmp eq %struct.bAction* null, %8, !dbg !3457
  br i1 %cmp1, label %if.then, label %if.end, !dbg !3459

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %return, !dbg !3460

if.end:                                           ; preds = %lor.lhs.false
  %9 = load %struct.AnimData*, %struct.AnimData** %adt, align 8, !dbg !3461
  %action2 = getelementptr inbounds %struct.AnimData, %struct.AnimData* %9, i32 0, i32 0, !dbg !3462
  %10 = load %struct.bAction*, %struct.bAction** %action2, align 8, !dbg !3462
  call void @calc_action_range(%struct.bAction* %10, float* %start, float* %end, i16 signext 0), !dbg !3463
  %11 = load float, float* %start, align 4, !dbg !3464
  %12 = load float, float* %end, align 4, !dbg !3466
  %cmp3 = fcmp oeq float %11, %12, !dbg !3467
  br i1 %cmp3, label %if.then4, label %if.end5, !dbg !3468

if.then4:                                         ; preds = %if.end
  br label %return, !dbg !3469

if.end5:                                          ; preds = %if.end
  %13 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !3470
  %ghostsize = getelementptr inbounds %struct.bArmature, %struct.bArmature* %13, i32 0, i32 18, !dbg !3471
  %14 = load i16, i16* %ghostsize, align 2, !dbg !3471
  %conv = sitofp i16 %14 to float, !dbg !3472
  store float %conv, float* %stepsize, align 4, !dbg !3473
  %15 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !3474
  %ghostep = getelementptr inbounds %struct.bArmature, %struct.bArmature* %15, i32 0, i32 17, !dbg !3475
  %16 = load i16, i16* %ghostep, align 8, !dbg !3475
  %conv6 = sitofp i16 %16 to float, !dbg !3476
  %17 = load float, float* %stepsize, align 4, !dbg !3477
  %mul = fmul float %conv6, %17, !dbg !3478
  %add = fadd float %mul, 5.000000e-01, !dbg !3479
  store float %add, float* %range, align 4, !dbg !3480
  %18 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !3481
  %mode = getelementptr inbounds %struct.Object, %struct.Object* %18, i32 0, i32 27, !dbg !3482
  %19 = load i32, i32* %mode, align 8, !dbg !3483
  %and = and i32 %19, -65, !dbg !3483
  store i32 %and, i32* %mode, align 8, !dbg !3483
  %20 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !3484
  %r = getelementptr inbounds %struct.Scene, %struct.Scene* %20, i32 0, i32 22, !dbg !3484
  %cfra = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r, i32 0, i32 5, !dbg !3484
  %21 = load i32, i32* %cfra, align 8, !dbg !3484
  store i32 %21, i32* %cfrao, align 4, !dbg !3485
  %22 = load %struct.AnimData*, %struct.AnimData** %adt, align 8, !dbg !3486
  %23 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !3487
  %r7 = getelementptr inbounds %struct.Scene, %struct.Scene* %23, i32 0, i32 22, !dbg !3487
  %cfra8 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r7, i32 0, i32 5, !dbg !3487
  %24 = load i32, i32* %cfra8, align 8, !dbg !3487
  %conv9 = sitofp i32 %24 to float, !dbg !3488
  %call10 = call float @BKE_nla_tweakedit_remap(%struct.AnimData* %22, float %conv9, i16 signext 0), !dbg !3489
  store float %call10, float* %actframe, align 4, !dbg !3490
  %25 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !3491
  %flag = getelementptr inbounds %struct.bArmature, %struct.bArmature* %25, i32 0, i32 8, !dbg !3492
  %26 = load i32, i32* %flag, align 8, !dbg !3492
  store i32 %26, i32* %flago, align 4, !dbg !3493
  %27 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !3494
  %flag11 = getelementptr inbounds %struct.bArmature, %struct.bArmature* %27, i32 0, i32 8, !dbg !3495
  %28 = load i32, i32* %flag11, align 8, !dbg !3496
  %and12 = and i32 %28, -13, !dbg !3496
  store i32 %and12, i32* %flag11, align 8, !dbg !3496
  %29 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !3497
  %pose = getelementptr inbounds %struct.Object, %struct.Object* %29, i32 0, i32 18, !dbg !3498
  %30 = load %struct.bPose*, %struct.bPose** %pose, align 8, !dbg !3498
  store %struct.bPose* %30, %struct.bPose** %poseo, align 8, !dbg !3499
  %31 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !3500
  %pose13 = getelementptr inbounds %struct.Object, %struct.Object* %31, i32 0, i32 18, !dbg !3501
  %32 = load %struct.bPose*, %struct.bPose** %pose13, align 8, !dbg !3501
  call void @BKE_pose_copy_data(%struct.bPose** %posen, %struct.bPose* %32, i8 zeroext 1), !dbg !3502
  %33 = load %struct.bPose*, %struct.bPose** %posen, align 8, !dbg !3503
  %34 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !3504
  %pose14 = getelementptr inbounds %struct.Object, %struct.Object* %34, i32 0, i32 18, !dbg !3505
  store %struct.bPose* %33, %struct.bPose** %pose14, align 8, !dbg !3506
  %35 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !3507
  %36 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !3508
  %data15 = getelementptr inbounds %struct.Object, %struct.Object* %36, i32 0, i32 19, !dbg !3509
  %37 = load i8*, i8** %data15, align 8, !dbg !3509
  %38 = bitcast i8* %37 to %struct.bArmature*, !dbg !3508
  call void @BKE_pose_rebuild(%struct.Object* %35, %struct.bArmature* %38), !dbg !3510
  %39 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !3511
  call void @ghost_poses_tag_unselected(%struct.Object* %39, i16 signext 0), !dbg !3512
  call void @glEnable(i32 3042), !dbg !3513
  %40 = load %struct.View3D*, %struct.View3D** %v3d.addr, align 8, !dbg !3514
  %zbuf = getelementptr inbounds %struct.View3D, %struct.View3D* %40, i32 0, i32 47, !dbg !3516
  %41 = load i8, i8* %zbuf, align 8, !dbg !3516
  %tobool = icmp ne i8 %41, 0, !dbg !3514
  br i1 %tobool, label %if.then16, label %if.end17, !dbg !3517

if.then16:                                        ; preds = %if.end5
  call void @glDisable(i32 2929), !dbg !3518
  br label %if.end17, !dbg !3518

if.end17:                                         ; preds = %if.then16, %if.end5
  %42 = load float, float* %stepsize, align 4, !dbg !3519
  store float %42, float* %cur, align 4, !dbg !3521
  br label %for.cond, !dbg !3522

for.cond:                                         ; preds = %for.inc, %if.end17
  %43 = load float, float* %cur, align 4, !dbg !3523
  %44 = load float, float* %range, align 4, !dbg !3525
  %cmp18 = fcmp olt float %43, %44, !dbg !3526
  br i1 %cmp18, label %for.body, label %for.end, !dbg !3527

for.body:                                         ; preds = %for.cond
  %45 = load float, float* %cur, align 4, !dbg !3528
  %46 = load i32, i32* %cfrao, align 4, !dbg !3530
  %conv20 = sitofp i32 %46 to double, !dbg !3530
  %47 = load float, float* %stepsize, align 4, !dbg !3531
  %conv21 = fpext float %47 to double, !dbg !3531
  %call22 = call double @fmod(double %conv20, double %conv21) #7, !dbg !3532
  %conv23 = fptrunc double %call22 to float, !dbg !3533
  %sub = fsub float %45, %conv23, !dbg !3534
  store float %sub, float* %ctime, align 4, !dbg !3535
  %48 = load float, float* %ctime, align 4, !dbg !3536
  %49 = load float, float* %range, align 4, !dbg !3537
  %div = fdiv float %48, %49, !dbg !3538
  store float %div, float* %colfac, align 4, !dbg !3539
  %50 = load float, float* %colfac, align 4, !dbg !3540
  %call24 = call float @sqrtf(float %50) #7, !dbg !3541
  %mul25 = fmul float 1.200000e+02, %call24, !dbg !3542
  %conv26 = fptosi float %mul25 to i32, !dbg !3543
  %sub27 = sub nsw i32 -128, %conv26, !dbg !3544
  call void @UI_ThemeColorShadeAlpha(i32 25, i32 0, i32 %sub27), !dbg !3545
  %51 = load float, float* %actframe, align 4, !dbg !3546
  %52 = load float, float* %ctime, align 4, !dbg !3548
  %add28 = fadd float %51, %52, !dbg !3549
  %53 = load float, float* %start, align 4, !dbg !3550
  %cmp29 = fcmp oge float %add28, %53, !dbg !3551
  br i1 %cmp29, label %land.lhs.true, label %if.end50, !dbg !3552

land.lhs.true:                                    ; preds = %for.body
  %54 = load float, float* %actframe, align 4, !dbg !3553
  %55 = load float, float* %ctime, align 4, !dbg !3554
  %add31 = fadd float %54, %55, !dbg !3555
  %56 = load float, float* %end, align 4, !dbg !3556
  %cmp32 = fcmp ole float %add31, %56, !dbg !3557
  br i1 %cmp32, label %if.then34, label %if.end50, !dbg !3558

if.then34:                                        ; preds = %land.lhs.true
  %57 = load %struct.AnimData*, %struct.AnimData** %adt, align 8, !dbg !3559
  %58 = load float, float* %actframe, align 4, !dbg !3561
  %59 = load float, float* %ctime, align 4, !dbg !3562
  %add35 = fadd float %58, %59, !dbg !3563
  %call36 = call float @BKE_nla_tweakedit_remap(%struct.AnimData* %57, float %add35, i16 signext 2), !dbg !3564
  %conv37 = fptosi float %call36 to i32, !dbg !3565
  %60 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !3566
  %r38 = getelementptr inbounds %struct.Scene, %struct.Scene* %60, i32 0, i32 22, !dbg !3566
  %cfra39 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r38, i32 0, i32 5, !dbg !3566
  store i32 %conv37, i32* %cfra39, align 8, !dbg !3567
  %61 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !3568
  %r40 = getelementptr inbounds %struct.Scene, %struct.Scene* %61, i32 0, i32 22, !dbg !3568
  %cfra41 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r40, i32 0, i32 5, !dbg !3568
  %62 = load i32, i32* %cfra41, align 8, !dbg !3568
  %63 = load i32, i32* %cfrao, align 4, !dbg !3570
  %cmp42 = icmp ne i32 %62, %63, !dbg !3571
  br i1 %cmp42, label %if.then44, label %if.end49, !dbg !3572

if.then44:                                        ; preds = %if.then34
  %64 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !3573
  %65 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !3575
  %id45 = getelementptr inbounds %struct.Object, %struct.Object* %65, i32 0, i32 0, !dbg !3576
  %66 = load %struct.AnimData*, %struct.AnimData** %adt, align 8, !dbg !3577
  %67 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !3578
  %r46 = getelementptr inbounds %struct.Scene, %struct.Scene* %67, i32 0, i32 22, !dbg !3578
  %cfra47 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r46, i32 0, i32 5, !dbg !3578
  %68 = load i32, i32* %cfra47, align 8, !dbg !3578
  %conv48 = sitofp i32 %68 to float, !dbg !3579
  call void @BKE_animsys_evaluate_animdata(%struct.Scene* %64, %struct.ID* %id45, %struct.AnimData* %66, float %conv48, i16 signext 3), !dbg !3580
  %69 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !3581
  %70 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !3582
  call void @BKE_pose_where_is(%struct.Scene* %69, %struct.Object* %70), !dbg !3583
  %71 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !3584
  %72 = load %struct.View3D*, %struct.View3D** %v3d.addr, align 8, !dbg !3585
  %73 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !3586
  %74 = load %struct.Base*, %struct.Base** %base.addr, align 8, !dbg !3587
  call void @draw_pose_bones(%struct.Scene* %71, %struct.View3D* %72, %struct.ARegion* %73, %struct.Base* %74, i16 signext 2, i8* null, i8 zeroext 1, i8 zeroext 0), !dbg !3588
  br label %if.end49, !dbg !3589

if.end49:                                         ; preds = %if.then44, %if.then34
  br label %if.end50, !dbg !3590

if.end50:                                         ; preds = %if.end49, %land.lhs.true, %for.body
  %75 = load float, float* %cur, align 4, !dbg !3591
  %76 = load i32, i32* %cfrao, align 4, !dbg !3592
  %conv51 = sitofp i32 %76 to float, !dbg !3593
  %conv52 = fpext float %conv51 to double, !dbg !3593
  %77 = load float, float* %stepsize, align 4, !dbg !3594
  %conv53 = fpext float %77 to double, !dbg !3594
  %call54 = call double @fmod(double %conv52, double %conv53) #7, !dbg !3595
  %conv55 = fptrunc double %call54 to float, !dbg !3596
  %add56 = fadd float %75, %conv55, !dbg !3597
  %78 = load float, float* %stepsize, align 4, !dbg !3598
  %sub57 = fsub float %add56, %78, !dbg !3599
  %add58 = fadd float %sub57, 1.000000e+00, !dbg !3600
  store float %add58, float* %ctime, align 4, !dbg !3601
  %79 = load float, float* %ctime, align 4, !dbg !3602
  %80 = load float, float* %range, align 4, !dbg !3603
  %div59 = fdiv float %79, %80, !dbg !3604
  store float %div59, float* %colfac, align 4, !dbg !3605
  %81 = load float, float* %colfac, align 4, !dbg !3606
  %call60 = call float @sqrtf(float %81) #7, !dbg !3607
  %mul61 = fmul float 1.200000e+02, %call60, !dbg !3608
  %conv62 = fptosi float %mul61 to i32, !dbg !3609
  %sub63 = sub nsw i32 -128, %conv62, !dbg !3610
  call void @UI_ThemeColorShadeAlpha(i32 25, i32 0, i32 %sub63), !dbg !3611
  %82 = load float, float* %actframe, align 4, !dbg !3612
  %83 = load float, float* %ctime, align 4, !dbg !3614
  %sub64 = fsub float %82, %83, !dbg !3615
  %84 = load float, float* %start, align 4, !dbg !3616
  %cmp65 = fcmp oge float %sub64, %84, !dbg !3617
  br i1 %cmp65, label %land.lhs.true67, label %if.end87, !dbg !3618

land.lhs.true67:                                  ; preds = %if.end50
  %85 = load float, float* %actframe, align 4, !dbg !3619
  %86 = load float, float* %ctime, align 4, !dbg !3620
  %sub68 = fsub float %85, %86, !dbg !3621
  %87 = load float, float* %end, align 4, !dbg !3622
  %cmp69 = fcmp ole float %sub68, %87, !dbg !3623
  br i1 %cmp69, label %if.then71, label %if.end87, !dbg !3624

if.then71:                                        ; preds = %land.lhs.true67
  %88 = load %struct.AnimData*, %struct.AnimData** %adt, align 8, !dbg !3625
  %89 = load float, float* %actframe, align 4, !dbg !3627
  %90 = load float, float* %ctime, align 4, !dbg !3628
  %sub72 = fsub float %89, %90, !dbg !3629
  %call73 = call float @BKE_nla_tweakedit_remap(%struct.AnimData* %88, float %sub72, i16 signext 2), !dbg !3630
  %conv74 = fptosi float %call73 to i32, !dbg !3631
  %91 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !3632
  %r75 = getelementptr inbounds %struct.Scene, %struct.Scene* %91, i32 0, i32 22, !dbg !3632
  %cfra76 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r75, i32 0, i32 5, !dbg !3632
  store i32 %conv74, i32* %cfra76, align 8, !dbg !3633
  %92 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !3634
  %r77 = getelementptr inbounds %struct.Scene, %struct.Scene* %92, i32 0, i32 22, !dbg !3634
  %cfra78 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r77, i32 0, i32 5, !dbg !3634
  %93 = load i32, i32* %cfra78, align 8, !dbg !3634
  %94 = load i32, i32* %cfrao, align 4, !dbg !3636
  %cmp79 = icmp ne i32 %93, %94, !dbg !3637
  br i1 %cmp79, label %if.then81, label %if.end86, !dbg !3638

if.then81:                                        ; preds = %if.then71
  %95 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !3639
  %96 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !3641
  %id82 = getelementptr inbounds %struct.Object, %struct.Object* %96, i32 0, i32 0, !dbg !3642
  %97 = load %struct.AnimData*, %struct.AnimData** %adt, align 8, !dbg !3643
  %98 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !3644
  %r83 = getelementptr inbounds %struct.Scene, %struct.Scene* %98, i32 0, i32 22, !dbg !3644
  %cfra84 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r83, i32 0, i32 5, !dbg !3644
  %99 = load i32, i32* %cfra84, align 8, !dbg !3644
  %conv85 = sitofp i32 %99 to float, !dbg !3645
  call void @BKE_animsys_evaluate_animdata(%struct.Scene* %95, %struct.ID* %id82, %struct.AnimData* %97, float %conv85, i16 signext 3), !dbg !3646
  %100 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !3647
  %101 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !3648
  call void @BKE_pose_where_is(%struct.Scene* %100, %struct.Object* %101), !dbg !3649
  %102 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !3650
  %103 = load %struct.View3D*, %struct.View3D** %v3d.addr, align 8, !dbg !3651
  %104 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !3652
  %105 = load %struct.Base*, %struct.Base** %base.addr, align 8, !dbg !3653
  call void @draw_pose_bones(%struct.Scene* %102, %struct.View3D* %103, %struct.ARegion* %104, %struct.Base* %105, i16 signext 2, i8* null, i8 zeroext 1, i8 zeroext 0), !dbg !3654
  br label %if.end86, !dbg !3655

if.end86:                                         ; preds = %if.then81, %if.then71
  br label %if.end87, !dbg !3656

if.end87:                                         ; preds = %if.end86, %land.lhs.true67, %if.end50
  br label %for.inc, !dbg !3657

for.inc:                                          ; preds = %if.end87
  %106 = load float, float* %stepsize, align 4, !dbg !3658
  %107 = load float, float* %cur, align 4, !dbg !3659
  %add88 = fadd float %107, %106, !dbg !3659
  store float %add88, float* %cur, align 4, !dbg !3659
  br label %for.cond, !dbg !3660, !llvm.loop !3661

for.end:                                          ; preds = %for.cond
  call void @glDisable(i32 3042), !dbg !3663
  %108 = load %struct.View3D*, %struct.View3D** %v3d.addr, align 8, !dbg !3664
  %zbuf89 = getelementptr inbounds %struct.View3D, %struct.View3D* %108, i32 0, i32 47, !dbg !3666
  %109 = load i8, i8* %zbuf89, align 8, !dbg !3666
  %tobool90 = icmp ne i8 %109, 0, !dbg !3664
  br i1 %tobool90, label %if.then91, label %if.end92, !dbg !3667

if.then91:                                        ; preds = %for.end
  call void @glEnable(i32 2929), !dbg !3668
  br label %if.end92, !dbg !3668

if.end92:                                         ; preds = %if.then91, %for.end
  %110 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !3669
  %111 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !3670
  %id93 = getelementptr inbounds %struct.Object, %struct.Object* %111, i32 0, i32 0, !dbg !3671
  %112 = load %struct.AnimData*, %struct.AnimData** %adt, align 8, !dbg !3672
  %113 = load i32, i32* %cfrao, align 4, !dbg !3673
  %conv94 = sitofp i32 %113 to float, !dbg !3674
  call void @BKE_animsys_evaluate_animdata(%struct.Scene* %110, %struct.ID* %id93, %struct.AnimData* %112, float %conv94, i16 signext 3), !dbg !3675
  %114 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !3676
  call void @ghost_poses_tag_unselected(%struct.Object* %114, i16 signext 1), !dbg !3677
  %115 = load %struct.bPose*, %struct.bPose** %posen, align 8, !dbg !3678
  call void @BKE_pose_free(%struct.bPose* %115), !dbg !3679
  %116 = load i32, i32* %cfrao, align 4, !dbg !3680
  %117 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !3681
  %r95 = getelementptr inbounds %struct.Scene, %struct.Scene* %117, i32 0, i32 22, !dbg !3681
  %cfra96 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r95, i32 0, i32 5, !dbg !3681
  store i32 %116, i32* %cfra96, align 8, !dbg !3682
  %118 = load %struct.bPose*, %struct.bPose** %poseo, align 8, !dbg !3683
  %119 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !3684
  %pose97 = getelementptr inbounds %struct.Object, %struct.Object* %119, i32 0, i32 18, !dbg !3685
  store %struct.bPose* %118, %struct.bPose** %pose97, align 8, !dbg !3686
  %120 = load i32, i32* %flago, align 4, !dbg !3687
  %121 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !3688
  %flag98 = getelementptr inbounds %struct.bArmature, %struct.bArmature* %121, i32 0, i32 8, !dbg !3689
  store i32 %120, i32* %flag98, align 8, !dbg !3690
  %122 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !3691
  %mode99 = getelementptr inbounds %struct.Object, %struct.Object* %122, i32 0, i32 27, !dbg !3692
  %123 = load i32, i32* %mode99, align 8, !dbg !3693
  %or = or i32 %123, 64, !dbg !3693
  store i32 %or, i32* %mode99, align 8, !dbg !3693
  br label %return, !dbg !3694

return:                                           ; preds = %if.end92, %if.then4, %if.then
  ret void, !dbg !3694
}

declare dso_local %struct.Object* @modifiers_isDeformedByArmature(%struct.Object*) #3

; Function Attrs: noinline nounwind uwtable
define internal void @draw_pose_paths(%struct.Scene* %scene, %struct.View3D* %v3d, %struct.ARegion* %ar, %struct.Object* %ob) #0 !dbg !3695 {
entry:
  %scene.addr = alloca %struct.Scene*, align 8
  %v3d.addr = alloca %struct.View3D*, align 8
  %ar.addr = alloca %struct.ARegion*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %avs = alloca %struct.bAnimVizSettings*, align 8
  %arm = alloca %struct.bArmature*, align 8
  %pchan = alloca %struct.bPoseChannel*, align 8
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !3698, metadata !DIExpression()), !dbg !3699
  store %struct.View3D* %v3d, %struct.View3D** %v3d.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.View3D** %v3d.addr, metadata !3700, metadata !DIExpression()), !dbg !3701
  store %struct.ARegion* %ar, %struct.ARegion** %ar.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar.addr, metadata !3702, metadata !DIExpression()), !dbg !3703
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !3704, metadata !DIExpression()), !dbg !3705
  call void @llvm.dbg.declare(metadata %struct.bAnimVizSettings** %avs, metadata !3706, metadata !DIExpression()), !dbg !3708
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !3709
  %pose = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 18, !dbg !3710
  %1 = load %struct.bPose*, %struct.bPose** %pose, align 8, !dbg !3710
  %avs1 = getelementptr inbounds %struct.bPose, %struct.bPose* %1, i32 0, i32 14, !dbg !3711
  store %struct.bAnimVizSettings* %avs1, %struct.bAnimVizSettings** %avs, align 8, !dbg !3708
  call void @llvm.dbg.declare(metadata %struct.bArmature** %arm, metadata !3712, metadata !DIExpression()), !dbg !3713
  %2 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !3714
  %data = getelementptr inbounds %struct.Object, %struct.Object* %2, i32 0, i32 19, !dbg !3715
  %3 = load i8*, i8** %data, align 8, !dbg !3715
  %4 = bitcast i8* %3 to %struct.bArmature*, !dbg !3714
  store %struct.bArmature* %4, %struct.bArmature** %arm, align 8, !dbg !3713
  call void @llvm.dbg.declare(metadata %struct.bPoseChannel** %pchan, metadata !3716, metadata !DIExpression()), !dbg !3762
  %5 = load %struct.View3D*, %struct.View3D** %v3d.addr, align 8, !dbg !3763
  %6 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !3764
  call void @draw_motion_paths_init(%struct.View3D* %5, %struct.ARegion* %6), !dbg !3765
  %7 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !3766
  %pose2 = getelementptr inbounds %struct.Object, %struct.Object* %7, i32 0, i32 18, !dbg !3768
  %8 = load %struct.bPose*, %struct.bPose** %pose2, align 8, !dbg !3768
  %chanbase = getelementptr inbounds %struct.bPose, %struct.bPose* %8, i32 0, i32 0, !dbg !3769
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %chanbase, i32 0, i32 0, !dbg !3770
  %9 = load i8*, i8** %first, align 8, !dbg !3770
  %10 = bitcast i8* %9 to %struct.bPoseChannel*, !dbg !3766
  store %struct.bPoseChannel* %10, %struct.bPoseChannel** %pchan, align 8, !dbg !3771
  br label %for.cond, !dbg !3772

for.cond:                                         ; preds = %for.inc, %entry
  %11 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !3773
  %tobool = icmp ne %struct.bPoseChannel* %11, null, !dbg !3775
  br i1 %tobool, label %for.body, label %for.end, !dbg !3775

for.body:                                         ; preds = %for.cond
  %12 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !3776
  %bone = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %12, i32 0, i32 12, !dbg !3779
  %13 = load %struct.Bone*, %struct.Bone** %bone, align 8, !dbg !3779
  %layer = getelementptr inbounds %struct.Bone, %struct.Bone* %13, i32 0, i32 25, !dbg !3780
  %14 = load i32, i32* %layer, align 8, !dbg !3780
  %15 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !3781
  %layer3 = getelementptr inbounds %struct.bArmature, %struct.bArmature* %15, i32 0, i32 15, !dbg !3782
  %16 = load i32, i32* %layer3, align 8, !dbg !3782
  %and = and i32 %14, %16, !dbg !3783
  %tobool4 = icmp ne i32 %and, 0, !dbg !3783
  br i1 %tobool4, label %land.lhs.true, label %if.end, !dbg !3784

land.lhs.true:                                    ; preds = %for.body
  %17 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !3785
  %mpath = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %17, i32 0, i32 17, !dbg !3786
  %18 = load %struct.bMotionPath*, %struct.bMotionPath** %mpath, align 8, !dbg !3786
  %tobool5 = icmp ne %struct.bMotionPath* %18, null, !dbg !3787
  br i1 %tobool5, label %if.then, label %if.end, !dbg !3788

if.then:                                          ; preds = %land.lhs.true
  %19 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !3789
  %20 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !3790
  %21 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !3791
  %22 = load %struct.bAnimVizSettings*, %struct.bAnimVizSettings** %avs, align 8, !dbg !3792
  %23 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !3793
  %mpath6 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %23, i32 0, i32 17, !dbg !3794
  %24 = load %struct.bMotionPath*, %struct.bMotionPath** %mpath6, align 8, !dbg !3794
  call void @draw_motion_path_instance(%struct.Scene* %19, %struct.Object* %20, %struct.bPoseChannel* %21, %struct.bAnimVizSettings* %22, %struct.bMotionPath* %24), !dbg !3795
  br label %if.end, !dbg !3795

if.end:                                           ; preds = %if.then, %land.lhs.true, %for.body
  br label %for.inc, !dbg !3796

for.inc:                                          ; preds = %if.end
  %25 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !3797
  %next = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %25, i32 0, i32 0, !dbg !3798
  %26 = load %struct.bPoseChannel*, %struct.bPoseChannel** %next, align 8, !dbg !3798
  store %struct.bPoseChannel* %26, %struct.bPoseChannel** %pchan, align 8, !dbg !3799
  br label %for.cond, !dbg !3800, !llvm.loop !3801

for.end:                                          ; preds = %for.cond
  %27 = load %struct.View3D*, %struct.View3D** %v3d.addr, align 8, !dbg !3803
  call void @draw_motion_paths_cleanup(%struct.View3D* %27), !dbg !3804
  ret void, !dbg !3805
}

; Function Attrs: noinline nounwind uwtable
define internal void @draw_pose_bones(%struct.Scene* %scene, %struct.View3D* %v3d, %struct.ARegion* %ar, %struct.Base* %base, i16 signext %dt, i8* %ob_wire_col, i8 zeroext %do_const_color, i8 zeroext %is_outline) #0 !dbg !3806 {
entry:
  %scene.addr = alloca %struct.Scene*, align 8
  %v3d.addr = alloca %struct.View3D*, align 8
  %ar.addr = alloca %struct.ARegion*, align 8
  %base.addr = alloca %struct.Base*, align 8
  %dt.addr = alloca i16, align 2
  %ob_wire_col.addr = alloca i8*, align 8
  %do_const_color.addr = alloca i8, align 1
  %is_outline.addr = alloca i8, align 1
  %rv3d = alloca %struct.RegionView3D*, align 8
  %ob = alloca %struct.Object*, align 8
  %arm = alloca %struct.bArmature*, align 8
  %pchan = alloca %struct.bPoseChannel*, align 8
  %bone = alloca %struct.Bone*, align 8
  %tmp = alloca float, align 4
  %smat = alloca [4 x [4 x float]], align 16
  %imat = alloca [4 x [4 x float]], align 16
  %bmat = alloca [4 x [4 x float]], align 16
  %index = alloca i32, align 4
  %do_dashed = alloca i16, align 2
  %draw_wire = alloca i8, align 1
  %flag = alloca i32, align 4
  %is_cull_enabled = alloca i8, align 1
  %use_custom = alloca i8, align 1
  %constflag = alloca i16, align 2
  %vec = alloca [3 x float], align 4
  %col = alloca [4 x i8], align 1
  %tcol = alloca [4 x float], align 16
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !3809, metadata !DIExpression()), !dbg !3810
  store %struct.View3D* %v3d, %struct.View3D** %v3d.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.View3D** %v3d.addr, metadata !3811, metadata !DIExpression()), !dbg !3812
  store %struct.ARegion* %ar, %struct.ARegion** %ar.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar.addr, metadata !3813, metadata !DIExpression()), !dbg !3814
  store %struct.Base* %base, %struct.Base** %base.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Base** %base.addr, metadata !3815, metadata !DIExpression()), !dbg !3816
  store i16 %dt, i16* %dt.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %dt.addr, metadata !3817, metadata !DIExpression()), !dbg !3818
  store i8* %ob_wire_col, i8** %ob_wire_col.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ob_wire_col.addr, metadata !3819, metadata !DIExpression()), !dbg !3820
  store i8 %do_const_color, i8* %do_const_color.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %do_const_color.addr, metadata !3821, metadata !DIExpression()), !dbg !3822
  store i8 %is_outline, i8* %is_outline.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %is_outline.addr, metadata !3823, metadata !DIExpression()), !dbg !3824
  call void @llvm.dbg.declare(metadata %struct.RegionView3D** %rv3d, metadata !3825, metadata !DIExpression()), !dbg !3826
  %0 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !3827
  %regiondata = getelementptr inbounds %struct.ARegion, %struct.ARegion* %0, i32 0, i32 30, !dbg !3828
  %1 = load i8*, i8** %regiondata, align 8, !dbg !3828
  %2 = bitcast i8* %1 to %struct.RegionView3D*, !dbg !3827
  store %struct.RegionView3D* %2, %struct.RegionView3D** %rv3d, align 8, !dbg !3826
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !3829, metadata !DIExpression()), !dbg !3830
  %3 = load %struct.Base*, %struct.Base** %base.addr, align 8, !dbg !3831
  %object = getelementptr inbounds %struct.Base, %struct.Base* %3, i32 0, i32 7, !dbg !3832
  %4 = load %struct.Object*, %struct.Object** %object, align 8, !dbg !3832
  store %struct.Object* %4, %struct.Object** %ob, align 8, !dbg !3830
  call void @llvm.dbg.declare(metadata %struct.bArmature** %arm, metadata !3833, metadata !DIExpression()), !dbg !3834
  %5 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !3835
  %data = getelementptr inbounds %struct.Object, %struct.Object* %5, i32 0, i32 19, !dbg !3836
  %6 = load i8*, i8** %data, align 8, !dbg !3836
  %7 = bitcast i8* %6 to %struct.bArmature*, !dbg !3835
  store %struct.bArmature* %7, %struct.bArmature** %arm, align 8, !dbg !3834
  call void @llvm.dbg.declare(metadata %struct.bPoseChannel** %pchan, metadata !3837, metadata !DIExpression()), !dbg !3838
  call void @llvm.dbg.declare(metadata %struct.Bone** %bone, metadata !3839, metadata !DIExpression()), !dbg !3840
  call void @llvm.dbg.declare(metadata float* %tmp, metadata !3841, metadata !DIExpression()), !dbg !3843
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %smat, metadata !3844, metadata !DIExpression()), !dbg !3845
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %imat, metadata !3846, metadata !DIExpression()), !dbg !3847
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %bmat, metadata !3848, metadata !DIExpression()), !dbg !3849
  call void @llvm.dbg.declare(metadata i32* %index, metadata !3850, metadata !DIExpression()), !dbg !3851
  store i32 -1, i32* %index, align 4, !dbg !3851
  call void @llvm.dbg.declare(metadata i16* %do_dashed, metadata !3852, metadata !DIExpression()), !dbg !3853
  store i16 3, i16* %do_dashed, align 2, !dbg !3853
  call void @llvm.dbg.declare(metadata i8* %draw_wire, metadata !3854, metadata !DIExpression()), !dbg !3855
  store i8 0, i8* %draw_wire, align 1, !dbg !3855
  call void @llvm.dbg.declare(metadata i32* %flag, metadata !3856, metadata !DIExpression()), !dbg !3857
  call void @llvm.dbg.declare(metadata i8* %is_cull_enabled, metadata !3858, metadata !DIExpression()), !dbg !3859
  %8 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !3860
  %layer_used = getelementptr inbounds %struct.bArmature, %struct.bArmature* %8, i32 0, i32 14, !dbg !3861
  store i32 0, i32* %layer_used, align 4, !dbg !3862
  call void @glGetFloatv(i32 2849, float* %tmp), !dbg !3863
  %9 = load float, float* %tmp, align 4, !dbg !3864
  %cmp = fcmp ogt float %9, 0x3FF19999A0000000, !dbg !3866
  br i1 %cmp, label %if.then, label %if.end, !dbg !3867

if.then:                                          ; preds = %entry
  %10 = load i16, i16* %do_dashed, align 2, !dbg !3868
  %conv = sext i16 %10 to i32, !dbg !3868
  %and = and i32 %conv, -2, !dbg !3868
  %conv1 = trunc i32 %and to i16, !dbg !3868
  store i16 %conv1, i16* %do_dashed, align 2, !dbg !3868
  br label %if.end, !dbg !3869

if.end:                                           ; preds = %if.then, %entry
  %11 = load %struct.View3D*, %struct.View3D** %v3d.addr, align 8, !dbg !3870
  %flag2 = getelementptr inbounds %struct.View3D, %struct.View3D* %11, i32 0, i32 28, !dbg !3872
  %12 = load i16, i16* %flag2, align 8, !dbg !3872
  %conv3 = sext i16 %12 to i32, !dbg !3870
  %and4 = and i32 %conv3, 4, !dbg !3873
  %tobool = icmp ne i32 %and4, 0, !dbg !3873
  br i1 %tobool, label %if.then5, label %if.end9, !dbg !3874

if.then5:                                         ; preds = %if.end
  %13 = load i16, i16* %do_dashed, align 2, !dbg !3875
  %conv6 = sext i16 %13 to i32, !dbg !3875
  %and7 = and i32 %conv6, -3, !dbg !3875
  %conv8 = trunc i32 %and7 to i16, !dbg !3875
  store i16 %conv8, i16* %do_dashed, align 2, !dbg !3875
  br label %if.end9, !dbg !3876

if.end9:                                          ; preds = %if.then5, %if.end
  %14 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !3877
  %drawtype = getelementptr inbounds %struct.bArmature, %struct.bArmature* %14, i32 0, i32 9, !dbg !3879
  %15 = load i32, i32* %drawtype, align 4, !dbg !3879
  %cmp10 = icmp eq i32 %15, 3, !dbg !3880
  br i1 %cmp10, label %if.then12, label %if.end61, !dbg !3881

if.then12:                                        ; preds = %if.end9
  %arraydecay = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %smat, i64 0, i64 0, !dbg !3882
  %16 = load %struct.RegionView3D*, %struct.RegionView3D** %rv3d, align 8, !dbg !3884
  %viewmatob = getelementptr inbounds %struct.RegionView3D, %struct.RegionView3D* %16, i32 0, i32 5, !dbg !3885
  %arraydecay13 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %viewmatob, i64 0, i64 0, !dbg !3884
  call void @copy_m4_m4([4 x float]* %arraydecay, [4 x float]* %arraydecay13), !dbg !3886
  %arraydecay14 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %smat, i64 0, i64 0, !dbg !3887
  %17 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !3888
  %obmat = getelementptr inbounds %struct.Object, %struct.Object* %17, i32 0, i32 47, !dbg !3889
  %arrayidx = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat, i64 0, i64 0, !dbg !3888
  %arraydecay15 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx, i64 0, i64 0, !dbg !3888
  %call = call float @len_v3(float* %arraydecay15), !dbg !3890
  %div = fdiv float 1.000000e+00, %call, !dbg !3891
  call void @mul_mat3_m4_fl([4 x float]* %arraydecay14, float %div), !dbg !3892
  %arraydecay16 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %imat, i64 0, i64 0, !dbg !3893
  %arraydecay17 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %smat, i64 0, i64 0, !dbg !3894
  %call18 = call zeroext i8 @invert_m4_m4([4 x float]* %arraydecay16, [4 x float]* %arraydecay17), !dbg !3895
  %18 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !3896
  %flag19 = getelementptr inbounds %struct.bArmature, %struct.bArmature* %18, i32 0, i32 8, !dbg !3898
  %19 = load i32, i32* %flag19, align 8, !dbg !3898
  %and20 = and i32 %19, 16, !dbg !3899
  %tobool21 = icmp ne i32 %and20, 0, !dbg !3899
  br i1 %tobool21, label %if.then22, label %if.end60, !dbg !3900

if.then22:                                        ; preds = %if.then12
  call void @glEnable(i32 3042), !dbg !3901
  %20 = load %struct.View3D*, %struct.View3D** %v3d.addr, align 8, !dbg !3903
  %zbuf = getelementptr inbounds %struct.View3D, %struct.View3D* %20, i32 0, i32 47, !dbg !3905
  %21 = load i8, i8* %zbuf, align 8, !dbg !3905
  %tobool23 = icmp ne i8 %21, 0, !dbg !3903
  br i1 %tobool23, label %if.then24, label %if.end25, !dbg !3906

if.then24:                                        ; preds = %if.then22
  call void @glDisable(i32 2929), !dbg !3907
  br label %if.end25, !dbg !3907

if.end25:                                         ; preds = %if.then24, %if.then22
  %22 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !3908
  %pose = getelementptr inbounds %struct.Object, %struct.Object* %22, i32 0, i32 18, !dbg !3910
  %23 = load %struct.bPose*, %struct.bPose** %pose, align 8, !dbg !3910
  %chanbase = getelementptr inbounds %struct.bPose, %struct.bPose* %23, i32 0, i32 0, !dbg !3911
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %chanbase, i32 0, i32 0, !dbg !3912
  %24 = load i8*, i8** %first, align 8, !dbg !3912
  %25 = bitcast i8* %24 to %struct.bPoseChannel*, !dbg !3908
  store %struct.bPoseChannel* %25, %struct.bPoseChannel** %pchan, align 8, !dbg !3913
  br label %for.cond, !dbg !3914

for.cond:                                         ; preds = %for.inc, %if.end25
  %26 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !3915
  %tobool26 = icmp ne %struct.bPoseChannel* %26, null, !dbg !3917
  br i1 %tobool26, label %for.body, label %for.end, !dbg !3917

for.body:                                         ; preds = %for.cond
  %27 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !3918
  %bone27 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %27, i32 0, i32 12, !dbg !3920
  %28 = load %struct.Bone*, %struct.Bone** %bone27, align 8, !dbg !3920
  store %struct.Bone* %28, %struct.Bone** %bone, align 8, !dbg !3921
  %29 = load %struct.Bone*, %struct.Bone** %bone, align 8, !dbg !3922
  %tobool28 = icmp ne %struct.Bone* %29, null, !dbg !3922
  br i1 %tobool28, label %if.then29, label %if.end55, !dbg !3924

if.then29:                                        ; preds = %for.body
  %30 = load %struct.Bone*, %struct.Bone** %bone, align 8, !dbg !3925
  %flag30 = getelementptr inbounds %struct.Bone, %struct.Bone* %30, i32 0, i32 10, !dbg !3928
  %31 = load i32, i32* %flag30, align 8, !dbg !3928
  %and31 = and i32 %31, 69696, !dbg !3929
  %cmp32 = icmp eq i32 %and31, 0, !dbg !3930
  br i1 %cmp32, label %land.lhs.true, label %if.end54, !dbg !3931

land.lhs.true:                                    ; preds = %if.then29
  %32 = load i32, i32* getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 15), align 8, !dbg !3932
  %and34 = and i32 %32, 32, !dbg !3933
  %cmp35 = icmp eq i32 %and34, 0, !dbg !3934
  br i1 %cmp35, label %if.then41, label %lor.lhs.false, !dbg !3935

lor.lhs.false:                                    ; preds = %land.lhs.true
  %33 = load %struct.Bone*, %struct.Bone** %bone, align 8, !dbg !3936
  %flag37 = getelementptr inbounds %struct.Bone, %struct.Bone* %33, i32 0, i32 10, !dbg !3937
  %34 = load i32, i32* %flag37, align 8, !dbg !3937
  %and38 = and i32 %34, 2097152, !dbg !3938
  %cmp39 = icmp eq i32 %and38, 0, !dbg !3939
  br i1 %cmp39, label %if.then41, label %if.end54, !dbg !3940

if.then41:                                        ; preds = %lor.lhs.false, %land.lhs.true
  %35 = load %struct.Bone*, %struct.Bone** %bone, align 8, !dbg !3941
  %flag42 = getelementptr inbounds %struct.Bone, %struct.Bone* %35, i32 0, i32 10, !dbg !3944
  %36 = load i32, i32* %flag42, align 8, !dbg !3944
  %and43 = and i32 %36, 1, !dbg !3945
  %tobool44 = icmp ne i32 %and43, 0, !dbg !3945
  br i1 %tobool44, label %if.then45, label %if.end53, !dbg !3946

if.then45:                                        ; preds = %if.then41
  %37 = load %struct.Bone*, %struct.Bone** %bone, align 8, !dbg !3947
  %layer = getelementptr inbounds %struct.Bone, %struct.Bone* %37, i32 0, i32 25, !dbg !3950
  %38 = load i32, i32* %layer, align 8, !dbg !3950
  %39 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !3951
  %layer46 = getelementptr inbounds %struct.bArmature, %struct.bArmature* %39, i32 0, i32 15, !dbg !3952
  %40 = load i32, i32* %layer46, align 8, !dbg !3952
  %and47 = and i32 %38, %40, !dbg !3953
  %tobool48 = icmp ne i32 %and47, 0, !dbg !3953
  br i1 %tobool48, label %if.then49, label %if.end52, !dbg !3954

if.then49:                                        ; preds = %if.then45
  %arraydecay50 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %smat, i64 0, i64 0, !dbg !3955
  %arraydecay51 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %imat, i64 0, i64 0, !dbg !3956
  %41 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !3957
  call void @draw_sphere_bone_dist([4 x float]* %arraydecay50, [4 x float]* %arraydecay51, %struct.bPoseChannel* %41, %struct.EditBone* null), !dbg !3958
  br label %if.end52, !dbg !3958

if.end52:                                         ; preds = %if.then49, %if.then45
  br label %if.end53, !dbg !3959

if.end53:                                         ; preds = %if.end52, %if.then41
  br label %if.end54, !dbg !3960

if.end54:                                         ; preds = %if.end53, %lor.lhs.false, %if.then29
  br label %if.end55, !dbg !3961

if.end55:                                         ; preds = %if.end54, %for.body
  br label %for.inc, !dbg !3962

for.inc:                                          ; preds = %if.end55
  %42 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !3963
  %next = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %42, i32 0, i32 0, !dbg !3964
  %43 = load %struct.bPoseChannel*, %struct.bPoseChannel** %next, align 8, !dbg !3964
  store %struct.bPoseChannel* %43, %struct.bPoseChannel** %pchan, align 8, !dbg !3965
  br label %for.cond, !dbg !3966, !llvm.loop !3967

for.end:                                          ; preds = %for.cond
  %44 = load %struct.View3D*, %struct.View3D** %v3d.addr, align 8, !dbg !3969
  %zbuf56 = getelementptr inbounds %struct.View3D, %struct.View3D* %44, i32 0, i32 47, !dbg !3971
  %45 = load i8, i8* %zbuf56, align 8, !dbg !3971
  %tobool57 = icmp ne i8 %45, 0, !dbg !3969
  br i1 %tobool57, label %if.then58, label %if.end59, !dbg !3972

if.then58:                                        ; preds = %for.end
  call void @glEnable(i32 2929), !dbg !3973
  br label %if.end59, !dbg !3973

if.end59:                                         ; preds = %if.then58, %for.end
  call void @glDisable(i32 3042), !dbg !3974
  br label %if.end60, !dbg !3975

if.end60:                                         ; preds = %if.end59, %if.then12
  br label %if.end61, !dbg !3976

if.end61:                                         ; preds = %if.end60, %if.end9
  call void @glCullFace(i32 1029), !dbg !3977
  %46 = load %struct.View3D*, %struct.View3D** %v3d.addr, align 8, !dbg !3978
  %flag262 = getelementptr inbounds %struct.View3D, %struct.View3D* %46, i32 0, i32 29, !dbg !3980
  %47 = load i16, i16* %flag262, align 2, !dbg !3980
  %conv63 = sext i16 %47 to i32, !dbg !3978
  %and64 = and i32 %conv63, 1024, !dbg !3981
  %tobool65 = icmp ne i32 %and64, 0, !dbg !3981
  br i1 %tobool65, label %if.then66, label %if.else, !dbg !3982

if.then66:                                        ; preds = %if.end61
  call void @glEnable(i32 2884), !dbg !3983
  store i8 1, i8* %is_cull_enabled, align 1, !dbg !3985
  br label %if.end67, !dbg !3986

if.else:                                          ; preds = %if.end61
  store i8 0, i8* %is_cull_enabled, align 1, !dbg !3987
  br label %if.end67

if.end67:                                         ; preds = %if.else, %if.then66
  %48 = load i16, i16* %dt.addr, align 2, !dbg !3989
  %conv68 = sext i16 %48 to i32, !dbg !3989
  %cmp69 = icmp sgt i32 %conv68, 2, !dbg !3991
  br i1 %cmp69, label %if.then71, label %if.end224, !dbg !3992

if.then71:                                        ; preds = %if.end67
  %49 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !3993
  %flag72 = getelementptr inbounds %struct.bArmature, %struct.bArmature* %49, i32 0, i32 8, !dbg !3996
  %50 = load i32, i32* %flag72, align 8, !dbg !3996
  %and73 = and i32 %50, 16, !dbg !3997
  %tobool74 = icmp ne i32 %and73, 0, !dbg !3997
  br i1 %tobool74, label %if.then75, label %if.end76, !dbg !3998

if.then75:                                        ; preds = %if.then71
  %51 = load %struct.Base*, %struct.Base** %base.addr, align 8, !dbg !3999
  %selcol = getelementptr inbounds %struct.Base, %struct.Base* %51, i32 0, i32 3, !dbg !4000
  %52 = load i32, i32* %selcol, align 4, !dbg !4000
  store i32 %52, i32* %index, align 4, !dbg !4001
  br label %if.end76, !dbg !4002

if.end76:                                         ; preds = %if.then75, %if.then71
  %53 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !4003
  %pose77 = getelementptr inbounds %struct.Object, %struct.Object* %53, i32 0, i32 18, !dbg !4005
  %54 = load %struct.bPose*, %struct.bPose** %pose77, align 8, !dbg !4005
  %chanbase78 = getelementptr inbounds %struct.bPose, %struct.bPose* %54, i32 0, i32 0, !dbg !4006
  %first79 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %chanbase78, i32 0, i32 0, !dbg !4007
  %55 = load i8*, i8** %first79, align 8, !dbg !4007
  %56 = bitcast i8* %55 to %struct.bPoseChannel*, !dbg !4003
  store %struct.bPoseChannel* %56, %struct.bPoseChannel** %pchan, align 8, !dbg !4008
  br label %for.cond80, !dbg !4009

for.cond80:                                       ; preds = %for.inc202, %if.end76
  %57 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !4010
  %tobool81 = icmp ne %struct.bPoseChannel* %57, null, !dbg !4012
  br i1 %tobool81, label %for.body82, label %for.end204, !dbg !4012

for.body82:                                       ; preds = %for.cond80
  %58 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !4013
  %bone83 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %58, i32 0, i32 12, !dbg !4015
  %59 = load %struct.Bone*, %struct.Bone** %bone83, align 8, !dbg !4015
  store %struct.Bone* %59, %struct.Bone** %bone, align 8, !dbg !4016
  %60 = load %struct.Bone*, %struct.Bone** %bone, align 8, !dbg !4017
  %layer84 = getelementptr inbounds %struct.Bone, %struct.Bone* %60, i32 0, i32 25, !dbg !4018
  %61 = load i32, i32* %layer84, align 8, !dbg !4018
  %62 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !4019
  %layer_used85 = getelementptr inbounds %struct.bArmature, %struct.bArmature* %62, i32 0, i32 14, !dbg !4020
  %63 = load i32, i32* %layer_used85, align 4, !dbg !4021
  %or = or i32 %63, %61, !dbg !4021
  store i32 %or, i32* %layer_used85, align 4, !dbg !4021
  %64 = load %struct.Bone*, %struct.Bone** %bone, align 8, !dbg !4022
  %flag86 = getelementptr inbounds %struct.Bone, %struct.Bone* %64, i32 0, i32 10, !dbg !4024
  %65 = load i32, i32* %flag86, align 8, !dbg !4024
  %and87 = and i32 %65, 65600, !dbg !4025
  %cmp88 = icmp eq i32 %and87, 0, !dbg !4026
  br i1 %cmp88, label %land.lhs.true90, label %if.end197, !dbg !4027

land.lhs.true90:                                  ; preds = %for.body82
  %66 = load i32, i32* getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 15), align 8, !dbg !4028
  %and91 = and i32 %66, 32, !dbg !4029
  %cmp92 = icmp eq i32 %and91, 0, !dbg !4030
  br i1 %cmp92, label %if.then99, label %lor.lhs.false94, !dbg !4031

lor.lhs.false94:                                  ; preds = %land.lhs.true90
  %67 = load %struct.Bone*, %struct.Bone** %bone, align 8, !dbg !4032
  %flag95 = getelementptr inbounds %struct.Bone, %struct.Bone* %67, i32 0, i32 10, !dbg !4033
  %68 = load i32, i32* %flag95, align 8, !dbg !4033
  %and96 = and i32 %68, 2097152, !dbg !4034
  %cmp97 = icmp eq i32 %and96, 0, !dbg !4035
  br i1 %cmp97, label %if.then99, label %if.end197, !dbg !4036

if.then99:                                        ; preds = %lor.lhs.false94, %land.lhs.true90
  %69 = load %struct.Bone*, %struct.Bone** %bone, align 8, !dbg !4037
  %layer100 = getelementptr inbounds %struct.Bone, %struct.Bone* %69, i32 0, i32 25, !dbg !4040
  %70 = load i32, i32* %layer100, align 8, !dbg !4040
  %71 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !4041
  %layer101 = getelementptr inbounds %struct.bArmature, %struct.bArmature* %71, i32 0, i32 15, !dbg !4042
  %72 = load i32, i32* %layer101, align 8, !dbg !4042
  %and102 = and i32 %70, %72, !dbg !4043
  %tobool103 = icmp ne i32 %and102, 0, !dbg !4043
  br i1 %tobool103, label %if.then104, label %if.end196, !dbg !4044

if.then104:                                       ; preds = %if.then99
  call void @llvm.dbg.declare(metadata i8* %use_custom, metadata !4045, metadata !DIExpression()), !dbg !4047
  %73 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !4048
  %custom = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %73, i32 0, i32 18, !dbg !4049
  %74 = load %struct.Object*, %struct.Object** %custom, align 8, !dbg !4049
  %tobool105 = icmp ne %struct.Object* %74, null, !dbg !4050
  br i1 %tobool105, label %land.rhs, label %land.end, !dbg !4051

land.rhs:                                         ; preds = %if.then104
  %75 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !4052
  %flag106 = getelementptr inbounds %struct.bArmature, %struct.bArmature* %75, i32 0, i32 8, !dbg !4053
  %76 = load i32, i32* %flag106, align 8, !dbg !4053
  %and107 = and i32 %76, 1024, !dbg !4054
  %tobool108 = icmp ne i32 %and107, 0, !dbg !4055
  %lnot = xor i1 %tobool108, true, !dbg !4055
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.then104
  %77 = phi i1 [ false, %if.then104 ], [ %lnot, %land.rhs ], !dbg !4056
  %land.ext = zext i1 %77 to i32, !dbg !4051
  %conv109 = trunc i32 %land.ext to i8, !dbg !4050
  store i8 %conv109, i8* %use_custom, align 1, !dbg !4047
  call void @glPushMatrix(), !dbg !4057
  %78 = load i8, i8* %use_custom, align 1, !dbg !4058
  %conv110 = zext i8 %78 to i32, !dbg !4058
  %tobool111 = icmp ne i32 %conv110, 0, !dbg !4058
  br i1 %tobool111, label %land.lhs.true112, label %if.else117, !dbg !4060

land.lhs.true112:                                 ; preds = %land.end
  %79 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !4061
  %custom_tx = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %79, i32 0, i32 19, !dbg !4062
  %80 = load %struct.bPoseChannel*, %struct.bPoseChannel** %custom_tx, align 8, !dbg !4062
  %tobool113 = icmp ne %struct.bPoseChannel* %80, null, !dbg !4061
  br i1 %tobool113, label %if.then114, label %if.else117, !dbg !4063

if.then114:                                       ; preds = %land.lhs.true112
  %81 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !4064
  %custom_tx115 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %81, i32 0, i32 19, !dbg !4064
  %82 = load %struct.bPoseChannel*, %struct.bPoseChannel** %custom_tx115, align 8, !dbg !4064
  %pose_mat = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %82, i32 0, i32 29, !dbg !4064
  %arraydecay116 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %pose_mat, i64 0, i64 0, !dbg !4064
  %83 = bitcast [4 x float]* %arraydecay116 to float*, !dbg !4064
  call void @glMultMatrixf(float* %83), !dbg !4064
  br label %if.end120, !dbg !4066

if.else117:                                       ; preds = %land.lhs.true112, %land.end
  %84 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !4067
  %pose_mat118 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %84, i32 0, i32 29, !dbg !4067
  %arraydecay119 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %pose_mat118, i64 0, i64 0, !dbg !4067
  %85 = bitcast [4 x float]* %arraydecay119 to float*, !dbg !4067
  call void @glMultMatrixf(float* %85), !dbg !4067
  br label %if.end120

if.end120:                                        ; preds = %if.else117, %if.then114
  %86 = load %struct.Bone*, %struct.Bone** %bone, align 8, !dbg !4069
  %flag121 = getelementptr inbounds %struct.Bone, %struct.Bone* %86, i32 0, i32 10, !dbg !4070
  %87 = load i32, i32* %flag121, align 8, !dbg !4070
  store i32 %87, i32* %flag, align 4, !dbg !4071
  %88 = load %struct.Bone*, %struct.Bone** %bone, align 8, !dbg !4072
  %parent = getelementptr inbounds %struct.Bone, %struct.Bone* %88, i32 0, i32 3, !dbg !4074
  %89 = load %struct.Bone*, %struct.Bone** %parent, align 8, !dbg !4074
  %tobool122 = icmp ne %struct.Bone* %89, null, !dbg !4075
  br i1 %tobool122, label %land.lhs.true123, label %if.end130, !dbg !4076

land.lhs.true123:                                 ; preds = %if.end120
  %90 = load %struct.Bone*, %struct.Bone** %bone, align 8, !dbg !4077
  %parent124 = getelementptr inbounds %struct.Bone, %struct.Bone* %90, i32 0, i32 3, !dbg !4078
  %91 = load %struct.Bone*, %struct.Bone** %parent124, align 8, !dbg !4078
  %flag125 = getelementptr inbounds %struct.Bone, %struct.Bone* %91, i32 0, i32 10, !dbg !4079
  %92 = load i32, i32* %flag125, align 8, !dbg !4079
  %and126 = and i32 %92, 65600, !dbg !4080
  %tobool127 = icmp ne i32 %and126, 0, !dbg !4080
  br i1 %tobool127, label %if.then128, label %if.end130, !dbg !4081

if.then128:                                       ; preds = %land.lhs.true123
  %93 = load i32, i32* %flag, align 4, !dbg !4082
  %and129 = and i32 %93, -17, !dbg !4082
  store i32 %and129, i32* %flag, align 4, !dbg !4082
  br label %if.end130, !dbg !4084

if.end130:                                        ; preds = %if.then128, %land.lhs.true123, %if.end120
  %94 = load %struct.Bone*, %struct.Bone** %bone, align 8, !dbg !4085
  %95 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !4087
  %act_bone = getelementptr inbounds %struct.bArmature, %struct.bArmature* %95, i32 0, i32 5, !dbg !4088
  %96 = load %struct.Bone*, %struct.Bone** %act_bone, align 8, !dbg !4088
  %cmp131 = icmp eq %struct.Bone* %94, %96, !dbg !4089
  br i1 %cmp131, label %if.then133, label %if.end135, !dbg !4090

if.then133:                                       ; preds = %if.end130
  %97 = load i32, i32* %flag, align 4, !dbg !4091
  %or134 = or i32 %97, 256, !dbg !4091
  store i32 %or134, i32* %flag, align 4, !dbg !4091
  br label %if.end135, !dbg !4092

if.end135:                                        ; preds = %if.then133, %if.end130
  %98 = load i8, i8* %do_const_color.addr, align 1, !dbg !4093
  %tobool136 = icmp ne i8 %98, 0, !dbg !4093
  br i1 %tobool136, label %if.then137, label %if.else138, !dbg !4095

if.then137:                                       ; preds = %if.end135
  br label %if.end139, !dbg !4096

if.else138:                                       ; preds = %if.end135
  %99 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !4098
  %100 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !4100
  call void @set_pchan_colorset(%struct.Object* %99, %struct.bPoseChannel* %100), !dbg !4101
  br label %if.end139

if.end139:                                        ; preds = %if.else138, %if.then137
  %101 = load i8, i8* %use_custom, align 1, !dbg !4102
  %tobool140 = icmp ne i8 %101, 0, !dbg !4102
  br i1 %tobool140, label %if.then141, label %if.else161, !dbg !4104

if.then141:                                       ; preds = %if.end139
  %102 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !4105
  %bone142 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %102, i32 0, i32 12, !dbg !4108
  %103 = load %struct.Bone*, %struct.Bone** %bone142, align 8, !dbg !4108
  %flag143 = getelementptr inbounds %struct.Bone, %struct.Bone* %103, i32 0, i32 10, !dbg !4109
  %104 = load i32, i32* %flag143, align 8, !dbg !4109
  %and144 = and i32 %104, 131072, !dbg !4110
  %tobool145 = icmp ne i32 %and144, 0, !dbg !4110
  br i1 %tobool145, label %if.then146, label %if.else147, !dbg !4111

if.then146:                                       ; preds = %if.then141
  store i8 1, i8* %draw_wire, align 1, !dbg !4112
  br label %if.end160, !dbg !4114

if.else147:                                       ; preds = %if.then141
  %105 = load i8, i8* %is_cull_enabled, align 1, !dbg !4115
  %conv148 = zext i8 %105 to i32, !dbg !4115
  %tobool149 = icmp ne i32 %conv148, 0, !dbg !4115
  br i1 %tobool149, label %land.lhs.true150, label %if.end157, !dbg !4118

land.lhs.true150:                                 ; preds = %if.else147
  %106 = load %struct.View3D*, %struct.View3D** %v3d.addr, align 8, !dbg !4119
  %flag2151 = getelementptr inbounds %struct.View3D, %struct.View3D* %106, i32 0, i32 29, !dbg !4120
  %107 = load i16, i16* %flag2151, align 2, !dbg !4120
  %conv152 = sext i16 %107 to i32, !dbg !4119
  %and153 = and i32 %conv152, 1024, !dbg !4121
  %cmp154 = icmp eq i32 %and153, 0, !dbg !4122
  br i1 %cmp154, label %if.then156, label %if.end157, !dbg !4123

if.then156:                                       ; preds = %land.lhs.true150
  store i8 0, i8* %is_cull_enabled, align 1, !dbg !4124
  call void @glDisable(i32 2884), !dbg !4126
  br label %if.end157, !dbg !4127

if.end157:                                        ; preds = %if.then156, %land.lhs.true150, %if.else147
  %108 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !4128
  %109 = load %struct.View3D*, %struct.View3D** %v3d.addr, align 8, !dbg !4129
  %110 = load %struct.RegionView3D*, %struct.RegionView3D** %rv3d, align 8, !dbg !4130
  %111 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !4131
  %custom158 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %111, i32 0, i32 18, !dbg !4132
  %112 = load %struct.Object*, %struct.Object** %custom158, align 8, !dbg !4132
  %113 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !4133
  %flag159 = getelementptr inbounds %struct.bArmature, %struct.bArmature* %113, i32 0, i32 8, !dbg !4134
  %114 = load i32, i32* %flag159, align 8, !dbg !4134
  %115 = load i32, i32* %flag, align 4, !dbg !4135
  %116 = load i32, i32* %index, align 4, !dbg !4136
  %117 = load %struct.Bone*, %struct.Bone** %bone, align 8, !dbg !4137
  %length = getelementptr inbounds %struct.Bone, %struct.Bone* %117, i32 0, i32 18, !dbg !4138
  %118 = load float, float* %length, align 4, !dbg !4138
  call void @draw_custom_bone(%struct.Scene* %108, %struct.View3D* %109, %struct.RegionView3D* %110, %struct.Object* %112, i16 signext 3, i32 %114, i32 %115, i32 %116, float %118), !dbg !4139
  br label %if.end160

if.end160:                                        ; preds = %if.end157, %if.then146
  br label %if.end195, !dbg !4140

if.else161:                                       ; preds = %if.end139
  %119 = load i8, i8* %is_cull_enabled, align 1, !dbg !4141
  %conv162 = zext i8 %119 to i32, !dbg !4141
  %cmp163 = icmp eq i32 %conv162, 0, !dbg !4144
  br i1 %cmp163, label %if.then165, label %if.end166, !dbg !4145

if.then165:                                       ; preds = %if.else161
  store i8 1, i8* %is_cull_enabled, align 1, !dbg !4146
  call void @glEnable(i32 2884), !dbg !4148
  br label %if.end166, !dbg !4149

if.end166:                                        ; preds = %if.then165, %if.else161
  %120 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !4150
  %drawtype167 = getelementptr inbounds %struct.bArmature, %struct.bArmature* %120, i32 0, i32 9, !dbg !4152
  %121 = load i32, i32* %drawtype167, align 4, !dbg !4152
  %cmp168 = icmp eq i32 %121, 1, !dbg !4153
  br i1 %cmp168, label %if.then170, label %if.else171, !dbg !4154

if.then170:                                       ; preds = %if.end166
  br label %if.end194, !dbg !4155

if.else171:                                       ; preds = %if.end166
  %122 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !4157
  %drawtype172 = getelementptr inbounds %struct.bArmature, %struct.bArmature* %122, i32 0, i32 9, !dbg !4159
  %123 = load i32, i32* %drawtype172, align 4, !dbg !4159
  %cmp173 = icmp eq i32 %123, 4, !dbg !4160
  br i1 %cmp173, label %if.then175, label %if.else176, !dbg !4161

if.then175:                                       ; preds = %if.else171
  br label %if.end193, !dbg !4162

if.else176:                                       ; preds = %if.else171
  %124 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !4164
  %drawtype177 = getelementptr inbounds %struct.bArmature, %struct.bArmature* %124, i32 0, i32 9, !dbg !4166
  %125 = load i32, i32* %drawtype177, align 4, !dbg !4166
  %cmp178 = icmp eq i32 %125, 3, !dbg !4167
  br i1 %cmp178, label %if.then180, label %if.else182, !dbg !4168

if.then180:                                       ; preds = %if.else176
  %126 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !4169
  %flag181 = getelementptr inbounds %struct.bArmature, %struct.bArmature* %126, i32 0, i32 8, !dbg !4171
  %127 = load i32, i32* %flag181, align 8, !dbg !4171
  %128 = load i32, i32* %flag, align 4, !dbg !4172
  %129 = load i32, i32* %index, align 4, !dbg !4173
  %130 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !4174
  call void @draw_sphere_bone(i16 signext 3, i32 %127, i32 %128, i16 signext 0, i32 %129, %struct.bPoseChannel* %130, %struct.EditBone* null), !dbg !4175
  br label %if.end192, !dbg !4176

if.else182:                                       ; preds = %if.else176
  %131 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !4177
  %drawtype183 = getelementptr inbounds %struct.bArmature, %struct.bArmature* %131, i32 0, i32 9, !dbg !4179
  %132 = load i32, i32* %drawtype183, align 4, !dbg !4179
  %cmp184 = icmp eq i32 %132, 2, !dbg !4180
  br i1 %cmp184, label %if.then186, label %if.else188, !dbg !4181

if.then186:                                       ; preds = %if.else182
  %133 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !4182
  %flag187 = getelementptr inbounds %struct.bArmature, %struct.bArmature* %133, i32 0, i32 8, !dbg !4184
  %134 = load i32, i32* %flag187, align 8, !dbg !4184
  %135 = load i32, i32* %flag, align 4, !dbg !4185
  %136 = load i32, i32* %index, align 4, !dbg !4186
  %137 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !4187
  call void @draw_b_bone(i16 signext 3, i32 %134, i32 %135, i16 signext 0, i32 %136, %struct.bPoseChannel* %137, %struct.EditBone* null), !dbg !4188
  br label %if.end191, !dbg !4189

if.else188:                                       ; preds = %if.else182
  %138 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !4190
  %flag189 = getelementptr inbounds %struct.bArmature, %struct.bArmature* %138, i32 0, i32 8, !dbg !4192
  %139 = load i32, i32* %flag189, align 8, !dbg !4192
  %140 = load i32, i32* %flag, align 4, !dbg !4193
  %141 = load i32, i32* %index, align 4, !dbg !4194
  %142 = load %struct.Bone*, %struct.Bone** %bone, align 8, !dbg !4195
  %length190 = getelementptr inbounds %struct.Bone, %struct.Bone* %142, i32 0, i32 18, !dbg !4196
  %143 = load float, float* %length190, align 4, !dbg !4196
  call void @draw_bone(i16 signext 3, i32 %139, i32 %140, i16 signext 0, i32 %141, float %143), !dbg !4197
  br label %if.end191

if.end191:                                        ; preds = %if.else188, %if.then186
  br label %if.end192

if.end192:                                        ; preds = %if.end191, %if.then180
  br label %if.end193

if.end193:                                        ; preds = %if.end192, %if.then175
  br label %if.end194

if.end194:                                        ; preds = %if.end193, %if.then170
  br label %if.end195

if.end195:                                        ; preds = %if.end194, %if.end160
  call void @glPopMatrix(), !dbg !4198
  br label %if.end196, !dbg !4199

if.end196:                                        ; preds = %if.end195, %if.then99
  br label %if.end197, !dbg !4200

if.end197:                                        ; preds = %if.end196, %lor.lhs.false94, %for.body82
  %144 = load i32, i32* %index, align 4, !dbg !4201
  %cmp198 = icmp ne i32 %144, -1, !dbg !4203
  br i1 %cmp198, label %if.then200, label %if.end201, !dbg !4204

if.then200:                                       ; preds = %if.end197
  %145 = load i32, i32* %index, align 4, !dbg !4205
  %add = add nsw i32 %145, 65536, !dbg !4205
  store i32 %add, i32* %index, align 4, !dbg !4205
  br label %if.end201, !dbg !4206

if.end201:                                        ; preds = %if.then200, %if.end197
  br label %for.inc202, !dbg !4207

for.inc202:                                       ; preds = %if.end201
  %146 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !4208
  %next203 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %146, i32 0, i32 0, !dbg !4209
  %147 = load %struct.bPoseChannel*, %struct.bPoseChannel** %next203, align 8, !dbg !4209
  store %struct.bPoseChannel* %147, %struct.bPoseChannel** %pchan, align 8, !dbg !4210
  br label %for.cond80, !dbg !4211, !llvm.loop !4212

for.end204:                                       ; preds = %for.cond80
  %148 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !4214
  %drawtype205 = getelementptr inbounds %struct.bArmature, %struct.bArmature* %148, i32 0, i32 9, !dbg !4214
  %149 = load i32, i32* %drawtype205, align 4, !dbg !4214
  %cmp206 = icmp eq i32 %149, 1, !dbg !4214
  br i1 %cmp206, label %lor.end, label %lor.rhs, !dbg !4214

lor.rhs:                                          ; preds = %for.end204
  %150 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !4214
  %drawtype208 = getelementptr inbounds %struct.bArmature, %struct.bArmature* %150, i32 0, i32 9, !dbg !4214
  %151 = load i32, i32* %drawtype208, align 4, !dbg !4214
  %cmp209 = icmp eq i32 %151, 4, !dbg !4214
  br label %lor.end, !dbg !4214

lor.end:                                          ; preds = %lor.rhs, %for.end204
  %152 = phi i1 [ true, %for.end204 ], [ %cmp209, %lor.rhs ]
  %lor.ext = zext i1 %152 to i32, !dbg !4214
  %cmp211 = icmp eq i32 %lor.ext, 0, !dbg !4216
  br i1 %cmp211, label %land.lhs.true213, label %if.end223, !dbg !4217

land.lhs.true213:                                 ; preds = %lor.end
  %153 = load i8, i8* %draw_wire, align 1, !dbg !4218
  %conv214 = zext i8 %153 to i32, !dbg !4218
  %cmp215 = icmp eq i32 %conv214, 0, !dbg !4219
  br i1 %cmp215, label %land.lhs.true217, label %if.end223, !dbg !4220

land.lhs.true217:                                 ; preds = %land.lhs.true213
  %154 = load i32, i32* %index, align 4, !dbg !4221
  %cmp218 = icmp ne i32 %154, -1, !dbg !4222
  br i1 %cmp218, label %if.then220, label %if.end223, !dbg !4223

if.then220:                                       ; preds = %land.lhs.true217
  %155 = load i32, i32* %index, align 4, !dbg !4224
  %and221 = and i32 %155, 65535, !dbg !4226
  %call222 = call zeroext i8 @GPU_select_load_id(i32 %and221), !dbg !4227
  store i32 -1, i32* %index, align 4, !dbg !4228
  br label %if.end223, !dbg !4229

if.end223:                                        ; preds = %if.then220, %land.lhs.true217, %land.lhs.true213, %lor.end
  br label %if.end224, !dbg !4230

if.end224:                                        ; preds = %if.end223, %if.end67
  %156 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !4231
  %flag225 = getelementptr inbounds %struct.bArmature, %struct.bArmature* %156, i32 0, i32 8, !dbg !4233
  %157 = load i32, i32* %flag225, align 8, !dbg !4233
  %and226 = and i32 %157, 1024, !dbg !4234
  %tobool227 = icmp ne i32 %and226, 0, !dbg !4234
  br i1 %tobool227, label %if.end352, label %land.lhs.true228, !dbg !4235

land.lhs.true228:                                 ; preds = %if.end224
  %158 = load i8, i8* %draw_wire, align 1, !dbg !4236
  %conv229 = zext i8 %158 to i32, !dbg !4236
  %tobool230 = icmp ne i32 %conv229, 0, !dbg !4236
  br i1 %tobool230, label %if.then235, label %lor.lhs.false231, !dbg !4237

lor.lhs.false231:                                 ; preds = %land.lhs.true228
  %159 = load i16, i16* %dt.addr, align 2, !dbg !4238
  %conv232 = sext i16 %159 to i32, !dbg !4238
  %cmp233 = icmp sle i32 %conv232, 2, !dbg !4239
  br i1 %cmp233, label %if.then235, label %if.end352, !dbg !4240

if.then235:                                       ; preds = %lor.lhs.false231, %land.lhs.true228
  %160 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !4241
  %flag236 = getelementptr inbounds %struct.bArmature, %struct.bArmature* %160, i32 0, i32 8, !dbg !4244
  %161 = load i32, i32* %flag236, align 8, !dbg !4244
  %and237 = and i32 %161, 16, !dbg !4245
  %tobool238 = icmp ne i32 %and237, 0, !dbg !4245
  br i1 %tobool238, label %if.then239, label %if.end241, !dbg !4246

if.then239:                                       ; preds = %if.then235
  %162 = load %struct.Base*, %struct.Base** %base.addr, align 8, !dbg !4247
  %selcol240 = getelementptr inbounds %struct.Base, %struct.Base* %162, i32 0, i32 3, !dbg !4248
  %163 = load i32, i32* %selcol240, align 4, !dbg !4248
  store i32 %163, i32* %index, align 4, !dbg !4249
  br label %if.end241, !dbg !4250

if.end241:                                        ; preds = %if.then239, %if.then235
  %164 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !4251
  %pose242 = getelementptr inbounds %struct.Object, %struct.Object* %164, i32 0, i32 18, !dbg !4253
  %165 = load %struct.bPose*, %struct.bPose** %pose242, align 8, !dbg !4253
  %chanbase243 = getelementptr inbounds %struct.bPose, %struct.bPose* %165, i32 0, i32 0, !dbg !4254
  %first244 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %chanbase243, i32 0, i32 0, !dbg !4255
  %166 = load i8*, i8** %first244, align 8, !dbg !4255
  %167 = bitcast i8* %166 to %struct.bPoseChannel*, !dbg !4251
  store %struct.bPoseChannel* %167, %struct.bPoseChannel** %pchan, align 8, !dbg !4256
  br label %for.cond245, !dbg !4257

for.cond245:                                      ; preds = %for.inc328, %if.end241
  %168 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !4258
  %tobool246 = icmp ne %struct.bPoseChannel* %168, null, !dbg !4260
  br i1 %tobool246, label %for.body247, label %for.end330, !dbg !4260

for.body247:                                      ; preds = %for.cond245
  %169 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !4261
  %bone248 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %169, i32 0, i32 12, !dbg !4263
  %170 = load %struct.Bone*, %struct.Bone** %bone248, align 8, !dbg !4263
  store %struct.Bone* %170, %struct.Bone** %bone, align 8, !dbg !4264
  %171 = load %struct.Bone*, %struct.Bone** %bone, align 8, !dbg !4265
  %flag249 = getelementptr inbounds %struct.Bone, %struct.Bone* %171, i32 0, i32 10, !dbg !4267
  %172 = load i32, i32* %flag249, align 8, !dbg !4267
  %and250 = and i32 %172, 65600, !dbg !4268
  %cmp251 = icmp eq i32 %and250, 0, !dbg !4269
  br i1 %cmp251, label %land.lhs.true253, label %if.end322, !dbg !4270

land.lhs.true253:                                 ; preds = %for.body247
  %173 = load i32, i32* getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 15), align 8, !dbg !4271
  %and254 = and i32 %173, 32, !dbg !4272
  %cmp255 = icmp eq i32 %and254, 0, !dbg !4273
  br i1 %cmp255, label %if.then262, label %lor.lhs.false257, !dbg !4274

lor.lhs.false257:                                 ; preds = %land.lhs.true253
  %174 = load %struct.Bone*, %struct.Bone** %bone, align 8, !dbg !4275
  %flag258 = getelementptr inbounds %struct.Bone, %struct.Bone* %174, i32 0, i32 10, !dbg !4276
  %175 = load i32, i32* %flag258, align 8, !dbg !4276
  %and259 = and i32 %175, 2097152, !dbg !4277
  %cmp260 = icmp eq i32 %and259, 0, !dbg !4278
  br i1 %cmp260, label %if.then262, label %if.end322, !dbg !4279

if.then262:                                       ; preds = %lor.lhs.false257, %land.lhs.true253
  %176 = load %struct.Bone*, %struct.Bone** %bone, align 8, !dbg !4280
  %layer263 = getelementptr inbounds %struct.Bone, %struct.Bone* %176, i32 0, i32 25, !dbg !4283
  %177 = load i32, i32* %layer263, align 8, !dbg !4283
  %178 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !4284
  %layer264 = getelementptr inbounds %struct.bArmature, %struct.bArmature* %178, i32 0, i32 15, !dbg !4285
  %179 = load i32, i32* %layer264, align 8, !dbg !4285
  %and265 = and i32 %177, %179, !dbg !4286
  %tobool266 = icmp ne i32 %and265, 0, !dbg !4286
  br i1 %tobool266, label %if.then267, label %if.end321, !dbg !4287

if.then267:                                       ; preds = %if.then262
  %180 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !4288
  %custom268 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %180, i32 0, i32 18, !dbg !4291
  %181 = load %struct.Object*, %struct.Object** %custom268, align 8, !dbg !4291
  %tobool269 = icmp ne %struct.Object* %181, null, !dbg !4288
  br i1 %tobool269, label %if.then270, label %if.end320, !dbg !4292

if.then270:                                       ; preds = %if.then267
  %182 = load i16, i16* %dt.addr, align 2, !dbg !4293
  %conv271 = sext i16 %182 to i32, !dbg !4293
  %cmp272 = icmp slt i32 %conv271, 3, !dbg !4296
  br i1 %cmp272, label %if.then278, label %lor.lhs.false274, !dbg !4297

lor.lhs.false274:                                 ; preds = %if.then270
  %183 = load %struct.Bone*, %struct.Bone** %bone, align 8, !dbg !4298
  %flag275 = getelementptr inbounds %struct.Bone, %struct.Bone* %183, i32 0, i32 10, !dbg !4299
  %184 = load i32, i32* %flag275, align 8, !dbg !4299
  %and276 = and i32 %184, 131072, !dbg !4300
  %tobool277 = icmp ne i32 %and276, 0, !dbg !4300
  br i1 %tobool277, label %if.then278, label %if.end319, !dbg !4301

if.then278:                                       ; preds = %lor.lhs.false274, %if.then270
  call void @glPushMatrix(), !dbg !4302
  %185 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !4304
  %custom_tx279 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %185, i32 0, i32 19, !dbg !4306
  %186 = load %struct.bPoseChannel*, %struct.bPoseChannel** %custom_tx279, align 8, !dbg !4306
  %tobool280 = icmp ne %struct.bPoseChannel* %186, null, !dbg !4304
  br i1 %tobool280, label %if.then281, label %if.else285, !dbg !4307

if.then281:                                       ; preds = %if.then278
  %187 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !4308
  %custom_tx282 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %187, i32 0, i32 19, !dbg !4308
  %188 = load %struct.bPoseChannel*, %struct.bPoseChannel** %custom_tx282, align 8, !dbg !4308
  %pose_mat283 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %188, i32 0, i32 29, !dbg !4308
  %arraydecay284 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %pose_mat283, i64 0, i64 0, !dbg !4308
  %189 = bitcast [4 x float]* %arraydecay284 to float*, !dbg !4308
  call void @glMultMatrixf(float* %189), !dbg !4308
  br label %if.end288, !dbg !4310

if.else285:                                       ; preds = %if.then278
  %190 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !4311
  %pose_mat286 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %190, i32 0, i32 29, !dbg !4311
  %arraydecay287 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %pose_mat286, i64 0, i64 0, !dbg !4311
  %191 = bitcast [4 x float]* %arraydecay287 to float*, !dbg !4311
  call void @glMultMatrixf(float* %191), !dbg !4311
  br label %if.end288

if.end288:                                        ; preds = %if.else285, %if.then281
  %192 = load i8, i8* %do_const_color.addr, align 1, !dbg !4313
  %tobool289 = icmp ne i8 %192, 0, !dbg !4313
  br i1 %tobool289, label %if.then290, label %if.else291, !dbg !4315

if.then290:                                       ; preds = %if.end288
  br label %if.end298, !dbg !4316

if.else291:                                       ; preds = %if.end288
  %193 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !4318
  %flag292 = getelementptr inbounds %struct.bArmature, %struct.bArmature* %193, i32 0, i32 8, !dbg !4320
  %194 = load i32, i32* %flag292, align 8, !dbg !4320
  %and293 = and i32 %194, 16, !dbg !4321
  %tobool294 = icmp ne i32 %and293, 0, !dbg !4321
  br i1 %tobool294, label %if.then295, label %if.else296, !dbg !4322

if.then295:                                       ; preds = %if.else291
  %195 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !4323
  %196 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !4324
  call void @set_pchan_colorset(%struct.Object* %195, %struct.bPoseChannel* %196), !dbg !4325
  br label %if.end297, !dbg !4325

if.else296:                                       ; preds = %if.else291
  %197 = load i8*, i8** %ob_wire_col.addr, align 8, !dbg !4326
  call void @glColor3ubv(i8* %197), !dbg !4328
  br label %if.end297

if.end297:                                        ; preds = %if.else296, %if.then295
  br label %if.end298

if.end298:                                        ; preds = %if.end297, %if.then290
  %198 = load %struct.Bone*, %struct.Bone** %bone, align 8, !dbg !4329
  %flag299 = getelementptr inbounds %struct.Bone, %struct.Bone* %198, i32 0, i32 10, !dbg !4330
  %199 = load i32, i32* %flag299, align 8, !dbg !4330
  store i32 %199, i32* %flag, align 4, !dbg !4331
  %200 = load %struct.Bone*, %struct.Bone** %bone, align 8, !dbg !4332
  %parent300 = getelementptr inbounds %struct.Bone, %struct.Bone* %200, i32 0, i32 3, !dbg !4334
  %201 = load %struct.Bone*, %struct.Bone** %parent300, align 8, !dbg !4334
  %tobool301 = icmp ne %struct.Bone* %201, null, !dbg !4335
  br i1 %tobool301, label %land.lhs.true302, label %if.end309, !dbg !4336

land.lhs.true302:                                 ; preds = %if.end298
  %202 = load %struct.Bone*, %struct.Bone** %bone, align 8, !dbg !4337
  %parent303 = getelementptr inbounds %struct.Bone, %struct.Bone* %202, i32 0, i32 3, !dbg !4338
  %203 = load %struct.Bone*, %struct.Bone** %parent303, align 8, !dbg !4338
  %flag304 = getelementptr inbounds %struct.Bone, %struct.Bone* %203, i32 0, i32 10, !dbg !4339
  %204 = load i32, i32* %flag304, align 8, !dbg !4339
  %and305 = and i32 %204, 65600, !dbg !4340
  %tobool306 = icmp ne i32 %and305, 0, !dbg !4340
  br i1 %tobool306, label %if.then307, label %if.end309, !dbg !4341

if.then307:                                       ; preds = %land.lhs.true302
  %205 = load i32, i32* %flag, align 4, !dbg !4342
  %and308 = and i32 %205, -17, !dbg !4342
  store i32 %and308, i32* %flag, align 4, !dbg !4342
  br label %if.end309, !dbg !4343

if.end309:                                        ; preds = %if.then307, %land.lhs.true302, %if.end298
  %206 = load %struct.Bone*, %struct.Bone** %bone, align 8, !dbg !4344
  %207 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !4346
  %act_bone310 = getelementptr inbounds %struct.bArmature, %struct.bArmature* %207, i32 0, i32 5, !dbg !4347
  %208 = load %struct.Bone*, %struct.Bone** %act_bone310, align 8, !dbg !4347
  %cmp311 = icmp eq %struct.Bone* %206, %208, !dbg !4348
  br i1 %cmp311, label %if.then313, label %if.end315, !dbg !4349

if.then313:                                       ; preds = %if.end309
  %209 = load i32, i32* %flag, align 4, !dbg !4350
  %or314 = or i32 %209, 256, !dbg !4350
  store i32 %or314, i32* %flag, align 4, !dbg !4350
  br label %if.end315, !dbg !4351

if.end315:                                        ; preds = %if.then313, %if.end309
  %210 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !4352
  %211 = load %struct.View3D*, %struct.View3D** %v3d.addr, align 8, !dbg !4353
  %212 = load %struct.RegionView3D*, %struct.RegionView3D** %rv3d, align 8, !dbg !4354
  %213 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !4355
  %custom316 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %213, i32 0, i32 18, !dbg !4356
  %214 = load %struct.Object*, %struct.Object** %custom316, align 8, !dbg !4356
  %215 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !4357
  %flag317 = getelementptr inbounds %struct.bArmature, %struct.bArmature* %215, i32 0, i32 8, !dbg !4358
  %216 = load i32, i32* %flag317, align 8, !dbg !4358
  %217 = load i32, i32* %flag, align 4, !dbg !4359
  %218 = load i32, i32* %index, align 4, !dbg !4360
  %219 = load %struct.Bone*, %struct.Bone** %bone, align 8, !dbg !4361
  %length318 = getelementptr inbounds %struct.Bone, %struct.Bone* %219, i32 0, i32 18, !dbg !4362
  %220 = load float, float* %length318, align 4, !dbg !4362
  call void @draw_custom_bone(%struct.Scene* %210, %struct.View3D* %211, %struct.RegionView3D* %212, %struct.Object* %214, i16 signext 2, i32 %216, i32 %217, i32 %218, float %220), !dbg !4363
  call void @glPopMatrix(), !dbg !4364
  br label %if.end319, !dbg !4365

if.end319:                                        ; preds = %if.end315, %lor.lhs.false274
  br label %if.end320, !dbg !4366

if.end320:                                        ; preds = %if.end319, %if.then267
  br label %if.end321, !dbg !4367

if.end321:                                        ; preds = %if.end320, %if.then262
  br label %if.end322, !dbg !4368

if.end322:                                        ; preds = %if.end321, %lor.lhs.false257, %for.body247
  %221 = load i32, i32* %index, align 4, !dbg !4369
  %cmp323 = icmp ne i32 %221, -1, !dbg !4371
  br i1 %cmp323, label %if.then325, label %if.end327, !dbg !4372

if.then325:                                       ; preds = %if.end322
  %222 = load i32, i32* %index, align 4, !dbg !4373
  %add326 = add nsw i32 %222, 65536, !dbg !4373
  store i32 %add326, i32* %index, align 4, !dbg !4373
  br label %if.end327, !dbg !4374

if.end327:                                        ; preds = %if.then325, %if.end322
  br label %for.inc328, !dbg !4375

for.inc328:                                       ; preds = %if.end327
  %223 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !4376
  %next329 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %223, i32 0, i32 0, !dbg !4377
  %224 = load %struct.bPoseChannel*, %struct.bPoseChannel** %next329, align 8, !dbg !4377
  store %struct.bPoseChannel* %224, %struct.bPoseChannel** %pchan, align 8, !dbg !4378
  br label %for.cond245, !dbg !4379, !llvm.loop !4380

for.end330:                                       ; preds = %for.cond245
  %225 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !4382
  %drawtype331 = getelementptr inbounds %struct.bArmature, %struct.bArmature* %225, i32 0, i32 9, !dbg !4382
  %226 = load i32, i32* %drawtype331, align 4, !dbg !4382
  %cmp332 = icmp eq i32 %226, 1, !dbg !4382
  br i1 %cmp332, label %lor.end338, label %lor.rhs334, !dbg !4382

lor.rhs334:                                       ; preds = %for.end330
  %227 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !4382
  %drawtype335 = getelementptr inbounds %struct.bArmature, %struct.bArmature* %227, i32 0, i32 9, !dbg !4382
  %228 = load i32, i32* %drawtype335, align 4, !dbg !4382
  %cmp336 = icmp eq i32 %228, 4, !dbg !4382
  br label %lor.end338, !dbg !4382

lor.end338:                                       ; preds = %lor.rhs334, %for.end330
  %229 = phi i1 [ true, %for.end330 ], [ %cmp336, %lor.rhs334 ]
  %lor.ext339 = zext i1 %229 to i32, !dbg !4382
  %cmp340 = icmp eq i32 %lor.ext339, 0, !dbg !4384
  br i1 %cmp340, label %land.lhs.true342, label %if.end351, !dbg !4385

land.lhs.true342:                                 ; preds = %lor.end338
  %230 = load i8, i8* %draw_wire, align 1, !dbg !4386
  %conv343 = zext i8 %230 to i32, !dbg !4386
  %tobool344 = icmp ne i32 %conv343, 0, !dbg !4386
  br i1 %tobool344, label %land.lhs.true345, label %if.end351, !dbg !4387

land.lhs.true345:                                 ; preds = %land.lhs.true342
  %231 = load i32, i32* %index, align 4, !dbg !4388
  %cmp346 = icmp ne i32 %231, -1, !dbg !4389
  br i1 %cmp346, label %if.then348, label %if.end351, !dbg !4390

if.then348:                                       ; preds = %land.lhs.true345
  %232 = load i32, i32* %index, align 4, !dbg !4391
  %and349 = and i32 %232, 65535, !dbg !4393
  %call350 = call zeroext i8 @GPU_select_load_id(i32 %and349), !dbg !4394
  store i32 -1, i32* %index, align 4, !dbg !4395
  br label %if.end351, !dbg !4396

if.end351:                                        ; preds = %if.then348, %land.lhs.true345, %land.lhs.true342, %lor.end338
  br label %if.end352, !dbg !4397

if.end352:                                        ; preds = %if.end351, %lor.lhs.false231, %if.end224
  %233 = load i16, i16* %dt.addr, align 2, !dbg !4398
  %conv353 = sext i16 %233 to i32, !dbg !4398
  %cmp354 = icmp sle i32 %conv353, 2, !dbg !4400
  br i1 %cmp354, label %if.then368, label %lor.lhs.false356, !dbg !4401

lor.lhs.false356:                                 ; preds = %if.end352
  %234 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !4402
  %flag357 = getelementptr inbounds %struct.bArmature, %struct.bArmature* %234, i32 0, i32 8, !dbg !4403
  %235 = load i32, i32* %flag357, align 8, !dbg !4403
  %and358 = and i32 %235, 16, !dbg !4404
  %tobool359 = icmp ne i32 %and358, 0, !dbg !4404
  br i1 %tobool359, label %if.then368, label %lor.lhs.false360, !dbg !4405

lor.lhs.false360:                                 ; preds = %lor.lhs.false356
  %236 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !4406
  %drawtype361 = getelementptr inbounds %struct.bArmature, %struct.bArmature* %236, i32 0, i32 9, !dbg !4406
  %237 = load i32, i32* %drawtype361, align 4, !dbg !4406
  %cmp362 = icmp eq i32 %237, 1, !dbg !4406
  br i1 %cmp362, label %if.then368, label %lor.lhs.false364, !dbg !4406

lor.lhs.false364:                                 ; preds = %lor.lhs.false360
  %238 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !4406
  %drawtype365 = getelementptr inbounds %struct.bArmature, %struct.bArmature* %238, i32 0, i32 9, !dbg !4406
  %239 = load i32, i32* %drawtype365, align 4, !dbg !4406
  %cmp366 = icmp eq i32 %239, 4, !dbg !4406
  br i1 %cmp366, label %if.then368, label %if.end613, !dbg !4407

if.then368:                                       ; preds = %lor.lhs.false364, %lor.lhs.false360, %lor.lhs.false356, %if.end352
  %240 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !4408
  %drawtype369 = getelementptr inbounds %struct.bArmature, %struct.bArmature* %240, i32 0, i32 9, !dbg !4408
  %241 = load i32, i32* %drawtype369, align 4, !dbg !4408
  %cmp370 = icmp eq i32 %241, 1, !dbg !4408
  br i1 %cmp370, label %if.then376, label %lor.lhs.false372, !dbg !4408

lor.lhs.false372:                                 ; preds = %if.then368
  %242 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !4408
  %drawtype373 = getelementptr inbounds %struct.bArmature, %struct.bArmature* %242, i32 0, i32 9, !dbg !4408
  %243 = load i32, i32* %drawtype373, align 4, !dbg !4408
  %cmp374 = icmp eq i32 %243, 4, !dbg !4408
  br i1 %cmp374, label %if.then376, label %if.else383, !dbg !4411

if.then376:                                       ; preds = %lor.lhs.false372, %if.then368
  %244 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !4412
  %flag377 = getelementptr inbounds %struct.bArmature, %struct.bArmature* %244, i32 0, i32 8, !dbg !4415
  %245 = load i32, i32* %flag377, align 8, !dbg !4415
  %and378 = and i32 %245, 16, !dbg !4416
  %tobool379 = icmp ne i32 %and378, 0, !dbg !4416
  br i1 %tobool379, label %if.then380, label %if.end382, !dbg !4417

if.then380:                                       ; preds = %if.then376
  %246 = load %struct.Base*, %struct.Base** %base.addr, align 8, !dbg !4418
  %selcol381 = getelementptr inbounds %struct.Base, %struct.Base* %246, i32 0, i32 3, !dbg !4419
  %247 = load i32, i32* %selcol381, align 4, !dbg !4419
  store i32 %247, i32* %index, align 4, !dbg !4420
  br label %if.end382, !dbg !4421

if.end382:                                        ; preds = %if.then380, %if.then376
  br label %if.end400, !dbg !4422

if.else383:                                       ; preds = %lor.lhs.false372
  %248 = load i16, i16* %dt.addr, align 2, !dbg !4423
  %conv384 = sext i16 %248 to i32, !dbg !4423
  %cmp385 = icmp sgt i32 %conv384, 2, !dbg !4425
  br i1 %cmp385, label %land.lhs.true387, label %if.else392, !dbg !4426

land.lhs.true387:                                 ; preds = %if.else383
  %249 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !4427
  %flag388 = getelementptr inbounds %struct.bArmature, %struct.bArmature* %249, i32 0, i32 8, !dbg !4428
  %250 = load i32, i32* %flag388, align 8, !dbg !4428
  %and389 = and i32 %250, 16, !dbg !4429
  %tobool390 = icmp ne i32 %and389, 0, !dbg !4429
  br i1 %tobool390, label %if.then391, label %if.else392, !dbg !4430

if.then391:                                       ; preds = %land.lhs.true387
  %251 = load %struct.RegionView3D*, %struct.RegionView3D** %rv3d, align 8, !dbg !4431
  call void @ED_view3d_polygon_offset(%struct.RegionView3D* %251, float 1.000000e+00), !dbg !4433
  br label %if.end399, !dbg !4434

if.else392:                                       ; preds = %land.lhs.true387, %if.else383
  %252 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !4435
  %flag393 = getelementptr inbounds %struct.bArmature, %struct.bArmature* %252, i32 0, i32 8, !dbg !4438
  %253 = load i32, i32* %flag393, align 8, !dbg !4438
  %and394 = and i32 %253, 16, !dbg !4439
  %tobool395 = icmp ne i32 %and394, 0, !dbg !4439
  br i1 %tobool395, label %if.then396, label %if.end398, !dbg !4440

if.then396:                                       ; preds = %if.else392
  %254 = load %struct.Base*, %struct.Base** %base.addr, align 8, !dbg !4441
  %selcol397 = getelementptr inbounds %struct.Base, %struct.Base* %254, i32 0, i32 3, !dbg !4442
  %255 = load i32, i32* %selcol397, align 4, !dbg !4442
  store i32 %255, i32* %index, align 4, !dbg !4443
  br label %if.end398, !dbg !4444

if.end398:                                        ; preds = %if.then396, %if.else392
  br label %if.end399

if.end399:                                        ; preds = %if.end398, %if.then391
  br label %if.end400

if.end400:                                        ; preds = %if.end399, %if.end382
  %256 = load i8, i8* %is_cull_enabled, align 1, !dbg !4445
  %conv401 = zext i8 %256 to i32, !dbg !4445
  %cmp402 = icmp eq i32 %conv401, 0, !dbg !4447
  br i1 %cmp402, label %if.then404, label %if.end405, !dbg !4448

if.then404:                                       ; preds = %if.end400
  store i8 1, i8* %is_cull_enabled, align 1, !dbg !4449
  call void @glEnable(i32 2884), !dbg !4451
  br label %if.end405, !dbg !4452

if.end405:                                        ; preds = %if.then404, %if.end400
  %257 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !4453
  %pose406 = getelementptr inbounds %struct.Object, %struct.Object* %257, i32 0, i32 18, !dbg !4455
  %258 = load %struct.bPose*, %struct.bPose** %pose406, align 8, !dbg !4455
  %chanbase407 = getelementptr inbounds %struct.bPose, %struct.bPose* %258, i32 0, i32 0, !dbg !4456
  %first408 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %chanbase407, i32 0, i32 0, !dbg !4457
  %259 = load i8*, i8** %first408, align 8, !dbg !4457
  %260 = bitcast i8* %259 to %struct.bPoseChannel*, !dbg !4453
  store %struct.bPoseChannel* %260, %struct.bPoseChannel** %pchan, align 8, !dbg !4458
  br label %for.cond409, !dbg !4459

for.cond409:                                      ; preds = %for.inc593, %if.end405
  %261 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !4460
  %tobool410 = icmp ne %struct.bPoseChannel* %261, null, !dbg !4462
  br i1 %tobool410, label %for.body411, label %for.end595, !dbg !4462

for.body411:                                      ; preds = %for.cond409
  %262 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !4463
  %bone412 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %262, i32 0, i32 12, !dbg !4465
  %263 = load %struct.Bone*, %struct.Bone** %bone412, align 8, !dbg !4465
  store %struct.Bone* %263, %struct.Bone** %bone, align 8, !dbg !4466
  %264 = load %struct.Bone*, %struct.Bone** %bone, align 8, !dbg !4467
  %layer413 = getelementptr inbounds %struct.Bone, %struct.Bone* %264, i32 0, i32 25, !dbg !4468
  %265 = load i32, i32* %layer413, align 8, !dbg !4468
  %266 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !4469
  %layer_used414 = getelementptr inbounds %struct.bArmature, %struct.bArmature* %266, i32 0, i32 14, !dbg !4470
  %267 = load i32, i32* %layer_used414, align 4, !dbg !4471
  %or415 = or i32 %267, %265, !dbg !4471
  store i32 %or415, i32* %layer_used414, align 4, !dbg !4471
  %268 = load %struct.Bone*, %struct.Bone** %bone, align 8, !dbg !4472
  %flag416 = getelementptr inbounds %struct.Bone, %struct.Bone* %268, i32 0, i32 10, !dbg !4474
  %269 = load i32, i32* %flag416, align 8, !dbg !4474
  %and417 = and i32 %269, 65600, !dbg !4475
  %cmp418 = icmp eq i32 %and417, 0, !dbg !4476
  br i1 %cmp418, label %land.lhs.true420, label %if.end587, !dbg !4477

land.lhs.true420:                                 ; preds = %for.body411
  %270 = load i32, i32* getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 15), align 8, !dbg !4478
  %and421 = and i32 %270, 32, !dbg !4479
  %cmp422 = icmp eq i32 %and421, 0, !dbg !4480
  br i1 %cmp422, label %if.then429, label %lor.lhs.false424, !dbg !4481

lor.lhs.false424:                                 ; preds = %land.lhs.true420
  %271 = load %struct.Bone*, %struct.Bone** %bone, align 8, !dbg !4482
  %flag425 = getelementptr inbounds %struct.Bone, %struct.Bone* %271, i32 0, i32 10, !dbg !4483
  %272 = load i32, i32* %flag425, align 8, !dbg !4483
  %and426 = and i32 %272, 2097152, !dbg !4484
  %cmp427 = icmp eq i32 %and426, 0, !dbg !4485
  br i1 %cmp427, label %if.then429, label %if.end587, !dbg !4486

if.then429:                                       ; preds = %lor.lhs.false424, %land.lhs.true420
  %273 = load %struct.Bone*, %struct.Bone** %bone, align 8, !dbg !4487
  %layer430 = getelementptr inbounds %struct.Bone, %struct.Bone* %273, i32 0, i32 25, !dbg !4490
  %274 = load i32, i32* %layer430, align 8, !dbg !4490
  %275 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !4491
  %layer431 = getelementptr inbounds %struct.bArmature, %struct.bArmature* %275, i32 0, i32 15, !dbg !4492
  %276 = load i32, i32* %layer431, align 8, !dbg !4492
  %and432 = and i32 %274, %276, !dbg !4493
  %tobool433 = icmp ne i32 %and432, 0, !dbg !4493
  br i1 %tobool433, label %if.then434, label %if.end586, !dbg !4494

if.then434:                                       ; preds = %if.then429
  call void @llvm.dbg.declare(metadata i16* %constflag, metadata !4495, metadata !DIExpression()), !dbg !4497
  %277 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !4498
  %constflag435 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %277, i32 0, i32 9, !dbg !4499
  %278 = load i8, i8* %constflag435, align 8, !dbg !4499
  %conv436 = zext i8 %278 to i16, !dbg !4498
  store i16 %conv436, i16* %constflag, align 2, !dbg !4497
  %279 = load i16, i16* %do_dashed, align 2, !dbg !4500
  %conv437 = sext i16 %279 to i32, !dbg !4500
  %and438 = and i32 %conv437, 1, !dbg !4502
  %tobool439 = icmp ne i32 %and438, 0, !dbg !4502
  br i1 %tobool439, label %land.lhs.true440, label %if.end511, !dbg !4503

land.lhs.true440:                                 ; preds = %if.then434
  %280 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !4504
  %parent441 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %280, i32 0, i32 13, !dbg !4505
  %281 = load %struct.bPoseChannel*, %struct.bPoseChannel** %parent441, align 8, !dbg !4505
  %tobool442 = icmp ne %struct.bPoseChannel* %281, null, !dbg !4506
  br i1 %tobool442, label %if.then443, label %if.end511, !dbg !4507

if.then443:                                       ; preds = %land.lhs.true440
  %282 = load i16, i16* %do_dashed, align 2, !dbg !4508
  %conv444 = sext i16 %282 to i32, !dbg !4508
  %and445 = and i32 %conv444, 2, !dbg !4511
  %tobool446 = icmp ne i32 %and445, 0, !dbg !4511
  br i1 %tobool446, label %land.lhs.true447, label %if.end463, !dbg !4512

land.lhs.true447:                                 ; preds = %if.then443
  %283 = load %struct.Bone*, %struct.Bone** %bone, align 8, !dbg !4513
  %flag448 = getelementptr inbounds %struct.Bone, %struct.Bone* %283, i32 0, i32 10, !dbg !4514
  %284 = load i32, i32* %flag448, align 8, !dbg !4514
  %and449 = and i32 %284, 16, !dbg !4515
  %cmp450 = icmp eq i32 %and449, 0, !dbg !4516
  br i1 %cmp450, label %if.then452, label %if.end463, !dbg !4517

if.then452:                                       ; preds = %land.lhs.true447
  %285 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !4518
  %flag453 = getelementptr inbounds %struct.bArmature, %struct.bArmature* %285, i32 0, i32 8, !dbg !4521
  %286 = load i32, i32* %flag453, align 8, !dbg !4521
  %and454 = and i32 %286, 16, !dbg !4522
  %tobool455 = icmp ne i32 %and454, 0, !dbg !4522
  br i1 %tobool455, label %if.then456, label %if.end459, !dbg !4523

if.then456:                                       ; preds = %if.then452
  %287 = load i32, i32* %index, align 4, !dbg !4524
  %and457 = and i32 %287, 65535, !dbg !4526
  %call458 = call zeroext i8 @GPU_select_load_id(i32 %and457), !dbg !4527
  call void @UI_ThemeColor(i32 25), !dbg !4528
  br label %if.end459, !dbg !4529

if.end459:                                        ; preds = %if.then456, %if.then452
  call void @setlinestyle(i32 3), !dbg !4530
  call void @glBegin(i32 1), !dbg !4531
  %288 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !4532
  %pose_head = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %288, i32 0, i32 31, !dbg !4533
  %arraydecay460 = getelementptr inbounds [3 x float], [3 x float]* %pose_head, i64 0, i64 0, !dbg !4532
  call void @glVertex3fv(float* %arraydecay460), !dbg !4534
  %289 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !4535
  %parent461 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %289, i32 0, i32 13, !dbg !4536
  %290 = load %struct.bPoseChannel*, %struct.bPoseChannel** %parent461, align 8, !dbg !4536
  %pose_tail = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %290, i32 0, i32 32, !dbg !4537
  %arraydecay462 = getelementptr inbounds [3 x float], [3 x float]* %pose_tail, i64 0, i64 0, !dbg !4535
  call void @glVertex3fv(float* %arraydecay462), !dbg !4538
  call void @glEnd(), !dbg !4539
  call void @setlinestyle(i32 0), !dbg !4540
  br label %if.end463, !dbg !4541

if.end463:                                        ; preds = %if.end459, %land.lhs.true447, %if.then443
  %291 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !4542
  %flag464 = getelementptr inbounds %struct.bArmature, %struct.bArmature* %291, i32 0, i32 8, !dbg !4544
  %292 = load i32, i32* %flag464, align 8, !dbg !4544
  %and465 = and i32 %292, 16, !dbg !4545
  %tobool466 = icmp ne i32 %and465, 0, !dbg !4545
  br i1 %tobool466, label %if.then467, label %if.end510, !dbg !4546

if.then467:                                       ; preds = %if.end463
  %293 = load i16, i16* %constflag, align 2, !dbg !4547
  %conv468 = sext i16 %293 to i32, !dbg !4547
  %and469 = and i32 %conv468, 1, !dbg !4550
  %tobool470 = icmp ne i32 %and469, 0, !dbg !4550
  br i1 %tobool470, label %if.then471, label %if.else490, !dbg !4551

if.then471:                                       ; preds = %if.then467
  %294 = load %struct.Bone*, %struct.Bone** %bone, align 8, !dbg !4552
  %flag472 = getelementptr inbounds %struct.Bone, %struct.Bone* %294, i32 0, i32 10, !dbg !4555
  %295 = load i32, i32* %flag472, align 8, !dbg !4555
  %and473 = and i32 %295, 1, !dbg !4556
  %tobool474 = icmp ne i32 %and473, 0, !dbg !4556
  br i1 %tobool474, label %if.then475, label %if.end489, !dbg !4557

if.then475:                                       ; preds = %if.then471
  %296 = load i16, i16* %constflag, align 2, !dbg !4558
  %conv476 = sext i16 %296 to i32, !dbg !4558
  %and477 = and i32 %conv476, 8, !dbg !4561
  %tobool478 = icmp ne i32 %and477, 0, !dbg !4561
  br i1 %tobool478, label %if.then479, label %if.else480, !dbg !4562

if.then479:                                       ; preds = %if.then475
  call void @glColor3ub(i8 zeroext -56, i8 zeroext 120, i8 zeroext 0), !dbg !4563
  br label %if.end481, !dbg !4563

if.else480:                                       ; preds = %if.then475
  call void @glColor3ub(i8 zeroext -56, i8 zeroext -56, i8 zeroext 50), !dbg !4564
  br label %if.end481

if.end481:                                        ; preds = %if.else480, %if.then479
  %297 = load i32, i32* %index, align 4, !dbg !4565
  %and482 = and i32 %297, 65535, !dbg !4566
  %call483 = call zeroext i8 @GPU_select_load_id(i32 %and482), !dbg !4567
  %298 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !4568
  %299 = load i16, i16* %do_dashed, align 2, !dbg !4569
  %conv484 = sext i16 %299 to i32, !dbg !4569
  %and485 = and i32 %conv484, 2, !dbg !4570
  %tobool486 = icmp ne i32 %and485, 0, !dbg !4571
  %lnot487 = xor i1 %tobool486, true, !dbg !4571
  %lnot.ext = zext i1 %lnot487 to i32, !dbg !4571
  %conv488 = trunc i32 %lnot.ext to i16, !dbg !4571
  call void @pchan_draw_IK_root_lines(%struct.bPoseChannel* %298, i16 signext %conv488), !dbg !4572
  br label %if.end489, !dbg !4573

if.end489:                                        ; preds = %if.end481, %if.then471
  br label %if.end509, !dbg !4574

if.else490:                                       ; preds = %if.then467
  %300 = load i16, i16* %constflag, align 2, !dbg !4575
  %conv491 = sext i16 %300 to i32, !dbg !4575
  %and492 = and i32 %conv491, 32, !dbg !4577
  %tobool493 = icmp ne i32 %and492, 0, !dbg !4577
  br i1 %tobool493, label %if.then494, label %if.end508, !dbg !4578

if.then494:                                       ; preds = %if.else490
  %301 = load %struct.Bone*, %struct.Bone** %bone, align 8, !dbg !4579
  %flag495 = getelementptr inbounds %struct.Bone, %struct.Bone* %301, i32 0, i32 10, !dbg !4582
  %302 = load i32, i32* %flag495, align 8, !dbg !4582
  %and496 = and i32 %302, 1, !dbg !4583
  %tobool497 = icmp ne i32 %and496, 0, !dbg !4583
  br i1 %tobool497, label %if.then498, label %if.end507, !dbg !4584

if.then498:                                       ; preds = %if.then494
  call void @glColor3ub(i8 zeroext -106, i8 zeroext -56, i8 zeroext 50), !dbg !4585
  %303 = load i32, i32* %index, align 4, !dbg !4587
  %and499 = and i32 %303, 65535, !dbg !4588
  %call500 = call zeroext i8 @GPU_select_load_id(i32 %and499), !dbg !4589
  %304 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !4590
  %305 = load i16, i16* %do_dashed, align 2, !dbg !4591
  %conv501 = sext i16 %305 to i32, !dbg !4591
  %and502 = and i32 %conv501, 2, !dbg !4592
  %tobool503 = icmp ne i32 %and502, 0, !dbg !4593
  %lnot504 = xor i1 %tobool503, true, !dbg !4593
  %lnot.ext505 = zext i1 %lnot504 to i32, !dbg !4593
  %conv506 = trunc i32 %lnot.ext505 to i16, !dbg !4593
  call void @pchan_draw_IK_root_lines(%struct.bPoseChannel* %304, i16 signext %conv506), !dbg !4594
  br label %if.end507, !dbg !4595

if.end507:                                        ; preds = %if.then498, %if.then494
  br label %if.end508, !dbg !4596

if.end508:                                        ; preds = %if.end507, %if.else490
  br label %if.end509

if.end509:                                        ; preds = %if.end508, %if.end489
  br label %if.end510, !dbg !4597

if.end510:                                        ; preds = %if.end509, %if.end463
  br label %if.end511, !dbg !4598

if.end511:                                        ; preds = %if.end510, %land.lhs.true440, %if.then434
  call void @glPushMatrix(), !dbg !4599
  %306 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !4600
  %drawtype512 = getelementptr inbounds %struct.bArmature, %struct.bArmature* %306, i32 0, i32 9, !dbg !4602
  %307 = load i32, i32* %drawtype512, align 4, !dbg !4602
  %cmp513 = icmp ne i32 %307, 3, !dbg !4603
  br i1 %cmp513, label %if.then515, label %if.end518, !dbg !4604

if.then515:                                       ; preds = %if.end511
  %308 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !4605
  %pose_mat516 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %308, i32 0, i32 29, !dbg !4605
  %arraydecay517 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %pose_mat516, i64 0, i64 0, !dbg !4605
  %309 = bitcast [4 x float]* %arraydecay517 to float*, !dbg !4605
  call void @glMultMatrixf(float* %309), !dbg !4605
  br label %if.end518, !dbg !4605

if.end518:                                        ; preds = %if.then515, %if.end511
  %310 = load %struct.Bone*, %struct.Bone** %bone, align 8, !dbg !4606
  %flag519 = getelementptr inbounds %struct.Bone, %struct.Bone* %310, i32 0, i32 10, !dbg !4607
  %311 = load i32, i32* %flag519, align 8, !dbg !4607
  store i32 %311, i32* %flag, align 4, !dbg !4608
  %312 = load %struct.Bone*, %struct.Bone** %bone, align 8, !dbg !4609
  %parent520 = getelementptr inbounds %struct.Bone, %struct.Bone* %312, i32 0, i32 3, !dbg !4611
  %313 = load %struct.Bone*, %struct.Bone** %parent520, align 8, !dbg !4611
  %tobool521 = icmp ne %struct.Bone* %313, null, !dbg !4612
  br i1 %tobool521, label %land.lhs.true522, label %if.end529, !dbg !4613

land.lhs.true522:                                 ; preds = %if.end518
  %314 = load %struct.Bone*, %struct.Bone** %bone, align 8, !dbg !4614
  %parent523 = getelementptr inbounds %struct.Bone, %struct.Bone* %314, i32 0, i32 3, !dbg !4615
  %315 = load %struct.Bone*, %struct.Bone** %parent523, align 8, !dbg !4615
  %flag524 = getelementptr inbounds %struct.Bone, %struct.Bone* %315, i32 0, i32 10, !dbg !4616
  %316 = load i32, i32* %flag524, align 8, !dbg !4616
  %and525 = and i32 %316, 65600, !dbg !4617
  %tobool526 = icmp ne i32 %and525, 0, !dbg !4617
  br i1 %tobool526, label %if.then527, label %if.end529, !dbg !4618

if.then527:                                       ; preds = %land.lhs.true522
  %317 = load i32, i32* %flag, align 4, !dbg !4619
  %and528 = and i32 %317, -17, !dbg !4619
  store i32 %and528, i32* %flag, align 4, !dbg !4619
  br label %if.end529, !dbg !4620

if.end529:                                        ; preds = %if.then527, %land.lhs.true522, %if.end518
  %318 = load %struct.Bone*, %struct.Bone** %bone, align 8, !dbg !4621
  %319 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !4623
  %act_bone530 = getelementptr inbounds %struct.bArmature, %struct.bArmature* %319, i32 0, i32 5, !dbg !4624
  %320 = load %struct.Bone*, %struct.Bone** %act_bone530, align 8, !dbg !4624
  %cmp531 = icmp eq %struct.Bone* %318, %320, !dbg !4625
  br i1 %cmp531, label %if.then533, label %if.end535, !dbg !4626

if.then533:                                       ; preds = %if.end529
  %321 = load i32, i32* %flag, align 4, !dbg !4627
  %or534 = or i32 %321, 256, !dbg !4627
  store i32 %or534, i32* %flag, align 4, !dbg !4627
  br label %if.end535, !dbg !4628

if.end535:                                        ; preds = %if.then533, %if.end529
  %322 = load i8, i8* %do_const_color.addr, align 1, !dbg !4629
  %tobool536 = icmp ne i8 %322, 0, !dbg !4629
  br i1 %tobool536, label %if.then537, label %if.else538, !dbg !4631

if.then537:                                       ; preds = %if.end535
  br label %if.end539, !dbg !4632

if.else538:                                       ; preds = %if.end535
  %323 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !4634
  %324 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !4636
  call void @set_pchan_colorset(%struct.Object* %323, %struct.bPoseChannel* %324), !dbg !4637
  br label %if.end539

if.end539:                                        ; preds = %if.else538, %if.then537
  %325 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !4638
  %custom540 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %325, i32 0, i32 18, !dbg !4640
  %326 = load %struct.Object*, %struct.Object** %custom540, align 8, !dbg !4640
  %tobool541 = icmp ne %struct.Object* %326, null, !dbg !4641
  br i1 %tobool541, label %land.lhs.true542, label %if.else547, !dbg !4642

land.lhs.true542:                                 ; preds = %if.end539
  %327 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !4643
  %flag543 = getelementptr inbounds %struct.bArmature, %struct.bArmature* %327, i32 0, i32 8, !dbg !4644
  %328 = load i32, i32* %flag543, align 8, !dbg !4644
  %and544 = and i32 %328, 1024, !dbg !4645
  %tobool545 = icmp ne i32 %and544, 0, !dbg !4645
  br i1 %tobool545, label %if.else547, label %if.then546, !dbg !4646

if.then546:                                       ; preds = %land.lhs.true542
  br label %if.end585, !dbg !4647

if.else547:                                       ; preds = %land.lhs.true542, %if.end539
  %329 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !4649
  %drawtype548 = getelementptr inbounds %struct.bArmature, %struct.bArmature* %329, i32 0, i32 9, !dbg !4651
  %330 = load i32, i32* %drawtype548, align 4, !dbg !4651
  %cmp549 = icmp eq i32 %330, 3, !dbg !4652
  br i1 %cmp549, label %if.then551, label %if.else560, !dbg !4653

if.then551:                                       ; preds = %if.else547
  %331 = load i16, i16* %dt.addr, align 2, !dbg !4654
  %conv552 = sext i16 %331 to i32, !dbg !4654
  %cmp553 = icmp slt i32 %conv552, 3, !dbg !4657
  br i1 %cmp553, label %if.then555, label %if.end559, !dbg !4658

if.then555:                                       ; preds = %if.then551
  %arraydecay556 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %smat, i64 0, i64 0, !dbg !4659
  %arraydecay557 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %imat, i64 0, i64 0, !dbg !4660
  %332 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !4661
  %flag558 = getelementptr inbounds %struct.bArmature, %struct.bArmature* %332, i32 0, i32 8, !dbg !4662
  %333 = load i32, i32* %flag558, align 8, !dbg !4662
  %334 = load i32, i32* %flag, align 4, !dbg !4663
  %335 = load i16, i16* %constflag, align 2, !dbg !4664
  %336 = load i32, i32* %index, align 4, !dbg !4665
  %337 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !4666
  call void @draw_sphere_bone_wire([4 x float]* %arraydecay556, [4 x float]* %arraydecay557, i32 %333, i32 %334, i16 signext %335, i32 %336, %struct.bPoseChannel* %337, %struct.EditBone* null), !dbg !4667
  br label %if.end559, !dbg !4667

if.end559:                                        ; preds = %if.then555, %if.then551
  br label %if.end584, !dbg !4668

if.else560:                                       ; preds = %if.else547
  %338 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !4669
  %drawtype561 = getelementptr inbounds %struct.bArmature, %struct.bArmature* %338, i32 0, i32 9, !dbg !4671
  %339 = load i32, i32* %drawtype561, align 4, !dbg !4671
  %cmp562 = icmp eq i32 %339, 1, !dbg !4672
  br i1 %cmp562, label %if.then564, label %if.else566, !dbg !4673

if.then564:                                       ; preds = %if.else560
  %340 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !4674
  %flag565 = getelementptr inbounds %struct.bArmature, %struct.bArmature* %340, i32 0, i32 8, !dbg !4675
  %341 = load i32, i32* %flag565, align 8, !dbg !4675
  %342 = load i32, i32* %flag, align 4, !dbg !4676
  %343 = load i16, i16* %constflag, align 2, !dbg !4677
  %344 = load i32, i32* %index, align 4, !dbg !4678
  %345 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !4679
  call void @draw_line_bone(i32 %341, i32 %342, i16 signext %343, i32 %344, %struct.bPoseChannel* %345, %struct.EditBone* null), !dbg !4680
  br label %if.end583, !dbg !4680

if.else566:                                       ; preds = %if.else560
  %346 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !4681
  %drawtype567 = getelementptr inbounds %struct.bArmature, %struct.bArmature* %346, i32 0, i32 9, !dbg !4683
  %347 = load i32, i32* %drawtype567, align 4, !dbg !4683
  %cmp568 = icmp eq i32 %347, 4, !dbg !4684
  br i1 %cmp568, label %if.then570, label %if.else572, !dbg !4685

if.then570:                                       ; preds = %if.else566
  %348 = load i16, i16* %dt.addr, align 2, !dbg !4686
  %349 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !4687
  %flag571 = getelementptr inbounds %struct.bArmature, %struct.bArmature* %349, i32 0, i32 8, !dbg !4688
  %350 = load i32, i32* %flag571, align 8, !dbg !4688
  %351 = load i32, i32* %flag, align 4, !dbg !4689
  %352 = load i16, i16* %constflag, align 2, !dbg !4690
  %353 = load i32, i32* %index, align 4, !dbg !4691
  %354 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !4692
  call void @draw_wire_bone(i16 signext %348, i32 %350, i32 %351, i16 signext %352, i32 %353, %struct.bPoseChannel* %354, %struct.EditBone* null), !dbg !4693
  br label %if.end582, !dbg !4693

if.else572:                                       ; preds = %if.else566
  %355 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !4694
  %drawtype573 = getelementptr inbounds %struct.bArmature, %struct.bArmature* %355, i32 0, i32 9, !dbg !4696
  %356 = load i32, i32* %drawtype573, align 4, !dbg !4696
  %cmp574 = icmp eq i32 %356, 2, !dbg !4697
  br i1 %cmp574, label %if.then576, label %if.else578, !dbg !4698

if.then576:                                       ; preds = %if.else572
  %357 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !4699
  %flag577 = getelementptr inbounds %struct.bArmature, %struct.bArmature* %357, i32 0, i32 8, !dbg !4700
  %358 = load i32, i32* %flag577, align 8, !dbg !4700
  %359 = load i32, i32* %flag, align 4, !dbg !4701
  %360 = load i16, i16* %constflag, align 2, !dbg !4702
  %361 = load i32, i32* %index, align 4, !dbg !4703
  %362 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !4704
  call void @draw_b_bone(i16 signext 2, i32 %358, i32 %359, i16 signext %360, i32 %361, %struct.bPoseChannel* %362, %struct.EditBone* null), !dbg !4705
  br label %if.end581, !dbg !4705

if.else578:                                       ; preds = %if.else572
  %363 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !4706
  %flag579 = getelementptr inbounds %struct.bArmature, %struct.bArmature* %363, i32 0, i32 8, !dbg !4707
  %364 = load i32, i32* %flag579, align 8, !dbg !4707
  %365 = load i32, i32* %flag, align 4, !dbg !4708
  %366 = load i16, i16* %constflag, align 2, !dbg !4709
  %367 = load i32, i32* %index, align 4, !dbg !4710
  %368 = load %struct.Bone*, %struct.Bone** %bone, align 8, !dbg !4711
  %length580 = getelementptr inbounds %struct.Bone, %struct.Bone* %368, i32 0, i32 18, !dbg !4712
  %369 = load float, float* %length580, align 4, !dbg !4712
  call void @draw_bone(i16 signext 2, i32 %364, i32 %365, i16 signext %366, i32 %367, float %369), !dbg !4713
  br label %if.end581

if.end581:                                        ; preds = %if.else578, %if.then576
  br label %if.end582

if.end582:                                        ; preds = %if.end581, %if.then570
  br label %if.end583

if.end583:                                        ; preds = %if.end582, %if.then564
  br label %if.end584

if.end584:                                        ; preds = %if.end583, %if.end559
  br label %if.end585

if.end585:                                        ; preds = %if.end584, %if.then546
  call void @glPopMatrix(), !dbg !4714
  br label %if.end586, !dbg !4715

if.end586:                                        ; preds = %if.end585, %if.then429
  br label %if.end587, !dbg !4716

if.end587:                                        ; preds = %if.end586, %lor.lhs.false424, %for.body411
  %370 = load i32, i32* %index, align 4, !dbg !4717
  %cmp588 = icmp ne i32 %370, -1, !dbg !4719
  br i1 %cmp588, label %if.then590, label %if.end592, !dbg !4720

if.then590:                                       ; preds = %if.end587
  %371 = load i32, i32* %index, align 4, !dbg !4721
  %add591 = add nsw i32 %371, 65536, !dbg !4721
  store i32 %add591, i32* %index, align 4, !dbg !4721
  br label %if.end592, !dbg !4722

if.end592:                                        ; preds = %if.then590, %if.end587
  br label %for.inc593, !dbg !4723

for.inc593:                                       ; preds = %if.end592
  %372 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !4724
  %next594 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %372, i32 0, i32 0, !dbg !4725
  %373 = load %struct.bPoseChannel*, %struct.bPoseChannel** %next594, align 8, !dbg !4725
  store %struct.bPoseChannel* %373, %struct.bPoseChannel** %pchan, align 8, !dbg !4726
  br label %for.cond409, !dbg !4727, !llvm.loop !4728

for.end595:                                       ; preds = %for.cond409
  %374 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !4730
  %drawtype596 = getelementptr inbounds %struct.bArmature, %struct.bArmature* %374, i32 0, i32 9, !dbg !4730
  %375 = load i32, i32* %drawtype596, align 4, !dbg !4730
  %cmp597 = icmp eq i32 %375, 4, !dbg !4730
  br i1 %cmp597, label %if.end612, label %lor.lhs.false599, !dbg !4730

lor.lhs.false599:                                 ; preds = %for.end595
  %376 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !4730
  %drawtype600 = getelementptr inbounds %struct.bArmature, %struct.bArmature* %376, i32 0, i32 9, !dbg !4730
  %377 = load i32, i32* %drawtype600, align 4, !dbg !4730
  %cmp601 = icmp eq i32 %377, 1, !dbg !4730
  br i1 %cmp601, label %if.end612, label %land.lhs.true603, !dbg !4732

land.lhs.true603:                                 ; preds = %lor.lhs.false599
  %378 = load i16, i16* %dt.addr, align 2, !dbg !4733
  %conv604 = sext i16 %378 to i32, !dbg !4733
  %cmp605 = icmp sgt i32 %conv604, 2, !dbg !4734
  br i1 %cmp605, label %land.lhs.true607, label %if.end612, !dbg !4735

land.lhs.true607:                                 ; preds = %land.lhs.true603
  %379 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !4736
  %flag608 = getelementptr inbounds %struct.bArmature, %struct.bArmature* %379, i32 0, i32 8, !dbg !4737
  %380 = load i32, i32* %flag608, align 8, !dbg !4737
  %and609 = and i32 %380, 16, !dbg !4738
  %tobool610 = icmp ne i32 %and609, 0, !dbg !4738
  br i1 %tobool610, label %if.then611, label %if.end612, !dbg !4739

if.then611:                                       ; preds = %land.lhs.true607
  %381 = load %struct.RegionView3D*, %struct.RegionView3D** %rv3d, align 8, !dbg !4740
  call void @ED_view3d_polygon_offset(%struct.RegionView3D* %381, float 0.000000e+00), !dbg !4741
  br label %if.end612, !dbg !4741

if.end612:                                        ; preds = %if.then611, %land.lhs.true607, %land.lhs.true603, %lor.lhs.false599, %for.end595
  br label %if.end613, !dbg !4742

if.end613:                                        ; preds = %if.end612, %lor.lhs.false364
  %382 = load i8, i8* %is_cull_enabled, align 1, !dbg !4743
  %tobool614 = icmp ne i8 %382, 0, !dbg !4743
  br i1 %tobool614, label %if.then615, label %if.end616, !dbg !4745

if.then615:                                       ; preds = %if.end613
  call void @glDisable(i32 2884), !dbg !4746
  br label %if.end616, !dbg !4748

if.end616:                                        ; preds = %if.then615, %if.end613
  %383 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !4749
  %flag617 = getelementptr inbounds %struct.bArmature, %struct.bArmature* %383, i32 0, i32 8, !dbg !4751
  %384 = load i32, i32* %flag617, align 8, !dbg !4751
  %and618 = and i32 %384, 16, !dbg !4752
  %tobool619 = icmp ne i32 %and618, 0, !dbg !4752
  br i1 %tobool619, label %if.then620, label %if.end633, !dbg !4753

if.then620:                                       ; preds = %if.end616
  %385 = load %struct.Base*, %struct.Base** %base.addr, align 8, !dbg !4754
  %flag621 = getelementptr inbounds %struct.Base, %struct.Base* %385, i32 0, i32 4, !dbg !4757
  %386 = load i32, i32* %flag621, align 8, !dbg !4757
  %and622 = and i32 %386, 512, !dbg !4758
  %cmp623 = icmp eq i32 %and622, 0, !dbg !4759
  br i1 %cmp623, label %land.lhs.true625, label %if.end632, !dbg !4760

land.lhs.true625:                                 ; preds = %if.then620
  %387 = load %struct.View3D*, %struct.View3D** %v3d.addr, align 8, !dbg !4761
  %flag626 = getelementptr inbounds %struct.View3D, %struct.View3D* %387, i32 0, i32 28, !dbg !4762
  %388 = load i16, i16* %flag626, align 8, !dbg !4762
  %conv627 = sext i16 %388 to i32, !dbg !4761
  %and628 = and i32 %conv627, 4, !dbg !4763
  %cmp629 = icmp eq i32 %and628, 0, !dbg !4764
  br i1 %cmp629, label %if.then631, label %if.end632, !dbg !4765

if.then631:                                       ; preds = %land.lhs.true625
  %389 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !4766
  call void @draw_pose_dofs(%struct.Object* %389), !dbg !4768
  br label %if.end632, !dbg !4769

if.end632:                                        ; preds = %if.then631, %land.lhs.true625, %if.then620
  br label %if.end633, !dbg !4770

if.end633:                                        ; preds = %if.end632, %if.end616
  %390 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !4771
  %flag634 = getelementptr inbounds %struct.bArmature, %struct.bArmature* %390, i32 0, i32 8, !dbg !4773
  %391 = load i32, i32* %flag634, align 8, !dbg !4773
  %and635 = and i32 %391, 12, !dbg !4774
  %tobool636 = icmp ne i32 %and635, 0, !dbg !4774
  br i1 %tobool636, label %land.lhs.true637, label %if.end750, !dbg !4775

land.lhs.true637:                                 ; preds = %if.end633
  %392 = load i8, i8* %is_outline.addr, align 1, !dbg !4776
  %conv638 = zext i8 %392 to i32, !dbg !4776
  %cmp639 = icmp eq i32 %conv638, 0, !dbg !4777
  br i1 %cmp639, label %land.lhs.true641, label %if.end750, !dbg !4778

land.lhs.true641:                                 ; preds = %land.lhs.true637
  %393 = load %struct.Base*, %struct.Base** %base.addr, align 8, !dbg !4779
  %flag642 = getelementptr inbounds %struct.Base, %struct.Base* %393, i32 0, i32 4, !dbg !4780
  %394 = load i32, i32* %flag642, align 8, !dbg !4780
  %and643 = and i32 %394, 512, !dbg !4781
  %cmp644 = icmp eq i32 %and643, 0, !dbg !4782
  br i1 %cmp644, label %if.then646, label %if.end750, !dbg !4783

if.then646:                                       ; preds = %land.lhs.true641
  %395 = load i32, i32* getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 15), align 8, !dbg !4784
  %and647 = and i32 %395, 32, !dbg !4787
  %cmp648 = icmp eq i32 %and647, 0, !dbg !4788
  br i1 %cmp648, label %if.then650, label %if.end749, !dbg !4789

if.then650:                                       ; preds = %if.then646
  call void @llvm.dbg.declare(metadata [3 x float]* %vec, metadata !4790, metadata !DIExpression()), !dbg !4792
  call void @llvm.dbg.declare(metadata [4 x i8]* %col, metadata !4793, metadata !DIExpression()), !dbg !4794
  %396 = load i8, i8* %do_const_color.addr, align 1, !dbg !4795
  %tobool651 = icmp ne i8 %396, 0, !dbg !4795
  br i1 %tobool651, label %if.then652, label %if.else657, !dbg !4797

if.then652:                                       ; preds = %if.then650
  call void @llvm.dbg.declare(metadata [4 x float]* %tcol, metadata !4798, metadata !DIExpression()), !dbg !4800
  %arraydecay653 = getelementptr inbounds [4 x float], [4 x float]* %tcol, i64 0, i64 0, !dbg !4801
  call void @glGetFloatv(i32 2816, float* %arraydecay653), !dbg !4802
  %arraydecay654 = getelementptr inbounds [4 x i8], [4 x i8]* %col, i64 0, i64 0, !dbg !4803
  %arraydecay655 = getelementptr inbounds [4 x float], [4 x float]* %tcol, i64 0, i64 0, !dbg !4804
  call void @rgb_float_to_uchar(i8* %arraydecay654, float* %arraydecay655), !dbg !4805
  %arrayidx656 = getelementptr inbounds [4 x i8], [4 x i8]* %col, i64 0, i64 3, !dbg !4806
  store i8 -1, i8* %arrayidx656, align 1, !dbg !4807
  br label %if.end665, !dbg !4808

if.else657:                                       ; preds = %if.then650
  %397 = load i8*, i8** %ob_wire_col.addr, align 8, !dbg !4809
  %arrayidx658 = getelementptr inbounds i8, i8* %397, i64 0, !dbg !4809
  %398 = load i8, i8* %arrayidx658, align 1, !dbg !4809
  %arrayidx659 = getelementptr inbounds [4 x i8], [4 x i8]* %col, i64 0, i64 0, !dbg !4811
  store i8 %398, i8* %arrayidx659, align 1, !dbg !4812
  %399 = load i8*, i8** %ob_wire_col.addr, align 8, !dbg !4813
  %arrayidx660 = getelementptr inbounds i8, i8* %399, i64 1, !dbg !4813
  %400 = load i8, i8* %arrayidx660, align 1, !dbg !4813
  %arrayidx661 = getelementptr inbounds [4 x i8], [4 x i8]* %col, i64 0, i64 1, !dbg !4814
  store i8 %400, i8* %arrayidx661, align 1, !dbg !4815
  %401 = load i8*, i8** %ob_wire_col.addr, align 8, !dbg !4816
  %arrayidx662 = getelementptr inbounds i8, i8* %401, i64 2, !dbg !4816
  %402 = load i8, i8* %arrayidx662, align 1, !dbg !4816
  %arrayidx663 = getelementptr inbounds [4 x i8], [4 x i8]* %col, i64 0, i64 2, !dbg !4817
  store i8 %402, i8* %arrayidx663, align 1, !dbg !4818
  %arrayidx664 = getelementptr inbounds [4 x i8], [4 x i8]* %col, i64 0, i64 3, !dbg !4819
  store i8 -1, i8* %arrayidx664, align 1, !dbg !4820
  br label %if.end665

if.end665:                                        ; preds = %if.else657, %if.then652
  %403 = load %struct.View3D*, %struct.View3D** %v3d.addr, align 8, !dbg !4821
  %zbuf666 = getelementptr inbounds %struct.View3D, %struct.View3D* %403, i32 0, i32 47, !dbg !4823
  %404 = load i8, i8* %zbuf666, align 8, !dbg !4823
  %tobool667 = icmp ne i8 %404, 0, !dbg !4821
  br i1 %tobool667, label %if.then668, label %if.end669, !dbg !4824

if.then668:                                       ; preds = %if.end665
  call void @glDisable(i32 2929), !dbg !4825
  br label %if.end669, !dbg !4825

if.end669:                                        ; preds = %if.then668, %if.end665
  %405 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !4826
  %pose670 = getelementptr inbounds %struct.Object, %struct.Object* %405, i32 0, i32 18, !dbg !4828
  %406 = load %struct.bPose*, %struct.bPose** %pose670, align 8, !dbg !4828
  %chanbase671 = getelementptr inbounds %struct.bPose, %struct.bPose* %406, i32 0, i32 0, !dbg !4829
  %first672 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %chanbase671, i32 0, i32 0, !dbg !4830
  %407 = load i8*, i8** %first672, align 8, !dbg !4830
  %408 = bitcast i8* %407 to %struct.bPoseChannel*, !dbg !4826
  store %struct.bPoseChannel* %408, %struct.bPoseChannel** %pchan, align 8, !dbg !4831
  br label %for.cond673, !dbg !4832

for.cond673:                                      ; preds = %for.inc742, %if.end669
  %409 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !4833
  %tobool674 = icmp ne %struct.bPoseChannel* %409, null, !dbg !4835
  br i1 %tobool674, label %for.body675, label %for.end744, !dbg !4835

for.body675:                                      ; preds = %for.cond673
  %410 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !4836
  %bone676 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %410, i32 0, i32 12, !dbg !4839
  %411 = load %struct.Bone*, %struct.Bone** %bone676, align 8, !dbg !4839
  %flag677 = getelementptr inbounds %struct.Bone, %struct.Bone* %411, i32 0, i32 10, !dbg !4840
  %412 = load i32, i32* %flag677, align 8, !dbg !4840
  %and678 = and i32 %412, 65600, !dbg !4841
  %cmp679 = icmp eq i32 %and678, 0, !dbg !4842
  br i1 %cmp679, label %if.then681, label %if.end741, !dbg !4843

if.then681:                                       ; preds = %for.body675
  %413 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !4844
  %bone682 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %413, i32 0, i32 12, !dbg !4847
  %414 = load %struct.Bone*, %struct.Bone** %bone682, align 8, !dbg !4847
  %layer683 = getelementptr inbounds %struct.Bone, %struct.Bone* %414, i32 0, i32 25, !dbg !4848
  %415 = load i32, i32* %layer683, align 8, !dbg !4848
  %416 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !4849
  %layer684 = getelementptr inbounds %struct.bArmature, %struct.bArmature* %416, i32 0, i32 15, !dbg !4850
  %417 = load i32, i32* %layer684, align 8, !dbg !4850
  %and685 = and i32 %415, %417, !dbg !4851
  %tobool686 = icmp ne i32 %and685, 0, !dbg !4851
  br i1 %tobool686, label %if.then687, label %if.end740, !dbg !4852

if.then687:                                       ; preds = %if.then681
  %418 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !4853
  %flag688 = getelementptr inbounds %struct.bArmature, %struct.bArmature* %418, i32 0, i32 8, !dbg !4856
  %419 = load i32, i32* %flag688, align 8, !dbg !4856
  %and689 = and i32 %419, 48, !dbg !4857
  %tobool690 = icmp ne i32 %and689, 0, !dbg !4857
  br i1 %tobool690, label %if.then691, label %if.else697, !dbg !4858

if.then691:                                       ; preds = %if.then687
  %420 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !4859
  %bone692 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %420, i32 0, i32 12, !dbg !4861
  %421 = load %struct.Bone*, %struct.Bone** %bone692, align 8, !dbg !4861
  store %struct.Bone* %421, %struct.Bone** %bone, align 8, !dbg !4862
  %422 = load %struct.Bone*, %struct.Bone** %bone, align 8, !dbg !4863
  %flag693 = getelementptr inbounds %struct.Bone, %struct.Bone* %422, i32 0, i32 10, !dbg !4864
  %423 = load i32, i32* %flag693, align 8, !dbg !4864
  %and694 = and i32 %423, 1, !dbg !4865
  %tobool695 = icmp ne i32 %and694, 0, !dbg !4866
  %424 = zext i1 %tobool695 to i64, !dbg !4866
  %cond = select i1 %tobool695, i32 4, i32 3, !dbg !4866
  %arraydecay696 = getelementptr inbounds [4 x i8], [4 x i8]* %col, i64 0, i64 0, !dbg !4867
  call void @UI_GetThemeColor3ubv(i32 %cond, i8* %arraydecay696), !dbg !4868
  br label %if.end704, !dbg !4869

if.else697:                                       ; preds = %if.then687
  %425 = load i16, i16* %dt.addr, align 2, !dbg !4870
  %conv698 = sext i16 %425 to i32, !dbg !4870
  %cmp699 = icmp sgt i32 %conv698, 2, !dbg !4872
  br i1 %cmp699, label %if.then701, label %if.end703, !dbg !4873

if.then701:                                       ; preds = %if.else697
  %arraydecay702 = getelementptr inbounds [4 x i8], [4 x i8]* %col, i64 0, i64 0, !dbg !4874
  call void @UI_GetThemeColor3ubv(i32 3, i8* %arraydecay702), !dbg !4876
  br label %if.end703, !dbg !4877

if.end703:                                        ; preds = %if.then701, %if.else697
  br label %if.end704

if.end704:                                        ; preds = %if.end703, %if.then691
  %426 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !4878
  %flag705 = getelementptr inbounds %struct.bArmature, %struct.bArmature* %426, i32 0, i32 8, !dbg !4880
  %427 = load i32, i32* %flag705, align 8, !dbg !4880
  %and706 = and i32 %427, 8, !dbg !4881
  %tobool707 = icmp ne i32 %and706, 0, !dbg !4881
  br i1 %tobool707, label %if.then708, label %if.end720, !dbg !4882

if.then708:                                       ; preds = %if.end704
  %arraydecay709 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !4883
  %428 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !4885
  %pose_head710 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %428, i32 0, i32 31, !dbg !4886
  %arraydecay711 = getelementptr inbounds [3 x float], [3 x float]* %pose_head710, i64 0, i64 0, !dbg !4885
  %429 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !4887
  %pose_tail712 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %429, i32 0, i32 32, !dbg !4888
  %arraydecay713 = getelementptr inbounds [3 x float], [3 x float]* %pose_tail712, i64 0, i64 0, !dbg !4887
  call void @mid_v3_v3v3(float* %arraydecay709, float* %arraydecay711, float* %arraydecay713), !dbg !4889
  %arraydecay714 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !4890
  %430 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !4891
  %name = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %430, i32 0, i32 4, !dbg !4892
  %arraydecay715 = getelementptr inbounds [64 x i8], [64 x i8]* %name, i64 0, i64 0, !dbg !4891
  %431 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !4893
  %name716 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %431, i32 0, i32 4, !dbg !4894
  %arraydecay717 = getelementptr inbounds [64 x i8], [64 x i8]* %name716, i64 0, i64 0, !dbg !4893
  %call718 = call i64 @strlen(i8* %arraydecay717) #6, !dbg !4895
  %arraydecay719 = getelementptr inbounds [4 x i8], [4 x i8]* %col, i64 0, i64 0, !dbg !4896
  call void @view3d_cached_text_draw_add(float* %arraydecay714, i8* %arraydecay715, i64 %call718, i16 signext 10, i16 signext 0, i8* %arraydecay719), !dbg !4897
  br label %if.end720, !dbg !4898

if.end720:                                        ; preds = %if.then708, %if.end704
  %432 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !4899
  %flag721 = getelementptr inbounds %struct.bArmature, %struct.bArmature* %432, i32 0, i32 8, !dbg !4901
  %433 = load i32, i32* %flag721, align 8, !dbg !4901
  %and722 = and i32 %433, 4, !dbg !4902
  %tobool723 = icmp ne i32 %and722, 0, !dbg !4902
  br i1 %tobool723, label %land.lhs.true724, label %if.end739, !dbg !4903

land.lhs.true724:                                 ; preds = %if.end720
  %434 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !4904
  %flag725 = getelementptr inbounds %struct.bArmature, %struct.bArmature* %434, i32 0, i32 8, !dbg !4905
  %435 = load i32, i32* %flag725, align 8, !dbg !4905
  %and726 = and i32 %435, 16, !dbg !4906
  %tobool727 = icmp ne i32 %and726, 0, !dbg !4906
  br i1 %tobool727, label %if.then728, label %if.end739, !dbg !4907

if.then728:                                       ; preds = %land.lhs.true724
  call void @glPushMatrix(), !dbg !4908
  %arraydecay729 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %bmat, i64 0, i64 0, !dbg !4910
  %436 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !4911
  %pose_mat730 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %436, i32 0, i32 29, !dbg !4912
  %arraydecay731 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %pose_mat730, i64 0, i64 0, !dbg !4911
  call void @copy_m4_m4([4 x float]* %arraydecay729, [4 x float]* %arraydecay731), !dbg !4913
  %arraydecay732 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %bmat, i64 0, i64 0, !dbg !4914
  %437 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !4915
  %bone733 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %437, i32 0, i32 12, !dbg !4916
  %438 = load %struct.Bone*, %struct.Bone** %bone733, align 8, !dbg !4916
  %length734 = getelementptr inbounds %struct.Bone, %struct.Bone* %438, i32 0, i32 18, !dbg !4917
  %439 = load float, float* %length734, align 4, !dbg !4917
  call void @bone_matrix_translate_y([4 x float]* %arraydecay732, float %439), !dbg !4918
  %arraydecay735 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %bmat, i64 0, i64 0, !dbg !4919
  %440 = bitcast [4 x float]* %arraydecay735 to float*, !dbg !4919
  call void @glMultMatrixf(float* %440), !dbg !4919
  %arraydecay736 = getelementptr inbounds [4 x i8], [4 x i8]* %col, i64 0, i64 0, !dbg !4920
  call void @glColor3ubv(i8* %arraydecay736), !dbg !4921
  %441 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !4922
  %bone737 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %441, i32 0, i32 12, !dbg !4923
  %442 = load %struct.Bone*, %struct.Bone** %bone737, align 8, !dbg !4923
  %length738 = getelementptr inbounds %struct.Bone, %struct.Bone* %442, i32 0, i32 18, !dbg !4924
  %443 = load float, float* %length738, align 4, !dbg !4924
  %mul = fmul float %443, 2.500000e-01, !dbg !4925
  call void @drawaxes(float %mul, i8 zeroext 1), !dbg !4926
  call void @glPopMatrix(), !dbg !4927
  br label %if.end739, !dbg !4928

if.end739:                                        ; preds = %if.then728, %land.lhs.true724, %if.end720
  br label %if.end740, !dbg !4929

if.end740:                                        ; preds = %if.end739, %if.then681
  br label %if.end741, !dbg !4930

if.end741:                                        ; preds = %if.end740, %for.body675
  br label %for.inc742, !dbg !4931

for.inc742:                                       ; preds = %if.end741
  %444 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !4932
  %next743 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %444, i32 0, i32 0, !dbg !4933
  %445 = load %struct.bPoseChannel*, %struct.bPoseChannel** %next743, align 8, !dbg !4933
  store %struct.bPoseChannel* %445, %struct.bPoseChannel** %pchan, align 8, !dbg !4934
  br label %for.cond673, !dbg !4935, !llvm.loop !4936

for.end744:                                       ; preds = %for.cond673
  %446 = load %struct.View3D*, %struct.View3D** %v3d.addr, align 8, !dbg !4938
  %zbuf745 = getelementptr inbounds %struct.View3D, %struct.View3D* %446, i32 0, i32 47, !dbg !4940
  %447 = load i8, i8* %zbuf745, align 8, !dbg !4940
  %tobool746 = icmp ne i8 %447, 0, !dbg !4938
  br i1 %tobool746, label %if.then747, label %if.end748, !dbg !4941

if.then747:                                       ; preds = %for.end744
  call void @glEnable(i32 2929), !dbg !4942
  br label %if.end748, !dbg !4942

if.end748:                                        ; preds = %if.then747, %for.end744
  br label %if.end749, !dbg !4943

if.end749:                                        ; preds = %if.end748, %if.then646
  br label %if.end750, !dbg !4944

if.end750:                                        ; preds = %if.end749, %land.lhs.true641, %land.lhs.true637, %if.end633
  %448 = load i32, i32* %index, align 4, !dbg !4945
  %cmp751 = icmp ne i32 %448, -1, !dbg !4947
  br i1 %cmp751, label %if.then753, label %if.end755, !dbg !4948

if.then753:                                       ; preds = %if.end750
  %call754 = call zeroext i8 @GPU_select_load_id(i32 -1), !dbg !4949
  br label %if.end755, !dbg !4951

if.end755:                                        ; preds = %if.then753, %if.end750
  ret void, !dbg !4952
}

declare dso_local void @UI_ThemeColor(i32) #3

declare dso_local void @copy_m4_m4([4 x float]*, [4 x float]*) #3

declare dso_local void @mul_mat3_m4_fl([4 x float]*, float) #3

; Function Attrs: noinline nounwind uwtable
define internal float @len_v3(float* %a) #0 !dbg !4953 {
entry:
  %a.addr = alloca float*, align 8
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !4958, metadata !DIExpression()), !dbg !4959
  %0 = load float*, float** %a.addr, align 8, !dbg !4960
  %1 = load float*, float** %a.addr, align 8, !dbg !4961
  %call = call float @dot_v3v3(float* %0, float* %1), !dbg !4962
  %call1 = call float @sqrtf(float %call) #7, !dbg !4963
  ret float %call1, !dbg !4964
}

declare dso_local zeroext i8 @invert_m4_m4([4 x float]*, [4 x float]*) #3

declare dso_local void @glEnable(i32) #3

declare dso_local void @glDisable(i32) #3

; Function Attrs: noinline nounwind uwtable
define internal void @draw_sphere_bone_dist([4 x float]* %smat, [4 x float]* %imat, %struct.bPoseChannel* %pchan, %struct.EditBone* %ebone) #0 !dbg !4965 {
entry:
  %smat.addr = alloca [4 x float]*, align 8
  %imat.addr = alloca [4 x float]*, align 8
  %pchan.addr = alloca %struct.bPoseChannel*, align 8
  %ebone.addr = alloca %struct.EditBone*, align 8
  %head = alloca float, align 4
  %tail = alloca float, align 4
  %dist = alloca float, align 4
  %headvec = alloca float*, align 8
  %tailvec = alloca float*, align 8
  %dirvec = alloca [3 x float], align 4
  %view_dist = alloca float, align 4
  %norvec = alloca [3 x float], align 4
  %vec1 = alloca [3 x float], align 4
  %vec2 = alloca [3 x float], align 4
  %vec = alloca [3 x float], align 4
  %a = alloca i32, align 4
  store [4 x float]* %smat, [4 x float]** %smat.addr, align 8
  call void @llvm.dbg.declare(metadata [4 x float]** %smat.addr, metadata !4969, metadata !DIExpression()), !dbg !4970
  store [4 x float]* %imat, [4 x float]** %imat.addr, align 8
  call void @llvm.dbg.declare(metadata [4 x float]** %imat.addr, metadata !4971, metadata !DIExpression()), !dbg !4972
  store %struct.bPoseChannel* %pchan, %struct.bPoseChannel** %pchan.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bPoseChannel** %pchan.addr, metadata !4973, metadata !DIExpression()), !dbg !4974
  store %struct.EditBone* %ebone, %struct.EditBone** %ebone.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.EditBone** %ebone.addr, metadata !4975, metadata !DIExpression()), !dbg !4976
  call void @llvm.dbg.declare(metadata float* %head, metadata !4977, metadata !DIExpression()), !dbg !4978
  call void @llvm.dbg.declare(metadata float* %tail, metadata !4979, metadata !DIExpression()), !dbg !4980
  call void @llvm.dbg.declare(metadata float* %dist, metadata !4981, metadata !DIExpression()), !dbg !4982
  call void @llvm.dbg.declare(metadata float** %headvec, metadata !4983, metadata !DIExpression()), !dbg !4984
  call void @llvm.dbg.declare(metadata float** %tailvec, metadata !4985, metadata !DIExpression()), !dbg !4986
  call void @llvm.dbg.declare(metadata [3 x float]* %dirvec, metadata !4987, metadata !DIExpression()), !dbg !4988
  %0 = load %struct.EditBone*, %struct.EditBone** %ebone.addr, align 8, !dbg !4989
  %tobool = icmp ne %struct.EditBone* %0, null, !dbg !4989
  br i1 %tobool, label %if.then, label %if.else14, !dbg !4991

if.then:                                          ; preds = %entry
  %1 = load %struct.EditBone*, %struct.EditBone** %ebone.addr, align 8, !dbg !4992
  %head1 = getelementptr inbounds %struct.EditBone, %struct.EditBone* %1, i32 0, i32 7, !dbg !4994
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %head1, i64 0, i64 0, !dbg !4992
  %2 = load %struct.EditBone*, %struct.EditBone** %ebone.addr, align 8, !dbg !4995
  %tail2 = getelementptr inbounds %struct.EditBone, %struct.EditBone* %2, i32 0, i32 8, !dbg !4996
  %arraydecay3 = getelementptr inbounds [3 x float], [3 x float]* %tail2, i64 0, i64 0, !dbg !4995
  %call = call float @len_v3v3(float* %arraydecay, float* %arraydecay3), !dbg !4997
  %3 = load %struct.EditBone*, %struct.EditBone** %ebone.addr, align 8, !dbg !4998
  %length = getelementptr inbounds %struct.EditBone, %struct.EditBone* %3, i32 0, i32 14, !dbg !4999
  store float %call, float* %length, align 8, !dbg !5000
  %4 = load %struct.EditBone*, %struct.EditBone** %ebone.addr, align 8, !dbg !5001
  %rad_tail = getelementptr inbounds %struct.EditBone, %struct.EditBone* %4, i32 0, i32 19, !dbg !5002
  %5 = load float, float* %rad_tail, align 4, !dbg !5002
  store float %5, float* %tail, align 4, !dbg !5003
  %6 = load %struct.EditBone*, %struct.EditBone** %ebone.addr, align 8, !dbg !5004
  %dist4 = getelementptr inbounds %struct.EditBone, %struct.EditBone* %6, i32 0, i32 11, !dbg !5005
  %7 = load float, float* %dist4, align 4, !dbg !5005
  store float %7, float* %dist, align 4, !dbg !5006
  %8 = load %struct.EditBone*, %struct.EditBone** %ebone.addr, align 8, !dbg !5007
  %parent = getelementptr inbounds %struct.EditBone, %struct.EditBone* %8, i32 0, i32 3, !dbg !5009
  %9 = load %struct.EditBone*, %struct.EditBone** %parent, align 8, !dbg !5009
  %tobool5 = icmp ne %struct.EditBone* %9, null, !dbg !5007
  br i1 %tobool5, label %land.lhs.true, label %if.else, !dbg !5010

land.lhs.true:                                    ; preds = %if.then
  %10 = load %struct.EditBone*, %struct.EditBone** %ebone.addr, align 8, !dbg !5011
  %flag = getelementptr inbounds %struct.EditBone, %struct.EditBone* %10, i32 0, i32 9, !dbg !5012
  %11 = load i32, i32* %flag, align 4, !dbg !5012
  %and = and i32 %11, 16, !dbg !5013
  %tobool6 = icmp ne i32 %and, 0, !dbg !5013
  br i1 %tobool6, label %if.then7, label %if.else, !dbg !5014

if.then7:                                         ; preds = %land.lhs.true
  %12 = load %struct.EditBone*, %struct.EditBone** %ebone.addr, align 8, !dbg !5015
  %parent8 = getelementptr inbounds %struct.EditBone, %struct.EditBone* %12, i32 0, i32 3, !dbg !5016
  %13 = load %struct.EditBone*, %struct.EditBone** %parent8, align 8, !dbg !5016
  %rad_tail9 = getelementptr inbounds %struct.EditBone, %struct.EditBone* %13, i32 0, i32 19, !dbg !5017
  %14 = load float, float* %rad_tail9, align 4, !dbg !5017
  store float %14, float* %head, align 4, !dbg !5018
  br label %if.end, !dbg !5019

if.else:                                          ; preds = %land.lhs.true, %if.then
  %15 = load %struct.EditBone*, %struct.EditBone** %ebone.addr, align 8, !dbg !5020
  %rad_head = getelementptr inbounds %struct.EditBone, %struct.EditBone* %15, i32 0, i32 18, !dbg !5021
  %16 = load float, float* %rad_head, align 8, !dbg !5021
  store float %16, float* %head, align 4, !dbg !5022
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then7
  %17 = load %struct.EditBone*, %struct.EditBone** %ebone.addr, align 8, !dbg !5023
  %head10 = getelementptr inbounds %struct.EditBone, %struct.EditBone* %17, i32 0, i32 7, !dbg !5024
  %arraydecay11 = getelementptr inbounds [3 x float], [3 x float]* %head10, i64 0, i64 0, !dbg !5023
  store float* %arraydecay11, float** %headvec, align 8, !dbg !5025
  %18 = load %struct.EditBone*, %struct.EditBone** %ebone.addr, align 8, !dbg !5026
  %tail12 = getelementptr inbounds %struct.EditBone, %struct.EditBone* %18, i32 0, i32 8, !dbg !5027
  %arraydecay13 = getelementptr inbounds [3 x float], [3 x float]* %tail12, i64 0, i64 0, !dbg !5026
  store float* %arraydecay13, float** %tailvec, align 8, !dbg !5028
  br label %if.end35, !dbg !5029

if.else14:                                        ; preds = %entry
  %19 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan.addr, align 8, !dbg !5030
  %bone = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %19, i32 0, i32 12, !dbg !5032
  %20 = load %struct.Bone*, %struct.Bone** %bone, align 8, !dbg !5032
  %rad_tail15 = getelementptr inbounds %struct.Bone, %struct.Bone* %20, i32 0, i32 23, !dbg !5033
  %21 = load float, float* %rad_tail15, align 8, !dbg !5033
  store float %21, float* %tail, align 4, !dbg !5034
  %22 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan.addr, align 8, !dbg !5035
  %bone16 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %22, i32 0, i32 12, !dbg !5036
  %23 = load %struct.Bone*, %struct.Bone** %bone16, align 8, !dbg !5036
  %dist17 = getelementptr inbounds %struct.Bone, %struct.Bone* %23, i32 0, i32 15, !dbg !5037
  %24 = load float, float* %dist17, align 8, !dbg !5037
  store float %24, float* %dist, align 4, !dbg !5038
  %25 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan.addr, align 8, !dbg !5039
  %parent18 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %25, i32 0, i32 13, !dbg !5041
  %26 = load %struct.bPoseChannel*, %struct.bPoseChannel** %parent18, align 8, !dbg !5041
  %tobool19 = icmp ne %struct.bPoseChannel* %26, null, !dbg !5039
  br i1 %tobool19, label %land.lhs.true20, label %if.else29, !dbg !5042

land.lhs.true20:                                  ; preds = %if.else14
  %27 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan.addr, align 8, !dbg !5043
  %bone21 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %27, i32 0, i32 12, !dbg !5044
  %28 = load %struct.Bone*, %struct.Bone** %bone21, align 8, !dbg !5044
  %flag22 = getelementptr inbounds %struct.Bone, %struct.Bone* %28, i32 0, i32 10, !dbg !5045
  %29 = load i32, i32* %flag22, align 8, !dbg !5045
  %and23 = and i32 %29, 16, !dbg !5046
  %tobool24 = icmp ne i32 %and23, 0, !dbg !5046
  br i1 %tobool24, label %if.then25, label %if.else29, !dbg !5047

if.then25:                                        ; preds = %land.lhs.true20
  %30 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan.addr, align 8, !dbg !5048
  %parent26 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %30, i32 0, i32 13, !dbg !5049
  %31 = load %struct.bPoseChannel*, %struct.bPoseChannel** %parent26, align 8, !dbg !5049
  %bone27 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %31, i32 0, i32 12, !dbg !5050
  %32 = load %struct.Bone*, %struct.Bone** %bone27, align 8, !dbg !5050
  %rad_tail28 = getelementptr inbounds %struct.Bone, %struct.Bone* %32, i32 0, i32 23, !dbg !5051
  %33 = load float, float* %rad_tail28, align 8, !dbg !5051
  store float %33, float* %head, align 4, !dbg !5052
  br label %if.end32, !dbg !5053

if.else29:                                        ; preds = %land.lhs.true20, %if.else14
  %34 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan.addr, align 8, !dbg !5054
  %bone30 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %34, i32 0, i32 12, !dbg !5055
  %35 = load %struct.Bone*, %struct.Bone** %bone30, align 8, !dbg !5055
  %rad_head31 = getelementptr inbounds %struct.Bone, %struct.Bone* %35, i32 0, i32 22, !dbg !5056
  %36 = load float, float* %rad_head31, align 4, !dbg !5056
  store float %36, float* %head, align 4, !dbg !5057
  br label %if.end32

if.end32:                                         ; preds = %if.else29, %if.then25
  %37 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan.addr, align 8, !dbg !5058
  %pose_head = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %37, i32 0, i32 31, !dbg !5059
  %arraydecay33 = getelementptr inbounds [3 x float], [3 x float]* %pose_head, i64 0, i64 0, !dbg !5058
  store float* %arraydecay33, float** %headvec, align 8, !dbg !5060
  %38 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan.addr, align 8, !dbg !5061
  %pose_tail = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %38, i32 0, i32 32, !dbg !5062
  %arraydecay34 = getelementptr inbounds [3 x float], [3 x float]* %pose_tail, i64 0, i64 0, !dbg !5061
  store float* %arraydecay34, float** %tailvec, align 8, !dbg !5063
  br label %if.end35

if.end35:                                         ; preds = %if.end32, %if.end
  %arraydecay36 = getelementptr inbounds [3 x float], [3 x float]* %dirvec, i64 0, i64 0, !dbg !5064
  %39 = load float*, float** %tailvec, align 8, !dbg !5065
  %40 = load float*, float** %headvec, align 8, !dbg !5066
  call void @sub_v3_v3v3(float* %arraydecay36, float* %39, float* %40), !dbg !5067
  %41 = load [4 x float]*, [4 x float]** %smat.addr, align 8, !dbg !5068
  %arraydecay37 = getelementptr inbounds [3 x float], [3 x float]* %dirvec, i64 0, i64 0, !dbg !5069
  call void @mul_mat3_m4_v3([4 x float]* %41, float* %arraydecay37), !dbg !5070
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %dirvec, i64 0, i64 2, !dbg !5071
  store float 0.000000e+00, float* %arrayidx, align 4, !dbg !5072
  %42 = load float, float* %head, align 4, !dbg !5073
  %43 = load float, float* %tail, align 4, !dbg !5075
  %cmp = fcmp une float %42, %43, !dbg !5076
  br i1 %cmp, label %if.then38, label %if.end53, !dbg !5077

if.then38:                                        ; preds = %if.end35
  call void @llvm.dbg.declare(metadata float* %view_dist, metadata !5078, metadata !DIExpression()), !dbg !5080
  %arraydecay39 = getelementptr inbounds [3 x float], [3 x float]* %dirvec, i64 0, i64 0, !dbg !5081
  %call40 = call float @len_v2(float* %arraydecay39), !dbg !5082
  store float %call40, float* %view_dist, align 4, !dbg !5080
  %44 = load float, float* %head, align 4, !dbg !5083
  %45 = load float, float* %view_dist, align 4, !dbg !5085
  %sub = fsub float %44, %45, !dbg !5086
  %46 = load float, float* %tail, align 4, !dbg !5087
  %cmp41 = fcmp ogt float %sub, %46, !dbg !5088
  br i1 %cmp41, label %if.then42, label %if.else45, !dbg !5089

if.then42:                                        ; preds = %if.then38
  %47 = load float*, float** %headvec, align 8, !dbg !5090
  store float* %47, float** %tailvec, align 8, !dbg !5092
  %48 = load float, float* %head, align 4, !dbg !5093
  store float %48, float* %tail, align 4, !dbg !5094
  %arraydecay43 = getelementptr inbounds [3 x float], [3 x float]* %dirvec, i64 0, i64 0, !dbg !5095
  call void @zero_v3(float* %arraydecay43), !dbg !5096
  %arrayidx44 = getelementptr inbounds [3 x float], [3 x float]* %dirvec, i64 0, i64 0, !dbg !5097
  store float 0x3EE4F8B580000000, float* %arrayidx44, align 4, !dbg !5098
  br label %if.end52, !dbg !5099

if.else45:                                        ; preds = %if.then38
  %49 = load float, float* %tail, align 4, !dbg !5100
  %50 = load float, float* %view_dist, align 4, !dbg !5102
  %sub46 = fsub float %49, %50, !dbg !5103
  %51 = load float, float* %head, align 4, !dbg !5104
  %cmp47 = fcmp ogt float %sub46, %51, !dbg !5105
  br i1 %cmp47, label %if.then48, label %if.end51, !dbg !5106

if.then48:                                        ; preds = %if.else45
  %52 = load float*, float** %tailvec, align 8, !dbg !5107
  store float* %52, float** %headvec, align 8, !dbg !5109
  %53 = load float, float* %tail, align 4, !dbg !5110
  store float %53, float* %head, align 4, !dbg !5111
  %arraydecay49 = getelementptr inbounds [3 x float], [3 x float]* %dirvec, i64 0, i64 0, !dbg !5112
  call void @zero_v3(float* %arraydecay49), !dbg !5113
  %arrayidx50 = getelementptr inbounds [3 x float], [3 x float]* %dirvec, i64 0, i64 0, !dbg !5114
  store float 0x3EE4F8B580000000, float* %arrayidx50, align 4, !dbg !5115
  br label %if.end51, !dbg !5116

if.end51:                                         ; preds = %if.then48, %if.else45
  br label %if.end52

if.end52:                                         ; preds = %if.end51, %if.then42
  br label %if.end53, !dbg !5117

if.end53:                                         ; preds = %if.end52, %if.end35
  %54 = load [4 x float]*, [4 x float]** %imat.addr, align 8, !dbg !5118
  %arraydecay54 = getelementptr inbounds [3 x float], [3 x float]* %dirvec, i64 0, i64 0, !dbg !5119
  call void @mul_mat3_m4_v3([4 x float]* %54, float* %arraydecay54), !dbg !5120
  %arraydecay55 = getelementptr inbounds [3 x float], [3 x float]* %dirvec, i64 0, i64 0, !dbg !5121
  %call56 = call float @normalize_v3(float* %arraydecay55), !dbg !5123
  %cmp57 = fcmp une float 0.000000e+00, %call56, !dbg !5124
  br i1 %cmp57, label %if.then58, label %if.end170, !dbg !5125

if.then58:                                        ; preds = %if.end53
  call void @llvm.dbg.declare(metadata [3 x float]* %norvec, metadata !5126, metadata !DIExpression()), !dbg !5128
  call void @llvm.dbg.declare(metadata [3 x float]* %vec1, metadata !5129, metadata !DIExpression()), !dbg !5130
  call void @llvm.dbg.declare(metadata [3 x float]* %vec2, metadata !5131, metadata !DIExpression()), !dbg !5132
  call void @llvm.dbg.declare(metadata [3 x float]* %vec, metadata !5133, metadata !DIExpression()), !dbg !5134
  call void @llvm.dbg.declare(metadata i32* %a, metadata !5135, metadata !DIExpression()), !dbg !5136
  %arraydecay59 = getelementptr inbounds [3 x float], [3 x float]* %norvec, i64 0, i64 0, !dbg !5137
  %arraydecay60 = getelementptr inbounds [3 x float], [3 x float]* %dirvec, i64 0, i64 0, !dbg !5138
  %55 = load [4 x float]*, [4 x float]** %imat.addr, align 8, !dbg !5139
  %arrayidx61 = getelementptr inbounds [4 x float], [4 x float]* %55, i64 2, !dbg !5139
  %arraydecay62 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx61, i64 0, i64 0, !dbg !5139
  call void @cross_v3_v3v3(float* %arraydecay59, float* %arraydecay60, float* %arraydecay62), !dbg !5140
  call void @glBegin(i32 8), !dbg !5141
  store i32 0, i32* %a, align 4, !dbg !5142
  br label %for.cond, !dbg !5144

for.cond:                                         ; preds = %for.inc, %if.then58
  %56 = load i32, i32* %a, align 4, !dbg !5145
  %cmp63 = icmp slt i32 %56, 16, !dbg !5147
  br i1 %cmp63, label %for.body, label %for.end, !dbg !5148

for.body:                                         ; preds = %for.cond
  %57 = load i32, i32* %a, align 4, !dbg !5149
  %idxprom = sext i32 %57 to i64, !dbg !5151
  %arrayidx64 = getelementptr inbounds [16 x float], [16 x float]* @si, i64 0, i64 %idxprom, !dbg !5151
  %58 = load float, float* %arrayidx64, align 4, !dbg !5151
  %fneg = fneg float %58, !dbg !5152
  %arrayidx65 = getelementptr inbounds [3 x float], [3 x float]* %dirvec, i64 0, i64 0, !dbg !5153
  %59 = load float, float* %arrayidx65, align 4, !dbg !5153
  %mul = fmul float %fneg, %59, !dbg !5154
  %60 = load i32, i32* %a, align 4, !dbg !5155
  %idxprom66 = sext i32 %60 to i64, !dbg !5156
  %arrayidx67 = getelementptr inbounds [16 x float], [16 x float]* @co, i64 0, i64 %idxprom66, !dbg !5156
  %61 = load float, float* %arrayidx67, align 4, !dbg !5156
  %arrayidx68 = getelementptr inbounds [3 x float], [3 x float]* %norvec, i64 0, i64 0, !dbg !5157
  %62 = load float, float* %arrayidx68, align 4, !dbg !5157
  %mul69 = fmul float %61, %62, !dbg !5158
  %add = fadd float %mul, %mul69, !dbg !5159
  %arrayidx70 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !5160
  store float %add, float* %arrayidx70, align 4, !dbg !5161
  %63 = load i32, i32* %a, align 4, !dbg !5162
  %idxprom71 = sext i32 %63 to i64, !dbg !5163
  %arrayidx72 = getelementptr inbounds [16 x float], [16 x float]* @si, i64 0, i64 %idxprom71, !dbg !5163
  %64 = load float, float* %arrayidx72, align 4, !dbg !5163
  %fneg73 = fneg float %64, !dbg !5164
  %arrayidx74 = getelementptr inbounds [3 x float], [3 x float]* %dirvec, i64 0, i64 1, !dbg !5165
  %65 = load float, float* %arrayidx74, align 4, !dbg !5165
  %mul75 = fmul float %fneg73, %65, !dbg !5166
  %66 = load i32, i32* %a, align 4, !dbg !5167
  %idxprom76 = sext i32 %66 to i64, !dbg !5168
  %arrayidx77 = getelementptr inbounds [16 x float], [16 x float]* @co, i64 0, i64 %idxprom76, !dbg !5168
  %67 = load float, float* %arrayidx77, align 4, !dbg !5168
  %arrayidx78 = getelementptr inbounds [3 x float], [3 x float]* %norvec, i64 0, i64 1, !dbg !5169
  %68 = load float, float* %arrayidx78, align 4, !dbg !5169
  %mul79 = fmul float %67, %68, !dbg !5170
  %add80 = fadd float %mul75, %mul79, !dbg !5171
  %arrayidx81 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 1, !dbg !5172
  store float %add80, float* %arrayidx81, align 4, !dbg !5173
  %69 = load i32, i32* %a, align 4, !dbg !5174
  %idxprom82 = sext i32 %69 to i64, !dbg !5175
  %arrayidx83 = getelementptr inbounds [16 x float], [16 x float]* @si, i64 0, i64 %idxprom82, !dbg !5175
  %70 = load float, float* %arrayidx83, align 4, !dbg !5175
  %fneg84 = fneg float %70, !dbg !5176
  %arrayidx85 = getelementptr inbounds [3 x float], [3 x float]* %dirvec, i64 0, i64 2, !dbg !5177
  %71 = load float, float* %arrayidx85, align 4, !dbg !5177
  %mul86 = fmul float %fneg84, %71, !dbg !5178
  %72 = load i32, i32* %a, align 4, !dbg !5179
  %idxprom87 = sext i32 %72 to i64, !dbg !5180
  %arrayidx88 = getelementptr inbounds [16 x float], [16 x float]* @co, i64 0, i64 %idxprom87, !dbg !5180
  %73 = load float, float* %arrayidx88, align 4, !dbg !5180
  %arrayidx89 = getelementptr inbounds [3 x float], [3 x float]* %norvec, i64 0, i64 2, !dbg !5181
  %74 = load float, float* %arrayidx89, align 4, !dbg !5181
  %mul90 = fmul float %73, %74, !dbg !5182
  %add91 = fadd float %mul86, %mul90, !dbg !5183
  %arrayidx92 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 2, !dbg !5184
  store float %add91, float* %arrayidx92, align 4, !dbg !5185
  %arraydecay93 = getelementptr inbounds [3 x float], [3 x float]* %vec1, i64 0, i64 0, !dbg !5186
  %75 = load float*, float** %headvec, align 8, !dbg !5187
  %arraydecay94 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !5188
  %76 = load float, float* %head, align 4, !dbg !5189
  call void @madd_v3_v3v3fl(float* %arraydecay93, float* %75, float* %arraydecay94, float %76), !dbg !5190
  %arraydecay95 = getelementptr inbounds [3 x float], [3 x float]* %vec2, i64 0, i64 0, !dbg !5191
  %77 = load float*, float** %headvec, align 8, !dbg !5192
  %arraydecay96 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !5193
  %78 = load float, float* %head, align 4, !dbg !5194
  %79 = load float, float* %dist, align 4, !dbg !5195
  %add97 = fadd float %78, %79, !dbg !5196
  call void @madd_v3_v3v3fl(float* %arraydecay95, float* %77, float* %arraydecay96, float %add97), !dbg !5197
  call void @glColor4ub(i8 zeroext -1, i8 zeroext -1, i8 zeroext -1, i8 zeroext 50), !dbg !5198
  %arraydecay98 = getelementptr inbounds [3 x float], [3 x float]* %vec1, i64 0, i64 0, !dbg !5199
  call void @glVertex3fv(float* %arraydecay98), !dbg !5200
  %arraydecay99 = getelementptr inbounds [3 x float], [3 x float]* %vec2, i64 0, i64 0, !dbg !5201
  call void @glVertex3fv(float* %arraydecay99), !dbg !5202
  br label %for.inc, !dbg !5203

for.inc:                                          ; preds = %for.body
  %80 = load i32, i32* %a, align 4, !dbg !5204
  %inc = add nsw i32 %80, 1, !dbg !5204
  store i32 %inc, i32* %a, align 4, !dbg !5204
  br label %for.cond, !dbg !5205, !llvm.loop !5206

for.end:                                          ; preds = %for.cond
  store i32 15, i32* %a, align 4, !dbg !5208
  br label %for.cond100, !dbg !5210

for.cond100:                                      ; preds = %for.inc140, %for.end
  %81 = load i32, i32* %a, align 4, !dbg !5211
  %cmp101 = icmp sge i32 %81, 0, !dbg !5213
  br i1 %cmp101, label %for.body102, label %for.end141, !dbg !5214

for.body102:                                      ; preds = %for.cond100
  %82 = load i32, i32* %a, align 4, !dbg !5215
  %idxprom103 = sext i32 %82 to i64, !dbg !5217
  %arrayidx104 = getelementptr inbounds [16 x float], [16 x float]* @si, i64 0, i64 %idxprom103, !dbg !5217
  %83 = load float, float* %arrayidx104, align 4, !dbg !5217
  %arrayidx105 = getelementptr inbounds [3 x float], [3 x float]* %dirvec, i64 0, i64 0, !dbg !5218
  %84 = load float, float* %arrayidx105, align 4, !dbg !5218
  %mul106 = fmul float %83, %84, !dbg !5219
  %85 = load i32, i32* %a, align 4, !dbg !5220
  %idxprom107 = sext i32 %85 to i64, !dbg !5221
  %arrayidx108 = getelementptr inbounds [16 x float], [16 x float]* @co, i64 0, i64 %idxprom107, !dbg !5221
  %86 = load float, float* %arrayidx108, align 4, !dbg !5221
  %arrayidx109 = getelementptr inbounds [3 x float], [3 x float]* %norvec, i64 0, i64 0, !dbg !5222
  %87 = load float, float* %arrayidx109, align 4, !dbg !5222
  %mul110 = fmul float %86, %87, !dbg !5223
  %add111 = fadd float %mul106, %mul110, !dbg !5224
  %arrayidx112 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !5225
  store float %add111, float* %arrayidx112, align 4, !dbg !5226
  %88 = load i32, i32* %a, align 4, !dbg !5227
  %idxprom113 = sext i32 %88 to i64, !dbg !5228
  %arrayidx114 = getelementptr inbounds [16 x float], [16 x float]* @si, i64 0, i64 %idxprom113, !dbg !5228
  %89 = load float, float* %arrayidx114, align 4, !dbg !5228
  %arrayidx115 = getelementptr inbounds [3 x float], [3 x float]* %dirvec, i64 0, i64 1, !dbg !5229
  %90 = load float, float* %arrayidx115, align 4, !dbg !5229
  %mul116 = fmul float %89, %90, !dbg !5230
  %91 = load i32, i32* %a, align 4, !dbg !5231
  %idxprom117 = sext i32 %91 to i64, !dbg !5232
  %arrayidx118 = getelementptr inbounds [16 x float], [16 x float]* @co, i64 0, i64 %idxprom117, !dbg !5232
  %92 = load float, float* %arrayidx118, align 4, !dbg !5232
  %arrayidx119 = getelementptr inbounds [3 x float], [3 x float]* %norvec, i64 0, i64 1, !dbg !5233
  %93 = load float, float* %arrayidx119, align 4, !dbg !5233
  %mul120 = fmul float %92, %93, !dbg !5234
  %add121 = fadd float %mul116, %mul120, !dbg !5235
  %arrayidx122 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 1, !dbg !5236
  store float %add121, float* %arrayidx122, align 4, !dbg !5237
  %94 = load i32, i32* %a, align 4, !dbg !5238
  %idxprom123 = sext i32 %94 to i64, !dbg !5239
  %arrayidx124 = getelementptr inbounds [16 x float], [16 x float]* @si, i64 0, i64 %idxprom123, !dbg !5239
  %95 = load float, float* %arrayidx124, align 4, !dbg !5239
  %arrayidx125 = getelementptr inbounds [3 x float], [3 x float]* %dirvec, i64 0, i64 2, !dbg !5240
  %96 = load float, float* %arrayidx125, align 4, !dbg !5240
  %mul126 = fmul float %95, %96, !dbg !5241
  %97 = load i32, i32* %a, align 4, !dbg !5242
  %idxprom127 = sext i32 %97 to i64, !dbg !5243
  %arrayidx128 = getelementptr inbounds [16 x float], [16 x float]* @co, i64 0, i64 %idxprom127, !dbg !5243
  %98 = load float, float* %arrayidx128, align 4, !dbg !5243
  %arrayidx129 = getelementptr inbounds [3 x float], [3 x float]* %norvec, i64 0, i64 2, !dbg !5244
  %99 = load float, float* %arrayidx129, align 4, !dbg !5244
  %mul130 = fmul float %98, %99, !dbg !5245
  %add131 = fadd float %mul126, %mul130, !dbg !5246
  %arrayidx132 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 2, !dbg !5247
  store float %add131, float* %arrayidx132, align 4, !dbg !5248
  %arraydecay133 = getelementptr inbounds [3 x float], [3 x float]* %vec1, i64 0, i64 0, !dbg !5249
  %100 = load float*, float** %tailvec, align 8, !dbg !5250
  %arraydecay134 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !5251
  %101 = load float, float* %tail, align 4, !dbg !5252
  call void @madd_v3_v3v3fl(float* %arraydecay133, float* %100, float* %arraydecay134, float %101), !dbg !5253
  %arraydecay135 = getelementptr inbounds [3 x float], [3 x float]* %vec2, i64 0, i64 0, !dbg !5254
  %102 = load float*, float** %tailvec, align 8, !dbg !5255
  %arraydecay136 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !5256
  %103 = load float, float* %tail, align 4, !dbg !5257
  %104 = load float, float* %dist, align 4, !dbg !5258
  %add137 = fadd float %103, %104, !dbg !5259
  call void @madd_v3_v3v3fl(float* %arraydecay135, float* %102, float* %arraydecay136, float %add137), !dbg !5260
  %arraydecay138 = getelementptr inbounds [3 x float], [3 x float]* %vec1, i64 0, i64 0, !dbg !5261
  call void @glVertex3fv(float* %arraydecay138), !dbg !5262
  %arraydecay139 = getelementptr inbounds [3 x float], [3 x float]* %vec2, i64 0, i64 0, !dbg !5263
  call void @glVertex3fv(float* %arraydecay139), !dbg !5264
  br label %for.inc140, !dbg !5265

for.inc140:                                       ; preds = %for.body102
  %105 = load i32, i32* %a, align 4, !dbg !5266
  %dec = add nsw i32 %105, -1, !dbg !5266
  store i32 %dec, i32* %a, align 4, !dbg !5266
  br label %for.cond100, !dbg !5267, !llvm.loop !5268

for.end141:                                       ; preds = %for.cond100
  %106 = load float, float* getelementptr inbounds ([16 x float], [16 x float]* @si, i64 0, i64 0), align 16, !dbg !5270
  %fneg142 = fneg float %106, !dbg !5271
  %arrayidx143 = getelementptr inbounds [3 x float], [3 x float]* %dirvec, i64 0, i64 0, !dbg !5272
  %107 = load float, float* %arrayidx143, align 4, !dbg !5272
  %mul144 = fmul float %fneg142, %107, !dbg !5273
  %108 = load float, float* getelementptr inbounds ([16 x float], [16 x float]* @co, i64 0, i64 0), align 16, !dbg !5274
  %arrayidx145 = getelementptr inbounds [3 x float], [3 x float]* %norvec, i64 0, i64 0, !dbg !5275
  %109 = load float, float* %arrayidx145, align 4, !dbg !5275
  %mul146 = fmul float %108, %109, !dbg !5276
  %add147 = fadd float %mul144, %mul146, !dbg !5277
  %arrayidx148 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !5278
  store float %add147, float* %arrayidx148, align 4, !dbg !5279
  %110 = load float, float* getelementptr inbounds ([16 x float], [16 x float]* @si, i64 0, i64 0), align 16, !dbg !5280
  %fneg149 = fneg float %110, !dbg !5281
  %arrayidx150 = getelementptr inbounds [3 x float], [3 x float]* %dirvec, i64 0, i64 1, !dbg !5282
  %111 = load float, float* %arrayidx150, align 4, !dbg !5282
  %mul151 = fmul float %fneg149, %111, !dbg !5283
  %112 = load float, float* getelementptr inbounds ([16 x float], [16 x float]* @co, i64 0, i64 0), align 16, !dbg !5284
  %arrayidx152 = getelementptr inbounds [3 x float], [3 x float]* %norvec, i64 0, i64 1, !dbg !5285
  %113 = load float, float* %arrayidx152, align 4, !dbg !5285
  %mul153 = fmul float %112, %113, !dbg !5286
  %add154 = fadd float %mul151, %mul153, !dbg !5287
  %arrayidx155 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 1, !dbg !5288
  store float %add154, float* %arrayidx155, align 4, !dbg !5289
  %114 = load float, float* getelementptr inbounds ([16 x float], [16 x float]* @si, i64 0, i64 0), align 16, !dbg !5290
  %fneg156 = fneg float %114, !dbg !5291
  %arrayidx157 = getelementptr inbounds [3 x float], [3 x float]* %dirvec, i64 0, i64 2, !dbg !5292
  %115 = load float, float* %arrayidx157, align 4, !dbg !5292
  %mul158 = fmul float %fneg156, %115, !dbg !5293
  %116 = load float, float* getelementptr inbounds ([16 x float], [16 x float]* @co, i64 0, i64 0), align 16, !dbg !5294
  %arrayidx159 = getelementptr inbounds [3 x float], [3 x float]* %norvec, i64 0, i64 2, !dbg !5295
  %117 = load float, float* %arrayidx159, align 4, !dbg !5295
  %mul160 = fmul float %116, %117, !dbg !5296
  %add161 = fadd float %mul158, %mul160, !dbg !5297
  %arrayidx162 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 2, !dbg !5298
  store float %add161, float* %arrayidx162, align 4, !dbg !5299
  %arraydecay163 = getelementptr inbounds [3 x float], [3 x float]* %vec1, i64 0, i64 0, !dbg !5300
  %118 = load float*, float** %headvec, align 8, !dbg !5301
  %arraydecay164 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !5302
  %119 = load float, float* %head, align 4, !dbg !5303
  call void @madd_v3_v3v3fl(float* %arraydecay163, float* %118, float* %arraydecay164, float %119), !dbg !5304
  %arraydecay165 = getelementptr inbounds [3 x float], [3 x float]* %vec2, i64 0, i64 0, !dbg !5305
  %120 = load float*, float** %headvec, align 8, !dbg !5306
  %arraydecay166 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !5307
  %121 = load float, float* %head, align 4, !dbg !5308
  %122 = load float, float* %dist, align 4, !dbg !5309
  %add167 = fadd float %121, %122, !dbg !5310
  call void @madd_v3_v3v3fl(float* %arraydecay165, float* %120, float* %arraydecay166, float %add167), !dbg !5311
  %arraydecay168 = getelementptr inbounds [3 x float], [3 x float]* %vec1, i64 0, i64 0, !dbg !5312
  call void @glVertex3fv(float* %arraydecay168), !dbg !5313
  %arraydecay169 = getelementptr inbounds [3 x float], [3 x float]* %vec2, i64 0, i64 0, !dbg !5314
  call void @glVertex3fv(float* %arraydecay169), !dbg !5315
  call void @glEnd(), !dbg !5316
  br label %if.end170, !dbg !5317

if.end170:                                        ; preds = %for.end141, %if.end53
  ret void, !dbg !5318
}

declare dso_local void @glPushMatrix() #3

; Function Attrs: noinline nounwind uwtable
define internal void @get_matrix_editbone(%struct.EditBone* %ebone, [4 x float]* %bmat) #0 !dbg !5319 {
entry:
  %ebone.addr = alloca %struct.EditBone*, align 8
  %bmat.addr = alloca [4 x float]*, align 8
  store %struct.EditBone* %ebone, %struct.EditBone** %ebone.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.EditBone** %ebone.addr, metadata !5322, metadata !DIExpression()), !dbg !5323
  store [4 x float]* %bmat, [4 x float]** %bmat.addr, align 8
  call void @llvm.dbg.declare(metadata [4 x float]** %bmat.addr, metadata !5324, metadata !DIExpression()), !dbg !5325
  %0 = load %struct.EditBone*, %struct.EditBone** %ebone.addr, align 8, !dbg !5326
  %tail = getelementptr inbounds %struct.EditBone, %struct.EditBone* %0, i32 0, i32 8, !dbg !5327
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %tail, i64 0, i64 0, !dbg !5326
  %1 = load %struct.EditBone*, %struct.EditBone** %ebone.addr, align 8, !dbg !5328
  %head = getelementptr inbounds %struct.EditBone, %struct.EditBone* %1, i32 0, i32 7, !dbg !5329
  %arraydecay1 = getelementptr inbounds [3 x float], [3 x float]* %head, i64 0, i64 0, !dbg !5328
  %call = call float @len_v3v3(float* %arraydecay, float* %arraydecay1), !dbg !5330
  %2 = load %struct.EditBone*, %struct.EditBone** %ebone.addr, align 8, !dbg !5331
  %length = getelementptr inbounds %struct.EditBone, %struct.EditBone* %2, i32 0, i32 14, !dbg !5332
  store float %call, float* %length, align 8, !dbg !5333
  %3 = load %struct.EditBone*, %struct.EditBone** %ebone.addr, align 8, !dbg !5334
  %4 = load [4 x float]*, [4 x float]** %bmat.addr, align 8, !dbg !5335
  call void @ED_armature_ebone_to_mat4(%struct.EditBone* %3, [4 x float]* %4), !dbg !5336
  ret void, !dbg !5337
}

declare dso_local void @glMultMatrixf(float*) #3

; Function Attrs: noinline nounwind uwtable
define internal void @draw_sphere_bone(i16 signext %dt, i32 %armflag, i32 %boneflag, i16 signext %constflag, i32 %id, %struct.bPoseChannel* %pchan, %struct.EditBone* %ebone) #0 !dbg !5338 {
entry:
  %dt.addr = alloca i16, align 2
  %armflag.addr = alloca i32, align 4
  %boneflag.addr = alloca i32, align 4
  %constflag.addr = alloca i16, align 2
  %id.addr = alloca i32, align 4
  %pchan.addr = alloca %struct.bPoseChannel*, align 8
  %ebone.addr = alloca %struct.EditBone*, align 8
  %qobj = alloca %struct.GLUquadric*, align 8
  %head = alloca float, align 4
  %tail = alloca float, align 4
  %length = alloca float, align 4
  %fac1 = alloca float, align 4
  %fac2 = alloca float, align 4
  store i16 %dt, i16* %dt.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %dt.addr, metadata !5341, metadata !DIExpression()), !dbg !5342
  store i32 %armflag, i32* %armflag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %armflag.addr, metadata !5343, metadata !DIExpression()), !dbg !5344
  store i32 %boneflag, i32* %boneflag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %boneflag.addr, metadata !5345, metadata !DIExpression()), !dbg !5346
  store i16 %constflag, i16* %constflag.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %constflag.addr, metadata !5347, metadata !DIExpression()), !dbg !5348
  store i32 %id, i32* %id.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %id.addr, metadata !5349, metadata !DIExpression()), !dbg !5350
  store %struct.bPoseChannel* %pchan, %struct.bPoseChannel** %pchan.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bPoseChannel** %pchan.addr, metadata !5351, metadata !DIExpression()), !dbg !5352
  store %struct.EditBone* %ebone, %struct.EditBone** %ebone.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.EditBone** %ebone.addr, metadata !5353, metadata !DIExpression()), !dbg !5354
  call void @llvm.dbg.declare(metadata %struct.GLUquadric** %qobj, metadata !5355, metadata !DIExpression()), !dbg !5361
  call void @llvm.dbg.declare(metadata float* %head, metadata !5362, metadata !DIExpression()), !dbg !5363
  call void @llvm.dbg.declare(metadata float* %tail, metadata !5364, metadata !DIExpression()), !dbg !5365
  call void @llvm.dbg.declare(metadata float* %length, metadata !5366, metadata !DIExpression()), !dbg !5367
  call void @llvm.dbg.declare(metadata float* %fac1, metadata !5368, metadata !DIExpression()), !dbg !5369
  call void @llvm.dbg.declare(metadata float* %fac2, metadata !5370, metadata !DIExpression()), !dbg !5371
  call void @glPushMatrix(), !dbg !5372
  %call = call %struct.GLUquadric* @gluNewQuadric(), !dbg !5373
  store %struct.GLUquadric* %call, %struct.GLUquadric** %qobj, align 8, !dbg !5374
  %0 = load %struct.EditBone*, %struct.EditBone** %ebone.addr, align 8, !dbg !5375
  %tobool = icmp ne %struct.EditBone* %0, null, !dbg !5375
  br i1 %tobool, label %if.then, label %if.else7, !dbg !5377

if.then:                                          ; preds = %entry
  %1 = load %struct.EditBone*, %struct.EditBone** %ebone.addr, align 8, !dbg !5378
  %length1 = getelementptr inbounds %struct.EditBone, %struct.EditBone* %1, i32 0, i32 14, !dbg !5380
  %2 = load float, float* %length1, align 8, !dbg !5380
  store float %2, float* %length, align 4, !dbg !5381
  %3 = load %struct.EditBone*, %struct.EditBone** %ebone.addr, align 8, !dbg !5382
  %rad_tail = getelementptr inbounds %struct.EditBone, %struct.EditBone* %3, i32 0, i32 19, !dbg !5383
  %4 = load float, float* %rad_tail, align 4, !dbg !5383
  store float %4, float* %tail, align 4, !dbg !5384
  %5 = load %struct.EditBone*, %struct.EditBone** %ebone.addr, align 8, !dbg !5385
  %parent = getelementptr inbounds %struct.EditBone, %struct.EditBone* %5, i32 0, i32 3, !dbg !5387
  %6 = load %struct.EditBone*, %struct.EditBone** %parent, align 8, !dbg !5387
  %tobool2 = icmp ne %struct.EditBone* %6, null, !dbg !5385
  br i1 %tobool2, label %land.lhs.true, label %if.else, !dbg !5388

land.lhs.true:                                    ; preds = %if.then
  %7 = load i32, i32* %boneflag.addr, align 4, !dbg !5389
  %and = and i32 %7, 16, !dbg !5390
  %tobool3 = icmp ne i32 %and, 0, !dbg !5390
  br i1 %tobool3, label %if.then4, label %if.else, !dbg !5391

if.then4:                                         ; preds = %land.lhs.true
  %8 = load %struct.EditBone*, %struct.EditBone** %ebone.addr, align 8, !dbg !5392
  %parent5 = getelementptr inbounds %struct.EditBone, %struct.EditBone* %8, i32 0, i32 3, !dbg !5393
  %9 = load %struct.EditBone*, %struct.EditBone** %parent5, align 8, !dbg !5393
  %rad_tail6 = getelementptr inbounds %struct.EditBone, %struct.EditBone* %9, i32 0, i32 19, !dbg !5394
  %10 = load float, float* %rad_tail6, align 4, !dbg !5394
  store float %10, float* %head, align 4, !dbg !5395
  br label %if.end, !dbg !5396

if.else:                                          ; preds = %land.lhs.true, %if.then
  %11 = load %struct.EditBone*, %struct.EditBone** %ebone.addr, align 8, !dbg !5397
  %rad_head = getelementptr inbounds %struct.EditBone, %struct.EditBone* %11, i32 0, i32 18, !dbg !5398
  %12 = load float, float* %rad_head, align 8, !dbg !5398
  store float %12, float* %head, align 4, !dbg !5399
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then4
  br label %if.end24, !dbg !5400

if.else7:                                         ; preds = %entry
  %13 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan.addr, align 8, !dbg !5401
  %bone = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %13, i32 0, i32 12, !dbg !5403
  %14 = load %struct.Bone*, %struct.Bone** %bone, align 8, !dbg !5403
  %length8 = getelementptr inbounds %struct.Bone, %struct.Bone* %14, i32 0, i32 18, !dbg !5404
  %15 = load float, float* %length8, align 4, !dbg !5404
  store float %15, float* %length, align 4, !dbg !5405
  %16 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan.addr, align 8, !dbg !5406
  %bone9 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %16, i32 0, i32 12, !dbg !5407
  %17 = load %struct.Bone*, %struct.Bone** %bone9, align 8, !dbg !5407
  %rad_tail10 = getelementptr inbounds %struct.Bone, %struct.Bone* %17, i32 0, i32 23, !dbg !5408
  %18 = load float, float* %rad_tail10, align 8, !dbg !5408
  store float %18, float* %tail, align 4, !dbg !5409
  %19 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan.addr, align 8, !dbg !5410
  %parent11 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %19, i32 0, i32 13, !dbg !5412
  %20 = load %struct.bPoseChannel*, %struct.bPoseChannel** %parent11, align 8, !dbg !5412
  %tobool12 = icmp ne %struct.bPoseChannel* %20, null, !dbg !5410
  br i1 %tobool12, label %land.lhs.true13, label %if.else20, !dbg !5413

land.lhs.true13:                                  ; preds = %if.else7
  %21 = load i32, i32* %boneflag.addr, align 4, !dbg !5414
  %and14 = and i32 %21, 16, !dbg !5415
  %tobool15 = icmp ne i32 %and14, 0, !dbg !5415
  br i1 %tobool15, label %if.then16, label %if.else20, !dbg !5416

if.then16:                                        ; preds = %land.lhs.true13
  %22 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan.addr, align 8, !dbg !5417
  %parent17 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %22, i32 0, i32 13, !dbg !5418
  %23 = load %struct.bPoseChannel*, %struct.bPoseChannel** %parent17, align 8, !dbg !5418
  %bone18 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %23, i32 0, i32 12, !dbg !5419
  %24 = load %struct.Bone*, %struct.Bone** %bone18, align 8, !dbg !5419
  %rad_tail19 = getelementptr inbounds %struct.Bone, %struct.Bone* %24, i32 0, i32 23, !dbg !5420
  %25 = load float, float* %rad_tail19, align 8, !dbg !5420
  store float %25, float* %head, align 4, !dbg !5421
  br label %if.end23, !dbg !5422

if.else20:                                        ; preds = %land.lhs.true13, %if.else7
  %26 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan.addr, align 8, !dbg !5423
  %bone21 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %26, i32 0, i32 12, !dbg !5424
  %27 = load %struct.Bone*, %struct.Bone** %bone21, align 8, !dbg !5424
  %rad_head22 = getelementptr inbounds %struct.Bone, %struct.Bone* %27, i32 0, i32 22, !dbg !5425
  %28 = load float, float* %rad_head22, align 4, !dbg !5425
  store float %28, float* %head, align 4, !dbg !5426
  br label %if.end23

if.end23:                                         ; preds = %if.else20, %if.then16
  br label %if.end24

if.end24:                                         ; preds = %if.end23, %if.end
  call void @glRotatef(float -9.000000e+01, float 1.000000e+00, float 0.000000e+00, float 0.000000e+00), !dbg !5427
  %29 = load i16, i16* %dt.addr, align 2, !dbg !5428
  %conv = sext i16 %29 to i32, !dbg !5428
  %cmp = icmp eq i32 %conv, 3, !dbg !5430
  br i1 %cmp, label %if.then26, label %if.else27, !dbg !5431

if.then26:                                        ; preds = %if.end24
  call void @glEnable(i32 2903), !dbg !5432
  call void @glEnable(i32 2896), !dbg !5434
  %30 = load %struct.GLUquadric*, %struct.GLUquadric** %qobj, align 8, !dbg !5435
  call void @gluQuadricDrawStyle(%struct.GLUquadric* %30, i32 100012), !dbg !5436
  call void @glShadeModel(i32 7425), !dbg !5437
  br label %if.end28, !dbg !5438

if.else27:                                        ; preds = %if.end24
  %31 = load %struct.GLUquadric*, %struct.GLUquadric** %qobj, align 8, !dbg !5439
  call void @gluQuadricDrawStyle(%struct.GLUquadric* %31, i32 100013), !dbg !5441
  br label %if.end28

if.end28:                                         ; preds = %if.else27, %if.then26
  %32 = load i32, i32* %armflag.addr, align 4, !dbg !5442
  %and29 = and i32 %32, 32, !dbg !5444
  %tobool30 = icmp ne i32 %and29, 0, !dbg !5444
  br i1 %tobool30, label %if.then31, label %if.else37, !dbg !5445

if.then31:                                        ; preds = %if.end28
  %33 = load i32, i32* %boneflag.addr, align 4, !dbg !5446
  %and32 = and i32 %33, 2, !dbg !5449
  %tobool33 = icmp ne i32 %and32, 0, !dbg !5449
  br i1 %tobool33, label %if.then34, label %if.else35, !dbg !5450

if.then34:                                        ; preds = %if.then31
  call void @UI_ThemeColor(i32 34), !dbg !5451
  br label %if.end36, !dbg !5451

if.else35:                                        ; preds = %if.then31
  call void @UI_ThemeColorShade(i32 74, i32 -30), !dbg !5452
  br label %if.end36

if.end36:                                         ; preds = %if.else35, %if.then34
  br label %if.end49, !dbg !5453

if.else37:                                        ; preds = %if.end28
  %34 = load i32, i32* %armflag.addr, align 4, !dbg !5454
  %and38 = and i32 %34, 16, !dbg !5456
  %tobool39 = icmp ne i32 %and38, 0, !dbg !5456
  br i1 %tobool39, label %if.then40, label %if.else42, !dbg !5457

if.then40:                                        ; preds = %if.else37
  %35 = load i32, i32* %boneflag.addr, align 4, !dbg !5458
  %36 = load i16, i16* %constflag.addr, align 2, !dbg !5459
  %call41 = call zeroext i8 @set_pchan_glColor(i16 signext 4, i32 %35, i16 signext %36), !dbg !5460
  br label %if.end48, !dbg !5460

if.else42:                                        ; preds = %if.else37
  %37 = load i16, i16* %dt.addr, align 2, !dbg !5461
  %conv43 = sext i16 %37 to i32, !dbg !5461
  %cmp44 = icmp eq i32 %conv43, 3, !dbg !5463
  br i1 %cmp44, label %if.then46, label %if.end47, !dbg !5464

if.then46:                                        ; preds = %if.else42
  call void @UI_ThemeColorShade(i32 74, i32 -30), !dbg !5465
  br label %if.end47, !dbg !5465

if.end47:                                         ; preds = %if.then46, %if.else42
  br label %if.end48

if.end48:                                         ; preds = %if.end47, %if.then40
  br label %if.end49

if.end49:                                         ; preds = %if.end48, %if.end36
  %38 = load i32, i32* %boneflag.addr, align 4, !dbg !5466
  %and50 = and i32 %38, 16, !dbg !5468
  %cmp51 = icmp eq i32 %and50, 0, !dbg !5469
  br i1 %cmp51, label %if.then53, label %if.end60, !dbg !5470

if.then53:                                        ; preds = %if.end49
  %39 = load i32, i32* %id.addr, align 4, !dbg !5471
  %cmp54 = icmp ne i32 %39, -1, !dbg !5474
  br i1 %cmp54, label %if.then56, label %if.end58, !dbg !5475

if.then56:                                        ; preds = %if.then53
  %40 = load i32, i32* %id.addr, align 4, !dbg !5476
  %or = or i32 %40, 268435456, !dbg !5477
  %call57 = call zeroext i8 @GPU_select_load_id(i32 %or), !dbg !5478
  br label %if.end58, !dbg !5478

if.end58:                                         ; preds = %if.then56, %if.then53
  %41 = load %struct.GLUquadric*, %struct.GLUquadric** %qobj, align 8, !dbg !5479
  %42 = load float, float* %head, align 4, !dbg !5480
  %conv59 = fpext float %42 to double, !dbg !5480
  call void @gluSphere(%struct.GLUquadric* %41, double %conv59, i32 16, i32 10), !dbg !5481
  br label %if.end60, !dbg !5482

if.end60:                                         ; preds = %if.end58, %if.end49
  %43 = load i32, i32* %armflag.addr, align 4, !dbg !5483
  %and61 = and i32 %43, 32, !dbg !5485
  %tobool62 = icmp ne i32 %and61, 0, !dbg !5485
  br i1 %tobool62, label %if.then63, label %if.end69, !dbg !5486

if.then63:                                        ; preds = %if.end60
  %44 = load i32, i32* %boneflag.addr, align 4, !dbg !5487
  %and64 = and i32 %44, 4, !dbg !5490
  %tobool65 = icmp ne i32 %and64, 0, !dbg !5490
  br i1 %tobool65, label %if.then66, label %if.else67, !dbg !5491

if.then66:                                        ; preds = %if.then63
  call void @UI_ThemeColor(i32 34), !dbg !5492
  br label %if.end68, !dbg !5492

if.else67:                                        ; preds = %if.then63
  call void @UI_ThemeColorShade(i32 74, i32 -30), !dbg !5493
  br label %if.end68

if.end68:                                         ; preds = %if.else67, %if.then66
  br label %if.end69, !dbg !5494

if.end69:                                         ; preds = %if.end68, %if.end60
  %45 = load i32, i32* %id.addr, align 4, !dbg !5495
  %cmp70 = icmp ne i32 %45, -1, !dbg !5497
  br i1 %cmp70, label %if.then72, label %if.end75, !dbg !5498

if.then72:                                        ; preds = %if.end69
  %46 = load i32, i32* %id.addr, align 4, !dbg !5499
  %or73 = or i32 %46, 536870912, !dbg !5500
  %call74 = call zeroext i8 @GPU_select_load_id(i32 %or73), !dbg !5501
  br label %if.end75, !dbg !5501

if.end75:                                         ; preds = %if.then72, %if.end69
  %47 = load float, float* %length, align 4, !dbg !5502
  call void @glTranslatef(float 0.000000e+00, float 0.000000e+00, float %47), !dbg !5503
  %48 = load %struct.GLUquadric*, %struct.GLUquadric** %qobj, align 8, !dbg !5504
  %49 = load float, float* %tail, align 4, !dbg !5505
  %conv76 = fpext float %49 to double, !dbg !5505
  call void @gluSphere(%struct.GLUquadric* %48, double %conv76, i32 16, i32 10), !dbg !5506
  %50 = load float, float* %length, align 4, !dbg !5507
  %fneg = fneg float %50, !dbg !5508
  call void @glTranslatef(float 0.000000e+00, float 0.000000e+00, float %fneg), !dbg !5509
  %51 = load i32, i32* %armflag.addr, align 4, !dbg !5510
  %and77 = and i32 %51, 32, !dbg !5512
  %tobool78 = icmp ne i32 %and77, 0, !dbg !5512
  br i1 %tobool78, label %if.then79, label %if.else85, !dbg !5513

if.then79:                                        ; preds = %if.end75
  %52 = load i32, i32* %boneflag.addr, align 4, !dbg !5514
  %and80 = and i32 %52, 1, !dbg !5517
  %tobool81 = icmp ne i32 %and80, 0, !dbg !5517
  br i1 %tobool81, label %if.then82, label %if.else83, !dbg !5518

if.then82:                                        ; preds = %if.then79
  call void @UI_ThemeColor(i32 28), !dbg !5519
  br label %if.end84, !dbg !5519

if.else83:                                        ; preds = %if.then79
  call void @UI_ThemeColor(i32 74), !dbg !5520
  br label %if.end84

if.end84:                                         ; preds = %if.else83, %if.then82
  br label %if.end97, !dbg !5521

if.else85:                                        ; preds = %if.end75
  %53 = load i32, i32* %armflag.addr, align 4, !dbg !5522
  %and86 = and i32 %53, 16, !dbg !5524
  %tobool87 = icmp ne i32 %and86, 0, !dbg !5524
  br i1 %tobool87, label %if.then88, label %if.else90, !dbg !5525

if.then88:                                        ; preds = %if.else85
  %54 = load i32, i32* %boneflag.addr, align 4, !dbg !5526
  %55 = load i16, i16* %constflag.addr, align 2, !dbg !5527
  %call89 = call zeroext i8 @set_pchan_glColor(i16 signext 3, i32 %54, i16 signext %55), !dbg !5528
  br label %if.end96, !dbg !5528

if.else90:                                        ; preds = %if.else85
  %56 = load i16, i16* %dt.addr, align 2, !dbg !5529
  %conv91 = sext i16 %56 to i32, !dbg !5529
  %cmp92 = icmp eq i32 %conv91, 3, !dbg !5531
  br i1 %cmp92, label %if.then94, label %if.end95, !dbg !5532

if.then94:                                        ; preds = %if.else90
  call void @UI_ThemeColor(i32 74), !dbg !5533
  br label %if.end95, !dbg !5533

if.end95:                                         ; preds = %if.then94, %if.else90
  br label %if.end96

if.end96:                                         ; preds = %if.end95, %if.then88
  br label %if.end97

if.end97:                                         ; preds = %if.end96, %if.end84
  %57 = load float, float* %length, align 4, !dbg !5534
  %58 = load float, float* %head, align 4, !dbg !5535
  %sub = fsub float %57, %58, !dbg !5536
  %59 = load float, float* %length, align 4, !dbg !5537
  %div = fdiv float %sub, %59, !dbg !5538
  store float %div, float* %fac1, align 4, !dbg !5539
  %60 = load float, float* %length, align 4, !dbg !5540
  %61 = load float, float* %tail, align 4, !dbg !5541
  %sub98 = fsub float %60, %61, !dbg !5542
  %62 = load float, float* %length, align 4, !dbg !5543
  %div99 = fdiv float %sub98, %62, !dbg !5544
  store float %div99, float* %fac2, align 4, !dbg !5545
  %63 = load float, float* %length, align 4, !dbg !5546
  %64 = load float, float* %head, align 4, !dbg !5548
  %65 = load float, float* %tail, align 4, !dbg !5549
  %add = fadd float %64, %65, !dbg !5550
  %cmp100 = fcmp ogt float %63, %add, !dbg !5551
  br i1 %cmp100, label %if.then102, label %if.else135, !dbg !5552

if.then102:                                       ; preds = %if.end97
  %66 = load i32, i32* %id.addr, align 4, !dbg !5553
  %cmp103 = icmp ne i32 %66, -1, !dbg !5556
  br i1 %cmp103, label %if.then105, label %if.end108, !dbg !5557

if.then105:                                       ; preds = %if.then102
  %67 = load i32, i32* %id.addr, align 4, !dbg !5558
  %or106 = or i32 %67, 1073741824, !dbg !5559
  %call107 = call zeroext i8 @GPU_select_load_id(i32 %or106), !dbg !5560
  br label %if.end108, !dbg !5560

if.end108:                                        ; preds = %if.then105, %if.then102
  call void @glEnable(i32 32823), !dbg !5561
  call void @glPolygonOffset(float -1.000000e+00, float -1.000000e+00), !dbg !5562
  %68 = load float, float* %head, align 4, !dbg !5563
  call void @glTranslatef(float 0.000000e+00, float 0.000000e+00, float %68), !dbg !5564
  %69 = load %struct.GLUquadric*, %struct.GLUquadric** %qobj, align 8, !dbg !5565
  %70 = load float, float* %fac1, align 4, !dbg !5566
  %71 = load float, float* %head, align 4, !dbg !5567
  %mul = fmul float %70, %71, !dbg !5568
  %72 = load float, float* %fac1, align 4, !dbg !5569
  %sub109 = fsub float 1.000000e+00, %72, !dbg !5570
  %73 = load float, float* %tail, align 4, !dbg !5571
  %mul110 = fmul float %sub109, %73, !dbg !5572
  %add111 = fadd float %mul, %mul110, !dbg !5573
  %conv112 = fpext float %add111 to double, !dbg !5566
  %74 = load float, float* %fac2, align 4, !dbg !5574
  %75 = load float, float* %tail, align 4, !dbg !5575
  %mul113 = fmul float %74, %75, !dbg !5576
  %76 = load float, float* %fac2, align 4, !dbg !5577
  %sub114 = fsub float 1.000000e+00, %76, !dbg !5578
  %77 = load float, float* %head, align 4, !dbg !5579
  %mul115 = fmul float %sub114, %77, !dbg !5580
  %add116 = fadd float %mul113, %mul115, !dbg !5581
  %conv117 = fpext float %add116 to double, !dbg !5574
  %78 = load float, float* %length, align 4, !dbg !5582
  %79 = load float, float* %head, align 4, !dbg !5583
  %sub118 = fsub float %78, %79, !dbg !5584
  %80 = load float, float* %tail, align 4, !dbg !5585
  %sub119 = fsub float %sub118, %80, !dbg !5586
  %conv120 = fpext float %sub119 to double, !dbg !5582
  call void @gluCylinder(%struct.GLUquadric* %69, double %conv112, double %conv117, double %conv120, i32 16, i32 1), !dbg !5587
  %81 = load float, float* %head, align 4, !dbg !5588
  %fneg121 = fneg float %81, !dbg !5589
  call void @glTranslatef(float 0.000000e+00, float 0.000000e+00, float %fneg121), !dbg !5590
  call void @glDisable(i32 32823), !dbg !5591
  %82 = load float, float* %length, align 4, !dbg !5592
  %83 = load float, float* %tail, align 4, !dbg !5593
  %sub122 = fsub float %82, %83, !dbg !5594
  call void @glTranslatef(float 0.000000e+00, float 0.000000e+00, float %sub122), !dbg !5595
  %84 = load %struct.GLUquadric*, %struct.GLUquadric** %qobj, align 8, !dbg !5596
  %85 = load float, float* %fac2, align 4, !dbg !5597
  %86 = load float, float* %tail, align 4, !dbg !5598
  %mul123 = fmul float %85, %86, !dbg !5599
  %87 = load float, float* %fac2, align 4, !dbg !5600
  %sub124 = fsub float 1.000000e+00, %87, !dbg !5601
  %88 = load float, float* %head, align 4, !dbg !5602
  %mul125 = fmul float %sub124, %88, !dbg !5603
  %add126 = fadd float %mul123, %mul125, !dbg !5604
  %conv127 = fpext float %add126 to double, !dbg !5597
  call void @gluSphere(%struct.GLUquadric* %84, double %conv127, i32 16, i32 10), !dbg !5605
  %89 = load float, float* %length, align 4, !dbg !5606
  %fneg128 = fneg float %89, !dbg !5607
  %90 = load float, float* %tail, align 4, !dbg !5608
  %add129 = fadd float %fneg128, %90, !dbg !5609
  call void @glTranslatef(float 0.000000e+00, float 0.000000e+00, float %add129), !dbg !5610
  %91 = load float, float* %head, align 4, !dbg !5611
  call void @glTranslatef(float 0.000000e+00, float 0.000000e+00, float %91), !dbg !5612
  %92 = load %struct.GLUquadric*, %struct.GLUquadric** %qobj, align 8, !dbg !5613
  %93 = load float, float* %fac1, align 4, !dbg !5614
  %94 = load float, float* %head, align 4, !dbg !5615
  %mul130 = fmul float %93, %94, !dbg !5616
  %95 = load float, float* %fac1, align 4, !dbg !5617
  %sub131 = fsub float 1.000000e+00, %95, !dbg !5618
  %96 = load float, float* %tail, align 4, !dbg !5619
  %mul132 = fmul float %sub131, %96, !dbg !5620
  %add133 = fadd float %mul130, %mul132, !dbg !5621
  %conv134 = fpext float %add133 to double, !dbg !5614
  call void @gluSphere(%struct.GLUquadric* %92, double %conv134, i32 16, i32 10), !dbg !5622
  br label %if.end144, !dbg !5623

if.else135:                                       ; preds = %if.end97
  %97 = load float, float* %head, align 4, !dbg !5624
  %98 = load float, float* %length, align 4, !dbg !5626
  %add136 = fadd float %97, %98, !dbg !5627
  %99 = load float, float* %tail, align 4, !dbg !5628
  %sub137 = fsub float %add136, %99, !dbg !5629
  %div138 = fdiv float %sub137, 2.000000e+00, !dbg !5630
  call void @glTranslatef(float 0.000000e+00, float 0.000000e+00, float %div138), !dbg !5631
  %100 = load %struct.GLUquadric*, %struct.GLUquadric** %qobj, align 8, !dbg !5632
  %101 = load float, float* %fac1, align 4, !dbg !5633
  %102 = load float, float* %head, align 4, !dbg !5634
  %mul139 = fmul float %101, %102, !dbg !5635
  %103 = load float, float* %fac1, align 4, !dbg !5636
  %sub140 = fsub float 1.000000e+00, %103, !dbg !5637
  %104 = load float, float* %tail, align 4, !dbg !5638
  %mul141 = fmul float %sub140, %104, !dbg !5639
  %add142 = fadd float %mul139, %mul141, !dbg !5640
  %conv143 = fpext float %add142 to double, !dbg !5633
  call void @gluSphere(%struct.GLUquadric* %100, double %conv143, i32 16, i32 10), !dbg !5641
  br label %if.end144

if.end144:                                        ; preds = %if.else135, %if.end108
  %105 = load i16, i16* %dt.addr, align 2, !dbg !5642
  %conv145 = sext i16 %105 to i32, !dbg !5642
  %cmp146 = icmp eq i32 %conv145, 3, !dbg !5644
  br i1 %cmp146, label %if.then148, label %if.end149, !dbg !5645

if.then148:                                       ; preds = %if.end144
  call void @glShadeModel(i32 7424), !dbg !5646
  call void @glDisable(i32 2896), !dbg !5648
  call void @glDisable(i32 2903), !dbg !5649
  br label %if.end149, !dbg !5650

if.end149:                                        ; preds = %if.then148, %if.end144
  call void @glPopMatrix(), !dbg !5651
  %106 = load %struct.GLUquadric*, %struct.GLUquadric** %qobj, align 8, !dbg !5652
  call void @gluDeleteQuadric(%struct.GLUquadric* %106), !dbg !5653
  ret void, !dbg !5654
}

; Function Attrs: noinline nounwind uwtable
define internal void @draw_b_bone(i16 signext %dt, i32 %armflag, i32 %boneflag, i16 signext %constflag, i32 %id, %struct.bPoseChannel* %pchan, %struct.EditBone* %ebone) #0 !dbg !5655 {
entry:
  %dt.addr = alloca i16, align 2
  %armflag.addr = alloca i32, align 4
  %boneflag.addr = alloca i32, align 4
  %constflag.addr = alloca i16, align 2
  %id.addr = alloca i32, align 4
  %pchan.addr = alloca %struct.bPoseChannel*, align 8
  %ebone.addr = alloca %struct.EditBone*, align 8
  %xwidth = alloca float, align 4
  %length = alloca float, align 4
  %zwidth = alloca float, align 4
  store i16 %dt, i16* %dt.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %dt.addr, metadata !5656, metadata !DIExpression()), !dbg !5657
  store i32 %armflag, i32* %armflag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %armflag.addr, metadata !5658, metadata !DIExpression()), !dbg !5659
  store i32 %boneflag, i32* %boneflag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %boneflag.addr, metadata !5660, metadata !DIExpression()), !dbg !5661
  store i16 %constflag, i16* %constflag.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %constflag.addr, metadata !5662, metadata !DIExpression()), !dbg !5663
  store i32 %id, i32* %id.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %id.addr, metadata !5664, metadata !DIExpression()), !dbg !5665
  store %struct.bPoseChannel* %pchan, %struct.bPoseChannel** %pchan.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bPoseChannel** %pchan.addr, metadata !5666, metadata !DIExpression()), !dbg !5667
  store %struct.EditBone* %ebone, %struct.EditBone** %ebone.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.EditBone** %ebone.addr, metadata !5668, metadata !DIExpression()), !dbg !5669
  call void @llvm.dbg.declare(metadata float* %xwidth, metadata !5670, metadata !DIExpression()), !dbg !5671
  call void @llvm.dbg.declare(metadata float* %length, metadata !5672, metadata !DIExpression()), !dbg !5673
  call void @llvm.dbg.declare(metadata float* %zwidth, metadata !5674, metadata !DIExpression()), !dbg !5675
  %0 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan.addr, align 8, !dbg !5676
  %tobool = icmp ne %struct.bPoseChannel* %0, null, !dbg !5676
  br i1 %tobool, label %if.then, label %if.else, !dbg !5678

if.then:                                          ; preds = %entry
  %1 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan.addr, align 8, !dbg !5679
  %bone = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %1, i32 0, i32 12, !dbg !5681
  %2 = load %struct.Bone*, %struct.Bone** %bone, align 8, !dbg !5681
  %xwidth1 = getelementptr inbounds %struct.Bone, %struct.Bone* %2, i32 0, i32 17, !dbg !5682
  %3 = load float, float* %xwidth1, align 8, !dbg !5682
  store float %3, float* %xwidth, align 4, !dbg !5683
  %4 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan.addr, align 8, !dbg !5684
  %bone2 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %4, i32 0, i32 12, !dbg !5685
  %5 = load %struct.Bone*, %struct.Bone** %bone2, align 8, !dbg !5685
  %length3 = getelementptr inbounds %struct.Bone, %struct.Bone* %5, i32 0, i32 18, !dbg !5686
  %6 = load float, float* %length3, align 4, !dbg !5686
  store float %6, float* %length, align 4, !dbg !5687
  %7 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan.addr, align 8, !dbg !5688
  %bone4 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %7, i32 0, i32 12, !dbg !5689
  %8 = load %struct.Bone*, %struct.Bone** %bone4, align 8, !dbg !5689
  %zwidth5 = getelementptr inbounds %struct.Bone, %struct.Bone* %8, i32 0, i32 19, !dbg !5690
  %9 = load float, float* %zwidth5, align 8, !dbg !5690
  store float %9, float* %zwidth, align 4, !dbg !5691
  br label %if.end, !dbg !5692

if.else:                                          ; preds = %entry
  %10 = load %struct.EditBone*, %struct.EditBone** %ebone.addr, align 8, !dbg !5693
  %xwidth6 = getelementptr inbounds %struct.EditBone, %struct.EditBone* %10, i32 0, i32 13, !dbg !5695
  %11 = load float, float* %xwidth6, align 4, !dbg !5695
  store float %11, float* %xwidth, align 4, !dbg !5696
  %12 = load %struct.EditBone*, %struct.EditBone** %ebone.addr, align 8, !dbg !5697
  %length7 = getelementptr inbounds %struct.EditBone, %struct.EditBone* %12, i32 0, i32 14, !dbg !5698
  %13 = load float, float* %length7, align 8, !dbg !5698
  store float %13, float* %length, align 4, !dbg !5699
  %14 = load %struct.EditBone*, %struct.EditBone** %ebone.addr, align 8, !dbg !5700
  %zwidth8 = getelementptr inbounds %struct.EditBone, %struct.EditBone* %14, i32 0, i32 15, !dbg !5701
  %15 = load float, float* %zwidth8, align 4, !dbg !5701
  store float %15, float* %zwidth, align 4, !dbg !5702
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %16 = load i32, i32* %armflag.addr, align 4, !dbg !5703
  %and = and i32 %16, 32, !dbg !5705
  %tobool9 = icmp ne i32 %and, 0, !dbg !5705
  br i1 %tobool9, label %if.then10, label %if.end11, !dbg !5706

if.then10:                                        ; preds = %if.end
  call void @glPushMatrix(), !dbg !5707
  %17 = load float, float* %length, align 4, !dbg !5709
  %18 = load float, float* %length, align 4, !dbg !5710
  %19 = load float, float* %length, align 4, !dbg !5711
  call void @glScalef(float %17, float %18, float %19), !dbg !5712
  %20 = load i16, i16* %dt.addr, align 2, !dbg !5713
  %21 = load i32, i32* %armflag.addr, align 4, !dbg !5714
  %22 = load i32, i32* %boneflag.addr, align 4, !dbg !5715
  %23 = load i32, i32* %id.addr, align 4, !dbg !5716
  call void @draw_bone_points(i16 signext %20, i32 %21, i32 %22, i32 %23), !dbg !5717
  call void @glPopMatrix(), !dbg !5718
  %24 = load float, float* %length, align 4, !dbg !5719
  %mul = fmul float %24, 0x3FEE666660000000, !dbg !5719
  store float %mul, float* %length, align 4, !dbg !5719
  br label %if.end11, !dbg !5720

if.end11:                                         ; preds = %if.then10, %if.end
  %25 = load i32, i32* %armflag.addr, align 4, !dbg !5721
  %and12 = and i32 %25, 16, !dbg !5723
  %tobool13 = icmp ne i32 %and12, 0, !dbg !5723
  br i1 %tobool13, label %if.then14, label %if.else20, !dbg !5724

if.then14:                                        ; preds = %if.end11
  %26 = load i16, i16* %dt.addr, align 2, !dbg !5725
  %conv = sext i16 %26 to i32, !dbg !5725
  %cmp = icmp sle i32 %conv, 2, !dbg !5728
  br i1 %cmp, label %if.then16, label %if.else17, !dbg !5729

if.then16:                                        ; preds = %if.then14
  %27 = load i32, i32* %boneflag.addr, align 4, !dbg !5730
  %28 = load i16, i16* %constflag.addr, align 2, !dbg !5731
  %call = call zeroext i8 @set_pchan_glColor(i16 signext 0, i32 %27, i16 signext %28), !dbg !5732
  br label %if.end19, !dbg !5732

if.else17:                                        ; preds = %if.then14
  %29 = load i32, i32* %boneflag.addr, align 4, !dbg !5733
  %30 = load i16, i16* %constflag.addr, align 2, !dbg !5734
  %call18 = call zeroext i8 @set_pchan_glColor(i16 signext 1, i32 %29, i16 signext %30), !dbg !5735
  br label %if.end19

if.end19:                                         ; preds = %if.else17, %if.then16
  br label %if.end31, !dbg !5736

if.else20:                                        ; preds = %if.end11
  %31 = load i32, i32* %armflag.addr, align 4, !dbg !5737
  %and21 = and i32 %31, 32, !dbg !5739
  %tobool22 = icmp ne i32 %and21, 0, !dbg !5739
  br i1 %tobool22, label %if.then23, label %if.end30, !dbg !5740

if.then23:                                        ; preds = %if.else20
  %32 = load i16, i16* %dt.addr, align 2, !dbg !5741
  %conv24 = sext i16 %32 to i32, !dbg !5741
  %cmp25 = icmp eq i32 %conv24, 2, !dbg !5744
  br i1 %cmp25, label %if.then27, label %if.else28, !dbg !5745

if.then27:                                        ; preds = %if.then23
  %33 = load i32, i32* %boneflag.addr, align 4, !dbg !5746
  call void @set_ebone_glColor(i32 %33), !dbg !5748
  br label %if.end29, !dbg !5749

if.else28:                                        ; preds = %if.then23
  call void @UI_ThemeColor(i32 74), !dbg !5750
  br label %if.end29

if.end29:                                         ; preds = %if.else28, %if.then27
  br label %if.end30, !dbg !5751

if.end30:                                         ; preds = %if.end29, %if.else20
  br label %if.end31

if.end31:                                         ; preds = %if.end30, %if.end19
  %34 = load i32, i32* %id.addr, align 4, !dbg !5752
  %cmp32 = icmp ne i32 %34, -1, !dbg !5754
  br i1 %cmp32, label %if.then34, label %if.end36, !dbg !5755

if.then34:                                        ; preds = %if.end31
  %35 = load i32, i32* %id.addr, align 4, !dbg !5756
  %or = or i32 %35, 1073741824, !dbg !5758
  %call35 = call zeroext i8 @GPU_select_load_id(i32 %or), !dbg !5759
  br label %if.end36, !dbg !5760

if.end36:                                         ; preds = %if.then34, %if.end31
  %36 = load i16, i16* %dt.addr, align 2, !dbg !5761
  %conv37 = sext i16 %36 to i32, !dbg !5761
  %cmp38 = icmp sgt i32 %conv37, 2, !dbg !5763
  br i1 %cmp38, label %if.then40, label %if.else47, !dbg !5764

if.then40:                                        ; preds = %if.end36
  call void @glEnable(i32 2903), !dbg !5765
  call void @glEnable(i32 2896), !dbg !5767
  %37 = load i32, i32* %armflag.addr, align 4, !dbg !5768
  %and41 = and i32 %37, 16, !dbg !5770
  %tobool42 = icmp ne i32 %and41, 0, !dbg !5770
  br i1 %tobool42, label %if.then43, label %if.else45, !dbg !5771

if.then43:                                        ; preds = %if.then40
  %38 = load i32, i32* %boneflag.addr, align 4, !dbg !5772
  %39 = load i16, i16* %constflag.addr, align 2, !dbg !5773
  %call44 = call zeroext i8 @set_pchan_glColor(i16 signext 1, i32 %38, i16 signext %39), !dbg !5774
  br label %if.end46, !dbg !5774

if.else45:                                        ; preds = %if.then40
  call void @UI_ThemeColor(i32 74), !dbg !5775
  br label %if.end46

if.end46:                                         ; preds = %if.else45, %if.then43
  %40 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan.addr, align 8, !dbg !5776
  %41 = load float, float* %xwidth, align 4, !dbg !5777
  %42 = load float, float* %length, align 4, !dbg !5778
  %43 = load float, float* %zwidth, align 4, !dbg !5779
  call void @draw_b_bone_boxes(i16 signext 3, %struct.bPoseChannel* %40, float %41, float %42, float %43), !dbg !5780
  call void @glDisable(i32 2903), !dbg !5781
  call void @glDisable(i32 2896), !dbg !5782
  br label %if.end60, !dbg !5783

if.else47:                                        ; preds = %if.end36
  %44 = load i32, i32* %armflag.addr, align 4, !dbg !5784
  %and48 = and i32 %44, 16, !dbg !5787
  %tobool49 = icmp ne i32 %and48, 0, !dbg !5787
  br i1 %tobool49, label %if.then50, label %if.end59, !dbg !5788

if.then50:                                        ; preds = %if.else47
  %45 = load i16, i16* %constflag.addr, align 2, !dbg !5789
  %tobool51 = icmp ne i16 %45, 0, !dbg !5789
  br i1 %tobool51, label %if.then52, label %if.end58, !dbg !5792

if.then52:                                        ; preds = %if.then50
  %46 = load i32, i32* %boneflag.addr, align 4, !dbg !5793
  %47 = load i16, i16* %constflag.addr, align 2, !dbg !5796
  %call53 = call zeroext i8 @set_pchan_glColor(i16 signext 2, i32 %46, i16 signext %47), !dbg !5797
  %tobool54 = icmp ne i8 %call53, 0, !dbg !5797
  br i1 %tobool54, label %if.then55, label %if.end56, !dbg !5798

if.then55:                                        ; preds = %if.then52
  call void @glEnable(i32 3042), !dbg !5799
  %48 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan.addr, align 8, !dbg !5801
  %49 = load float, float* %xwidth, align 4, !dbg !5802
  %50 = load float, float* %length, align 4, !dbg !5803
  %51 = load float, float* %zwidth, align 4, !dbg !5804
  call void @draw_b_bone_boxes(i16 signext 3, %struct.bPoseChannel* %48, float %49, float %50, float %51), !dbg !5805
  call void @glDisable(i32 3042), !dbg !5806
  br label %if.end56, !dbg !5807

if.end56:                                         ; preds = %if.then55, %if.then52
  %52 = load i32, i32* %boneflag.addr, align 4, !dbg !5808
  %53 = load i16, i16* %constflag.addr, align 2, !dbg !5809
  %call57 = call zeroext i8 @set_pchan_glColor(i16 signext 0, i32 %52, i16 signext %53), !dbg !5810
  br label %if.end58, !dbg !5811

if.end58:                                         ; preds = %if.end56, %if.then50
  br label %if.end59, !dbg !5812

if.end59:                                         ; preds = %if.end58, %if.else47
  %54 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan.addr, align 8, !dbg !5813
  %55 = load float, float* %xwidth, align 4, !dbg !5814
  %56 = load float, float* %length, align 4, !dbg !5815
  %57 = load float, float* %zwidth, align 4, !dbg !5816
  call void @draw_b_bone_boxes(i16 signext 2, %struct.bPoseChannel* %54, float %55, float %56, float %57), !dbg !5817
  br label %if.end60

if.end60:                                         ; preds = %if.end59, %if.end46
  ret void, !dbg !5818
}

; Function Attrs: noinline nounwind uwtable
define internal void @draw_wire_bone(i16 signext %dt, i32 %armflag, i32 %boneflag, i16 signext %constflag, i32 %id, %struct.bPoseChannel* %pchan, %struct.EditBone* %ebone) #0 !dbg !5819 {
entry:
  %dt.addr = alloca i16, align 2
  %armflag.addr = alloca i32, align 4
  %boneflag.addr = alloca i32, align 4
  %constflag.addr = alloca i16, align 2
  %id.addr = alloca i32, align 4
  %pchan.addr = alloca %struct.bPoseChannel*, align 8
  %ebone.addr = alloca %struct.EditBone*, align 8
  %bbones_array = alloca [32 x %struct.Mat4], align 16
  %bbones = alloca %struct.Mat4*, align 8
  %segments = alloca i32, align 4
  %length = alloca float, align 4
  store i16 %dt, i16* %dt.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %dt.addr, metadata !5820, metadata !DIExpression()), !dbg !5821
  store i32 %armflag, i32* %armflag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %armflag.addr, metadata !5822, metadata !DIExpression()), !dbg !5823
  store i32 %boneflag, i32* %boneflag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %boneflag.addr, metadata !5824, metadata !DIExpression()), !dbg !5825
  store i16 %constflag, i16* %constflag.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %constflag.addr, metadata !5826, metadata !DIExpression()), !dbg !5827
  store i32 %id, i32* %id.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %id.addr, metadata !5828, metadata !DIExpression()), !dbg !5829
  store %struct.bPoseChannel* %pchan, %struct.bPoseChannel** %pchan.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bPoseChannel** %pchan.addr, metadata !5830, metadata !DIExpression()), !dbg !5831
  store %struct.EditBone* %ebone, %struct.EditBone** %ebone.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.EditBone** %ebone.addr, metadata !5832, metadata !DIExpression()), !dbg !5833
  call void @llvm.dbg.declare(metadata [32 x %struct.Mat4]* %bbones_array, metadata !5834, metadata !DIExpression()), !dbg !5841
  call void @llvm.dbg.declare(metadata %struct.Mat4** %bbones, metadata !5842, metadata !DIExpression()), !dbg !5844
  store %struct.Mat4* null, %struct.Mat4** %bbones, align 8, !dbg !5844
  call void @llvm.dbg.declare(metadata i32* %segments, metadata !5845, metadata !DIExpression()), !dbg !5846
  store i32 0, i32* %segments, align 4, !dbg !5846
  call void @llvm.dbg.declare(metadata float* %length, metadata !5847, metadata !DIExpression()), !dbg !5848
  %0 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan.addr, align 8, !dbg !5849
  %tobool = icmp ne %struct.bPoseChannel* %0, null, !dbg !5849
  br i1 %tobool, label %if.then, label %if.else, !dbg !5851

if.then:                                          ; preds = %entry
  %1 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan.addr, align 8, !dbg !5852
  %bone = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %1, i32 0, i32 12, !dbg !5854
  %2 = load %struct.Bone*, %struct.Bone** %bone, align 8, !dbg !5854
  %segments1 = getelementptr inbounds %struct.Bone, %struct.Bone* %2, i32 0, i32 26, !dbg !5855
  %3 = load i16, i16* %segments1, align 4, !dbg !5855
  %conv = sext i16 %3 to i32, !dbg !5852
  store i32 %conv, i32* %segments, align 4, !dbg !5856
  %4 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan.addr, align 8, !dbg !5857
  %bone2 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %4, i32 0, i32 12, !dbg !5858
  %5 = load %struct.Bone*, %struct.Bone** %bone2, align 8, !dbg !5858
  %length3 = getelementptr inbounds %struct.Bone, %struct.Bone* %5, i32 0, i32 18, !dbg !5859
  %6 = load float, float* %length3, align 4, !dbg !5859
  store float %6, float* %length, align 4, !dbg !5860
  %7 = load i32, i32* %segments, align 4, !dbg !5861
  %cmp = icmp sgt i32 %7, 1, !dbg !5863
  br i1 %cmp, label %if.then5, label %if.end, !dbg !5864

if.then5:                                         ; preds = %if.then
  %8 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan.addr, align 8, !dbg !5865
  %arraydecay = getelementptr inbounds [32 x %struct.Mat4], [32 x %struct.Mat4]* %bbones_array, i64 0, i64 0, !dbg !5867
  call void @b_bone_spline_setup(%struct.bPoseChannel* %8, i32 0, %struct.Mat4* %arraydecay), !dbg !5868
  %arraydecay6 = getelementptr inbounds [32 x %struct.Mat4], [32 x %struct.Mat4]* %bbones_array, i64 0, i64 0, !dbg !5869
  store %struct.Mat4* %arraydecay6, %struct.Mat4** %bbones, align 8, !dbg !5870
  br label %if.end, !dbg !5871

if.end:                                           ; preds = %if.then5, %if.then
  br label %if.end8, !dbg !5872

if.else:                                          ; preds = %entry
  %9 = load %struct.EditBone*, %struct.EditBone** %ebone.addr, align 8, !dbg !5873
  %length7 = getelementptr inbounds %struct.EditBone, %struct.EditBone* %9, i32 0, i32 14, !dbg !5874
  %10 = load float, float* %length7, align 8, !dbg !5874
  store float %10, float* %length, align 4, !dbg !5875
  br label %if.end8

if.end8:                                          ; preds = %if.else, %if.end
  %11 = load i32, i32* %armflag.addr, align 4, !dbg !5876
  %and = and i32 %11, 32, !dbg !5878
  %tobool9 = icmp ne i32 %and, 0, !dbg !5878
  br i1 %tobool9, label %if.then10, label %if.end11, !dbg !5879

if.then10:                                        ; preds = %if.end8
  call void @glPushMatrix(), !dbg !5880
  %12 = load float, float* %length, align 4, !dbg !5882
  %13 = load float, float* %length, align 4, !dbg !5883
  %14 = load float, float* %length, align 4, !dbg !5884
  call void @glScalef(float %12, float %13, float %14), !dbg !5885
  %15 = load i16, i16* %dt.addr, align 2, !dbg !5886
  %16 = load i32, i32* %armflag.addr, align 4, !dbg !5887
  %17 = load i32, i32* %boneflag.addr, align 4, !dbg !5888
  %18 = load i32, i32* %id.addr, align 4, !dbg !5889
  call void @draw_bone_points(i16 signext %15, i32 %16, i32 %17, i32 %18), !dbg !5890
  call void @glPopMatrix(), !dbg !5891
  %19 = load float, float* %length, align 4, !dbg !5892
  %mul = fmul float %19, 0x3FEE666660000000, !dbg !5892
  store float %mul, float* %length, align 4, !dbg !5892
  br label %if.end11, !dbg !5893

if.end11:                                         ; preds = %if.then10, %if.end8
  %20 = load i32, i32* %armflag.addr, align 4, !dbg !5894
  %and12 = and i32 %20, 48, !dbg !5896
  %tobool13 = icmp ne i32 %and12, 0, !dbg !5896
  br i1 %tobool13, label %if.then14, label %if.end25, !dbg !5897

if.then14:                                        ; preds = %if.end11
  %21 = load i32, i32* %id.addr, align 4, !dbg !5898
  %cmp15 = icmp ne i32 %21, -1, !dbg !5901
  br i1 %cmp15, label %if.then17, label %if.end18, !dbg !5902

if.then17:                                        ; preds = %if.then14
  %22 = load i32, i32* %id.addr, align 4, !dbg !5903
  %or = or i32 %22, 1073741824, !dbg !5904
  %call = call zeroext i8 @GPU_select_load_id(i32 %or), !dbg !5905
  br label %if.end18, !dbg !5905

if.end18:                                         ; preds = %if.then17, %if.then14
  %23 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan.addr, align 8, !dbg !5906
  %24 = load %struct.Mat4*, %struct.Mat4** %bbones, align 8, !dbg !5907
  %25 = load float, float* %length, align 4, !dbg !5908
  %26 = load i32, i32* %segments, align 4, !dbg !5909
  call void @draw_wire_bone_segments(%struct.bPoseChannel* %23, %struct.Mat4* %24, float %25, i32 %26), !dbg !5910
  %27 = load i32, i32* %id.addr, align 4, !dbg !5911
  %cmp19 = icmp ne i32 %27, -1, !dbg !5913
  br i1 %cmp19, label %if.then21, label %if.end24, !dbg !5914

if.then21:                                        ; preds = %if.end18
  %28 = load i32, i32* %id.addr, align 4, !dbg !5915
  %and22 = and i32 %28, 65535, !dbg !5916
  %call23 = call zeroext i8 @GPU_select_load_id(i32 %and22), !dbg !5917
  br label %if.end24, !dbg !5917

if.end24:                                         ; preds = %if.then21, %if.end18
  br label %if.end25, !dbg !5918

if.end25:                                         ; preds = %if.end24, %if.end11
  %29 = load i32, i32* %armflag.addr, align 4, !dbg !5919
  %and26 = and i32 %29, 16, !dbg !5921
  %tobool27 = icmp ne i32 %and26, 0, !dbg !5921
  br i1 %tobool27, label %if.then28, label %if.else30, !dbg !5922

if.then28:                                        ; preds = %if.end25
  %30 = load i32, i32* %boneflag.addr, align 4, !dbg !5923
  %31 = load i16, i16* %constflag.addr, align 2, !dbg !5925
  %call29 = call zeroext i8 @set_pchan_glColor(i16 signext 0, i32 %30, i16 signext %31), !dbg !5926
  br label %if.end35, !dbg !5927

if.else30:                                        ; preds = %if.end25
  %32 = load i32, i32* %armflag.addr, align 4, !dbg !5928
  %and31 = and i32 %32, 32, !dbg !5930
  %tobool32 = icmp ne i32 %and31, 0, !dbg !5930
  br i1 %tobool32, label %if.then33, label %if.end34, !dbg !5931

if.then33:                                        ; preds = %if.else30
  %33 = load i32, i32* %boneflag.addr, align 4, !dbg !5932
  call void @set_ebone_glColor(i32 %33), !dbg !5934
  br label %if.end34, !dbg !5935

if.end34:                                         ; preds = %if.then33, %if.else30
  br label %if.end35

if.end35:                                         ; preds = %if.end34, %if.then28
  %34 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan.addr, align 8, !dbg !5936
  %35 = load %struct.Mat4*, %struct.Mat4** %bbones, align 8, !dbg !5937
  %36 = load float, float* %length, align 4, !dbg !5938
  %37 = load i32, i32* %segments, align 4, !dbg !5939
  call void @draw_wire_bone_segments(%struct.bPoseChannel* %34, %struct.Mat4* %35, float %36, i32 %37), !dbg !5940
  ret void, !dbg !5941
}

; Function Attrs: noinline nounwind uwtable
define internal void @draw_bone(i16 signext %dt, i32 %armflag, i32 %boneflag, i16 signext %constflag, i32 %id, float %length) #0 !dbg !5942 {
entry:
  %dt.addr = alloca i16, align 2
  %armflag.addr = alloca i32, align 4
  %boneflag.addr = alloca i32, align 4
  %constflag.addr = alloca i16, align 2
  %id.addr = alloca i32, align 4
  %length.addr = alloca float, align 4
  store i16 %dt, i16* %dt.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %dt.addr, metadata !5945, metadata !DIExpression()), !dbg !5946
  store i32 %armflag, i32* %armflag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %armflag.addr, metadata !5947, metadata !DIExpression()), !dbg !5948
  store i32 %boneflag, i32* %boneflag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %boneflag.addr, metadata !5949, metadata !DIExpression()), !dbg !5950
  store i16 %constflag, i16* %constflag.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %constflag.addr, metadata !5951, metadata !DIExpression()), !dbg !5952
  store i32 %id, i32* %id.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %id.addr, metadata !5953, metadata !DIExpression()), !dbg !5954
  store float %length, float* %length.addr, align 4
  call void @llvm.dbg.declare(metadata float* %length.addr, metadata !5955, metadata !DIExpression()), !dbg !5956
  %0 = load float, float* %length.addr, align 4, !dbg !5957
  %1 = load float, float* %length.addr, align 4, !dbg !5958
  %2 = load float, float* %length.addr, align 4, !dbg !5959
  call void @glScalef(float %0, float %1, float %2), !dbg !5960
  %3 = load i16, i16* %dt.addr, align 2, !dbg !5961
  %conv = sext i16 %3 to i32, !dbg !5961
  %cmp = icmp sgt i32 %conv, 2, !dbg !5963
  br i1 %cmp, label %if.then, label %if.end, !dbg !5964

if.then:                                          ; preds = %entry
  call void @glEnable(i32 2903), !dbg !5965
  call void @glEnable(i32 2896), !dbg !5967
  call void @UI_ThemeColor(i32 74), !dbg !5968
  br label %if.end, !dbg !5969

if.end:                                           ; preds = %if.then, %entry
  %4 = load i32, i32* %armflag.addr, align 4, !dbg !5970
  %and = and i32 %4, 16, !dbg !5972
  %tobool = icmp ne i32 %and, 0, !dbg !5972
  br i1 %tobool, label %if.then2, label %if.end9, !dbg !5973

if.then2:                                         ; preds = %if.end
  %5 = load i16, i16* %dt.addr, align 2, !dbg !5974
  %conv3 = sext i16 %5 to i32, !dbg !5974
  %cmp4 = icmp sle i32 %conv3, 2, !dbg !5977
  br i1 %cmp4, label %if.then6, label %if.else, !dbg !5978

if.then6:                                         ; preds = %if.then2
  %6 = load i32, i32* %boneflag.addr, align 4, !dbg !5979
  %7 = load i16, i16* %constflag.addr, align 2, !dbg !5980
  %call = call zeroext i8 @set_pchan_glColor(i16 signext 0, i32 %6, i16 signext %7), !dbg !5981
  br label %if.end8, !dbg !5981

if.else:                                          ; preds = %if.then2
  %8 = load i32, i32* %boneflag.addr, align 4, !dbg !5982
  %9 = load i16, i16* %constflag.addr, align 2, !dbg !5983
  %call7 = call zeroext i8 @set_pchan_glColor(i16 signext 1, i32 %8, i16 signext %9), !dbg !5984
  br label %if.end8

if.end8:                                          ; preds = %if.else, %if.then6
  br label %if.end9, !dbg !5985

if.end9:                                          ; preds = %if.end8, %if.end
  %10 = load i16, i16* %dt.addr, align 2, !dbg !5986
  %11 = load i32, i32* %armflag.addr, align 4, !dbg !5987
  %12 = load i32, i32* %boneflag.addr, align 4, !dbg !5988
  %13 = load i32, i32* %id.addr, align 4, !dbg !5989
  call void @draw_bone_points(i16 signext %10, i32 %11, i32 %12, i32 %13), !dbg !5990
  %14 = load i32, i32* %id.addr, align 4, !dbg !5991
  %cmp10 = icmp ne i32 %14, -1, !dbg !5993
  br i1 %cmp10, label %if.then12, label %if.end14, !dbg !5994

if.then12:                                        ; preds = %if.end9
  %15 = load i32, i32* %id.addr, align 4, !dbg !5995
  %or = or i32 %15, 1073741824, !dbg !5997
  %call13 = call zeroext i8 @GPU_select_load_id(i32 %or), !dbg !5998
  br label %if.end14, !dbg !5999

if.end14:                                         ; preds = %if.then12, %if.end9
  %16 = load i16, i16* %dt.addr, align 2, !dbg !6000
  %conv15 = sext i16 %16 to i32, !dbg !6000
  %cmp16 = icmp sle i32 %conv15, 2, !dbg !6002
  br i1 %cmp16, label %if.then18, label %if.else36, !dbg !6003

if.then18:                                        ; preds = %if.end14
  %17 = load i32, i32* %armflag.addr, align 4, !dbg !6004
  %and19 = and i32 %17, 32, !dbg !6007
  %tobool20 = icmp ne i32 %and19, 0, !dbg !6007
  br i1 %tobool20, label %if.then21, label %if.else22, !dbg !6008

if.then21:                                        ; preds = %if.then18
  %18 = load i32, i32* %boneflag.addr, align 4, !dbg !6009
  call void @set_ebone_glColor(i32 %18), !dbg !6011
  br label %if.end35, !dbg !6012

if.else22:                                        ; preds = %if.then18
  %19 = load i32, i32* %armflag.addr, align 4, !dbg !6013
  %and23 = and i32 %19, 16, !dbg !6015
  %tobool24 = icmp ne i32 %and23, 0, !dbg !6015
  br i1 %tobool24, label %if.then25, label %if.end34, !dbg !6016

if.then25:                                        ; preds = %if.else22
  %20 = load i16, i16* %constflag.addr, align 2, !dbg !6017
  %tobool26 = icmp ne i16 %20, 0, !dbg !6017
  br i1 %tobool26, label %if.then27, label %if.end33, !dbg !6020

if.then27:                                        ; preds = %if.then25
  %21 = load i32, i32* %boneflag.addr, align 4, !dbg !6021
  %22 = load i16, i16* %constflag.addr, align 2, !dbg !6024
  %call28 = call zeroext i8 @set_pchan_glColor(i16 signext 2, i32 %21, i16 signext %22), !dbg !6025
  %tobool29 = icmp ne i8 %call28, 0, !dbg !6025
  br i1 %tobool29, label %if.then30, label %if.end31, !dbg !6026

if.then30:                                        ; preds = %if.then27
  call void @glEnable(i32 3042), !dbg !6027
  call void @draw_bone_solid_octahedral(), !dbg !6029
  call void @glDisable(i32 3042), !dbg !6030
  br label %if.end31, !dbg !6031

if.end31:                                         ; preds = %if.then30, %if.then27
  %23 = load i32, i32* %boneflag.addr, align 4, !dbg !6032
  %24 = load i16, i16* %constflag.addr, align 2, !dbg !6033
  %call32 = call zeroext i8 @set_pchan_glColor(i16 signext 0, i32 %23, i16 signext %24), !dbg !6034
  br label %if.end33, !dbg !6035

if.end33:                                         ; preds = %if.end31, %if.then25
  br label %if.end34, !dbg !6036

if.end34:                                         ; preds = %if.end33, %if.else22
  br label %if.end35

if.end35:                                         ; preds = %if.end34, %if.then21
  call void @draw_bone_octahedral(), !dbg !6037
  br label %if.end43, !dbg !6038

if.else36:                                        ; preds = %if.end14
  %25 = load i32, i32* %armflag.addr, align 4, !dbg !6039
  %and37 = and i32 %25, 16, !dbg !6042
  %tobool38 = icmp ne i32 %and37, 0, !dbg !6042
  br i1 %tobool38, label %if.then39, label %if.else41, !dbg !6043

if.then39:                                        ; preds = %if.else36
  %26 = load i32, i32* %boneflag.addr, align 4, !dbg !6044
  %27 = load i16, i16* %constflag.addr, align 2, !dbg !6045
  %call40 = call zeroext i8 @set_pchan_glColor(i16 signext 1, i32 %26, i16 signext %27), !dbg !6046
  br label %if.end42, !dbg !6046

if.else41:                                        ; preds = %if.else36
  call void @UI_ThemeColor(i32 74), !dbg !6047
  br label %if.end42

if.end42:                                         ; preds = %if.else41, %if.then39
  call void @draw_bone_solid_octahedral(), !dbg !6048
  br label %if.end43

if.end43:                                         ; preds = %if.end42, %if.end35
  %28 = load i16, i16* %dt.addr, align 2, !dbg !6049
  %conv44 = sext i16 %28 to i32, !dbg !6049
  %cmp45 = icmp sgt i32 %conv44, 2, !dbg !6051
  br i1 %cmp45, label %if.then47, label %if.end48, !dbg !6052

if.then47:                                        ; preds = %if.end43
  call void @glDisable(i32 2903), !dbg !6053
  call void @glDisable(i32 2896), !dbg !6055
  br label %if.end48, !dbg !6056

if.end48:                                         ; preds = %if.then47, %if.end43
  ret void, !dbg !6057
}

declare dso_local void @glPopMatrix() #3

declare dso_local zeroext i8 @GPU_select_load_id(i32) #3

declare dso_local void @ED_view3d_polygon_offset(%struct.RegionView3D*, float) #3

; Function Attrs: noinline nounwind uwtable
define internal void @draw_sphere_bone_wire([4 x float]* %smat, [4 x float]* %imat, i32 %armflag, i32 %boneflag, i16 signext %constflag, i32 %id, %struct.bPoseChannel* %pchan, %struct.EditBone* %ebone) #0 !dbg !6058 {
entry:
  %smat.addr = alloca [4 x float]*, align 8
  %imat.addr = alloca [4 x float]*, align 8
  %armflag.addr = alloca i32, align 4
  %boneflag.addr = alloca i32, align 4
  %constflag.addr = alloca i16, align 2
  %id.addr = alloca i32, align 4
  %pchan.addr = alloca %struct.bPoseChannel*, align 8
  %ebone.addr = alloca %struct.EditBone*, align 8
  %head = alloca float, align 4
  %tail = alloca float, align 4
  %headvec = alloca float*, align 8
  %tailvec = alloca float*, align 8
  %dirvec = alloca [3 x float], align 4
  %norvech = alloca [3 x float], align 4
  %norvect = alloca [3 x float], align 4
  %vec = alloca [3 x float], align 4
  store [4 x float]* %smat, [4 x float]** %smat.addr, align 8
  call void @llvm.dbg.declare(metadata [4 x float]** %smat.addr, metadata !6061, metadata !DIExpression()), !dbg !6062
  store [4 x float]* %imat, [4 x float]** %imat.addr, align 8
  call void @llvm.dbg.declare(metadata [4 x float]** %imat.addr, metadata !6063, metadata !DIExpression()), !dbg !6064
  store i32 %armflag, i32* %armflag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %armflag.addr, metadata !6065, metadata !DIExpression()), !dbg !6066
  store i32 %boneflag, i32* %boneflag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %boneflag.addr, metadata !6067, metadata !DIExpression()), !dbg !6068
  store i16 %constflag, i16* %constflag.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %constflag.addr, metadata !6069, metadata !DIExpression()), !dbg !6070
  store i32 %id, i32* %id.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %id.addr, metadata !6071, metadata !DIExpression()), !dbg !6072
  store %struct.bPoseChannel* %pchan, %struct.bPoseChannel** %pchan.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bPoseChannel** %pchan.addr, metadata !6073, metadata !DIExpression()), !dbg !6074
  store %struct.EditBone* %ebone, %struct.EditBone** %ebone.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.EditBone** %ebone.addr, metadata !6075, metadata !DIExpression()), !dbg !6076
  call void @llvm.dbg.declare(metadata float* %head, metadata !6077, metadata !DIExpression()), !dbg !6078
  call void @llvm.dbg.declare(metadata float* %tail, metadata !6079, metadata !DIExpression()), !dbg !6080
  call void @llvm.dbg.declare(metadata float** %headvec, metadata !6081, metadata !DIExpression()), !dbg !6082
  call void @llvm.dbg.declare(metadata float** %tailvec, metadata !6083, metadata !DIExpression()), !dbg !6084
  call void @llvm.dbg.declare(metadata [3 x float]* %dirvec, metadata !6085, metadata !DIExpression()), !dbg !6086
  %0 = load %struct.EditBone*, %struct.EditBone** %ebone.addr, align 8, !dbg !6087
  %tobool = icmp ne %struct.EditBone* %0, null, !dbg !6087
  br i1 %tobool, label %if.then, label %if.else13, !dbg !6089

if.then:                                          ; preds = %entry
  %1 = load %struct.EditBone*, %struct.EditBone** %ebone.addr, align 8, !dbg !6090
  %head1 = getelementptr inbounds %struct.EditBone, %struct.EditBone* %1, i32 0, i32 7, !dbg !6092
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %head1, i64 0, i64 0, !dbg !6090
  %2 = load %struct.EditBone*, %struct.EditBone** %ebone.addr, align 8, !dbg !6093
  %tail2 = getelementptr inbounds %struct.EditBone, %struct.EditBone* %2, i32 0, i32 8, !dbg !6094
  %arraydecay3 = getelementptr inbounds [3 x float], [3 x float]* %tail2, i64 0, i64 0, !dbg !6093
  %call = call float @len_v3v3(float* %arraydecay, float* %arraydecay3), !dbg !6095
  %3 = load %struct.EditBone*, %struct.EditBone** %ebone.addr, align 8, !dbg !6096
  %length = getelementptr inbounds %struct.EditBone, %struct.EditBone* %3, i32 0, i32 14, !dbg !6097
  store float %call, float* %length, align 8, !dbg !6098
  %4 = load %struct.EditBone*, %struct.EditBone** %ebone.addr, align 8, !dbg !6099
  %rad_tail = getelementptr inbounds %struct.EditBone, %struct.EditBone* %4, i32 0, i32 19, !dbg !6100
  %5 = load float, float* %rad_tail, align 4, !dbg !6100
  store float %5, float* %tail, align 4, !dbg !6101
  %6 = load %struct.EditBone*, %struct.EditBone** %ebone.addr, align 8, !dbg !6102
  %parent = getelementptr inbounds %struct.EditBone, %struct.EditBone* %6, i32 0, i32 3, !dbg !6104
  %7 = load %struct.EditBone*, %struct.EditBone** %parent, align 8, !dbg !6104
  %tobool4 = icmp ne %struct.EditBone* %7, null, !dbg !6102
  br i1 %tobool4, label %land.lhs.true, label %if.else, !dbg !6105

land.lhs.true:                                    ; preds = %if.then
  %8 = load i32, i32* %boneflag.addr, align 4, !dbg !6106
  %and = and i32 %8, 16, !dbg !6107
  %tobool5 = icmp ne i32 %and, 0, !dbg !6107
  br i1 %tobool5, label %if.then6, label %if.else, !dbg !6108

if.then6:                                         ; preds = %land.lhs.true
  %9 = load %struct.EditBone*, %struct.EditBone** %ebone.addr, align 8, !dbg !6109
  %parent7 = getelementptr inbounds %struct.EditBone, %struct.EditBone* %9, i32 0, i32 3, !dbg !6110
  %10 = load %struct.EditBone*, %struct.EditBone** %parent7, align 8, !dbg !6110
  %rad_tail8 = getelementptr inbounds %struct.EditBone, %struct.EditBone* %10, i32 0, i32 19, !dbg !6111
  %11 = load float, float* %rad_tail8, align 4, !dbg !6111
  store float %11, float* %head, align 4, !dbg !6112
  br label %if.end, !dbg !6113

if.else:                                          ; preds = %land.lhs.true, %if.then
  %12 = load %struct.EditBone*, %struct.EditBone** %ebone.addr, align 8, !dbg !6114
  %rad_head = getelementptr inbounds %struct.EditBone, %struct.EditBone* %12, i32 0, i32 18, !dbg !6115
  %13 = load float, float* %rad_head, align 8, !dbg !6115
  store float %13, float* %head, align 4, !dbg !6116
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then6
  %14 = load %struct.EditBone*, %struct.EditBone** %ebone.addr, align 8, !dbg !6117
  %head9 = getelementptr inbounds %struct.EditBone, %struct.EditBone* %14, i32 0, i32 7, !dbg !6118
  %arraydecay10 = getelementptr inbounds [3 x float], [3 x float]* %head9, i64 0, i64 0, !dbg !6117
  store float* %arraydecay10, float** %headvec, align 8, !dbg !6119
  %15 = load %struct.EditBone*, %struct.EditBone** %ebone.addr, align 8, !dbg !6120
  %tail11 = getelementptr inbounds %struct.EditBone, %struct.EditBone* %15, i32 0, i32 8, !dbg !6121
  %arraydecay12 = getelementptr inbounds [3 x float], [3 x float]* %tail11, i64 0, i64 0, !dbg !6120
  store float* %arraydecay12, float** %tailvec, align 8, !dbg !6122
  br label %if.end30, !dbg !6123

if.else13:                                        ; preds = %entry
  %16 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan.addr, align 8, !dbg !6124
  %bone = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %16, i32 0, i32 12, !dbg !6126
  %17 = load %struct.Bone*, %struct.Bone** %bone, align 8, !dbg !6126
  %rad_tail14 = getelementptr inbounds %struct.Bone, %struct.Bone* %17, i32 0, i32 23, !dbg !6127
  %18 = load float, float* %rad_tail14, align 8, !dbg !6127
  store float %18, float* %tail, align 4, !dbg !6128
  %19 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan.addr, align 8, !dbg !6129
  %parent15 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %19, i32 0, i32 13, !dbg !6131
  %20 = load %struct.bPoseChannel*, %struct.bPoseChannel** %parent15, align 8, !dbg !6131
  %tobool16 = icmp ne %struct.bPoseChannel* %20, null, !dbg !6132
  br i1 %tobool16, label %land.lhs.true17, label %if.else24, !dbg !6133

land.lhs.true17:                                  ; preds = %if.else13
  %21 = load i32, i32* %boneflag.addr, align 4, !dbg !6134
  %and18 = and i32 %21, 16, !dbg !6135
  %tobool19 = icmp ne i32 %and18, 0, !dbg !6135
  br i1 %tobool19, label %if.then20, label %if.else24, !dbg !6136

if.then20:                                        ; preds = %land.lhs.true17
  %22 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan.addr, align 8, !dbg !6137
  %parent21 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %22, i32 0, i32 13, !dbg !6138
  %23 = load %struct.bPoseChannel*, %struct.bPoseChannel** %parent21, align 8, !dbg !6138
  %bone22 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %23, i32 0, i32 12, !dbg !6139
  %24 = load %struct.Bone*, %struct.Bone** %bone22, align 8, !dbg !6139
  %rad_tail23 = getelementptr inbounds %struct.Bone, %struct.Bone* %24, i32 0, i32 23, !dbg !6140
  %25 = load float, float* %rad_tail23, align 8, !dbg !6140
  store float %25, float* %head, align 4, !dbg !6141
  br label %if.end27, !dbg !6142

if.else24:                                        ; preds = %land.lhs.true17, %if.else13
  %26 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan.addr, align 8, !dbg !6143
  %bone25 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %26, i32 0, i32 12, !dbg !6144
  %27 = load %struct.Bone*, %struct.Bone** %bone25, align 8, !dbg !6144
  %rad_head26 = getelementptr inbounds %struct.Bone, %struct.Bone* %27, i32 0, i32 22, !dbg !6145
  %28 = load float, float* %rad_head26, align 4, !dbg !6145
  store float %28, float* %head, align 4, !dbg !6146
  br label %if.end27

if.end27:                                         ; preds = %if.else24, %if.then20
  %29 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan.addr, align 8, !dbg !6147
  %pose_head = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %29, i32 0, i32 31, !dbg !6148
  %arraydecay28 = getelementptr inbounds [3 x float], [3 x float]* %pose_head, i64 0, i64 0, !dbg !6147
  store float* %arraydecay28, float** %headvec, align 8, !dbg !6149
  %30 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan.addr, align 8, !dbg !6150
  %pose_tail = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %30, i32 0, i32 32, !dbg !6151
  %arraydecay29 = getelementptr inbounds [3 x float], [3 x float]* %pose_tail, i64 0, i64 0, !dbg !6150
  store float* %arraydecay29, float** %tailvec, align 8, !dbg !6152
  br label %if.end30

if.end30:                                         ; preds = %if.end27, %if.end
  %31 = load i32, i32* %armflag.addr, align 4, !dbg !6153
  %and31 = and i32 %31, 32, !dbg !6155
  %tobool32 = icmp ne i32 %and31, 0, !dbg !6155
  br i1 %tobool32, label %if.then33, label %if.else39, !dbg !6156

if.then33:                                        ; preds = %if.end30
  %32 = load i32, i32* %boneflag.addr, align 4, !dbg !6157
  %and34 = and i32 %32, 2, !dbg !6160
  %tobool35 = icmp ne i32 %and34, 0, !dbg !6160
  br i1 %tobool35, label %if.then36, label %if.else37, !dbg !6161

if.then36:                                        ; preds = %if.then33
  call void @UI_ThemeColor(i32 34), !dbg !6162
  br label %if.end38, !dbg !6162

if.else37:                                        ; preds = %if.then33
  call void @UI_ThemeColor(i32 33), !dbg !6163
  br label %if.end38

if.end38:                                         ; preds = %if.else37, %if.then36
  br label %if.end45, !dbg !6164

if.else39:                                        ; preds = %if.end30
  %33 = load i32, i32* %armflag.addr, align 4, !dbg !6165
  %and40 = and i32 %33, 16, !dbg !6167
  %tobool41 = icmp ne i32 %and40, 0, !dbg !6167
  br i1 %tobool41, label %if.then42, label %if.end44, !dbg !6168

if.then42:                                        ; preds = %if.else39
  %34 = load i32, i32* %boneflag.addr, align 4, !dbg !6169
  %35 = load i16, i16* %constflag.addr, align 2, !dbg !6170
  %call43 = call zeroext i8 @set_pchan_glColor(i16 signext 0, i32 %34, i16 signext %35), !dbg !6171
  br label %if.end44, !dbg !6171

if.end44:                                         ; preds = %if.then42, %if.else39
  br label %if.end45

if.end45:                                         ; preds = %if.end44, %if.end38
  %36 = load i32, i32* %boneflag.addr, align 4, !dbg !6172
  %and46 = and i32 %36, 16, !dbg !6174
  %cmp = icmp eq i32 %and46, 0, !dbg !6175
  br i1 %cmp, label %if.then47, label %if.end52, !dbg !6176

if.then47:                                        ; preds = %if.end45
  %37 = load i32, i32* %id.addr, align 4, !dbg !6177
  %cmp48 = icmp ne i32 %37, -1, !dbg !6180
  br i1 %cmp48, label %if.then49, label %if.end51, !dbg !6181

if.then49:                                        ; preds = %if.then47
  %38 = load i32, i32* %id.addr, align 4, !dbg !6182
  %or = or i32 %38, 268435456, !dbg !6183
  %call50 = call zeroext i8 @GPU_select_load_id(i32 %or), !dbg !6184
  br label %if.end51, !dbg !6184

if.end51:                                         ; preds = %if.then49, %if.then47
  %39 = load float*, float** %headvec, align 8, !dbg !6185
  %40 = load float, float* %head, align 4, !dbg !6186
  %41 = load [4 x float]*, [4 x float]** %imat.addr, align 8, !dbg !6187
  call void @drawcircball(i32 2, float* %39, float %40, [4 x float]* %41), !dbg !6188
  br label %if.end52, !dbg !6189

if.end52:                                         ; preds = %if.end51, %if.end45
  %42 = load i32, i32* %armflag.addr, align 4, !dbg !6190
  %and53 = and i32 %42, 32, !dbg !6192
  %tobool54 = icmp ne i32 %and53, 0, !dbg !6192
  br i1 %tobool54, label %if.then55, label %if.end61, !dbg !6193

if.then55:                                        ; preds = %if.end52
  %43 = load i32, i32* %boneflag.addr, align 4, !dbg !6194
  %and56 = and i32 %43, 4, !dbg !6197
  %tobool57 = icmp ne i32 %and56, 0, !dbg !6197
  br i1 %tobool57, label %if.then58, label %if.else59, !dbg !6198

if.then58:                                        ; preds = %if.then55
  call void @UI_ThemeColor(i32 34), !dbg !6199
  br label %if.end60, !dbg !6199

if.else59:                                        ; preds = %if.then55
  call void @UI_ThemeColor(i32 33), !dbg !6200
  br label %if.end60

if.end60:                                         ; preds = %if.else59, %if.then58
  br label %if.end61, !dbg !6201

if.end61:                                         ; preds = %if.end60, %if.end52
  %44 = load i32, i32* %id.addr, align 4, !dbg !6202
  %cmp62 = icmp ne i32 %44, -1, !dbg !6204
  br i1 %cmp62, label %if.then63, label %if.end66, !dbg !6205

if.then63:                                        ; preds = %if.end61
  %45 = load i32, i32* %id.addr, align 4, !dbg !6206
  %or64 = or i32 %45, 536870912, !dbg !6207
  %call65 = call zeroext i8 @GPU_select_load_id(i32 %or64), !dbg !6208
  br label %if.end66, !dbg !6208

if.end66:                                         ; preds = %if.then63, %if.end61
  %46 = load float*, float** %tailvec, align 8, !dbg !6209
  %47 = load float, float* %tail, align 4, !dbg !6210
  %48 = load [4 x float]*, [4 x float]** %imat.addr, align 8, !dbg !6211
  call void @drawcircball(i32 2, float* %46, float %47, [4 x float]* %48), !dbg !6212
  %49 = load i32, i32* %armflag.addr, align 4, !dbg !6213
  %and67 = and i32 %49, 32, !dbg !6215
  %tobool68 = icmp ne i32 %and67, 0, !dbg !6215
  br i1 %tobool68, label %if.then69, label %if.end75, !dbg !6216

if.then69:                                        ; preds = %if.end66
  %50 = load i32, i32* %boneflag.addr, align 4, !dbg !6217
  %and70 = and i32 %50, 1, !dbg !6220
  %tobool71 = icmp ne i32 %and70, 0, !dbg !6220
  br i1 %tobool71, label %if.then72, label %if.else73, !dbg !6221

if.then72:                                        ; preds = %if.then69
  call void @UI_ThemeColor(i32 28), !dbg !6222
  br label %if.end74, !dbg !6222

if.else73:                                        ; preds = %if.then69
  call void @UI_ThemeColor(i32 27), !dbg !6223
  br label %if.end74

if.end74:                                         ; preds = %if.else73, %if.then72
  br label %if.end75, !dbg !6224

if.end75:                                         ; preds = %if.end74, %if.end66
  %arraydecay76 = getelementptr inbounds [3 x float], [3 x float]* %dirvec, i64 0, i64 0, !dbg !6225
  %51 = load float*, float** %tailvec, align 8, !dbg !6226
  %52 = load float*, float** %headvec, align 8, !dbg !6227
  call void @sub_v3_v3v3(float* %arraydecay76, float* %51, float* %52), !dbg !6228
  %53 = load [4 x float]*, [4 x float]** %smat.addr, align 8, !dbg !6229
  %arraydecay77 = getelementptr inbounds [3 x float], [3 x float]* %dirvec, i64 0, i64 0, !dbg !6230
  call void @mul_mat3_m4_v3([4 x float]* %53, float* %arraydecay77), !dbg !6231
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %dirvec, i64 0, i64 2, !dbg !6232
  store float 0.000000e+00, float* %arrayidx, align 4, !dbg !6233
  %54 = load [4 x float]*, [4 x float]** %imat.addr, align 8, !dbg !6234
  %arraydecay78 = getelementptr inbounds [3 x float], [3 x float]* %dirvec, i64 0, i64 0, !dbg !6235
  call void @mul_mat3_m4_v3([4 x float]* %54, float* %arraydecay78), !dbg !6236
  %arraydecay79 = getelementptr inbounds [3 x float], [3 x float]* %dirvec, i64 0, i64 0, !dbg !6237
  %call80 = call float @normalize_v3(float* %arraydecay79), !dbg !6239
  %cmp81 = fcmp une float 0.000000e+00, %call80, !dbg !6240
  br i1 %cmp81, label %if.then82, label %if.end112, !dbg !6241

if.then82:                                        ; preds = %if.end75
  call void @llvm.dbg.declare(metadata [3 x float]* %norvech, metadata !6242, metadata !DIExpression()), !dbg !6244
  call void @llvm.dbg.declare(metadata [3 x float]* %norvect, metadata !6245, metadata !DIExpression()), !dbg !6246
  call void @llvm.dbg.declare(metadata [3 x float]* %vec, metadata !6247, metadata !DIExpression()), !dbg !6248
  %arraydecay83 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !6249
  %arraydecay84 = getelementptr inbounds [3 x float], [3 x float]* %dirvec, i64 0, i64 0, !dbg !6250
  call void @copy_v3_v3(float* %arraydecay83, float* %arraydecay84), !dbg !6251
  %arraydecay85 = getelementptr inbounds [3 x float], [3 x float]* %dirvec, i64 0, i64 0, !dbg !6252
  %55 = load float, float* %head, align 4, !dbg !6253
  call void @mul_v3_fl(float* %arraydecay85, float %55), !dbg !6254
  %arraydecay86 = getelementptr inbounds [3 x float], [3 x float]* %norvech, i64 0, i64 0, !dbg !6255
  %arraydecay87 = getelementptr inbounds [3 x float], [3 x float]* %dirvec, i64 0, i64 0, !dbg !6256
  %56 = load [4 x float]*, [4 x float]** %imat.addr, align 8, !dbg !6257
  %arrayidx88 = getelementptr inbounds [4 x float], [4 x float]* %56, i64 2, !dbg !6257
  %arraydecay89 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx88, i64 0, i64 0, !dbg !6257
  call void @cross_v3_v3v3(float* %arraydecay86, float* %arraydecay87, float* %arraydecay89), !dbg !6258
  %arraydecay90 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !6259
  %57 = load float, float* %tail, align 4, !dbg !6260
  call void @mul_v3_fl(float* %arraydecay90, float %57), !dbg !6261
  %arraydecay91 = getelementptr inbounds [3 x float], [3 x float]* %norvect, i64 0, i64 0, !dbg !6262
  %arraydecay92 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !6263
  %58 = load [4 x float]*, [4 x float]** %imat.addr, align 8, !dbg !6264
  %arrayidx93 = getelementptr inbounds [4 x float], [4 x float]* %58, i64 2, !dbg !6264
  %arraydecay94 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx93, i64 0, i64 0, !dbg !6264
  call void @cross_v3_v3v3(float* %arraydecay91, float* %arraydecay92, float* %arraydecay94), !dbg !6265
  %59 = load i32, i32* %id.addr, align 4, !dbg !6266
  %cmp95 = icmp ne i32 %59, -1, !dbg !6268
  br i1 %cmp95, label %if.then96, label %if.end99, !dbg !6269

if.then96:                                        ; preds = %if.then82
  %60 = load i32, i32* %id.addr, align 4, !dbg !6270
  %or97 = or i32 %60, 1073741824, !dbg !6271
  %call98 = call zeroext i8 @GPU_select_load_id(i32 %or97), !dbg !6272
  br label %if.end99, !dbg !6272

if.end99:                                         ; preds = %if.then96, %if.then82
  call void @glBegin(i32 1), !dbg !6273
  %arraydecay100 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !6274
  %61 = load float*, float** %headvec, align 8, !dbg !6275
  %arraydecay101 = getelementptr inbounds [3 x float], [3 x float]* %norvech, i64 0, i64 0, !dbg !6276
  call void @add_v3_v3v3(float* %arraydecay100, float* %61, float* %arraydecay101), !dbg !6277
  %arraydecay102 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !6278
  call void @glVertex3fv(float* %arraydecay102), !dbg !6279
  %arraydecay103 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !6280
  %62 = load float*, float** %tailvec, align 8, !dbg !6281
  %arraydecay104 = getelementptr inbounds [3 x float], [3 x float]* %norvect, i64 0, i64 0, !dbg !6282
  call void @add_v3_v3v3(float* %arraydecay103, float* %62, float* %arraydecay104), !dbg !6283
  %arraydecay105 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !6284
  call void @glVertex3fv(float* %arraydecay105), !dbg !6285
  %arraydecay106 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !6286
  %63 = load float*, float** %headvec, align 8, !dbg !6287
  %arraydecay107 = getelementptr inbounds [3 x float], [3 x float]* %norvech, i64 0, i64 0, !dbg !6288
  call void @sub_v3_v3v3(float* %arraydecay106, float* %63, float* %arraydecay107), !dbg !6289
  %arraydecay108 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !6290
  call void @glVertex3fv(float* %arraydecay108), !dbg !6291
  %arraydecay109 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !6292
  %64 = load float*, float** %tailvec, align 8, !dbg !6293
  %arraydecay110 = getelementptr inbounds [3 x float], [3 x float]* %norvect, i64 0, i64 0, !dbg !6294
  call void @sub_v3_v3v3(float* %arraydecay109, float* %64, float* %arraydecay110), !dbg !6295
  %arraydecay111 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !6296
  call void @glVertex3fv(float* %arraydecay111), !dbg !6297
  call void @glEnd(), !dbg !6298
  br label %if.end112, !dbg !6299

if.end112:                                        ; preds = %if.end99, %if.end75
  ret void, !dbg !6300
}

; Function Attrs: noinline nounwind uwtable
define internal void @draw_line_bone(i32 %armflag, i32 %boneflag, i16 signext %constflag, i32 %id, %struct.bPoseChannel* %pchan, %struct.EditBone* %ebone) #0 !dbg !6301 {
entry:
  %armflag.addr = alloca i32, align 4
  %boneflag.addr = alloca i32, align 4
  %constflag.addr = alloca i16, align 2
  %id.addr = alloca i32, align 4
  %pchan.addr = alloca %struct.bPoseChannel*, align 8
  %ebone.addr = alloca %struct.EditBone*, align 8
  %length = alloca float, align 4
  store i32 %armflag, i32* %armflag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %armflag.addr, metadata !6304, metadata !DIExpression()), !dbg !6305
  store i32 %boneflag, i32* %boneflag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %boneflag.addr, metadata !6306, metadata !DIExpression()), !dbg !6307
  store i16 %constflag, i16* %constflag.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %constflag.addr, metadata !6308, metadata !DIExpression()), !dbg !6309
  store i32 %id, i32* %id.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %id.addr, metadata !6310, metadata !DIExpression()), !dbg !6311
  store %struct.bPoseChannel* %pchan, %struct.bPoseChannel** %pchan.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bPoseChannel** %pchan.addr, metadata !6312, metadata !DIExpression()), !dbg !6313
  store %struct.EditBone* %ebone, %struct.EditBone** %ebone.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.EditBone** %ebone.addr, metadata !6314, metadata !DIExpression()), !dbg !6315
  call void @llvm.dbg.declare(metadata float* %length, metadata !6316, metadata !DIExpression()), !dbg !6317
  call void @glPixelStorei(i32 3317, i32 1), !dbg !6318
  %0 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan.addr, align 8, !dbg !6319
  %tobool = icmp ne %struct.bPoseChannel* %0, null, !dbg !6319
  br i1 %tobool, label %if.then, label %if.else, !dbg !6321

if.then:                                          ; preds = %entry
  %1 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan.addr, align 8, !dbg !6322
  %bone = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %1, i32 0, i32 12, !dbg !6323
  %2 = load %struct.Bone*, %struct.Bone** %bone, align 8, !dbg !6323
  %length1 = getelementptr inbounds %struct.Bone, %struct.Bone* %2, i32 0, i32 18, !dbg !6324
  %3 = load float, float* %length1, align 4, !dbg !6324
  store float %3, float* %length, align 4, !dbg !6325
  br label %if.end, !dbg !6326

if.else:                                          ; preds = %entry
  %4 = load %struct.EditBone*, %struct.EditBone** %ebone.addr, align 8, !dbg !6327
  %length2 = getelementptr inbounds %struct.EditBone, %struct.EditBone* %4, i32 0, i32 14, !dbg !6328
  %5 = load float, float* %length2, align 8, !dbg !6328
  store float %5, float* %length, align 4, !dbg !6329
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  call void @glPushMatrix(), !dbg !6330
  %6 = load float, float* %length, align 4, !dbg !6331
  %7 = load float, float* %length, align 4, !dbg !6332
  %8 = load float, float* %length, align 4, !dbg !6333
  call void @glScalef(float %6, float %7, float %8), !dbg !6334
  %9 = load i32, i32* %armflag.addr, align 4, !dbg !6335
  %and = and i32 %9, 48, !dbg !6337
  %tobool3 = icmp ne i32 %and, 0, !dbg !6337
  br i1 %tobool3, label %if.then4, label %if.end45, !dbg !6338

if.then4:                                         ; preds = %if.end
  %10 = load float, float* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 106), align 4, !dbg !6339
  call void @glLineWidth(float 4.000000e+00), !dbg !6339
  %11 = load i32, i32* %armflag.addr, align 4, !dbg !6341
  %and5 = and i32 %11, 16, !dbg !6343
  %tobool6 = icmp ne i32 %and5, 0, !dbg !6343
  br i1 %tobool6, label %if.then7, label %if.else8, !dbg !6344

if.then7:                                         ; preds = %if.then4
  %12 = load i32, i32* %boneflag.addr, align 4, !dbg !6345
  %13 = load i16, i16* %constflag.addr, align 2, !dbg !6346
  %call = call zeroext i8 @set_pchan_glColor(i16 signext 0, i32 %12, i16 signext %13), !dbg !6347
  br label %if.end13, !dbg !6347

if.else8:                                         ; preds = %if.then4
  %14 = load i32, i32* %armflag.addr, align 4, !dbg !6348
  %and9 = and i32 %14, 32, !dbg !6350
  %tobool10 = icmp ne i32 %and9, 0, !dbg !6350
  br i1 %tobool10, label %if.then11, label %if.end12, !dbg !6351

if.then11:                                        ; preds = %if.else8
  call void @UI_ThemeColor(i32 27), !dbg !6352
  br label %if.end12, !dbg !6354

if.end12:                                         ; preds = %if.then11, %if.else8
  br label %if.end13

if.end13:                                         ; preds = %if.end12, %if.then7
  %15 = load i32, i32* %boneflag.addr, align 4, !dbg !6355
  %and14 = and i32 %15, 16, !dbg !6357
  %cmp = icmp eq i32 %and14, 0, !dbg !6358
  br i1 %cmp, label %if.then15, label %if.end22, !dbg !6359

if.then15:                                        ; preds = %if.end13
  %16 = load i32, i32* getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 15), align 8, !dbg !6360
  %and16 = and i32 %16, 32, !dbg !6363
  %tobool17 = icmp ne i32 %and16, 0, !dbg !6363
  br i1 %tobool17, label %if.then18, label %if.else20, !dbg !6364

if.then18:                                        ; preds = %if.then15
  %17 = load i32, i32* %id.addr, align 4, !dbg !6365
  %or = or i32 %17, 268435456, !dbg !6367
  %call19 = call zeroext i8 @GPU_select_load_id(i32 %or), !dbg !6368
  call void @glBegin(i32 0), !dbg !6369
  call void @glVertex3f(float 0.000000e+00, float 0.000000e+00, float 0.000000e+00), !dbg !6370
  call void @glEnd(), !dbg !6371
  br label %if.end21, !dbg !6372

if.else20:                                        ; preds = %if.then15
  call void @glRasterPos3f(float 0.000000e+00, float 0.000000e+00, float 0.000000e+00), !dbg !6373
  call void @glBitmap(i32 8, i32 8, float 4.000000e+00, float 4.000000e+00, float 0.000000e+00, float 0.000000e+00, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @bm_dot8, i64 0, i64 0)), !dbg !6375
  br label %if.end21

if.end21:                                         ; preds = %if.else20, %if.then18
  br label %if.end22, !dbg !6376

if.end22:                                         ; preds = %if.end21, %if.end13
  %18 = load i32, i32* %id.addr, align 4, !dbg !6377
  %cmp23 = icmp ne i32 %18, -1, !dbg !6379
  br i1 %cmp23, label %if.then24, label %if.end27, !dbg !6380

if.then24:                                        ; preds = %if.end22
  %19 = load i32, i32* %id.addr, align 4, !dbg !6381
  %or25 = or i32 %19, 1073741824, !dbg !6382
  %call26 = call zeroext i8 @GPU_select_load_id(i32 %or25), !dbg !6383
  br label %if.end27, !dbg !6383

if.end27:                                         ; preds = %if.then24, %if.end22
  call void @glBegin(i32 1), !dbg !6384
  call void @glVertex3f(float 0.000000e+00, float 0.000000e+00, float 0.000000e+00), !dbg !6385
  call void @glVertex3f(float 0.000000e+00, float 1.000000e+00, float 0.000000e+00), !dbg !6386
  call void @glEnd(), !dbg !6387
  %20 = load i32, i32* getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 15), align 8, !dbg !6388
  %and28 = and i32 %20, 32, !dbg !6390
  %tobool29 = icmp ne i32 %and28, 0, !dbg !6390
  br i1 %tobool29, label %if.then30, label %if.else33, !dbg !6391

if.then30:                                        ; preds = %if.end27
  %21 = load i32, i32* %id.addr, align 4, !dbg !6392
  %or31 = or i32 %21, 536870912, !dbg !6394
  %call32 = call zeroext i8 @GPU_select_load_id(i32 %or31), !dbg !6395
  call void @glBegin(i32 0), !dbg !6396
  call void @glVertex3f(float 0.000000e+00, float 1.000000e+00, float 0.000000e+00), !dbg !6397
  call void @glEnd(), !dbg !6398
  br label %if.end34, !dbg !6399

if.else33:                                        ; preds = %if.end27
  call void @glRasterPos3f(float 0.000000e+00, float 1.000000e+00, float 0.000000e+00), !dbg !6400
  call void @glBitmap(i32 8, i32 8, float 4.000000e+00, float 4.000000e+00, float 0.000000e+00, float 0.000000e+00, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @bm_dot7, i64 0, i64 0)), !dbg !6402
  br label %if.end34

if.end34:                                         ; preds = %if.else33, %if.then30
  %22 = load i32, i32* %id.addr, align 4, !dbg !6403
  %cmp35 = icmp ne i32 %22, -1, !dbg !6405
  br i1 %cmp35, label %if.then36, label %if.end39, !dbg !6406

if.then36:                                        ; preds = %if.end34
  %23 = load i32, i32* %id.addr, align 4, !dbg !6407
  %and37 = and i32 %23, 65535, !dbg !6408
  %call38 = call zeroext i8 @GPU_select_load_id(i32 %and37), !dbg !6409
  br label %if.end39, !dbg !6409

if.end39:                                         ; preds = %if.then36, %if.end34
  %24 = load i32, i32* %armflag.addr, align 4, !dbg !6410
  %and40 = and i32 %24, 16, !dbg !6412
  %tobool41 = icmp ne i32 %and40, 0, !dbg !6412
  br i1 %tobool41, label %if.then42, label %if.end44, !dbg !6413

if.then42:                                        ; preds = %if.end39
  %25 = load i32, i32* %boneflag.addr, align 4, !dbg !6414
  %26 = load i16, i16* %constflag.addr, align 2, !dbg !6415
  %call43 = call zeroext i8 @set_pchan_glColor(i16 signext 5, i32 %25, i16 signext %26), !dbg !6416
  br label %if.end44, !dbg !6416

if.end44:                                         ; preds = %if.then42, %if.end39
  br label %if.end45, !dbg !6417

if.end45:                                         ; preds = %if.end44, %if.end
  %27 = load float, float* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 106), align 4, !dbg !6418
  call void @glLineWidth(float 2.000000e+00), !dbg !6418
  %28 = load i32, i32* %boneflag.addr, align 4, !dbg !6419
  %and46 = and i32 %28, 16, !dbg !6421
  %cmp47 = icmp eq i32 %and46, 0, !dbg !6422
  br i1 %cmp47, label %if.then48, label %if.end62, !dbg !6423

if.then48:                                        ; preds = %if.end45
  %29 = load i32, i32* getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 15), align 8, !dbg !6424
  %and49 = and i32 %29, 32, !dbg !6427
  %cmp50 = icmp eq i32 %and49, 0, !dbg !6428
  br i1 %cmp50, label %if.then51, label %if.end61, !dbg !6429

if.then51:                                        ; preds = %if.then48
  %30 = load i32, i32* %armflag.addr, align 4, !dbg !6430
  %and52 = and i32 %30, 32, !dbg !6433
  %tobool53 = icmp ne i32 %and52, 0, !dbg !6433
  br i1 %tobool53, label %if.then54, label %if.end60, !dbg !6434

if.then54:                                        ; preds = %if.then51
  %31 = load i32, i32* %boneflag.addr, align 4, !dbg !6435
  %and55 = and i32 %31, 2, !dbg !6438
  %tobool56 = icmp ne i32 %and55, 0, !dbg !6438
  br i1 %tobool56, label %if.then57, label %if.else58, !dbg !6439

if.then57:                                        ; preds = %if.then54
  call void @UI_ThemeColor(i32 34), !dbg !6440
  br label %if.end59, !dbg !6440

if.else58:                                        ; preds = %if.then54
  call void @UI_ThemeColor(i32 33), !dbg !6441
  br label %if.end59

if.end59:                                         ; preds = %if.else58, %if.then57
  br label %if.end60, !dbg !6442

if.end60:                                         ; preds = %if.end59, %if.then51
  call void @glRasterPos3f(float 0.000000e+00, float 0.000000e+00, float 0.000000e+00), !dbg !6443
  call void @glBitmap(i32 8, i32 8, float 4.000000e+00, float 4.000000e+00, float 0.000000e+00, float 0.000000e+00, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @bm_dot6, i64 0, i64 0)), !dbg !6444
  br label %if.end61, !dbg !6445

if.end61:                                         ; preds = %if.end60, %if.then48
  br label %if.end62, !dbg !6446

if.end62:                                         ; preds = %if.end61, %if.end45
  %32 = load i32, i32* %armflag.addr, align 4, !dbg !6447
  %and63 = and i32 %32, 32, !dbg !6449
  %tobool64 = icmp ne i32 %and63, 0, !dbg !6449
  br i1 %tobool64, label %if.then65, label %if.end71, !dbg !6450

if.then65:                                        ; preds = %if.end62
  %33 = load i32, i32* %boneflag.addr, align 4, !dbg !6451
  %and66 = and i32 %33, 1, !dbg !6454
  %tobool67 = icmp ne i32 %and66, 0, !dbg !6454
  br i1 %tobool67, label %if.then68, label %if.else69, !dbg !6455

if.then68:                                        ; preds = %if.then65
  call void @UI_ThemeColor(i32 39), !dbg !6456
  br label %if.end70, !dbg !6456

if.else69:                                        ; preds = %if.then65
  call void @UI_ThemeColorShade(i32 2, i32 -30), !dbg !6457
  br label %if.end70

if.end70:                                         ; preds = %if.else69, %if.then68
  br label %if.end71, !dbg !6458

if.end71:                                         ; preds = %if.end70, %if.end62
  call void @glBegin(i32 1), !dbg !6459
  call void @glVertex3f(float 0.000000e+00, float 0.000000e+00, float 0.000000e+00), !dbg !6460
  call void @glVertex3f(float 0.000000e+00, float 1.000000e+00, float 0.000000e+00), !dbg !6461
  call void @glEnd(), !dbg !6462
  %34 = load i32, i32* getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 15), align 8, !dbg !6463
  %and72 = and i32 %34, 32, !dbg !6465
  %cmp73 = icmp eq i32 %and72, 0, !dbg !6466
  br i1 %cmp73, label %if.then74, label %if.end84, !dbg !6467

if.then74:                                        ; preds = %if.end71
  %35 = load i32, i32* %armflag.addr, align 4, !dbg !6468
  %and75 = and i32 %35, 32, !dbg !6471
  %tobool76 = icmp ne i32 %and75, 0, !dbg !6471
  br i1 %tobool76, label %if.then77, label %if.end83, !dbg !6472

if.then77:                                        ; preds = %if.then74
  %36 = load i32, i32* %boneflag.addr, align 4, !dbg !6473
  %and78 = and i32 %36, 4, !dbg !6476
  %tobool79 = icmp ne i32 %and78, 0, !dbg !6476
  br i1 %tobool79, label %if.then80, label %if.else81, !dbg !6477

if.then80:                                        ; preds = %if.then77
  call void @UI_ThemeColor(i32 34), !dbg !6478
  br label %if.end82, !dbg !6478

if.else81:                                        ; preds = %if.then77
  call void @UI_ThemeColor(i32 33), !dbg !6479
  br label %if.end82

if.end82:                                         ; preds = %if.else81, %if.then80
  br label %if.end83, !dbg !6480

if.end83:                                         ; preds = %if.end82, %if.then74
  call void @glRasterPos3f(float 0.000000e+00, float 1.000000e+00, float 0.000000e+00), !dbg !6481
  call void @glBitmap(i32 8, i32 8, float 4.000000e+00, float 4.000000e+00, float 0.000000e+00, float 0.000000e+00, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @bm_dot5, i64 0, i64 0)), !dbg !6482
  br label %if.end84, !dbg !6483

if.end84:                                         ; preds = %if.end83, %if.end71
  %37 = load float, float* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 106), align 4, !dbg !6484
  call void @glLineWidth(float 1.000000e+00), !dbg !6484
  call void @glPopMatrix(), !dbg !6485
  ret void, !dbg !6486
}

declare dso_local void @setlinestyle(i32) #3

declare dso_local void @glBegin(i32) #3

declare dso_local void @glVertex3fv(float*) #3

declare dso_local void @glEnd() #3

declare dso_local void @UI_GetThemeColor3ubv(i32, i8*) #3

declare dso_local void @mid_v3_v3v3(float*, float*, float*) #3

declare dso_local void @glRasterPos3fv(float*) #3

declare dso_local void @view3d_cached_text_draw_add(float*, i8*, i64, i16 signext, i16 signext, i8*) #3

; Function Attrs: nounwind readonly
declare dso_local i64 @strlen(i8*) #4

; Function Attrs: noinline nounwind uwtable
define internal void @bone_matrix_translate_y([4 x float]* %mat, float %y) #0 !dbg !6487 {
entry:
  %mat.addr = alloca [4 x float]*, align 8
  %y.addr = alloca float, align 4
  %trans = alloca [3 x float], align 4
  store [4 x float]* %mat, [4 x float]** %mat.addr, align 8
  call void @llvm.dbg.declare(metadata [4 x float]** %mat.addr, metadata !6490, metadata !DIExpression()), !dbg !6491
  store float %y, float* %y.addr, align 4
  call void @llvm.dbg.declare(metadata float* %y.addr, metadata !6492, metadata !DIExpression()), !dbg !6493
  call void @llvm.dbg.declare(metadata [3 x float]* %trans, metadata !6494, metadata !DIExpression()), !dbg !6495
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %trans, i64 0, i64 0, !dbg !6496
  %0 = load [4 x float]*, [4 x float]** %mat.addr, align 8, !dbg !6497
  %arrayidx = getelementptr inbounds [4 x float], [4 x float]* %0, i64 1, !dbg !6497
  %arraydecay1 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx, i64 0, i64 0, !dbg !6497
  call void @copy_v3_v3(float* %arraydecay, float* %arraydecay1), !dbg !6498
  %arraydecay2 = getelementptr inbounds [3 x float], [3 x float]* %trans, i64 0, i64 0, !dbg !6499
  %1 = load float, float* %y.addr, align 4, !dbg !6500
  call void @mul_v3_fl(float* %arraydecay2, float %1), !dbg !6501
  %2 = load [4 x float]*, [4 x float]** %mat.addr, align 8, !dbg !6502
  %arrayidx3 = getelementptr inbounds [4 x float], [4 x float]* %2, i64 3, !dbg !6502
  %arraydecay4 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx3, i64 0, i64 0, !dbg !6502
  %arraydecay5 = getelementptr inbounds [3 x float], [3 x float]* %trans, i64 0, i64 0, !dbg !6503
  call void @add_v3_v3(float* %arraydecay4, float* %arraydecay5), !dbg !6504
  ret void, !dbg !6505
}

declare dso_local void @glColor3ubv(i8*) #3

declare dso_local void @drawaxes(float, i8 zeroext) #3

; Function Attrs: nounwind
declare dso_local float @sqrtf(float) #5

; Function Attrs: noinline nounwind uwtable
define internal float @dot_v3v3(float* %a, float* %b) #0 !dbg !6506 {
entry:
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !6509, metadata !DIExpression()), !dbg !6510
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !6511, metadata !DIExpression()), !dbg !6512
  %0 = load float*, float** %a.addr, align 8, !dbg !6513
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !6513
  %1 = load float, float* %arrayidx, align 4, !dbg !6513
  %2 = load float*, float** %b.addr, align 8, !dbg !6514
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !6514
  %3 = load float, float* %arrayidx1, align 4, !dbg !6514
  %mul = fmul float %1, %3, !dbg !6515
  %4 = load float*, float** %a.addr, align 8, !dbg !6516
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !6516
  %5 = load float, float* %arrayidx2, align 4, !dbg !6516
  %6 = load float*, float** %b.addr, align 8, !dbg !6517
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !6517
  %7 = load float, float* %arrayidx3, align 4, !dbg !6517
  %mul4 = fmul float %5, %7, !dbg !6518
  %add = fadd float %mul, %mul4, !dbg !6519
  %8 = load float*, float** %a.addr, align 8, !dbg !6520
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !6520
  %9 = load float, float* %arrayidx5, align 4, !dbg !6520
  %10 = load float*, float** %b.addr, align 8, !dbg !6521
  %arrayidx6 = getelementptr inbounds float, float* %10, i64 2, !dbg !6521
  %11 = load float, float* %arrayidx6, align 4, !dbg !6521
  %mul7 = fmul float %9, %11, !dbg !6522
  %add8 = fadd float %add, %mul7, !dbg !6523
  ret float %add8, !dbg !6524
}

; Function Attrs: noinline nounwind uwtable
define internal float @len_v3v3(float* %a, float* %b) #0 !dbg !6525 {
entry:
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  %d = alloca [3 x float], align 4
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !6526, metadata !DIExpression()), !dbg !6527
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !6528, metadata !DIExpression()), !dbg !6529
  call void @llvm.dbg.declare(metadata [3 x float]* %d, metadata !6530, metadata !DIExpression()), !dbg !6531
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %d, i64 0, i64 0, !dbg !6532
  %0 = load float*, float** %b.addr, align 8, !dbg !6533
  %1 = load float*, float** %a.addr, align 8, !dbg !6534
  call void @sub_v3_v3v3(float* %arraydecay, float* %0, float* %1), !dbg !6535
  %arraydecay1 = getelementptr inbounds [3 x float], [3 x float]* %d, i64 0, i64 0, !dbg !6536
  %call = call float @len_v3(float* %arraydecay1), !dbg !6537
  ret float %call, !dbg !6538
}

; Function Attrs: noinline nounwind uwtable
define internal void @sub_v3_v3v3(float* %r, float* %a, float* %b) #0 !dbg !6539 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !6542, metadata !DIExpression()), !dbg !6543
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !6544, metadata !DIExpression()), !dbg !6545
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !6546, metadata !DIExpression()), !dbg !6547
  %0 = load float*, float** %a.addr, align 8, !dbg !6548
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !6548
  %1 = load float, float* %arrayidx, align 4, !dbg !6548
  %2 = load float*, float** %b.addr, align 8, !dbg !6549
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !6549
  %3 = load float, float* %arrayidx1, align 4, !dbg !6549
  %sub = fsub float %1, %3, !dbg !6550
  %4 = load float*, float** %r.addr, align 8, !dbg !6551
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 0, !dbg !6551
  store float %sub, float* %arrayidx2, align 4, !dbg !6552
  %5 = load float*, float** %a.addr, align 8, !dbg !6553
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 1, !dbg !6553
  %6 = load float, float* %arrayidx3, align 4, !dbg !6553
  %7 = load float*, float** %b.addr, align 8, !dbg !6554
  %arrayidx4 = getelementptr inbounds float, float* %7, i64 1, !dbg !6554
  %8 = load float, float* %arrayidx4, align 4, !dbg !6554
  %sub5 = fsub float %6, %8, !dbg !6555
  %9 = load float*, float** %r.addr, align 8, !dbg !6556
  %arrayidx6 = getelementptr inbounds float, float* %9, i64 1, !dbg !6556
  store float %sub5, float* %arrayidx6, align 4, !dbg !6557
  %10 = load float*, float** %a.addr, align 8, !dbg !6558
  %arrayidx7 = getelementptr inbounds float, float* %10, i64 2, !dbg !6558
  %11 = load float, float* %arrayidx7, align 4, !dbg !6558
  %12 = load float*, float** %b.addr, align 8, !dbg !6559
  %arrayidx8 = getelementptr inbounds float, float* %12, i64 2, !dbg !6559
  %13 = load float, float* %arrayidx8, align 4, !dbg !6559
  %sub9 = fsub float %11, %13, !dbg !6560
  %14 = load float*, float** %r.addr, align 8, !dbg !6561
  %arrayidx10 = getelementptr inbounds float, float* %14, i64 2, !dbg !6561
  store float %sub9, float* %arrayidx10, align 4, !dbg !6562
  ret void, !dbg !6563
}

declare dso_local void @mul_mat3_m4_v3([4 x float]*, float*) #3

; Function Attrs: noinline nounwind uwtable
define internal float @len_v2(float* %v) #0 !dbg !6564 {
entry:
  %v.addr = alloca float*, align 8
  store float* %v, float** %v.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v.addr, metadata !6565, metadata !DIExpression()), !dbg !6566
  %0 = load float*, float** %v.addr, align 8, !dbg !6567
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !6567
  %1 = load float, float* %arrayidx, align 4, !dbg !6567
  %2 = load float*, float** %v.addr, align 8, !dbg !6568
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !6568
  %3 = load float, float* %arrayidx1, align 4, !dbg !6568
  %mul = fmul float %1, %3, !dbg !6569
  %4 = load float*, float** %v.addr, align 8, !dbg !6570
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !6570
  %5 = load float, float* %arrayidx2, align 4, !dbg !6570
  %6 = load float*, float** %v.addr, align 8, !dbg !6571
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !6571
  %7 = load float, float* %arrayidx3, align 4, !dbg !6571
  %mul4 = fmul float %5, %7, !dbg !6572
  %add = fadd float %mul, %mul4, !dbg !6573
  %call = call float @sqrtf(float %add) #7, !dbg !6574
  ret float %call, !dbg !6575
}

; Function Attrs: noinline nounwind uwtable
define internal void @zero_v3(float* %r) #0 !dbg !6576 {
entry:
  %r.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !6579, metadata !DIExpression()), !dbg !6580
  %0 = load float*, float** %r.addr, align 8, !dbg !6581
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !6581
  store float 0.000000e+00, float* %arrayidx, align 4, !dbg !6582
  %1 = load float*, float** %r.addr, align 8, !dbg !6583
  %arrayidx1 = getelementptr inbounds float, float* %1, i64 1, !dbg !6583
  store float 0.000000e+00, float* %arrayidx1, align 4, !dbg !6584
  %2 = load float*, float** %r.addr, align 8, !dbg !6585
  %arrayidx2 = getelementptr inbounds float, float* %2, i64 2, !dbg !6585
  store float 0.000000e+00, float* %arrayidx2, align 4, !dbg !6586
  ret void, !dbg !6587
}

; Function Attrs: noinline nounwind uwtable
define internal float @normalize_v3(float* %n) #0 !dbg !6588 {
entry:
  %n.addr = alloca float*, align 8
  store float* %n, float** %n.addr, align 8
  call void @llvm.dbg.declare(metadata float** %n.addr, metadata !6591, metadata !DIExpression()), !dbg !6592
  %0 = load float*, float** %n.addr, align 8, !dbg !6593
  %1 = load float*, float** %n.addr, align 8, !dbg !6594
  %call = call float @normalize_v3_v3(float* %0, float* %1), !dbg !6595
  ret float %call, !dbg !6596
}

; Function Attrs: noinline nounwind uwtable
define internal void @cross_v3_v3v3(float* %r, float* %a, float* %b) #0 !dbg !6597 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !6598, metadata !DIExpression()), !dbg !6599
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !6600, metadata !DIExpression()), !dbg !6601
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !6602, metadata !DIExpression()), !dbg !6603
  %0 = load float*, float** %a.addr, align 8, !dbg !6604
  %arrayidx = getelementptr inbounds float, float* %0, i64 1, !dbg !6604
  %1 = load float, float* %arrayidx, align 4, !dbg !6604
  %2 = load float*, float** %b.addr, align 8, !dbg !6605
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 2, !dbg !6605
  %3 = load float, float* %arrayidx1, align 4, !dbg !6605
  %mul = fmul float %1, %3, !dbg !6606
  %4 = load float*, float** %a.addr, align 8, !dbg !6607
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 2, !dbg !6607
  %5 = load float, float* %arrayidx2, align 4, !dbg !6607
  %6 = load float*, float** %b.addr, align 8, !dbg !6608
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !6608
  %7 = load float, float* %arrayidx3, align 4, !dbg !6608
  %mul4 = fmul float %5, %7, !dbg !6609
  %sub = fsub float %mul, %mul4, !dbg !6610
  %8 = load float*, float** %r.addr, align 8, !dbg !6611
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 0, !dbg !6611
  store float %sub, float* %arrayidx5, align 4, !dbg !6612
  %9 = load float*, float** %a.addr, align 8, !dbg !6613
  %arrayidx6 = getelementptr inbounds float, float* %9, i64 2, !dbg !6613
  %10 = load float, float* %arrayidx6, align 4, !dbg !6613
  %11 = load float*, float** %b.addr, align 8, !dbg !6614
  %arrayidx7 = getelementptr inbounds float, float* %11, i64 0, !dbg !6614
  %12 = load float, float* %arrayidx7, align 4, !dbg !6614
  %mul8 = fmul float %10, %12, !dbg !6615
  %13 = load float*, float** %a.addr, align 8, !dbg !6616
  %arrayidx9 = getelementptr inbounds float, float* %13, i64 0, !dbg !6616
  %14 = load float, float* %arrayidx9, align 4, !dbg !6616
  %15 = load float*, float** %b.addr, align 8, !dbg !6617
  %arrayidx10 = getelementptr inbounds float, float* %15, i64 2, !dbg !6617
  %16 = load float, float* %arrayidx10, align 4, !dbg !6617
  %mul11 = fmul float %14, %16, !dbg !6618
  %sub12 = fsub float %mul8, %mul11, !dbg !6619
  %17 = load float*, float** %r.addr, align 8, !dbg !6620
  %arrayidx13 = getelementptr inbounds float, float* %17, i64 1, !dbg !6620
  store float %sub12, float* %arrayidx13, align 4, !dbg !6621
  %18 = load float*, float** %a.addr, align 8, !dbg !6622
  %arrayidx14 = getelementptr inbounds float, float* %18, i64 0, !dbg !6622
  %19 = load float, float* %arrayidx14, align 4, !dbg !6622
  %20 = load float*, float** %b.addr, align 8, !dbg !6623
  %arrayidx15 = getelementptr inbounds float, float* %20, i64 1, !dbg !6623
  %21 = load float, float* %arrayidx15, align 4, !dbg !6623
  %mul16 = fmul float %19, %21, !dbg !6624
  %22 = load float*, float** %a.addr, align 8, !dbg !6625
  %arrayidx17 = getelementptr inbounds float, float* %22, i64 1, !dbg !6625
  %23 = load float, float* %arrayidx17, align 4, !dbg !6625
  %24 = load float*, float** %b.addr, align 8, !dbg !6626
  %arrayidx18 = getelementptr inbounds float, float* %24, i64 0, !dbg !6626
  %25 = load float, float* %arrayidx18, align 4, !dbg !6626
  %mul19 = fmul float %23, %25, !dbg !6627
  %sub20 = fsub float %mul16, %mul19, !dbg !6628
  %26 = load float*, float** %r.addr, align 8, !dbg !6629
  %arrayidx21 = getelementptr inbounds float, float* %26, i64 2, !dbg !6629
  store float %sub20, float* %arrayidx21, align 4, !dbg !6630
  ret void, !dbg !6631
}

; Function Attrs: noinline nounwind uwtable
define internal void @madd_v3_v3v3fl(float* %r, float* %a, float* %b, float %f) #0 !dbg !6632 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  %f.addr = alloca float, align 4
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !6635, metadata !DIExpression()), !dbg !6636
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !6637, metadata !DIExpression()), !dbg !6638
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !6639, metadata !DIExpression()), !dbg !6640
  store float %f, float* %f.addr, align 4
  call void @llvm.dbg.declare(metadata float* %f.addr, metadata !6641, metadata !DIExpression()), !dbg !6642
  %0 = load float*, float** %a.addr, align 8, !dbg !6643
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !6643
  %1 = load float, float* %arrayidx, align 4, !dbg !6643
  %2 = load float*, float** %b.addr, align 8, !dbg !6644
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !6644
  %3 = load float, float* %arrayidx1, align 4, !dbg !6644
  %4 = load float, float* %f.addr, align 4, !dbg !6645
  %mul = fmul float %3, %4, !dbg !6646
  %add = fadd float %1, %mul, !dbg !6647
  %5 = load float*, float** %r.addr, align 8, !dbg !6648
  %arrayidx2 = getelementptr inbounds float, float* %5, i64 0, !dbg !6648
  store float %add, float* %arrayidx2, align 4, !dbg !6649
  %6 = load float*, float** %a.addr, align 8, !dbg !6650
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !6650
  %7 = load float, float* %arrayidx3, align 4, !dbg !6650
  %8 = load float*, float** %b.addr, align 8, !dbg !6651
  %arrayidx4 = getelementptr inbounds float, float* %8, i64 1, !dbg !6651
  %9 = load float, float* %arrayidx4, align 4, !dbg !6651
  %10 = load float, float* %f.addr, align 4, !dbg !6652
  %mul5 = fmul float %9, %10, !dbg !6653
  %add6 = fadd float %7, %mul5, !dbg !6654
  %11 = load float*, float** %r.addr, align 8, !dbg !6655
  %arrayidx7 = getelementptr inbounds float, float* %11, i64 1, !dbg !6655
  store float %add6, float* %arrayidx7, align 4, !dbg !6656
  %12 = load float*, float** %a.addr, align 8, !dbg !6657
  %arrayidx8 = getelementptr inbounds float, float* %12, i64 2, !dbg !6657
  %13 = load float, float* %arrayidx8, align 4, !dbg !6657
  %14 = load float*, float** %b.addr, align 8, !dbg !6658
  %arrayidx9 = getelementptr inbounds float, float* %14, i64 2, !dbg !6658
  %15 = load float, float* %arrayidx9, align 4, !dbg !6658
  %16 = load float, float* %f.addr, align 4, !dbg !6659
  %mul10 = fmul float %15, %16, !dbg !6660
  %add11 = fadd float %13, %mul10, !dbg !6661
  %17 = load float*, float** %r.addr, align 8, !dbg !6662
  %arrayidx12 = getelementptr inbounds float, float* %17, i64 2, !dbg !6662
  store float %add11, float* %arrayidx12, align 4, !dbg !6663
  ret void, !dbg !6664
}

declare dso_local void @glColor4ub(i8 zeroext, i8 zeroext, i8 zeroext, i8 zeroext) #3

; Function Attrs: noinline nounwind uwtable
define internal float @normalize_v3_v3(float* %r, float* %a) #0 !dbg !6665 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %d = alloca float, align 4
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !6668, metadata !DIExpression()), !dbg !6669
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !6670, metadata !DIExpression()), !dbg !6671
  call void @llvm.dbg.declare(metadata float* %d, metadata !6672, metadata !DIExpression()), !dbg !6673
  %0 = load float*, float** %a.addr, align 8, !dbg !6674
  %1 = load float*, float** %a.addr, align 8, !dbg !6675
  %call = call float @dot_v3v3(float* %0, float* %1), !dbg !6676
  store float %call, float* %d, align 4, !dbg !6673
  %2 = load float, float* %d, align 4, !dbg !6677
  %cmp = fcmp ogt float %2, 0x38AA95A5C0000000, !dbg !6679
  br i1 %cmp, label %if.then, label %if.else, !dbg !6680

if.then:                                          ; preds = %entry
  %3 = load float, float* %d, align 4, !dbg !6681
  %call1 = call float @sqrtf(float %3) #7, !dbg !6683
  store float %call1, float* %d, align 4, !dbg !6684
  %4 = load float*, float** %r.addr, align 8, !dbg !6685
  %5 = load float*, float** %a.addr, align 8, !dbg !6686
  %6 = load float, float* %d, align 4, !dbg !6687
  %div = fdiv float 1.000000e+00, %6, !dbg !6688
  call void @mul_v3_v3fl(float* %4, float* %5, float %div), !dbg !6689
  br label %if.end, !dbg !6690

if.else:                                          ; preds = %entry
  %7 = load float*, float** %r.addr, align 8, !dbg !6691
  call void @zero_v3(float* %7), !dbg !6693
  store float 0.000000e+00, float* %d, align 4, !dbg !6694
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %8 = load float, float* %d, align 4, !dbg !6695
  ret float %8, !dbg !6696
}

; Function Attrs: noinline nounwind uwtable
define internal void @mul_v3_v3fl(float* %r, float* %a, float %f) #0 !dbg !6697 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %f.addr = alloca float, align 4
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !6700, metadata !DIExpression()), !dbg !6701
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !6702, metadata !DIExpression()), !dbg !6703
  store float %f, float* %f.addr, align 4
  call void @llvm.dbg.declare(metadata float* %f.addr, metadata !6704, metadata !DIExpression()), !dbg !6705
  %0 = load float*, float** %a.addr, align 8, !dbg !6706
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !6706
  %1 = load float, float* %arrayidx, align 4, !dbg !6706
  %2 = load float, float* %f.addr, align 4, !dbg !6707
  %mul = fmul float %1, %2, !dbg !6708
  %3 = load float*, float** %r.addr, align 8, !dbg !6709
  %arrayidx1 = getelementptr inbounds float, float* %3, i64 0, !dbg !6709
  store float %mul, float* %arrayidx1, align 4, !dbg !6710
  %4 = load float*, float** %a.addr, align 8, !dbg !6711
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !6711
  %5 = load float, float* %arrayidx2, align 4, !dbg !6711
  %6 = load float, float* %f.addr, align 4, !dbg !6712
  %mul3 = fmul float %5, %6, !dbg !6713
  %7 = load float*, float** %r.addr, align 8, !dbg !6714
  %arrayidx4 = getelementptr inbounds float, float* %7, i64 1, !dbg !6714
  store float %mul3, float* %arrayidx4, align 4, !dbg !6715
  %8 = load float*, float** %a.addr, align 8, !dbg !6716
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !6716
  %9 = load float, float* %arrayidx5, align 4, !dbg !6716
  %10 = load float, float* %f.addr, align 4, !dbg !6717
  %mul6 = fmul float %9, %10, !dbg !6718
  %11 = load float*, float** %r.addr, align 8, !dbg !6719
  %arrayidx7 = getelementptr inbounds float, float* %11, i64 2, !dbg !6719
  store float %mul6, float* %arrayidx7, align 4, !dbg !6720
  ret void, !dbg !6721
}

declare dso_local void @ED_armature_ebone_to_mat4(%struct.EditBone*, [4 x float]*) #3

declare dso_local %struct.GLUquadric* @gluNewQuadric() #3

declare dso_local void @glRotatef(float, float, float, float) #3

declare dso_local void @gluQuadricDrawStyle(%struct.GLUquadric*, i32) #3

declare dso_local void @glShadeModel(i32) #3

declare dso_local void @UI_ThemeColorShade(i32, i32) #3

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @set_pchan_glColor(i16 signext %colCode, i32 %boneflag, i16 signext %constflag) #0 !dbg !6722 {
entry:
  %retval = alloca i8, align 1
  %colCode.addr = alloca i16, align 2
  %boneflag.addr = alloca i32, align 4
  %constflag.addr = alloca i16, align 2
  %cp = alloca [3 x i8], align 1
  %cp79 = alloca [3 x i8], align 1
  %cp115 = alloca [3 x i8], align 1
  %cp193 = alloca i8*, align 8
  store i16 %colCode, i16* %colCode.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %colCode.addr, metadata !6725, metadata !DIExpression()), !dbg !6726
  store i32 %boneflag, i32* %boneflag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %boneflag.addr, metadata !6727, metadata !DIExpression()), !dbg !6728
  store i16 %constflag, i16* %constflag.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %constflag.addr, metadata !6729, metadata !DIExpression()), !dbg !6730
  %0 = load i16, i16* %colCode.addr, align 2, !dbg !6731
  %conv = sext i16 %0 to i32, !dbg !6731
  switch i32 %conv, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb39
    i32 2, label %sw.bb46
    i32 3, label %sw.bb76
    i32 4, label %sw.bb112
    i32 5, label %sw.bb151
  ], !dbg !6732

sw.bb:                                            ; preds = %entry
  %1 = load %struct.ThemeWireColor*, %struct.ThemeWireColor** @bcolor, align 8, !dbg !6733
  %tobool = icmp ne %struct.ThemeWireColor* %1, null, !dbg !6733
  br i1 %tobool, label %if.then, label %if.else20, !dbg !6737

if.then:                                          ; preds = %sw.bb
  call void @llvm.dbg.declare(metadata [3 x i8]* %cp, metadata !6738, metadata !DIExpression()), !dbg !6741
  %2 = load i32, i32* %boneflag.addr, align 4, !dbg !6742
  %and = and i32 %2, 256, !dbg !6744
  %tobool1 = icmp ne i32 %and, 0, !dbg !6744
  br i1 %tobool1, label %if.then2, label %if.else, !dbg !6745

if.then2:                                         ; preds = %if.then
  %arraydecay = getelementptr inbounds [3 x i8], [3 x i8]* %cp, i64 0, i64 0, !dbg !6746
  %3 = load %struct.ThemeWireColor*, %struct.ThemeWireColor** @bcolor, align 8, !dbg !6748
  %active = getelementptr inbounds %struct.ThemeWireColor, %struct.ThemeWireColor* %3, i32 0, i32 2, !dbg !6749
  %arraydecay3 = getelementptr inbounds [4 x i8], [4 x i8]* %active, i64 0, i64 0, !dbg !6748
  call void @copy_v3_v3_char(i8* %arraydecay, i8* %arraydecay3), !dbg !6750
  %4 = load i32, i32* %boneflag.addr, align 4, !dbg !6751
  %and4 = and i32 %4, 1, !dbg !6753
  %tobool5 = icmp ne i32 %and4, 0, !dbg !6753
  br i1 %tobool5, label %if.end, label %if.then6, !dbg !6754

if.then6:                                         ; preds = %if.then2
  %arraydecay7 = getelementptr inbounds [3 x i8], [3 x i8]* %cp, i64 0, i64 0, !dbg !6755
  call void @cp_shade_color3ub(i8* %arraydecay7, i32 -80), !dbg !6757
  br label %if.end, !dbg !6758

if.end:                                           ; preds = %if.then6, %if.then2
  br label %if.end18, !dbg !6759

if.else:                                          ; preds = %if.then
  %5 = load i32, i32* %boneflag.addr, align 4, !dbg !6760
  %and8 = and i32 %5, 1, !dbg !6762
  %tobool9 = icmp ne i32 %and8, 0, !dbg !6762
  br i1 %tobool9, label %if.then10, label %if.else13, !dbg !6763

if.then10:                                        ; preds = %if.else
  %arraydecay11 = getelementptr inbounds [3 x i8], [3 x i8]* %cp, i64 0, i64 0, !dbg !6764
  %6 = load %struct.ThemeWireColor*, %struct.ThemeWireColor** @bcolor, align 8, !dbg !6766
  %select = getelementptr inbounds %struct.ThemeWireColor, %struct.ThemeWireColor* %6, i32 0, i32 1, !dbg !6767
  %arraydecay12 = getelementptr inbounds [4 x i8], [4 x i8]* %select, i64 0, i64 0, !dbg !6766
  call void @copy_v3_v3_char(i8* %arraydecay11, i8* %arraydecay12), !dbg !6768
  br label %if.end17, !dbg !6769

if.else13:                                        ; preds = %if.else
  %arraydecay14 = getelementptr inbounds [3 x i8], [3 x i8]* %cp, i64 0, i64 0, !dbg !6770
  %7 = load %struct.ThemeWireColor*, %struct.ThemeWireColor** @bcolor, align 8, !dbg !6772
  %solid = getelementptr inbounds %struct.ThemeWireColor, %struct.ThemeWireColor* %7, i32 0, i32 0, !dbg !6773
  %arraydecay15 = getelementptr inbounds [4 x i8], [4 x i8]* %solid, i64 0, i64 0, !dbg !6772
  call void @copy_v3_v3_char(i8* %arraydecay14, i8* %arraydecay15), !dbg !6774
  %arraydecay16 = getelementptr inbounds [3 x i8], [3 x i8]* %cp, i64 0, i64 0, !dbg !6775
  call void @cp_shade_color3ub(i8* %arraydecay16, i32 -50), !dbg !6776
  br label %if.end17

if.end17:                                         ; preds = %if.else13, %if.then10
  br label %if.end18

if.end18:                                         ; preds = %if.end17, %if.end
  %arraydecay19 = getelementptr inbounds [3 x i8], [3 x i8]* %cp, i64 0, i64 0, !dbg !6777
  call void @glColor3ubv(i8* %arraydecay19), !dbg !6778
  br label %if.end38, !dbg !6779

if.else20:                                        ; preds = %sw.bb
  %8 = load i32, i32* %boneflag.addr, align 4, !dbg !6780
  %and21 = and i32 %8, 256, !dbg !6783
  %tobool22 = icmp ne i32 %and21, 0, !dbg !6783
  br i1 %tobool22, label %land.lhs.true, label %if.else26, !dbg !6784

land.lhs.true:                                    ; preds = %if.else20
  %9 = load i32, i32* %boneflag.addr, align 4, !dbg !6785
  %and23 = and i32 %9, 1, !dbg !6786
  %tobool24 = icmp ne i32 %and23, 0, !dbg !6786
  br i1 %tobool24, label %if.then25, label %if.else26, !dbg !6787

if.then25:                                        ; preds = %land.lhs.true
  call void @UI_ThemeColor(i32 76), !dbg !6788
  br label %if.end37, !dbg !6790

if.else26:                                        ; preds = %land.lhs.true, %if.else20
  %10 = load i32, i32* %boneflag.addr, align 4, !dbg !6791
  %and27 = and i32 %10, 256, !dbg !6793
  %tobool28 = icmp ne i32 %and27, 0, !dbg !6793
  br i1 %tobool28, label %if.then29, label %if.else30, !dbg !6794

if.then29:                                        ; preds = %if.else26
  call void @UI_ThemeColorBlend(i32 25, i32 75, float 0x3FC3333340000000), !dbg !6795
  br label %if.end36, !dbg !6797

if.else30:                                        ; preds = %if.else26
  %11 = load i32, i32* %boneflag.addr, align 4, !dbg !6798
  %and31 = and i32 %11, 1, !dbg !6800
  %tobool32 = icmp ne i32 %and31, 0, !dbg !6800
  br i1 %tobool32, label %if.then33, label %if.else34, !dbg !6801

if.then33:                                        ; preds = %if.else30
  call void @UI_ThemeColor(i32 75), !dbg !6802
  br label %if.end35, !dbg !6804

if.else34:                                        ; preds = %if.else30
  call void @UI_ThemeColor(i32 25), !dbg !6805
  br label %if.end35

if.end35:                                         ; preds = %if.else34, %if.then33
  br label %if.end36

if.end36:                                         ; preds = %if.end35, %if.then29
  br label %if.end37

if.end37:                                         ; preds = %if.end36, %if.then25
  br label %if.end38

if.end38:                                         ; preds = %if.end37, %if.end18
  store i8 1, i8* %retval, align 1, !dbg !6807
  br label %return, !dbg !6807

sw.bb39:                                          ; preds = %entry
  %12 = load %struct.ThemeWireColor*, %struct.ThemeWireColor** @bcolor, align 8, !dbg !6808
  %tobool40 = icmp ne %struct.ThemeWireColor* %12, null, !dbg !6808
  br i1 %tobool40, label %if.then41, label %if.else44, !dbg !6811

if.then41:                                        ; preds = %sw.bb39
  %13 = load %struct.ThemeWireColor*, %struct.ThemeWireColor** @bcolor, align 8, !dbg !6812
  %solid42 = getelementptr inbounds %struct.ThemeWireColor, %struct.ThemeWireColor* %13, i32 0, i32 0, !dbg !6814
  %arraydecay43 = getelementptr inbounds [4 x i8], [4 x i8]* %solid42, i64 0, i64 0, !dbg !6812
  call void @glColor3ubv(i8* %arraydecay43), !dbg !6815
  br label %if.end45, !dbg !6816

if.else44:                                        ; preds = %sw.bb39
  call void @UI_ThemeColor(i32 74), !dbg !6817
  br label %if.end45

if.end45:                                         ; preds = %if.else44, %if.then41
  store i8 1, i8* %retval, align 1, !dbg !6818
  br label %return, !dbg !6818

sw.bb46:                                          ; preds = %entry
  %14 = load %struct.ThemeWireColor*, %struct.ThemeWireColor** @bcolor, align 8, !dbg !6819
  %cmp = icmp eq %struct.ThemeWireColor* %14, null, !dbg !6822
  br i1 %cmp, label %if.then51, label %lor.lhs.false, !dbg !6823

lor.lhs.false:                                    ; preds = %sw.bb46
  %15 = load %struct.ThemeWireColor*, %struct.ThemeWireColor** @bcolor, align 8, !dbg !6824
  %flag = getelementptr inbounds %struct.ThemeWireColor, %struct.ThemeWireColor* %15, i32 0, i32 3, !dbg !6825
  %16 = load i16, i16* %flag, align 2, !dbg !6825
  %conv48 = sext i16 %16 to i32, !dbg !6824
  %and49 = and i32 %conv48, 1, !dbg !6826
  %tobool50 = icmp ne i32 %and49, 0, !dbg !6826
  br i1 %tobool50, label %if.then51, label %if.end75, !dbg !6827

if.then51:                                        ; preds = %lor.lhs.false, %sw.bb46
  %17 = load i16, i16* %constflag.addr, align 2, !dbg !6828
  %conv52 = sext i16 %17 to i32, !dbg !6828
  %and53 = and i32 %conv52, 8, !dbg !6831
  %tobool54 = icmp ne i32 %and53, 0, !dbg !6831
  br i1 %tobool54, label %if.then55, label %if.else56, !dbg !6832

if.then55:                                        ; preds = %if.then51
  call void @glColor4ub(i8 zeroext -1, i8 zeroext -106, i8 zeroext 0, i8 zeroext 80), !dbg !6833
  br label %if.end74, !dbg !6833

if.else56:                                        ; preds = %if.then51
  %18 = load i16, i16* %constflag.addr, align 2, !dbg !6834
  %conv57 = sext i16 %18 to i32, !dbg !6834
  %and58 = and i32 %conv57, 1, !dbg !6836
  %tobool59 = icmp ne i32 %and58, 0, !dbg !6836
  br i1 %tobool59, label %if.then60, label %if.else61, !dbg !6837

if.then60:                                        ; preds = %if.else56
  call void @glColor4ub(i8 zeroext -1, i8 zeroext -1, i8 zeroext 0, i8 zeroext 80), !dbg !6838
  br label %if.end73, !dbg !6838

if.else61:                                        ; preds = %if.else56
  %19 = load i16, i16* %constflag.addr, align 2, !dbg !6839
  %conv62 = sext i16 %19 to i32, !dbg !6839
  %and63 = and i32 %conv62, 32, !dbg !6841
  %tobool64 = icmp ne i32 %and63, 0, !dbg !6841
  br i1 %tobool64, label %if.then65, label %if.else66, !dbg !6842

if.then65:                                        ; preds = %if.else61
  call void @glColor4ub(i8 zeroext -56, i8 zeroext -1, i8 zeroext 0, i8 zeroext 80), !dbg !6843
  br label %if.end72, !dbg !6843

if.else66:                                        ; preds = %if.else61
  %20 = load i16, i16* %constflag.addr, align 2, !dbg !6844
  %conv67 = sext i16 %20 to i32, !dbg !6844
  %and68 = and i32 %conv67, 2, !dbg !6846
  %tobool69 = icmp ne i32 %and68, 0, !dbg !6846
  br i1 %tobool69, label %if.then70, label %if.end71, !dbg !6847

if.then70:                                        ; preds = %if.else66
  call void @glColor4ub(i8 zeroext 0, i8 zeroext -1, i8 zeroext 120, i8 zeroext 80), !dbg !6848
  br label %if.end71, !dbg !6848

if.end71:                                         ; preds = %if.then70, %if.else66
  br label %if.end72

if.end72:                                         ; preds = %if.end71, %if.then65
  br label %if.end73

if.end73:                                         ; preds = %if.end72, %if.then60
  br label %if.end74

if.end74:                                         ; preds = %if.end73, %if.then55
  store i8 1, i8* %retval, align 1, !dbg !6849
  br label %return, !dbg !6849

if.end75:                                         ; preds = %lor.lhs.false
  store i8 0, i8* %retval, align 1, !dbg !6850
  br label %return, !dbg !6850

sw.bb76:                                          ; preds = %entry
  %21 = load %struct.ThemeWireColor*, %struct.ThemeWireColor** @bcolor, align 8, !dbg !6851
  %tobool77 = icmp ne %struct.ThemeWireColor* %21, null, !dbg !6851
  br i1 %tobool77, label %if.then78, label %if.else100, !dbg !6854

if.then78:                                        ; preds = %sw.bb76
  call void @llvm.dbg.declare(metadata [3 x i8]* %cp79, metadata !6855, metadata !DIExpression()), !dbg !6857
  %22 = load i32, i32* %boneflag.addr, align 4, !dbg !6858
  %and80 = and i32 %22, 256, !dbg !6860
  %tobool81 = icmp ne i32 %and80, 0, !dbg !6860
  br i1 %tobool81, label %if.then82, label %if.else86, !dbg !6861

if.then82:                                        ; preds = %if.then78
  %arraydecay83 = getelementptr inbounds [3 x i8], [3 x i8]* %cp79, i64 0, i64 0, !dbg !6862
  %23 = load %struct.ThemeWireColor*, %struct.ThemeWireColor** @bcolor, align 8, !dbg !6864
  %active84 = getelementptr inbounds %struct.ThemeWireColor, %struct.ThemeWireColor* %23, i32 0, i32 2, !dbg !6865
  %arraydecay85 = getelementptr inbounds [4 x i8], [4 x i8]* %active84, i64 0, i64 0, !dbg !6864
  call void @copy_v3_v3_char(i8* %arraydecay83, i8* %arraydecay85), !dbg !6866
  br label %if.end98, !dbg !6867

if.else86:                                        ; preds = %if.then78
  %24 = load i32, i32* %boneflag.addr, align 4, !dbg !6868
  %and87 = and i32 %24, 1, !dbg !6870
  %tobool88 = icmp ne i32 %and87, 0, !dbg !6870
  br i1 %tobool88, label %if.then89, label %if.else93, !dbg !6871

if.then89:                                        ; preds = %if.else86
  %arraydecay90 = getelementptr inbounds [3 x i8], [3 x i8]* %cp79, i64 0, i64 0, !dbg !6872
  %25 = load %struct.ThemeWireColor*, %struct.ThemeWireColor** @bcolor, align 8, !dbg !6874
  %select91 = getelementptr inbounds %struct.ThemeWireColor, %struct.ThemeWireColor* %25, i32 0, i32 1, !dbg !6875
  %arraydecay92 = getelementptr inbounds [4 x i8], [4 x i8]* %select91, i64 0, i64 0, !dbg !6874
  call void @copy_v3_v3_char(i8* %arraydecay90, i8* %arraydecay92), !dbg !6876
  br label %if.end97, !dbg !6877

if.else93:                                        ; preds = %if.else86
  %arraydecay94 = getelementptr inbounds [3 x i8], [3 x i8]* %cp79, i64 0, i64 0, !dbg !6878
  %26 = load %struct.ThemeWireColor*, %struct.ThemeWireColor** @bcolor, align 8, !dbg !6880
  %solid95 = getelementptr inbounds %struct.ThemeWireColor, %struct.ThemeWireColor* %26, i32 0, i32 0, !dbg !6881
  %arraydecay96 = getelementptr inbounds [4 x i8], [4 x i8]* %solid95, i64 0, i64 0, !dbg !6880
  call void @copy_v3_v3_char(i8* %arraydecay94, i8* %arraydecay96), !dbg !6882
  br label %if.end97

if.end97:                                         ; preds = %if.else93, %if.then89
  br label %if.end98

if.end98:                                         ; preds = %if.end97, %if.then82
  %arraydecay99 = getelementptr inbounds [3 x i8], [3 x i8]* %cp79, i64 0, i64 0, !dbg !6883
  call void @glColor3ubv(i8* %arraydecay99), !dbg !6884
  br label %if.end111, !dbg !6885

if.else100:                                       ; preds = %sw.bb76
  %27 = load i32, i32* %boneflag.addr, align 4, !dbg !6886
  %and101 = and i32 %27, 256, !dbg !6889
  %tobool102 = icmp ne i32 %and101, 0, !dbg !6889
  br i1 %tobool102, label %if.then103, label %if.else104, !dbg !6890

if.then103:                                       ; preds = %if.else100
  call void @UI_ThemeColorShade(i32 75, i32 40), !dbg !6891
  br label %if.end110, !dbg !6891

if.else104:                                       ; preds = %if.else100
  %28 = load i32, i32* %boneflag.addr, align 4, !dbg !6892
  %and105 = and i32 %28, 1, !dbg !6894
  %tobool106 = icmp ne i32 %and105, 0, !dbg !6894
  br i1 %tobool106, label %if.then107, label %if.else108, !dbg !6895

if.then107:                                       ; preds = %if.else104
  call void @UI_ThemeColor(i32 75), !dbg !6896
  br label %if.end109, !dbg !6896

if.else108:                                       ; preds = %if.else104
  call void @UI_ThemeColor(i32 74), !dbg !6897
  br label %if.end109

if.end109:                                        ; preds = %if.else108, %if.then107
  br label %if.end110

if.end110:                                        ; preds = %if.end109, %if.then103
  br label %if.end111

if.end111:                                        ; preds = %if.end110, %if.end98
  store i8 1, i8* %retval, align 1, !dbg !6898
  br label %return, !dbg !6898

sw.bb112:                                         ; preds = %entry
  %29 = load %struct.ThemeWireColor*, %struct.ThemeWireColor** @bcolor, align 8, !dbg !6899
  %tobool113 = icmp ne %struct.ThemeWireColor* %29, null, !dbg !6899
  br i1 %tobool113, label %if.then114, label %if.else139, !dbg !6902

if.then114:                                       ; preds = %sw.bb112
  call void @llvm.dbg.declare(metadata [3 x i8]* %cp115, metadata !6903, metadata !DIExpression()), !dbg !6905
  %30 = load i32, i32* %boneflag.addr, align 4, !dbg !6906
  %and116 = and i32 %30, 256, !dbg !6908
  %tobool117 = icmp ne i32 %and116, 0, !dbg !6908
  br i1 %tobool117, label %if.then118, label %if.else123, !dbg !6909

if.then118:                                       ; preds = %if.then114
  %arraydecay119 = getelementptr inbounds [3 x i8], [3 x i8]* %cp115, i64 0, i64 0, !dbg !6910
  %31 = load %struct.ThemeWireColor*, %struct.ThemeWireColor** @bcolor, align 8, !dbg !6912
  %active120 = getelementptr inbounds %struct.ThemeWireColor, %struct.ThemeWireColor* %31, i32 0, i32 2, !dbg !6913
  %arraydecay121 = getelementptr inbounds [4 x i8], [4 x i8]* %active120, i64 0, i64 0, !dbg !6912
  call void @copy_v3_v3_char(i8* %arraydecay119, i8* %arraydecay121), !dbg !6914
  %arraydecay122 = getelementptr inbounds [3 x i8], [3 x i8]* %cp115, i64 0, i64 0, !dbg !6915
  call void @cp_shade_color3ub(i8* %arraydecay122, i32 10), !dbg !6916
  br label %if.end137, !dbg !6917

if.else123:                                       ; preds = %if.then114
  %32 = load i32, i32* %boneflag.addr, align 4, !dbg !6918
  %and124 = and i32 %32, 1, !dbg !6920
  %tobool125 = icmp ne i32 %and124, 0, !dbg !6920
  br i1 %tobool125, label %if.then126, label %if.else131, !dbg !6921

if.then126:                                       ; preds = %if.else123
  %arraydecay127 = getelementptr inbounds [3 x i8], [3 x i8]* %cp115, i64 0, i64 0, !dbg !6922
  %33 = load %struct.ThemeWireColor*, %struct.ThemeWireColor** @bcolor, align 8, !dbg !6924
  %select128 = getelementptr inbounds %struct.ThemeWireColor, %struct.ThemeWireColor* %33, i32 0, i32 1, !dbg !6925
  %arraydecay129 = getelementptr inbounds [4 x i8], [4 x i8]* %select128, i64 0, i64 0, !dbg !6924
  call void @copy_v3_v3_char(i8* %arraydecay127, i8* %arraydecay129), !dbg !6926
  %arraydecay130 = getelementptr inbounds [3 x i8], [3 x i8]* %cp115, i64 0, i64 0, !dbg !6927
  call void @cp_shade_color3ub(i8* %arraydecay130, i32 -30), !dbg !6928
  br label %if.end136, !dbg !6929

if.else131:                                       ; preds = %if.else123
  %arraydecay132 = getelementptr inbounds [3 x i8], [3 x i8]* %cp115, i64 0, i64 0, !dbg !6930
  %34 = load %struct.ThemeWireColor*, %struct.ThemeWireColor** @bcolor, align 8, !dbg !6932
  %solid133 = getelementptr inbounds %struct.ThemeWireColor, %struct.ThemeWireColor* %34, i32 0, i32 0, !dbg !6933
  %arraydecay134 = getelementptr inbounds [4 x i8], [4 x i8]* %solid133, i64 0, i64 0, !dbg !6932
  call void @copy_v3_v3_char(i8* %arraydecay132, i8* %arraydecay134), !dbg !6934
  %arraydecay135 = getelementptr inbounds [3 x i8], [3 x i8]* %cp115, i64 0, i64 0, !dbg !6935
  call void @cp_shade_color3ub(i8* %arraydecay135, i32 -30), !dbg !6936
  br label %if.end136

if.end136:                                        ; preds = %if.else131, %if.then126
  br label %if.end137

if.end137:                                        ; preds = %if.end136, %if.then118
  %arraydecay138 = getelementptr inbounds [3 x i8], [3 x i8]* %cp115, i64 0, i64 0, !dbg !6937
  call void @glColor3ubv(i8* %arraydecay138), !dbg !6938
  br label %if.end150, !dbg !6939

if.else139:                                       ; preds = %sw.bb112
  %35 = load i32, i32* %boneflag.addr, align 4, !dbg !6940
  %and140 = and i32 %35, 256, !dbg !6943
  %tobool141 = icmp ne i32 %and140, 0, !dbg !6943
  br i1 %tobool141, label %if.then142, label %if.else143, !dbg !6944

if.then142:                                       ; preds = %if.else139
  call void @UI_ThemeColorShade(i32 75, i32 10), !dbg !6945
  br label %if.end149, !dbg !6945

if.else143:                                       ; preds = %if.else139
  %36 = load i32, i32* %boneflag.addr, align 4, !dbg !6946
  %and144 = and i32 %36, 1, !dbg !6948
  %tobool145 = icmp ne i32 %and144, 0, !dbg !6948
  br i1 %tobool145, label %if.then146, label %if.else147, !dbg !6949

if.then146:                                       ; preds = %if.else143
  call void @UI_ThemeColorShade(i32 75, i32 -30), !dbg !6950
  br label %if.end148, !dbg !6950

if.else147:                                       ; preds = %if.else143
  call void @UI_ThemeColorShade(i32 74, i32 -30), !dbg !6951
  br label %if.end148

if.end148:                                        ; preds = %if.else147, %if.then146
  br label %if.end149

if.end149:                                        ; preds = %if.end148, %if.then142
  br label %if.end150

if.end150:                                        ; preds = %if.end149, %if.end137
  br label %sw.epilog, !dbg !6952

sw.bb151:                                         ; preds = %entry
  %37 = load i16, i16* %constflag.addr, align 2, !dbg !6953
  %conv152 = sext i16 %37 to i32, !dbg !6956
  %tobool153 = icmp ne i32 %conv152, 0, !dbg !6956
  br i1 %tobool153, label %land.lhs.true154, label %if.else190, !dbg !6957

land.lhs.true154:                                 ; preds = %sw.bb151
  %38 = load %struct.ThemeWireColor*, %struct.ThemeWireColor** @bcolor, align 8, !dbg !6958
  %cmp155 = icmp eq %struct.ThemeWireColor* %38, null, !dbg !6959
  br i1 %cmp155, label %if.then162, label %lor.lhs.false157, !dbg !6960

lor.lhs.false157:                                 ; preds = %land.lhs.true154
  %39 = load %struct.ThemeWireColor*, %struct.ThemeWireColor** @bcolor, align 8, !dbg !6961
  %flag158 = getelementptr inbounds %struct.ThemeWireColor, %struct.ThemeWireColor* %39, i32 0, i32 3, !dbg !6962
  %40 = load i16, i16* %flag158, align 2, !dbg !6962
  %conv159 = sext i16 %40 to i32, !dbg !6961
  %and160 = and i32 %conv159, 1, !dbg !6963
  %tobool161 = icmp ne i32 %and160, 0, !dbg !6963
  br i1 %tobool161, label %if.then162, label %if.else190, !dbg !6964

if.then162:                                       ; preds = %lor.lhs.false157, %land.lhs.true154
  %41 = load i16, i16* %constflag.addr, align 2, !dbg !6965
  %conv163 = sext i16 %41 to i32, !dbg !6965
  %and164 = and i32 %conv163, 8, !dbg !6968
  %tobool165 = icmp ne i32 %and164, 0, !dbg !6968
  br i1 %tobool165, label %if.then166, label %if.else167, !dbg !6969

if.then166:                                       ; preds = %if.then162
  call void @glColor3ub(i8 zeroext -1, i8 zeroext -106, i8 zeroext 0), !dbg !6970
  br label %if.end189, !dbg !6970

if.else167:                                       ; preds = %if.then162
  %42 = load i16, i16* %constflag.addr, align 2, !dbg !6971
  %conv168 = sext i16 %42 to i32, !dbg !6971
  %and169 = and i32 %conv168, 1, !dbg !6973
  %tobool170 = icmp ne i32 %and169, 0, !dbg !6973
  br i1 %tobool170, label %if.then171, label %if.else172, !dbg !6974

if.then171:                                       ; preds = %if.else167
  call void @glColor3ub(i8 zeroext -1, i8 zeroext -1, i8 zeroext 0), !dbg !6975
  br label %if.end188, !dbg !6975

if.else172:                                       ; preds = %if.else167
  %43 = load i16, i16* %constflag.addr, align 2, !dbg !6976
  %conv173 = sext i16 %43 to i32, !dbg !6976
  %and174 = and i32 %conv173, 32, !dbg !6978
  %tobool175 = icmp ne i32 %and174, 0, !dbg !6978
  br i1 %tobool175, label %if.then176, label %if.else177, !dbg !6979

if.then176:                                       ; preds = %if.else172
  call void @glColor3ub(i8 zeroext -56, i8 zeroext -1, i8 zeroext 0), !dbg !6980
  br label %if.end187, !dbg !6980

if.else177:                                       ; preds = %if.else172
  %44 = load i16, i16* %constflag.addr, align 2, !dbg !6981
  %conv178 = sext i16 %44 to i32, !dbg !6981
  %and179 = and i32 %conv178, 2, !dbg !6983
  %tobool180 = icmp ne i32 %and179, 0, !dbg !6983
  br i1 %tobool180, label %if.then181, label %if.else182, !dbg !6984

if.then181:                                       ; preds = %if.else177
  call void @glColor3ub(i8 zeroext 0, i8 zeroext -1, i8 zeroext 120), !dbg !6985
  br label %if.end186, !dbg !6985

if.else182:                                       ; preds = %if.else177
  %45 = load i16, i16* %constflag.addr, align 2, !dbg !6986
  %tobool183 = icmp ne i16 %45, 0, !dbg !6986
  br i1 %tobool183, label %if.then184, label %if.end185, !dbg !6988

if.then184:                                       ; preds = %if.else182
  call void @UI_ThemeColor(i32 75), !dbg !6989
  br label %if.end185, !dbg !6989

if.end185:                                        ; preds = %if.then184, %if.else182
  br label %if.end186

if.end186:                                        ; preds = %if.end185, %if.then181
  br label %if.end187

if.end187:                                        ; preds = %if.end186, %if.then176
  br label %if.end188

if.end188:                                        ; preds = %if.end187, %if.then171
  br label %if.end189

if.end189:                                        ; preds = %if.end188, %if.then166
  br label %if.end200, !dbg !6990

if.else190:                                       ; preds = %lor.lhs.false157, %sw.bb151
  %46 = load %struct.ThemeWireColor*, %struct.ThemeWireColor** @bcolor, align 8, !dbg !6991
  %tobool191 = icmp ne %struct.ThemeWireColor* %46, null, !dbg !6991
  br i1 %tobool191, label %if.then192, label %if.else198, !dbg !6994

if.then192:                                       ; preds = %if.else190
  call void @llvm.dbg.declare(metadata i8** %cp193, metadata !6995, metadata !DIExpression()), !dbg !6999
  %47 = load %struct.ThemeWireColor*, %struct.ThemeWireColor** @bcolor, align 8, !dbg !7000
  %solid194 = getelementptr inbounds %struct.ThemeWireColor, %struct.ThemeWireColor* %47, i32 0, i32 0, !dbg !7001
  %arraydecay195 = getelementptr inbounds [4 x i8], [4 x i8]* %solid194, i64 0, i64 0, !dbg !7000
  store i8* %arraydecay195, i8** %cp193, align 8, !dbg !6999
  %48 = load i8*, i8** %cp193, align 8, !dbg !7002
  %arrayidx = getelementptr inbounds i8, i8* %48, i64 0, !dbg !7002
  %49 = load i8, i8* %arrayidx, align 1, !dbg !7002
  %50 = load i8*, i8** %cp193, align 8, !dbg !7003
  %arrayidx196 = getelementptr inbounds i8, i8* %50, i64 1, !dbg !7003
  %51 = load i8, i8* %arrayidx196, align 1, !dbg !7003
  %52 = load i8*, i8** %cp193, align 8, !dbg !7004
  %arrayidx197 = getelementptr inbounds i8, i8* %52, i64 2, !dbg !7004
  %53 = load i8, i8* %arrayidx197, align 1, !dbg !7004
  call void @glColor4ub(i8 zeroext %49, i8 zeroext %51, i8 zeroext %53, i8 zeroext -52), !dbg !7005
  br label %if.end199, !dbg !7006

if.else198:                                       ; preds = %if.else190
  call void @UI_ThemeColorShade(i32 2, i32 -30), !dbg !7007
  br label %if.end199

if.end199:                                        ; preds = %if.else198, %if.then192
  br label %if.end200

if.end200:                                        ; preds = %if.end199, %if.end189
  store i8 1, i8* %retval, align 1, !dbg !7008
  br label %return, !dbg !7008

sw.epilog:                                        ; preds = %entry, %if.end150
  store i8 0, i8* %retval, align 1, !dbg !7009
  br label %return, !dbg !7009

return:                                           ; preds = %sw.epilog, %if.end200, %if.end111, %if.end75, %if.end74, %if.end45, %if.end38
  %54 = load i8, i8* %retval, align 1, !dbg !7010
  ret i8 %54, !dbg !7010
}

declare dso_local void @gluSphere(%struct.GLUquadric*, double, i32, i32) #3

declare dso_local void @glTranslatef(float, float, float) #3

declare dso_local void @glPolygonOffset(float, float) #3

declare dso_local void @gluCylinder(%struct.GLUquadric*, double, double, double, i32, i32) #3

declare dso_local void @gluDeleteQuadric(%struct.GLUquadric*) #3

; Function Attrs: noinline nounwind uwtable
define internal void @copy_v3_v3_char(i8* %r, i8* %a) #0 !dbg !7011 {
entry:
  %r.addr = alloca i8*, align 8
  %a.addr = alloca i8*, align 8
  store i8* %r, i8** %r.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %r.addr, metadata !7014, metadata !DIExpression()), !dbg !7015
  store i8* %a, i8** %a.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !7016, metadata !DIExpression()), !dbg !7017
  %0 = load i8*, i8** %a.addr, align 8, !dbg !7018
  %arrayidx = getelementptr inbounds i8, i8* %0, i64 0, !dbg !7018
  %1 = load i8, i8* %arrayidx, align 1, !dbg !7018
  %2 = load i8*, i8** %r.addr, align 8, !dbg !7019
  %arrayidx1 = getelementptr inbounds i8, i8* %2, i64 0, !dbg !7019
  store i8 %1, i8* %arrayidx1, align 1, !dbg !7020
  %3 = load i8*, i8** %a.addr, align 8, !dbg !7021
  %arrayidx2 = getelementptr inbounds i8, i8* %3, i64 1, !dbg !7021
  %4 = load i8, i8* %arrayidx2, align 1, !dbg !7021
  %5 = load i8*, i8** %r.addr, align 8, !dbg !7022
  %arrayidx3 = getelementptr inbounds i8, i8* %5, i64 1, !dbg !7022
  store i8 %4, i8* %arrayidx3, align 1, !dbg !7023
  %6 = load i8*, i8** %a.addr, align 8, !dbg !7024
  %arrayidx4 = getelementptr inbounds i8, i8* %6, i64 2, !dbg !7024
  %7 = load i8, i8* %arrayidx4, align 1, !dbg !7024
  %8 = load i8*, i8** %r.addr, align 8, !dbg !7025
  %arrayidx5 = getelementptr inbounds i8, i8* %8, i64 2, !dbg !7025
  store i8 %7, i8* %arrayidx5, align 1, !dbg !7026
  ret void, !dbg !7027
}

; Function Attrs: noinline nounwind uwtable
define internal void @cp_shade_color3ub(i8* %cp, i32 %offset) #0 !dbg !7028 {
entry:
  %cp.addr = alloca i8*, align 8
  %offset.addr = alloca i32, align 4
  %r = alloca i32, align 4
  %g = alloca i32, align 4
  %b = alloca i32, align 4
  store i8* %cp, i8** %cp.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %cp.addr, metadata !7032, metadata !DIExpression()), !dbg !7033
  store i32 %offset, i32* %offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset.addr, metadata !7034, metadata !DIExpression()), !dbg !7035
  call void @llvm.dbg.declare(metadata i32* %r, metadata !7036, metadata !DIExpression()), !dbg !7037
  call void @llvm.dbg.declare(metadata i32* %g, metadata !7038, metadata !DIExpression()), !dbg !7039
  call void @llvm.dbg.declare(metadata i32* %b, metadata !7040, metadata !DIExpression()), !dbg !7041
  %0 = load i32, i32* %offset.addr, align 4, !dbg !7042
  %1 = load i8*, i8** %cp.addr, align 8, !dbg !7043
  %arrayidx = getelementptr inbounds i8, i8* %1, i64 0, !dbg !7043
  %2 = load i8, i8* %arrayidx, align 1, !dbg !7043
  %conv = zext i8 %2 to i32, !dbg !7044
  %add = add nsw i32 %0, %conv, !dbg !7045
  store i32 %add, i32* %r, align 4, !dbg !7046
  %3 = load i32, i32* %r, align 4, !dbg !7047
  %cmp = icmp slt i32 %3, 0, !dbg !7047
  br i1 %cmp, label %if.then, label %if.else, !dbg !7050

if.then:                                          ; preds = %entry
  store i32 0, i32* %r, align 4, !dbg !7047
  br label %if.end5, !dbg !7047

if.else:                                          ; preds = %entry
  %4 = load i32, i32* %r, align 4, !dbg !7051
  %cmp2 = icmp sgt i32 %4, 255, !dbg !7051
  br i1 %cmp2, label %if.then4, label %if.end, !dbg !7047

if.then4:                                         ; preds = %if.else
  store i32 255, i32* %r, align 4, !dbg !7051
  br label %if.end, !dbg !7051

if.end:                                           ; preds = %if.then4, %if.else
  br label %if.end5

if.end5:                                          ; preds = %if.end, %if.then
  %5 = load i32, i32* %offset.addr, align 4, !dbg !7053
  %6 = load i8*, i8** %cp.addr, align 8, !dbg !7054
  %arrayidx6 = getelementptr inbounds i8, i8* %6, i64 1, !dbg !7054
  %7 = load i8, i8* %arrayidx6, align 1, !dbg !7054
  %conv7 = zext i8 %7 to i32, !dbg !7055
  %add8 = add nsw i32 %5, %conv7, !dbg !7056
  store i32 %add8, i32* %g, align 4, !dbg !7057
  %8 = load i32, i32* %g, align 4, !dbg !7058
  %cmp9 = icmp slt i32 %8, 0, !dbg !7058
  br i1 %cmp9, label %if.then11, label %if.else12, !dbg !7061

if.then11:                                        ; preds = %if.end5
  store i32 0, i32* %g, align 4, !dbg !7058
  br label %if.end17, !dbg !7058

if.else12:                                        ; preds = %if.end5
  %9 = load i32, i32* %g, align 4, !dbg !7062
  %cmp13 = icmp sgt i32 %9, 255, !dbg !7062
  br i1 %cmp13, label %if.then15, label %if.end16, !dbg !7058

if.then15:                                        ; preds = %if.else12
  store i32 255, i32* %g, align 4, !dbg !7062
  br label %if.end16, !dbg !7062

if.end16:                                         ; preds = %if.then15, %if.else12
  br label %if.end17

if.end17:                                         ; preds = %if.end16, %if.then11
  %10 = load i32, i32* %offset.addr, align 4, !dbg !7064
  %11 = load i8*, i8** %cp.addr, align 8, !dbg !7065
  %arrayidx18 = getelementptr inbounds i8, i8* %11, i64 2, !dbg !7065
  %12 = load i8, i8* %arrayidx18, align 1, !dbg !7065
  %conv19 = zext i8 %12 to i32, !dbg !7066
  %add20 = add nsw i32 %10, %conv19, !dbg !7067
  store i32 %add20, i32* %b, align 4, !dbg !7068
  %13 = load i32, i32* %b, align 4, !dbg !7069
  %cmp21 = icmp slt i32 %13, 0, !dbg !7069
  br i1 %cmp21, label %if.then23, label %if.else24, !dbg !7072

if.then23:                                        ; preds = %if.end17
  store i32 0, i32* %b, align 4, !dbg !7069
  br label %if.end29, !dbg !7069

if.else24:                                        ; preds = %if.end17
  %14 = load i32, i32* %b, align 4, !dbg !7073
  %cmp25 = icmp sgt i32 %14, 255, !dbg !7073
  br i1 %cmp25, label %if.then27, label %if.end28, !dbg !7069

if.then27:                                        ; preds = %if.else24
  store i32 255, i32* %b, align 4, !dbg !7073
  br label %if.end28, !dbg !7073

if.end28:                                         ; preds = %if.then27, %if.else24
  br label %if.end29

if.end29:                                         ; preds = %if.end28, %if.then23
  %15 = load i32, i32* %r, align 4, !dbg !7075
  %conv30 = trunc i32 %15 to i8, !dbg !7075
  %16 = load i8*, i8** %cp.addr, align 8, !dbg !7076
  %arrayidx31 = getelementptr inbounds i8, i8* %16, i64 0, !dbg !7076
  store i8 %conv30, i8* %arrayidx31, align 1, !dbg !7077
  %17 = load i32, i32* %g, align 4, !dbg !7078
  %conv32 = trunc i32 %17 to i8, !dbg !7078
  %18 = load i8*, i8** %cp.addr, align 8, !dbg !7079
  %arrayidx33 = getelementptr inbounds i8, i8* %18, i64 1, !dbg !7079
  store i8 %conv32, i8* %arrayidx33, align 1, !dbg !7080
  %19 = load i32, i32* %b, align 4, !dbg !7081
  %conv34 = trunc i32 %19 to i8, !dbg !7081
  %20 = load i8*, i8** %cp.addr, align 8, !dbg !7082
  %arrayidx35 = getelementptr inbounds i8, i8* %20, i64 2, !dbg !7082
  store i8 %conv34, i8* %arrayidx35, align 1, !dbg !7083
  ret void, !dbg !7084
}

declare dso_local void @UI_ThemeColorBlend(i32, i32, float) #3

declare dso_local void @glColor3ub(i8 zeroext, i8 zeroext, i8 zeroext) #3

declare dso_local void @glScalef(float, float, float) #3

; Function Attrs: noinline nounwind uwtable
define internal void @draw_bone_points(i16 signext %dt, i32 %armflag, i32 %boneflag, i32 %id) #0 !dbg !7085 {
entry:
  %dt.addr = alloca i16, align 2
  %armflag.addr = alloca i32, align 4
  %boneflag.addr = alloca i32, align 4
  %id.addr = alloca i32, align 4
  store i16 %dt, i16* %dt.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %dt.addr, metadata !7088, metadata !DIExpression()), !dbg !7089
  store i32 %armflag, i32* %armflag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %armflag.addr, metadata !7090, metadata !DIExpression()), !dbg !7091
  store i32 %boneflag, i32* %boneflag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %boneflag.addr, metadata !7092, metadata !DIExpression()), !dbg !7093
  store i32 %id, i32* %id.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %id.addr, metadata !7094, metadata !DIExpression()), !dbg !7095
  %0 = load i32, i32* %boneflag.addr, align 4, !dbg !7096
  %and = and i32 %0, 16, !dbg !7098
  %cmp = icmp eq i32 %and, 0, !dbg !7099
  br i1 %cmp, label %if.then, label %if.end27, !dbg !7100

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %id.addr, align 4, !dbg !7101
  %cmp1 = icmp ne i32 %1, -1, !dbg !7104
  br i1 %cmp1, label %if.then2, label %if.end, !dbg !7105

if.then2:                                         ; preds = %if.then
  %2 = load i32, i32* %id.addr, align 4, !dbg !7106
  %or = or i32 %2, 268435456, !dbg !7107
  %call = call zeroext i8 @GPU_select_load_id(i32 %or), !dbg !7108
  br label %if.end, !dbg !7108

if.end:                                           ; preds = %if.then2, %if.then
  %3 = load i16, i16* %dt.addr, align 2, !dbg !7109
  %conv = sext i16 %3 to i32, !dbg !7109
  %cmp3 = icmp sle i32 %conv, 2, !dbg !7111
  br i1 %cmp3, label %if.then5, label %if.else13, !dbg !7112

if.then5:                                         ; preds = %if.end
  %4 = load i32, i32* %armflag.addr, align 4, !dbg !7113
  %and6 = and i32 %4, 32, !dbg !7116
  %tobool = icmp ne i32 %and6, 0, !dbg !7116
  br i1 %tobool, label %if.then7, label %if.end12, !dbg !7117

if.then7:                                         ; preds = %if.then5
  %5 = load i32, i32* %boneflag.addr, align 4, !dbg !7118
  %and8 = and i32 %5, 2, !dbg !7121
  %tobool9 = icmp ne i32 %and8, 0, !dbg !7121
  br i1 %tobool9, label %if.then10, label %if.else, !dbg !7122

if.then10:                                        ; preds = %if.then7
  call void @UI_ThemeColor(i32 34), !dbg !7123
  br label %if.end11, !dbg !7123

if.else:                                          ; preds = %if.then7
  call void @UI_ThemeColor(i32 33), !dbg !7124
  br label %if.end11

if.end11:                                         ; preds = %if.else, %if.then10
  br label %if.end12, !dbg !7125

if.end12:                                         ; preds = %if.end11, %if.then5
  br label %if.end20, !dbg !7126

if.else13:                                        ; preds = %if.end
  %6 = load i32, i32* %armflag.addr, align 4, !dbg !7127
  %and14 = and i32 %6, 16, !dbg !7130
  %tobool15 = icmp ne i32 %and14, 0, !dbg !7130
  br i1 %tobool15, label %if.then16, label %if.else18, !dbg !7131

if.then16:                                        ; preds = %if.else13
  %7 = load i32, i32* %boneflag.addr, align 4, !dbg !7132
  %call17 = call zeroext i8 @set_pchan_glColor(i16 signext 1, i32 %7, i16 signext 0), !dbg !7133
  br label %if.end19, !dbg !7133

if.else18:                                        ; preds = %if.else13
  call void @UI_ThemeColor(i32 74), !dbg !7134
  br label %if.end19

if.end19:                                         ; preds = %if.else18, %if.then16
  br label %if.end20

if.end20:                                         ; preds = %if.end19, %if.end12
  %8 = load i16, i16* %dt.addr, align 2, !dbg !7135
  %conv21 = sext i16 %8 to i32, !dbg !7135
  %cmp22 = icmp sgt i32 %conv21, 2, !dbg !7137
  br i1 %cmp22, label %if.then24, label %if.else25, !dbg !7138

if.then24:                                        ; preds = %if.end20
  call void @draw_bonevert_solid(), !dbg !7139
  br label %if.end26, !dbg !7139

if.else25:                                        ; preds = %if.end20
  call void @draw_bonevert(), !dbg !7140
  br label %if.end26

if.end26:                                         ; preds = %if.else25, %if.then24
  br label %if.end27, !dbg !7141

if.end27:                                         ; preds = %if.end26, %entry
  %9 = load i32, i32* %id.addr, align 4, !dbg !7142
  %cmp28 = icmp ne i32 %9, -1, !dbg !7144
  br i1 %cmp28, label %if.then30, label %if.end33, !dbg !7145

if.then30:                                        ; preds = %if.end27
  %10 = load i32, i32* %id.addr, align 4, !dbg !7146
  %or31 = or i32 %10, 536870912, !dbg !7147
  %call32 = call zeroext i8 @GPU_select_load_id(i32 %or31), !dbg !7148
  br label %if.end33, !dbg !7148

if.end33:                                         ; preds = %if.then30, %if.end27
  %11 = load i16, i16* %dt.addr, align 2, !dbg !7149
  %conv34 = sext i16 %11 to i32, !dbg !7149
  %cmp35 = icmp sle i32 %conv34, 2, !dbg !7151
  br i1 %cmp35, label %if.then37, label %if.else47, !dbg !7152

if.then37:                                        ; preds = %if.end33
  %12 = load i32, i32* %armflag.addr, align 4, !dbg !7153
  %and38 = and i32 %12, 32, !dbg !7156
  %tobool39 = icmp ne i32 %and38, 0, !dbg !7156
  br i1 %tobool39, label %if.then40, label %if.end46, !dbg !7157

if.then40:                                        ; preds = %if.then37
  %13 = load i32, i32* %boneflag.addr, align 4, !dbg !7158
  %and41 = and i32 %13, 4, !dbg !7161
  %tobool42 = icmp ne i32 %and41, 0, !dbg !7161
  br i1 %tobool42, label %if.then43, label %if.else44, !dbg !7162

if.then43:                                        ; preds = %if.then40
  call void @UI_ThemeColor(i32 34), !dbg !7163
  br label %if.end45, !dbg !7163

if.else44:                                        ; preds = %if.then40
  call void @UI_ThemeColor(i32 33), !dbg !7164
  br label %if.end45

if.end45:                                         ; preds = %if.else44, %if.then43
  br label %if.end46, !dbg !7165

if.end46:                                         ; preds = %if.end45, %if.then37
  br label %if.end54, !dbg !7166

if.else47:                                        ; preds = %if.end33
  %14 = load i32, i32* %armflag.addr, align 4, !dbg !7167
  %and48 = and i32 %14, 16, !dbg !7170
  %tobool49 = icmp ne i32 %and48, 0, !dbg !7170
  br i1 %tobool49, label %if.then50, label %if.else52, !dbg !7171

if.then50:                                        ; preds = %if.else47
  %15 = load i32, i32* %boneflag.addr, align 4, !dbg !7172
  %call51 = call zeroext i8 @set_pchan_glColor(i16 signext 1, i32 %15, i16 signext 0), !dbg !7173
  br label %if.end53, !dbg !7173

if.else52:                                        ; preds = %if.else47
  call void @UI_ThemeColor(i32 74), !dbg !7174
  br label %if.end53

if.end53:                                         ; preds = %if.else52, %if.then50
  br label %if.end54

if.end54:                                         ; preds = %if.end53, %if.end46
  call void @glTranslatef(float 0.000000e+00, float 1.000000e+00, float 0.000000e+00), !dbg !7175
  %16 = load i16, i16* %dt.addr, align 2, !dbg !7176
  %conv55 = sext i16 %16 to i32, !dbg !7176
  %cmp56 = icmp sgt i32 %conv55, 2, !dbg !7178
  br i1 %cmp56, label %if.then58, label %if.else59, !dbg !7179

if.then58:                                        ; preds = %if.end54
  call void @draw_bonevert_solid(), !dbg !7180
  br label %if.end60, !dbg !7180

if.else59:                                        ; preds = %if.end54
  call void @draw_bonevert(), !dbg !7181
  br label %if.end60

if.end60:                                         ; preds = %if.else59, %if.then58
  call void @glTranslatef(float 0.000000e+00, float -1.000000e+00, float 0.000000e+00), !dbg !7182
  ret void, !dbg !7183
}

; Function Attrs: noinline nounwind uwtable
define internal void @set_ebone_glColor(i32 %boneflag) #0 !dbg !7184 {
entry:
  %boneflag.addr = alloca i32, align 4
  store i32 %boneflag, i32* %boneflag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %boneflag.addr, metadata !7187, metadata !DIExpression()), !dbg !7188
  %0 = load i32, i32* %boneflag.addr, align 4, !dbg !7189
  %and = and i32 %0, 256, !dbg !7191
  %tobool = icmp ne i32 %and, 0, !dbg !7191
  br i1 %tobool, label %land.lhs.true, label %if.else, !dbg !7192

land.lhs.true:                                    ; preds = %entry
  %1 = load i32, i32* %boneflag.addr, align 4, !dbg !7193
  %and1 = and i32 %1, 1, !dbg !7194
  %tobool2 = icmp ne i32 %and1, 0, !dbg !7194
  br i1 %tobool2, label %if.then, label %if.else, !dbg !7195

if.then:                                          ; preds = %land.lhs.true
  call void @UI_ThemeColor(i32 39), !dbg !7196
  br label %if.end12, !dbg !7198

if.else:                                          ; preds = %land.lhs.true, %entry
  %2 = load i32, i32* %boneflag.addr, align 4, !dbg !7199
  %and3 = and i32 %2, 256, !dbg !7201
  %tobool4 = icmp ne i32 %and3, 0, !dbg !7201
  br i1 %tobool4, label %if.then5, label %if.else6, !dbg !7202

if.then5:                                         ; preds = %if.else
  call void @UI_ThemeColorBlend(i32 27, i32 39, float 0x3FC3333340000000), !dbg !7203
  br label %if.end11, !dbg !7205

if.else6:                                         ; preds = %if.else
  %3 = load i32, i32* %boneflag.addr, align 4, !dbg !7206
  %and7 = and i32 %3, 1, !dbg !7208
  %tobool8 = icmp ne i32 %and7, 0, !dbg !7208
  br i1 %tobool8, label %if.then9, label %if.else10, !dbg !7209

if.then9:                                         ; preds = %if.else6
  call void @UI_ThemeColorShade(i32 39, i32 -20), !dbg !7210
  br label %if.end, !dbg !7212

if.else10:                                        ; preds = %if.else6
  call void @UI_ThemeColor(i32 27), !dbg !7213
  br label %if.end

if.end:                                           ; preds = %if.else10, %if.then9
  br label %if.end11

if.end11:                                         ; preds = %if.end, %if.then5
  br label %if.end12

if.end12:                                         ; preds = %if.end11, %if.then
  ret void, !dbg !7215
}

; Function Attrs: noinline nounwind uwtable
define internal void @draw_b_bone_boxes(i16 signext %dt, %struct.bPoseChannel* %pchan, float %xwidth, float %length, float %zwidth) #0 !dbg !7216 {
entry:
  %dt.addr = alloca i16, align 2
  %pchan.addr = alloca %struct.bPoseChannel*, align 8
  %xwidth.addr = alloca float, align 4
  %length.addr = alloca float, align 4
  %zwidth.addr = alloca float, align 4
  %segments = alloca i32, align 4
  %dlen = alloca float, align 4
  %bbone = alloca [32 x %struct.Mat4], align 16
  %a = alloca i32, align 4
  store i16 %dt, i16* %dt.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %dt.addr, metadata !7219, metadata !DIExpression()), !dbg !7220
  store %struct.bPoseChannel* %pchan, %struct.bPoseChannel** %pchan.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bPoseChannel** %pchan.addr, metadata !7221, metadata !DIExpression()), !dbg !7222
  store float %xwidth, float* %xwidth.addr, align 4
  call void @llvm.dbg.declare(metadata float* %xwidth.addr, metadata !7223, metadata !DIExpression()), !dbg !7224
  store float %length, float* %length.addr, align 4
  call void @llvm.dbg.declare(metadata float* %length.addr, metadata !7225, metadata !DIExpression()), !dbg !7226
  store float %zwidth, float* %zwidth.addr, align 4
  call void @llvm.dbg.declare(metadata float* %zwidth.addr, metadata !7227, metadata !DIExpression()), !dbg !7228
  call void @llvm.dbg.declare(metadata i32* %segments, metadata !7229, metadata !DIExpression()), !dbg !7230
  store i32 0, i32* %segments, align 4, !dbg !7230
  %0 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan.addr, align 8, !dbg !7231
  %tobool = icmp ne %struct.bPoseChannel* %0, null, !dbg !7231
  br i1 %tobool, label %if.then, label %if.end, !dbg !7233

if.then:                                          ; preds = %entry
  %1 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan.addr, align 8, !dbg !7234
  %bone = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %1, i32 0, i32 12, !dbg !7235
  %2 = load %struct.Bone*, %struct.Bone** %bone, align 8, !dbg !7235
  %segments1 = getelementptr inbounds %struct.Bone, %struct.Bone* %2, i32 0, i32 26, !dbg !7236
  %3 = load i16, i16* %segments1, align 4, !dbg !7236
  %conv = sext i16 %3 to i32, !dbg !7234
  store i32 %conv, i32* %segments, align 4, !dbg !7237
  br label %if.end, !dbg !7238

if.end:                                           ; preds = %if.then, %entry
  %4 = load i32, i32* %segments, align 4, !dbg !7239
  %cmp = icmp sgt i32 %4, 1, !dbg !7241
  br i1 %cmp, label %land.lhs.true, label %if.else14, !dbg !7242

land.lhs.true:                                    ; preds = %if.end
  %5 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan.addr, align 8, !dbg !7243
  %tobool3 = icmp ne %struct.bPoseChannel* %5, null, !dbg !7244
  br i1 %tobool3, label %if.then4, label %if.else14, !dbg !7245

if.then4:                                         ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata float* %dlen, metadata !7246, metadata !DIExpression()), !dbg !7248
  %6 = load float, float* %length.addr, align 4, !dbg !7249
  %7 = load i32, i32* %segments, align 4, !dbg !7250
  %conv5 = sitofp i32 %7 to float, !dbg !7251
  %div = fdiv float %6, %conv5, !dbg !7252
  store float %div, float* %dlen, align 4, !dbg !7248
  call void @llvm.dbg.declare(metadata [32 x %struct.Mat4]* %bbone, metadata !7253, metadata !DIExpression()), !dbg !7254
  call void @llvm.dbg.declare(metadata i32* %a, metadata !7255, metadata !DIExpression()), !dbg !7256
  %8 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan.addr, align 8, !dbg !7257
  %arraydecay = getelementptr inbounds [32 x %struct.Mat4], [32 x %struct.Mat4]* %bbone, i64 0, i64 0, !dbg !7258
  call void @b_bone_spline_setup(%struct.bPoseChannel* %8, i32 0, %struct.Mat4* %arraydecay), !dbg !7259
  store i32 0, i32* %a, align 4, !dbg !7260
  br label %for.cond, !dbg !7262

for.cond:                                         ; preds = %for.inc, %if.then4
  %9 = load i32, i32* %a, align 4, !dbg !7263
  %10 = load i32, i32* %segments, align 4, !dbg !7265
  %cmp6 = icmp slt i32 %9, %10, !dbg !7266
  br i1 %cmp6, label %for.body, label %for.end, !dbg !7267

for.body:                                         ; preds = %for.cond
  call void @glPushMatrix(), !dbg !7268
  %11 = load i32, i32* %a, align 4, !dbg !7270
  %idxprom = sext i32 %11 to i64, !dbg !7270
  %arrayidx = getelementptr inbounds [32 x %struct.Mat4], [32 x %struct.Mat4]* %bbone, i64 0, i64 %idxprom, !dbg !7270
  %mat = getelementptr inbounds %struct.Mat4, %struct.Mat4* %arrayidx, i32 0, i32 0, !dbg !7270
  %arraydecay8 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat, i64 0, i64 0, !dbg !7270
  %12 = bitcast [4 x float]* %arraydecay8 to float*, !dbg !7270
  call void @glMultMatrixf(float* %12), !dbg !7270
  %13 = load i16, i16* %dt.addr, align 2, !dbg !7271
  %conv9 = sext i16 %13 to i32, !dbg !7271
  %cmp10 = icmp eq i32 %conv9, 3, !dbg !7273
  br i1 %cmp10, label %if.then12, label %if.else, !dbg !7274

if.then12:                                        ; preds = %for.body
  %14 = load float, float* %xwidth.addr, align 4, !dbg !7275
  %15 = load float, float* %dlen, align 4, !dbg !7276
  %16 = load float, float* %zwidth.addr, align 4, !dbg !7277
  call void @drawsolidcube_size(float %14, float %15, float %16), !dbg !7278
  br label %if.end13, !dbg !7278

if.else:                                          ; preds = %for.body
  %17 = load float, float* %xwidth.addr, align 4, !dbg !7279
  %18 = load float, float* %dlen, align 4, !dbg !7280
  %19 = load float, float* %zwidth.addr, align 4, !dbg !7281
  call void @drawcube_size(float %17, float %18, float %19), !dbg !7282
  br label %if.end13

if.end13:                                         ; preds = %if.else, %if.then12
  call void @glPopMatrix(), !dbg !7283
  br label %for.inc, !dbg !7284

for.inc:                                          ; preds = %if.end13
  %20 = load i32, i32* %a, align 4, !dbg !7285
  %inc = add nsw i32 %20, 1, !dbg !7285
  store i32 %inc, i32* %a, align 4, !dbg !7285
  br label %for.cond, !dbg !7286, !llvm.loop !7287

for.end:                                          ; preds = %for.cond
  br label %if.end21, !dbg !7289

if.else14:                                        ; preds = %land.lhs.true, %if.end
  call void @glPushMatrix(), !dbg !7290
  %21 = load i16, i16* %dt.addr, align 2, !dbg !7292
  %conv15 = sext i16 %21 to i32, !dbg !7292
  %cmp16 = icmp eq i32 %conv15, 3, !dbg !7294
  br i1 %cmp16, label %if.then18, label %if.else19, !dbg !7295

if.then18:                                        ; preds = %if.else14
  %22 = load float, float* %xwidth.addr, align 4, !dbg !7296
  %23 = load float, float* %length.addr, align 4, !dbg !7297
  %24 = load float, float* %zwidth.addr, align 4, !dbg !7298
  call void @drawsolidcube_size(float %22, float %23, float %24), !dbg !7299
  br label %if.end20, !dbg !7299

if.else19:                                        ; preds = %if.else14
  %25 = load float, float* %xwidth.addr, align 4, !dbg !7300
  %26 = load float, float* %length.addr, align 4, !dbg !7301
  %27 = load float, float* %zwidth.addr, align 4, !dbg !7302
  call void @drawcube_size(float %25, float %26, float %27), !dbg !7303
  br label %if.end20

if.end20:                                         ; preds = %if.else19, %if.then18
  call void @glPopMatrix(), !dbg !7304
  br label %if.end21

if.end21:                                         ; preds = %if.end20, %for.end
  ret void, !dbg !7305
}

; Function Attrs: noinline nounwind uwtable
define internal void @draw_bonevert_solid() #0 !dbg !1927 {
entry:
  %qobj = alloca %struct.GLUquadric*, align 8
  %0 = load i32, i32* @draw_bonevert_solid.displist, align 4, !dbg !7306
  %cmp = icmp eq i32 %0, 0, !dbg !7308
  br i1 %cmp, label %if.then, label %if.end, !dbg !7309

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.GLUquadric** %qobj, metadata !7310, metadata !DIExpression()), !dbg !7312
  %call = call i32 @glGenLists(i32 1), !dbg !7313
  store i32 %call, i32* @draw_bonevert_solid.displist, align 4, !dbg !7314
  %1 = load i32, i32* @draw_bonevert_solid.displist, align 4, !dbg !7315
  call void @glNewList(i32 %1, i32 4864), !dbg !7316
  %call1 = call %struct.GLUquadric* @gluNewQuadric(), !dbg !7317
  store %struct.GLUquadric* %call1, %struct.GLUquadric** %qobj, align 8, !dbg !7318
  %2 = load %struct.GLUquadric*, %struct.GLUquadric** %qobj, align 8, !dbg !7319
  call void @gluQuadricDrawStyle(%struct.GLUquadric* %2, i32 100012), !dbg !7320
  call void @glShadeModel(i32 7425), !dbg !7321
  %3 = load %struct.GLUquadric*, %struct.GLUquadric** %qobj, align 8, !dbg !7322
  call void @gluSphere(%struct.GLUquadric* %3, double 5.000000e-02, i32 8, i32 5), !dbg !7323
  call void @glShadeModel(i32 7424), !dbg !7324
  %4 = load %struct.GLUquadric*, %struct.GLUquadric** %qobj, align 8, !dbg !7325
  call void @gluDeleteQuadric(%struct.GLUquadric* %4), !dbg !7326
  call void @glEndList(), !dbg !7327
  br label %if.end, !dbg !7328

if.end:                                           ; preds = %if.then, %entry
  %5 = load i32, i32* @draw_bonevert_solid.displist, align 4, !dbg !7329
  call void @glCallList(i32 %5), !dbg !7330
  ret void, !dbg !7331
}

; Function Attrs: noinline nounwind uwtable
define internal void @draw_bonevert() #0 !dbg !1933 {
entry:
  %qobj = alloca %struct.GLUquadric*, align 8
  %0 = load i32, i32* @draw_bonevert.displist, align 4, !dbg !7332
  %cmp = icmp eq i32 %0, 0, !dbg !7334
  br i1 %cmp, label %if.then, label %if.end, !dbg !7335

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.GLUquadric** %qobj, metadata !7336, metadata !DIExpression()), !dbg !7338
  %call = call i32 @glGenLists(i32 1), !dbg !7339
  store i32 %call, i32* @draw_bonevert.displist, align 4, !dbg !7340
  %1 = load i32, i32* @draw_bonevert.displist, align 4, !dbg !7341
  call void @glNewList(i32 %1, i32 4864), !dbg !7342
  call void @glPushMatrix(), !dbg !7343
  %call1 = call %struct.GLUquadric* @gluNewQuadric(), !dbg !7344
  store %struct.GLUquadric* %call1, %struct.GLUquadric** %qobj, align 8, !dbg !7345
  %2 = load %struct.GLUquadric*, %struct.GLUquadric** %qobj, align 8, !dbg !7346
  call void @gluQuadricDrawStyle(%struct.GLUquadric* %2, i32 100013), !dbg !7347
  %3 = load %struct.GLUquadric*, %struct.GLUquadric** %qobj, align 8, !dbg !7348
  call void @gluDisk(%struct.GLUquadric* %3, double 0.000000e+00, double 5.000000e-02, i32 16, i32 1), !dbg !7349
  call void @glRotatef(float 9.000000e+01, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00), !dbg !7350
  %4 = load %struct.GLUquadric*, %struct.GLUquadric** %qobj, align 8, !dbg !7351
  call void @gluDisk(%struct.GLUquadric* %4, double 0.000000e+00, double 5.000000e-02, i32 16, i32 1), !dbg !7352
  call void @glRotatef(float 9.000000e+01, float 1.000000e+00, float 0.000000e+00, float 0.000000e+00), !dbg !7353
  %5 = load %struct.GLUquadric*, %struct.GLUquadric** %qobj, align 8, !dbg !7354
  call void @gluDisk(%struct.GLUquadric* %5, double 0.000000e+00, double 5.000000e-02, i32 16, i32 1), !dbg !7355
  %6 = load %struct.GLUquadric*, %struct.GLUquadric** %qobj, align 8, !dbg !7356
  call void @gluDeleteQuadric(%struct.GLUquadric* %6), !dbg !7357
  call void @glPopMatrix(), !dbg !7358
  call void @glEndList(), !dbg !7359
  br label %if.end, !dbg !7360

if.end:                                           ; preds = %if.then, %entry
  %7 = load i32, i32* @draw_bonevert.displist, align 4, !dbg !7361
  call void @glCallList(i32 %7), !dbg !7362
  ret void, !dbg !7363
}

declare dso_local i32 @glGenLists(i32) #3

declare dso_local void @glNewList(i32, i32) #3

declare dso_local void @glEndList() #3

declare dso_local void @glCallList(i32) #3

declare dso_local void @gluDisk(%struct.GLUquadric*, double, double, i32, i32) #3

declare dso_local void @b_bone_spline_setup(%struct.bPoseChannel*, i32, %struct.Mat4*) #3

; Function Attrs: noinline nounwind uwtable
define internal void @drawsolidcube_size(float %xsize, float %ysize, float %zsize) #0 !dbg !1936 {
entry:
  %xsize.addr = alloca float, align 4
  %ysize.addr = alloca float, align 4
  %zsize.addr = alloca float, align 4
  %n = alloca [3 x float], align 4
  store float %xsize, float* %xsize.addr, align 4
  call void @llvm.dbg.declare(metadata float* %xsize.addr, metadata !7364, metadata !DIExpression()), !dbg !7365
  store float %ysize, float* %ysize.addr, align 4
  call void @llvm.dbg.declare(metadata float* %ysize.addr, metadata !7366, metadata !DIExpression()), !dbg !7367
  store float %zsize, float* %zsize.addr, align 4
  call void @llvm.dbg.declare(metadata float* %zsize.addr, metadata !7368, metadata !DIExpression()), !dbg !7369
  call void @llvm.dbg.declare(metadata [3 x float]* %n, metadata !7370, metadata !DIExpression()), !dbg !7371
  %0 = bitcast [3 x float]* %n to i8*, !dbg !7371
  call void @llvm.memset.p0i8.i64(i8* align 4 %0, i8 0, i64 12, i1 false), !dbg !7371
  %1 = load float, float* %xsize.addr, align 4, !dbg !7372
  %2 = load float, float* %ysize.addr, align 4, !dbg !7373
  %3 = load float, float* %zsize.addr, align 4, !dbg !7374
  call void @glScalef(float %1, float %2, float %3), !dbg !7375
  %4 = load i32, i32* @drawsolidcube_size.displist, align 4, !dbg !7376
  %cmp = icmp eq i32 %4, 0, !dbg !7378
  br i1 %cmp, label %if.then, label %if.end, !dbg !7379

if.then:                                          ; preds = %entry
  %call = call i32 @glGenLists(i32 1), !dbg !7380
  store i32 %call, i32* @drawsolidcube_size.displist, align 4, !dbg !7382
  %5 = load i32, i32* @drawsolidcube_size.displist, align 4, !dbg !7383
  call void @glNewList(i32 %5, i32 4864), !dbg !7384
  call void @glBegin(i32 7), !dbg !7385
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %n, i64 0, i64 0, !dbg !7386
  store float -1.000000e+00, float* %arrayidx, align 4, !dbg !7387
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %n, i64 0, i64 0, !dbg !7388
  call void @glNormal3fv(float* %arraydecay), !dbg !7389
  call void @glVertex3fv(float* getelementptr inbounds ([8 x [3 x float]], [8 x [3 x float]]* @cube, i64 0, i64 0, i64 0)), !dbg !7390
  call void @glVertex3fv(float* getelementptr inbounds ([8 x [3 x float]], [8 x [3 x float]]* @cube, i64 0, i64 1, i64 0)), !dbg !7391
  call void @glVertex3fv(float* getelementptr inbounds ([8 x [3 x float]], [8 x [3 x float]]* @cube, i64 0, i64 2, i64 0)), !dbg !7392
  call void @glVertex3fv(float* getelementptr inbounds ([8 x [3 x float]], [8 x [3 x float]]* @cube, i64 0, i64 3, i64 0)), !dbg !7393
  %arrayidx1 = getelementptr inbounds [3 x float], [3 x float]* %n, i64 0, i64 0, !dbg !7394
  store float 0.000000e+00, float* %arrayidx1, align 4, !dbg !7395
  %arrayidx2 = getelementptr inbounds [3 x float], [3 x float]* %n, i64 0, i64 1, !dbg !7396
  store float -1.000000e+00, float* %arrayidx2, align 4, !dbg !7397
  %arraydecay3 = getelementptr inbounds [3 x float], [3 x float]* %n, i64 0, i64 0, !dbg !7398
  call void @glNormal3fv(float* %arraydecay3), !dbg !7399
  call void @glVertex3fv(float* getelementptr inbounds ([8 x [3 x float]], [8 x [3 x float]]* @cube, i64 0, i64 0, i64 0)), !dbg !7400
  call void @glVertex3fv(float* getelementptr inbounds ([8 x [3 x float]], [8 x [3 x float]]* @cube, i64 0, i64 4, i64 0)), !dbg !7401
  call void @glVertex3fv(float* getelementptr inbounds ([8 x [3 x float]], [8 x [3 x float]]* @cube, i64 0, i64 5, i64 0)), !dbg !7402
  call void @glVertex3fv(float* getelementptr inbounds ([8 x [3 x float]], [8 x [3 x float]]* @cube, i64 0, i64 1, i64 0)), !dbg !7403
  %arrayidx4 = getelementptr inbounds [3 x float], [3 x float]* %n, i64 0, i64 1, !dbg !7404
  store float 0.000000e+00, float* %arrayidx4, align 4, !dbg !7405
  %arrayidx5 = getelementptr inbounds [3 x float], [3 x float]* %n, i64 0, i64 0, !dbg !7406
  store float 1.000000e+00, float* %arrayidx5, align 4, !dbg !7407
  %arraydecay6 = getelementptr inbounds [3 x float], [3 x float]* %n, i64 0, i64 0, !dbg !7408
  call void @glNormal3fv(float* %arraydecay6), !dbg !7409
  call void @glVertex3fv(float* getelementptr inbounds ([8 x [3 x float]], [8 x [3 x float]]* @cube, i64 0, i64 4, i64 0)), !dbg !7410
  call void @glVertex3fv(float* getelementptr inbounds ([8 x [3 x float]], [8 x [3 x float]]* @cube, i64 0, i64 7, i64 0)), !dbg !7411
  call void @glVertex3fv(float* getelementptr inbounds ([8 x [3 x float]], [8 x [3 x float]]* @cube, i64 0, i64 6, i64 0)), !dbg !7412
  call void @glVertex3fv(float* getelementptr inbounds ([8 x [3 x float]], [8 x [3 x float]]* @cube, i64 0, i64 5, i64 0)), !dbg !7413
  %arrayidx7 = getelementptr inbounds [3 x float], [3 x float]* %n, i64 0, i64 0, !dbg !7414
  store float 0.000000e+00, float* %arrayidx7, align 4, !dbg !7415
  %arrayidx8 = getelementptr inbounds [3 x float], [3 x float]* %n, i64 0, i64 1, !dbg !7416
  store float 1.000000e+00, float* %arrayidx8, align 4, !dbg !7417
  %arraydecay9 = getelementptr inbounds [3 x float], [3 x float]* %n, i64 0, i64 0, !dbg !7418
  call void @glNormal3fv(float* %arraydecay9), !dbg !7419
  call void @glVertex3fv(float* getelementptr inbounds ([8 x [3 x float]], [8 x [3 x float]]* @cube, i64 0, i64 7, i64 0)), !dbg !7420
  call void @glVertex3fv(float* getelementptr inbounds ([8 x [3 x float]], [8 x [3 x float]]* @cube, i64 0, i64 3, i64 0)), !dbg !7421
  call void @glVertex3fv(float* getelementptr inbounds ([8 x [3 x float]], [8 x [3 x float]]* @cube, i64 0, i64 2, i64 0)), !dbg !7422
  call void @glVertex3fv(float* getelementptr inbounds ([8 x [3 x float]], [8 x [3 x float]]* @cube, i64 0, i64 6, i64 0)), !dbg !7423
  %arrayidx10 = getelementptr inbounds [3 x float], [3 x float]* %n, i64 0, i64 1, !dbg !7424
  store float 0.000000e+00, float* %arrayidx10, align 4, !dbg !7425
  %arrayidx11 = getelementptr inbounds [3 x float], [3 x float]* %n, i64 0, i64 2, !dbg !7426
  store float 1.000000e+00, float* %arrayidx11, align 4, !dbg !7427
  %arraydecay12 = getelementptr inbounds [3 x float], [3 x float]* %n, i64 0, i64 0, !dbg !7428
  call void @glNormal3fv(float* %arraydecay12), !dbg !7429
  call void @glVertex3fv(float* getelementptr inbounds ([8 x [3 x float]], [8 x [3 x float]]* @cube, i64 0, i64 1, i64 0)), !dbg !7430
  call void @glVertex3fv(float* getelementptr inbounds ([8 x [3 x float]], [8 x [3 x float]]* @cube, i64 0, i64 5, i64 0)), !dbg !7431
  call void @glVertex3fv(float* getelementptr inbounds ([8 x [3 x float]], [8 x [3 x float]]* @cube, i64 0, i64 6, i64 0)), !dbg !7432
  call void @glVertex3fv(float* getelementptr inbounds ([8 x [3 x float]], [8 x [3 x float]]* @cube, i64 0, i64 2, i64 0)), !dbg !7433
  %arrayidx13 = getelementptr inbounds [3 x float], [3 x float]* %n, i64 0, i64 2, !dbg !7434
  store float -1.000000e+00, float* %arrayidx13, align 4, !dbg !7435
  %arraydecay14 = getelementptr inbounds [3 x float], [3 x float]* %n, i64 0, i64 0, !dbg !7436
  call void @glNormal3fv(float* %arraydecay14), !dbg !7437
  call void @glVertex3fv(float* getelementptr inbounds ([8 x [3 x float]], [8 x [3 x float]]* @cube, i64 0, i64 7, i64 0)), !dbg !7438
  call void @glVertex3fv(float* getelementptr inbounds ([8 x [3 x float]], [8 x [3 x float]]* @cube, i64 0, i64 4, i64 0)), !dbg !7439
  call void @glVertex3fv(float* getelementptr inbounds ([8 x [3 x float]], [8 x [3 x float]]* @cube, i64 0, i64 0, i64 0)), !dbg !7440
  call void @glVertex3fv(float* getelementptr inbounds ([8 x [3 x float]], [8 x [3 x float]]* @cube, i64 0, i64 3, i64 0)), !dbg !7441
  call void @glEnd(), !dbg !7442
  call void @glEndList(), !dbg !7443
  br label %if.end, !dbg !7444

if.end:                                           ; preds = %if.then, %entry
  %6 = load i32, i32* @drawsolidcube_size.displist, align 4, !dbg !7445
  call void @glCallList(i32 %6), !dbg !7446
  ret void, !dbg !7447
}

; Function Attrs: noinline nounwind uwtable
define internal void @drawcube_size(float %xsize, float %ysize, float %zsize) #0 !dbg !1944 {
entry:
  %xsize.addr = alloca float, align 4
  %ysize.addr = alloca float, align 4
  %zsize.addr = alloca float, align 4
  store float %xsize, float* %xsize.addr, align 4
  call void @llvm.dbg.declare(metadata float* %xsize.addr, metadata !7448, metadata !DIExpression()), !dbg !7449
  store float %ysize, float* %ysize.addr, align 4
  call void @llvm.dbg.declare(metadata float* %ysize.addr, metadata !7450, metadata !DIExpression()), !dbg !7451
  store float %zsize, float* %zsize.addr, align 4
  call void @llvm.dbg.declare(metadata float* %zsize.addr, metadata !7452, metadata !DIExpression()), !dbg !7453
  %0 = load i32, i32* @drawcube_size.displist, align 4, !dbg !7454
  %cmp = icmp eq i32 %0, 0, !dbg !7456
  br i1 %cmp, label %if.then, label %if.end, !dbg !7457

if.then:                                          ; preds = %entry
  %call = call i32 @glGenLists(i32 1), !dbg !7458
  store i32 %call, i32* @drawcube_size.displist, align 4, !dbg !7460
  %1 = load i32, i32* @drawcube_size.displist, align 4, !dbg !7461
  call void @glNewList(i32 %1, i32 4864), !dbg !7462
  call void @glBegin(i32 3), !dbg !7463
  call void @glVertex3fv(float* getelementptr inbounds ([8 x [3 x float]], [8 x [3 x float]]* @cube, i64 0, i64 0, i64 0)), !dbg !7464
  call void @glVertex3fv(float* getelementptr inbounds ([8 x [3 x float]], [8 x [3 x float]]* @cube, i64 0, i64 1, i64 0)), !dbg !7465
  call void @glVertex3fv(float* getelementptr inbounds ([8 x [3 x float]], [8 x [3 x float]]* @cube, i64 0, i64 2, i64 0)), !dbg !7466
  call void @glVertex3fv(float* getelementptr inbounds ([8 x [3 x float]], [8 x [3 x float]]* @cube, i64 0, i64 3, i64 0)), !dbg !7467
  call void @glVertex3fv(float* getelementptr inbounds ([8 x [3 x float]], [8 x [3 x float]]* @cube, i64 0, i64 0, i64 0)), !dbg !7468
  call void @glVertex3fv(float* getelementptr inbounds ([8 x [3 x float]], [8 x [3 x float]]* @cube, i64 0, i64 4, i64 0)), !dbg !7469
  call void @glVertex3fv(float* getelementptr inbounds ([8 x [3 x float]], [8 x [3 x float]]* @cube, i64 0, i64 5, i64 0)), !dbg !7470
  call void @glVertex3fv(float* getelementptr inbounds ([8 x [3 x float]], [8 x [3 x float]]* @cube, i64 0, i64 6, i64 0)), !dbg !7471
  call void @glVertex3fv(float* getelementptr inbounds ([8 x [3 x float]], [8 x [3 x float]]* @cube, i64 0, i64 7, i64 0)), !dbg !7472
  call void @glVertex3fv(float* getelementptr inbounds ([8 x [3 x float]], [8 x [3 x float]]* @cube, i64 0, i64 4, i64 0)), !dbg !7473
  call void @glEnd(), !dbg !7474
  call void @glBegin(i32 1), !dbg !7475
  call void @glVertex3fv(float* getelementptr inbounds ([8 x [3 x float]], [8 x [3 x float]]* @cube, i64 0, i64 1, i64 0)), !dbg !7476
  call void @glVertex3fv(float* getelementptr inbounds ([8 x [3 x float]], [8 x [3 x float]]* @cube, i64 0, i64 5, i64 0)), !dbg !7477
  call void @glVertex3fv(float* getelementptr inbounds ([8 x [3 x float]], [8 x [3 x float]]* @cube, i64 0, i64 2, i64 0)), !dbg !7478
  call void @glVertex3fv(float* getelementptr inbounds ([8 x [3 x float]], [8 x [3 x float]]* @cube, i64 0, i64 6, i64 0)), !dbg !7479
  call void @glVertex3fv(float* getelementptr inbounds ([8 x [3 x float]], [8 x [3 x float]]* @cube, i64 0, i64 3, i64 0)), !dbg !7480
  call void @glVertex3fv(float* getelementptr inbounds ([8 x [3 x float]], [8 x [3 x float]]* @cube, i64 0, i64 7, i64 0)), !dbg !7481
  call void @glEnd(), !dbg !7482
  call void @glEndList(), !dbg !7483
  br label %if.end, !dbg !7484

if.end:                                           ; preds = %if.then, %entry
  %2 = load float, float* %xsize.addr, align 4, !dbg !7485
  %3 = load float, float* %ysize.addr, align 4, !dbg !7486
  %4 = load float, float* %zsize.addr, align 4, !dbg !7487
  call void @glScalef(float %2, float %3, float %4), !dbg !7488
  %5 = load i32, i32* @drawcube_size.displist, align 4, !dbg !7489
  call void @glCallList(i32 %5), !dbg !7490
  ret void, !dbg !7491
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare dso_local void @glNormal3fv(float*) #3

; Function Attrs: noinline nounwind uwtable
define internal void @draw_wire_bone_segments(%struct.bPoseChannel* %pchan, %struct.Mat4* %bbones, float %length, i32 %segments) #0 !dbg !7492 {
entry:
  %pchan.addr = alloca %struct.bPoseChannel*, align 8
  %bbones.addr = alloca %struct.Mat4*, align 8
  %length.addr = alloca float, align 4
  %segments.addr = alloca i32, align 4
  %dlen = alloca float, align 4
  %bbone = alloca %struct.Mat4*, align 8
  %a = alloca i32, align 4
  store %struct.bPoseChannel* %pchan, %struct.bPoseChannel** %pchan.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bPoseChannel** %pchan.addr, metadata !7495, metadata !DIExpression()), !dbg !7496
  store %struct.Mat4* %bbones, %struct.Mat4** %bbones.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Mat4** %bbones.addr, metadata !7497, metadata !DIExpression()), !dbg !7498
  store float %length, float* %length.addr, align 4
  call void @llvm.dbg.declare(metadata float* %length.addr, metadata !7499, metadata !DIExpression()), !dbg !7500
  store i32 %segments, i32* %segments.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %segments.addr, metadata !7501, metadata !DIExpression()), !dbg !7502
  %0 = load i32, i32* %segments.addr, align 4, !dbg !7503
  %cmp = icmp sgt i32 %0, 1, !dbg !7505
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !7506

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan.addr, align 8, !dbg !7507
  %tobool = icmp ne %struct.bPoseChannel* %1, null, !dbg !7508
  br i1 %tobool, label %if.then, label %if.else, !dbg !7509

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata float* %dlen, metadata !7510, metadata !DIExpression()), !dbg !7512
  %2 = load float, float* %length.addr, align 4, !dbg !7513
  %3 = load i32, i32* %segments.addr, align 4, !dbg !7514
  %conv = sitofp i32 %3 to float, !dbg !7515
  %div = fdiv float %2, %conv, !dbg !7516
  store float %div, float* %dlen, align 4, !dbg !7512
  call void @llvm.dbg.declare(metadata %struct.Mat4** %bbone, metadata !7517, metadata !DIExpression()), !dbg !7518
  %4 = load %struct.Mat4*, %struct.Mat4** %bbones.addr, align 8, !dbg !7519
  store %struct.Mat4* %4, %struct.Mat4** %bbone, align 8, !dbg !7518
  call void @llvm.dbg.declare(metadata i32* %a, metadata !7520, metadata !DIExpression()), !dbg !7521
  store i32 0, i32* %a, align 4, !dbg !7522
  br label %for.cond, !dbg !7524

for.cond:                                         ; preds = %for.inc, %if.then
  %5 = load i32, i32* %a, align 4, !dbg !7525
  %6 = load i32, i32* %segments.addr, align 4, !dbg !7527
  %cmp1 = icmp slt i32 %5, %6, !dbg !7528
  br i1 %cmp1, label %for.body, label %for.end, !dbg !7529

for.body:                                         ; preds = %for.cond
  call void @glPushMatrix(), !dbg !7530
  %7 = load %struct.Mat4*, %struct.Mat4** %bbone, align 8, !dbg !7532
  %mat = getelementptr inbounds %struct.Mat4, %struct.Mat4* %7, i32 0, i32 0, !dbg !7532
  %arraydecay = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat, i64 0, i64 0, !dbg !7532
  %8 = bitcast [4 x float]* %arraydecay to float*, !dbg !7532
  call void @glMultMatrixf(float* %8), !dbg !7532
  call void @glBegin(i32 1), !dbg !7533
  call void @glVertex3f(float 0.000000e+00, float 0.000000e+00, float 0.000000e+00), !dbg !7534
  %9 = load float, float* %dlen, align 4, !dbg !7535
  call void @glVertex3f(float 0.000000e+00, float %9, float 0.000000e+00), !dbg !7536
  call void @glEnd(), !dbg !7537
  call void @glPopMatrix(), !dbg !7538
  br label %for.inc, !dbg !7539

for.inc:                                          ; preds = %for.body
  %10 = load i32, i32* %a, align 4, !dbg !7540
  %inc = add nsw i32 %10, 1, !dbg !7540
  store i32 %inc, i32* %a, align 4, !dbg !7540
  %11 = load %struct.Mat4*, %struct.Mat4** %bbone, align 8, !dbg !7541
  %incdec.ptr = getelementptr inbounds %struct.Mat4, %struct.Mat4* %11, i32 1, !dbg !7541
  store %struct.Mat4* %incdec.ptr, %struct.Mat4** %bbone, align 8, !dbg !7541
  br label %for.cond, !dbg !7542, !llvm.loop !7543

for.end:                                          ; preds = %for.cond
  br label %if.end, !dbg !7545

if.else:                                          ; preds = %land.lhs.true, %entry
  call void @glPushMatrix(), !dbg !7546
  call void @glBegin(i32 1), !dbg !7548
  call void @glVertex3f(float 0.000000e+00, float 0.000000e+00, float 0.000000e+00), !dbg !7549
  %12 = load float, float* %length.addr, align 4, !dbg !7550
  call void @glVertex3f(float 0.000000e+00, float %12, float 0.000000e+00), !dbg !7551
  call void @glEnd(), !dbg !7552
  call void @glPopMatrix(), !dbg !7553
  br label %if.end

if.end:                                           ; preds = %if.else, %for.end
  ret void, !dbg !7554
}

declare dso_local void @glVertex3f(float, float, float) #3

; Function Attrs: noinline nounwind uwtable
define internal void @draw_bone_solid_octahedral() #0 !dbg !1947 {
entry:
  %i = alloca i32, align 4
  %0 = load i32, i32* @draw_bone_solid_octahedral.displist, align 4, !dbg !7555
  %cmp = icmp eq i32 %0, 0, !dbg !7557
  br i1 %cmp, label %if.then, label %if.end, !dbg !7558

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7559, metadata !DIExpression()), !dbg !7561
  %call = call i32 @glGenLists(i32 1), !dbg !7562
  store i32 %call, i32* @draw_bone_solid_octahedral.displist, align 4, !dbg !7563
  %1 = load i32, i32* @draw_bone_solid_octahedral.displist, align 4, !dbg !7564
  call void @glNewList(i32 %1, i32 4864), !dbg !7565
  call void @glBegin(i32 4), !dbg !7566
  store i32 0, i32* %i, align 4, !dbg !7567
  br label %for.cond, !dbg !7569

for.cond:                                         ; preds = %for.inc, %if.then
  %2 = load i32, i32* %i, align 4, !dbg !7570
  %cmp1 = icmp slt i32 %2, 8, !dbg !7572
  br i1 %cmp1, label %for.body, label %for.end, !dbg !7573

for.body:                                         ; preds = %for.cond
  %3 = load i32, i32* %i, align 4, !dbg !7574
  %idxprom = sext i32 %3 to i64, !dbg !7576
  %arrayidx = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* @bone_octahedral_solid_normals, i64 0, i64 %idxprom, !dbg !7576
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %arrayidx, i64 0, i64 0, !dbg !7576
  call void @glNormal3fv(float* %arraydecay), !dbg !7577
  %4 = load i32, i32* %i, align 4, !dbg !7578
  %idxprom2 = sext i32 %4 to i64, !dbg !7579
  %arrayidx3 = getelementptr inbounds [8 x [3 x i32]], [8 x [3 x i32]]* @bone_octahedral_solid_tris, i64 0, i64 %idxprom2, !dbg !7579
  %arrayidx4 = getelementptr inbounds [3 x i32], [3 x i32]* %arrayidx3, i64 0, i64 0, !dbg !7579
  %5 = load i32, i32* %arrayidx4, align 4, !dbg !7579
  %idxprom5 = zext i32 %5 to i64, !dbg !7580
  %arrayidx6 = getelementptr inbounds [6 x [3 x float]], [6 x [3 x float]]* @bone_octahedral_verts, i64 0, i64 %idxprom5, !dbg !7580
  %arraydecay7 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx6, i64 0, i64 0, !dbg !7580
  call void @glVertex3fv(float* %arraydecay7), !dbg !7581
  %6 = load i32, i32* %i, align 4, !dbg !7582
  %idxprom8 = sext i32 %6 to i64, !dbg !7583
  %arrayidx9 = getelementptr inbounds [8 x [3 x i32]], [8 x [3 x i32]]* @bone_octahedral_solid_tris, i64 0, i64 %idxprom8, !dbg !7583
  %arrayidx10 = getelementptr inbounds [3 x i32], [3 x i32]* %arrayidx9, i64 0, i64 1, !dbg !7583
  %7 = load i32, i32* %arrayidx10, align 4, !dbg !7583
  %idxprom11 = zext i32 %7 to i64, !dbg !7584
  %arrayidx12 = getelementptr inbounds [6 x [3 x float]], [6 x [3 x float]]* @bone_octahedral_verts, i64 0, i64 %idxprom11, !dbg !7584
  %arraydecay13 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx12, i64 0, i64 0, !dbg !7584
  call void @glVertex3fv(float* %arraydecay13), !dbg !7585
  %8 = load i32, i32* %i, align 4, !dbg !7586
  %idxprom14 = sext i32 %8 to i64, !dbg !7587
  %arrayidx15 = getelementptr inbounds [8 x [3 x i32]], [8 x [3 x i32]]* @bone_octahedral_solid_tris, i64 0, i64 %idxprom14, !dbg !7587
  %arrayidx16 = getelementptr inbounds [3 x i32], [3 x i32]* %arrayidx15, i64 0, i64 2, !dbg !7587
  %9 = load i32, i32* %arrayidx16, align 4, !dbg !7587
  %idxprom17 = zext i32 %9 to i64, !dbg !7588
  %arrayidx18 = getelementptr inbounds [6 x [3 x float]], [6 x [3 x float]]* @bone_octahedral_verts, i64 0, i64 %idxprom17, !dbg !7588
  %arraydecay19 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx18, i64 0, i64 0, !dbg !7588
  call void @glVertex3fv(float* %arraydecay19), !dbg !7589
  br label %for.inc, !dbg !7590

for.inc:                                          ; preds = %for.body
  %10 = load i32, i32* %i, align 4, !dbg !7591
  %inc = add nsw i32 %10, 1, !dbg !7591
  store i32 %inc, i32* %i, align 4, !dbg !7591
  br label %for.cond, !dbg !7592, !llvm.loop !7593

for.end:                                          ; preds = %for.cond
  call void @glEnd(), !dbg !7595
  call void @glEndList(), !dbg !7596
  br label %if.end, !dbg !7597

if.end:                                           ; preds = %for.end, %entry
  %11 = load i32, i32* @draw_bone_solid_octahedral.displist, align 4, !dbg !7598
  call void @glCallList(i32 %11), !dbg !7599
  ret void, !dbg !7600
}

; Function Attrs: noinline nounwind uwtable
define internal void @draw_bone_octahedral() #0 !dbg !1960 {
entry:
  %0 = load i32, i32* @draw_bone_octahedral.displist, align 4, !dbg !7601
  %cmp = icmp eq i32 %0, 0, !dbg !7603
  br i1 %cmp, label %if.then, label %if.end, !dbg !7604

if.then:                                          ; preds = %entry
  %call = call i32 @glGenLists(i32 1), !dbg !7605
  store i32 %call, i32* @draw_bone_octahedral.displist, align 4, !dbg !7607
  %1 = load i32, i32* @draw_bone_octahedral.displist, align 4, !dbg !7608
  call void @glNewList(i32 %1, i32 4864), !dbg !7609
  call void @glEnableClientState(i32 32884), !dbg !7610
  call void @glVertexPointer(i32 3, i32 5126, i32 0, i8* bitcast ([6 x [3 x float]]* @bone_octahedral_verts to i8*)), !dbg !7611
  call void @glDrawElements(i32 2, i32 8, i32 5125, i8* bitcast ([8 x i32]* @bone_octahedral_wire_sides to i8*)), !dbg !7612
  call void @glDrawElements(i32 2, i32 8, i32 5125, i8* bitcast ([8 x i32]* @bone_octahedral_wire_square to i8*)), !dbg !7613
  call void @glDisableClientState(i32 32884), !dbg !7614
  call void @glEndList(), !dbg !7615
  br label %if.end, !dbg !7616

if.end:                                           ; preds = %if.then, %entry
  %2 = load i32, i32* @draw_bone_octahedral.displist, align 4, !dbg !7617
  call void @glCallList(i32 %2), !dbg !7618
  ret void, !dbg !7619
}

declare dso_local void @glEnableClientState(i32) #3

declare dso_local void @glVertexPointer(i32, i32, i32, i8*) #3

declare dso_local void @glDrawElements(i32, i32, i32, i8*) #3

declare dso_local void @glDisableClientState(i32) #3

declare dso_local void @drawcircball(i32, float*, float, [4 x float]*) #3

; Function Attrs: noinline nounwind uwtable
define internal void @copy_v3_v3(float* %r, float* %a) #0 !dbg !7620 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !7623, metadata !DIExpression()), !dbg !7624
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !7625, metadata !DIExpression()), !dbg !7626
  %0 = load float*, float** %a.addr, align 8, !dbg !7627
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !7627
  %1 = load float, float* %arrayidx, align 4, !dbg !7627
  %2 = load float*, float** %r.addr, align 8, !dbg !7628
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !7628
  store float %1, float* %arrayidx1, align 4, !dbg !7629
  %3 = load float*, float** %a.addr, align 8, !dbg !7630
  %arrayidx2 = getelementptr inbounds float, float* %3, i64 1, !dbg !7630
  %4 = load float, float* %arrayidx2, align 4, !dbg !7630
  %5 = load float*, float** %r.addr, align 8, !dbg !7631
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 1, !dbg !7631
  store float %4, float* %arrayidx3, align 4, !dbg !7632
  %6 = load float*, float** %a.addr, align 8, !dbg !7633
  %arrayidx4 = getelementptr inbounds float, float* %6, i64 2, !dbg !7633
  %7 = load float, float* %arrayidx4, align 4, !dbg !7633
  %8 = load float*, float** %r.addr, align 8, !dbg !7634
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !7634
  store float %7, float* %arrayidx5, align 4, !dbg !7635
  ret void, !dbg !7636
}

; Function Attrs: noinline nounwind uwtable
define internal void @mul_v3_fl(float* %r, float %f) #0 !dbg !7637 {
entry:
  %r.addr = alloca float*, align 8
  %f.addr = alloca float, align 4
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !7640, metadata !DIExpression()), !dbg !7641
  store float %f, float* %f.addr, align 4
  call void @llvm.dbg.declare(metadata float* %f.addr, metadata !7642, metadata !DIExpression()), !dbg !7643
  %0 = load float, float* %f.addr, align 4, !dbg !7644
  %1 = load float*, float** %r.addr, align 8, !dbg !7645
  %arrayidx = getelementptr inbounds float, float* %1, i64 0, !dbg !7645
  %2 = load float, float* %arrayidx, align 4, !dbg !7646
  %mul = fmul float %2, %0, !dbg !7646
  store float %mul, float* %arrayidx, align 4, !dbg !7646
  %3 = load float, float* %f.addr, align 4, !dbg !7647
  %4 = load float*, float** %r.addr, align 8, !dbg !7648
  %arrayidx1 = getelementptr inbounds float, float* %4, i64 1, !dbg !7648
  %5 = load float, float* %arrayidx1, align 4, !dbg !7649
  %mul2 = fmul float %5, %3, !dbg !7649
  store float %mul2, float* %arrayidx1, align 4, !dbg !7649
  %6 = load float, float* %f.addr, align 4, !dbg !7650
  %7 = load float*, float** %r.addr, align 8, !dbg !7651
  %arrayidx3 = getelementptr inbounds float, float* %7, i64 2, !dbg !7651
  %8 = load float, float* %arrayidx3, align 4, !dbg !7652
  %mul4 = fmul float %8, %6, !dbg !7652
  store float %mul4, float* %arrayidx3, align 4, !dbg !7652
  ret void, !dbg !7653
}

; Function Attrs: noinline nounwind uwtable
define internal void @add_v3_v3v3(float* %r, float* %a, float* %b) #0 !dbg !7654 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !7655, metadata !DIExpression()), !dbg !7656
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !7657, metadata !DIExpression()), !dbg !7658
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !7659, metadata !DIExpression()), !dbg !7660
  %0 = load float*, float** %a.addr, align 8, !dbg !7661
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !7661
  %1 = load float, float* %arrayidx, align 4, !dbg !7661
  %2 = load float*, float** %b.addr, align 8, !dbg !7662
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !7662
  %3 = load float, float* %arrayidx1, align 4, !dbg !7662
  %add = fadd float %1, %3, !dbg !7663
  %4 = load float*, float** %r.addr, align 8, !dbg !7664
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 0, !dbg !7664
  store float %add, float* %arrayidx2, align 4, !dbg !7665
  %5 = load float*, float** %a.addr, align 8, !dbg !7666
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 1, !dbg !7666
  %6 = load float, float* %arrayidx3, align 4, !dbg !7666
  %7 = load float*, float** %b.addr, align 8, !dbg !7667
  %arrayidx4 = getelementptr inbounds float, float* %7, i64 1, !dbg !7667
  %8 = load float, float* %arrayidx4, align 4, !dbg !7667
  %add5 = fadd float %6, %8, !dbg !7668
  %9 = load float*, float** %r.addr, align 8, !dbg !7669
  %arrayidx6 = getelementptr inbounds float, float* %9, i64 1, !dbg !7669
  store float %add5, float* %arrayidx6, align 4, !dbg !7670
  %10 = load float*, float** %a.addr, align 8, !dbg !7671
  %arrayidx7 = getelementptr inbounds float, float* %10, i64 2, !dbg !7671
  %11 = load float, float* %arrayidx7, align 4, !dbg !7671
  %12 = load float*, float** %b.addr, align 8, !dbg !7672
  %arrayidx8 = getelementptr inbounds float, float* %12, i64 2, !dbg !7672
  %13 = load float, float* %arrayidx8, align 4, !dbg !7672
  %add9 = fadd float %11, %13, !dbg !7673
  %14 = load float*, float** %r.addr, align 8, !dbg !7674
  %arrayidx10 = getelementptr inbounds float, float* %14, i64 2, !dbg !7674
  store float %add9, float* %arrayidx10, align 4, !dbg !7675
  ret void, !dbg !7676
}

declare dso_local void @glPixelStorei(i32, i32) #3

declare dso_local void @glLineWidth(float) #3

declare dso_local void @glRasterPos3f(float, float, float) #3

declare dso_local void @glBitmap(i32, i32, float, float, float, float, i8*) #3

; Function Attrs: noinline nounwind uwtable
define internal void @add_v3_v3(float* %r, float* %a) #0 !dbg !7677 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !7678, metadata !DIExpression()), !dbg !7679
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !7680, metadata !DIExpression()), !dbg !7681
  %0 = load float*, float** %a.addr, align 8, !dbg !7682
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !7682
  %1 = load float, float* %arrayidx, align 4, !dbg !7682
  %2 = load float*, float** %r.addr, align 8, !dbg !7683
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !7683
  %3 = load float, float* %arrayidx1, align 4, !dbg !7684
  %add = fadd float %3, %1, !dbg !7684
  store float %add, float* %arrayidx1, align 4, !dbg !7684
  %4 = load float*, float** %a.addr, align 8, !dbg !7685
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !7685
  %5 = load float, float* %arrayidx2, align 4, !dbg !7685
  %6 = load float*, float** %r.addr, align 8, !dbg !7686
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !7686
  %7 = load float, float* %arrayidx3, align 4, !dbg !7687
  %add4 = fadd float %7, %5, !dbg !7687
  store float %add4, float* %arrayidx3, align 4, !dbg !7687
  %8 = load float*, float** %a.addr, align 8, !dbg !7688
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !7688
  %9 = load float, float* %arrayidx5, align 4, !dbg !7688
  %10 = load float*, float** %r.addr, align 8, !dbg !7689
  %arrayidx6 = getelementptr inbounds float, float* %10, i64 2, !dbg !7689
  %11 = load float, float* %arrayidx6, align 4, !dbg !7690
  %add7 = fadd float %11, %9, !dbg !7690
  store float %add7, float* %arrayidx6, align 4, !dbg !7690
  ret void, !dbg !7691
}

declare dso_local %struct.AnimData* @BKE_animdata_from_id(%struct.ID*) #3

declare dso_local void @BKE_pose_copy_data(%struct.bPose**, %struct.bPose*, i8 zeroext) #3

declare dso_local void @BKE_pose_rebuild(%struct.Object*, %struct.bArmature*) #3

; Function Attrs: noinline nounwind uwtable
define internal void @ghost_poses_tag_unselected(%struct.Object* %ob, i16 signext %unset) #0 !dbg !7692 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  %unset.addr = alloca i16, align 2
  %arm = alloca %struct.bArmature*, align 8
  %pose = alloca %struct.bPose*, align 8
  %pchan = alloca %struct.bPoseChannel*, align 8
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !7695, metadata !DIExpression()), !dbg !7696
  store i16 %unset, i16* %unset.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %unset.addr, metadata !7697, metadata !DIExpression()), !dbg !7698
  call void @llvm.dbg.declare(metadata %struct.bArmature** %arm, metadata !7699, metadata !DIExpression()), !dbg !7700
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !7701
  %data = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 19, !dbg !7702
  %1 = load i8*, i8** %data, align 8, !dbg !7702
  %2 = bitcast i8* %1 to %struct.bArmature*, !dbg !7701
  store %struct.bArmature* %2, %struct.bArmature** %arm, align 8, !dbg !7700
  call void @llvm.dbg.declare(metadata %struct.bPose** %pose, metadata !7703, metadata !DIExpression()), !dbg !7704
  %3 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !7705
  %pose1 = getelementptr inbounds %struct.Object, %struct.Object* %3, i32 0, i32 18, !dbg !7706
  %4 = load %struct.bPose*, %struct.bPose** %pose1, align 8, !dbg !7706
  store %struct.bPose* %4, %struct.bPose** %pose, align 8, !dbg !7704
  call void @llvm.dbg.declare(metadata %struct.bPoseChannel** %pchan, metadata !7707, metadata !DIExpression()), !dbg !7708
  %5 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !7709
  %flag = getelementptr inbounds %struct.bArmature, %struct.bArmature* %5, i32 0, i32 8, !dbg !7711
  %6 = load i32, i32* %flag, align 8, !dbg !7711
  %and = and i32 %6, 4096, !dbg !7712
  %cmp = icmp eq i32 %and, 0, !dbg !7713
  br i1 %cmp, label %if.then, label %if.end, !dbg !7714

if.then:                                          ; preds = %entry
  br label %for.end, !dbg !7715

if.end:                                           ; preds = %entry
  %7 = load %struct.bPose*, %struct.bPose** %pose, align 8, !dbg !7716
  %chanbase = getelementptr inbounds %struct.bPose, %struct.bPose* %7, i32 0, i32 0, !dbg !7718
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %chanbase, i32 0, i32 0, !dbg !7719
  %8 = load i8*, i8** %first, align 8, !dbg !7719
  %9 = bitcast i8* %8 to %struct.bPoseChannel*, !dbg !7716
  store %struct.bPoseChannel* %9, %struct.bPoseChannel** %pchan, align 8, !dbg !7720
  br label %for.cond, !dbg !7721

for.cond:                                         ; preds = %for.inc, %if.end
  %10 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !7722
  %tobool = icmp ne %struct.bPoseChannel* %10, null, !dbg !7724
  br i1 %tobool, label %for.body, label %for.end, !dbg !7724

for.body:                                         ; preds = %for.cond
  %11 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !7725
  %bone = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %11, i32 0, i32 12, !dbg !7728
  %12 = load %struct.Bone*, %struct.Bone** %bone, align 8, !dbg !7728
  %tobool2 = icmp ne %struct.Bone* %12, null, !dbg !7729
  br i1 %tobool2, label %land.lhs.true, label %if.end22, !dbg !7730

land.lhs.true:                                    ; preds = %for.body
  %13 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !7731
  %layer = getelementptr inbounds %struct.bArmature, %struct.bArmature* %13, i32 0, i32 15, !dbg !7732
  %14 = load i32, i32* %layer, align 8, !dbg !7732
  %15 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !7733
  %bone3 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %15, i32 0, i32 12, !dbg !7734
  %16 = load %struct.Bone*, %struct.Bone** %bone3, align 8, !dbg !7734
  %layer4 = getelementptr inbounds %struct.Bone, %struct.Bone* %16, i32 0, i32 25, !dbg !7735
  %17 = load i32, i32* %layer4, align 8, !dbg !7735
  %and5 = and i32 %14, %17, !dbg !7736
  %tobool6 = icmp ne i32 %and5, 0, !dbg !7736
  br i1 %tobool6, label %if.then7, label %if.end22, !dbg !7737

if.then7:                                         ; preds = %land.lhs.true
  %18 = load i16, i16* %unset.addr, align 2, !dbg !7738
  %tobool8 = icmp ne i16 %18, 0, !dbg !7738
  br i1 %tobool8, label %if.then9, label %if.else, !dbg !7741

if.then9:                                         ; preds = %if.then7
  %19 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !7742
  %bone10 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %19, i32 0, i32 12, !dbg !7744
  %20 = load %struct.Bone*, %struct.Bone** %bone10, align 8, !dbg !7744
  %flag11 = getelementptr inbounds %struct.Bone, %struct.Bone* %20, i32 0, i32 10, !dbg !7745
  %21 = load i32, i32* %flag11, align 8, !dbg !7746
  %and12 = and i32 %21, -65537, !dbg !7746
  store i32 %and12, i32* %flag11, align 8, !dbg !7746
  br label %if.end21, !dbg !7747

if.else:                                          ; preds = %if.then7
  %22 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !7748
  %bone13 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %22, i32 0, i32 12, !dbg !7751
  %23 = load %struct.Bone*, %struct.Bone** %bone13, align 8, !dbg !7751
  %flag14 = getelementptr inbounds %struct.Bone, %struct.Bone* %23, i32 0, i32 10, !dbg !7752
  %24 = load i32, i32* %flag14, align 8, !dbg !7752
  %and15 = and i32 %24, 1, !dbg !7753
  %cmp16 = icmp eq i32 %and15, 0, !dbg !7754
  br i1 %cmp16, label %if.then17, label %if.end20, !dbg !7755

if.then17:                                        ; preds = %if.else
  %25 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !7756
  %bone18 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %25, i32 0, i32 12, !dbg !7757
  %26 = load %struct.Bone*, %struct.Bone** %bone18, align 8, !dbg !7757
  %flag19 = getelementptr inbounds %struct.Bone, %struct.Bone* %26, i32 0, i32 10, !dbg !7758
  %27 = load i32, i32* %flag19, align 8, !dbg !7759
  %or = or i32 %27, 65536, !dbg !7759
  store i32 %or, i32* %flag19, align 8, !dbg !7759
  br label %if.end20, !dbg !7756

if.end20:                                         ; preds = %if.then17, %if.else
  br label %if.end21

if.end21:                                         ; preds = %if.end20, %if.then9
  br label %if.end22, !dbg !7760

if.end22:                                         ; preds = %if.end21, %land.lhs.true, %for.body
  br label %for.inc, !dbg !7761

for.inc:                                          ; preds = %if.end22
  %28 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !7762
  %next = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %28, i32 0, i32 0, !dbg !7763
  %29 = load %struct.bPoseChannel*, %struct.bPoseChannel** %next, align 8, !dbg !7763
  store %struct.bPoseChannel* %29, %struct.bPoseChannel** %pchan, align 8, !dbg !7764
  br label %for.cond, !dbg !7765, !llvm.loop !7766

for.end:                                          ; preds = %if.then, %for.cond
  ret void, !dbg !7768
}

declare dso_local void @UI_ThemeColorShadeAlpha(i32, i32, i32) #3

declare dso_local void @BKE_animsys_evaluate_animdata(%struct.Scene*, %struct.ID*, %struct.AnimData*, float, i16 signext) #3

declare dso_local void @BKE_pose_where_is(%struct.Scene*, %struct.Object*) #3

declare dso_local void @BKE_pose_free(%struct.bPose*) #3

declare dso_local void @BLI_dlrbTree_init(%struct.DLRBT_Tree*) #3

declare dso_local void @action_to_keylist(%struct.AnimData*, %struct.bAction*, %struct.DLRBT_Tree*, %struct.DLRBT_Tree*) #3

declare dso_local void @BLI_dlrbTree_linkedlist_sync(%struct.DLRBT_Tree*) #3

declare dso_local void @BLI_freelinkN(%struct.ListBase*, i8*) #3

declare dso_local void @BLI_dlrbTree_free(%struct.DLRBT_Tree*) #3

declare dso_local void @calc_action_range(%struct.bAction*, float*, float*, i16 signext) #3

declare dso_local float @BKE_nla_tweakedit_remap(%struct.AnimData*, float, i16 signext) #3

; Function Attrs: nounwind
declare dso_local double @fmod(double, double) #5

declare dso_local void @draw_motion_paths_init(%struct.View3D*, %struct.ARegion*) #3

declare dso_local void @draw_motion_path_instance(%struct.Scene*, %struct.Object*, %struct.bPoseChannel*, %struct.bAnimVizSettings*, %struct.bMotionPath*) #3

declare dso_local void @draw_motion_paths_cleanup(%struct.View3D*) #3

declare dso_local void @glGetFloatv(i32, float*) #3

declare dso_local void @glCullFace(i32) #3

; Function Attrs: noinline nounwind uwtable
define internal void @set_pchan_colorset(%struct.Object* %ob, %struct.bPoseChannel* %pchan) #0 !dbg !7769 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  %pchan.addr = alloca %struct.bPoseChannel*, align 8
  %pose = alloca %struct.bPose*, align 8
  %arm = alloca %struct.bArmature*, align 8
  %grp = alloca %struct.bActionGroup*, align 8
  %color_index = alloca i16, align 2
  %btheme = alloca %struct.bTheme*, align 8
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !7772, metadata !DIExpression()), !dbg !7773
  store %struct.bPoseChannel* %pchan, %struct.bPoseChannel** %pchan.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bPoseChannel** %pchan.addr, metadata !7774, metadata !DIExpression()), !dbg !7775
  call void @llvm.dbg.declare(metadata %struct.bPose** %pose, metadata !7776, metadata !DIExpression()), !dbg !7777
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !7778
  %tobool = icmp ne %struct.Object* %0, null, !dbg !7779
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !7779

cond.true:                                        ; preds = %entry
  %1 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !7780
  %pose1 = getelementptr inbounds %struct.Object, %struct.Object* %1, i32 0, i32 18, !dbg !7781
  %2 = load %struct.bPose*, %struct.bPose** %pose1, align 8, !dbg !7781
  br label %cond.end, !dbg !7779

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !7779

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.bPose* [ %2, %cond.true ], [ null, %cond.false ], !dbg !7779
  store %struct.bPose* %cond, %struct.bPose** %pose, align 8, !dbg !7777
  call void @llvm.dbg.declare(metadata %struct.bArmature** %arm, metadata !7782, metadata !DIExpression()), !dbg !7783
  %3 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !7784
  %tobool2 = icmp ne %struct.Object* %3, null, !dbg !7785
  br i1 %tobool2, label %cond.true3, label %cond.false4, !dbg !7785

cond.true3:                                       ; preds = %cond.end
  %4 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !7786
  %data = getelementptr inbounds %struct.Object, %struct.Object* %4, i32 0, i32 19, !dbg !7787
  %5 = load i8*, i8** %data, align 8, !dbg !7787
  br label %cond.end5, !dbg !7785

cond.false4:                                      ; preds = %cond.end
  br label %cond.end5, !dbg !7785

cond.end5:                                        ; preds = %cond.false4, %cond.true3
  %cond6 = phi i8* [ %5, %cond.true3 ], [ null, %cond.false4 ], !dbg !7785
  %6 = bitcast i8* %cond6 to %struct.bArmature*, !dbg !7785
  store %struct.bArmature* %6, %struct.bArmature** %arm, align 8, !dbg !7783
  call void @llvm.dbg.declare(metadata %struct.bActionGroup** %grp, metadata !7788, metadata !DIExpression()), !dbg !7789
  store %struct.bActionGroup* null, %struct.bActionGroup** %grp, align 8, !dbg !7789
  call void @llvm.dbg.declare(metadata i16* %color_index, metadata !7790, metadata !DIExpression()), !dbg !7791
  store i16 0, i16* %color_index, align 2, !dbg !7791
  %7 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !7792
  %cmp = icmp eq %struct.Object* null, %7, !dbg !7792
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !7792

lor.lhs.false:                                    ; preds = %cond.end5
  %8 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !7792
  %cmp7 = icmp eq %struct.bArmature* null, %8, !dbg !7792
  br i1 %cmp7, label %if.then, label %lor.lhs.false8, !dbg !7792

lor.lhs.false8:                                   ; preds = %lor.lhs.false
  %9 = load %struct.bPose*, %struct.bPose** %pose, align 8, !dbg !7792
  %cmp9 = icmp eq %struct.bPose* null, %9, !dbg !7792
  br i1 %cmp9, label %if.then, label %lor.lhs.false10, !dbg !7792

lor.lhs.false10:                                  ; preds = %lor.lhs.false8
  %10 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan.addr, align 8, !dbg !7792
  %cmp11 = icmp eq %struct.bPoseChannel* null, %10, !dbg !7792
  br i1 %cmp11, label %if.then, label %if.end, !dbg !7794

if.then:                                          ; preds = %lor.lhs.false10, %lor.lhs.false8, %lor.lhs.false, %cond.end5
  store %struct.ThemeWireColor* null, %struct.ThemeWireColor** @bcolor, align 8, !dbg !7795
  br label %if.end41, !dbg !7797

if.end:                                           ; preds = %lor.lhs.false10
  %11 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !7798
  %flag = getelementptr inbounds %struct.bArmature, %struct.bArmature* %11, i32 0, i32 8, !dbg !7800
  %12 = load i32, i32* %flag, align 8, !dbg !7800
  %and = and i32 %12, 2048, !dbg !7801
  %tobool12 = icmp ne i32 %and, 0, !dbg !7801
  br i1 %tobool12, label %if.then13, label %if.end22, !dbg !7802

if.then13:                                        ; preds = %if.end
  %13 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan.addr, align 8, !dbg !7803
  %agrp_index = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %13, i32 0, i32 8, !dbg !7806
  %14 = load i16, i16* %agrp_index, align 2, !dbg !7806
  %tobool14 = icmp ne i16 %14, 0, !dbg !7803
  br i1 %tobool14, label %if.then15, label %if.end21, !dbg !7807

if.then15:                                        ; preds = %if.then13
  %15 = load %struct.bPose*, %struct.bPose** %pose, align 8, !dbg !7808
  %agroups = getelementptr inbounds %struct.bPose, %struct.bPose* %15, i32 0, i32 9, !dbg !7810
  %16 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan.addr, align 8, !dbg !7811
  %agrp_index16 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %16, i32 0, i32 8, !dbg !7812
  %17 = load i16, i16* %agrp_index16, align 2, !dbg !7812
  %conv = sext i16 %17 to i32, !dbg !7811
  %sub = sub nsw i32 %conv, 1, !dbg !7813
  %call = call i8* @BLI_findlink(%struct.ListBase* %agroups, i32 %sub), !dbg !7814
  %18 = bitcast i8* %call to %struct.bActionGroup*, !dbg !7815
  store %struct.bActionGroup* %18, %struct.bActionGroup** %grp, align 8, !dbg !7816
  %19 = load %struct.bActionGroup*, %struct.bActionGroup** %grp, align 8, !dbg !7817
  %tobool17 = icmp ne %struct.bActionGroup* %19, null, !dbg !7817
  br i1 %tobool17, label %if.then18, label %if.end20, !dbg !7819

if.then18:                                        ; preds = %if.then15
  %20 = load %struct.bActionGroup*, %struct.bActionGroup** %grp, align 8, !dbg !7820
  %customCol = getelementptr inbounds %struct.bActionGroup, %struct.bActionGroup* %20, i32 0, i32 4, !dbg !7821
  %21 = load i32, i32* %customCol, align 4, !dbg !7821
  %conv19 = trunc i32 %21 to i16, !dbg !7820
  store i16 %conv19, i16* %color_index, align 2, !dbg !7822
  br label %if.end20, !dbg !7823

if.end20:                                         ; preds = %if.then18, %if.then15
  br label %if.end21, !dbg !7824

if.end21:                                         ; preds = %if.end20, %if.then13
  br label %if.end22, !dbg !7825

if.end22:                                         ; preds = %if.end21, %if.end
  %22 = load i16, i16* %color_index, align 2, !dbg !7826
  %conv23 = sext i16 %22 to i32, !dbg !7826
  %cmp24 = icmp sgt i32 %conv23, 0, !dbg !7828
  br i1 %cmp24, label %if.then26, label %if.else, !dbg !7829

if.then26:                                        ; preds = %if.end22
  call void @llvm.dbg.declare(metadata %struct.bTheme** %btheme, metadata !7830, metadata !DIExpression()), !dbg !8116
  %call27 = call %struct.bTheme* @UI_GetTheme(), !dbg !8117
  store %struct.bTheme* %call27, %struct.bTheme** %btheme, align 8, !dbg !8116
  %23 = load %struct.bTheme*, %struct.bTheme** %btheme, align 8, !dbg !8118
  %tarm = getelementptr inbounds %struct.bTheme, %struct.bTheme* %23, i32 0, i32 21, !dbg !8119
  %24 = load i16, i16* %color_index, align 2, !dbg !8120
  %conv28 = sext i16 %24 to i32, !dbg !8120
  %sub29 = sub nsw i32 %conv28, 1, !dbg !8121
  %idxprom = sext i32 %sub29 to i64, !dbg !8118
  %arrayidx = getelementptr inbounds [20 x %struct.ThemeWireColor], [20 x %struct.ThemeWireColor]* %tarm, i64 0, i64 %idxprom, !dbg !8118
  store %struct.ThemeWireColor* %arrayidx, %struct.ThemeWireColor** @bcolor, align 8, !dbg !8122
  br label %if.end41, !dbg !8123

if.else:                                          ; preds = %if.end22
  %25 = load i16, i16* %color_index, align 2, !dbg !8124
  %conv30 = sext i16 %25 to i32, !dbg !8124
  %cmp31 = icmp eq i32 %conv30, -1, !dbg !8126
  br i1 %cmp31, label %if.then33, label %if.else39, !dbg !8127

if.then33:                                        ; preds = %if.else
  %26 = load %struct.bActionGroup*, %struct.bActionGroup** %grp, align 8, !dbg !8128
  %tobool34 = icmp ne %struct.bActionGroup* %26, null, !dbg !8130
  br i1 %tobool34, label %cond.true35, label %cond.false36, !dbg !8130

cond.true35:                                      ; preds = %if.then33
  %27 = load %struct.bActionGroup*, %struct.bActionGroup** %grp, align 8, !dbg !8131
  %cs = getelementptr inbounds %struct.bActionGroup, %struct.bActionGroup* %27, i32 0, i32 6, !dbg !8132
  br label %cond.end37, !dbg !8130

cond.false36:                                     ; preds = %if.then33
  br label %cond.end37, !dbg !8130

cond.end37:                                       ; preds = %cond.false36, %cond.true35
  %cond38 = phi %struct.ThemeWireColor* [ %cs, %cond.true35 ], [ null, %cond.false36 ], !dbg !8130
  store %struct.ThemeWireColor* %cond38, %struct.ThemeWireColor** @bcolor, align 8, !dbg !8133
  br label %if.end40, !dbg !8134

if.else39:                                        ; preds = %if.else
  store %struct.ThemeWireColor* null, %struct.ThemeWireColor** @bcolor, align 8, !dbg !8135
  br label %if.end40

if.end40:                                         ; preds = %if.else39, %cond.end37
  br label %if.end41

if.end41:                                         ; preds = %if.then, %if.end40, %if.then26
  ret void, !dbg !8136
}

; Function Attrs: noinline nounwind uwtable
define internal void @draw_custom_bone(%struct.Scene* %scene, %struct.View3D* %v3d, %struct.RegionView3D* %rv3d, %struct.Object* %ob, i16 signext %dt, i32 %armflag, i32 %boneflag, i32 %id, float %length) #0 !dbg !8137 {
entry:
  %scene.addr = alloca %struct.Scene*, align 8
  %v3d.addr = alloca %struct.View3D*, align 8
  %rv3d.addr = alloca %struct.RegionView3D*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %dt.addr = alloca i16, align 2
  %armflag.addr = alloca i32, align 4
  %boneflag.addr = alloca i32, align 4
  %id.addr = alloca i32, align 4
  %length.addr = alloca float, align 4
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !8140, metadata !DIExpression()), !dbg !8141
  store %struct.View3D* %v3d, %struct.View3D** %v3d.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.View3D** %v3d.addr, metadata !8142, metadata !DIExpression()), !dbg !8143
  store %struct.RegionView3D* %rv3d, %struct.RegionView3D** %rv3d.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RegionView3D** %rv3d.addr, metadata !8144, metadata !DIExpression()), !dbg !8145
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !8146, metadata !DIExpression()), !dbg !8147
  store i16 %dt, i16* %dt.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %dt.addr, metadata !8148, metadata !DIExpression()), !dbg !8149
  store i32 %armflag, i32* %armflag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %armflag.addr, metadata !8150, metadata !DIExpression()), !dbg !8151
  store i32 %boneflag, i32* %boneflag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %boneflag.addr, metadata !8152, metadata !DIExpression()), !dbg !8153
  store i32 %id, i32* %id.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %id.addr, metadata !8154, metadata !DIExpression()), !dbg !8155
  store float %length, float* %length.addr, align 4
  call void @llvm.dbg.declare(metadata float* %length.addr, metadata !8156, metadata !DIExpression()), !dbg !8157
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !8158
  %cmp = icmp eq %struct.Object* %0, null, !dbg !8160
  br i1 %cmp, label %if.then, label %if.end, !dbg !8161

if.then:                                          ; preds = %entry
  br label %return, !dbg !8162

if.end:                                           ; preds = %entry
  %1 = load float, float* %length.addr, align 4, !dbg !8163
  %2 = load float, float* %length.addr, align 4, !dbg !8164
  %3 = load float, float* %length.addr, align 4, !dbg !8165
  call void @glScalef(float %1, float %2, float %3), !dbg !8166
  %4 = load i32, i32* %armflag.addr, align 4, !dbg !8167
  %and = and i32 %4, 16, !dbg !8169
  %tobool = icmp ne i32 %and, 0, !dbg !8169
  br i1 %tobool, label %if.then1, label %if.end2, !dbg !8170

if.then1:                                         ; preds = %if.end
  %5 = load i32, i32* %boneflag.addr, align 4, !dbg !8171
  %call = call zeroext i8 @set_pchan_glColor(i16 signext 0, i32 %5, i16 signext 0), !dbg !8173
  br label %if.end2, !dbg !8174

if.end2:                                          ; preds = %if.then1, %if.end
  %6 = load i32, i32* %id.addr, align 4, !dbg !8175
  %cmp3 = icmp ne i32 %6, -1, !dbg !8177
  br i1 %cmp3, label %if.then4, label %if.end6, !dbg !8178

if.then4:                                         ; preds = %if.end2
  %7 = load i32, i32* %id.addr, align 4, !dbg !8179
  %or = or i32 %7, 1073741824, !dbg !8181
  %call5 = call zeroext i8 @GPU_select_load_id(i32 %or), !dbg !8182
  br label %if.end6, !dbg !8183

if.end6:                                          ; preds = %if.then4, %if.end2
  %8 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !8184
  %9 = load %struct.View3D*, %struct.View3D** %v3d.addr, align 8, !dbg !8185
  %10 = load %struct.RegionView3D*, %struct.RegionView3D** %rv3d.addr, align 8, !dbg !8186
  %11 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !8187
  %12 = load i16, i16* %dt.addr, align 2, !dbg !8188
  %conv = trunc i16 %12 to i8, !dbg !8188
  %13 = load i32, i32* %armflag.addr, align 4, !dbg !8189
  %and7 = and i32 %13, 16, !dbg !8190
  call void @draw_object_instance(%struct.Scene* %8, %struct.View3D* %9, %struct.RegionView3D* %10, %struct.Object* %11, i8 zeroext %conv, i32 %and7), !dbg !8191
  br label %return, !dbg !8192

return:                                           ; preds = %if.end6, %if.then
  ret void, !dbg !8192
}

; Function Attrs: noinline nounwind uwtable
define internal void @pchan_draw_IK_root_lines(%struct.bPoseChannel* %pchan, i16 signext %only_temp) #0 !dbg !8193 {
entry:
  %pchan.addr = alloca %struct.bPoseChannel*, align 8
  %only_temp.addr = alloca i16, align 2
  %con = alloca %struct.bConstraint*, align 8
  %parchan = alloca %struct.bPoseChannel*, align 8
  %data = alloca %struct.bKinematicConstraint*, align 8
  %segcount = alloca i32, align 4
  %data30 = alloca %struct.bSplineIKConstraint*, align 8
  %segcount32 = alloca i32, align 4
  store %struct.bPoseChannel* %pchan, %struct.bPoseChannel** %pchan.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bPoseChannel** %pchan.addr, metadata !8196, metadata !DIExpression()), !dbg !8197
  store i16 %only_temp, i16* %only_temp.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %only_temp.addr, metadata !8198, metadata !DIExpression()), !dbg !8199
  call void @llvm.dbg.declare(metadata %struct.bConstraint** %con, metadata !8200, metadata !DIExpression()), !dbg !8220
  call void @llvm.dbg.declare(metadata %struct.bPoseChannel** %parchan, metadata !8221, metadata !DIExpression()), !dbg !8222
  %0 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan.addr, align 8, !dbg !8223
  %constraints = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %0, i32 0, i32 3, !dbg !8225
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %constraints, i32 0, i32 0, !dbg !8226
  %1 = load i8*, i8** %first, align 8, !dbg !8226
  %2 = bitcast i8* %1 to %struct.bConstraint*, !dbg !8223
  store %struct.bConstraint* %2, %struct.bConstraint** %con, align 8, !dbg !8227
  br label %for.cond, !dbg !8228

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !8229
  %tobool = icmp ne %struct.bConstraint* %3, null, !dbg !8231
  br i1 %tobool, label %for.body, label %for.end, !dbg !8231

for.body:                                         ; preds = %for.cond
  %4 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !8232
  %enforce = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %4, i32 0, i32 9, !dbg !8235
  %5 = load float, float* %enforce, align 8, !dbg !8235
  %cmp = fcmp oeq float %5, 0.000000e+00, !dbg !8236
  br i1 %cmp, label %if.then, label %if.end, !dbg !8237

if.then:                                          ; preds = %for.body
  br label %for.inc, !dbg !8238

if.end:                                           ; preds = %for.body
  %6 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !8239
  %type = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %6, i32 0, i32 3, !dbg !8240
  %7 = load i16, i16* %type, align 8, !dbg !8240
  %conv = sext i16 %7 to i32, !dbg !8239
  switch i32 %conv, label %sw.epilog [
    i32 3, label %sw.bb
    i32 22, label %sw.bb29
  ], !dbg !8241

sw.bb:                                            ; preds = %if.end
  call void @llvm.dbg.declare(metadata %struct.bKinematicConstraint** %data, metadata !8242, metadata !DIExpression()), !dbg !8245
  %8 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !8246
  %data1 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %8, i32 0, i32 2, !dbg !8247
  %9 = load i8*, i8** %data1, align 8, !dbg !8247
  %10 = bitcast i8* %9 to %struct.bKinematicConstraint*, !dbg !8248
  store %struct.bKinematicConstraint* %10, %struct.bKinematicConstraint** %data, align 8, !dbg !8245
  call void @llvm.dbg.declare(metadata i32* %segcount, metadata !8249, metadata !DIExpression()), !dbg !8250
  store i32 0, i32* %segcount, align 4, !dbg !8250
  %11 = load i16, i16* %only_temp.addr, align 2, !dbg !8251
  %conv2 = sext i16 %11 to i32, !dbg !8253
  %tobool3 = icmp ne i32 %conv2, 0, !dbg !8253
  br i1 %tobool3, label %land.lhs.true, label %if.end7, !dbg !8254

land.lhs.true:                                    ; preds = %sw.bb
  %12 = load %struct.bKinematicConstraint*, %struct.bKinematicConstraint** %data, align 8, !dbg !8255
  %flag = getelementptr inbounds %struct.bKinematicConstraint, %struct.bKinematicConstraint* %12, i32 0, i32 2, !dbg !8256
  %13 = load i16, i16* %flag, align 2, !dbg !8256
  %conv4 = sext i16 %13 to i32, !dbg !8255
  %and = and i32 %conv4, 8, !dbg !8257
  %tobool5 = icmp ne i32 %and, 0, !dbg !8257
  br i1 %tobool5, label %if.end7, label %if.then6, !dbg !8258

if.then6:                                         ; preds = %land.lhs.true
  br label %for.inc, !dbg !8259

if.end7:                                          ; preds = %land.lhs.true, %sw.bb
  call void @setlinestyle(i32 3), !dbg !8260
  call void @glBegin(i32 1), !dbg !8261
  %14 = load %struct.bKinematicConstraint*, %struct.bKinematicConstraint** %data, align 8, !dbg !8262
  %flag8 = getelementptr inbounds %struct.bKinematicConstraint, %struct.bKinematicConstraint* %14, i32 0, i32 2, !dbg !8264
  %15 = load i16, i16* %flag8, align 2, !dbg !8264
  %conv9 = sext i16 %15 to i32, !dbg !8262
  %and10 = and i32 %conv9, 1, !dbg !8265
  %cmp11 = icmp eq i32 %and10, 0, !dbg !8266
  br i1 %cmp11, label %if.then13, label %if.else, !dbg !8267

if.then13:                                        ; preds = %if.end7
  %16 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan.addr, align 8, !dbg !8268
  %parent = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %16, i32 0, i32 13, !dbg !8269
  %17 = load %struct.bPoseChannel*, %struct.bPoseChannel** %parent, align 8, !dbg !8269
  store %struct.bPoseChannel* %17, %struct.bPoseChannel** %parchan, align 8, !dbg !8270
  br label %if.end14, !dbg !8271

if.else:                                          ; preds = %if.end7
  %18 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan.addr, align 8, !dbg !8272
  store %struct.bPoseChannel* %18, %struct.bPoseChannel** %parchan, align 8, !dbg !8273
  br label %if.end14

if.end14:                                         ; preds = %if.else, %if.then13
  %19 = load %struct.bPoseChannel*, %struct.bPoseChannel** %parchan, align 8, !dbg !8274
  %pose_tail = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %19, i32 0, i32 32, !dbg !8275
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %pose_tail, i64 0, i64 0, !dbg !8274
  call void @glVertex3fv(float* %arraydecay), !dbg !8276
  br label %while.cond, !dbg !8277

while.cond:                                       ; preds = %if.end23, %if.end14
  %20 = load %struct.bPoseChannel*, %struct.bPoseChannel** %parchan, align 8, !dbg !8278
  %parent15 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %20, i32 0, i32 13, !dbg !8279
  %21 = load %struct.bPoseChannel*, %struct.bPoseChannel** %parent15, align 8, !dbg !8279
  %tobool16 = icmp ne %struct.bPoseChannel* %21, null, !dbg !8277
  br i1 %tobool16, label %while.body, label %while.end, !dbg !8277

while.body:                                       ; preds = %while.cond
  %22 = load i32, i32* %segcount, align 4, !dbg !8280
  %inc = add nsw i32 %22, 1, !dbg !8280
  store i32 %inc, i32* %segcount, align 4, !dbg !8280
  %23 = load i32, i32* %segcount, align 4, !dbg !8282
  %24 = load %struct.bKinematicConstraint*, %struct.bKinematicConstraint** %data, align 8, !dbg !8284
  %rootbone = getelementptr inbounds %struct.bKinematicConstraint, %struct.bKinematicConstraint* %24, i32 0, i32 3, !dbg !8285
  %25 = load i16, i16* %rootbone, align 4, !dbg !8285
  %conv17 = sext i16 %25 to i32, !dbg !8284
  %cmp18 = icmp eq i32 %23, %conv17, !dbg !8286
  br i1 %cmp18, label %if.then22, label %lor.lhs.false, !dbg !8287

lor.lhs.false:                                    ; preds = %while.body
  %26 = load i32, i32* %segcount, align 4, !dbg !8288
  %cmp20 = icmp sgt i32 %26, 255, !dbg !8289
  br i1 %cmp20, label %if.then22, label %if.end23, !dbg !8290

if.then22:                                        ; preds = %lor.lhs.false, %while.body
  br label %while.end, !dbg !8291

if.end23:                                         ; preds = %lor.lhs.false
  %27 = load %struct.bPoseChannel*, %struct.bPoseChannel** %parchan, align 8, !dbg !8293
  %parent24 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %27, i32 0, i32 13, !dbg !8294
  %28 = load %struct.bPoseChannel*, %struct.bPoseChannel** %parent24, align 8, !dbg !8294
  store %struct.bPoseChannel* %28, %struct.bPoseChannel** %parchan, align 8, !dbg !8295
  br label %while.cond, !dbg !8277, !llvm.loop !8296

while.end:                                        ; preds = %if.then22, %while.cond
  %29 = load %struct.bPoseChannel*, %struct.bPoseChannel** %parchan, align 8, !dbg !8298
  %tobool25 = icmp ne %struct.bPoseChannel* %29, null, !dbg !8298
  br i1 %tobool25, label %if.then26, label %if.end28, !dbg !8300

if.then26:                                        ; preds = %while.end
  %30 = load %struct.bPoseChannel*, %struct.bPoseChannel** %parchan, align 8, !dbg !8301
  %pose_head = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %30, i32 0, i32 31, !dbg !8302
  %arraydecay27 = getelementptr inbounds [3 x float], [3 x float]* %pose_head, i64 0, i64 0, !dbg !8301
  call void @glVertex3fv(float* %arraydecay27), !dbg !8303
  br label %if.end28, !dbg !8303

if.end28:                                         ; preds = %if.then26, %while.end
  call void @glEnd(), !dbg !8304
  call void @setlinestyle(i32 0), !dbg !8305
  br label %sw.epilog, !dbg !8306

sw.bb29:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata %struct.bSplineIKConstraint** %data30, metadata !8307, metadata !DIExpression()), !dbg !8309
  %31 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !8310
  %data31 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %31, i32 0, i32 2, !dbg !8311
  %32 = load i8*, i8** %data31, align 8, !dbg !8311
  %33 = bitcast i8* %32 to %struct.bSplineIKConstraint*, !dbg !8312
  store %struct.bSplineIKConstraint* %33, %struct.bSplineIKConstraint** %data30, align 8, !dbg !8309
  call void @llvm.dbg.declare(metadata i32* %segcount32, metadata !8313, metadata !DIExpression()), !dbg !8314
  store i32 0, i32* %segcount32, align 4, !dbg !8314
  call void @setlinestyle(i32 3), !dbg !8315
  call void @glBegin(i32 1), !dbg !8316
  %34 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan.addr, align 8, !dbg !8317
  store %struct.bPoseChannel* %34, %struct.bPoseChannel** %parchan, align 8, !dbg !8318
  %35 = load %struct.bPoseChannel*, %struct.bPoseChannel** %parchan, align 8, !dbg !8319
  %pose_tail33 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %35, i32 0, i32 32, !dbg !8320
  %arraydecay34 = getelementptr inbounds [3 x float], [3 x float]* %pose_tail33, i64 0, i64 0, !dbg !8319
  call void @glVertex3fv(float* %arraydecay34), !dbg !8321
  br label %while.cond35, !dbg !8322

while.cond35:                                     ; preds = %if.end47, %sw.bb29
  %36 = load %struct.bPoseChannel*, %struct.bPoseChannel** %parchan, align 8, !dbg !8323
  %parent36 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %36, i32 0, i32 13, !dbg !8324
  %37 = load %struct.bPoseChannel*, %struct.bPoseChannel** %parent36, align 8, !dbg !8324
  %tobool37 = icmp ne %struct.bPoseChannel* %37, null, !dbg !8322
  br i1 %tobool37, label %while.body38, label %while.end49, !dbg !8322

while.body38:                                     ; preds = %while.cond35
  %38 = load i32, i32* %segcount32, align 4, !dbg !8325
  %inc39 = add nsw i32 %38, 1, !dbg !8325
  store i32 %inc39, i32* %segcount32, align 4, !dbg !8325
  %39 = load i32, i32* %segcount32, align 4, !dbg !8327
  %40 = load %struct.bSplineIKConstraint*, %struct.bSplineIKConstraint** %data30, align 8, !dbg !8329
  %chainlen = getelementptr inbounds %struct.bSplineIKConstraint, %struct.bSplineIKConstraint* %40, i32 0, i32 3, !dbg !8330
  %41 = load i16, i16* %chainlen, align 2, !dbg !8330
  %conv40 = sext i16 %41 to i32, !dbg !8329
  %cmp41 = icmp eq i32 %39, %conv40, !dbg !8331
  br i1 %cmp41, label %if.then46, label %lor.lhs.false43, !dbg !8332

lor.lhs.false43:                                  ; preds = %while.body38
  %42 = load i32, i32* %segcount32, align 4, !dbg !8333
  %cmp44 = icmp sgt i32 %42, 255, !dbg !8334
  br i1 %cmp44, label %if.then46, label %if.end47, !dbg !8335

if.then46:                                        ; preds = %lor.lhs.false43, %while.body38
  br label %while.end49, !dbg !8336

if.end47:                                         ; preds = %lor.lhs.false43
  %43 = load %struct.bPoseChannel*, %struct.bPoseChannel** %parchan, align 8, !dbg !8337
  %parent48 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %43, i32 0, i32 13, !dbg !8338
  %44 = load %struct.bPoseChannel*, %struct.bPoseChannel** %parent48, align 8, !dbg !8338
  store %struct.bPoseChannel* %44, %struct.bPoseChannel** %parchan, align 8, !dbg !8339
  br label %while.cond35, !dbg !8322, !llvm.loop !8340

while.end49:                                      ; preds = %if.then46, %while.cond35
  %45 = load %struct.bPoseChannel*, %struct.bPoseChannel** %parchan, align 8, !dbg !8342
  %tobool50 = icmp ne %struct.bPoseChannel* %45, null, !dbg !8342
  br i1 %tobool50, label %if.then51, label %if.end54, !dbg !8344

if.then51:                                        ; preds = %while.end49
  %46 = load %struct.bPoseChannel*, %struct.bPoseChannel** %parchan, align 8, !dbg !8345
  %pose_head52 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %46, i32 0, i32 31, !dbg !8346
  %arraydecay53 = getelementptr inbounds [3 x float], [3 x float]* %pose_head52, i64 0, i64 0, !dbg !8345
  call void @glVertex3fv(float* %arraydecay53), !dbg !8347
  br label %if.end54, !dbg !8347

if.end54:                                         ; preds = %if.then51, %while.end49
  call void @glEnd(), !dbg !8348
  call void @setlinestyle(i32 0), !dbg !8349
  br label %sw.epilog, !dbg !8350

sw.epilog:                                        ; preds = %if.end, %if.end54, %if.end28
  br label %for.inc, !dbg !8351

for.inc:                                          ; preds = %sw.epilog, %if.then6, %if.then
  %47 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !8352
  %next = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %47, i32 0, i32 0, !dbg !8353
  %48 = load %struct.bConstraint*, %struct.bConstraint** %next, align 8, !dbg !8353
  store %struct.bConstraint* %48, %struct.bConstraint** %con, align 8, !dbg !8354
  br label %for.cond, !dbg !8355, !llvm.loop !8356

for.end:                                          ; preds = %for.cond
  ret void, !dbg !8358
}

; Function Attrs: noinline nounwind uwtable
define internal void @draw_pose_dofs(%struct.Object* %ob) #0 !dbg !8359 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  %arm = alloca %struct.bArmature*, align 8
  %pchan = alloca %struct.bPoseChannel*, align 8
  %bone = alloca %struct.Bone*, align 8
  %corner = alloca [4 x [3 x float]], align 16
  %posetrans = alloca [3 x float], align 4
  %mat = alloca [4 x [4 x float]], align 16
  %phi = alloca float, align 4
  %theta = alloca float, align 4
  %scale = alloca float, align 4
  %a = alloca i32, align 4
  %i = alloca i32, align 4
  %amin = alloca [3 x float], align 4
  %amax = alloca [3 x float], align 4
  %fac = alloca float, align 4
  %fac167 = alloca float, align 4
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !8362, metadata !DIExpression()), !dbg !8363
  call void @llvm.dbg.declare(metadata %struct.bArmature** %arm, metadata !8364, metadata !DIExpression()), !dbg !8365
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !8366
  %data = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 19, !dbg !8367
  %1 = load i8*, i8** %data, align 8, !dbg !8367
  %2 = bitcast i8* %1 to %struct.bArmature*, !dbg !8366
  store %struct.bArmature* %2, %struct.bArmature** %arm, align 8, !dbg !8365
  call void @llvm.dbg.declare(metadata %struct.bPoseChannel** %pchan, metadata !8368, metadata !DIExpression()), !dbg !8369
  call void @llvm.dbg.declare(metadata %struct.Bone** %bone, metadata !8370, metadata !DIExpression()), !dbg !8371
  %3 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !8372
  %pose = getelementptr inbounds %struct.Object, %struct.Object* %3, i32 0, i32 18, !dbg !8374
  %4 = load %struct.bPose*, %struct.bPose** %pose, align 8, !dbg !8374
  %chanbase = getelementptr inbounds %struct.bPose, %struct.bPose* %4, i32 0, i32 0, !dbg !8375
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %chanbase, i32 0, i32 0, !dbg !8376
  %5 = load i8*, i8** %first, align 8, !dbg !8376
  %6 = bitcast i8* %5 to %struct.bPoseChannel*, !dbg !8372
  store %struct.bPoseChannel* %6, %struct.bPoseChannel** %pchan, align 8, !dbg !8377
  br label %for.cond, !dbg !8378

for.cond:                                         ; preds = %for.inc205, %entry
  %7 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !8379
  %tobool = icmp ne %struct.bPoseChannel* %7, null, !dbg !8381
  br i1 %tobool, label %for.body, label %for.end206, !dbg !8381

for.body:                                         ; preds = %for.cond
  %8 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !8382
  %bone1 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %8, i32 0, i32 12, !dbg !8384
  %9 = load %struct.Bone*, %struct.Bone** %bone1, align 8, !dbg !8384
  store %struct.Bone* %9, %struct.Bone** %bone, align 8, !dbg !8385
  %10 = load %struct.Bone*, %struct.Bone** %bone, align 8, !dbg !8386
  %cmp = icmp ne %struct.Bone* %10, null, !dbg !8388
  br i1 %cmp, label %land.lhs.true, label %if.end204, !dbg !8389

land.lhs.true:                                    ; preds = %for.body
  %11 = load %struct.Bone*, %struct.Bone** %bone, align 8, !dbg !8390
  %flag = getelementptr inbounds %struct.Bone, %struct.Bone* %11, i32 0, i32 10, !dbg !8391
  %12 = load i32, i32* %flag, align 8, !dbg !8391
  %and = and i32 %12, 65600, !dbg !8392
  %tobool2 = icmp ne i32 %and, 0, !dbg !8392
  br i1 %tobool2, label %if.end204, label %if.then, !dbg !8393

if.then:                                          ; preds = %land.lhs.true
  %13 = load %struct.Bone*, %struct.Bone** %bone, align 8, !dbg !8394
  %flag3 = getelementptr inbounds %struct.Bone, %struct.Bone* %13, i32 0, i32 10, !dbg !8397
  %14 = load i32, i32* %flag3, align 8, !dbg !8397
  %and4 = and i32 %14, 1, !dbg !8398
  %tobool5 = icmp ne i32 %and4, 0, !dbg !8398
  br i1 %tobool5, label %if.then6, label %if.end203, !dbg !8399

if.then6:                                         ; preds = %if.then
  %15 = load %struct.Bone*, %struct.Bone** %bone, align 8, !dbg !8400
  %layer = getelementptr inbounds %struct.Bone, %struct.Bone* %15, i32 0, i32 25, !dbg !8403
  %16 = load i32, i32* %layer, align 8, !dbg !8403
  %17 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !8404
  %layer7 = getelementptr inbounds %struct.bArmature, %struct.bArmature* %17, i32 0, i32 15, !dbg !8405
  %18 = load i32, i32* %layer7, align 8, !dbg !8405
  %and8 = and i32 %16, %18, !dbg !8406
  %tobool9 = icmp ne i32 %and8, 0, !dbg !8406
  br i1 %tobool9, label %if.then10, label %if.end202, !dbg !8407

if.then10:                                        ; preds = %if.then6
  %19 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !8408
  %ikflag = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %19, i32 0, i32 6, !dbg !8411
  %20 = load i16, i16* %ikflag, align 2, !dbg !8411
  %conv = sext i16 %20 to i32, !dbg !8408
  %and11 = and i32 %conv, 40, !dbg !8412
  %tobool12 = icmp ne i32 %and11, 0, !dbg !8412
  br i1 %tobool12, label %if.then13, label %if.end201, !dbg !8413

if.then13:                                        ; preds = %if.then10
  %21 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !8414
  %22 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !8417
  %call = call zeroext i8 @BKE_pose_channel_in_IK_chain(%struct.Object* %21, %struct.bPoseChannel* %22), !dbg !8418
  %tobool14 = icmp ne i8 %call, 0, !dbg !8418
  br i1 %tobool14, label %if.then15, label %if.end200, !dbg !8419

if.then15:                                        ; preds = %if.then13
  call void @llvm.dbg.declare(metadata [4 x [3 x float]]* %corner, metadata !8420, metadata !DIExpression()), !dbg !8424
  call void @llvm.dbg.declare(metadata [3 x float]* %posetrans, metadata !8425, metadata !DIExpression()), !dbg !8426
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %mat, metadata !8427, metadata !DIExpression()), !dbg !8428
  call void @llvm.dbg.declare(metadata float* %phi, metadata !8429, metadata !DIExpression()), !dbg !8430
  store float 0.000000e+00, float* %phi, align 4, !dbg !8430
  call void @llvm.dbg.declare(metadata float* %theta, metadata !8431, metadata !DIExpression()), !dbg !8432
  store float 0.000000e+00, float* %theta, align 4, !dbg !8432
  call void @llvm.dbg.declare(metadata float* %scale, metadata !8433, metadata !DIExpression()), !dbg !8434
  call void @llvm.dbg.declare(metadata i32* %a, metadata !8435, metadata !DIExpression()), !dbg !8436
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8437, metadata !DIExpression()), !dbg !8438
  call void @glPushMatrix(), !dbg !8439
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %posetrans, i64 0, i64 0, !dbg !8440
  %23 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !8441
  %pose_mat = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %23, i32 0, i32 29, !dbg !8442
  %arrayidx = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %pose_mat, i64 0, i64 3, !dbg !8441
  %arraydecay16 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx, i64 0, i64 0, !dbg !8441
  call void @copy_v3_v3(float* %arraydecay, float* %arraydecay16), !dbg !8443
  %arrayidx17 = getelementptr inbounds [3 x float], [3 x float]* %posetrans, i64 0, i64 0, !dbg !8444
  %24 = load float, float* %arrayidx17, align 4, !dbg !8444
  %arrayidx18 = getelementptr inbounds [3 x float], [3 x float]* %posetrans, i64 0, i64 1, !dbg !8445
  %25 = load float, float* %arrayidx18, align 4, !dbg !8445
  %arrayidx19 = getelementptr inbounds [3 x float], [3 x float]* %posetrans, i64 0, i64 2, !dbg !8446
  %26 = load float, float* %arrayidx19, align 4, !dbg !8446
  call void @glTranslatef(float %24, float %25, float %26), !dbg !8447
  %27 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !8448
  %parent = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %27, i32 0, i32 13, !dbg !8450
  %28 = load %struct.bPoseChannel*, %struct.bPoseChannel** %parent, align 8, !dbg !8450
  %tobool20 = icmp ne %struct.bPoseChannel* %28, null, !dbg !8448
  br i1 %tobool20, label %if.then21, label %if.end, !dbg !8451

if.then21:                                        ; preds = %if.then15
  %arraydecay22 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat, i64 0, i64 0, !dbg !8452
  %29 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !8454
  %parent23 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %29, i32 0, i32 13, !dbg !8455
  %30 = load %struct.bPoseChannel*, %struct.bPoseChannel** %parent23, align 8, !dbg !8455
  %pose_mat24 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %30, i32 0, i32 29, !dbg !8456
  %arraydecay25 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %pose_mat24, i64 0, i64 0, !dbg !8454
  call void @copy_m4_m4([4 x float]* %arraydecay22, [4 x float]* %arraydecay25), !dbg !8457
  %arrayidx26 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat, i64 0, i64 3, !dbg !8458
  %arrayidx27 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx26, i64 0, i64 2, !dbg !8458
  store float 0.000000e+00, float* %arrayidx27, align 8, !dbg !8459
  %arrayidx28 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat, i64 0, i64 3, !dbg !8460
  %arrayidx29 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx28, i64 0, i64 1, !dbg !8460
  store float 0.000000e+00, float* %arrayidx29, align 4, !dbg !8461
  %arrayidx30 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat, i64 0, i64 3, !dbg !8462
  %arrayidx31 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx30, i64 0, i64 0, !dbg !8462
  store float 0.000000e+00, float* %arrayidx31, align 16, !dbg !8463
  %arraydecay32 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat, i64 0, i64 0, !dbg !8464
  %31 = bitcast [4 x float]* %arraydecay32 to float*, !dbg !8464
  call void @glMultMatrixf(float* %31), !dbg !8464
  br label %if.end, !dbg !8465

if.end:                                           ; preds = %if.then21, %if.then15
  %arraydecay33 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat, i64 0, i64 0, !dbg !8466
  %32 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !8467
  %bone34 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %32, i32 0, i32 12, !dbg !8468
  %33 = load %struct.Bone*, %struct.Bone** %bone34, align 8, !dbg !8468
  %bone_mat = getelementptr inbounds %struct.Bone, %struct.Bone* %33, i32 0, i32 9, !dbg !8469
  %arraydecay35 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %bone_mat, i64 0, i64 0, !dbg !8467
  call void @copy_m4_m3([4 x float]* %arraydecay33, [3 x float]* %arraydecay35), !dbg !8470
  %arraydecay36 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat, i64 0, i64 0, !dbg !8471
  %34 = bitcast [4 x float]* %arraydecay36 to float*, !dbg !8471
  call void @glMultMatrixf(float* %34), !dbg !8471
  %35 = load %struct.Bone*, %struct.Bone** %bone, align 8, !dbg !8472
  %length = getelementptr inbounds %struct.Bone, %struct.Bone* %35, i32 0, i32 18, !dbg !8473
  %36 = load float, float* %length, align 4, !dbg !8473
  %37 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !8474
  %size = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %37, i32 0, i32 21, !dbg !8475
  %arrayidx37 = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 1, !dbg !8474
  %38 = load float, float* %arrayidx37, align 4, !dbg !8474
  %mul = fmul float %36, %38, !dbg !8476
  store float %mul, float* %scale, align 4, !dbg !8477
  %39 = load float, float* %scale, align 4, !dbg !8478
  %40 = load float, float* %scale, align 4, !dbg !8479
  %41 = load float, float* %scale, align 4, !dbg !8480
  call void @glScalef(float %39, float %40, float %41), !dbg !8481
  %42 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !8482
  %ikflag38 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %42, i32 0, i32 6, !dbg !8484
  %43 = load i16, i16* %ikflag38, align 2, !dbg !8484
  %conv39 = sext i16 %43 to i32, !dbg !8482
  %and40 = and i32 %conv39, 8, !dbg !8485
  %tobool41 = icmp ne i32 %and40, 0, !dbg !8485
  br i1 %tobool41, label %if.then42, label %if.end108, !dbg !8486

if.then42:                                        ; preds = %if.end
  %44 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !8487
  %ikflag43 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %44, i32 0, i32 6, !dbg !8490
  %45 = load i16, i16* %ikflag43, align 2, !dbg !8490
  %conv44 = sext i16 %45 to i32, !dbg !8487
  %and45 = and i32 %conv44, 32, !dbg !8491
  %tobool46 = icmp ne i32 %and45, 0, !dbg !8491
  br i1 %tobool46, label %if.then47, label %if.end107, !dbg !8492

if.then47:                                        ; preds = %if.then42
  call void @llvm.dbg.declare(metadata [3 x float]* %amin, metadata !8493, metadata !DIExpression()), !dbg !8495
  call void @llvm.dbg.declare(metadata [3 x float]* %amax, metadata !8496, metadata !DIExpression()), !dbg !8497
  store i32 0, i32* %i, align 4, !dbg !8498
  br label %for.cond48, !dbg !8500

for.cond48:                                       ; preds = %for.inc, %if.then47
  %46 = load i32, i32* %i, align 4, !dbg !8501
  %cmp49 = icmp slt i32 %46, 3, !dbg !8503
  br i1 %cmp49, label %for.body51, label %for.end, !dbg !8504

for.body51:                                       ; preds = %for.cond48
  %47 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !8505
  %limitmin = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %47, i32 0, i32 33, !dbg !8507
  %48 = load i32, i32* %i, align 4, !dbg !8508
  %idxprom = sext i32 %48 to i64, !dbg !8505
  %arrayidx52 = getelementptr inbounds [3 x float], [3 x float]* %limitmin, i64 0, i64 %idxprom, !dbg !8505
  %49 = load float, float* %arrayidx52, align 4, !dbg !8505
  %mul53 = fmul float %49, 5.000000e-01, !dbg !8509
  %call54 = call float @sinf(float %mul53) #7, !dbg !8510
  %50 = load i32, i32* %i, align 4, !dbg !8511
  %idxprom55 = sext i32 %50 to i64, !dbg !8512
  %arrayidx56 = getelementptr inbounds [3 x float], [3 x float]* %amin, i64 0, i64 %idxprom55, !dbg !8512
  store float %call54, float* %arrayidx56, align 4, !dbg !8513
  %51 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !8514
  %limitmax = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %51, i32 0, i32 34, !dbg !8515
  %52 = load i32, i32* %i, align 4, !dbg !8516
  %idxprom57 = sext i32 %52 to i64, !dbg !8514
  %arrayidx58 = getelementptr inbounds [3 x float], [3 x float]* %limitmax, i64 0, i64 %idxprom57, !dbg !8514
  %53 = load float, float* %arrayidx58, align 4, !dbg !8514
  %mul59 = fmul float %53, 5.000000e-01, !dbg !8517
  %call60 = call float @sinf(float %mul59) #7, !dbg !8518
  %54 = load i32, i32* %i, align 4, !dbg !8519
  %idxprom61 = sext i32 %54 to i64, !dbg !8520
  %arrayidx62 = getelementptr inbounds [3 x float], [3 x float]* %amax, i64 0, i64 %idxprom61, !dbg !8520
  store float %call60, float* %arrayidx62, align 4, !dbg !8521
  br label %for.inc, !dbg !8522

for.inc:                                          ; preds = %for.body51
  %55 = load i32, i32* %i, align 4, !dbg !8523
  %inc = add nsw i32 %55, 1, !dbg !8523
  store i32 %inc, i32* %i, align 4, !dbg !8523
  br label %for.cond48, !dbg !8524, !llvm.loop !8525

for.end:                                          ; preds = %for.cond48
  call void @glScalef(float 1.000000e+00, float -1.000000e+00, float 1.000000e+00), !dbg !8527
  %arrayidx63 = getelementptr inbounds [3 x float], [3 x float]* %amin, i64 0, i64 0, !dbg !8528
  %56 = load float, float* %arrayidx63, align 4, !dbg !8528
  %cmp64 = fcmp une float %56, 0.000000e+00, !dbg !8530
  br i1 %cmp64, label %land.lhs.true66, label %if.end73, !dbg !8531

land.lhs.true66:                                  ; preds = %for.end
  %arrayidx67 = getelementptr inbounds [3 x float], [3 x float]* %amin, i64 0, i64 2, !dbg !8532
  %57 = load float, float* %arrayidx67, align 4, !dbg !8532
  %cmp68 = fcmp une float %57, 0.000000e+00, !dbg !8533
  br i1 %cmp68, label %if.then70, label %if.end73, !dbg !8534

if.then70:                                        ; preds = %land.lhs.true66
  %arrayidx71 = getelementptr inbounds [3 x float], [3 x float]* %amin, i64 0, i64 0, !dbg !8535
  %58 = load float, float* %arrayidx71, align 4, !dbg !8535
  %arrayidx72 = getelementptr inbounds [3 x float], [3 x float]* %amin, i64 0, i64 2, !dbg !8536
  %59 = load float, float* %arrayidx72, align 4, !dbg !8536
  call void @draw_dof_ellipse(float %58, float %59), !dbg !8537
  br label %if.end73, !dbg !8537

if.end73:                                         ; preds = %if.then70, %land.lhs.true66, %for.end
  %arrayidx74 = getelementptr inbounds [3 x float], [3 x float]* %amin, i64 0, i64 0, !dbg !8538
  %60 = load float, float* %arrayidx74, align 4, !dbg !8538
  %cmp75 = fcmp une float %60, 0.000000e+00, !dbg !8540
  br i1 %cmp75, label %land.lhs.true77, label %if.end84, !dbg !8541

land.lhs.true77:                                  ; preds = %if.end73
  %arrayidx78 = getelementptr inbounds [3 x float], [3 x float]* %amax, i64 0, i64 2, !dbg !8542
  %61 = load float, float* %arrayidx78, align 4, !dbg !8542
  %cmp79 = fcmp une float %61, 0.000000e+00, !dbg !8543
  br i1 %cmp79, label %if.then81, label %if.end84, !dbg !8544

if.then81:                                        ; preds = %land.lhs.true77
  %arrayidx82 = getelementptr inbounds [3 x float], [3 x float]* %amin, i64 0, i64 0, !dbg !8545
  %62 = load float, float* %arrayidx82, align 4, !dbg !8545
  %arrayidx83 = getelementptr inbounds [3 x float], [3 x float]* %amax, i64 0, i64 2, !dbg !8546
  %63 = load float, float* %arrayidx83, align 4, !dbg !8546
  call void @draw_dof_ellipse(float %62, float %63), !dbg !8547
  br label %if.end84, !dbg !8547

if.end84:                                         ; preds = %if.then81, %land.lhs.true77, %if.end73
  %arrayidx85 = getelementptr inbounds [3 x float], [3 x float]* %amax, i64 0, i64 0, !dbg !8548
  %64 = load float, float* %arrayidx85, align 4, !dbg !8548
  %cmp86 = fcmp une float %64, 0.000000e+00, !dbg !8550
  br i1 %cmp86, label %land.lhs.true88, label %if.end95, !dbg !8551

land.lhs.true88:                                  ; preds = %if.end84
  %arrayidx89 = getelementptr inbounds [3 x float], [3 x float]* %amin, i64 0, i64 2, !dbg !8552
  %65 = load float, float* %arrayidx89, align 4, !dbg !8552
  %cmp90 = fcmp une float %65, 0.000000e+00, !dbg !8553
  br i1 %cmp90, label %if.then92, label %if.end95, !dbg !8554

if.then92:                                        ; preds = %land.lhs.true88
  %arrayidx93 = getelementptr inbounds [3 x float], [3 x float]* %amax, i64 0, i64 0, !dbg !8555
  %66 = load float, float* %arrayidx93, align 4, !dbg !8555
  %arrayidx94 = getelementptr inbounds [3 x float], [3 x float]* %amin, i64 0, i64 2, !dbg !8556
  %67 = load float, float* %arrayidx94, align 4, !dbg !8556
  call void @draw_dof_ellipse(float %66, float %67), !dbg !8557
  br label %if.end95, !dbg !8557

if.end95:                                         ; preds = %if.then92, %land.lhs.true88, %if.end84
  %arrayidx96 = getelementptr inbounds [3 x float], [3 x float]* %amax, i64 0, i64 0, !dbg !8558
  %68 = load float, float* %arrayidx96, align 4, !dbg !8558
  %cmp97 = fcmp une float %68, 0.000000e+00, !dbg !8560
  br i1 %cmp97, label %land.lhs.true99, label %if.end106, !dbg !8561

land.lhs.true99:                                  ; preds = %if.end95
  %arrayidx100 = getelementptr inbounds [3 x float], [3 x float]* %amax, i64 0, i64 2, !dbg !8562
  %69 = load float, float* %arrayidx100, align 4, !dbg !8562
  %cmp101 = fcmp une float %69, 0.000000e+00, !dbg !8563
  br i1 %cmp101, label %if.then103, label %if.end106, !dbg !8564

if.then103:                                       ; preds = %land.lhs.true99
  %arrayidx104 = getelementptr inbounds [3 x float], [3 x float]* %amax, i64 0, i64 0, !dbg !8565
  %70 = load float, float* %arrayidx104, align 4, !dbg !8565
  %arrayidx105 = getelementptr inbounds [3 x float], [3 x float]* %amax, i64 0, i64 2, !dbg !8566
  %71 = load float, float* %arrayidx105, align 4, !dbg !8566
  call void @draw_dof_ellipse(float %70, float %71), !dbg !8567
  br label %if.end106, !dbg !8567

if.end106:                                        ; preds = %if.then103, %land.lhs.true99, %if.end95
  call void @glScalef(float 1.000000e+00, float -1.000000e+00, float 1.000000e+00), !dbg !8568
  br label %if.end107, !dbg !8569

if.end107:                                        ; preds = %if.end106, %if.then42
  br label %if.end108, !dbg !8570

if.end108:                                        ; preds = %if.end107, %if.end
  %72 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !8571
  %ikflag109 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %72, i32 0, i32 6, !dbg !8573
  %73 = load i16, i16* %ikflag109, align 2, !dbg !8573
  %conv110 = sext i16 %73 to i32, !dbg !8571
  %and111 = and i32 %conv110, 32, !dbg !8574
  %tobool112 = icmp ne i32 %and111, 0, !dbg !8574
  br i1 %tobool112, label %if.then113, label %if.end150, !dbg !8575

if.then113:                                       ; preds = %if.end108
  %74 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !8576
  %limitmin114 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %74, i32 0, i32 33, !dbg !8576
  %arrayidx115 = getelementptr inbounds [3 x float], [3 x float]* %limitmin114, i64 0, i64 2, !dbg !8576
  %75 = load float, float* %arrayidx115, align 8, !dbg !8576
  %76 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !8576
  %limitmax116 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %76, i32 0, i32 34, !dbg !8576
  %arrayidx117 = getelementptr inbounds [3 x float], [3 x float]* %limitmax116, i64 0, i64 2, !dbg !8576
  %77 = load float, float* %arrayidx117, align 4, !dbg !8576
  %add = fadd float %75, %77, !dbg !8576
  %mul118 = fmul float 5.000000e-01, %add, !dbg !8576
  %mul119 = fmul float %mul118, 0x404CA5DC20000000, !dbg !8576
  store float %mul119, float* %theta, align 4, !dbg !8578
  %78 = load float, float* %theta, align 4, !dbg !8579
  call void @glRotatef(float %78, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00), !dbg !8580
  call void @glColor3ub(i8 zeroext 50, i8 zeroext 50, i8 zeroext -1), !dbg !8581
  call void @glBegin(i32 3), !dbg !8582
  store i32 -16, i32* %a, align 4, !dbg !8583
  br label %for.cond120, !dbg !8585

for.cond120:                                      ; preds = %for.inc147, %if.then113
  %79 = load i32, i32* %a, align 4, !dbg !8586
  %cmp121 = icmp sle i32 %79, 16, !dbg !8588
  br i1 %cmp121, label %for.body123, label %for.end149, !dbg !8589

for.body123:                                      ; preds = %for.cond120
  call void @llvm.dbg.declare(metadata float* %fac, metadata !8590, metadata !DIExpression()), !dbg !8592
  %80 = load i32, i32* %a, align 4, !dbg !8593
  %conv124 = sitofp i32 %80 to float, !dbg !8594
  %div = fdiv float %conv124, 1.600000e+01, !dbg !8595
  %mul125 = fmul float %div, 5.000000e-01, !dbg !8596
  store float %mul125, float* %fac, align 4, !dbg !8592
  %81 = load float, float* %fac, align 4, !dbg !8597
  %82 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !8598
  %limitmax126 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %82, i32 0, i32 34, !dbg !8599
  %arrayidx127 = getelementptr inbounds [3 x float], [3 x float]* %limitmax126, i64 0, i64 2, !dbg !8598
  %83 = load float, float* %arrayidx127, align 4, !dbg !8598
  %84 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !8600
  %limitmin128 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %84, i32 0, i32 33, !dbg !8601
  %arrayidx129 = getelementptr inbounds [3 x float], [3 x float]* %limitmin128, i64 0, i64 2, !dbg !8600
  %85 = load float, float* %arrayidx129, align 8, !dbg !8600
  %sub = fsub float %83, %85, !dbg !8602
  %mul130 = fmul float %81, %sub, !dbg !8603
  store float %mul130, float* %phi, align 4, !dbg !8604
  %86 = load i32, i32* %a, align 4, !dbg !8605
  %cmp131 = icmp eq i32 %86, -16, !dbg !8606
  %87 = zext i1 %cmp131 to i64, !dbg !8607
  %cond = select i1 %cmp131, i32 0, i32 1, !dbg !8607
  store i32 %cond, i32* %i, align 4, !dbg !8608
  %88 = load float, float* %phi, align 4, !dbg !8609
  %call133 = call float @sinf(float %88) #7, !dbg !8610
  %89 = load i32, i32* %i, align 4, !dbg !8611
  %idxprom134 = sext i32 %89 to i64, !dbg !8612
  %arrayidx135 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %corner, i64 0, i64 %idxprom134, !dbg !8612
  %arrayidx136 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx135, i64 0, i64 0, !dbg !8612
  store float %call133, float* %arrayidx136, align 4, !dbg !8613
  %90 = load float, float* %phi, align 4, !dbg !8614
  %call137 = call float @cosf(float %90) #7, !dbg !8615
  %91 = load i32, i32* %i, align 4, !dbg !8616
  %idxprom138 = sext i32 %91 to i64, !dbg !8617
  %arrayidx139 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %corner, i64 0, i64 %idxprom138, !dbg !8617
  %arrayidx140 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx139, i64 0, i64 1, !dbg !8617
  store float %call137, float* %arrayidx140, align 4, !dbg !8618
  %92 = load i32, i32* %i, align 4, !dbg !8619
  %idxprom141 = sext i32 %92 to i64, !dbg !8620
  %arrayidx142 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %corner, i64 0, i64 %idxprom141, !dbg !8620
  %arrayidx143 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx142, i64 0, i64 2, !dbg !8620
  store float 0.000000e+00, float* %arrayidx143, align 4, !dbg !8621
  %93 = load i32, i32* %i, align 4, !dbg !8622
  %idxprom144 = sext i32 %93 to i64, !dbg !8623
  %arrayidx145 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %corner, i64 0, i64 %idxprom144, !dbg !8623
  %arraydecay146 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx145, i64 0, i64 0, !dbg !8623
  call void @glVertex3fv(float* %arraydecay146), !dbg !8624
  br label %for.inc147, !dbg !8625

for.inc147:                                       ; preds = %for.body123
  %94 = load i32, i32* %a, align 4, !dbg !8626
  %inc148 = add nsw i32 %94, 1, !dbg !8626
  store i32 %inc148, i32* %a, align 4, !dbg !8626
  br label %for.cond120, !dbg !8627, !llvm.loop !8628

for.end149:                                       ; preds = %for.cond120
  call void @glEnd(), !dbg !8630
  %95 = load float, float* %theta, align 4, !dbg !8631
  %fneg = fneg float %95, !dbg !8632
  call void @glRotatef(float %fneg, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00), !dbg !8633
  br label %if.end150, !dbg !8634

if.end150:                                        ; preds = %for.end149, %if.end108
  %96 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !8635
  %ikflag151 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %96, i32 0, i32 6, !dbg !8637
  %97 = load i16, i16* %ikflag151, align 2, !dbg !8637
  %conv152 = sext i16 %97 to i32, !dbg !8635
  %and153 = and i32 %conv152, 8, !dbg !8638
  %tobool154 = icmp ne i32 %and153, 0, !dbg !8638
  br i1 %tobool154, label %if.then155, label %if.end199, !dbg !8639

if.then155:                                       ; preds = %if.end150
  %98 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !8640
  %limitmin156 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %98, i32 0, i32 33, !dbg !8640
  %arrayidx157 = getelementptr inbounds [3 x float], [3 x float]* %limitmin156, i64 0, i64 0, !dbg !8640
  %99 = load float, float* %arrayidx157, align 8, !dbg !8640
  %100 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !8640
  %limitmax158 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %100, i32 0, i32 34, !dbg !8640
  %arrayidx159 = getelementptr inbounds [3 x float], [3 x float]* %limitmax158, i64 0, i64 0, !dbg !8640
  %101 = load float, float* %arrayidx159, align 4, !dbg !8640
  %add160 = fadd float %99, %101, !dbg !8640
  %mul161 = fmul float 5.000000e-01, %add160, !dbg !8640
  %mul162 = fmul float %mul161, 0x404CA5DC20000000, !dbg !8640
  store float %mul162, float* %theta, align 4, !dbg !8642
  %102 = load float, float* %theta, align 4, !dbg !8643
  call void @glRotatef(float %102, float 1.000000e+00, float 0.000000e+00, float 0.000000e+00), !dbg !8644
  call void @glColor3ub(i8 zeroext -1, i8 zeroext 50, i8 zeroext 50), !dbg !8645
  call void @glBegin(i32 3), !dbg !8646
  store i32 -16, i32* %a, align 4, !dbg !8647
  br label %for.cond163, !dbg !8649

for.cond163:                                      ; preds = %for.inc195, %if.then155
  %103 = load i32, i32* %a, align 4, !dbg !8650
  %cmp164 = icmp sle i32 %103, 16, !dbg !8652
  br i1 %cmp164, label %for.body166, label %for.end197, !dbg !8653

for.body166:                                      ; preds = %for.cond163
  call void @llvm.dbg.declare(metadata float* %fac167, metadata !8654, metadata !DIExpression()), !dbg !8656
  %104 = load i32, i32* %a, align 4, !dbg !8657
  %conv168 = sitofp i32 %104 to float, !dbg !8658
  %div169 = fdiv float %conv168, 1.600000e+01, !dbg !8659
  %mul170 = fmul float %div169, 5.000000e-01, !dbg !8660
  store float %mul170, float* %fac167, align 4, !dbg !8656
  %105 = load float, float* %fac167, align 4, !dbg !8661
  %106 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !8662
  %limitmax171 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %106, i32 0, i32 34, !dbg !8663
  %arrayidx172 = getelementptr inbounds [3 x float], [3 x float]* %limitmax171, i64 0, i64 0, !dbg !8662
  %107 = load float, float* %arrayidx172, align 4, !dbg !8662
  %108 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !8664
  %limitmin173 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %108, i32 0, i32 33, !dbg !8665
  %arrayidx174 = getelementptr inbounds [3 x float], [3 x float]* %limitmin173, i64 0, i64 0, !dbg !8664
  %109 = load float, float* %arrayidx174, align 8, !dbg !8664
  %sub175 = fsub float %107, %109, !dbg !8666
  %mul176 = fmul float %105, %sub175, !dbg !8667
  %add177 = fadd float 0x3FF921FB60000000, %mul176, !dbg !8668
  store float %add177, float* %phi, align 4, !dbg !8669
  %110 = load i32, i32* %a, align 4, !dbg !8670
  %cmp178 = icmp eq i32 %110, -16, !dbg !8671
  %111 = zext i1 %cmp178 to i64, !dbg !8672
  %cond180 = select i1 %cmp178, i32 2, i32 3, !dbg !8672
  store i32 %cond180, i32* %i, align 4, !dbg !8673
  %112 = load i32, i32* %i, align 4, !dbg !8674
  %idxprom181 = sext i32 %112 to i64, !dbg !8675
  %arrayidx182 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %corner, i64 0, i64 %idxprom181, !dbg !8675
  %arrayidx183 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx182, i64 0, i64 0, !dbg !8675
  store float 0.000000e+00, float* %arrayidx183, align 4, !dbg !8676
  %113 = load float, float* %phi, align 4, !dbg !8677
  %call184 = call float @sinf(float %113) #7, !dbg !8678
  %114 = load i32, i32* %i, align 4, !dbg !8679
  %idxprom185 = sext i32 %114 to i64, !dbg !8680
  %arrayidx186 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %corner, i64 0, i64 %idxprom185, !dbg !8680
  %arrayidx187 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx186, i64 0, i64 1, !dbg !8680
  store float %call184, float* %arrayidx187, align 4, !dbg !8681
  %115 = load float, float* %phi, align 4, !dbg !8682
  %call188 = call float @cosf(float %115) #7, !dbg !8683
  %116 = load i32, i32* %i, align 4, !dbg !8684
  %idxprom189 = sext i32 %116 to i64, !dbg !8685
  %arrayidx190 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %corner, i64 0, i64 %idxprom189, !dbg !8685
  %arrayidx191 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx190, i64 0, i64 2, !dbg !8685
  store float %call188, float* %arrayidx191, align 4, !dbg !8686
  %117 = load i32, i32* %i, align 4, !dbg !8687
  %idxprom192 = sext i32 %117 to i64, !dbg !8688
  %arrayidx193 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %corner, i64 0, i64 %idxprom192, !dbg !8688
  %arraydecay194 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx193, i64 0, i64 0, !dbg !8688
  call void @glVertex3fv(float* %arraydecay194), !dbg !8689
  br label %for.inc195, !dbg !8690

for.inc195:                                       ; preds = %for.body166
  %118 = load i32, i32* %a, align 4, !dbg !8691
  %inc196 = add nsw i32 %118, 1, !dbg !8691
  store i32 %inc196, i32* %a, align 4, !dbg !8691
  br label %for.cond163, !dbg !8692, !llvm.loop !8693

for.end197:                                       ; preds = %for.cond163
  call void @glEnd(), !dbg !8695
  %119 = load float, float* %theta, align 4, !dbg !8696
  %fneg198 = fneg float %119, !dbg !8697
  call void @glRotatef(float %fneg198, float 1.000000e+00, float 0.000000e+00, float 0.000000e+00), !dbg !8698
  br label %if.end199, !dbg !8699

if.end199:                                        ; preds = %for.end197, %if.end150
  call void @glPopMatrix(), !dbg !8700
  br label %if.end200, !dbg !8701

if.end200:                                        ; preds = %if.end199, %if.then13
  br label %if.end201, !dbg !8702

if.end201:                                        ; preds = %if.end200, %if.then10
  br label %if.end202, !dbg !8703

if.end202:                                        ; preds = %if.end201, %if.then6
  br label %if.end203, !dbg !8704

if.end203:                                        ; preds = %if.end202, %if.then
  br label %if.end204, !dbg !8705

if.end204:                                        ; preds = %if.end203, %land.lhs.true, %for.body
  br label %for.inc205, !dbg !8706

for.inc205:                                       ; preds = %if.end204
  %120 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !8707
  %next = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %120, i32 0, i32 0, !dbg !8708
  %121 = load %struct.bPoseChannel*, %struct.bPoseChannel** %next, align 8, !dbg !8708
  store %struct.bPoseChannel* %121, %struct.bPoseChannel** %pchan, align 8, !dbg !8709
  br label %for.cond, !dbg !8710, !llvm.loop !8711

for.end206:                                       ; preds = %for.cond
  ret void, !dbg !8713
}

declare dso_local void @rgb_float_to_uchar(i8*, float*) #3

declare dso_local i8* @BLI_findlink(%struct.ListBase*, i32) #3

declare dso_local %struct.bTheme* @UI_GetTheme() #3

declare dso_local void @draw_object_instance(%struct.Scene*, %struct.View3D*, %struct.RegionView3D*, %struct.Object*, i8 zeroext, i32) #3

declare dso_local zeroext i8 @BKE_pose_channel_in_IK_chain(%struct.Object*, %struct.bPoseChannel*) #3

declare dso_local void @copy_m4_m3([4 x float]*, [3 x float]*) #3

; Function Attrs: nounwind
declare dso_local float @sinf(float) #5

; Function Attrs: noinline nounwind uwtable
define internal void @draw_dof_ellipse(float %ax, float %az) #0 !dbg !8714 {
entry:
  %ax.addr = alloca float, align 4
  %az.addr = alloca float, align 4
  %staticSine = alloca [16 x float], align 16
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %n = alloca i32, align 4
  %x = alloca float, align 4
  %z = alloca float, align 4
  %px = alloca float, align 4
  %pz = alloca float, align 4
  store float %ax, float* %ax.addr, align 4
  call void @llvm.dbg.declare(metadata float* %ax.addr, metadata !8717, metadata !DIExpression()), !dbg !8718
  store float %az, float* %az.addr, align 4
  call void @llvm.dbg.declare(metadata float* %az.addr, metadata !8719, metadata !DIExpression()), !dbg !8720
  call void @llvm.dbg.declare(metadata [16 x float]* %staticSine, metadata !8721, metadata !DIExpression()), !dbg !8722
  %0 = bitcast [16 x float]* %staticSine to i8*, !dbg !8722
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %0, i8* align 16 bitcast ([16 x float]* @__const.draw_dof_ellipse.staticSine to i8*), i64 64, i1 false), !dbg !8722
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8723, metadata !DIExpression()), !dbg !8724
  call void @llvm.dbg.declare(metadata i32* %j, metadata !8725, metadata !DIExpression()), !dbg !8726
  call void @llvm.dbg.declare(metadata i32* %n, metadata !8727, metadata !DIExpression()), !dbg !8728
  store i32 16, i32* %n, align 4, !dbg !8728
  call void @llvm.dbg.declare(metadata float* %x, metadata !8729, metadata !DIExpression()), !dbg !8730
  call void @llvm.dbg.declare(metadata float* %z, metadata !8731, metadata !DIExpression()), !dbg !8732
  call void @llvm.dbg.declare(metadata float* %px, metadata !8733, metadata !DIExpression()), !dbg !8734
  call void @llvm.dbg.declare(metadata float* %pz, metadata !8735, metadata !DIExpression()), !dbg !8736
  call void @glEnable(i32 3042), !dbg !8737
  call void @glDepthMask(i8 zeroext 0), !dbg !8738
  call void @glColor4ub(i8 zeroext 70, i8 zeroext 70, i8 zeroext 70, i8 zeroext 50), !dbg !8739
  call void @glBegin(i32 7), !dbg !8740
  store float 0.000000e+00, float* %pz, align 4, !dbg !8741
  store i32 1, i32* %i, align 4, !dbg !8742
  br label %for.cond, !dbg !8744

for.cond:                                         ; preds = %for.inc21, %entry
  %1 = load i32, i32* %i, align 4, !dbg !8745
  %2 = load i32, i32* %n, align 4, !dbg !8747
  %cmp = icmp slt i32 %1, %2, !dbg !8748
  br i1 %cmp, label %for.body, label %for.end23, !dbg !8749

for.body:                                         ; preds = %for.cond
  %3 = load i32, i32* %i, align 4, !dbg !8750
  %idxprom = sext i32 %3 to i64, !dbg !8752
  %arrayidx = getelementptr inbounds [16 x float], [16 x float]* %staticSine, i64 0, i64 %idxprom, !dbg !8752
  %4 = load float, float* %arrayidx, align 4, !dbg !8752
  store float %4, float* %z, align 4, !dbg !8753
  store float 0.000000e+00, float* %px, align 4, !dbg !8754
  store i32 1, i32* %j, align 4, !dbg !8755
  br label %for.cond1, !dbg !8757

for.cond1:                                        ; preds = %for.inc, %for.body
  %5 = load i32, i32* %j, align 4, !dbg !8758
  %6 = load i32, i32* %n, align 4, !dbg !8760
  %7 = load i32, i32* %i, align 4, !dbg !8761
  %sub = sub nsw i32 %6, %7, !dbg !8762
  %cmp2 = icmp sle i32 %5, %sub, !dbg !8763
  br i1 %cmp2, label %for.body3, label %for.end, !dbg !8764

for.body3:                                        ; preds = %for.cond1
  %8 = load i32, i32* %j, align 4, !dbg !8765
  %idxprom4 = sext i32 %8 to i64, !dbg !8767
  %arrayidx5 = getelementptr inbounds [16 x float], [16 x float]* %staticSine, i64 0, i64 %idxprom4, !dbg !8767
  %9 = load float, float* %arrayidx5, align 4, !dbg !8767
  store float %9, float* %x, align 4, !dbg !8768
  %10 = load i32, i32* %j, align 4, !dbg !8769
  %11 = load i32, i32* %n, align 4, !dbg !8771
  %12 = load i32, i32* %i, align 4, !dbg !8772
  %sub6 = sub nsw i32 %11, %12, !dbg !8773
  %cmp7 = icmp eq i32 %10, %sub6, !dbg !8774
  br i1 %cmp7, label %if.then, label %if.else, !dbg !8775

if.then:                                          ; preds = %for.body3
  call void @glEnd(), !dbg !8776
  call void @glBegin(i32 4), !dbg !8778
  %13 = load float, float* %ax.addr, align 4, !dbg !8779
  %14 = load float, float* %px, align 4, !dbg !8780
  %mul = fmul float %13, %14, !dbg !8781
  %15 = load float, float* %az.addr, align 4, !dbg !8782
  %16 = load float, float* %z, align 4, !dbg !8783
  %mul8 = fmul float %15, %16, !dbg !8784
  call void @bgl_sphere_project(float %mul, float %mul8), !dbg !8785
  %17 = load float, float* %ax.addr, align 4, !dbg !8786
  %18 = load float, float* %px, align 4, !dbg !8787
  %mul9 = fmul float %17, %18, !dbg !8788
  %19 = load float, float* %az.addr, align 4, !dbg !8789
  %20 = load float, float* %pz, align 4, !dbg !8790
  %mul10 = fmul float %19, %20, !dbg !8791
  call void @bgl_sphere_project(float %mul9, float %mul10), !dbg !8792
  %21 = load float, float* %ax.addr, align 4, !dbg !8793
  %22 = load float, float* %x, align 4, !dbg !8794
  %mul11 = fmul float %21, %22, !dbg !8795
  %23 = load float, float* %az.addr, align 4, !dbg !8796
  %24 = load float, float* %pz, align 4, !dbg !8797
  %mul12 = fmul float %23, %24, !dbg !8798
  call void @bgl_sphere_project(float %mul11, float %mul12), !dbg !8799
  call void @glEnd(), !dbg !8800
  call void @glBegin(i32 7), !dbg !8801
  br label %if.end, !dbg !8802

if.else:                                          ; preds = %for.body3
  %25 = load float, float* %ax.addr, align 4, !dbg !8803
  %26 = load float, float* %x, align 4, !dbg !8805
  %mul13 = fmul float %25, %26, !dbg !8806
  %27 = load float, float* %az.addr, align 4, !dbg !8807
  %28 = load float, float* %z, align 4, !dbg !8808
  %mul14 = fmul float %27, %28, !dbg !8809
  call void @bgl_sphere_project(float %mul13, float %mul14), !dbg !8810
  %29 = load float, float* %ax.addr, align 4, !dbg !8811
  %30 = load float, float* %x, align 4, !dbg !8812
  %mul15 = fmul float %29, %30, !dbg !8813
  %31 = load float, float* %az.addr, align 4, !dbg !8814
  %32 = load float, float* %pz, align 4, !dbg !8815
  %mul16 = fmul float %31, %32, !dbg !8816
  call void @bgl_sphere_project(float %mul15, float %mul16), !dbg !8817
  %33 = load float, float* %ax.addr, align 4, !dbg !8818
  %34 = load float, float* %px, align 4, !dbg !8819
  %mul17 = fmul float %33, %34, !dbg !8820
  %35 = load float, float* %az.addr, align 4, !dbg !8821
  %36 = load float, float* %pz, align 4, !dbg !8822
  %mul18 = fmul float %35, %36, !dbg !8823
  call void @bgl_sphere_project(float %mul17, float %mul18), !dbg !8824
  %37 = load float, float* %ax.addr, align 4, !dbg !8825
  %38 = load float, float* %px, align 4, !dbg !8826
  %mul19 = fmul float %37, %38, !dbg !8827
  %39 = load float, float* %az.addr, align 4, !dbg !8828
  %40 = load float, float* %z, align 4, !dbg !8829
  %mul20 = fmul float %39, %40, !dbg !8830
  call void @bgl_sphere_project(float %mul19, float %mul20), !dbg !8831
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %41 = load float, float* %x, align 4, !dbg !8832
  store float %41, float* %px, align 4, !dbg !8833
  br label %for.inc, !dbg !8834

for.inc:                                          ; preds = %if.end
  %42 = load i32, i32* %j, align 4, !dbg !8835
  %inc = add nsw i32 %42, 1, !dbg !8835
  store i32 %inc, i32* %j, align 4, !dbg !8835
  br label %for.cond1, !dbg !8836, !llvm.loop !8837

for.end:                                          ; preds = %for.cond1
  %43 = load float, float* %z, align 4, !dbg !8839
  store float %43, float* %pz, align 4, !dbg !8840
  br label %for.inc21, !dbg !8841

for.inc21:                                        ; preds = %for.end
  %44 = load i32, i32* %i, align 4, !dbg !8842
  %inc22 = add nsw i32 %44, 1, !dbg !8842
  store i32 %inc22, i32* %i, align 4, !dbg !8842
  br label %for.cond, !dbg !8843, !llvm.loop !8844

for.end23:                                        ; preds = %for.cond
  call void @glEnd(), !dbg !8846
  call void @glDisable(i32 3042), !dbg !8847
  call void @glDepthMask(i8 zeroext 1), !dbg !8848
  call void @glColor3ub(i8 zeroext 0, i8 zeroext 0, i8 zeroext 0), !dbg !8849
  call void @glBegin(i32 3), !dbg !8850
  store i32 0, i32* %i, align 4, !dbg !8851
  br label %for.cond24, !dbg !8853

for.cond24:                                       ; preds = %for.inc35, %for.end23
  %45 = load i32, i32* %i, align 4, !dbg !8854
  %46 = load i32, i32* %n, align 4, !dbg !8856
  %cmp25 = icmp slt i32 %45, %46, !dbg !8857
  br i1 %cmp25, label %for.body26, label %for.end37, !dbg !8858

for.body26:                                       ; preds = %for.cond24
  %47 = load i32, i32* %n, align 4, !dbg !8859
  %48 = load i32, i32* %i, align 4, !dbg !8860
  %sub27 = sub nsw i32 %47, %48, !dbg !8861
  %sub28 = sub nsw i32 %sub27, 1, !dbg !8862
  %idxprom29 = sext i32 %sub28 to i64, !dbg !8863
  %arrayidx30 = getelementptr inbounds [16 x float], [16 x float]* %staticSine, i64 0, i64 %idxprom29, !dbg !8863
  %49 = load float, float* %arrayidx30, align 4, !dbg !8863
  %50 = load float, float* %ax.addr, align 4, !dbg !8864
  %mul31 = fmul float %49, %50, !dbg !8865
  %51 = load i32, i32* %i, align 4, !dbg !8866
  %idxprom32 = sext i32 %51 to i64, !dbg !8867
  %arrayidx33 = getelementptr inbounds [16 x float], [16 x float]* %staticSine, i64 0, i64 %idxprom32, !dbg !8867
  %52 = load float, float* %arrayidx33, align 4, !dbg !8867
  %53 = load float, float* %az.addr, align 4, !dbg !8868
  %mul34 = fmul float %52, %53, !dbg !8869
  call void @bgl_sphere_project(float %mul31, float %mul34), !dbg !8870
  br label %for.inc35, !dbg !8870

for.inc35:                                        ; preds = %for.body26
  %54 = load i32, i32* %i, align 4, !dbg !8871
  %inc36 = add nsw i32 %54, 1, !dbg !8871
  store i32 %inc36, i32* %i, align 4, !dbg !8871
  br label %for.cond24, !dbg !8872, !llvm.loop !8873

for.end37:                                        ; preds = %for.cond24
  call void @glEnd(), !dbg !8875
  ret void, !dbg !8876
}

; Function Attrs: nounwind
declare dso_local float @cosf(float) #5

declare dso_local void @glDepthMask(i8 zeroext) #3

; Function Attrs: noinline nounwind uwtable
define internal void @bgl_sphere_project(float %ax, float %az) #0 !dbg !8877 {
entry:
  %ax.addr = alloca float, align 4
  %az.addr = alloca float, align 4
  %dir = alloca [3 x float], align 4
  %sine = alloca float, align 4
  %q3 = alloca float, align 4
  store float %ax, float* %ax.addr, align 4
  call void @llvm.dbg.declare(metadata float* %ax.addr, metadata !8878, metadata !DIExpression()), !dbg !8879
  store float %az, float* %az.addr, align 4
  call void @llvm.dbg.declare(metadata float* %az.addr, metadata !8880, metadata !DIExpression()), !dbg !8881
  call void @llvm.dbg.declare(metadata [3 x float]* %dir, metadata !8882, metadata !DIExpression()), !dbg !8883
  call void @llvm.dbg.declare(metadata float* %sine, metadata !8884, metadata !DIExpression()), !dbg !8885
  call void @llvm.dbg.declare(metadata float* %q3, metadata !8886, metadata !DIExpression()), !dbg !8887
  %0 = load float, float* %ax.addr, align 4, !dbg !8888
  %1 = load float, float* %ax.addr, align 4, !dbg !8889
  %mul = fmul float %0, %1, !dbg !8890
  %sub = fsub float 1.000000e+00, %mul, !dbg !8891
  %2 = load float, float* %az.addr, align 4, !dbg !8892
  %3 = load float, float* %az.addr, align 4, !dbg !8893
  %mul1 = fmul float %2, %3, !dbg !8894
  %sub2 = fsub float %sub, %mul1, !dbg !8895
  store float %sub2, float* %sine, align 4, !dbg !8896
  %4 = load float, float* %sine, align 4, !dbg !8897
  %cmp = fcmp olt float %4, 0.000000e+00, !dbg !8898
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !8899

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !8899

cond.false:                                       ; preds = %entry
  %5 = load float, float* %sine, align 4, !dbg !8900
  %call = call float @sqrtf(float %5) #7, !dbg !8901
  %mul3 = fmul float 2.000000e+00, %call, !dbg !8902
  br label %cond.end, !dbg !8899

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ 0.000000e+00, %cond.true ], [ %mul3, %cond.false ], !dbg !8899
  store float %cond, float* %q3, align 4, !dbg !8903
  %6 = load float, float* %az.addr, align 4, !dbg !8904
  %fneg = fneg float %6, !dbg !8905
  %7 = load float, float* %q3, align 4, !dbg !8906
  %mul4 = fmul float %fneg, %7, !dbg !8907
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %dir, i64 0, i64 0, !dbg !8908
  store float %mul4, float* %arrayidx, align 4, !dbg !8909
  %8 = load float, float* %sine, align 4, !dbg !8910
  %mul5 = fmul float 2.000000e+00, %8, !dbg !8911
  %sub6 = fsub float 1.000000e+00, %mul5, !dbg !8912
  %arrayidx7 = getelementptr inbounds [3 x float], [3 x float]* %dir, i64 0, i64 1, !dbg !8913
  store float %sub6, float* %arrayidx7, align 4, !dbg !8914
  %9 = load float, float* %ax.addr, align 4, !dbg !8915
  %10 = load float, float* %q3, align 4, !dbg !8916
  %mul8 = fmul float %9, %10, !dbg !8917
  %arrayidx9 = getelementptr inbounds [3 x float], [3 x float]* %dir, i64 0, i64 2, !dbg !8918
  store float %mul8, float* %arrayidx9, align 4, !dbg !8919
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %dir, i64 0, i64 0, !dbg !8920
  call void @glVertex3fv(float* %arraydecay), !dbg !8921
  ret void, !dbg !8922
}

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readonly }
attributes #7 = { nounwind }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!1976, !1977, !1978}
!llvm.ident = !{!1979}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "si", scope: !2, file: !3, line: 603, type: !1918, isLocal: true, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !373, globals: !1915, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "blender/source/blender/editors/space_view3d/drawarmature.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!4 = !{!5, !16, !24, !39, !56, !66, !71, !77, !273, !298, !308, !316, !321, !330, !336, !342, !360}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 432, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "blender/source/blender/makesdna/DNA_object_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11, !12, !13, !14, !15}
!9 = !DIEnumerator(name: "OB_BOUNDBOX", value: 1, isUnsigned: true)
!10 = !DIEnumerator(name: "OB_WIRE", value: 2, isUnsigned: true)
!11 = !DIEnumerator(name: "OB_SOLID", value: 3, isUnsigned: true)
!12 = !DIEnumerator(name: "OB_MATERIAL", value: 4, isUnsigned: true)
!13 = !DIEnumerator(name: "OB_TEXTURE", value: 5, isUnsigned: true)
!14 = !DIEnumerator(name: "OB_RENDER", value: 6, isUnsigned: true)
!15 = !DIEnumerator(name: "OB_PAINT", value: 100, isUnsigned: true)
!16 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eArmature_Drawtype", file: !17, line: 137, baseType: !7, size: 32, elements: !18)
!17 = !DIFile(filename: "blender/source/blender/makesdna/DNA_armature_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!18 = !{!19, !20, !21, !22, !23}
!19 = !DIEnumerator(name: "ARM_OCTA", value: 0, isUnsigned: true)
!20 = !DIEnumerator(name: "ARM_LINE", value: 1, isUnsigned: true)
!21 = !DIEnumerator(name: "ARM_B_BONE", value: 2, isUnsigned: true)
!22 = !DIEnumerator(name: "ARM_ENVELOPE", value: 3, isUnsigned: true)
!23 = !DIEnumerator(name: "ARM_WIRE", value: 4, isUnsigned: true)
!24 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 394, baseType: !7, size: 32, elements: !25)
!25 = !{!26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38}
!26 = !DIEnumerator(name: "OB_NEG_SCALE", value: 4, isUnsigned: true)
!27 = !DIEnumerator(name: "OB_DUPLIFRAMES", value: 8, isUnsigned: true)
!28 = !DIEnumerator(name: "OB_DUPLIVERTS", value: 16, isUnsigned: true)
!29 = !DIEnumerator(name: "OB_DUPLIROT", value: 32, isUnsigned: true)
!30 = !DIEnumerator(name: "OB_DUPLINOSPEED", value: 64, isUnsigned: true)
!31 = !DIEnumerator(name: "OB_DUPLIGROUP", value: 256, isUnsigned: true)
!32 = !DIEnumerator(name: "OB_DUPLIFACES", value: 512, isUnsigned: true)
!33 = !DIEnumerator(name: "OB_DUPLIFACES_SCALE", value: 1024, isUnsigned: true)
!34 = !DIEnumerator(name: "OB_DUPLIPARTS", value: 2048, isUnsigned: true)
!35 = !DIEnumerator(name: "OB_RENDER_DUPLI", value: 4096, isUnsigned: true)
!36 = !DIEnumerator(name: "OB_NO_CONSTRAINTS", value: 8192, isUnsigned: true)
!37 = !DIEnumerator(name: "OB_NO_PSYS_UPDATE", value: 16384, isUnsigned: true)
!38 = !DIEnumerator(name: "OB_DUPLI", value: 2840, isUnsigned: true)
!39 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eArmature_Flag", file: !17, line: 118, baseType: !7, size: 32, elements: !40)
!40 = !{!41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55}
!41 = !DIEnumerator(name: "ARM_RESTPOS", value: 1, isUnsigned: true)
!42 = !DIEnumerator(name: "ARM_DRAWXRAY", value: 2, isUnsigned: true)
!43 = !DIEnumerator(name: "ARM_DRAWAXES", value: 4, isUnsigned: true)
!44 = !DIEnumerator(name: "ARM_DRAWNAMES", value: 8, isUnsigned: true)
!45 = !DIEnumerator(name: "ARM_POSEMODE", value: 16, isUnsigned: true)
!46 = !DIEnumerator(name: "ARM_EDITMODE", value: 32, isUnsigned: true)
!47 = !DIEnumerator(name: "ARM_DELAYDEFORM", value: 64, isUnsigned: true)
!48 = !DIEnumerator(name: "ARM_DONT_USE", value: 128, isUnsigned: true)
!49 = !DIEnumerator(name: "ARM_MIRROR_EDIT", value: 256, isUnsigned: true)
!50 = !DIEnumerator(name: "ARM_AUTO_IK", value: 512, isUnsigned: true)
!51 = !DIEnumerator(name: "ARM_NO_CUSTOM", value: 1024, isUnsigned: true)
!52 = !DIEnumerator(name: "ARM_COL_CUSTOM", value: 2048, isUnsigned: true)
!53 = !DIEnumerator(name: "ARM_GHOST_ONLYSEL", value: 4096, isUnsigned: true)
!54 = !DIEnumerator(name: "ARM_DS_EXPAND", value: 8192, isUnsigned: true)
!55 = !DIEnumerator(name: "ARM_HAS_VIZ_DEPS", value: 16384, isUnsigned: true)
!56 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ObjectMode", file: !6, line: 666, baseType: !7, size: 32, elements: !57)
!57 = !{!58, !59, !60, !61, !62, !63, !64, !65}
!58 = !DIEnumerator(name: "OB_MODE_OBJECT", value: 0, isUnsigned: true)
!59 = !DIEnumerator(name: "OB_MODE_EDIT", value: 1, isUnsigned: true)
!60 = !DIEnumerator(name: "OB_MODE_SCULPT", value: 2, isUnsigned: true)
!61 = !DIEnumerator(name: "OB_MODE_VERTEX_PAINT", value: 4, isUnsigned: true)
!62 = !DIEnumerator(name: "OB_MODE_WEIGHT_PAINT", value: 8, isUnsigned: true)
!63 = !DIEnumerator(name: "OB_MODE_TEXTURE_PAINT", value: 16, isUnsigned: true)
!64 = !DIEnumerator(name: "OB_MODE_PARTICLE_EDIT", value: 32, isUnsigned: true)
!65 = !DIEnumerator(name: "OB_MODE_POSE", value: 64, isUnsigned: true)
!66 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eArmature_GhostType", file: !17, line: 180, baseType: !7, size: 32, elements: !67)
!67 = !{!68, !69, !70}
!68 = !DIEnumerator(name: "ARM_GHOST_CUR", value: 0, isUnsigned: true)
!69 = !DIEnumerator(name: "ARM_GHOST_RANGE", value: 1, isUnsigned: true)
!70 = !DIEnumerator(name: "ARM_GHOST_KEYS", value: 2, isUnsigned: true)
!71 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !72, line: 56, baseType: !7, size: 32, elements: !73)
!72 = !DIFile(filename: "blender/source/blender/editors/space_view3d/view3d_intern.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!73 = !{!74, !75, !76}
!74 = !DIEnumerator(name: "DRAW_PICKING", value: 1, isUnsigned: true)
!75 = !DIEnumerator(name: "DRAW_CONSTCOLOR", value: 2, isUnsigned: true)
!76 = !DIEnumerator(name: "DRAW_SCENESET", value: 4, isUnsigned: true)
!77 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !78, line: 54, baseType: !7, size: 32, elements: !79)
!78 = !DIFile(filename: "blender/source/blender/editors/include/UI_resources.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!79 = !{!80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134, !135, !136, !137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272}
!80 = !DIEnumerator(name: "TH_REDALERT", value: 0, isUnsigned: true)
!81 = !DIEnumerator(name: "TH_THEMEUI", value: 1, isUnsigned: true)
!82 = !DIEnumerator(name: "TH_BACK", value: 2, isUnsigned: true)
!83 = !DIEnumerator(name: "TH_TEXT", value: 3, isUnsigned: true)
!84 = !DIEnumerator(name: "TH_TEXT_HI", value: 4, isUnsigned: true)
!85 = !DIEnumerator(name: "TH_TITLE", value: 5, isUnsigned: true)
!86 = !DIEnumerator(name: "TH_TAB_ACTIVE", value: 6, isUnsigned: true)
!87 = !DIEnumerator(name: "TH_TAB_INACTIVE", value: 7, isUnsigned: true)
!88 = !DIEnumerator(name: "TH_TAB_BACK", value: 8, isUnsigned: true)
!89 = !DIEnumerator(name: "TH_TAB_OUTLINE", value: 9, isUnsigned: true)
!90 = !DIEnumerator(name: "TH_HEADER", value: 10, isUnsigned: true)
!91 = !DIEnumerator(name: "TH_HEADERDESEL", value: 11, isUnsigned: true)
!92 = !DIEnumerator(name: "TH_HEADER_TEXT", value: 12, isUnsigned: true)
!93 = !DIEnumerator(name: "TH_HEADER_TEXT_HI", value: 13, isUnsigned: true)
!94 = !DIEnumerator(name: "TH_PANEL_HEADER", value: 14, isUnsigned: true)
!95 = !DIEnumerator(name: "TH_PANEL_BACK", value: 15, isUnsigned: true)
!96 = !DIEnumerator(name: "TH_PANEL_SHOW_HEADER", value: 16, isUnsigned: true)
!97 = !DIEnumerator(name: "TH_PANEL_SHOW_BACK", value: 17, isUnsigned: true)
!98 = !DIEnumerator(name: "TH_BUTBACK", value: 18, isUnsigned: true)
!99 = !DIEnumerator(name: "TH_BUTBACK_TEXT", value: 19, isUnsigned: true)
!100 = !DIEnumerator(name: "TH_BUTBACK_TEXT_HI", value: 20, isUnsigned: true)
!101 = !DIEnumerator(name: "TH_SHADE1", value: 21, isUnsigned: true)
!102 = !DIEnumerator(name: "TH_SHADE2", value: 22, isUnsigned: true)
!103 = !DIEnumerator(name: "TH_HILITE", value: 23, isUnsigned: true)
!104 = !DIEnumerator(name: "TH_GRID", value: 24, isUnsigned: true)
!105 = !DIEnumerator(name: "TH_WIRE", value: 25, isUnsigned: true)
!106 = !DIEnumerator(name: "TH_WIRE_INNER", value: 26, isUnsigned: true)
!107 = !DIEnumerator(name: "TH_WIRE_EDIT", value: 27, isUnsigned: true)
!108 = !DIEnumerator(name: "TH_SELECT", value: 28, isUnsigned: true)
!109 = !DIEnumerator(name: "TH_ACTIVE", value: 29, isUnsigned: true)
!110 = !DIEnumerator(name: "TH_GROUP", value: 30, isUnsigned: true)
!111 = !DIEnumerator(name: "TH_GROUP_ACTIVE", value: 31, isUnsigned: true)
!112 = !DIEnumerator(name: "TH_TRANSFORM", value: 32, isUnsigned: true)
!113 = !DIEnumerator(name: "TH_VERTEX", value: 33, isUnsigned: true)
!114 = !DIEnumerator(name: "TH_VERTEX_SELECT", value: 34, isUnsigned: true)
!115 = !DIEnumerator(name: "TH_VERTEX_UNREFERENCED", value: 35, isUnsigned: true)
!116 = !DIEnumerator(name: "TH_VERTEX_SIZE", value: 36, isUnsigned: true)
!117 = !DIEnumerator(name: "TH_OUTLINE_WIDTH", value: 37, isUnsigned: true)
!118 = !DIEnumerator(name: "TH_EDGE", value: 38, isUnsigned: true)
!119 = !DIEnumerator(name: "TH_EDGE_SELECT", value: 39, isUnsigned: true)
!120 = !DIEnumerator(name: "TH_EDGE_SEAM", value: 40, isUnsigned: true)
!121 = !DIEnumerator(name: "TH_EDGE_FACESEL", value: 41, isUnsigned: true)
!122 = !DIEnumerator(name: "TH_FACE", value: 42, isUnsigned: true)
!123 = !DIEnumerator(name: "TH_FACE_SELECT", value: 43, isUnsigned: true)
!124 = !DIEnumerator(name: "TH_NORMAL", value: 44, isUnsigned: true)
!125 = !DIEnumerator(name: "TH_VNORMAL", value: 45, isUnsigned: true)
!126 = !DIEnumerator(name: "TH_LNORMAL", value: 46, isUnsigned: true)
!127 = !DIEnumerator(name: "TH_FACE_DOT", value: 47, isUnsigned: true)
!128 = !DIEnumerator(name: "TH_FACEDOT_SIZE", value: 48, isUnsigned: true)
!129 = !DIEnumerator(name: "TH_CFRAME", value: 49, isUnsigned: true)
!130 = !DIEnumerator(name: "TH_NURB_ULINE", value: 50, isUnsigned: true)
!131 = !DIEnumerator(name: "TH_NURB_VLINE", value: 51, isUnsigned: true)
!132 = !DIEnumerator(name: "TH_NURB_SEL_ULINE", value: 52, isUnsigned: true)
!133 = !DIEnumerator(name: "TH_NURB_SEL_VLINE", value: 53, isUnsigned: true)
!134 = !DIEnumerator(name: "TH_HANDLE_FREE", value: 54, isUnsigned: true)
!135 = !DIEnumerator(name: "TH_HANDLE_AUTO", value: 55, isUnsigned: true)
!136 = !DIEnumerator(name: "TH_HANDLE_VECT", value: 56, isUnsigned: true)
!137 = !DIEnumerator(name: "TH_HANDLE_ALIGN", value: 57, isUnsigned: true)
!138 = !DIEnumerator(name: "TH_HANDLE_AUTOCLAMP", value: 58, isUnsigned: true)
!139 = !DIEnumerator(name: "TH_HANDLE_SEL_FREE", value: 59, isUnsigned: true)
!140 = !DIEnumerator(name: "TH_HANDLE_SEL_AUTO", value: 60, isUnsigned: true)
!141 = !DIEnumerator(name: "TH_HANDLE_SEL_VECT", value: 61, isUnsigned: true)
!142 = !DIEnumerator(name: "TH_HANDLE_SEL_ALIGN", value: 62, isUnsigned: true)
!143 = !DIEnumerator(name: "TH_HANDLE_SEL_AUTOCLAMP", value: 63, isUnsigned: true)
!144 = !DIEnumerator(name: "TH_ACTIVE_SPLINE", value: 64, isUnsigned: true)
!145 = !DIEnumerator(name: "TH_ACTIVE_VERT", value: 65, isUnsigned: true)
!146 = !DIEnumerator(name: "TH_SYNTAX_B", value: 66, isUnsigned: true)
!147 = !DIEnumerator(name: "TH_SYNTAX_V", value: 67, isUnsigned: true)
!148 = !DIEnumerator(name: "TH_SYNTAX_R", value: 68, isUnsigned: true)
!149 = !DIEnumerator(name: "TH_SYNTAX_C", value: 69, isUnsigned: true)
!150 = !DIEnumerator(name: "TH_SYNTAX_L", value: 70, isUnsigned: true)
!151 = !DIEnumerator(name: "TH_SYNTAX_D", value: 71, isUnsigned: true)
!152 = !DIEnumerator(name: "TH_SYNTAX_N", value: 72, isUnsigned: true)
!153 = !DIEnumerator(name: "TH_SYNTAX_S", value: 73, isUnsigned: true)
!154 = !DIEnumerator(name: "TH_BONE_SOLID", value: 74, isUnsigned: true)
!155 = !DIEnumerator(name: "TH_BONE_POSE", value: 75, isUnsigned: true)
!156 = !DIEnumerator(name: "TH_BONE_POSE_ACTIVE", value: 76, isUnsigned: true)
!157 = !DIEnumerator(name: "TH_STRIP", value: 77, isUnsigned: true)
!158 = !DIEnumerator(name: "TH_STRIP_SELECT", value: 78, isUnsigned: true)
!159 = !DIEnumerator(name: "TH_KEYTYPE_KEYFRAME", value: 79, isUnsigned: true)
!160 = !DIEnumerator(name: "TH_KEYTYPE_KEYFRAME_SELECT", value: 80, isUnsigned: true)
!161 = !DIEnumerator(name: "TH_KEYTYPE_EXTREME", value: 81, isUnsigned: true)
!162 = !DIEnumerator(name: "TH_KEYTYPE_EXTREME_SELECT", value: 82, isUnsigned: true)
!163 = !DIEnumerator(name: "TH_KEYTYPE_BREAKDOWN", value: 83, isUnsigned: true)
!164 = !DIEnumerator(name: "TH_KEYTYPE_BREAKDOWN_SELECT", value: 84, isUnsigned: true)
!165 = !DIEnumerator(name: "TH_KEYTYPE_JITTER", value: 85, isUnsigned: true)
!166 = !DIEnumerator(name: "TH_KEYTYPE_JITTER_SELECT", value: 86, isUnsigned: true)
!167 = !DIEnumerator(name: "TH_KEYBORDER", value: 87, isUnsigned: true)
!168 = !DIEnumerator(name: "TH_KEYBORDER_SELECT", value: 88, isUnsigned: true)
!169 = !DIEnumerator(name: "TH_LAMP", value: 89, isUnsigned: true)
!170 = !DIEnumerator(name: "TH_SPEAKER", value: 90, isUnsigned: true)
!171 = !DIEnumerator(name: "TH_CAMERA", value: 91, isUnsigned: true)
!172 = !DIEnumerator(name: "TH_EMPTY", value: 92, isUnsigned: true)
!173 = !DIEnumerator(name: "TH_NODE", value: 93, isUnsigned: true)
!174 = !DIEnumerator(name: "TH_NODE_INPUT", value: 94, isUnsigned: true)
!175 = !DIEnumerator(name: "TH_NODE_OUTPUT", value: 95, isUnsigned: true)
!176 = !DIEnumerator(name: "TH_NODE_COLOR", value: 96, isUnsigned: true)
!177 = !DIEnumerator(name: "TH_NODE_FILTER", value: 97, isUnsigned: true)
!178 = !DIEnumerator(name: "TH_NODE_VECTOR", value: 98, isUnsigned: true)
!179 = !DIEnumerator(name: "TH_NODE_TEXTURE", value: 99, isUnsigned: true)
!180 = !DIEnumerator(name: "TH_NODE_PATTERN", value: 100, isUnsigned: true)
!181 = !DIEnumerator(name: "TH_NODE_SCRIPT", value: 101, isUnsigned: true)
!182 = !DIEnumerator(name: "TH_NODE_LAYOUT", value: 102, isUnsigned: true)
!183 = !DIEnumerator(name: "TH_NODE_SHADER", value: 103, isUnsigned: true)
!184 = !DIEnumerator(name: "TH_NODE_INTERFACE", value: 104, isUnsigned: true)
!185 = !DIEnumerator(name: "TH_NODE_CONVERTOR", value: 105, isUnsigned: true)
!186 = !DIEnumerator(name: "TH_NODE_GROUP", value: 106, isUnsigned: true)
!187 = !DIEnumerator(name: "TH_NODE_FRAME", value: 107, isUnsigned: true)
!188 = !DIEnumerator(name: "TH_NODE_MATTE", value: 108, isUnsigned: true)
!189 = !DIEnumerator(name: "TH_NODE_DISTORT", value: 109, isUnsigned: true)
!190 = !DIEnumerator(name: "TH_CONSOLE_OUTPUT", value: 110, isUnsigned: true)
!191 = !DIEnumerator(name: "TH_CONSOLE_INPUT", value: 111, isUnsigned: true)
!192 = !DIEnumerator(name: "TH_CONSOLE_INFO", value: 112, isUnsigned: true)
!193 = !DIEnumerator(name: "TH_CONSOLE_ERROR", value: 113, isUnsigned: true)
!194 = !DIEnumerator(name: "TH_CONSOLE_CURSOR", value: 114, isUnsigned: true)
!195 = !DIEnumerator(name: "TH_CONSOLE_SELECT", value: 115, isUnsigned: true)
!196 = !DIEnumerator(name: "TH_SEQ_MOVIE", value: 116, isUnsigned: true)
!197 = !DIEnumerator(name: "TH_SEQ_MOVIECLIP", value: 117, isUnsigned: true)
!198 = !DIEnumerator(name: "TH_SEQ_MASK", value: 118, isUnsigned: true)
!199 = !DIEnumerator(name: "TH_SEQ_IMAGE", value: 119, isUnsigned: true)
!200 = !DIEnumerator(name: "TH_SEQ_SCENE", value: 120, isUnsigned: true)
!201 = !DIEnumerator(name: "TH_SEQ_AUDIO", value: 121, isUnsigned: true)
!202 = !DIEnumerator(name: "TH_SEQ_EFFECT", value: 122, isUnsigned: true)
!203 = !DIEnumerator(name: "TH_SEQ_TRANSITION", value: 123, isUnsigned: true)
!204 = !DIEnumerator(name: "TH_SEQ_META", value: 124, isUnsigned: true)
!205 = !DIEnumerator(name: "TH_SEQ_PREVIEW", value: 125, isUnsigned: true)
!206 = !DIEnumerator(name: "TH_EDGE_SHARP", value: 126, isUnsigned: true)
!207 = !DIEnumerator(name: "TH_EDITMESH_ACTIVE", value: 127, isUnsigned: true)
!208 = !DIEnumerator(name: "TH_HANDLE_VERTEX", value: 128, isUnsigned: true)
!209 = !DIEnumerator(name: "TH_HANDLE_VERTEX_SELECT", value: 129, isUnsigned: true)
!210 = !DIEnumerator(name: "TH_HANDLE_VERTEX_SIZE", value: 130, isUnsigned: true)
!211 = !DIEnumerator(name: "TH_DOPESHEET_CHANNELOB", value: 131, isUnsigned: true)
!212 = !DIEnumerator(name: "TH_DOPESHEET_CHANNELSUBOB", value: 132, isUnsigned: true)
!213 = !DIEnumerator(name: "TH_PREVIEW_BACK", value: 133, isUnsigned: true)
!214 = !DIEnumerator(name: "TH_EDGE_CREASE", value: 134, isUnsigned: true)
!215 = !DIEnumerator(name: "TH_DRAWEXTRA_EDGELEN", value: 135, isUnsigned: true)
!216 = !DIEnumerator(name: "TH_DRAWEXTRA_EDGEANG", value: 136, isUnsigned: true)
!217 = !DIEnumerator(name: "TH_DRAWEXTRA_FACEAREA", value: 137, isUnsigned: true)
!218 = !DIEnumerator(name: "TH_DRAWEXTRA_FACEANG", value: 138, isUnsigned: true)
!219 = !DIEnumerator(name: "TH_NODE_CURVING", value: 139, isUnsigned: true)
!220 = !DIEnumerator(name: "TH_MARKER_OUTLINE", value: 140, isUnsigned: true)
!221 = !DIEnumerator(name: "TH_MARKER", value: 141, isUnsigned: true)
!222 = !DIEnumerator(name: "TH_ACT_MARKER", value: 142, isUnsigned: true)
!223 = !DIEnumerator(name: "TH_SEL_MARKER", value: 143, isUnsigned: true)
!224 = !DIEnumerator(name: "TH_BUNDLE_SOLID", value: 144, isUnsigned: true)
!225 = !DIEnumerator(name: "TH_DIS_MARKER", value: 145, isUnsigned: true)
!226 = !DIEnumerator(name: "TH_PATH_BEFORE", value: 146, isUnsigned: true)
!227 = !DIEnumerator(name: "TH_PATH_AFTER", value: 147, isUnsigned: true)
!228 = !DIEnumerator(name: "TH_CAMERA_PATH", value: 148, isUnsigned: true)
!229 = !DIEnumerator(name: "TH_LOCK_MARKER", value: 149, isUnsigned: true)
!230 = !DIEnumerator(name: "TH_STITCH_PREVIEW_FACE", value: 150, isUnsigned: true)
!231 = !DIEnumerator(name: "TH_STITCH_PREVIEW_EDGE", value: 151, isUnsigned: true)
!232 = !DIEnumerator(name: "TH_STITCH_PREVIEW_VERT", value: 152, isUnsigned: true)
!233 = !DIEnumerator(name: "TH_STITCH_PREVIEW_STITCHABLE", value: 153, isUnsigned: true)
!234 = !DIEnumerator(name: "TH_STITCH_PREVIEW_UNSTITCHABLE", value: 154, isUnsigned: true)
!235 = !DIEnumerator(name: "TH_STITCH_PREVIEW_ACTIVE", value: 155, isUnsigned: true)
!236 = !DIEnumerator(name: "TH_PAINT_CURVE_HANDLE", value: 156, isUnsigned: true)
!237 = !DIEnumerator(name: "TH_PAINT_CURVE_PIVOT", value: 157, isUnsigned: true)
!238 = !DIEnumerator(name: "TH_UV_SHADOW", value: 158, isUnsigned: true)
!239 = !DIEnumerator(name: "TH_UV_OTHERS", value: 159, isUnsigned: true)
!240 = !DIEnumerator(name: "TH_FREESTYLE_EDGE_MARK", value: 160, isUnsigned: true)
!241 = !DIEnumerator(name: "TH_FREESTYLE_FACE_MARK", value: 161, isUnsigned: true)
!242 = !DIEnumerator(name: "TH_MATCH", value: 162, isUnsigned: true)
!243 = !DIEnumerator(name: "TH_SELECT_HIGHLIGHT", value: 163, isUnsigned: true)
!244 = !DIEnumerator(name: "TH_SKIN_ROOT", value: 164, isUnsigned: true)
!245 = !DIEnumerator(name: "TH_ANIM_ACTIVE", value: 165, isUnsigned: true)
!246 = !DIEnumerator(name: "TH_ANIM_INACTIVE", value: 166, isUnsigned: true)
!247 = !DIEnumerator(name: "TH_NLA_TWEAK", value: 167, isUnsigned: true)
!248 = !DIEnumerator(name: "TH_NLA_TWEAK_DUPLI", value: 168, isUnsigned: true)
!249 = !DIEnumerator(name: "TH_NLA_TRANSITION", value: 169, isUnsigned: true)
!250 = !DIEnumerator(name: "TH_NLA_TRANSITION_SEL", value: 170, isUnsigned: true)
!251 = !DIEnumerator(name: "TH_NLA_META", value: 171, isUnsigned: true)
!252 = !DIEnumerator(name: "TH_NLA_META_SEL", value: 172, isUnsigned: true)
!253 = !DIEnumerator(name: "TH_NLA_SOUND", value: 173, isUnsigned: true)
!254 = !DIEnumerator(name: "TH_NLA_SOUND_SEL", value: 174, isUnsigned: true)
!255 = !DIEnumerator(name: "TH_EMBOSS", value: 175, isUnsigned: true)
!256 = !DIEnumerator(name: "TH_AXIS_X", value: 176, isUnsigned: true)
!257 = !DIEnumerator(name: "TH_AXIS_Y", value: 177, isUnsigned: true)
!258 = !DIEnumerator(name: "TH_AXIS_Z", value: 178, isUnsigned: true)
!259 = !DIEnumerator(name: "TH_LOW_GRAD", value: 179, isUnsigned: true)
!260 = !DIEnumerator(name: "TH_HIGH_GRAD", value: 180, isUnsigned: true)
!261 = !DIEnumerator(name: "TH_SHOW_BACK_GRAD", value: 181, isUnsigned: true)
!262 = !DIEnumerator(name: "TH_INFO_SELECTED", value: 182, isUnsigned: true)
!263 = !DIEnumerator(name: "TH_INFO_SELECTED_TEXT", value: 183, isUnsigned: true)
!264 = !DIEnumerator(name: "TH_INFO_ERROR", value: 184, isUnsigned: true)
!265 = !DIEnumerator(name: "TH_INFO_ERROR_TEXT", value: 185, isUnsigned: true)
!266 = !DIEnumerator(name: "TH_INFO_WARNING", value: 186, isUnsigned: true)
!267 = !DIEnumerator(name: "TH_INFO_WARNING_TEXT", value: 187, isUnsigned: true)
!268 = !DIEnumerator(name: "TH_INFO_INFO", value: 188, isUnsigned: true)
!269 = !DIEnumerator(name: "TH_INFO_INFO_TEXT", value: 189, isUnsigned: true)
!270 = !DIEnumerator(name: "TH_INFO_DEBUG", value: 190, isUnsigned: true)
!271 = !DIEnumerator(name: "TH_INFO_DEBUG_TEXT", value: 191, isUnsigned: true)
!272 = !DIEnumerator(name: "TH_VIEW_OVERLAY", value: 192, isUnsigned: true)
!273 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eBone_Flag", file: !17, line: 187, baseType: !7, size: 32, elements: !274)
!274 = !{!275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297}
!275 = !DIEnumerator(name: "BONE_SELECTED", value: 1, isUnsigned: true)
!276 = !DIEnumerator(name: "BONE_ROOTSEL", value: 2, isUnsigned: true)
!277 = !DIEnumerator(name: "BONE_TIPSEL", value: 4, isUnsigned: true)
!278 = !DIEnumerator(name: "BONE_TRANSFORM", value: 8, isUnsigned: true)
!279 = !DIEnumerator(name: "BONE_CONNECTED", value: 16, isUnsigned: true)
!280 = !DIEnumerator(name: "BONE_HIDDEN_P", value: 64, isUnsigned: true)
!281 = !DIEnumerator(name: "BONE_DONE", value: 128, isUnsigned: true)
!282 = !DIEnumerator(name: "BONE_DRAW_ACTIVE", value: 256, isUnsigned: true)
!283 = !DIEnumerator(name: "BONE_HINGE", value: 512, isUnsigned: true)
!284 = !DIEnumerator(name: "BONE_HIDDEN_A", value: 1024, isUnsigned: true)
!285 = !DIEnumerator(name: "BONE_MULT_VG_ENV", value: 2048, isUnsigned: true)
!286 = !DIEnumerator(name: "BONE_NO_DEFORM", value: 4096, isUnsigned: true)
!287 = !DIEnumerator(name: "BONE_UNKEYED", value: 8192, isUnsigned: true)
!288 = !DIEnumerator(name: "BONE_HINGE_CHILD_TRANSFORM", value: 16384, isUnsigned: true)
!289 = !DIEnumerator(name: "BONE_NO_SCALE", value: 32768, isUnsigned: true)
!290 = !DIEnumerator(name: "BONE_HIDDEN_PG", value: 65536, isUnsigned: true)
!291 = !DIEnumerator(name: "BONE_DRAWWIRE", value: 131072, isUnsigned: true)
!292 = !DIEnumerator(name: "BONE_NO_CYCLICOFFSET", value: 262144, isUnsigned: true)
!293 = !DIEnumerator(name: "BONE_EDITMODE_LOCKED", value: 524288, isUnsigned: true)
!294 = !DIEnumerator(name: "BONE_TRANSFORM_CHILD", value: 1048576, isUnsigned: true)
!295 = !DIEnumerator(name: "BONE_UNSELECTABLE", value: 2097152, isUnsigned: true)
!296 = !DIEnumerator(name: "BONE_NO_LOCAL_LOCATION", value: 4194304, isUnsigned: true)
!297 = !DIEnumerator(name: "BONE_RELATIVE_PARENTING", value: 8388608, isUnsigned: true)
!298 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 460, baseType: !7, size: 32, elements: !299)
!299 = !{!300, !301, !302, !303, !304, !305, !306, !307}
!300 = !DIEnumerator(name: "OB_ARROWS", value: 1, isUnsigned: true)
!301 = !DIEnumerator(name: "OB_PLAINAXES", value: 2, isUnsigned: true)
!302 = !DIEnumerator(name: "OB_CIRCLE", value: 3, isUnsigned: true)
!303 = !DIEnumerator(name: "OB_SINGLE_ARROW", value: 4, isUnsigned: true)
!304 = !DIEnumerator(name: "OB_CUBE", value: 5, isUnsigned: true)
!305 = !DIEnumerator(name: "OB_EMPTY_SPHERE", value: 6, isUnsigned: true)
!306 = !DIEnumerator(name: "OB_EMPTY_CONE", value: 7, isUnsigned: true)
!307 = !DIEnumerator(name: "OB_EMPTY_IMAGE", value: 8, isUnsigned: true)
!308 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !3, line: 78, baseType: !7, size: 32, elements: !309)
!309 = !{!310, !311, !312, !313, !314, !315}
!310 = !DIEnumerator(name: "PCHAN_COLOR_NORMAL", value: 0, isUnsigned: true)
!311 = !DIEnumerator(name: "PCHAN_COLOR_SOLID", value: 1, isUnsigned: true)
!312 = !DIEnumerator(name: "PCHAN_COLOR_CONSTS", value: 2, isUnsigned: true)
!313 = !DIEnumerator(name: "PCHAN_COLOR_SPHEREBONE_BASE", value: 3, isUnsigned: true)
!314 = !DIEnumerator(name: "PCHAN_COLOR_SPHEREBONE_END", value: 4, isUnsigned: true)
!315 = !DIEnumerator(name: "PCHAN_COLOR_LINEBONE", value: 5, isUnsigned: true)
!316 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eWireColor_Flags", file: !317, line: 350, baseType: !7, size: 32, elements: !318)
!317 = !DIFile(filename: "blender/source/blender/makesdna/DNA_userdef_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!318 = !{!319, !320}
!319 = !DIEnumerator(name: "TH_WIRECOLOR_CONSTCOLS", value: 1, isUnsigned: true)
!320 = !DIEnumerator(name: "TH_WIRECOLOR_TEXTCOLS", value: 2, isUnsigned: true)
!321 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ePchan_ConstFlag", file: !322, line: 275, baseType: !7, size: 32, elements: !323)
!322 = !DIFile(filename: "blender/source/blender/makesdna/DNA_action_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!323 = !{!324, !325, !326, !327, !328, !329}
!324 = !DIEnumerator(name: "PCHAN_HAS_IK", value: 1, isUnsigned: true)
!325 = !DIEnumerator(name: "PCHAN_HAS_CONST", value: 2, isUnsigned: true)
!326 = !DIEnumerator(name: "PCHAN_HAS_ACTION", value: 4, isUnsigned: true)
!327 = !DIEnumerator(name: "PCHAN_HAS_TARGET", value: 8, isUnsigned: true)
!328 = !DIEnumerator(name: "PCHAN_HAS_STRIDE", value: 16, isUnsigned: true)
!329 = !DIEnumerator(name: "PCHAN_HAS_SPLINEIK", value: 32, isUnsigned: true)
!330 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eAnimData_Recalc", file: !331, line: 899, baseType: !7, size: 32, elements: !332)
!331 = !DIFile(filename: "blender/source/blender/makesdna/DNA_anim_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!332 = !{!333, !334, !335}
!333 = !DIEnumerator(name: "ADT_RECALC_DRIVERS", value: 1, isUnsigned: true)
!334 = !DIEnumerator(name: "ADT_RECALC_ANIM", value: 2, isUnsigned: true)
!335 = !DIEnumerator(name: "ADT_RECALC_ALL", value: 3, isUnsigned: true)
!336 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eNlaTime_ConvertModes", file: !337, line: 117, baseType: !7, size: 32, elements: !338)
!337 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_nla.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!338 = !{!339, !340, !341}
!339 = !DIEnumerator(name: "NLATIME_CONVERT_EVAL", value: 0, isUnsigned: true)
!340 = !DIEnumerator(name: "NLATIME_CONVERT_UNMAP", value: 1, isUnsigned: true)
!341 = !DIEnumerator(name: "NLATIME_CONVERT_MAP", value: 2, isUnsigned: true)
!342 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eKinematic_Flags", file: !343, line: 658, baseType: !7, size: 32, elements: !344)
!343 = !DIFile(filename: "blender/source/blender/makesdna/DNA_constraint_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!344 = !{!345, !346, !347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358, !359}
!345 = !DIEnumerator(name: "CONSTRAINT_IK_TIP", value: 1, isUnsigned: true)
!346 = !DIEnumerator(name: "CONSTRAINT_IK_ROT", value: 2, isUnsigned: true)
!347 = !DIEnumerator(name: "CONSTRAINT_IK_AUTO", value: 4, isUnsigned: true)
!348 = !DIEnumerator(name: "CONSTRAINT_IK_TEMP", value: 8, isUnsigned: true)
!349 = !DIEnumerator(name: "CONSTRAINT_IK_STRETCH", value: 16, isUnsigned: true)
!350 = !DIEnumerator(name: "CONSTRAINT_IK_POS", value: 32, isUnsigned: true)
!351 = !DIEnumerator(name: "CONSTRAINT_IK_SETANGLE", value: 64, isUnsigned: true)
!352 = !DIEnumerator(name: "CONSTRAINT_IK_GETANGLE", value: 128, isUnsigned: true)
!353 = !DIEnumerator(name: "CONSTRAINT_IK_NO_POS_X", value: 256, isUnsigned: true)
!354 = !DIEnumerator(name: "CONSTRAINT_IK_NO_POS_Y", value: 512, isUnsigned: true)
!355 = !DIEnumerator(name: "CONSTRAINT_IK_NO_POS_Z", value: 1024, isUnsigned: true)
!356 = !DIEnumerator(name: "CONSTRAINT_IK_NO_ROT_X", value: 2048, isUnsigned: true)
!357 = !DIEnumerator(name: "CONSTRAINT_IK_NO_ROT_Y", value: 4096, isUnsigned: true)
!358 = !DIEnumerator(name: "CONSTRAINT_IK_NO_ROT_Z", value: 8192, isUnsigned: true)
!359 = !DIEnumerator(name: "CONSTRAINT_IK_TARGETAXIS", value: 16384, isUnsigned: true)
!360 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ePchan_IkFlag", file: !322, line: 288, baseType: !7, size: 32, elements: !361)
!361 = !{!362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372}
!362 = !DIEnumerator(name: "BONE_IK_NO_XDOF", value: 1, isUnsigned: true)
!363 = !DIEnumerator(name: "BONE_IK_NO_YDOF", value: 2, isUnsigned: true)
!364 = !DIEnumerator(name: "BONE_IK_NO_ZDOF", value: 4, isUnsigned: true)
!365 = !DIEnumerator(name: "BONE_IK_XLIMIT", value: 8, isUnsigned: true)
!366 = !DIEnumerator(name: "BONE_IK_YLIMIT", value: 16, isUnsigned: true)
!367 = !DIEnumerator(name: "BONE_IK_ZLIMIT", value: 32, isUnsigned: true)
!368 = !DIEnumerator(name: "BONE_IK_ROTCTL", value: 64, isUnsigned: true)
!369 = !DIEnumerator(name: "BONE_IK_LINCTL", value: 128, isUnsigned: true)
!370 = !DIEnumerator(name: "BONE_IK_NO_XDOF_TEMP", value: 1024, isUnsigned: true)
!371 = !DIEnumerator(name: "BONE_IK_NO_YDOF_TEMP", value: 2048, isUnsigned: true)
!372 = !DIEnumerator(name: "BONE_IK_NO_ZDOF_TEMP", value: 4096, isUnsigned: true)
!373 = !{!374, !376, !616, !618, !619, !386, !417, !621, !375, !523, !623, !645, !1905}
!374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !375, size: 64)
!375 = !DIBasicType(name: "float", size: 32, encoding: DW_ATE_float)
!376 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !377, size: 64)
!377 = !DIDerivedType(tag: DW_TAG_typedef, name: "bArmature", file: !17, line: 114, baseType: !378)
!378 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bArmature", file: !17, line: 78, size: 2048, elements: !379)
!379 = !{!380, !452, !520, !521, !522, !524, !569, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615}
!380 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !378, file: !17, line: 79, baseType: !381, size: 960)
!381 = !DIDerivedType(tag: DW_TAG_typedef, name: "ID", file: !382, line: 130, baseType: !383)
!382 = !DIFile(filename: "blender/source/blender/makesdna/DNA_ID.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!383 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ID", file: !382, line: 117, size: 960, elements: !384)
!384 = !{!385, !387, !388, !390, !410, !414, !416, !418, !419, !420}
!385 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !383, file: !382, line: 118, baseType: !386, size: 64)
!386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!387 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !383, file: !382, line: 118, baseType: !386, size: 64, offset: 64)
!388 = !DIDerivedType(tag: DW_TAG_member, name: "newid", scope: !383, file: !382, line: 119, baseType: !389, size: 64, offset: 128)
!389 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !383, size: 64)
!390 = !DIDerivedType(tag: DW_TAG_member, name: "lib", scope: !383, file: !382, line: 120, baseType: !391, size: 64, offset: 192)
!391 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !392, size: 64)
!392 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Library", file: !382, line: 136, size: 17600, elements: !393)
!393 = !{!394, !395, !397, !400, !405, !406, !407}
!394 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !392, file: !382, line: 137, baseType: !381, size: 960)
!395 = !DIDerivedType(tag: DW_TAG_member, name: "idblock", scope: !392, file: !382, line: 138, baseType: !396, size: 64, offset: 960)
!396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !381, size: 64)
!397 = !DIDerivedType(tag: DW_TAG_member, name: "filedata", scope: !392, file: !382, line: 139, baseType: !398, size: 64, offset: 1024)
!398 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !399, size: 64)
!399 = !DICompositeType(tag: DW_TAG_structure_type, name: "FileData", file: !382, line: 43, flags: DIFlagFwdDecl)
!400 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !392, file: !382, line: 140, baseType: !401, size: 8192, offset: 1088)
!401 = !DICompositeType(tag: DW_TAG_array_type, baseType: !402, size: 8192, elements: !403)
!402 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!403 = !{!404}
!404 = !DISubrange(count: 1024)
!405 = !DIDerivedType(tag: DW_TAG_member, name: "filepath", scope: !392, file: !382, line: 141, baseType: !401, size: 8192, offset: 9280)
!406 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !392, file: !382, line: 148, baseType: !391, size: 64, offset: 17472)
!407 = !DIDerivedType(tag: DW_TAG_member, name: "packedfile", scope: !392, file: !382, line: 150, baseType: !408, size: 64, offset: 17536)
!408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !409, size: 64)
!409 = !DICompositeType(tag: DW_TAG_structure_type, name: "PackedFile", file: !382, line: 45, flags: DIFlagFwdDecl)
!410 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !383, file: !382, line: 121, baseType: !411, size: 528, offset: 256)
!411 = !DICompositeType(tag: DW_TAG_array_type, baseType: !402, size: 528, elements: !412)
!412 = !{!413}
!413 = !DISubrange(count: 66)
!414 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !383, file: !382, line: 126, baseType: !415, size: 16, offset: 784)
!415 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!416 = !DIDerivedType(tag: DW_TAG_member, name: "us", scope: !383, file: !382, line: 127, baseType: !417, size: 32, offset: 800)
!417 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!418 = !DIDerivedType(tag: DW_TAG_member, name: "icon_id", scope: !383, file: !382, line: 128, baseType: !417, size: 32, offset: 832)
!419 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !383, file: !382, line: 128, baseType: !417, size: 32, offset: 864)
!420 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !383, file: !382, line: 129, baseType: !421, size: 64, offset: 896)
!421 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !422, size: 64)
!422 = !DIDerivedType(tag: DW_TAG_typedef, name: "IDProperty", file: !382, line: 75, baseType: !423)
!423 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IDProperty", file: !382, line: 62, size: 1024, elements: !424)
!424 = !{!425, !427, !428, !429, !430, !431, !435, !436, !450, !451}
!425 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !423, file: !382, line: 63, baseType: !426, size: 64)
!426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !423, size: 64)
!427 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !423, file: !382, line: 63, baseType: !426, size: 64, offset: 64)
!428 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !423, file: !382, line: 64, baseType: !402, size: 8, offset: 128)
!429 = !DIDerivedType(tag: DW_TAG_member, name: "subtype", scope: !423, file: !382, line: 64, baseType: !402, size: 8, offset: 136)
!430 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !423, file: !382, line: 65, baseType: !415, size: 16, offset: 144)
!431 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !423, file: !382, line: 66, baseType: !432, size: 512, offset: 160)
!432 = !DICompositeType(tag: DW_TAG_array_type, baseType: !402, size: 512, elements: !433)
!433 = !{!434}
!434 = !DISubrange(count: 64)
!435 = !DIDerivedType(tag: DW_TAG_member, name: "saved", scope: !423, file: !382, line: 67, baseType: !417, size: 32, offset: 672)
!436 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !423, file: !382, line: 69, baseType: !437, size: 256, offset: 704)
!437 = !DIDerivedType(tag: DW_TAG_typedef, name: "IDPropertyData", file: !382, line: 60, baseType: !438)
!438 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IDPropertyData", file: !382, line: 48, size: 256, elements: !439)
!439 = !{!440, !441, !448, !449}
!440 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !438, file: !382, line: 49, baseType: !386, size: 64)
!441 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !438, file: !382, line: 58, baseType: !442, size: 128, offset: 64)
!442 = !DIDerivedType(tag: DW_TAG_typedef, name: "ListBase", file: !443, line: 71, baseType: !444)
!443 = !DIFile(filename: "blender/source/blender/makesdna/DNA_listBase.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!444 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ListBase", file: !443, line: 69, size: 128, elements: !445)
!445 = !{!446, !447}
!446 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !444, file: !443, line: 70, baseType: !386, size: 64)
!447 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !444, file: !443, line: 70, baseType: !386, size: 64, offset: 64)
!448 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !438, file: !382, line: 59, baseType: !417, size: 32, offset: 192)
!449 = !DIDerivedType(tag: DW_TAG_member, name: "val2", scope: !438, file: !382, line: 59, baseType: !417, size: 32, offset: 224)
!450 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !423, file: !382, line: 70, baseType: !417, size: 32, offset: 960)
!451 = !DIDerivedType(tag: DW_TAG_member, name: "totallen", scope: !423, file: !382, line: 74, baseType: !417, size: 32, offset: 992)
!452 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !378, file: !17, line: 80, baseType: !453, size: 64, offset: 960)
!453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !454, size: 64)
!454 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AnimData", file: !331, line: 838, size: 768, elements: !455)
!455 = !{!456, !470, !471, !481, !482, !513, !514, !515, !516, !517, !518, !519}
!456 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !454, file: !331, line: 840, baseType: !457, size: 64)
!457 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !458, size: 64)
!458 = !DIDerivedType(tag: DW_TAG_typedef, name: "bAction", file: !322, line: 499, baseType: !459)
!459 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bAction", file: !322, line: 486, size: 1600, elements: !460)
!460 = !{!461, !462, !463, !464, !465, !466, !467, !468, !469}
!461 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !459, file: !322, line: 487, baseType: !381, size: 960)
!462 = !DIDerivedType(tag: DW_TAG_member, name: "curves", scope: !459, file: !322, line: 489, baseType: !442, size: 128, offset: 960)
!463 = !DIDerivedType(tag: DW_TAG_member, name: "chanbase", scope: !459, file: !322, line: 490, baseType: !442, size: 128, offset: 1088)
!464 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !459, file: !322, line: 491, baseType: !442, size: 128, offset: 1216)
!465 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !459, file: !322, line: 492, baseType: !442, size: 128, offset: 1344)
!466 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !459, file: !322, line: 494, baseType: !417, size: 32, offset: 1472)
!467 = !DIDerivedType(tag: DW_TAG_member, name: "active_marker", scope: !459, file: !322, line: 495, baseType: !417, size: 32, offset: 1504)
!468 = !DIDerivedType(tag: DW_TAG_member, name: "idroot", scope: !459, file: !322, line: 497, baseType: !417, size: 32, offset: 1536)
!469 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !459, file: !322, line: 498, baseType: !417, size: 32, offset: 1568)
!470 = !DIDerivedType(tag: DW_TAG_member, name: "tmpact", scope: !454, file: !331, line: 844, baseType: !457, size: 64, offset: 64)
!471 = !DIDerivedType(tag: DW_TAG_member, name: "remap", scope: !454, file: !331, line: 848, baseType: !472, size: 64, offset: 128)
!472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !473, size: 64)
!473 = !DIDerivedType(tag: DW_TAG_typedef, name: "AnimMapper", file: !331, line: 549, baseType: !474)
!474 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AnimMapper", file: !331, line: 544, size: 320, elements: !475)
!475 = !{!476, !478, !479, !480}
!476 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !474, file: !331, line: 545, baseType: !477, size: 64)
!477 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !474, size: 64)
!478 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !474, file: !331, line: 545, baseType: !477, size: 64, offset: 64)
!479 = !DIDerivedType(tag: DW_TAG_member, name: "target", scope: !474, file: !331, line: 547, baseType: !457, size: 64, offset: 128)
!480 = !DIDerivedType(tag: DW_TAG_member, name: "mappings", scope: !474, file: !331, line: 548, baseType: !442, size: 128, offset: 192)
!481 = !DIDerivedType(tag: DW_TAG_member, name: "nla_tracks", scope: !454, file: !331, line: 851, baseType: !442, size: 128, offset: 192)
!482 = !DIDerivedType(tag: DW_TAG_member, name: "actstrip", scope: !454, file: !331, line: 853, baseType: !483, size: 64, offset: 320)
!483 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !484, size: 64)
!484 = !DIDerivedType(tag: DW_TAG_typedef, name: "NlaStrip", file: !331, line: 594, baseType: !485)
!485 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "NlaStrip", file: !331, line: 561, size: 1664, elements: !486)
!486 = !{!487, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512}
!487 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !485, file: !331, line: 562, baseType: !488, size: 64)
!488 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !485, size: 64)
!489 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !485, file: !331, line: 562, baseType: !488, size: 64, offset: 64)
!490 = !DIDerivedType(tag: DW_TAG_member, name: "strips", scope: !485, file: !331, line: 564, baseType: !442, size: 128, offset: 128)
!491 = !DIDerivedType(tag: DW_TAG_member, name: "act", scope: !485, file: !331, line: 565, baseType: !457, size: 64, offset: 256)
!492 = !DIDerivedType(tag: DW_TAG_member, name: "remap", scope: !485, file: !331, line: 566, baseType: !472, size: 64, offset: 320)
!493 = !DIDerivedType(tag: DW_TAG_member, name: "fcurves", scope: !485, file: !331, line: 568, baseType: !442, size: 128, offset: 384)
!494 = !DIDerivedType(tag: DW_TAG_member, name: "modifiers", scope: !485, file: !331, line: 569, baseType: !442, size: 128, offset: 512)
!495 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !485, file: !331, line: 571, baseType: !432, size: 512, offset: 640)
!496 = !DIDerivedType(tag: DW_TAG_member, name: "influence", scope: !485, file: !331, line: 573, baseType: !375, size: 32, offset: 1152)
!497 = !DIDerivedType(tag: DW_TAG_member, name: "strip_time", scope: !485, file: !331, line: 574, baseType: !375, size: 32, offset: 1184)
!498 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !485, file: !331, line: 576, baseType: !375, size: 32, offset: 1216)
!499 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !485, file: !331, line: 576, baseType: !375, size: 32, offset: 1248)
!500 = !DIDerivedType(tag: DW_TAG_member, name: "actstart", scope: !485, file: !331, line: 577, baseType: !375, size: 32, offset: 1280)
!501 = !DIDerivedType(tag: DW_TAG_member, name: "actend", scope: !485, file: !331, line: 577, baseType: !375, size: 32, offset: 1312)
!502 = !DIDerivedType(tag: DW_TAG_member, name: "repeat", scope: !485, file: !331, line: 579, baseType: !375, size: 32, offset: 1344)
!503 = !DIDerivedType(tag: DW_TAG_member, name: "scale", scope: !485, file: !331, line: 580, baseType: !375, size: 32, offset: 1376)
!504 = !DIDerivedType(tag: DW_TAG_member, name: "blendin", scope: !485, file: !331, line: 582, baseType: !375, size: 32, offset: 1408)
!505 = !DIDerivedType(tag: DW_TAG_member, name: "blendout", scope: !485, file: !331, line: 582, baseType: !375, size: 32, offset: 1440)
!506 = !DIDerivedType(tag: DW_TAG_member, name: "blendmode", scope: !485, file: !331, line: 583, baseType: !415, size: 16, offset: 1472)
!507 = !DIDerivedType(tag: DW_TAG_member, name: "extendmode", scope: !485, file: !331, line: 585, baseType: !415, size: 16, offset: 1488)
!508 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !485, file: !331, line: 586, baseType: !415, size: 16, offset: 1504)
!509 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !485, file: !331, line: 588, baseType: !415, size: 16, offset: 1520)
!510 = !DIDerivedType(tag: DW_TAG_member, name: "speaker_handle", scope: !485, file: !331, line: 590, baseType: !386, size: 64, offset: 1536)
!511 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !485, file: !331, line: 592, baseType: !417, size: 32, offset: 1600)
!512 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !485, file: !331, line: 593, baseType: !417, size: 32, offset: 1632)
!513 = !DIDerivedType(tag: DW_TAG_member, name: "drivers", scope: !454, file: !331, line: 858, baseType: !442, size: 128, offset: 384)
!514 = !DIDerivedType(tag: DW_TAG_member, name: "overrides", scope: !454, file: !331, line: 859, baseType: !442, size: 128, offset: 512)
!515 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !454, file: !331, line: 862, baseType: !417, size: 32, offset: 640)
!516 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !454, file: !331, line: 863, baseType: !417, size: 32, offset: 672)
!517 = !DIDerivedType(tag: DW_TAG_member, name: "act_blendmode", scope: !454, file: !331, line: 866, baseType: !415, size: 16, offset: 704)
!518 = !DIDerivedType(tag: DW_TAG_member, name: "act_extendmode", scope: !454, file: !331, line: 867, baseType: !415, size: 16, offset: 720)
!519 = !DIDerivedType(tag: DW_TAG_member, name: "act_influence", scope: !454, file: !331, line: 868, baseType: !375, size: 32, offset: 736)
!520 = !DIDerivedType(tag: DW_TAG_member, name: "bonebase", scope: !378, file: !17, line: 82, baseType: !442, size: 128, offset: 1024)
!521 = !DIDerivedType(tag: DW_TAG_member, name: "chainbase", scope: !378, file: !17, line: 83, baseType: !442, size: 128, offset: 1152)
!522 = !DIDerivedType(tag: DW_TAG_member, name: "edbo", scope: !378, file: !17, line: 84, baseType: !523, size: 64, offset: 1280)
!523 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !442, size: 64)
!524 = !DIDerivedType(tag: DW_TAG_member, name: "act_bone", scope: !378, file: !17, line: 92, baseType: !525, size: 64, offset: 1344)
!525 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !526, size: 64)
!526 = !DIDerivedType(tag: DW_TAG_typedef, name: "Bone", file: !17, line: 76, baseType: !527)
!527 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Bone", file: !17, line: 48, size: 2624, elements: !528)
!528 = !{!529, !531, !532, !533, !534, !535, !536, !537, !541, !542, !545, !546, !547, !548, !552, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562, !563, !564, !565}
!529 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !527, file: !17, line: 49, baseType: !530, size: 64)
!530 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !527, size: 64)
!531 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !527, file: !17, line: 49, baseType: !530, size: 64, offset: 64)
!532 = !DIDerivedType(tag: DW_TAG_member, name: "prop", scope: !527, file: !17, line: 50, baseType: !421, size: 64, offset: 128)
!533 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !527, file: !17, line: 51, baseType: !530, size: 64, offset: 192)
!534 = !DIDerivedType(tag: DW_TAG_member, name: "childbase", scope: !527, file: !17, line: 52, baseType: !442, size: 128, offset: 256)
!535 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !527, file: !17, line: 53, baseType: !432, size: 512, offset: 384)
!536 = !DIDerivedType(tag: DW_TAG_member, name: "roll", scope: !527, file: !17, line: 55, baseType: !375, size: 32, offset: 896)
!537 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !527, file: !17, line: 56, baseType: !538, size: 96, offset: 928)
!538 = !DICompositeType(tag: DW_TAG_array_type, baseType: !375, size: 96, elements: !539)
!539 = !{!540}
!540 = !DISubrange(count: 3)
!541 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !527, file: !17, line: 57, baseType: !538, size: 96, offset: 1024)
!542 = !DIDerivedType(tag: DW_TAG_member, name: "bone_mat", scope: !527, file: !17, line: 58, baseType: !543, size: 288, offset: 1120)
!543 = !DICompositeType(tag: DW_TAG_array_type, baseType: !375, size: 288, elements: !544)
!544 = !{!540, !540}
!545 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !527, file: !17, line: 60, baseType: !417, size: 32, offset: 1408)
!546 = !DIDerivedType(tag: DW_TAG_member, name: "arm_head", scope: !527, file: !17, line: 62, baseType: !538, size: 96, offset: 1440)
!547 = !DIDerivedType(tag: DW_TAG_member, name: "arm_tail", scope: !527, file: !17, line: 63, baseType: !538, size: 96, offset: 1536)
!548 = !DIDerivedType(tag: DW_TAG_member, name: "arm_mat", scope: !527, file: !17, line: 64, baseType: !549, size: 512, offset: 1632)
!549 = !DICompositeType(tag: DW_TAG_array_type, baseType: !375, size: 512, elements: !550)
!550 = !{!551, !551}
!551 = !DISubrange(count: 4)
!552 = !DIDerivedType(tag: DW_TAG_member, name: "arm_roll", scope: !527, file: !17, line: 65, baseType: !375, size: 32, offset: 2144)
!553 = !DIDerivedType(tag: DW_TAG_member, name: "dist", scope: !527, file: !17, line: 67, baseType: !375, size: 32, offset: 2176)
!554 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !527, file: !17, line: 67, baseType: !375, size: 32, offset: 2208)
!555 = !DIDerivedType(tag: DW_TAG_member, name: "xwidth", scope: !527, file: !17, line: 68, baseType: !375, size: 32, offset: 2240)
!556 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !527, file: !17, line: 68, baseType: !375, size: 32, offset: 2272)
!557 = !DIDerivedType(tag: DW_TAG_member, name: "zwidth", scope: !527, file: !17, line: 68, baseType: !375, size: 32, offset: 2304)
!558 = !DIDerivedType(tag: DW_TAG_member, name: "ease1", scope: !527, file: !17, line: 69, baseType: !375, size: 32, offset: 2336)
!559 = !DIDerivedType(tag: DW_TAG_member, name: "ease2", scope: !527, file: !17, line: 69, baseType: !375, size: 32, offset: 2368)
!560 = !DIDerivedType(tag: DW_TAG_member, name: "rad_head", scope: !527, file: !17, line: 70, baseType: !375, size: 32, offset: 2400)
!561 = !DIDerivedType(tag: DW_TAG_member, name: "rad_tail", scope: !527, file: !17, line: 70, baseType: !375, size: 32, offset: 2432)
!562 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !527, file: !17, line: 72, baseType: !538, size: 96, offset: 2464)
!563 = !DIDerivedType(tag: DW_TAG_member, name: "layer", scope: !527, file: !17, line: 73, baseType: !417, size: 32, offset: 2560)
!564 = !DIDerivedType(tag: DW_TAG_member, name: "segments", scope: !527, file: !17, line: 74, baseType: !415, size: 16, offset: 2592)
!565 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !527, file: !17, line: 75, baseType: !566, size: 16, offset: 2608)
!566 = !DICompositeType(tag: DW_TAG_array_type, baseType: !415, size: 16, elements: !567)
!567 = !{!568}
!568 = !DISubrange(count: 1)
!569 = !DIDerivedType(tag: DW_TAG_member, name: "act_edbone", scope: !378, file: !17, line: 93, baseType: !570, size: 64, offset: 1408)
!570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !571, size: 64)
!571 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "EditBone", file: !572, line: 56, size: 1472, elements: !573)
!572 = !DIFile(filename: "blender/source/blender/editors/include/ED_armature.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!573 = !{!574, !575, !576, !577, !578, !579, !580, !581, !582, !583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595}
!574 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !571, file: !572, line: 57, baseType: !570, size: 64)
!575 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !571, file: !572, line: 57, baseType: !570, size: 64, offset: 64)
!576 = !DIDerivedType(tag: DW_TAG_member, name: "prop", scope: !571, file: !572, line: 58, baseType: !426, size: 64, offset: 128)
!577 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !571, file: !572, line: 59, baseType: !570, size: 64, offset: 192)
!578 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !571, file: !572, line: 62, baseType: !386, size: 64, offset: 256)
!579 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !571, file: !572, line: 64, baseType: !432, size: 512, offset: 320)
!580 = !DIDerivedType(tag: DW_TAG_member, name: "roll", scope: !571, file: !572, line: 65, baseType: !375, size: 32, offset: 832)
!581 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !571, file: !572, line: 70, baseType: !538, size: 96, offset: 864)
!582 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !571, file: !572, line: 71, baseType: !538, size: 96, offset: 960)
!583 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !571, file: !572, line: 75, baseType: !417, size: 32, offset: 1056)
!584 = !DIDerivedType(tag: DW_TAG_member, name: "layer", scope: !571, file: !572, line: 76, baseType: !417, size: 32, offset: 1088)
!585 = !DIDerivedType(tag: DW_TAG_member, name: "dist", scope: !571, file: !572, line: 78, baseType: !375, size: 32, offset: 1120)
!586 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !571, file: !572, line: 78, baseType: !375, size: 32, offset: 1152)
!587 = !DIDerivedType(tag: DW_TAG_member, name: "xwidth", scope: !571, file: !572, line: 79, baseType: !375, size: 32, offset: 1184)
!588 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !571, file: !572, line: 79, baseType: !375, size: 32, offset: 1216)
!589 = !DIDerivedType(tag: DW_TAG_member, name: "zwidth", scope: !571, file: !572, line: 79, baseType: !375, size: 32, offset: 1248)
!590 = !DIDerivedType(tag: DW_TAG_member, name: "ease1", scope: !571, file: !572, line: 80, baseType: !375, size: 32, offset: 1280)
!591 = !DIDerivedType(tag: DW_TAG_member, name: "ease2", scope: !571, file: !572, line: 80, baseType: !375, size: 32, offset: 1312)
!592 = !DIDerivedType(tag: DW_TAG_member, name: "rad_head", scope: !571, file: !572, line: 81, baseType: !375, size: 32, offset: 1344)
!593 = !DIDerivedType(tag: DW_TAG_member, name: "rad_tail", scope: !571, file: !572, line: 81, baseType: !375, size: 32, offset: 1376)
!594 = !DIDerivedType(tag: DW_TAG_member, name: "oldlength", scope: !571, file: !572, line: 83, baseType: !375, size: 32, offset: 1408)
!595 = !DIDerivedType(tag: DW_TAG_member, name: "segments", scope: !571, file: !572, line: 85, baseType: !415, size: 16, offset: 1440)
!596 = !DIDerivedType(tag: DW_TAG_member, name: "sketch", scope: !378, file: !17, line: 95, baseType: !386, size: 64, offset: 1472)
!597 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !378, file: !17, line: 97, baseType: !417, size: 32, offset: 1536)
!598 = !DIDerivedType(tag: DW_TAG_member, name: "drawtype", scope: !378, file: !17, line: 98, baseType: !417, size: 32, offset: 1568)
!599 = !DIDerivedType(tag: DW_TAG_member, name: "gevertdeformer", scope: !378, file: !17, line: 99, baseType: !417, size: 32, offset: 1600)
!600 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !378, file: !17, line: 100, baseType: !417, size: 32, offset: 1632)
!601 = !DIDerivedType(tag: DW_TAG_member, name: "deformflag", scope: !378, file: !17, line: 101, baseType: !415, size: 16, offset: 1664)
!602 = !DIDerivedType(tag: DW_TAG_member, name: "pathflag", scope: !378, file: !17, line: 102, baseType: !415, size: 16, offset: 1680)
!603 = !DIDerivedType(tag: DW_TAG_member, name: "layer_used", scope: !378, file: !17, line: 104, baseType: !7, size: 32, offset: 1696)
!604 = !DIDerivedType(tag: DW_TAG_member, name: "layer", scope: !378, file: !17, line: 105, baseType: !7, size: 32, offset: 1728)
!605 = !DIDerivedType(tag: DW_TAG_member, name: "layer_protected", scope: !378, file: !17, line: 105, baseType: !7, size: 32, offset: 1760)
!606 = !DIDerivedType(tag: DW_TAG_member, name: "ghostep", scope: !378, file: !17, line: 108, baseType: !415, size: 16, offset: 1792)
!607 = !DIDerivedType(tag: DW_TAG_member, name: "ghostsize", scope: !378, file: !17, line: 108, baseType: !415, size: 16, offset: 1808)
!608 = !DIDerivedType(tag: DW_TAG_member, name: "ghosttype", scope: !378, file: !17, line: 109, baseType: !415, size: 16, offset: 1824)
!609 = !DIDerivedType(tag: DW_TAG_member, name: "pathsize", scope: !378, file: !17, line: 109, baseType: !415, size: 16, offset: 1840)
!610 = !DIDerivedType(tag: DW_TAG_member, name: "ghostsf", scope: !378, file: !17, line: 110, baseType: !417, size: 32, offset: 1856)
!611 = !DIDerivedType(tag: DW_TAG_member, name: "ghostef", scope: !378, file: !17, line: 110, baseType: !417, size: 32, offset: 1888)
!612 = !DIDerivedType(tag: DW_TAG_member, name: "pathsf", scope: !378, file: !17, line: 111, baseType: !417, size: 32, offset: 1920)
!613 = !DIDerivedType(tag: DW_TAG_member, name: "pathef", scope: !378, file: !17, line: 111, baseType: !417, size: 32, offset: 1952)
!614 = !DIDerivedType(tag: DW_TAG_member, name: "pathbc", scope: !378, file: !17, line: 112, baseType: !417, size: 32, offset: 1984)
!615 = !DIDerivedType(tag: DW_TAG_member, name: "pathac", scope: !378, file: !17, line: 112, baseType: !417, size: 32, offset: 2016)
!616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !617, size: 64)
!617 = !DIDerivedType(tag: DW_TAG_typedef, name: "EditBone", file: !572, line: 86, baseType: !571)
!618 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !402, size: 64)
!619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !620, size: 64)
!620 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!621 = !DIDerivedType(tag: DW_TAG_typedef, name: "GLuint", file: !622, line: 272, baseType: !7)
!622 = !DIFile(filename: "blender/extern/glew/include/GL/glew.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!623 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !624, size: 64)
!624 = !DIDerivedType(tag: DW_TAG_typedef, name: "bActionGroup", file: !322, line: 450, baseType: !625)
!625 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bActionGroup", file: !322, line: 440, size: 960, elements: !626)
!626 = !{!627, !629, !630, !631, !632, !633, !634}
!627 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !625, file: !322, line: 441, baseType: !628, size: 64)
!628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !625, size: 64)
!629 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !625, file: !322, line: 441, baseType: !628, size: 64, offset: 64)
!630 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !625, file: !322, line: 443, baseType: !442, size: 128, offset: 128)
!631 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !625, file: !322, line: 445, baseType: !417, size: 32, offset: 256)
!632 = !DIDerivedType(tag: DW_TAG_member, name: "customCol", scope: !625, file: !322, line: 446, baseType: !417, size: 32, offset: 288)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !625, file: !322, line: 447, baseType: !432, size: 512, offset: 320)
!634 = !DIDerivedType(tag: DW_TAG_member, name: "cs", scope: !625, file: !322, line: 449, baseType: !635, size: 128, offset: 832)
!635 = !DIDerivedType(tag: DW_TAG_typedef, name: "ThemeWireColor", file: !317, line: 347, baseType: !636)
!636 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ThemeWireColor", file: !317, line: 340, size: 128, elements: !637)
!637 = !{!638, !641, !642, !643, !644}
!638 = !DIDerivedType(tag: DW_TAG_member, name: "solid", scope: !636, file: !317, line: 341, baseType: !639, size: 32)
!639 = !DICompositeType(tag: DW_TAG_array_type, baseType: !402, size: 32, elements: !640)
!640 = !{!551}
!641 = !DIDerivedType(tag: DW_TAG_member, name: "select", scope: !636, file: !317, line: 342, baseType: !639, size: 32, offset: 32)
!642 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !636, file: !317, line: 343, baseType: !639, size: 32, offset: 64)
!643 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !636, file: !317, line: 345, baseType: !415, size: 16, offset: 96)
!644 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !636, file: !317, line: 346, baseType: !415, size: 16, offset: 112)
!645 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !646, size: 64)
!646 = !DIDerivedType(tag: DW_TAG_typedef, name: "bKinematicConstraint", file: !343, line: 151, baseType: !647)
!647 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bKinematicConstraint", file: !343, line: 135, size: 1472, elements: !648)
!648 = !{!649, !1891, !1892, !1893, !1894, !1895, !1896, !1897, !1898, !1899, !1900, !1901, !1902, !1903, !1904}
!649 = !DIDerivedType(tag: DW_TAG_member, name: "tar", scope: !647, file: !343, line: 136, baseType: !650, size: 64)
!650 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !651, size: 64)
!651 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Object", file: !6, line: 115, size: 11392, elements: !652)
!652 = !{!653, !654, !655, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !673, !683, !685, !686, !727, !728, !732, !733, !749, !750, !751, !752, !753, !754, !755, !760, !761, !762, !763, !764, !765, !766, !767, !768, !769, !770, !771, !773, !774, !775, !776, !777, !778, !779, !780, !781, !782, !783, !784, !785, !786, !787, !788, !789, !790, !791, !792, !793, !794, !795, !796, !797, !798, !799, !800, !801, !802, !803, !804, !805, !806, !807, !808, !809, !810, !811, !812, !814, !815, !816, !817, !818, !819, !820, !821, !822, !823, !824, !825, !826, !827, !828, !829, !830, !831, !832, !833, !836, !837, !838, !839, !840, !841, !842, !843, !844, !847, !850, !853, !854, !855, !856, !857, !860, !863, !866, !867, !873, !874, !875, !876, !877, !878, !879, !882, !885, !889, !1879, !1880}
!653 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !651, file: !6, line: 116, baseType: !381, size: 960)
!654 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !651, file: !6, line: 117, baseType: !453, size: 64, offset: 960)
!655 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt", scope: !651, file: !6, line: 119, baseType: !656, size: 64, offset: 1024)
!656 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !657, size: 64)
!657 = !DICompositeType(tag: DW_TAG_structure_type, name: "SculptSession", file: !6, line: 57, flags: DIFlagFwdDecl)
!658 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !651, file: !6, line: 121, baseType: !415, size: 16, offset: 1088)
!659 = !DIDerivedType(tag: DW_TAG_member, name: "partype", scope: !651, file: !6, line: 121, baseType: !415, size: 16, offset: 1104)
!660 = !DIDerivedType(tag: DW_TAG_member, name: "par1", scope: !651, file: !6, line: 122, baseType: !417, size: 32, offset: 1120)
!661 = !DIDerivedType(tag: DW_TAG_member, name: "par2", scope: !651, file: !6, line: 122, baseType: !417, size: 32, offset: 1152)
!662 = !DIDerivedType(tag: DW_TAG_member, name: "par3", scope: !651, file: !6, line: 122, baseType: !417, size: 32, offset: 1184)
!663 = !DIDerivedType(tag: DW_TAG_member, name: "parsubstr", scope: !651, file: !6, line: 123, baseType: !432, size: 512, offset: 1216)
!664 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !651, file: !6, line: 124, baseType: !650, size: 64, offset: 1728)
!665 = !DIDerivedType(tag: DW_TAG_member, name: "track", scope: !651, file: !6, line: 124, baseType: !650, size: 64, offset: 1792)
!666 = !DIDerivedType(tag: DW_TAG_member, name: "proxy", scope: !651, file: !6, line: 127, baseType: !650, size: 64, offset: 1856)
!667 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_group", scope: !651, file: !6, line: 127, baseType: !650, size: 64, offset: 1920)
!668 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_from", scope: !651, file: !6, line: 127, baseType: !650, size: 64, offset: 1984)
!669 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !651, file: !6, line: 128, baseType: !670, size: 64, offset: 2048)
!670 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !671, size: 64)
!671 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ipo", file: !672, line: 46, flags: DIFlagFwdDecl)
!672 = !DIFile(filename: "blender/source/blender/makesdna/DNA_texture_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!673 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !651, file: !6, line: 130, baseType: !674, size: 64, offset: 2112)
!674 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !675, size: 64)
!675 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BoundBox", file: !6, line: 97, size: 832, elements: !676)
!676 = !{!677, !681, !682}
!677 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !675, file: !6, line: 98, baseType: !678, size: 768)
!678 = !DICompositeType(tag: DW_TAG_array_type, baseType: !375, size: 768, elements: !679)
!679 = !{!680, !540}
!680 = !DISubrange(count: 8)
!681 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !675, file: !6, line: 99, baseType: !417, size: 32, offset: 768)
!682 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !675, file: !6, line: 99, baseType: !417, size: 32, offset: 800)
!683 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !651, file: !6, line: 131, baseType: !684, size: 64, offset: 2176)
!684 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !459, size: 64)
!685 = !DIDerivedType(tag: DW_TAG_member, name: "poselib", scope: !651, file: !6, line: 132, baseType: !684, size: 64, offset: 2240)
!686 = !DIDerivedType(tag: DW_TAG_member, name: "pose", scope: !651, file: !6, line: 133, baseType: !687, size: 64, offset: 2304)
!687 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !688, size: 64)
!688 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bPose", file: !322, line: 334, size: 1728, elements: !689)
!689 = !{!690, !691, !694, !695, !696, !697, !698, !699, !700, !701, !702, !703, !704, !705, !706, !726}
!690 = !DIDerivedType(tag: DW_TAG_member, name: "chanbase", scope: !688, file: !322, line: 335, baseType: !442, size: 128)
!691 = !DIDerivedType(tag: DW_TAG_member, name: "chanhash", scope: !688, file: !322, line: 336, baseType: !692, size: 64, offset: 128)
!692 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !693, size: 64)
!693 = !DICompositeType(tag: DW_TAG_structure_type, name: "GHash", file: !322, line: 47, flags: DIFlagFwdDecl)
!694 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !688, file: !322, line: 338, baseType: !415, size: 16, offset: 192)
!695 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !688, file: !322, line: 338, baseType: !415, size: 16, offset: 208)
!696 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_layer", scope: !688, file: !322, line: 339, baseType: !7, size: 32, offset: 224)
!697 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !688, file: !322, line: 340, baseType: !417, size: 32, offset: 256)
!698 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !688, file: !322, line: 342, baseType: !375, size: 32, offset: 288)
!699 = !DIDerivedType(tag: DW_TAG_member, name: "stride_offset", scope: !688, file: !322, line: 343, baseType: !538, size: 96, offset: 320)
!700 = !DIDerivedType(tag: DW_TAG_member, name: "cyclic_offset", scope: !688, file: !322, line: 344, baseType: !538, size: 96, offset: 416)
!701 = !DIDerivedType(tag: DW_TAG_member, name: "agroups", scope: !688, file: !322, line: 347, baseType: !442, size: 128, offset: 512)
!702 = !DIDerivedType(tag: DW_TAG_member, name: "active_group", scope: !688, file: !322, line: 349, baseType: !417, size: 32, offset: 640)
!703 = !DIDerivedType(tag: DW_TAG_member, name: "iksolver", scope: !688, file: !322, line: 350, baseType: !417, size: 32, offset: 672)
!704 = !DIDerivedType(tag: DW_TAG_member, name: "ikdata", scope: !688, file: !322, line: 351, baseType: !386, size: 64, offset: 704)
!705 = !DIDerivedType(tag: DW_TAG_member, name: "ikparam", scope: !688, file: !322, line: 352, baseType: !386, size: 64, offset: 768)
!706 = !DIDerivedType(tag: DW_TAG_member, name: "avs", scope: !688, file: !322, line: 354, baseType: !707, size: 384, offset: 832)
!707 = !DIDerivedType(tag: DW_TAG_typedef, name: "bAnimVizSettings", file: !322, line: 116, baseType: !708)
!708 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bAnimVizSettings", file: !322, line: 94, size: 384, elements: !709)
!709 = !{!710, !711, !712, !713, !714, !715, !716, !717, !718, !719, !720, !721, !722, !723, !724, !725}
!710 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_sf", scope: !708, file: !322, line: 96, baseType: !417, size: 32)
!711 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_ef", scope: !708, file: !322, line: 96, baseType: !417, size: 32, offset: 32)
!712 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_bc", scope: !708, file: !322, line: 97, baseType: !417, size: 32, offset: 64)
!713 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_ac", scope: !708, file: !322, line: 97, baseType: !417, size: 32, offset: 96)
!714 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_type", scope: !708, file: !322, line: 99, baseType: !415, size: 16, offset: 128)
!715 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_step", scope: !708, file: !322, line: 100, baseType: !415, size: 16, offset: 144)
!716 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_flag", scope: !708, file: !322, line: 102, baseType: !415, size: 16, offset: 160)
!717 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !708, file: !322, line: 105, baseType: !415, size: 16, offset: 176)
!718 = !DIDerivedType(tag: DW_TAG_member, name: "path_type", scope: !708, file: !322, line: 108, baseType: !415, size: 16, offset: 192)
!719 = !DIDerivedType(tag: DW_TAG_member, name: "path_step", scope: !708, file: !322, line: 109, baseType: !415, size: 16, offset: 208)
!720 = !DIDerivedType(tag: DW_TAG_member, name: "path_viewflag", scope: !708, file: !322, line: 111, baseType: !415, size: 16, offset: 224)
!721 = !DIDerivedType(tag: DW_TAG_member, name: "path_bakeflag", scope: !708, file: !322, line: 112, baseType: !415, size: 16, offset: 240)
!722 = !DIDerivedType(tag: DW_TAG_member, name: "path_sf", scope: !708, file: !322, line: 114, baseType: !417, size: 32, offset: 256)
!723 = !DIDerivedType(tag: DW_TAG_member, name: "path_ef", scope: !708, file: !322, line: 114, baseType: !417, size: 32, offset: 288)
!724 = !DIDerivedType(tag: DW_TAG_member, name: "path_bc", scope: !708, file: !322, line: 115, baseType: !417, size: 32, offset: 320)
!725 = !DIDerivedType(tag: DW_TAG_member, name: "path_ac", scope: !708, file: !322, line: 115, baseType: !417, size: 32, offset: 352)
!726 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_act_bone", scope: !688, file: !322, line: 355, baseType: !432, size: 512, offset: 1216)
!727 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !651, file: !6, line: 134, baseType: !386, size: 64, offset: 2368)
!728 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !651, file: !6, line: 136, baseType: !729, size: 64, offset: 2432)
!729 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !730, size: 64)
!730 = !DICompositeType(tag: DW_TAG_structure_type, name: "bGPdata", file: !731, line: 61, flags: DIFlagFwdDecl)
!731 = !DIFile(filename: "blender/source/blender/makesdna/DNA_scene_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!732 = !DIDerivedType(tag: DW_TAG_member, name: "avs", scope: !651, file: !6, line: 138, baseType: !707, size: 384, offset: 2496)
!733 = !DIDerivedType(tag: DW_TAG_member, name: "mpath", scope: !651, file: !6, line: 139, baseType: !734, size: 64, offset: 2880)
!734 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !735, size: 64)
!735 = !DIDerivedType(tag: DW_TAG_typedef, name: "bMotionPath", file: !322, line: 80, baseType: !736)
!736 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bMotionPath", file: !322, line: 72, size: 192, elements: !737)
!737 = !{!738, !745, !746, !747, !748}
!738 = !DIDerivedType(tag: DW_TAG_member, name: "points", scope: !736, file: !322, line: 73, baseType: !739, size: 64)
!739 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !740, size: 64)
!740 = !DIDerivedType(tag: DW_TAG_typedef, name: "bMotionPathVert", file: !322, line: 59, baseType: !741)
!741 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bMotionPathVert", file: !322, line: 56, size: 128, elements: !742)
!742 = !{!743, !744}
!743 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !741, file: !322, line: 57, baseType: !538, size: 96)
!744 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !741, file: !322, line: 58, baseType: !417, size: 32, offset: 96)
!745 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !736, file: !322, line: 74, baseType: !417, size: 32, offset: 64)
!746 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !736, file: !322, line: 76, baseType: !417, size: 32, offset: 96)
!747 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame", scope: !736, file: !322, line: 77, baseType: !417, size: 32, offset: 128)
!748 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !736, file: !322, line: 79, baseType: !417, size: 32, offset: 160)
!749 = !DIDerivedType(tag: DW_TAG_member, name: "constraintChannels", scope: !651, file: !6, line: 141, baseType: !442, size: 128, offset: 2944)
!750 = !DIDerivedType(tag: DW_TAG_member, name: "effect", scope: !651, file: !6, line: 142, baseType: !442, size: 128, offset: 3072)
!751 = !DIDerivedType(tag: DW_TAG_member, name: "defbase", scope: !651, file: !6, line: 143, baseType: !442, size: 128, offset: 3200)
!752 = !DIDerivedType(tag: DW_TAG_member, name: "modifiers", scope: !651, file: !6, line: 144, baseType: !442, size: 128, offset: 3328)
!753 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !651, file: !6, line: 146, baseType: !417, size: 32, offset: 3456)
!754 = !DIDerivedType(tag: DW_TAG_member, name: "restore_mode", scope: !651, file: !6, line: 147, baseType: !417, size: 32, offset: 3488)
!755 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !651, file: !6, line: 150, baseType: !756, size: 64, offset: 3520)
!756 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !757, size: 64)
!757 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !758, size: 64)
!758 = !DICompositeType(tag: DW_TAG_structure_type, name: "Material", file: !759, line: 46, flags: DIFlagFwdDecl)
!759 = !DIFile(filename: "blender/source/blender/makesdna/DNA_curve_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!760 = !DIDerivedType(tag: DW_TAG_member, name: "matbits", scope: !651, file: !6, line: 151, baseType: !618, size: 64, offset: 3584)
!761 = !DIDerivedType(tag: DW_TAG_member, name: "totcol", scope: !651, file: !6, line: 152, baseType: !417, size: 32, offset: 3648)
!762 = !DIDerivedType(tag: DW_TAG_member, name: "actcol", scope: !651, file: !6, line: 153, baseType: !417, size: 32, offset: 3680)
!763 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !651, file: !6, line: 156, baseType: !538, size: 96, offset: 3712)
!764 = !DIDerivedType(tag: DW_TAG_member, name: "dloc", scope: !651, file: !6, line: 156, baseType: !538, size: 96, offset: 3808)
!765 = !DIDerivedType(tag: DW_TAG_member, name: "orig", scope: !651, file: !6, line: 156, baseType: !538, size: 96, offset: 3904)
!766 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !651, file: !6, line: 157, baseType: !538, size: 96, offset: 4000)
!767 = !DIDerivedType(tag: DW_TAG_member, name: "dsize", scope: !651, file: !6, line: 158, baseType: !538, size: 96, offset: 4096)
!768 = !DIDerivedType(tag: DW_TAG_member, name: "dscale", scope: !651, file: !6, line: 159, baseType: !538, size: 96, offset: 4192)
!769 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !651, file: !6, line: 160, baseType: !538, size: 96, offset: 4288)
!770 = !DIDerivedType(tag: DW_TAG_member, name: "drot", scope: !651, file: !6, line: 160, baseType: !538, size: 96, offset: 4384)
!771 = !DIDerivedType(tag: DW_TAG_member, name: "quat", scope: !651, file: !6, line: 161, baseType: !772, size: 128, offset: 4480)
!772 = !DICompositeType(tag: DW_TAG_array_type, baseType: !375, size: 128, elements: !640)
!773 = !DIDerivedType(tag: DW_TAG_member, name: "dquat", scope: !651, file: !6, line: 161, baseType: !772, size: 128, offset: 4608)
!774 = !DIDerivedType(tag: DW_TAG_member, name: "rotAxis", scope: !651, file: !6, line: 162, baseType: !538, size: 96, offset: 4736)
!775 = !DIDerivedType(tag: DW_TAG_member, name: "drotAxis", scope: !651, file: !6, line: 162, baseType: !538, size: 96, offset: 4832)
!776 = !DIDerivedType(tag: DW_TAG_member, name: "rotAngle", scope: !651, file: !6, line: 163, baseType: !375, size: 32, offset: 4928)
!777 = !DIDerivedType(tag: DW_TAG_member, name: "drotAngle", scope: !651, file: !6, line: 163, baseType: !375, size: 32, offset: 4960)
!778 = !DIDerivedType(tag: DW_TAG_member, name: "obmat", scope: !651, file: !6, line: 164, baseType: !549, size: 512, offset: 4992)
!779 = !DIDerivedType(tag: DW_TAG_member, name: "parentinv", scope: !651, file: !6, line: 165, baseType: !549, size: 512, offset: 5504)
!780 = !DIDerivedType(tag: DW_TAG_member, name: "constinv", scope: !651, file: !6, line: 166, baseType: !549, size: 512, offset: 6016)
!781 = !DIDerivedType(tag: DW_TAG_member, name: "imat", scope: !651, file: !6, line: 167, baseType: !549, size: 512, offset: 6528)
!782 = !DIDerivedType(tag: DW_TAG_member, name: "imat_ren", scope: !651, file: !6, line: 176, baseType: !549, size: 512, offset: 7040)
!783 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !651, file: !6, line: 178, baseType: !7, size: 32, offset: 7552)
!784 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !651, file: !6, line: 180, baseType: !415, size: 16, offset: 7584)
!785 = !DIDerivedType(tag: DW_TAG_member, name: "colbits", scope: !651, file: !6, line: 181, baseType: !415, size: 16, offset: 7600)
!786 = !DIDerivedType(tag: DW_TAG_member, name: "transflag", scope: !651, file: !6, line: 183, baseType: !415, size: 16, offset: 7616)
!787 = !DIDerivedType(tag: DW_TAG_member, name: "protectflag", scope: !651, file: !6, line: 183, baseType: !415, size: 16, offset: 7632)
!788 = !DIDerivedType(tag: DW_TAG_member, name: "trackflag", scope: !651, file: !6, line: 184, baseType: !415, size: 16, offset: 7648)
!789 = !DIDerivedType(tag: DW_TAG_member, name: "upflag", scope: !651, file: !6, line: 184, baseType: !415, size: 16, offset: 7664)
!790 = !DIDerivedType(tag: DW_TAG_member, name: "nlaflag", scope: !651, file: !6, line: 185, baseType: !415, size: 16, offset: 7680)
!791 = !DIDerivedType(tag: DW_TAG_member, name: "ipoflag", scope: !651, file: !6, line: 186, baseType: !415, size: 16, offset: 7696)
!792 = !DIDerivedType(tag: DW_TAG_member, name: "scaflag", scope: !651, file: !6, line: 187, baseType: !415, size: 16, offset: 7712)
!793 = !DIDerivedType(tag: DW_TAG_member, name: "scavisflag", scope: !651, file: !6, line: 188, baseType: !402, size: 8, offset: 7728)
!794 = !DIDerivedType(tag: DW_TAG_member, name: "depsflag", scope: !651, file: !6, line: 189, baseType: !402, size: 8, offset: 7736)
!795 = !DIDerivedType(tag: DW_TAG_member, name: "dupon", scope: !651, file: !6, line: 192, baseType: !417, size: 32, offset: 7744)
!796 = !DIDerivedType(tag: DW_TAG_member, name: "dupoff", scope: !651, file: !6, line: 192, baseType: !417, size: 32, offset: 7776)
!797 = !DIDerivedType(tag: DW_TAG_member, name: "dupsta", scope: !651, file: !6, line: 192, baseType: !417, size: 32, offset: 7808)
!798 = !DIDerivedType(tag: DW_TAG_member, name: "dupend", scope: !651, file: !6, line: 192, baseType: !417, size: 32, offset: 7840)
!799 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !651, file: !6, line: 194, baseType: !417, size: 32, offset: 7872)
!800 = !DIDerivedType(tag: DW_TAG_member, name: "mass", scope: !651, file: !6, line: 202, baseType: !375, size: 32, offset: 7904)
!801 = !DIDerivedType(tag: DW_TAG_member, name: "damping", scope: !651, file: !6, line: 202, baseType: !375, size: 32, offset: 7936)
!802 = !DIDerivedType(tag: DW_TAG_member, name: "inertia", scope: !651, file: !6, line: 202, baseType: !375, size: 32, offset: 7968)
!803 = !DIDerivedType(tag: DW_TAG_member, name: "formfactor", scope: !651, file: !6, line: 211, baseType: !375, size: 32, offset: 8000)
!804 = !DIDerivedType(tag: DW_TAG_member, name: "rdamping", scope: !651, file: !6, line: 212, baseType: !375, size: 32, offset: 8032)
!805 = !DIDerivedType(tag: DW_TAG_member, name: "margin", scope: !651, file: !6, line: 213, baseType: !375, size: 32, offset: 8064)
!806 = !DIDerivedType(tag: DW_TAG_member, name: "max_vel", scope: !651, file: !6, line: 214, baseType: !375, size: 32, offset: 8096)
!807 = !DIDerivedType(tag: DW_TAG_member, name: "min_vel", scope: !651, file: !6, line: 215, baseType: !375, size: 32, offset: 8128)
!808 = !DIDerivedType(tag: DW_TAG_member, name: "obstacleRad", scope: !651, file: !6, line: 216, baseType: !375, size: 32, offset: 8160)
!809 = !DIDerivedType(tag: DW_TAG_member, name: "step_height", scope: !651, file: !6, line: 219, baseType: !375, size: 32, offset: 8192)
!810 = !DIDerivedType(tag: DW_TAG_member, name: "jump_speed", scope: !651, file: !6, line: 220, baseType: !375, size: 32, offset: 8224)
!811 = !DIDerivedType(tag: DW_TAG_member, name: "fall_speed", scope: !651, file: !6, line: 221, baseType: !375, size: 32, offset: 8256)
!812 = !DIDerivedType(tag: DW_TAG_member, name: "col_group", scope: !651, file: !6, line: 224, baseType: !813, size: 16, offset: 8288)
!813 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!814 = !DIDerivedType(tag: DW_TAG_member, name: "col_mask", scope: !651, file: !6, line: 224, baseType: !813, size: 16, offset: 8304)
!815 = !DIDerivedType(tag: DW_TAG_member, name: "rotmode", scope: !651, file: !6, line: 226, baseType: !415, size: 16, offset: 8320)
!816 = !DIDerivedType(tag: DW_TAG_member, name: "boundtype", scope: !651, file: !6, line: 228, baseType: !402, size: 8, offset: 8336)
!817 = !DIDerivedType(tag: DW_TAG_member, name: "collision_boundtype", scope: !651, file: !6, line: 229, baseType: !402, size: 8, offset: 8344)
!818 = !DIDerivedType(tag: DW_TAG_member, name: "dtx", scope: !651, file: !6, line: 231, baseType: !415, size: 16, offset: 8352)
!819 = !DIDerivedType(tag: DW_TAG_member, name: "dt", scope: !651, file: !6, line: 232, baseType: !402, size: 8, offset: 8368)
!820 = !DIDerivedType(tag: DW_TAG_member, name: "empty_drawtype", scope: !651, file: !6, line: 233, baseType: !402, size: 8, offset: 8376)
!821 = !DIDerivedType(tag: DW_TAG_member, name: "empty_drawsize", scope: !651, file: !6, line: 234, baseType: !375, size: 32, offset: 8384)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "dupfacesca", scope: !651, file: !6, line: 235, baseType: !375, size: 32, offset: 8416)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "prop", scope: !651, file: !6, line: 237, baseType: !442, size: 128, offset: 8448)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "sensors", scope: !651, file: !6, line: 238, baseType: !442, size: 128, offset: 8576)
!825 = !DIDerivedType(tag: DW_TAG_member, name: "controllers", scope: !651, file: !6, line: 239, baseType: !442, size: 128, offset: 8704)
!826 = !DIDerivedType(tag: DW_TAG_member, name: "actuators", scope: !651, file: !6, line: 240, baseType: !442, size: 128, offset: 8832)
!827 = !DIDerivedType(tag: DW_TAG_member, name: "sf", scope: !651, file: !6, line: 242, baseType: !375, size: 32, offset: 8960)
!828 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !651, file: !6, line: 244, baseType: !415, size: 16, offset: 8992)
!829 = !DIDerivedType(tag: DW_TAG_member, name: "actdef", scope: !651, file: !6, line: 245, baseType: !813, size: 16, offset: 9008)
!830 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !651, file: !6, line: 246, baseType: !772, size: 128, offset: 9024)
!831 = !DIDerivedType(tag: DW_TAG_member, name: "gameflag", scope: !651, file: !6, line: 248, baseType: !417, size: 32, offset: 9152)
!832 = !DIDerivedType(tag: DW_TAG_member, name: "gameflag2", scope: !651, file: !6, line: 249, baseType: !417, size: 32, offset: 9184)
!833 = !DIDerivedType(tag: DW_TAG_member, name: "bsoft", scope: !651, file: !6, line: 251, baseType: !834, size: 64, offset: 9216)
!834 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !835, size: 64)
!835 = !DICompositeType(tag: DW_TAG_structure_type, name: "BulletSoftBody", file: !6, line: 251, flags: DIFlagFwdDecl)
!836 = !DIDerivedType(tag: DW_TAG_member, name: "restrictflag", scope: !651, file: !6, line: 253, baseType: !402, size: 8, offset: 9280)
!837 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !651, file: !6, line: 254, baseType: !402, size: 8, offset: 9288)
!838 = !DIDerivedType(tag: DW_TAG_member, name: "softflag", scope: !651, file: !6, line: 255, baseType: !415, size: 16, offset: 9296)
!839 = !DIDerivedType(tag: DW_TAG_member, name: "anisotropicFriction", scope: !651, file: !6, line: 256, baseType: !538, size: 96, offset: 9312)
!840 = !DIDerivedType(tag: DW_TAG_member, name: "constraints", scope: !651, file: !6, line: 258, baseType: !442, size: 128, offset: 9408)
!841 = !DIDerivedType(tag: DW_TAG_member, name: "nlastrips", scope: !651, file: !6, line: 259, baseType: !442, size: 128, offset: 9536)
!842 = !DIDerivedType(tag: DW_TAG_member, name: "hooks", scope: !651, file: !6, line: 260, baseType: !442, size: 128, offset: 9664)
!843 = !DIDerivedType(tag: DW_TAG_member, name: "particlesystem", scope: !651, file: !6, line: 261, baseType: !442, size: 128, offset: 9792)
!844 = !DIDerivedType(tag: DW_TAG_member, name: "pd", scope: !651, file: !6, line: 263, baseType: !845, size: 64, offset: 9920)
!845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !846, size: 64)
!846 = !DICompositeType(tag: DW_TAG_structure_type, name: "PartDeflect", file: !6, line: 52, flags: DIFlagFwdDecl)
!847 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !651, file: !6, line: 264, baseType: !848, size: 64, offset: 9984)
!848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !849, size: 64)
!849 = !DICompositeType(tag: DW_TAG_structure_type, name: "SoftBody", file: !6, line: 53, flags: DIFlagFwdDecl)
!850 = !DIDerivedType(tag: DW_TAG_member, name: "dup_group", scope: !651, file: !6, line: 265, baseType: !851, size: 64, offset: 10048)
!851 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !852, size: 64)
!852 = !DICompositeType(tag: DW_TAG_structure_type, name: "Group", file: !322, line: 46, flags: DIFlagFwdDecl)
!853 = !DIDerivedType(tag: DW_TAG_member, name: "body_type", scope: !651, file: !6, line: 267, baseType: !402, size: 8, offset: 10112)
!854 = !DIDerivedType(tag: DW_TAG_member, name: "shapeflag", scope: !651, file: !6, line: 268, baseType: !402, size: 8, offset: 10120)
!855 = !DIDerivedType(tag: DW_TAG_member, name: "shapenr", scope: !651, file: !6, line: 269, baseType: !415, size: 16, offset: 10128)
!856 = !DIDerivedType(tag: DW_TAG_member, name: "smoothresh", scope: !651, file: !6, line: 270, baseType: !375, size: 32, offset: 10144)
!857 = !DIDerivedType(tag: DW_TAG_member, name: "fluidsimSettings", scope: !651, file: !6, line: 272, baseType: !858, size: 64, offset: 10176)
!858 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !859, size: 64)
!859 = !DICompositeType(tag: DW_TAG_structure_type, name: "FluidsimSettings", file: !6, line: 54, flags: DIFlagFwdDecl)
!860 = !DIDerivedType(tag: DW_TAG_member, name: "curve_cache", scope: !651, file: !6, line: 275, baseType: !861, size: 64, offset: 10240)
!861 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !862, size: 64)
!862 = !DICompositeType(tag: DW_TAG_structure_type, name: "CurveCache", file: !6, line: 275, flags: DIFlagFwdDecl)
!863 = !DIDerivedType(tag: DW_TAG_member, name: "derivedDeform", scope: !651, file: !6, line: 277, baseType: !864, size: 64, offset: 10304)
!864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !865, size: 64)
!865 = !DICompositeType(tag: DW_TAG_structure_type, name: "DerivedMesh", file: !6, line: 56, flags: DIFlagFwdDecl)
!866 = !DIDerivedType(tag: DW_TAG_member, name: "derivedFinal", scope: !651, file: !6, line: 277, baseType: !864, size: 64, offset: 10368)
!867 = !DIDerivedType(tag: DW_TAG_member, name: "lastDataMask", scope: !651, file: !6, line: 278, baseType: !868, size: 64, offset: 10432)
!868 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !869, line: 27, baseType: !870)
!869 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdint-uintn.h", directory: "")
!870 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint64_t", file: !871, line: 45, baseType: !872)
!871 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!872 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!873 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask", scope: !651, file: !6, line: 279, baseType: !868, size: 64, offset: 10496)
!874 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !651, file: !6, line: 280, baseType: !7, size: 32, offset: 10560)
!875 = !DIDerivedType(tag: DW_TAG_member, name: "init_state", scope: !651, file: !6, line: 281, baseType: !7, size: 32, offset: 10592)
!876 = !DIDerivedType(tag: DW_TAG_member, name: "gpulamp", scope: !651, file: !6, line: 283, baseType: !442, size: 128, offset: 10624)
!877 = !DIDerivedType(tag: DW_TAG_member, name: "pc_ids", scope: !651, file: !6, line: 284, baseType: !442, size: 128, offset: 10752)
!878 = !DIDerivedType(tag: DW_TAG_member, name: "duplilist", scope: !651, file: !6, line: 285, baseType: !523, size: 64, offset: 10880)
!879 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_object", scope: !651, file: !6, line: 287, baseType: !880, size: 64, offset: 10944)
!880 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !881, size: 64)
!881 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyOb", file: !6, line: 59, flags: DIFlagFwdDecl)
!882 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_constraint", scope: !651, file: !6, line: 288, baseType: !883, size: 64, offset: 11008)
!883 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !884, size: 64)
!884 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyCon", file: !6, line: 288, flags: DIFlagFwdDecl)
!885 = !DIDerivedType(tag: DW_TAG_member, name: "ima_ofs", scope: !651, file: !6, line: 290, baseType: !886, size: 64, offset: 11072)
!886 = !DICompositeType(tag: DW_TAG_array_type, baseType: !375, size: 64, elements: !887)
!887 = !{!888}
!888 = !DISubrange(count: 2)
!889 = !DIDerivedType(tag: DW_TAG_member, name: "iuser", scope: !651, file: !6, line: 291, baseType: !890, size: 64, offset: 11136)
!890 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !891, size: 64)
!891 = !DIDerivedType(tag: DW_TAG_typedef, name: "ImageUser", file: !892, line: 65, baseType: !893)
!892 = !DIFile(filename: "blender/source/blender/makesdna/DNA_image_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!893 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImageUser", file: !892, line: 50, size: 320, elements: !894)
!894 = !{!895, !1866, !1867, !1868, !1869, !1870, !1871, !1872, !1873, !1874, !1875, !1876, !1877, !1878}
!895 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !893, file: !892, line: 51, baseType: !896, size: 64)
!896 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !897, size: 64)
!897 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Scene", file: !731, line: 1216, size: 39680, elements: !898)
!898 = !{!899, !900, !901, !902, !905, !906, !907, !919, !920, !921, !922, !923, !924, !925, !926, !927, !928, !929, !931, !934, !937, !1232, !1235, !1534, !1546, !1547, !1548, !1549, !1550, !1551, !1552, !1553, !1556, !1557, !1558, !1559, !1560, !1568, !1635, !1642, !1643, !1650, !1858, !1859, !1860, !1861, !1862, !1863}
!899 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !897, file: !731, line: 1217, baseType: !381, size: 960)
!900 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !897, file: !731, line: 1218, baseType: !453, size: 64, offset: 960)
!901 = !DIDerivedType(tag: DW_TAG_member, name: "camera", scope: !897, file: !731, line: 1220, baseType: !650, size: 64, offset: 1024)
!902 = !DIDerivedType(tag: DW_TAG_member, name: "world", scope: !897, file: !731, line: 1221, baseType: !903, size: 64, offset: 1088)
!903 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !904, size: 64)
!904 = !DICompositeType(tag: DW_TAG_structure_type, name: "World", file: !731, line: 52, flags: DIFlagFwdDecl)
!905 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !897, file: !731, line: 1223, baseType: !896, size: 64, offset: 1152)
!906 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !897, file: !731, line: 1225, baseType: !442, size: 128, offset: 1216)
!907 = !DIDerivedType(tag: DW_TAG_member, name: "basact", scope: !897, file: !731, line: 1226, baseType: !908, size: 64, offset: 1344)
!908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !909, size: 64)
!909 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Base", file: !731, line: 69, size: 320, elements: !910)
!910 = !{!911, !912, !913, !914, !915, !916, !917, !918}
!911 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !909, file: !731, line: 70, baseType: !908, size: 64)
!912 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !909, file: !731, line: 70, baseType: !908, size: 64, offset: 64)
!913 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !909, file: !731, line: 71, baseType: !7, size: 32, offset: 128)
!914 = !DIDerivedType(tag: DW_TAG_member, name: "selcol", scope: !909, file: !731, line: 71, baseType: !7, size: 32, offset: 160)
!915 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !909, file: !731, line: 72, baseType: !417, size: 32, offset: 192)
!916 = !DIDerivedType(tag: DW_TAG_member, name: "sx", scope: !909, file: !731, line: 73, baseType: !415, size: 16, offset: 224)
!917 = !DIDerivedType(tag: DW_TAG_member, name: "sy", scope: !909, file: !731, line: 73, baseType: !415, size: 16, offset: 240)
!918 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !909, file: !731, line: 74, baseType: !650, size: 64, offset: 256)
!919 = !DIDerivedType(tag: DW_TAG_member, name: "obedit", scope: !897, file: !731, line: 1227, baseType: !650, size: 64, offset: 1408)
!920 = !DIDerivedType(tag: DW_TAG_member, name: "cursor", scope: !897, file: !731, line: 1229, baseType: !538, size: 96, offset: 1472)
!921 = !DIDerivedType(tag: DW_TAG_member, name: "twcent", scope: !897, file: !731, line: 1230, baseType: !538, size: 96, offset: 1568)
!922 = !DIDerivedType(tag: DW_TAG_member, name: "twmin", scope: !897, file: !731, line: 1231, baseType: !538, size: 96, offset: 1664)
!923 = !DIDerivedType(tag: DW_TAG_member, name: "twmax", scope: !897, file: !731, line: 1231, baseType: !538, size: 96, offset: 1760)
!924 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !897, file: !731, line: 1233, baseType: !7, size: 32, offset: 1856)
!925 = !DIDerivedType(tag: DW_TAG_member, name: "layact", scope: !897, file: !731, line: 1234, baseType: !417, size: 32, offset: 1888)
!926 = !DIDerivedType(tag: DW_TAG_member, name: "lay_updated", scope: !897, file: !731, line: 1235, baseType: !7, size: 32, offset: 1920)
!927 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !897, file: !731, line: 1237, baseType: !415, size: 16, offset: 1952)
!928 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !897, file: !731, line: 1239, baseType: !402, size: 8, offset: 1968)
!929 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !897, file: !731, line: 1240, baseType: !930, size: 8, offset: 1976)
!930 = !DICompositeType(tag: DW_TAG_array_type, baseType: !402, size: 8, elements: !567)
!931 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !897, file: !731, line: 1242, baseType: !932, size: 64, offset: 1984)
!932 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !933, size: 64)
!933 = !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeTree", file: !672, line: 248, flags: DIFlagFwdDecl)
!934 = !DIDerivedType(tag: DW_TAG_member, name: "ed", scope: !897, file: !731, line: 1244, baseType: !935, size: 64, offset: 2048)
!935 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !936, size: 64)
!936 = !DICompositeType(tag: DW_TAG_structure_type, name: "Editing", file: !731, line: 59, flags: DIFlagFwdDecl)
!937 = !DIDerivedType(tag: DW_TAG_member, name: "toolsettings", scope: !897, file: !731, line: 1246, baseType: !938, size: 64, offset: 2112)
!938 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !939, size: 64)
!939 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ToolSettings", file: !731, line: 1067, size: 5184, elements: !940)
!940 = !{!941, !971, !972, !987, !993, !994, !995, !996, !997, !998, !999, !1000, !1001, !1002, !1003, !1004, !1005, !1009, !1104, !1131, !1132, !1133, !1134, !1135, !1136, !1137, !1138, !1139, !1140, !1141, !1142, !1143, !1144, !1145, !1146, !1147, !1148, !1149, !1150, !1151, !1153, !1154, !1155, !1156, !1157, !1158, !1159, !1160, !1162, !1163, !1164, !1165, !1166, !1167, !1168, !1169, !1170, !1171, !1172, !1173, !1174, !1175, !1176, !1177, !1178, !1179, !1180, !1181, !1182, !1183, !1184, !1185, !1186, !1187, !1215}
!941 = !DIDerivedType(tag: DW_TAG_member, name: "vpaint", scope: !939, file: !731, line: 1068, baseType: !942, size: 64)
!942 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !943, size: 64)
!943 = !DIDerivedType(tag: DW_TAG_typedef, name: "VPaint", file: !731, line: 934, baseType: !944)
!944 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VPaint", file: !731, line: 925, size: 576, elements: !945)
!945 = !{!946, !962, !963, !964, !965, !967, !970}
!946 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !944, file: !731, line: 926, baseType: !947, size: 320)
!947 = !DIDerivedType(tag: DW_TAG_typedef, name: "Paint", file: !731, line: 830, baseType: !948)
!948 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Paint", file: !731, line: 813, size: 320, elements: !949)
!949 = !{!950, !953, !956, !957, !959, !960, !961}
!950 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !948, file: !731, line: 814, baseType: !951, size: 64)
!951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !952, size: 64)
!952 = !DICompositeType(tag: DW_TAG_structure_type, name: "Brush", file: !731, line: 51, flags: DIFlagFwdDecl)
!953 = !DIDerivedType(tag: DW_TAG_member, name: "palette", scope: !948, file: !731, line: 815, baseType: !954, size: 64, offset: 64)
!954 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !955, size: 64)
!955 = !DICompositeType(tag: DW_TAG_structure_type, name: "Palette", file: !731, line: 815, flags: DIFlagFwdDecl)
!956 = !DIDerivedType(tag: DW_TAG_member, name: "paint_cursor", scope: !948, file: !731, line: 818, baseType: !386, size: 64, offset: 128)
!957 = !DIDerivedType(tag: DW_TAG_member, name: "paint_cursor_col", scope: !948, file: !731, line: 819, baseType: !958, size: 32, offset: 192)
!958 = !DICompositeType(tag: DW_TAG_array_type, baseType: !620, size: 32, elements: !640)
!959 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !948, file: !731, line: 822, baseType: !417, size: 32, offset: 224)
!960 = !DIDerivedType(tag: DW_TAG_member, name: "num_input_samples", scope: !948, file: !731, line: 826, baseType: !417, size: 32, offset: 256)
!961 = !DIDerivedType(tag: DW_TAG_member, name: "symmetry_flags", scope: !948, file: !731, line: 829, baseType: !417, size: 32, offset: 288)
!962 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !944, file: !731, line: 928, baseType: !415, size: 16, offset: 320)
!963 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !944, file: !731, line: 928, baseType: !415, size: 16, offset: 336)
!964 = !DIDerivedType(tag: DW_TAG_member, name: "tot", scope: !944, file: !731, line: 929, baseType: !417, size: 32, offset: 352)
!965 = !DIDerivedType(tag: DW_TAG_member, name: "vpaint_prev", scope: !944, file: !731, line: 930, baseType: !966, size: 64, offset: 384)
!966 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!967 = !DIDerivedType(tag: DW_TAG_member, name: "wpaint_prev", scope: !944, file: !731, line: 931, baseType: !968, size: 64, offset: 448)
!968 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !969, size: 64)
!969 = !DICompositeType(tag: DW_TAG_structure_type, name: "MDeformVert", file: !731, line: 931, flags: DIFlagFwdDecl)
!970 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !944, file: !731, line: 933, baseType: !386, size: 64, offset: 512)
!971 = !DIDerivedType(tag: DW_TAG_member, name: "wpaint", scope: !939, file: !731, line: 1069, baseType: !942, size: 64, offset: 64)
!972 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt", scope: !939, file: !731, line: 1070, baseType: !973, size: 64, offset: 128)
!973 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !974, size: 64)
!974 = !DIDerivedType(tag: DW_TAG_typedef, name: "Sculpt", file: !731, line: 916, baseType: !975)
!975 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Sculpt", file: !731, line: 891, size: 704, elements: !976)
!976 = !{!977, !978, !979, !981, !982, !983, !984, !985, !986}
!977 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !975, file: !731, line: 892, baseType: !947, size: 320)
!978 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !975, file: !731, line: 896, baseType: !417, size: 32, offset: 320)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "radial_symm", scope: !975, file: !731, line: 900, baseType: !980, size: 96, offset: 352)
!980 = !DICompositeType(tag: DW_TAG_array_type, baseType: !417, size: 96, elements: !539)
!981 = !DIDerivedType(tag: DW_TAG_member, name: "detail_size", scope: !975, file: !731, line: 903, baseType: !375, size: 32, offset: 448)
!982 = !DIDerivedType(tag: DW_TAG_member, name: "symmetrize_direction", scope: !975, file: !731, line: 906, baseType: !417, size: 32, offset: 480)
!983 = !DIDerivedType(tag: DW_TAG_member, name: "gravity_factor", scope: !975, file: !731, line: 909, baseType: !375, size: 32, offset: 512)
!984 = !DIDerivedType(tag: DW_TAG_member, name: "constant_detail", scope: !975, file: !731, line: 912, baseType: !375, size: 32, offset: 544)
!985 = !DIDerivedType(tag: DW_TAG_member, name: "gravity_object", scope: !975, file: !731, line: 914, baseType: !650, size: 64, offset: 576)
!986 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !975, file: !731, line: 915, baseType: !386, size: 64, offset: 640)
!987 = !DIDerivedType(tag: DW_TAG_member, name: "uvsculpt", scope: !939, file: !731, line: 1071, baseType: !988, size: 64, offset: 192)
!988 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !989, size: 64)
!989 = !DIDerivedType(tag: DW_TAG_typedef, name: "UvSculpt", file: !731, line: 920, baseType: !990)
!990 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UvSculpt", file: !731, line: 918, size: 320, elements: !991)
!991 = !{!992}
!992 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !990, file: !731, line: 919, baseType: !947, size: 320)
!993 = !DIDerivedType(tag: DW_TAG_member, name: "vgroup_weight", scope: !939, file: !731, line: 1075, baseType: !375, size: 32, offset: 256)
!994 = !DIDerivedType(tag: DW_TAG_member, name: "doublimit", scope: !939, file: !731, line: 1077, baseType: !375, size: 32, offset: 288)
!995 = !DIDerivedType(tag: DW_TAG_member, name: "normalsize", scope: !939, file: !731, line: 1078, baseType: !375, size: 32, offset: 320)
!996 = !DIDerivedType(tag: DW_TAG_member, name: "automerge", scope: !939, file: !731, line: 1079, baseType: !415, size: 16, offset: 352)
!997 = !DIDerivedType(tag: DW_TAG_member, name: "selectmode", scope: !939, file: !731, line: 1082, baseType: !415, size: 16, offset: 368)
!998 = !DIDerivedType(tag: DW_TAG_member, name: "unwrapper", scope: !939, file: !731, line: 1085, baseType: !402, size: 8, offset: 384)
!999 = !DIDerivedType(tag: DW_TAG_member, name: "uvcalc_flag", scope: !939, file: !731, line: 1086, baseType: !402, size: 8, offset: 392)
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "uv_flag", scope: !939, file: !731, line: 1087, baseType: !402, size: 8, offset: 400)
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "uv_selectmode", scope: !939, file: !731, line: 1088, baseType: !402, size: 8, offset: 408)
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "uvcalc_margin", scope: !939, file: !731, line: 1090, baseType: !375, size: 32, offset: 416)
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "autoik_chainlen", scope: !939, file: !731, line: 1093, baseType: !415, size: 16, offset: 448)
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "gpencil_flags", scope: !939, file: !731, line: 1096, baseType: !402, size: 8, offset: 464)
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !939, file: !731, line: 1098, baseType: !1006, size: 40, offset: 472)
!1006 = !DICompositeType(tag: DW_TAG_array_type, baseType: !402, size: 40, elements: !1007)
!1007 = !{!1008}
!1008 = !DISubrange(count: 5)
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "imapaint", scope: !939, file: !731, line: 1101, baseType: !1010, size: 832, offset: 512)
!1010 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImagePaintSettings", file: !731, line: 836, size: 832, elements: !1011)
!1011 = !{!1012, !1013, !1014, !1015, !1016, !1017, !1019, !1020, !1021, !1100, !1101, !1102, !1103}
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !1010, file: !731, line: 837, baseType: !947, size: 320)
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1010, file: !731, line: 839, baseType: !415, size: 16, offset: 320)
!1014 = !DIDerivedType(tag: DW_TAG_member, name: "missing_data", scope: !1010, file: !731, line: 839, baseType: !415, size: 16, offset: 336)
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "seam_bleed", scope: !1010, file: !731, line: 842, baseType: !415, size: 16, offset: 352)
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "normal_angle", scope: !1010, file: !731, line: 842, baseType: !415, size: 16, offset: 368)
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "screen_grab_size", scope: !1010, file: !731, line: 843, baseType: !1018, size: 32, offset: 384)
!1018 = !DICompositeType(tag: DW_TAG_array_type, baseType: !415, size: 32, elements: !887)
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1010, file: !731, line: 845, baseType: !417, size: 32, offset: 416)
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !1010, file: !731, line: 847, baseType: !386, size: 64, offset: 448)
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "stencil", scope: !1010, file: !731, line: 848, baseType: !1022, size: 64, offset: 512)
!1022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1023, size: 64)
!1023 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Image", file: !892, line: 77, size: 15424, elements: !1024)
!1024 = !{!1025, !1026, !1027, !1030, !1033, !1036, !1039, !1042, !1043, !1044, !1045, !1046, !1047, !1048, !1049, !1050, !1051, !1052, !1053, !1054, !1055, !1056, !1057, !1058, !1071, !1072, !1073, !1074, !1075, !1076, !1077, !1078, !1079, !1080, !1081, !1082, !1083, !1089, !1090, !1094}
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1023, file: !892, line: 78, baseType: !381, size: 960)
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1023, file: !892, line: 80, baseType: !401, size: 8192, offset: 960)
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !1023, file: !892, line: 82, baseType: !1028, size: 64, offset: 9152)
!1028 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1029, size: 64)
!1029 = !DICompositeType(tag: DW_TAG_structure_type, name: "MovieCache", file: !892, line: 43, flags: DIFlagFwdDecl)
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "gputexture", scope: !1023, file: !892, line: 83, baseType: !1031, size: 64, offset: 9216)
!1031 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1032, size: 64)
!1032 = !DICompositeType(tag: DW_TAG_structure_type, name: "GPUTexture", file: !382, line: 46, flags: DIFlagFwdDecl)
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "anim", scope: !1023, file: !892, line: 86, baseType: !1034, size: 64, offset: 9280)
!1034 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1035, size: 64)
!1035 = !DICompositeType(tag: DW_TAG_structure_type, name: "anim", file: !892, line: 41, flags: DIFlagFwdDecl)
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "rr", scope: !1023, file: !892, line: 87, baseType: !1037, size: 64, offset: 9344)
!1037 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1038, size: 64)
!1038 = !DICompositeType(tag: DW_TAG_structure_type, name: "RenderResult", file: !892, line: 44, flags: DIFlagFwdDecl)
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "renders", scope: !1023, file: !892, line: 89, baseType: !1040, size: 512, offset: 9408)
!1040 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1037, size: 512, elements: !1041)
!1041 = !{!680}
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "render_slot", scope: !1023, file: !892, line: 90, baseType: !415, size: 16, offset: 9920)
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "last_render_slot", scope: !1023, file: !892, line: 90, baseType: !415, size: 16, offset: 9936)
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !1023, file: !892, line: 92, baseType: !415, size: 16, offset: 9952)
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1023, file: !892, line: 92, baseType: !415, size: 16, offset: 9968)
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !1023, file: !892, line: 93, baseType: !415, size: 16, offset: 9984)
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1023, file: !892, line: 93, baseType: !415, size: 16, offset: 10000)
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "lastframe", scope: !1023, file: !892, line: 94, baseType: !417, size: 32, offset: 10016)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "tpageflag", scope: !1023, file: !892, line: 97, baseType: !415, size: 16, offset: 10048)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "totbind", scope: !1023, file: !892, line: 97, baseType: !415, size: 16, offset: 10064)
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "xrep", scope: !1023, file: !892, line: 98, baseType: !415, size: 16, offset: 10080)
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "yrep", scope: !1023, file: !892, line: 98, baseType: !415, size: 16, offset: 10096)
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "twsta", scope: !1023, file: !892, line: 99, baseType: !415, size: 16, offset: 10112)
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "twend", scope: !1023, file: !892, line: 99, baseType: !415, size: 16, offset: 10128)
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "bindcode", scope: !1023, file: !892, line: 100, baseType: !7, size: 32, offset: 10144)
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "repbind", scope: !1023, file: !892, line: 101, baseType: !966, size: 64, offset: 10176)
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "packedfile", scope: !1023, file: !892, line: 103, baseType: !408, size: 64, offset: 10240)
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !1023, file: !892, line: 104, baseType: !1059, size: 64, offset: 10304)
!1059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1060, size: 64)
!1060 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PreviewImage", file: !382, line: 159, size: 448, elements: !1061)
!1061 = !{!1062, !1064, !1065, !1066, !1067, !1069}
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !1060, file: !382, line: 161, baseType: !1063, size: 64)
!1063 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 64, elements: !887)
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !1060, file: !382, line: 162, baseType: !1063, size: 64, offset: 64)
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !1060, file: !382, line: 163, baseType: !1018, size: 32, offset: 128)
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "changed_timestamp", scope: !1060, file: !382, line: 164, baseType: !1018, size: 32, offset: 160)
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "rect", scope: !1060, file: !382, line: 165, baseType: !1068, size: 128, offset: 192)
!1068 = !DICompositeType(tag: DW_TAG_array_type, baseType: !966, size: 128, elements: !887)
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "gputexture", scope: !1060, file: !382, line: 166, baseType: !1070, size: 128, offset: 320)
!1070 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1031, size: 128, elements: !887)
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "lastupdate", scope: !1023, file: !892, line: 107, baseType: !375, size: 32, offset: 10368)
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "lastused", scope: !1023, file: !892, line: 108, baseType: !417, size: 32, offset: 10400)
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "animspeed", scope: !1023, file: !892, line: 109, baseType: !415, size: 16, offset: 10432)
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1023, file: !892, line: 110, baseType: !415, size: 16, offset: 10448)
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "gen_x", scope: !1023, file: !892, line: 113, baseType: !417, size: 32, offset: 10464)
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "gen_y", scope: !1023, file: !892, line: 113, baseType: !417, size: 32, offset: 10496)
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "gen_type", scope: !1023, file: !892, line: 114, baseType: !402, size: 8, offset: 10528)
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "gen_flag", scope: !1023, file: !892, line: 114, baseType: !402, size: 8, offset: 10536)
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "gen_depth", scope: !1023, file: !892, line: 115, baseType: !415, size: 16, offset: 10544)
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "gen_color", scope: !1023, file: !892, line: 116, baseType: !772, size: 128, offset: 10560)
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "aspx", scope: !1023, file: !892, line: 119, baseType: !375, size: 32, offset: 10688)
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "aspy", scope: !1023, file: !892, line: 119, baseType: !375, size: 32, offset: 10720)
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace_settings", scope: !1023, file: !892, line: 122, baseType: !1084, size: 512, offset: 10752)
!1084 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedColorspaceSettings", file: !1085, line: 182, baseType: !1086)
!1085 = !DIFile(filename: "blender/source/blender/makesdna/DNA_color_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1086 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedColorspaceSettings", file: !1085, line: 180, size: 512, elements: !1087)
!1087 = !{!1088}
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1086, file: !1085, line: 181, baseType: !432, size: 512)
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "alpha_mode", scope: !1023, file: !892, line: 123, baseType: !402, size: 8, offset: 11264)
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1023, file: !892, line: 125, baseType: !1091, size: 56, offset: 11272)
!1091 = !DICompositeType(tag: DW_TAG_array_type, baseType: !402, size: 56, elements: !1092)
!1092 = !{!1093}
!1093 = !DISubrange(count: 7)
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "render_slots", scope: !1023, file: !892, line: 126, baseType: !1095, size: 4096, offset: 11328)
!1095 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1096, size: 4096, elements: !1041)
!1096 = !DIDerivedType(tag: DW_TAG_typedef, name: "RenderSlot", file: !892, line: 69, baseType: !1097)
!1097 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderSlot", file: !892, line: 67, size: 512, elements: !1098)
!1098 = !{!1099}
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1097, file: !892, line: 68, baseType: !432, size: 512)
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "clone", scope: !1010, file: !731, line: 849, baseType: !1022, size: 64, offset: 576)
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "canvas", scope: !1010, file: !731, line: 850, baseType: !1022, size: 64, offset: 640)
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "stencil_col", scope: !1010, file: !731, line: 851, baseType: !538, size: 96, offset: 704)
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1010, file: !731, line: 852, baseType: !375, size: 32, offset: 800)
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "particle", scope: !939, file: !731, line: 1104, baseType: !1105, size: 1344, offset: 1344)
!1105 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleEditSettings", file: !731, line: 867, size: 1344, elements: !1106)
!1106 = !{!1107, !1108, !1109, !1110, !1111, !1122, !1123, !1124, !1125, !1126, !1127, !1128, !1129, !1130}
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1105, file: !731, line: 868, baseType: !415, size: 16)
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "totrekey", scope: !1105, file: !731, line: 869, baseType: !415, size: 16, offset: 16)
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "totaddkey", scope: !1105, file: !731, line: 870, baseType: !415, size: 16, offset: 32)
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "brushtype", scope: !1105, file: !731, line: 871, baseType: !415, size: 16, offset: 48)
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !1105, file: !731, line: 873, baseType: !1112, size: 896, offset: 64)
!1112 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1113, size: 896, elements: !1092)
!1113 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParticleBrushData", file: !731, line: 864, baseType: !1114)
!1114 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleBrushData", file: !731, line: 859, size: 128, elements: !1115)
!1115 = !{!1116, !1117, !1118, !1119, !1120, !1121}
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1114, file: !731, line: 860, baseType: !415, size: 16)
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "step", scope: !1114, file: !731, line: 861, baseType: !415, size: 16, offset: 16)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1114, file: !731, line: 861, baseType: !415, size: 16, offset: 32)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1114, file: !731, line: 861, baseType: !415, size: 16, offset: 48)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1114, file: !731, line: 862, baseType: !417, size: 32, offset: 64)
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "strength", scope: !1114, file: !731, line: 863, baseType: !375, size: 32, offset: 96)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !1105, file: !731, line: 874, baseType: !386, size: 64, offset: 960)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "emitterdist", scope: !1105, file: !731, line: 876, baseType: !375, size: 32, offset: 1024)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !1105, file: !731, line: 876, baseType: !375, size: 32, offset: 1056)
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "selectmode", scope: !1105, file: !731, line: 878, baseType: !417, size: 32, offset: 1088)
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "edittype", scope: !1105, file: !731, line: 879, baseType: !417, size: 32, offset: 1120)
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "draw_step", scope: !1105, file: !731, line: 881, baseType: !417, size: 32, offset: 1152)
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "fade_frames", scope: !1105, file: !731, line: 881, baseType: !417, size: 32, offset: 1184)
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !1105, file: !731, line: 883, baseType: !896, size: 64, offset: 1216)
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1105, file: !731, line: 884, baseType: !650, size: 64, offset: 1280)
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_size", scope: !939, file: !731, line: 1107, baseType: !375, size: 32, offset: 2688)
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "select_thresh", scope: !939, file: !731, line: 1110, baseType: !375, size: 32, offset: 2720)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "autokey_mode", scope: !939, file: !731, line: 1113, baseType: !415, size: 16, offset: 2752)
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "autokey_flag", scope: !939, file: !731, line: 1113, baseType: !415, size: 16, offset: 2768)
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "multires_subdiv_type", scope: !939, file: !731, line: 1116, baseType: !402, size: 8, offset: 2784)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !939, file: !731, line: 1117, baseType: !930, size: 8, offset: 2792)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_resolution", scope: !939, file: !731, line: 1120, baseType: !415, size: 16, offset: 2800)
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_threshold_internal", scope: !939, file: !731, line: 1121, baseType: !375, size: 32, offset: 2816)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_threshold_external", scope: !939, file: !731, line: 1122, baseType: !375, size: 32, offset: 2848)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_length_ratio", scope: !939, file: !731, line: 1123, baseType: !375, size: 32, offset: 2880)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_length_limit", scope: !939, file: !731, line: 1124, baseType: !375, size: 32, offset: 2912)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_angle_limit", scope: !939, file: !731, line: 1125, baseType: !375, size: 32, offset: 2944)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_correlation_limit", scope: !939, file: !731, line: 1126, baseType: !375, size: 32, offset: 2976)
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_symmetry_limit", scope: !939, file: !731, line: 1127, baseType: !375, size: 32, offset: 3008)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_angle_weight", scope: !939, file: !731, line: 1128, baseType: !375, size: 32, offset: 3040)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_length_weight", scope: !939, file: !731, line: 1129, baseType: !375, size: 32, offset: 3072)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_distance_weight", scope: !939, file: !731, line: 1130, baseType: !375, size: 32, offset: 3104)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_options", scope: !939, file: !731, line: 1131, baseType: !415, size: 16, offset: 3136)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_postpro", scope: !939, file: !731, line: 1132, baseType: !402, size: 8, offset: 3152)
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_postpro_passes", scope: !939, file: !731, line: 1133, baseType: !402, size: 8, offset: 3160)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_subdivisions", scope: !939, file: !731, line: 1134, baseType: !1152, size: 24, offset: 3168)
!1152 = !DICompositeType(tag: DW_TAG_array_type, baseType: !402, size: 24, elements: !539)
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_multi_level", scope: !939, file: !731, line: 1135, baseType: !402, size: 8, offset: 3192)
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_template", scope: !939, file: !731, line: 1138, baseType: !650, size: 64, offset: 3200)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "bone_sketching", scope: !939, file: !731, line: 1139, baseType: !402, size: 8, offset: 3264)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "bone_sketching_convert", scope: !939, file: !731, line: 1140, baseType: !402, size: 8, offset: 3272)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_subdivision_number", scope: !939, file: !731, line: 1141, baseType: !402, size: 8, offset: 3280)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_options", scope: !939, file: !731, line: 1142, baseType: !402, size: 8, offset: 3288)
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_roll", scope: !939, file: !731, line: 1143, baseType: !402, size: 8, offset: 3296)
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_side_string", scope: !939, file: !731, line: 1144, baseType: !1161, size: 64, offset: 3304)
!1161 = !DICompositeType(tag: DW_TAG_array_type, baseType: !402, size: 64, elements: !1041)
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_num_string", scope: !939, file: !731, line: 1145, baseType: !1161, size: 64, offset: 3368)
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "edge_mode", scope: !939, file: !731, line: 1148, baseType: !402, size: 8, offset: 3432)
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "edge_mode_live_unwrap", scope: !939, file: !731, line: 1149, baseType: !402, size: 8, offset: 3440)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "snap_mode", scope: !939, file: !731, line: 1152, baseType: !402, size: 8, offset: 3448)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "snap_node_mode", scope: !939, file: !731, line: 1152, baseType: !402, size: 8, offset: 3456)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "snap_uv_mode", scope: !939, file: !731, line: 1153, baseType: !402, size: 8, offset: 3464)
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "snap_flag", scope: !939, file: !731, line: 1154, baseType: !415, size: 16, offset: 3472)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "snap_target", scope: !939, file: !731, line: 1154, baseType: !415, size: 16, offset: 3488)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "proportional", scope: !939, file: !731, line: 1155, baseType: !415, size: 16, offset: 3504)
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "prop_mode", scope: !939, file: !731, line: 1155, baseType: !415, size: 16, offset: 3520)
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_objects", scope: !939, file: !731, line: 1156, baseType: !402, size: 8, offset: 3536)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_mask", scope: !939, file: !731, line: 1157, baseType: !402, size: 8, offset: 3544)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "auto_normalize", scope: !939, file: !731, line: 1159, baseType: !402, size: 8, offset: 3552)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "multipaint", scope: !939, file: !731, line: 1160, baseType: !402, size: 8, offset: 3560)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "weightuser", scope: !939, file: !731, line: 1161, baseType: !402, size: 8, offset: 3568)
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "vgroupsubset", scope: !939, file: !731, line: 1162, baseType: !402, size: 8, offset: 3576)
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "use_uv_sculpt", scope: !939, file: !731, line: 1165, baseType: !417, size: 32, offset: 3584)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "uv_sculpt_settings", scope: !939, file: !731, line: 1166, baseType: !417, size: 32, offset: 3616)
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "uv_sculpt_tool", scope: !939, file: !731, line: 1167, baseType: !417, size: 32, offset: 3648)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "uv_relax_method", scope: !939, file: !731, line: 1168, baseType: !417, size: 32, offset: 3680)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_settings", scope: !939, file: !731, line: 1171, baseType: !415, size: 16, offset: 3712)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "pad5", scope: !939, file: !731, line: 1171, baseType: !415, size: 16, offset: 3728)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_size", scope: !939, file: !731, line: 1172, baseType: !417, size: 32, offset: 3744)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_unprojected_radius", scope: !939, file: !731, line: 1173, baseType: !375, size: 32, offset: 3776)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_alpha", scope: !939, file: !731, line: 1174, baseType: !375, size: 32, offset: 3808)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "unified_paint_settings", scope: !939, file: !731, line: 1177, baseType: !1188, size: 1024, offset: 3840)
!1188 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UnifiedPaintSettings", file: !731, line: 963, size: 1024, elements: !1189)
!1189 = !{!1190, !1191, !1192, !1193, !1194, !1195, !1196, !1197, !1198, !1199, !1200, !1201, !1202, !1203, !1204, !1205, !1206, !1207, !1208, !1209, !1210, !1213, !1214}
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1188, file: !731, line: 965, baseType: !417, size: 32)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "unprojected_radius", scope: !1188, file: !731, line: 968, baseType: !375, size: 32, offset: 32)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "alpha", scope: !1188, file: !731, line: 971, baseType: !375, size: 32, offset: 64)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1188, file: !731, line: 974, baseType: !375, size: 32, offset: 96)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "rgb", scope: !1188, file: !731, line: 977, baseType: !538, size: 96, offset: 128)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "secondary_rgb", scope: !1188, file: !731, line: 979, baseType: !538, size: 96, offset: 224)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1188, file: !731, line: 982, baseType: !417, size: 32, offset: 320)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "last_rake", scope: !1188, file: !731, line: 987, baseType: !886, size: 64, offset: 352)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "brush_rotation", scope: !1188, file: !731, line: 989, baseType: !375, size: 32, offset: 416)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "draw_anchored", scope: !1188, file: !731, line: 994, baseType: !417, size: 32, offset: 448)
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "anchored_size", scope: !1188, file: !731, line: 995, baseType: !417, size: 32, offset: 480)
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "draw_inverted", scope: !1188, file: !731, line: 997, baseType: !402, size: 8, offset: 512)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !1188, file: !731, line: 998, baseType: !1091, size: 56, offset: 520)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "overlap_factor", scope: !1188, file: !731, line: 1000, baseType: !375, size: 32, offset: 576)
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "anchored_initial_mouse", scope: !1188, file: !731, line: 1003, baseType: !886, size: 64, offset: 608)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "stroke_active", scope: !1188, file: !731, line: 1006, baseType: !417, size: 32, offset: 672)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "size_pressure_value", scope: !1188, file: !731, line: 1009, baseType: !375, size: 32, offset: 704)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "tex_mouse", scope: !1188, file: !731, line: 1012, baseType: !886, size: 64, offset: 736)
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "mask_tex_mouse", scope: !1188, file: !731, line: 1015, baseType: !886, size: 64, offset: 800)
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "do_linear_conversion", scope: !1188, file: !731, line: 1018, baseType: !417, size: 32, offset: 864)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !1188, file: !731, line: 1019, baseType: !1211, size: 64, offset: 896)
!1211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1212, size: 64)
!1212 = !DICompositeType(tag: DW_TAG_structure_type, name: "ColorSpace", file: !731, line: 63, flags: DIFlagFwdDecl)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "pixel_radius", scope: !1188, file: !731, line: 1023, baseType: !375, size: 32, offset: 960)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !1188, file: !731, line: 1024, baseType: !417, size: 32, offset: 992)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "statvis", scope: !939, file: !731, line: 1179, baseType: !1216, size: 320, offset: 4864)
!1216 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MeshStatVis", file: !731, line: 1043, size: 320, elements: !1217)
!1217 = !{!1218, !1219, !1221, !1222, !1223, !1224, !1225, !1226, !1227, !1228, !1229, !1230, !1231}
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1216, file: !731, line: 1044, baseType: !402, size: 8)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "_pad1", scope: !1216, file: !731, line: 1045, baseType: !1220, size: 16, offset: 8)
!1220 = !DICompositeType(tag: DW_TAG_array_type, baseType: !402, size: 16, elements: !887)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_axis", scope: !1216, file: !731, line: 1048, baseType: !402, size: 8, offset: 24)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_min", scope: !1216, file: !731, line: 1049, baseType: !375, size: 32, offset: 32)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_max", scope: !1216, file: !731, line: 1049, baseType: !375, size: 32, offset: 64)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_min", scope: !1216, file: !731, line: 1052, baseType: !375, size: 32, offset: 96)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_max", scope: !1216, file: !731, line: 1052, baseType: !375, size: 32, offset: 128)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_samples", scope: !1216, file: !731, line: 1053, baseType: !402, size: 8, offset: 160)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "_pad2", scope: !1216, file: !731, line: 1054, baseType: !1152, size: 24, offset: 168)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "distort_min", scope: !1216, file: !731, line: 1057, baseType: !375, size: 32, offset: 192)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "distort_max", scope: !1216, file: !731, line: 1057, baseType: !375, size: 32, offset: 224)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "sharp_min", scope: !1216, file: !731, line: 1060, baseType: !375, size: 32, offset: 256)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "sharp_max", scope: !1216, file: !731, line: 1060, baseType: !375, size: 32, offset: 288)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !897, file: !731, line: 1247, baseType: !1233, size: 64, offset: 2176)
!1233 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1234, size: 64)
!1234 = !DICompositeType(tag: DW_TAG_structure_type, name: "SceneStats", file: !731, line: 60, flags: DIFlagFwdDecl)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !897, file: !731, line: 1251, baseType: !1236, size: 31872, offset: 2240)
!1236 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderData", file: !731, line: 403, size: 31872, elements: !1237)
!1237 = !{!1238, !1321, !1341, !1350, !1370, !1390, !1391, !1392, !1393, !1394, !1395, !1396, !1397, !1398, !1399, !1400, !1401, !1402, !1403, !1404, !1405, !1406, !1407, !1408, !1409, !1410, !1411, !1412, !1413, !1414, !1415, !1416, !1417, !1418, !1419, !1420, !1421, !1422, !1423, !1424, !1425, !1426, !1427, !1428, !1429, !1430, !1431, !1432, !1433, !1434, !1435, !1436, !1437, !1438, !1439, !1440, !1441, !1442, !1443, !1444, !1452, !1453, !1454, !1455, !1456, !1457, !1458, !1459, !1460, !1461, !1462, !1463, !1464, !1465, !1466, !1467, !1468, !1469, !1470, !1471, !1472, !1473, !1474, !1475, !1476, !1477, !1478, !1479, !1480, !1484, !1485, !1486, !1487, !1488, !1489, !1490, !1491, !1492, !1493, !1494, !1495, !1496, !1497, !1498, !1499, !1500, !1501, !1502, !1503, !1504, !1505, !1506, !1507, !1510, !1511, !1512, !1516, !1532, !1533}
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "im_format", scope: !1236, file: !731, line: 404, baseType: !1239, size: 1984)
!1239 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImageFormatData", file: !731, line: 259, size: 1984, elements: !1240)
!1240 = !{!1241, !1242, !1243, !1244, !1245, !1246, !1247, !1248, !1249, !1250, !1251, !1252, !1253, !1254, !1258, !1316}
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "imtype", scope: !1239, file: !731, line: 260, baseType: !402, size: 8)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !1239, file: !731, line: 263, baseType: !402, size: 8, offset: 8)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !1239, file: !731, line: 266, baseType: !402, size: 8, offset: 16)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1239, file: !731, line: 267, baseType: !402, size: 8, offset: 24)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !1239, file: !731, line: 269, baseType: !402, size: 8, offset: 32)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "compress", scope: !1239, file: !731, line: 270, baseType: !402, size: 8, offset: 40)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "exr_codec", scope: !1239, file: !731, line: 276, baseType: !402, size: 8, offset: 48)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_flag", scope: !1239, file: !731, line: 279, baseType: !402, size: 8, offset: 56)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_white", scope: !1239, file: !731, line: 280, baseType: !415, size: 16, offset: 64)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_black", scope: !1239, file: !731, line: 280, baseType: !415, size: 16, offset: 80)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_gamma", scope: !1239, file: !731, line: 281, baseType: !375, size: 32, offset: 96)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_flag", scope: !1239, file: !731, line: 284, baseType: !402, size: 8, offset: 128)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_codec", scope: !1239, file: !731, line: 285, baseType: !402, size: 8, offset: 136)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1239, file: !731, line: 287, baseType: !1255, size: 48, offset: 144)
!1255 = !DICompositeType(tag: DW_TAG_array_type, baseType: !402, size: 48, elements: !1256)
!1256 = !{!1257}
!1257 = !DISubrange(count: 6)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "view_settings", scope: !1239, file: !731, line: 290, baseType: !1259, size: 1280, offset: 192)
!1259 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedViewSettings", file: !1085, line: 174, baseType: !1260)
!1260 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedViewSettings", file: !1085, line: 166, size: 1280, elements: !1261)
!1261 = !{!1262, !1263, !1264, !1265, !1266, !1267, !1268, !1315}
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1260, file: !1085, line: 167, baseType: !417, size: 32)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1260, file: !1085, line: 167, baseType: !417, size: 32, offset: 32)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "look", scope: !1260, file: !1085, line: 168, baseType: !432, size: 512, offset: 64)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "view_transform", scope: !1260, file: !1085, line: 169, baseType: !432, size: 512, offset: 576)
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "exposure", scope: !1260, file: !1085, line: 170, baseType: !375, size: 32, offset: 1088)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "gamma", scope: !1260, file: !1085, line: 171, baseType: !375, size: 32, offset: 1120)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "curve_mapping", scope: !1260, file: !1085, line: 172, baseType: !1269, size: 64, offset: 1152)
!1269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1270, size: 64)
!1270 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMapping", file: !1085, line: 72, size: 3072, elements: !1271)
!1271 = !{!1272, !1273, !1274, !1275, !1276, !1285, !1286, !1311, !1312, !1313, !1314}
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1270, file: !1085, line: 73, baseType: !417, size: 32)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !1270, file: !1085, line: 73, baseType: !417, size: 32, offset: 32)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "preset", scope: !1270, file: !1085, line: 74, baseType: !417, size: 32, offset: 64)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "changed_timestamp", scope: !1270, file: !1085, line: 75, baseType: !417, size: 32, offset: 96)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "curr", scope: !1270, file: !1085, line: 77, baseType: !1277, size: 128, offset: 128)
!1277 = !DIDerivedType(tag: DW_TAG_typedef, name: "rctf", file: !1278, line: 95, baseType: !1279)
!1278 = !DIFile(filename: "blender/source/blender/makesdna/DNA_vec_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1279 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rctf", file: !1278, line: 92, size: 128, elements: !1280)
!1280 = !{!1281, !1282, !1283, !1284}
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "xmin", scope: !1279, file: !1278, line: 93, baseType: !375, size: 32)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "xmax", scope: !1279, file: !1278, line: 93, baseType: !375, size: 32, offset: 32)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "ymin", scope: !1279, file: !1278, line: 94, baseType: !375, size: 32, offset: 64)
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "ymax", scope: !1279, file: !1278, line: 94, baseType: !375, size: 32, offset: 96)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "clipr", scope: !1270, file: !1085, line: 77, baseType: !1277, size: 128, offset: 256)
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "cm", scope: !1270, file: !1085, line: 79, baseType: !1287, size: 2304, offset: 384)
!1287 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1288, size: 2304, elements: !640)
!1288 = !DIDerivedType(tag: DW_TAG_typedef, name: "CurveMap", file: !1085, line: 67, baseType: !1289)
!1289 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMap", file: !1085, line: 55, size: 576, elements: !1290)
!1290 = !{!1291, !1292, !1293, !1294, !1295, !1296, !1297, !1298, !1307, !1308, !1309, !1310}
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "totpoint", scope: !1289, file: !1085, line: 56, baseType: !415, size: 16)
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1289, file: !1085, line: 56, baseType: !415, size: 16, offset: 16)
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !1289, file: !1085, line: 58, baseType: !375, size: 32, offset: 32)
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "mintable", scope: !1289, file: !1085, line: 59, baseType: !375, size: 32, offset: 64)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "maxtable", scope: !1289, file: !1085, line: 59, baseType: !375, size: 32, offset: 96)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "ext_in", scope: !1289, file: !1085, line: 60, baseType: !886, size: 64, offset: 128)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "ext_out", scope: !1289, file: !1085, line: 60, baseType: !886, size: 64, offset: 192)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "curve", scope: !1289, file: !1085, line: 61, baseType: !1299, size: 64, offset: 256)
!1299 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1300, size: 64)
!1300 = !DIDerivedType(tag: DW_TAG_typedef, name: "CurveMapPoint", file: !1085, line: 47, baseType: !1301)
!1301 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMapPoint", file: !1085, line: 44, size: 96, elements: !1302)
!1302 = !{!1303, !1304, !1305, !1306}
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1301, file: !1085, line: 45, baseType: !375, size: 32)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !1301, file: !1085, line: 45, baseType: !375, size: 32, offset: 32)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1301, file: !1085, line: 46, baseType: !415, size: 16, offset: 64)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "shorty", scope: !1301, file: !1085, line: 46, baseType: !415, size: 16, offset: 80)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "table", scope: !1289, file: !1085, line: 62, baseType: !1299, size: 64, offset: 320)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "premultable", scope: !1289, file: !1085, line: 64, baseType: !1299, size: 64, offset: 384)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "premul_ext_in", scope: !1289, file: !1085, line: 65, baseType: !886, size: 64, offset: 448)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "premul_ext_out", scope: !1289, file: !1085, line: 66, baseType: !886, size: 64, offset: 512)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "black", scope: !1270, file: !1085, line: 80, baseType: !538, size: 96, offset: 2688)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "white", scope: !1270, file: !1085, line: 80, baseType: !538, size: 96, offset: 2784)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "bwmul", scope: !1270, file: !1085, line: 81, baseType: !538, size: 96, offset: 2880)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "sample", scope: !1270, file: !1085, line: 83, baseType: !538, size: 96, offset: 2976)
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1260, file: !1085, line: 173, baseType: !386, size: 64, offset: 1216)
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "display_settings", scope: !1239, file: !731, line: 291, baseType: !1317, size: 512, offset: 1472)
!1317 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedDisplaySettings", file: !1085, line: 178, baseType: !1318)
!1318 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedDisplaySettings", file: !1085, line: 176, size: 512, elements: !1319)
!1319 = !{!1320}
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "display_device", scope: !1318, file: !1085, line: 177, baseType: !432, size: 512)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "avicodecdata", scope: !1236, file: !731, line: 406, baseType: !1322, size: 64, offset: 1984)
!1322 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1323, size: 64)
!1323 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AviCodecData", file: !731, line: 80, size: 1472, elements: !1324)
!1324 = !{!1325, !1326, !1327, !1328, !1329, !1330, !1331, !1332, !1333, !1334, !1335, !1336, !1337}
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "lpFormat", scope: !1323, file: !731, line: 81, baseType: !386, size: 64)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "lpParms", scope: !1323, file: !731, line: 82, baseType: !386, size: 64, offset: 64)
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "cbFormat", scope: !1323, file: !731, line: 83, baseType: !7, size: 32, offset: 128)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "cbParms", scope: !1323, file: !731, line: 84, baseType: !7, size: 32, offset: 160)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "fccType", scope: !1323, file: !731, line: 86, baseType: !7, size: 32, offset: 192)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "fccHandler", scope: !1323, file: !731, line: 87, baseType: !7, size: 32, offset: 224)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "dwKeyFrameEvery", scope: !1323, file: !731, line: 88, baseType: !7, size: 32, offset: 256)
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "dwQuality", scope: !1323, file: !731, line: 89, baseType: !7, size: 32, offset: 288)
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "dwBytesPerSecond", scope: !1323, file: !731, line: 90, baseType: !7, size: 32, offset: 320)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "dwFlags", scope: !1323, file: !731, line: 91, baseType: !7, size: 32, offset: 352)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "dwInterleaveEvery", scope: !1323, file: !731, line: 92, baseType: !7, size: 32, offset: 384)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1323, file: !731, line: 93, baseType: !7, size: 32, offset: 416)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "avicodecname", scope: !1323, file: !731, line: 95, baseType: !1338, size: 1024, offset: 448)
!1338 = !DICompositeType(tag: DW_TAG_array_type, baseType: !402, size: 1024, elements: !1339)
!1339 = !{!1340}
!1340 = !DISubrange(count: 128)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecdata", scope: !1236, file: !731, line: 407, baseType: !1342, size: 64, offset: 2048)
!1342 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1343, size: 64)
!1343 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "QuicktimeCodecData", file: !731, line: 98, size: 1216, elements: !1344)
!1344 = !{!1345, !1346, !1347, !1348, !1349}
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "cdParms", scope: !1343, file: !731, line: 100, baseType: !386, size: 64)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1343, file: !731, line: 101, baseType: !386, size: 64, offset: 64)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "cdSize", scope: !1343, file: !731, line: 103, baseType: !7, size: 32, offset: 128)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1343, file: !731, line: 104, baseType: !7, size: 32, offset: 160)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecname", scope: !1343, file: !731, line: 106, baseType: !1338, size: 1024, offset: 192)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecsettings", scope: !1236, file: !731, line: 408, baseType: !1351, size: 512, offset: 2112)
!1351 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "QuicktimeCodecSettings", file: !731, line: 109, size: 512, elements: !1352)
!1352 = !{!1353, !1354, !1355, !1356, !1357, !1358, !1359, !1360, !1361, !1362, !1363, !1364, !1365, !1366, !1367, !1368, !1369}
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "codecType", scope: !1351, file: !731, line: 111, baseType: !417, size: 32)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "codecSpatialQuality", scope: !1351, file: !731, line: 112, baseType: !417, size: 32, offset: 32)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !1351, file: !731, line: 115, baseType: !417, size: 32, offset: 64)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "codecFlags", scope: !1351, file: !731, line: 116, baseType: !417, size: 32, offset: 96)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "colorDepth", scope: !1351, file: !731, line: 117, baseType: !417, size: 32, offset: 128)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "codecTemporalQuality", scope: !1351, file: !731, line: 118, baseType: !417, size: 32, offset: 160)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "minSpatialQuality", scope: !1351, file: !731, line: 119, baseType: !417, size: 32, offset: 192)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "minTemporalQuality", scope: !1351, file: !731, line: 120, baseType: !417, size: 32, offset: 224)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "keyFrameRate", scope: !1351, file: !731, line: 121, baseType: !417, size: 32, offset: 256)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "bitRate", scope: !1351, file: !731, line: 122, baseType: !417, size: 32, offset: 288)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "audiocodecType", scope: !1351, file: !731, line: 125, baseType: !417, size: 32, offset: 320)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "audioSampleRate", scope: !1351, file: !731, line: 126, baseType: !417, size: 32, offset: 352)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "audioBitDepth", scope: !1351, file: !731, line: 127, baseType: !415, size: 16, offset: 384)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "audioChannels", scope: !1351, file: !731, line: 128, baseType: !415, size: 16, offset: 400)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "audioCodecFlags", scope: !1351, file: !731, line: 129, baseType: !417, size: 32, offset: 416)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "audioBitRate", scope: !1351, file: !731, line: 130, baseType: !417, size: 32, offset: 448)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1351, file: !731, line: 131, baseType: !417, size: 32, offset: 480)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "ffcodecdata", scope: !1236, file: !731, line: 409, baseType: !1371, size: 576, offset: 2624)
!1371 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FFMpegCodecData", file: !731, line: 134, size: 576, elements: !1372)
!1372 = !{!1373, !1374, !1375, !1376, !1377, !1378, !1379, !1380, !1381, !1382, !1383, !1384, !1385, !1386, !1387, !1388, !1389}
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1371, file: !731, line: 135, baseType: !417, size: 32)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !1371, file: !731, line: 136, baseType: !417, size: 32, offset: 32)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "audio_codec", scope: !1371, file: !731, line: 137, baseType: !417, size: 32, offset: 64)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "video_bitrate", scope: !1371, file: !731, line: 138, baseType: !417, size: 32, offset: 96)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "audio_bitrate", scope: !1371, file: !731, line: 139, baseType: !417, size: 32, offset: 128)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "audio_mixrate", scope: !1371, file: !731, line: 140, baseType: !417, size: 32, offset: 160)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "audio_channels", scope: !1371, file: !731, line: 141, baseType: !417, size: 32, offset: 192)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "audio_pad", scope: !1371, file: !731, line: 142, baseType: !417, size: 32, offset: 224)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "audio_volume", scope: !1371, file: !731, line: 143, baseType: !375, size: 32, offset: 256)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "gop_size", scope: !1371, file: !731, line: 144, baseType: !417, size: 32, offset: 288)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1371, file: !731, line: 145, baseType: !417, size: 32, offset: 320)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_rate", scope: !1371, file: !731, line: 147, baseType: !417, size: 32, offset: 352)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_rate", scope: !1371, file: !731, line: 148, baseType: !417, size: 32, offset: 384)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "rc_buffer_size", scope: !1371, file: !731, line: 149, baseType: !417, size: 32, offset: 416)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "mux_packet_size", scope: !1371, file: !731, line: 150, baseType: !417, size: 32, offset: 448)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "mux_rate", scope: !1371, file: !731, line: 151, baseType: !417, size: 32, offset: 480)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !1371, file: !731, line: 152, baseType: !421, size: 64, offset: 512)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "cfra", scope: !1236, file: !731, line: 411, baseType: !417, size: 32, offset: 3200)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !1236, file: !731, line: 411, baseType: !417, size: 32, offset: 3232)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "efra", scope: !1236, file: !731, line: 411, baseType: !417, size: 32, offset: 3264)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "subframe", scope: !1236, file: !731, line: 412, baseType: !375, size: 32, offset: 3296)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "psfra", scope: !1236, file: !731, line: 413, baseType: !417, size: 32, offset: 3328)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "pefra", scope: !1236, file: !731, line: 413, baseType: !417, size: 32, offset: 3360)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "images", scope: !1236, file: !731, line: 415, baseType: !417, size: 32, offset: 3392)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "framapto", scope: !1236, file: !731, line: 415, baseType: !417, size: 32, offset: 3424)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1236, file: !731, line: 416, baseType: !415, size: 16, offset: 3456)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "threads", scope: !1236, file: !731, line: 416, baseType: !415, size: 16, offset: 3472)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "framelen", scope: !1236, file: !731, line: 418, baseType: !375, size: 32, offset: 3488)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "blurfac", scope: !1236, file: !731, line: 418, baseType: !375, size: 32, offset: 3520)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "edgeR", scope: !1236, file: !731, line: 421, baseType: !375, size: 32, offset: 3552)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "edgeG", scope: !1236, file: !731, line: 421, baseType: !375, size: 32, offset: 3584)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "edgeB", scope: !1236, file: !731, line: 421, baseType: !375, size: 32, offset: 3616)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "fullscreen", scope: !1236, file: !731, line: 425, baseType: !415, size: 16, offset: 3648)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "xplay", scope: !1236, file: !731, line: 425, baseType: !415, size: 16, offset: 3664)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "yplay", scope: !1236, file: !731, line: 425, baseType: !415, size: 16, offset: 3680)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "freqplay", scope: !1236, file: !731, line: 426, baseType: !415, size: 16, offset: 3696)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !1236, file: !731, line: 428, baseType: !415, size: 16, offset: 3712)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "attrib", scope: !1236, file: !731, line: 428, baseType: !415, size: 16, offset: 3728)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "frame_step", scope: !1236, file: !731, line: 431, baseType: !417, size: 32, offset: 3744)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "stereomode", scope: !1236, file: !731, line: 433, baseType: !415, size: 16, offset: 3776)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "dimensionspreset", scope: !1236, file: !731, line: 435, baseType: !415, size: 16, offset: 3792)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "filtertype", scope: !1236, file: !731, line: 437, baseType: !415, size: 16, offset: 3808)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1236, file: !731, line: 439, baseType: !415, size: 16, offset: 3824)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "maximsize", scope: !1236, file: !731, line: 441, baseType: !415, size: 16, offset: 3840)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "pad6", scope: !1236, file: !731, line: 443, baseType: !415, size: 16, offset: 3856)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "xsch", scope: !1236, file: !731, line: 449, baseType: !417, size: 32, offset: 3872)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "ysch", scope: !1236, file: !731, line: 453, baseType: !417, size: 32, offset: 3904)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "xparts", scope: !1236, file: !731, line: 458, baseType: !415, size: 16, offset: 3936)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "yparts", scope: !1236, file: !731, line: 462, baseType: !415, size: 16, offset: 3952)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "tilex", scope: !1236, file: !731, line: 467, baseType: !417, size: 32, offset: 3968)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "tiley", scope: !1236, file: !731, line: 467, baseType: !417, size: 32, offset: 4000)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !1236, file: !731, line: 469, baseType: !415, size: 16, offset: 4032)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "imtype", scope: !1236, file: !731, line: 469, baseType: !415, size: 16, offset: 4048)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "subimtype", scope: !1236, file: !731, line: 469, baseType: !415, size: 16, offset: 4064)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !1236, file: !731, line: 469, baseType: !415, size: 16, offset: 4080)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "displaymode", scope: !1236, file: !731, line: 474, baseType: !415, size: 16, offset: 4096)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "use_lock_interface", scope: !1236, file: !731, line: 475, baseType: !402, size: 8, offset: 4112)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "pad7", scope: !1236, file: !731, line: 476, baseType: !402, size: 8, offset: 4120)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "scemode", scope: !1236, file: !731, line: 481, baseType: !417, size: 32, offset: 4128)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1236, file: !731, line: 486, baseType: !417, size: 32, offset: 4160)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "raytrace_options", scope: !1236, file: !731, line: 491, baseType: !417, size: 32, offset: 4192)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "raytrace_structure", scope: !1236, file: !731, line: 496, baseType: !415, size: 16, offset: 4224)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1236, file: !731, line: 498, baseType: !415, size: 16, offset: 4240)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "ocres", scope: !1236, file: !731, line: 501, baseType: !415, size: 16, offset: 4256)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !1236, file: !731, line: 502, baseType: !415, size: 16, offset: 4272)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "alphamode", scope: !1236, file: !731, line: 508, baseType: !415, size: 16, offset: 4288)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "osa", scope: !1236, file: !731, line: 513, baseType: !415, size: 16, offset: 4304)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "frs_sec", scope: !1236, file: !731, line: 515, baseType: !415, size: 16, offset: 4320)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "edgeint", scope: !1236, file: !731, line: 515, baseType: !415, size: 16, offset: 4336)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "safety", scope: !1236, file: !731, line: 519, baseType: !1277, size: 128, offset: 4352)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "border", scope: !1236, file: !731, line: 519, baseType: !1277, size: 128, offset: 4480)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "disprect", scope: !1236, file: !731, line: 520, baseType: !1445, size: 128, offset: 4608)
!1445 = !DIDerivedType(tag: DW_TAG_typedef, name: "rcti", file: !1278, line: 89, baseType: !1446)
!1446 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcti", file: !1278, line: 86, size: 128, elements: !1447)
!1447 = !{!1448, !1449, !1450, !1451}
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "xmin", scope: !1446, file: !1278, line: 87, baseType: !417, size: 32)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "xmax", scope: !1446, file: !1278, line: 87, baseType: !417, size: 32, offset: 32)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "ymin", scope: !1446, file: !1278, line: 88, baseType: !417, size: 32, offset: 64)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "ymax", scope: !1446, file: !1278, line: 88, baseType: !417, size: 32, offset: 96)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "layers", scope: !1236, file: !731, line: 523, baseType: !442, size: 128, offset: 4736)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "actlay", scope: !1236, file: !731, line: 524, baseType: !415, size: 16, offset: 4864)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "mblur_samples", scope: !1236, file: !731, line: 527, baseType: !415, size: 16, offset: 4880)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "xasp", scope: !1236, file: !731, line: 532, baseType: !375, size: 32, offset: 4896)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "yasp", scope: !1236, file: !731, line: 532, baseType: !375, size: 32, offset: 4928)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "frs_sec_base", scope: !1236, file: !731, line: 534, baseType: !375, size: 32, offset: 4960)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "gauss", scope: !1236, file: !731, line: 538, baseType: !375, size: 32, offset: 4992)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "color_mgt_flag", scope: !1236, file: !731, line: 542, baseType: !417, size: 32, offset: 5024)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "postgamma", scope: !1236, file: !731, line: 545, baseType: !375, size: 32, offset: 5056)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "posthue", scope: !1236, file: !731, line: 545, baseType: !375, size: 32, offset: 5088)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "postsat", scope: !1236, file: !731, line: 545, baseType: !375, size: 32, offset: 5120)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "dither_intensity", scope: !1236, file: !731, line: 548, baseType: !375, size: 32, offset: 5152)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "bake_osa", scope: !1236, file: !731, line: 551, baseType: !415, size: 16, offset: 5184)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "bake_filter", scope: !1236, file: !731, line: 551, baseType: !415, size: 16, offset: 5200)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "bake_mode", scope: !1236, file: !731, line: 551, baseType: !415, size: 16, offset: 5216)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "bake_flag", scope: !1236, file: !731, line: 551, baseType: !415, size: 16, offset: 5232)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "bake_normal_space", scope: !1236, file: !731, line: 552, baseType: !415, size: 16, offset: 5248)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "bake_quad_split", scope: !1236, file: !731, line: 552, baseType: !415, size: 16, offset: 5264)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "bake_maxdist", scope: !1236, file: !731, line: 553, baseType: !375, size: 32, offset: 5280)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "bake_biasdist", scope: !1236, file: !731, line: 553, baseType: !375, size: 32, offset: 5312)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "bake_samples", scope: !1236, file: !731, line: 554, baseType: !415, size: 16, offset: 5344)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "bake_pad", scope: !1236, file: !731, line: 554, baseType: !415, size: 16, offset: 5360)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "bake_user_scale", scope: !1236, file: !731, line: 555, baseType: !375, size: 32, offset: 5376)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "bake_pad1", scope: !1236, file: !731, line: 555, baseType: !375, size: 32, offset: 5408)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "pic", scope: !1236, file: !731, line: 558, baseType: !401, size: 8192, offset: 5440)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "stamp", scope: !1236, file: !731, line: 561, baseType: !417, size: 32, offset: 13632)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "stamp_font_id", scope: !1236, file: !731, line: 562, baseType: !415, size: 16, offset: 13664)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !1236, file: !731, line: 562, baseType: !415, size: 16, offset: 13680)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "stamp_udata", scope: !1236, file: !731, line: 565, baseType: !1481, size: 6144, offset: 13696)
!1481 = !DICompositeType(tag: DW_TAG_array_type, baseType: !402, size: 6144, elements: !1482)
!1482 = !{!1483}
!1483 = !DISubrange(count: 768)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "fg_stamp", scope: !1236, file: !731, line: 568, baseType: !772, size: 128, offset: 19840)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "bg_stamp", scope: !1236, file: !731, line: 569, baseType: !772, size: 128, offset: 19968)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "seq_prev_type", scope: !1236, file: !731, line: 572, baseType: !402, size: 8, offset: 20096)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "seq_rend_type", scope: !1236, file: !731, line: 573, baseType: !402, size: 8, offset: 20104)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "seq_flag", scope: !1236, file: !731, line: 574, baseType: !402, size: 8, offset: 20112)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "pad5", scope: !1236, file: !731, line: 575, baseType: !1006, size: 40, offset: 20120)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_flag", scope: !1236, file: !731, line: 578, baseType: !417, size: 32, offset: 20160)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_subsurf", scope: !1236, file: !731, line: 579, baseType: !415, size: 16, offset: 20192)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_shadowsamples", scope: !1236, file: !731, line: 580, baseType: !415, size: 16, offset: 20208)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_particles", scope: !1236, file: !731, line: 581, baseType: !375, size: 32, offset: 20224)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_aosss", scope: !1236, file: !731, line: 582, baseType: !375, size: 32, offset: 20256)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "cineonwhite", scope: !1236, file: !731, line: 585, baseType: !415, size: 16, offset: 20288)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "cineonblack", scope: !1236, file: !731, line: 585, baseType: !415, size: 16, offset: 20304)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "cineongamma", scope: !1236, file: !731, line: 586, baseType: !375, size: 32, offset: 20320)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_preset", scope: !1236, file: !731, line: 589, baseType: !415, size: 16, offset: 20352)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_depth", scope: !1236, file: !731, line: 589, baseType: !415, size: 16, offset: 20368)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "rpad3", scope: !1236, file: !731, line: 590, baseType: !417, size: 32, offset: 20384)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "domeres", scope: !1236, file: !731, line: 593, baseType: !415, size: 16, offset: 20416)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "domemode", scope: !1236, file: !731, line: 593, baseType: !415, size: 16, offset: 20432)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "domeangle", scope: !1236, file: !731, line: 594, baseType: !415, size: 16, offset: 20448)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "dometilt", scope: !1236, file: !731, line: 594, baseType: !415, size: 16, offset: 20464)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "domeresbuf", scope: !1236, file: !731, line: 595, baseType: !375, size: 32, offset: 20480)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1236, file: !731, line: 596, baseType: !375, size: 32, offset: 20512)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "dometext", scope: !1236, file: !731, line: 597, baseType: !1508, size: 64, offset: 20544)
!1508 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1509, size: 64)
!1509 = !DICompositeType(tag: DW_TAG_structure_type, name: "Text", file: !331, line: 205, flags: DIFlagFwdDecl)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "line_thickness_mode", scope: !1236, file: !731, line: 600, baseType: !417, size: 32, offset: 20608)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "unit_line_thickness", scope: !1236, file: !731, line: 601, baseType: !375, size: 32, offset: 20640)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "engine", scope: !1236, file: !731, line: 604, baseType: !1513, size: 256, offset: 20672)
!1513 = !DICompositeType(tag: DW_TAG_array_type, baseType: !402, size: 256, elements: !1514)
!1514 = !{!1515}
!1515 = !DISubrange(count: 32)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "bake", scope: !1236, file: !731, line: 607, baseType: !1517, size: 10880, offset: 20928)
!1517 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BakeData", file: !731, line: 364, size: 10880, elements: !1518)
!1518 = !{!1519, !1520, !1521, !1522, !1523, !1524, !1525, !1526, !1527, !1528, !1529, !1530, !1531}
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "im_format", scope: !1517, file: !731, line: 365, baseType: !1239, size: 1984)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "filepath", scope: !1517, file: !731, line: 367, baseType: !401, size: 8192, offset: 1984)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1517, file: !731, line: 369, baseType: !415, size: 16, offset: 10176)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1517, file: !731, line: 369, baseType: !415, size: 16, offset: 10192)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "margin", scope: !1517, file: !731, line: 370, baseType: !415, size: 16, offset: 10208)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1517, file: !731, line: 370, baseType: !415, size: 16, offset: 10224)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "cage_extrusion", scope: !1517, file: !731, line: 372, baseType: !375, size: 32, offset: 10240)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1517, file: !731, line: 373, baseType: !375, size: 32, offset: 10272)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "normal_swizzle", scope: !1517, file: !731, line: 375, baseType: !1152, size: 24, offset: 10304)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "normal_space", scope: !1517, file: !731, line: 376, baseType: !402, size: 8, offset: 10328)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "save_mode", scope: !1517, file: !731, line: 378, baseType: !402, size: 8, offset: 10336)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1517, file: !731, line: 379, baseType: !1152, size: 24, offset: 10344)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "cage", scope: !1517, file: !731, line: 381, baseType: !432, size: 512, offset: 10368)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "preview_start_resolution", scope: !1236, file: !731, line: 609, baseType: !417, size: 32, offset: 31808)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1236, file: !731, line: 610, baseType: !417, size: 32, offset: 31840)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "audio", scope: !897, file: !731, line: 1252, baseType: !1535, size: 256, offset: 34112)
!1535 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AudioData", file: !731, line: 158, size: 256, elements: !1536)
!1536 = !{!1537, !1538, !1539, !1540, !1541, !1542, !1543, !1544, !1545}
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "mixrate", scope: !1535, file: !731, line: 159, baseType: !417, size: 32)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "main", scope: !1535, file: !731, line: 160, baseType: !375, size: 32, offset: 32)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "speed_of_sound", scope: !1535, file: !731, line: 161, baseType: !375, size: 32, offset: 64)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "doppler_factor", scope: !1535, file: !731, line: 162, baseType: !375, size: 32, offset: 96)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "distance_model", scope: !1535, file: !731, line: 163, baseType: !417, size: 32, offset: 128)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1535, file: !731, line: 164, baseType: !415, size: 16, offset: 160)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1535, file: !731, line: 165, baseType: !415, size: 16, offset: 176)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "volume", scope: !1535, file: !731, line: 166, baseType: !375, size: 32, offset: 192)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1535, file: !731, line: 167, baseType: !375, size: 32, offset: 224)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !897, file: !731, line: 1254, baseType: !442, size: 128, offset: 34368)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "transform_spaces", scope: !897, file: !731, line: 1255, baseType: !442, size: 128, offset: 34496)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scene", scope: !897, file: !731, line: 1257, baseType: !386, size: 64, offset: 34624)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scene_handle", scope: !897, file: !731, line: 1258, baseType: !386, size: 64, offset: 34688)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scrub_handle", scope: !897, file: !731, line: 1259, baseType: !386, size: 64, offset: 34752)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "speaker_handles", scope: !897, file: !731, line: 1260, baseType: !386, size: 64, offset: 34816)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "fps_info", scope: !897, file: !731, line: 1262, baseType: !386, size: 64, offset: 34880)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "theDag", scope: !897, file: !731, line: 1265, baseType: !1554, size: 64, offset: 34944)
!1554 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1555, size: 64)
!1555 = !DICompositeType(tag: DW_TAG_structure_type, name: "DagForest", file: !731, line: 1265, flags: DIFlagFwdDecl)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "dagflags", scope: !897, file: !731, line: 1266, baseType: !415, size: 16, offset: 35008)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !897, file: !731, line: 1267, baseType: !415, size: 16, offset: 35024)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "active_keyingset", scope: !897, file: !731, line: 1270, baseType: !417, size: 32, offset: 35040)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "keyingsets", scope: !897, file: !731, line: 1271, baseType: !442, size: 128, offset: 35072)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "framing", scope: !897, file: !731, line: 1274, baseType: !1561, size: 128, offset: 35200)
!1561 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameFraming", file: !731, line: 650, size: 128, elements: !1562)
!1562 = !{!1563, !1564, !1565, !1566, !1567}
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !1561, file: !731, line: 651, baseType: !538, size: 96)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1561, file: !731, line: 652, baseType: !402, size: 8, offset: 96)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1561, file: !731, line: 652, baseType: !402, size: 8, offset: 104)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1561, file: !731, line: 652, baseType: !402, size: 8, offset: 112)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !1561, file: !731, line: 652, baseType: !402, size: 8, offset: 120)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "gm", scope: !897, file: !731, line: 1275, baseType: !1569, size: 1472, offset: 35328)
!1569 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameData", file: !731, line: 676, size: 1472, elements: !1570)
!1570 = !{!1571, !1572, !1573, !1574, !1575, !1576, !1577, !1578, !1579, !1580, !1581, !1583, !1593, !1594, !1595, !1596, !1615, !1616, !1617, !1618, !1619, !1620, !1621, !1622, !1623, !1624, !1625, !1626, !1627, !1628, !1629, !1630, !1631, !1632, !1633, !1634}
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "framing", scope: !1569, file: !731, line: 679, baseType: !1561, size: 128)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "playerflag", scope: !1569, file: !731, line: 680, baseType: !415, size: 16, offset: 128)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "xplay", scope: !1569, file: !731, line: 680, baseType: !415, size: 16, offset: 144)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "yplay", scope: !1569, file: !731, line: 680, baseType: !415, size: 16, offset: 160)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "freqplay", scope: !1569, file: !731, line: 680, baseType: !415, size: 16, offset: 176)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !1569, file: !731, line: 681, baseType: !415, size: 16, offset: 192)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "attrib", scope: !1569, file: !731, line: 681, baseType: !415, size: 16, offset: 208)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "rt1", scope: !1569, file: !731, line: 681, baseType: !415, size: 16, offset: 224)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "rt2", scope: !1569, file: !731, line: 681, baseType: !415, size: 16, offset: 240)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "aasamples", scope: !1569, file: !731, line: 682, baseType: !415, size: 16, offset: 256)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !1569, file: !731, line: 682, baseType: !1582, size: 48, offset: 272)
!1582 = !DICompositeType(tag: DW_TAG_array_type, baseType: !415, size: 48, elements: !539)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "dome", scope: !1569, file: !731, line: 685, baseType: !1584, size: 192, offset: 320)
!1584 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameDome", file: !731, line: 633, size: 192, elements: !1585)
!1585 = !{!1586, !1587, !1588, !1589, !1590, !1591, !1592}
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "res", scope: !1584, file: !731, line: 634, baseType: !415, size: 16)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1584, file: !731, line: 634, baseType: !415, size: 16, offset: 16)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "angle", scope: !1584, file: !731, line: 635, baseType: !415, size: 16, offset: 32)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "tilt", scope: !1584, file: !731, line: 635, baseType: !415, size: 16, offset: 48)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "resbuf", scope: !1584, file: !731, line: 636, baseType: !375, size: 32, offset: 64)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1584, file: !731, line: 636, baseType: !375, size: 32, offset: 96)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "warptext", scope: !1584, file: !731, line: 637, baseType: !1508, size: 64, offset: 128)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "stereoflag", scope: !1569, file: !731, line: 686, baseType: !415, size: 16, offset: 512)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "stereomode", scope: !1569, file: !731, line: 686, baseType: !415, size: 16, offset: 528)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "eyeseparation", scope: !1569, file: !731, line: 687, baseType: !375, size: 32, offset: 544)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "recastData", scope: !1569, file: !731, line: 688, baseType: !1597, size: 448, offset: 576)
!1597 = !DIDerivedType(tag: DW_TAG_typedef, name: "RecastData", file: !731, line: 674, baseType: !1598)
!1598 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RecastData", file: !731, line: 659, size: 448, elements: !1599)
!1599 = !{!1600, !1601, !1602, !1603, !1604, !1605, !1606, !1607, !1608, !1609, !1610, !1611, !1612, !1613, !1614}
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "cellsize", scope: !1598, file: !731, line: 660, baseType: !375, size: 32)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "cellheight", scope: !1598, file: !731, line: 661, baseType: !375, size: 32, offset: 32)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "agentmaxslope", scope: !1598, file: !731, line: 662, baseType: !375, size: 32, offset: 64)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "agentmaxclimb", scope: !1598, file: !731, line: 663, baseType: !375, size: 32, offset: 96)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "agentheight", scope: !1598, file: !731, line: 664, baseType: !375, size: 32, offset: 128)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "agentradius", scope: !1598, file: !731, line: 665, baseType: !375, size: 32, offset: 160)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "edgemaxlen", scope: !1598, file: !731, line: 666, baseType: !375, size: 32, offset: 192)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "edgemaxerror", scope: !1598, file: !731, line: 667, baseType: !375, size: 32, offset: 224)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "regionminsize", scope: !1598, file: !731, line: 668, baseType: !375, size: 32, offset: 256)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "regionmergesize", scope: !1598, file: !731, line: 669, baseType: !375, size: 32, offset: 288)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "vertsperpoly", scope: !1598, file: !731, line: 670, baseType: !417, size: 32, offset: 320)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "detailsampledist", scope: !1598, file: !731, line: 671, baseType: !375, size: 32, offset: 352)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "detailsamplemaxerror", scope: !1598, file: !731, line: 672, baseType: !375, size: 32, offset: 384)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1598, file: !731, line: 673, baseType: !415, size: 16, offset: 416)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1598, file: !731, line: 673, baseType: !415, size: 16, offset: 432)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !1569, file: !731, line: 692, baseType: !375, size: 32, offset: 1024)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "activityBoxRadius", scope: !1569, file: !731, line: 697, baseType: !375, size: 32, offset: 1056)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1569, file: !731, line: 703, baseType: !417, size: 32, offset: 1088)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1569, file: !731, line: 704, baseType: !415, size: 16, offset: 1120)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "matmode", scope: !1569, file: !731, line: 704, baseType: !415, size: 16, offset: 1136)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "occlusionRes", scope: !1569, file: !731, line: 705, baseType: !415, size: 16, offset: 1152)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "physicsEngine", scope: !1569, file: !731, line: 706, baseType: !415, size: 16, offset: 1168)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "exitkey", scope: !1569, file: !731, line: 707, baseType: !415, size: 16, offset: 1184)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "vsync", scope: !1569, file: !731, line: 708, baseType: !415, size: 16, offset: 1200)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "ticrate", scope: !1569, file: !731, line: 709, baseType: !415, size: 16, offset: 1216)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "maxlogicstep", scope: !1569, file: !731, line: 709, baseType: !415, size: 16, offset: 1232)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "physubstep", scope: !1569, file: !731, line: 709, baseType: !415, size: 16, offset: 1248)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "maxphystep", scope: !1569, file: !731, line: 709, baseType: !415, size: 16, offset: 1264)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "obstacleSimulation", scope: !1569, file: !731, line: 710, baseType: !415, size: 16, offset: 1280)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "raster_storage", scope: !1569, file: !731, line: 711, baseType: !415, size: 16, offset: 1296)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "levelHeight", scope: !1569, file: !731, line: 712, baseType: !375, size: 32, offset: 1312)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "deactivationtime", scope: !1569, file: !731, line: 713, baseType: !375, size: 32, offset: 1344)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "lineardeactthreshold", scope: !1569, file: !731, line: 713, baseType: !375, size: 32, offset: 1376)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "angulardeactthreshold", scope: !1569, file: !731, line: 713, baseType: !375, size: 32, offset: 1408)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1569, file: !731, line: 713, baseType: !375, size: 32, offset: 1440)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "unit", scope: !897, file: !731, line: 1278, baseType: !1636, size: 64, offset: 36800)
!1636 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UnitSettings", file: !731, line: 1197, size: 64, elements: !1637)
!1637 = !{!1638, !1639, !1640, !1641}
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "scale_length", scope: !1636, file: !731, line: 1199, baseType: !375, size: 32)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "system", scope: !1636, file: !731, line: 1200, baseType: !402, size: 8, offset: 32)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "system_rotation", scope: !1636, file: !731, line: 1201, baseType: !402, size: 8, offset: 40)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1636, file: !731, line: 1202, baseType: !415, size: 16, offset: 48)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !897, file: !731, line: 1281, baseType: !729, size: 64, offset: 36864)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "physics_settings", scope: !897, file: !731, line: 1284, baseType: !1644, size: 192, offset: 36928)
!1644 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PhysicsSettings", file: !731, line: 1208, size: 192, elements: !1645)
!1645 = !{!1646, !1647, !1648, !1649}
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !1644, file: !731, line: 1209, baseType: !538, size: 96)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1644, file: !731, line: 1210, baseType: !417, size: 32, offset: 96)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "quick_cache_step", scope: !1644, file: !731, line: 1210, baseType: !417, size: 32, offset: 128)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !1644, file: !731, line: 1210, baseType: !417, size: 32, offset: 160)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "clip", scope: !897, file: !731, line: 1287, baseType: !1651, size: 64, offset: 37120)
!1651 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1652, size: 64)
!1652 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieClip", file: !1653, line: 64, size: 19136, elements: !1654)
!1653 = !DIFile(filename: "blender/source/blender/makesdna/DNA_movieclip_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1654 = !{!1655, !1656, !1657, !1658, !1659, !1660, !1662, !1663, !1664, !1665, !1668, !1669, !1844, !1845, !1853, !1854, !1855, !1856, !1857}
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1652, file: !1653, line: 65, baseType: !381, size: 960)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !1652, file: !1653, line: 66, baseType: !453, size: 64, offset: 960)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1652, file: !1653, line: 68, baseType: !401, size: 8192, offset: 1024)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !1652, file: !1653, line: 70, baseType: !417, size: 32, offset: 9216)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "lastframe", scope: !1652, file: !1653, line: 71, baseType: !417, size: 32, offset: 9248)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "lastsize", scope: !1652, file: !1653, line: 72, baseType: !1661, size: 64, offset: 9280)
!1661 = !DICompositeType(tag: DW_TAG_array_type, baseType: !417, size: 64, elements: !887)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "aspx", scope: !1652, file: !1653, line: 74, baseType: !375, size: 32, offset: 9344)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "aspy", scope: !1652, file: !1653, line: 74, baseType: !375, size: 32, offset: 9376)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "anim", scope: !1652, file: !1653, line: 76, baseType: !1034, size: 64, offset: 9408)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !1652, file: !1653, line: 77, baseType: !1666, size: 64, offset: 9472)
!1666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1667, size: 64)
!1667 = !DICompositeType(tag: DW_TAG_structure_type, name: "MovieClipCache", file: !1653, line: 77, flags: DIFlagFwdDecl)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !1652, file: !1653, line: 78, baseType: !729, size: 64, offset: 9536)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "tracking", scope: !1652, file: !1653, line: 80, baseType: !1670, size: 2624, offset: 9600)
!1670 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTracking", file: !1671, line: 340, size: 2624, elements: !1672)
!1671 = !DIFile(filename: "blender/source/blender/makesdna/DNA_tracking_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1672 = !{!1673, !1701, !1719, !1720, !1721, !1736, !1794, !1795, !1821, !1822, !1823, !1824, !1833}
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "settings", scope: !1670, file: !1671, line: 341, baseType: !1674, size: 576)
!1674 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingSettings", file: !1671, line: 251, baseType: !1675)
!1675 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingSettings", file: !1671, line: 207, size: 576, elements: !1676)
!1676 = !{!1677, !1678, !1679, !1680, !1681, !1682, !1683, !1684, !1685, !1686, !1687, !1688, !1689, !1690, !1691, !1692, !1693, !1694, !1695, !1696, !1697, !1698, !1699, !1700}
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1675, file: !1671, line: 208, baseType: !417, size: 32)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "default_motion_model", scope: !1675, file: !1671, line: 211, baseType: !415, size: 16, offset: 32)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "default_algorithm_flag", scope: !1675, file: !1671, line: 212, baseType: !415, size: 16, offset: 48)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "default_minimum_correlation", scope: !1675, file: !1671, line: 213, baseType: !375, size: 32, offset: 64)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "default_pattern_size", scope: !1675, file: !1671, line: 214, baseType: !415, size: 16, offset: 96)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "default_search_size", scope: !1675, file: !1671, line: 215, baseType: !415, size: 16, offset: 112)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "default_frames_limit", scope: !1675, file: !1671, line: 216, baseType: !415, size: 16, offset: 128)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "default_margin", scope: !1675, file: !1671, line: 217, baseType: !415, size: 16, offset: 144)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "default_pattern_match", scope: !1675, file: !1671, line: 218, baseType: !415, size: 16, offset: 160)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "default_flag", scope: !1675, file: !1671, line: 219, baseType: !415, size: 16, offset: 176)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "default_weight", scope: !1675, file: !1671, line: 220, baseType: !375, size: 32, offset: 192)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "motion_flag", scope: !1675, file: !1671, line: 222, baseType: !415, size: 16, offset: 224)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "speed", scope: !1675, file: !1671, line: 225, baseType: !415, size: 16, offset: 240)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "keyframe1", scope: !1675, file: !1671, line: 228, baseType: !417, size: 32, offset: 256)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "keyframe2", scope: !1675, file: !1671, line: 229, baseType: !417, size: 32, offset: 288)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "reconstruction_flag", scope: !1675, file: !1671, line: 233, baseType: !417, size: 32, offset: 320)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "refine_camera_intrinsics", scope: !1675, file: !1671, line: 236, baseType: !415, size: 16, offset: 352)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1675, file: !1671, line: 236, baseType: !415, size: 16, offset: 368)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "dist", scope: !1675, file: !1671, line: 241, baseType: !375, size: 32, offset: 384)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "clean_frames", scope: !1675, file: !1671, line: 244, baseType: !417, size: 32, offset: 416)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "clean_action", scope: !1675, file: !1671, line: 244, baseType: !417, size: 32, offset: 448)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "clean_error", scope: !1675, file: !1671, line: 245, baseType: !375, size: 32, offset: 480)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "object_distance", scope: !1675, file: !1671, line: 248, baseType: !375, size: 32, offset: 512)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !1675, file: !1671, line: 250, baseType: !417, size: 32, offset: 544)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "camera", scope: !1670, file: !1671, line: 342, baseType: !1702, size: 448, offset: 576)
!1702 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingCamera", file: !1671, line: 79, baseType: !1703)
!1703 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingCamera", file: !1671, line: 61, size: 448, elements: !1704)
!1704 = !{!1705, !1706, !1707, !1708, !1709, !1710, !1711, !1712, !1713, !1714, !1715, !1716, !1717, !1718}
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "intrinsics", scope: !1703, file: !1671, line: 62, baseType: !386, size: 64)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "distortion_model", scope: !1703, file: !1671, line: 64, baseType: !415, size: 16, offset: 64)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1703, file: !1671, line: 65, baseType: !415, size: 16, offset: 80)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "sensor_width", scope: !1703, file: !1671, line: 67, baseType: !375, size: 32, offset: 96)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "pixel_aspect", scope: !1703, file: !1671, line: 68, baseType: !375, size: 32, offset: 128)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "focal", scope: !1703, file: !1671, line: 69, baseType: !375, size: 32, offset: 160)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "units", scope: !1703, file: !1671, line: 70, baseType: !415, size: 16, offset: 192)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1703, file: !1671, line: 71, baseType: !415, size: 16, offset: 208)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "principal", scope: !1703, file: !1671, line: 72, baseType: !886, size: 64, offset: 224)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "k1", scope: !1703, file: !1671, line: 75, baseType: !375, size: 32, offset: 288)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "k2", scope: !1703, file: !1671, line: 75, baseType: !375, size: 32, offset: 320)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "k3", scope: !1703, file: !1671, line: 75, baseType: !375, size: 32, offset: 352)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "division_k1", scope: !1703, file: !1671, line: 78, baseType: !375, size: 32, offset: 384)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "division_k2", scope: !1703, file: !1671, line: 78, baseType: !375, size: 32, offset: 416)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "tracks", scope: !1670, file: !1671, line: 343, baseType: !442, size: 128, offset: 1024)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "plane_tracks", scope: !1670, file: !1671, line: 344, baseType: !442, size: 128, offset: 1152)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "reconstruction", scope: !1670, file: !1671, line: 345, baseType: !1722, size: 192, offset: 1280)
!1722 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingReconstruction", file: !1671, line: 278, baseType: !1723)
!1723 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingReconstruction", file: !1671, line: 270, size: 192, elements: !1724)
!1724 = !{!1725, !1726, !1727, !1728, !1729}
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1723, file: !1671, line: 271, baseType: !417, size: 32)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !1723, file: !1671, line: 273, baseType: !375, size: 32, offset: 32)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "last_camera", scope: !1723, file: !1671, line: 275, baseType: !417, size: 32, offset: 64)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "camnr", scope: !1723, file: !1671, line: 276, baseType: !417, size: 32, offset: 96)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "cameras", scope: !1723, file: !1671, line: 277, baseType: !1730, size: 64, offset: 128)
!1730 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1731, size: 64)
!1731 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieReconstructedCamera", file: !1671, line: 55, size: 576, elements: !1732)
!1732 = !{!1733, !1734, !1735}
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !1731, file: !1671, line: 56, baseType: !417, size: 32)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !1731, file: !1671, line: 57, baseType: !375, size: 32, offset: 32)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !1731, file: !1671, line: 58, baseType: !549, size: 512, offset: 64)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "stabilization", scope: !1670, file: !1671, line: 346, baseType: !1737, size: 384, offset: 1472)
!1737 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingStabilization", file: !1671, line: 268, baseType: !1738)
!1738 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingStabilization", file: !1671, line: 253, size: 384, elements: !1739)
!1739 = !{!1740, !1741, !1742, !1743, !1744, !1788, !1789, !1790, !1791, !1792, !1793}
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1738, file: !1671, line: 254, baseType: !417, size: 32)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "tot_track", scope: !1738, file: !1671, line: 255, baseType: !417, size: 32, offset: 32)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "act_track", scope: !1738, file: !1671, line: 255, baseType: !417, size: 32, offset: 64)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "maxscale", scope: !1738, file: !1671, line: 258, baseType: !375, size: 32, offset: 96)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "rot_track", scope: !1738, file: !1671, line: 259, baseType: !1745, size: 64, offset: 128)
!1745 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1746, size: 64)
!1746 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingTrack", file: !1671, line: 164, baseType: !1747)
!1747 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingTrack", file: !1671, line: 108, size: 1664, elements: !1748)
!1748 = !{!1749, !1751, !1752, !1753, !1754, !1755, !1756, !1757, !1758, !1759, !1760, !1773, !1774, !1775, !1776, !1777, !1778, !1779, !1780, !1781, !1782, !1783, !1784, !1785, !1786, !1787}
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1747, file: !1671, line: 109, baseType: !1750, size: 64)
!1750 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1747, size: 64)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1747, file: !1671, line: 109, baseType: !1750, size: 64, offset: 64)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1747, file: !1671, line: 111, baseType: !432, size: 512, offset: 128)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "pat_min", scope: !1747, file: !1671, line: 119, baseType: !886, size: 64, offset: 640)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "pat_max", scope: !1747, file: !1671, line: 119, baseType: !886, size: 64, offset: 704)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "search_min", scope: !1747, file: !1671, line: 125, baseType: !886, size: 64, offset: 768)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "search_max", scope: !1747, file: !1671, line: 125, baseType: !886, size: 64, offset: 832)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1747, file: !1671, line: 127, baseType: !886, size: 64, offset: 896)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "markersnr", scope: !1747, file: !1671, line: 130, baseType: !417, size: 32, offset: 960)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "last_marker", scope: !1747, file: !1671, line: 131, baseType: !417, size: 32, offset: 992)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !1747, file: !1671, line: 132, baseType: !1761, size: 64, offset: 1024)
!1761 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1762, size: 64)
!1762 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingMarker", file: !1671, line: 106, baseType: !1763)
!1763 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingMarker", file: !1671, line: 81, size: 512, elements: !1764)
!1764 = !{!1765, !1766, !1769, !1770, !1771, !1772}
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !1763, file: !1671, line: 82, baseType: !886, size: 64)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "pattern_corners", scope: !1763, file: !1671, line: 97, baseType: !1767, size: 256, offset: 64)
!1767 = !DICompositeType(tag: DW_TAG_array_type, baseType: !375, size: 256, elements: !1768)
!1768 = !{!551, !888}
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "search_min", scope: !1763, file: !1671, line: 102, baseType: !886, size: 64, offset: 320)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "search_max", scope: !1763, file: !1671, line: 102, baseType: !886, size: 64, offset: 384)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !1763, file: !1671, line: 104, baseType: !417, size: 32, offset: 448)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1763, file: !1671, line: 105, baseType: !417, size: 32, offset: 480)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "bundle_pos", scope: !1747, file: !1671, line: 135, baseType: !538, size: 96, offset: 1088)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !1747, file: !1671, line: 136, baseType: !375, size: 32, offset: 1184)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1747, file: !1671, line: 139, baseType: !417, size: 32, offset: 1216)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "pat_flag", scope: !1747, file: !1671, line: 139, baseType: !417, size: 32, offset: 1248)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "search_flag", scope: !1747, file: !1671, line: 139, baseType: !417, size: 32, offset: 1280)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "color", scope: !1747, file: !1671, line: 140, baseType: !538, size: 96, offset: 1312)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "frames_limit", scope: !1747, file: !1671, line: 143, baseType: !415, size: 16, offset: 1408)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "margin", scope: !1747, file: !1671, line: 144, baseType: !415, size: 16, offset: 1424)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "pattern_match", scope: !1747, file: !1671, line: 145, baseType: !415, size: 16, offset: 1440)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "motion_model", scope: !1747, file: !1671, line: 148, baseType: !415, size: 16, offset: 1456)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "algorithm_flag", scope: !1747, file: !1671, line: 149, baseType: !417, size: 32, offset: 1472)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "minimum_correlation", scope: !1747, file: !1671, line: 150, baseType: !375, size: 32, offset: 1504)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !1747, file: !1671, line: 152, baseType: !729, size: 64, offset: 1536)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1747, file: !1671, line: 163, baseType: !375, size: 32, offset: 1600)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1747, file: !1671, line: 163, baseType: !375, size: 32, offset: 1632)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "locinf", scope: !1738, file: !1671, line: 261, baseType: !375, size: 32, offset: 192)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "scaleinf", scope: !1738, file: !1671, line: 261, baseType: !375, size: 32, offset: 224)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "rotinf", scope: !1738, file: !1671, line: 261, baseType: !375, size: 32, offset: 256)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1738, file: !1671, line: 263, baseType: !417, size: 32, offset: 288)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !1738, file: !1671, line: 266, baseType: !417, size: 32, offset: 320)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "scale", scope: !1738, file: !1671, line: 267, baseType: !375, size: 32, offset: 352)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "act_track", scope: !1670, file: !1671, line: 347, baseType: !1745, size: 64, offset: 1856)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "act_plane_track", scope: !1670, file: !1671, line: 348, baseType: !1796, size: 64, offset: 1920)
!1796 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1797, size: 64)
!1797 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingPlaneTrack", file: !1671, line: 205, baseType: !1798)
!1798 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingPlaneTrack", file: !1671, line: 186, size: 1024, elements: !1799)
!1799 = !{!1800, !1802, !1803, !1804, !1806, !1807, !1808, !1816, !1817, !1818, !1819, !1820}
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1798, file: !1671, line: 187, baseType: !1801, size: 64)
!1801 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1798, size: 64)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1798, file: !1671, line: 187, baseType: !1801, size: 64, offset: 64)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1798, file: !1671, line: 189, baseType: !432, size: 512, offset: 128)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "point_tracks", scope: !1798, file: !1671, line: 191, baseType: !1805, size: 64, offset: 640)
!1805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1745, size: 64)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "point_tracksnr", scope: !1798, file: !1671, line: 193, baseType: !417, size: 32, offset: 704)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1798, file: !1671, line: 193, baseType: !417, size: 32, offset: 736)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !1798, file: !1671, line: 195, baseType: !1809, size: 64, offset: 768)
!1809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1810, size: 64)
!1810 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingPlaneMarker", file: !1671, line: 184, baseType: !1811)
!1811 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingPlaneMarker", file: !1671, line: 166, size: 320, elements: !1812)
!1812 = !{!1813, !1814, !1815}
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "corners", scope: !1811, file: !1671, line: 180, baseType: !1767, size: 256)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !1811, file: !1671, line: 182, baseType: !417, size: 32, offset: 256)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1811, file: !1671, line: 183, baseType: !417, size: 32, offset: 288)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "markersnr", scope: !1798, file: !1671, line: 196, baseType: !417, size: 32, offset: 832)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1798, file: !1671, line: 198, baseType: !417, size: 32, offset: 864)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "image", scope: !1798, file: !1671, line: 200, baseType: !1022, size: 64, offset: 896)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "image_opacity", scope: !1798, file: !1671, line: 201, baseType: !375, size: 32, offset: 960)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "last_marker", scope: !1798, file: !1671, line: 204, baseType: !417, size: 32, offset: 992)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !1670, file: !1671, line: 350, baseType: !442, size: 128, offset: 1984)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "objectnr", scope: !1670, file: !1671, line: 351, baseType: !417, size: 32, offset: 2112)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "tot_object", scope: !1670, file: !1671, line: 351, baseType: !417, size: 32, offset: 2144)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !1670, file: !1671, line: 353, baseType: !1825, size: 64, offset: 2176)
!1825 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1826, size: 64)
!1826 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingStats", file: !1671, line: 297, baseType: !1827)
!1827 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingStats", file: !1671, line: 295, size: 2048, elements: !1828)
!1828 = !{!1829}
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "message", scope: !1827, file: !1671, line: 296, baseType: !1830, size: 2048)
!1830 = !DICompositeType(tag: DW_TAG_array_type, baseType: !402, size: 2048, elements: !1831)
!1831 = !{!1832}
!1832 = !DISubrange(count: 256)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "dopesheet", scope: !1670, file: !1671, line: 355, baseType: !1834, size: 384, offset: 2240)
!1834 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingDopesheet", file: !1671, line: 338, baseType: !1835)
!1835 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingDopesheet", file: !1671, line: 322, size: 384, elements: !1836)
!1836 = !{!1837, !1838, !1839, !1840, !1841, !1842, !1843}
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !1835, file: !1671, line: 323, baseType: !417, size: 32)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "sort_method", scope: !1835, file: !1671, line: 325, baseType: !415, size: 16, offset: 32)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1835, file: !1671, line: 326, baseType: !415, size: 16, offset: 48)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "coverage_segments", scope: !1835, file: !1671, line: 331, baseType: !442, size: 128, offset: 64)
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1835, file: !1671, line: 334, baseType: !442, size: 128, offset: 192)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "tot_channel", scope: !1835, file: !1671, line: 335, baseType: !417, size: 32, offset: 320)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1835, file: !1671, line: 337, baseType: !417, size: 32, offset: 352)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "tracking_context", scope: !1652, file: !1653, line: 81, baseType: !386, size: 64, offset: 12224)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "proxy", scope: !1652, file: !1653, line: 85, baseType: !1846, size: 6208, offset: 12288)
!1846 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieClipProxy", file: !1653, line: 55, size: 6208, elements: !1847)
!1847 = !{!1848, !1849, !1850, !1851, !1852}
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !1846, file: !1653, line: 56, baseType: !1481, size: 6144)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "tc", scope: !1846, file: !1653, line: 58, baseType: !415, size: 16, offset: 6144)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !1846, file: !1653, line: 59, baseType: !415, size: 16, offset: 6160)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "build_size_flag", scope: !1846, file: !1653, line: 60, baseType: !415, size: 16, offset: 6176)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "build_tc_flag", scope: !1846, file: !1653, line: 61, baseType: !415, size: 16, offset: 6192)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1652, file: !1653, line: 86, baseType: !417, size: 32, offset: 18496)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1652, file: !1653, line: 88, baseType: !417, size: 32, offset: 18528)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !1652, file: !1653, line: 90, baseType: !417, size: 32, offset: 18560)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "frame_offset", scope: !1652, file: !1653, line: 94, baseType: !417, size: 32, offset: 18592)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace_settings", scope: !1652, file: !1653, line: 100, baseType: !1084, size: 512, offset: 18624)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask", scope: !897, file: !731, line: 1289, baseType: !868, size: 64, offset: 37184)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask_modal", scope: !897, file: !731, line: 1290, baseType: !868, size: 64, offset: 37248)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "view_settings", scope: !897, file: !731, line: 1293, baseType: !1259, size: 1280, offset: 37312)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "display_settings", scope: !897, file: !731, line: 1294, baseType: !1317, size: 512, offset: 38592)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "sequencer_colorspace_settings", scope: !897, file: !731, line: 1295, baseType: !1084, size: 512, offset: 39104)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_world", scope: !897, file: !731, line: 1298, baseType: !1864, size: 64, offset: 39616)
!1864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1865, size: 64)
!1865 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyWorld", file: !731, line: 1298, flags: DIFlagFwdDecl)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !893, file: !892, line: 53, baseType: !417, size: 32, offset: 64)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "frames", scope: !893, file: !892, line: 54, baseType: !417, size: 32, offset: 96)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !893, file: !892, line: 55, baseType: !417, size: 32, offset: 128)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !893, file: !892, line: 55, baseType: !417, size: 32, offset: 160)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "fie_ima", scope: !893, file: !892, line: 56, baseType: !402, size: 8, offset: 192)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "cycl", scope: !893, file: !892, line: 56, baseType: !402, size: 8, offset: 200)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !893, file: !892, line: 57, baseType: !402, size: 8, offset: 208)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !893, file: !892, line: 57, baseType: !402, size: 8, offset: 216)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "multi_index", scope: !893, file: !892, line: 59, baseType: !415, size: 16, offset: 224)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "layer", scope: !893, file: !892, line: 59, baseType: !415, size: 16, offset: 240)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "pass", scope: !893, file: !892, line: 59, baseType: !415, size: 16, offset: 256)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !893, file: !892, line: 61, baseType: !415, size: 16, offset: 272)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !893, file: !892, line: 63, baseType: !417, size: 32, offset: 288)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "lodlevels", scope: !651, file: !6, line: 293, baseType: !442, size: 128, offset: 11200)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "currentlod", scope: !651, file: !6, line: 294, baseType: !1881, size: 64, offset: 11328)
!1881 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1882, size: 64)
!1882 = !DIDerivedType(tag: DW_TAG_typedef, name: "LodLevel", file: !6, line: 113, baseType: !1883)
!1883 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "LodLevel", file: !6, line: 108, size: 256, elements: !1884)
!1884 = !{!1885, !1887, !1888, !1889, !1890}
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1883, file: !6, line: 109, baseType: !1886, size: 64)
!1886 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1883, size: 64)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1883, file: !6, line: 109, baseType: !1886, size: 64, offset: 64)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !1883, file: !6, line: 110, baseType: !650, size: 64, offset: 128)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1883, file: !6, line: 111, baseType: !417, size: 32, offset: 192)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "distance", scope: !1883, file: !6, line: 112, baseType: !375, size: 32, offset: 224)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "iterations", scope: !647, file: !343, line: 137, baseType: !415, size: 16, offset: 64)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !647, file: !343, line: 138, baseType: !415, size: 16, offset: 80)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "rootbone", scope: !647, file: !343, line: 139, baseType: !415, size: 16, offset: 96)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "max_rootbone", scope: !647, file: !343, line: 140, baseType: !415, size: 16, offset: 112)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "subtarget", scope: !647, file: !343, line: 141, baseType: !432, size: 512, offset: 128)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "poletar", scope: !647, file: !343, line: 142, baseType: !650, size: 64, offset: 640)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "polesubtarget", scope: !647, file: !343, line: 143, baseType: !432, size: 512, offset: 704)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "poleangle", scope: !647, file: !343, line: 144, baseType: !375, size: 32, offset: 1216)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !647, file: !343, line: 145, baseType: !375, size: 32, offset: 1248)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "orientweight", scope: !647, file: !343, line: 146, baseType: !375, size: 32, offset: 1280)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "grabtarget", scope: !647, file: !343, line: 147, baseType: !538, size: 96, offset: 1312)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !647, file: !343, line: 148, baseType: !415, size: 16, offset: 1408)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !647, file: !343, line: 149, baseType: !415, size: 16, offset: 1424)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "dist", scope: !647, file: !343, line: 150, baseType: !375, size: 32, offset: 1440)
!1905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1906, size: 64)
!1906 = !DIDerivedType(tag: DW_TAG_typedef, name: "bSplineIKConstraint", file: !343, line: 176, baseType: !1907)
!1907 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bSplineIKConstraint", file: !343, line: 164, size: 192, elements: !1908)
!1908 = !{!1909, !1910, !1911, !1912, !1913, !1914}
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "tar", scope: !1907, file: !343, line: 166, baseType: !650, size: 64)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "points", scope: !1907, file: !343, line: 169, baseType: !374, size: 64, offset: 64)
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "numpoints", scope: !1907, file: !343, line: 170, baseType: !415, size: 16, offset: 128)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "chainlen", scope: !1907, file: !343, line: 171, baseType: !415, size: 16, offset: 144)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1907, file: !343, line: 174, baseType: !415, size: 16, offset: 160)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "xzScaleMode", scope: !1907, file: !343, line: 175, baseType: !415, size: 16, offset: 176)
!1915 = !{!0, !1916, !1922, !1925, !1931, !1934, !1939, !1942, !1945, !1948, !1950, !1954, !1958, !1961, !1964, !1966, !1970, !1972, !1974}
!1916 = !DIGlobalVariableExpression(var: !1917, expr: !DIExpression())
!1917 = distinct !DIGlobalVariable(name: "co", scope: !2, file: !3, line: 615, type: !1918, isLocal: true, isDefinition: true)
!1918 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1919, size: 512, elements: !1920)
!1919 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !375)
!1920 = !{!1921}
!1921 = !DISubrange(count: 16)
!1922 = !DIGlobalVariableExpression(var: !1923, expr: !DIExpression())
!1923 = distinct !DIGlobalVariable(name: "bcolor", scope: !2, file: !3, line: 75, type: !1924, isLocal: true, isDefinition: true)
!1924 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !635, size: 64)
!1925 = !DIGlobalVariableExpression(var: !1926, expr: !DIExpression())
!1926 = distinct !DIGlobalVariable(name: "displist", scope: !1927, file: !3, line: 423, type: !621, isLocal: true, isDefinition: true)
!1927 = distinct !DISubprogram(name: "draw_bonevert_solid", scope: !3, file: !3, line: 421, type: !1928, scopeLine: 422, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1930)
!1928 = !DISubroutineType(types: !1929)
!1929 = !{null}
!1930 = !{}
!1931 = !DIGlobalVariableExpression(var: !1932, expr: !DIExpression())
!1932 = distinct !DIGlobalVariable(name: "displist", scope: !1933, file: !3, line: 392, type: !621, isLocal: true, isDefinition: true)
!1933 = distinct !DISubprogram(name: "draw_bonevert", scope: !3, file: !3, line: 390, type: !1928, scopeLine: 391, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1930)
!1934 = !DIGlobalVariableExpression(var: !1935, expr: !DIExpression())
!1935 = distinct !DIGlobalVariable(name: "displist", scope: !1936, file: !3, line: 321, type: !621, isLocal: true, isDefinition: true)
!1936 = distinct !DISubprogram(name: "drawsolidcube_size", scope: !3, file: !3, line: 319, type: !1937, scopeLine: 320, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1930)
!1937 = !DISubroutineType(types: !1938)
!1938 = !{null, !375, !375, !375}
!1939 = !DIGlobalVariableExpression(var: !1940, expr: !DIExpression())
!1940 = distinct !DIGlobalVariable(name: "cube", scope: !2, file: !3, line: 308, type: !1941, isLocal: true, isDefinition: true)
!1941 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1919, size: 768, elements: !679)
!1942 = !DIGlobalVariableExpression(var: !1943, expr: !DIExpression())
!1943 = distinct !DIGlobalVariable(name: "displist", scope: !1944, file: !3, line: 363, type: !621, isLocal: true, isDefinition: true)
!1944 = distinct !DISubprogram(name: "drawcube_size", scope: !3, file: !3, line: 361, type: !1937, scopeLine: 362, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1930)
!1945 = !DIGlobalVariableExpression(var: !1946, expr: !DIExpression())
!1946 = distinct !DIGlobalVariable(name: "displist", scope: !1947, file: !3, line: 511, type: !621, isLocal: true, isDefinition: true)
!1947 = distinct !DISubprogram(name: "draw_bone_solid_octahedral", scope: !3, file: !3, line: 509, type: !1928, scopeLine: 510, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1930)
!1948 = !DIGlobalVariableExpression(var: !1949, expr: !DIExpression())
!1949 = distinct !DIGlobalVariable(name: "bone_octahedral_solid_normals", scope: !2, file: !3, line: 469, type: !1941, isLocal: true, isDefinition: true)
!1950 = !DIGlobalVariableExpression(var: !1951, expr: !DIExpression())
!1951 = distinct !DIGlobalVariable(name: "bone_octahedral_verts", scope: !2, file: !3, line: 444, type: !1952, isLocal: true, isDefinition: true)
!1952 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1919, size: 576, elements: !1953)
!1953 = !{!1257, !540}
!1954 = !DIGlobalVariableExpression(var: !1955, expr: !DIExpression())
!1955 = distinct !DIGlobalVariable(name: "bone_octahedral_solid_tris", scope: !2, file: !3, line: 456, type: !1956, isLocal: true, isDefinition: true)
!1956 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1957, size: 768, elements: !679)
!1957 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7)
!1958 = !DIGlobalVariableExpression(var: !1959, expr: !DIExpression())
!1959 = distinct !DIGlobalVariable(name: "displist", scope: !1960, file: !3, line: 482, type: !621, isLocal: true, isDefinition: true)
!1960 = distinct !DISubprogram(name: "draw_bone_octahedral", scope: !3, file: !3, line: 480, type: !1928, scopeLine: 481, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1930)
!1961 = !DIGlobalVariableExpression(var: !1962, expr: !DIExpression())
!1962 = distinct !DIGlobalVariable(name: "bone_octahedral_wire_sides", scope: !2, file: !3, line: 453, type: !1963, isLocal: true, isDefinition: true)
!1963 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1957, size: 256, elements: !1041)
!1964 = !DIGlobalVariableExpression(var: !1965, expr: !DIExpression())
!1965 = distinct !DIGlobalVariable(name: "bone_octahedral_wire_square", scope: !2, file: !3, line: 454, type: !1963, isLocal: true, isDefinition: true)
!1966 = !DIGlobalVariableExpression(var: !1967, expr: !DIExpression())
!1967 = distinct !DIGlobalVariable(name: "bm_dot8", scope: !2, file: !3, line: 980, type: !1968, isLocal: true, isDefinition: true)
!1968 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1969, size: 64, elements: !1041)
!1969 = !DIDerivedType(tag: DW_TAG_typedef, name: "GLubyte", file: !622, line: 278, baseType: !620)
!1970 = !DIGlobalVariableExpression(var: !1971, expr: !DIExpression())
!1971 = distinct !DIGlobalVariable(name: "bm_dot7", scope: !2, file: !3, line: 983, type: !1968, isLocal: true, isDefinition: true)
!1972 = !DIGlobalVariableExpression(var: !1973, expr: !DIExpression())
!1973 = distinct !DIGlobalVariable(name: "bm_dot6", scope: !2, file: !3, line: 979, type: !1968, isLocal: true, isDefinition: true)
!1974 = !DIGlobalVariableExpression(var: !1975, expr: !DIExpression())
!1975 = distinct !DIGlobalVariable(name: "bm_dot5", scope: !2, file: !3, line: 982, type: !1968, isLocal: true, isDefinition: true)
!1976 = !{i32 7, !"Dwarf Version", i32 4}
!1977 = !{i32 2, !"Debug Info Version", i32 3}
!1978 = !{i32 1, !"wchar_size", i32 4}
!1979 = !{!"clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)"}
!1980 = distinct !DISubprogram(name: "draw_armature", scope: !3, file: !3, line: 2600, type: !1981, scopeLine: 2603, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1930)
!1981 = !DISubroutineType(types: !1982)
!1982 = !{!620, !1983, !1985, !2070, !2143, !2145, !2145, !2146, !2147}
!1983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1984, size: 64)
!1984 = !DIDerivedType(tag: DW_TAG_typedef, name: "Scene", file: !731, line: 1299, baseType: !897)
!1985 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1986, size: 64)
!1986 = !DIDerivedType(tag: DW_TAG_typedef, name: "View3D", file: !1987, line: 221, baseType: !1988)
!1987 = !DIFile(filename: "blender/source/blender/makesdna/DNA_view3d_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1988 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "View3D", file: !1987, line: 151, size: 3008, elements: !1989)
!1989 = !{!1990, !1993, !1994, !1995, !1996, !1997, !1999, !2000, !2001, !2002, !2003, !2004, !2005, !2006, !2007, !2008, !2009, !2010, !2011, !2012, !2035, !2037, !2038, !2039, !2040, !2041, !2042, !2043, !2044, !2045, !2046, !2047, !2048, !2049, !2050, !2051, !2052, !2053, !2054, !2055, !2056, !2057, !2058, !2059, !2060, !2061, !2062, !2063, !2064, !2065, !2066, !2067, !2068, !2069}
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1988, file: !1987, line: 152, baseType: !1991, size: 64)
!1991 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1992, size: 64)
!1992 = !DICompositeType(tag: DW_TAG_structure_type, name: "SpaceLink", file: !322, line: 44, flags: DIFlagFwdDecl)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1988, file: !1987, line: 152, baseType: !1991, size: 64, offset: 64)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "regionbase", scope: !1988, file: !1987, line: 153, baseType: !442, size: 128, offset: 128)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "spacetype", scope: !1988, file: !1987, line: 154, baseType: !417, size: 32, offset: 256)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "blockscale", scope: !1988, file: !1987, line: 155, baseType: !375, size: 32, offset: 288)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "blockhandler", scope: !1988, file: !1987, line: 156, baseType: !1998, size: 128, offset: 320)
!1998 = !DICompositeType(tag: DW_TAG_array_type, baseType: !415, size: 128, elements: !1041)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "viewquat", scope: !1988, file: !1987, line: 158, baseType: !772, size: 128, offset: 448)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "dist", scope: !1988, file: !1987, line: 159, baseType: !375, size: 32, offset: 576)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "bundle_size", scope: !1988, file: !1987, line: 161, baseType: !375, size: 32, offset: 608)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "bundle_drawtype", scope: !1988, file: !1987, line: 162, baseType: !402, size: 8, offset: 640)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1988, file: !1987, line: 163, baseType: !1152, size: 24, offset: 648)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "lay_prev", scope: !1988, file: !1987, line: 165, baseType: !7, size: 32, offset: 672)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "lay_used", scope: !1988, file: !1987, line: 166, baseType: !7, size: 32, offset: 704)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "persp", scope: !1988, file: !1987, line: 168, baseType: !415, size: 16, offset: 736)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "view", scope: !1988, file: !1987, line: 169, baseType: !415, size: 16, offset: 752)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "camera", scope: !1988, file: !1987, line: 171, baseType: !650, size: 64, offset: 768)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "ob_centre", scope: !1988, file: !1987, line: 171, baseType: !650, size: 64, offset: 832)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "render_border", scope: !1988, file: !1987, line: 172, baseType: !1277, size: 128, offset: 896)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "bgpicbase", scope: !1988, file: !1987, line: 174, baseType: !444, size: 128, offset: 1024)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "bgpic", scope: !1988, file: !1987, line: 175, baseType: !2013, size: 64, offset: 1152)
!2013 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2014, size: 64)
!2014 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BGpic", file: !1987, line: 70, size: 832, elements: !2015)
!2015 = !{!2016, !2017, !2018, !2019, !2020, !2021, !2027, !2028, !2029, !2030, !2031, !2032, !2033, !2034}
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2014, file: !1987, line: 71, baseType: !2013, size: 64)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2014, file: !1987, line: 71, baseType: !2013, size: 64, offset: 64)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "ima", scope: !2014, file: !1987, line: 73, baseType: !1022, size: 64, offset: 128)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "iuser", scope: !2014, file: !1987, line: 74, baseType: !893, size: 320, offset: 192)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "clip", scope: !2014, file: !1987, line: 75, baseType: !1651, size: 64, offset: 512)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "cuser", scope: !2014, file: !1987, line: 76, baseType: !2022, size: 64, offset: 576)
!2022 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieClipUser", file: !1653, line: 50, size: 64, elements: !2023)
!2023 = !{!2024, !2025, !2026}
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !2022, file: !1653, line: 51, baseType: !417, size: 32)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "render_size", scope: !2022, file: !1653, line: 52, baseType: !415, size: 16, offset: 32)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "render_flag", scope: !2022, file: !1653, line: 52, baseType: !415, size: 16, offset: 48)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "xof", scope: !2014, file: !1987, line: 77, baseType: !375, size: 32, offset: 640)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "yof", scope: !2014, file: !1987, line: 77, baseType: !375, size: 32, offset: 672)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2014, file: !1987, line: 77, baseType: !375, size: 32, offset: 704)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "blend", scope: !2014, file: !1987, line: 77, baseType: !375, size: 32, offset: 736)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "view", scope: !2014, file: !1987, line: 78, baseType: !415, size: 16, offset: 768)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2014, file: !1987, line: 79, baseType: !415, size: 16, offset: 784)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !2014, file: !1987, line: 80, baseType: !415, size: 16, offset: 800)
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2014, file: !1987, line: 80, baseType: !415, size: 16, offset: 816)
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "localvd", scope: !1988, file: !1987, line: 177, baseType: !2036, size: 64, offset: 1216)
!2036 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1988, size: 64)
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "ob_centre_bone", scope: !1988, file: !1987, line: 179, baseType: !432, size: 512, offset: 1280)
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !1988, file: !1987, line: 181, baseType: !7, size: 32, offset: 1792)
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "layact", scope: !1988, file: !1987, line: 182, baseType: !417, size: 32, offset: 1824)
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "drawtype", scope: !1988, file: !1987, line: 187, baseType: !415, size: 16, offset: 1856)
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "ob_centre_cursor", scope: !1988, file: !1987, line: 188, baseType: !415, size: 16, offset: 1872)
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "scenelock", scope: !1988, file: !1987, line: 189, baseType: !415, size: 16, offset: 1888)
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "around", scope: !1988, file: !1987, line: 189, baseType: !415, size: 16, offset: 1904)
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1988, file: !1987, line: 190, baseType: !415, size: 16, offset: 1920)
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "flag2", scope: !1988, file: !1987, line: 190, baseType: !415, size: 16, offset: 1936)
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "lens", scope: !1988, file: !1987, line: 192, baseType: !375, size: 32, offset: 1952)
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "grid", scope: !1988, file: !1987, line: 192, baseType: !375, size: 32, offset: 1984)
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "near", scope: !1988, file: !1987, line: 193, baseType: !375, size: 32, offset: 2016)
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "far", scope: !1988, file: !1987, line: 193, baseType: !375, size: 32, offset: 2048)
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "ofs", scope: !1988, file: !1987, line: 194, baseType: !538, size: 96, offset: 2080)
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "cursor", scope: !1988, file: !1987, line: 195, baseType: !538, size: 96, offset: 2176)
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "matcap_icon", scope: !1988, file: !1987, line: 197, baseType: !415, size: 16, offset: 2272)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "gridlines", scope: !1988, file: !1987, line: 199, baseType: !415, size: 16, offset: 2288)
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "gridsubdiv", scope: !1988, file: !1987, line: 200, baseType: !415, size: 16, offset: 2304)
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "gridflag", scope: !1988, file: !1987, line: 201, baseType: !402, size: 8, offset: 2320)
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "twtype", scope: !1988, file: !1987, line: 204, baseType: !402, size: 8, offset: 2328)
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "twmode", scope: !1988, file: !1987, line: 204, baseType: !402, size: 8, offset: 2336)
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "twflag", scope: !1988, file: !1987, line: 204, baseType: !402, size: 8, offset: 2344)
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1988, file: !1987, line: 204, baseType: !1220, size: 16, offset: 2352)
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "afterdraw_transp", scope: !1988, file: !1987, line: 207, baseType: !444, size: 128, offset: 2368)
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "afterdraw_xray", scope: !1988, file: !1987, line: 208, baseType: !444, size: 128, offset: 2496)
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "afterdraw_xraytransp", scope: !1988, file: !1987, line: 209, baseType: !444, size: 128, offset: 2624)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "zbuf", scope: !1988, file: !1987, line: 212, baseType: !402, size: 8, offset: 2752)
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "transp", scope: !1988, file: !1987, line: 212, baseType: !402, size: 8, offset: 2760)
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "xray", scope: !1988, file: !1987, line: 212, baseType: !402, size: 8, offset: 2768)
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !1988, file: !1987, line: 213, baseType: !1006, size: 40, offset: 2776)
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "properties_storage", scope: !1988, file: !1987, line: 215, baseType: !386, size: 64, offset: 2816)
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "defmaterial", scope: !1988, file: !1987, line: 216, baseType: !757, size: 64, offset: 2880)
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !1988, file: !1987, line: 219, baseType: !729, size: 64, offset: 2944)
!2070 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2071, size: 64)
!2071 = !DIDerivedType(tag: DW_TAG_typedef, name: "ARegion", file: !2072, line: 267, baseType: !2073)
!2072 = !DIFile(filename: "blender/source/blender/makesdna/DNA_screen_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2073 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ARegion", file: !2072, line: 230, size: 3072, elements: !2074)
!2074 = !{!2075, !2077, !2078, !2113, !2114, !2115, !2116, !2117, !2118, !2119, !2120, !2121, !2122, !2123, !2124, !2125, !2126, !2127, !2128, !2129, !2130, !2133, !2134, !2135, !2136, !2137, !2138, !2139, !2140, !2141, !2142}
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2073, file: !2072, line: 231, baseType: !2076, size: 64)
!2076 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2073, size: 64)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2073, file: !2072, line: 231, baseType: !2076, size: 64, offset: 64)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "v2d", scope: !2073, file: !2072, line: 233, baseType: !2079, size: 1280, offset: 128)
!2079 = !DIDerivedType(tag: DW_TAG_typedef, name: "View2D", file: !2080, line: 71, baseType: !2081)
!2080 = !DIFile(filename: "blender/source/blender/makesdna/DNA_view2d_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2081 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "View2D", file: !2080, line: 40, size: 1280, elements: !2082)
!2082 = !{!2083, !2084, !2085, !2086, !2087, !2088, !2089, !2090, !2091, !2092, !2093, !2094, !2095, !2096, !2097, !2098, !2099, !2100, !2101, !2102, !2103, !2104, !2105, !2106, !2107, !2110}
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "tot", scope: !2081, file: !2080, line: 41, baseType: !1277, size: 128)
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !2081, file: !2080, line: 41, baseType: !1277, size: 128, offset: 128)
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "vert", scope: !2081, file: !2080, line: 42, baseType: !1445, size: 128, offset: 256)
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "hor", scope: !2081, file: !2080, line: 42, baseType: !1445, size: 128, offset: 384)
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !2081, file: !2080, line: 43, baseType: !1445, size: 128, offset: 512)
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !2081, file: !2080, line: 45, baseType: !886, size: 64, offset: 640)
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !2081, file: !2080, line: 45, baseType: !886, size: 64, offset: 704)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "minzoom", scope: !2081, file: !2080, line: 46, baseType: !375, size: 32, offset: 768)
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "maxzoom", scope: !2081, file: !2080, line: 46, baseType: !375, size: 32, offset: 800)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "scroll", scope: !2081, file: !2080, line: 48, baseType: !415, size: 16, offset: 832)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "scroll_ui", scope: !2081, file: !2080, line: 49, baseType: !415, size: 16, offset: 848)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "keeptot", scope: !2081, file: !2080, line: 51, baseType: !415, size: 16, offset: 864)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "keepzoom", scope: !2081, file: !2080, line: 52, baseType: !415, size: 16, offset: 880)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "keepofs", scope: !2081, file: !2080, line: 53, baseType: !415, size: 16, offset: 896)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2081, file: !2080, line: 55, baseType: !415, size: 16, offset: 912)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !2081, file: !2080, line: 56, baseType: !415, size: 16, offset: 928)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "winx", scope: !2081, file: !2080, line: 58, baseType: !415, size: 16, offset: 944)
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "winy", scope: !2081, file: !2080, line: 58, baseType: !415, size: 16, offset: 960)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "oldwinx", scope: !2081, file: !2080, line: 59, baseType: !415, size: 16, offset: 976)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "oldwiny", scope: !2081, file: !2080, line: 59, baseType: !415, size: 16, offset: 992)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "around", scope: !2081, file: !2080, line: 61, baseType: !415, size: 16, offset: 1008)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "tab_offset", scope: !2081, file: !2080, line: 63, baseType: !374, size: 64, offset: 1024)
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "tab_num", scope: !2081, file: !2080, line: 64, baseType: !417, size: 32, offset: 1088)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "tab_cur", scope: !2081, file: !2080, line: 65, baseType: !417, size: 32, offset: 1120)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "sms", scope: !2081, file: !2080, line: 68, baseType: !2108, size: 64, offset: 1152)
!2108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2109, size: 64)
!2109 = !DICompositeType(tag: DW_TAG_structure_type, name: "SmoothView2DStore", file: !2080, line: 68, flags: DIFlagFwdDecl)
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "smooth_timer", scope: !2081, file: !2080, line: 69, baseType: !2111, size: 64, offset: 1216)
!2111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2112, size: 64)
!2112 = !DICompositeType(tag: DW_TAG_structure_type, name: "wmTimer", file: !2080, line: 69, flags: DIFlagFwdDecl)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "winrct", scope: !2073, file: !2072, line: 234, baseType: !1445, size: 128, offset: 1408)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "drawrct", scope: !2073, file: !2072, line: 235, baseType: !1445, size: 128, offset: 1536)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "winx", scope: !2073, file: !2072, line: 236, baseType: !415, size: 16, offset: 1664)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "winy", scope: !2073, file: !2072, line: 236, baseType: !415, size: 16, offset: 1680)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "swinid", scope: !2073, file: !2072, line: 238, baseType: !415, size: 16, offset: 1696)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "regiontype", scope: !2073, file: !2072, line: 239, baseType: !415, size: 16, offset: 1712)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "alignment", scope: !2073, file: !2072, line: 240, baseType: !415, size: 16, offset: 1728)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2073, file: !2072, line: 241, baseType: !415, size: 16, offset: 1744)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "fsize", scope: !2073, file: !2072, line: 243, baseType: !375, size: 32, offset: 1760)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "sizex", scope: !2073, file: !2072, line: 244, baseType: !415, size: 16, offset: 1792)
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "sizey", scope: !2073, file: !2072, line: 244, baseType: !415, size: 16, offset: 1808)
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw", scope: !2073, file: !2072, line: 246, baseType: !415, size: 16, offset: 1824)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw_overlay", scope: !2073, file: !2072, line: 247, baseType: !415, size: 16, offset: 1840)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "swap", scope: !2073, file: !2072, line: 248, baseType: !415, size: 16, offset: 1856)
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "overlap", scope: !2073, file: !2072, line: 249, baseType: !415, size: 16, offset: 1872)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "flagfullscreen", scope: !2073, file: !2072, line: 250, baseType: !415, size: 16, offset: 1888)
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2073, file: !2072, line: 251, baseType: !415, size: 16, offset: 1904)
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2073, file: !2072, line: 253, baseType: !2131, size: 64, offset: 1920)
!2131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2132, size: 64)
!2132 = !DICompositeType(tag: DW_TAG_structure_type, name: "ARegionType", file: !2072, line: 42, flags: DIFlagFwdDecl)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "uiblocks", scope: !2073, file: !2072, line: 255, baseType: !442, size: 128, offset: 1984)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "panels", scope: !2073, file: !2072, line: 256, baseType: !442, size: 128, offset: 2112)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "panels_category_active", scope: !2073, file: !2072, line: 257, baseType: !442, size: 128, offset: 2240)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "ui_lists", scope: !2073, file: !2072, line: 258, baseType: !442, size: 128, offset: 2368)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "ui_previews", scope: !2073, file: !2072, line: 259, baseType: !442, size: 128, offset: 2496)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "handlers", scope: !2073, file: !2072, line: 260, baseType: !442, size: 128, offset: 2624)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "panels_category", scope: !2073, file: !2072, line: 261, baseType: !442, size: 128, offset: 2752)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "regiontimer", scope: !2073, file: !2072, line: 263, baseType: !2111, size: 64, offset: 2880)
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "headerstr", scope: !2073, file: !2072, line: 265, baseType: !618, size: 64, offset: 2944)
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "regiondata", scope: !2073, file: !2072, line: 266, baseType: !386, size: 64, offset: 3008)
!2143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2144, size: 64)
!2144 = !DIDerivedType(tag: DW_TAG_typedef, name: "Base", file: !731, line: 75, baseType: !909)
!2145 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !415)
!2146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2147, size: 64)
!2147 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !620)
!2148 = !DILocalVariable(name: "scene", arg: 1, scope: !1980, file: !3, line: 2600, type: !1983)
!2149 = !DILocation(line: 2600, column: 27, scope: !1980)
!2150 = !DILocalVariable(name: "v3d", arg: 2, scope: !1980, file: !3, line: 2600, type: !1985)
!2151 = !DILocation(line: 2600, column: 42, scope: !1980)
!2152 = !DILocalVariable(name: "ar", arg: 3, scope: !1980, file: !3, line: 2600, type: !2070)
!2153 = !DILocation(line: 2600, column: 56, scope: !1980)
!2154 = !DILocalVariable(name: "base", arg: 4, scope: !1980, file: !3, line: 2600, type: !2143)
!2155 = !DILocation(line: 2600, column: 66, scope: !1980)
!2156 = !DILocalVariable(name: "dt", arg: 5, scope: !1980, file: !3, line: 2601, type: !2145)
!2157 = !DILocation(line: 2601, column: 32, scope: !1980)
!2158 = !DILocalVariable(name: "dflag", arg: 6, scope: !1980, file: !3, line: 2601, type: !2145)
!2159 = !DILocation(line: 2601, column: 48, scope: !1980)
!2160 = !DILocalVariable(name: "ob_wire_col", arg: 7, scope: !1980, file: !3, line: 2601, type: !2146)
!2161 = !DILocation(line: 2601, column: 75, scope: !1980)
!2162 = !DILocalVariable(name: "is_outline", arg: 8, scope: !1980, file: !3, line: 2602, type: !2147)
!2163 = !DILocation(line: 2602, column: 31, scope: !1980)
!2164 = !DILocalVariable(name: "ob", scope: !1980, file: !3, line: 2604, type: !2165)
!2165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2166, size: 64)
!2166 = !DIDerivedType(tag: DW_TAG_typedef, name: "Object", file: !6, line: 295, baseType: !651)
!2167 = !DILocation(line: 2604, column: 10, scope: !1980)
!2168 = !DILocation(line: 2604, column: 15, scope: !1980)
!2169 = !DILocation(line: 2604, column: 21, scope: !1980)
!2170 = !DILocalVariable(name: "arm", scope: !1980, file: !3, line: 2605, type: !376)
!2171 = !DILocation(line: 2605, column: 13, scope: !1980)
!2172 = !DILocation(line: 2605, column: 19, scope: !1980)
!2173 = !DILocation(line: 2605, column: 23, scope: !1980)
!2174 = !DILocalVariable(name: "retval", scope: !1980, file: !3, line: 2606, type: !620)
!2175 = !DILocation(line: 2606, column: 7, scope: !1980)
!2176 = !DILocation(line: 2608, column: 6, scope: !2177)
!2177 = distinct !DILexicalBlock(scope: !1980, file: !3, line: 2608, column: 6)
!2178 = !DILocation(line: 2608, column: 11, scope: !2177)
!2179 = !DILocation(line: 2608, column: 17, scope: !2177)
!2180 = !DILocation(line: 2608, column: 6, scope: !1980)
!2181 = !DILocation(line: 2609, column: 3, scope: !2177)
!2182 = !DILocation(line: 2611, column: 6, scope: !2183)
!2183 = distinct !DILexicalBlock(scope: !1980, file: !3, line: 2611, column: 6)
!2184 = !DILocation(line: 2611, column: 9, scope: !2183)
!2185 = !DILocation(line: 2611, column: 19, scope: !2183)
!2186 = !DILocation(line: 2611, column: 23, scope: !2183)
!2187 = !DILocation(line: 2611, column: 6, scope: !1980)
!2188 = !DILocalVariable(name: "white", scope: !2189, file: !3, line: 2613, type: !2190)
!2189 = distinct !DILexicalBlock(scope: !2183, file: !3, line: 2611, column: 64)
!2190 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1919, size: 128, elements: !640)
!2191 = !DILocation(line: 2613, column: 15, scope: !2189)
!2192 = !DILocation(line: 2614, column: 48, scope: !2189)
!2193 = !DILocation(line: 2614, column: 3, scope: !2189)
!2194 = !DILocation(line: 2615, column: 3, scope: !2189)
!2195 = !DILocation(line: 2616, column: 16, scope: !2189)
!2196 = !DILocation(line: 2616, column: 20, scope: !2189)
!2197 = !DILocation(line: 2616, column: 30, scope: !2189)
!2198 = !DILocation(line: 2616, column: 15, scope: !2189)
!2199 = !DILocation(line: 2616, column: 3, scope: !2189)
!2200 = !DILocation(line: 2617, column: 2, scope: !2189)
!2201 = !DILocation(line: 2621, column: 6, scope: !2202)
!2202 = distinct !DILexicalBlock(scope: !1980, file: !3, line: 2621, column: 6)
!2203 = !DILocation(line: 2621, column: 11, scope: !2202)
!2204 = !DILocation(line: 2621, column: 6, scope: !1980)
!2205 = !DILocation(line: 2622, column: 3, scope: !2206)
!2206 = distinct !DILexicalBlock(scope: !2202, file: !3, line: 2621, column: 17)
!2207 = !DILocation(line: 2622, column: 8, scope: !2206)
!2208 = !DILocation(line: 2622, column: 13, scope: !2206)
!2209 = !DILocation(line: 2623, column: 15, scope: !2206)
!2210 = !DILocation(line: 2623, column: 20, scope: !2206)
!2211 = !DILocation(line: 2623, column: 24, scope: !2206)
!2212 = !DILocation(line: 2623, column: 28, scope: !2206)
!2213 = !DILocation(line: 2623, column: 3, scope: !2206)
!2214 = !DILocation(line: 2624, column: 3, scope: !2206)
!2215 = !DILocation(line: 2624, column: 8, scope: !2206)
!2216 = !DILocation(line: 2624, column: 13, scope: !2206)
!2217 = !DILocation(line: 2625, column: 2, scope: !2206)
!2218 = !DILocation(line: 2628, column: 7, scope: !2219)
!2219 = distinct !DILexicalBlock(scope: !2220, file: !3, line: 2628, column: 7)
!2220 = distinct !DILexicalBlock(scope: !2202, file: !3, line: 2626, column: 7)
!2221 = !DILocation(line: 2628, column: 11, scope: !2219)
!2222 = !DILocation(line: 2628, column: 16, scope: !2219)
!2223 = !DILocation(line: 2628, column: 19, scope: !2219)
!2224 = !DILocation(line: 2628, column: 23, scope: !2219)
!2225 = !DILocation(line: 2628, column: 29, scope: !2219)
!2226 = !DILocation(line: 2628, column: 38, scope: !2219)
!2227 = !DILocation(line: 2628, column: 7, scope: !2220)
!2228 = !DILocation(line: 2630, column: 10, scope: !2229)
!2229 = distinct !DILexicalBlock(scope: !2230, file: !3, line: 2630, column: 8)
!2230 = distinct !DILexicalBlock(scope: !2219, file: !3, line: 2628, column: 45)
!2231 = !DILocation(line: 2630, column: 16, scope: !2229)
!2232 = !DILocation(line: 2630, column: 21, scope: !2229)
!2233 = !DILocation(line: 2630, column: 8, scope: !2230)
!2234 = !DILocation(line: 2631, column: 11, scope: !2235)
!2235 = distinct !DILexicalBlock(scope: !2236, file: !3, line: 2631, column: 9)
!2236 = distinct !DILexicalBlock(scope: !2229, file: !3, line: 2630, column: 38)
!2237 = !DILocation(line: 2631, column: 13, scope: !2235)
!2238 = !DILocation(line: 2631, column: 9, scope: !2236)
!2239 = !DILocation(line: 2640, column: 10, scope: !2240)
!2240 = distinct !DILexicalBlock(scope: !2241, file: !3, line: 2640, column: 10)
!2241 = distinct !DILexicalBlock(scope: !2235, file: !3, line: 2631, column: 26)
!2242 = !DILocation(line: 2640, column: 14, scope: !2240)
!2243 = !DILocation(line: 2640, column: 19, scope: !2240)
!2244 = !DILocation(line: 2640, column: 10, scope: !2241)
!2245 = !DILocation(line: 2641, column: 7, scope: !2246)
!2246 = distinct !DILexicalBlock(scope: !2240, file: !3, line: 2640, column: 35)
!2247 = !DILocation(line: 2641, column: 12, scope: !2246)
!2248 = !DILocation(line: 2641, column: 17, scope: !2246)
!2249 = !DILocation(line: 2642, column: 6, scope: !2246)
!2250 = !DILocation(line: 2643, column: 5, scope: !2241)
!2251 = !DILocation(line: 2644, column: 14, scope: !2252)
!2252 = distinct !DILexicalBlock(scope: !2235, file: !3, line: 2644, column: 14)
!2253 = !DILocation(line: 2644, column: 18, scope: !2252)
!2254 = !DILocation(line: 2644, column: 23, scope: !2252)
!2255 = !DILocation(line: 2644, column: 14, scope: !2235)
!2256 = !DILocation(line: 2645, column: 10, scope: !2257)
!2257 = distinct !DILexicalBlock(scope: !2258, file: !3, line: 2645, column: 10)
!2258 = distinct !DILexicalBlock(scope: !2252, file: !3, line: 2644, column: 39)
!2259 = !DILocation(line: 2645, column: 15, scope: !2257)
!2260 = !DILocation(line: 2645, column: 25, scope: !2257)
!2261 = !DILocation(line: 2645, column: 10, scope: !2258)
!2262 = !DILocation(line: 2646, column: 30, scope: !2263)
!2263 = distinct !DILexicalBlock(scope: !2257, file: !3, line: 2645, column: 45)
!2264 = !DILocation(line: 2646, column: 37, scope: !2263)
!2265 = !DILocation(line: 2646, column: 42, scope: !2263)
!2266 = !DILocation(line: 2646, column: 46, scope: !2263)
!2267 = !DILocation(line: 2646, column: 7, scope: !2263)
!2268 = !DILocation(line: 2647, column: 6, scope: !2263)
!2269 = !DILocation(line: 2648, column: 15, scope: !2270)
!2270 = distinct !DILexicalBlock(scope: !2257, file: !3, line: 2648, column: 15)
!2271 = !DILocation(line: 2648, column: 20, scope: !2270)
!2272 = !DILocation(line: 2648, column: 30, scope: !2270)
!2273 = !DILocation(line: 2648, column: 15, scope: !2257)
!2274 = !DILocation(line: 2649, column: 29, scope: !2275)
!2275 = distinct !DILexicalBlock(scope: !2270, file: !3, line: 2648, column: 49)
!2276 = !DILocation(line: 2649, column: 36, scope: !2275)
!2277 = !DILocation(line: 2649, column: 41, scope: !2275)
!2278 = !DILocation(line: 2649, column: 45, scope: !2275)
!2279 = !DILocation(line: 2649, column: 7, scope: !2275)
!2280 = !DILocation(line: 2650, column: 6, scope: !2275)
!2281 = !DILocation(line: 2651, column: 15, scope: !2282)
!2282 = distinct !DILexicalBlock(scope: !2270, file: !3, line: 2651, column: 15)
!2283 = !DILocation(line: 2651, column: 20, scope: !2282)
!2284 = !DILocation(line: 2651, column: 30, scope: !2282)
!2285 = !DILocation(line: 2651, column: 15, scope: !2270)
!2286 = !DILocation(line: 2652, column: 11, scope: !2287)
!2287 = distinct !DILexicalBlock(scope: !2288, file: !3, line: 2652, column: 11)
!2288 = distinct !DILexicalBlock(scope: !2282, file: !3, line: 2651, column: 48)
!2289 = !DILocation(line: 2652, column: 16, scope: !2287)
!2290 = !DILocation(line: 2652, column: 11, scope: !2288)
!2291 = !DILocation(line: 2653, column: 25, scope: !2287)
!2292 = !DILocation(line: 2653, column: 32, scope: !2287)
!2293 = !DILocation(line: 2653, column: 37, scope: !2287)
!2294 = !DILocation(line: 2653, column: 41, scope: !2287)
!2295 = !DILocation(line: 2653, column: 8, scope: !2287)
!2296 = !DILocation(line: 2654, column: 6, scope: !2288)
!2297 = !DILocation(line: 2655, column: 11, scope: !2298)
!2298 = distinct !DILexicalBlock(scope: !2258, file: !3, line: 2655, column: 10)
!2299 = !DILocation(line: 2655, column: 17, scope: !2298)
!2300 = !DILocation(line: 2655, column: 34, scope: !2298)
!2301 = !DILocation(line: 2655, column: 10, scope: !2258)
!2302 = !DILocation(line: 2656, column: 11, scope: !2303)
!2303 = distinct !DILexicalBlock(scope: !2304, file: !3, line: 2656, column: 11)
!2304 = distinct !DILexicalBlock(scope: !2298, file: !3, line: 2655, column: 40)
!2305 = !DILocation(line: 2656, column: 17, scope: !2303)
!2306 = !DILocation(line: 2656, column: 14, scope: !2303)
!2307 = !DILocation(line: 2656, column: 11, scope: !2304)
!2308 = !DILocation(line: 2657, column: 8, scope: !2303)
!2309 = !DILocation(line: 2657, column: 13, scope: !2303)
!2310 = !DILocation(line: 2657, column: 18, scope: !2303)
!2311 = !DILocation(line: 2658, column: 16, scope: !2312)
!2312 = distinct !DILexicalBlock(scope: !2303, file: !3, line: 2658, column: 16)
!2313 = !DILocation(line: 2658, column: 22, scope: !2312)
!2314 = !DILocation(line: 2658, column: 26, scope: !2312)
!2315 = !DILocation(line: 2658, column: 33, scope: !2312)
!2316 = !DILocation(line: 2658, column: 38, scope: !2312)
!2317 = !DILocation(line: 2658, column: 16, scope: !2303)
!2318 = !DILocation(line: 2659, column: 12, scope: !2319)
!2319 = distinct !DILexicalBlock(scope: !2320, file: !3, line: 2659, column: 12)
!2320 = distinct !DILexicalBlock(scope: !2312, file: !3, line: 2658, column: 63)
!2321 = !DILocation(line: 2659, column: 49, scope: !2319)
!2322 = !DILocation(line: 2659, column: 18, scope: !2319)
!2323 = !DILocation(line: 2659, column: 15, scope: !2319)
!2324 = !DILocation(line: 2659, column: 12, scope: !2320)
!2325 = !DILocation(line: 2660, column: 9, scope: !2319)
!2326 = !DILocation(line: 2660, column: 14, scope: !2319)
!2327 = !DILocation(line: 2660, column: 19, scope: !2319)
!2328 = !DILocation(line: 2661, column: 7, scope: !2320)
!2329 = !DILocation(line: 2662, column: 23, scope: !2304)
!2330 = !DILocation(line: 2662, column: 30, scope: !2304)
!2331 = !DILocation(line: 2662, column: 35, scope: !2304)
!2332 = !DILocation(line: 2662, column: 39, scope: !2304)
!2333 = !DILocation(line: 2662, column: 7, scope: !2304)
!2334 = !DILocation(line: 2663, column: 6, scope: !2304)
!2335 = !DILocation(line: 2664, column: 5, scope: !2258)
!2336 = !DILocation(line: 2665, column: 4, scope: !2236)
!2337 = !DILocation(line: 2666, column: 20, scope: !2230)
!2338 = !DILocation(line: 2666, column: 27, scope: !2230)
!2339 = !DILocation(line: 2666, column: 32, scope: !2230)
!2340 = !DILocation(line: 2666, column: 36, scope: !2230)
!2341 = !DILocation(line: 2666, column: 42, scope: !2230)
!2342 = !DILocation(line: 2666, column: 46, scope: !2230)
!2343 = !DILocation(line: 2666, column: 60, scope: !2230)
!2344 = !DILocation(line: 2666, column: 66, scope: !2230)
!2345 = !DILocation(line: 2666, column: 59, scope: !2230)
!2346 = !DILocation(line: 2666, column: 86, scope: !2230)
!2347 = !DILocation(line: 2666, column: 4, scope: !2230)
!2348 = !DILocation(line: 2667, column: 4, scope: !2230)
!2349 = !DILocation(line: 2667, column: 9, scope: !2230)
!2350 = !DILocation(line: 2667, column: 14, scope: !2230)
!2351 = !DILocation(line: 2669, column: 8, scope: !2352)
!2352 = distinct !DILexicalBlock(scope: !2230, file: !3, line: 2669, column: 8)
!2353 = !DILocation(line: 2669, column: 12, scope: !2352)
!2354 = !DILocation(line: 2669, column: 17, scope: !2352)
!2355 = !DILocation(line: 2669, column: 8, scope: !2230)
!2356 = !DILocation(line: 2670, column: 5, scope: !2352)
!2357 = !DILocation(line: 2671, column: 3, scope: !2230)
!2358 = !DILocation(line: 2673, column: 11, scope: !2359)
!2359 = distinct !DILexicalBlock(scope: !2219, file: !3, line: 2672, column: 8)
!2360 = !DILocation(line: 2677, column: 2, scope: !1980)
!2361 = !DILocation(line: 2679, column: 9, scope: !1980)
!2362 = !DILocation(line: 2679, column: 2, scope: !1980)
!2363 = !DILocation(line: 2680, column: 1, scope: !1980)
!2364 = distinct !DISubprogram(name: "draw_ebones", scope: !3, file: !3, line: 2104, type: !2365, scopeLine: 2105, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1930)
!2365 = !DISubroutineType(types: !2366)
!2366 = !{null, !1985, !2070, !2165, !2145}
!2367 = !DILocalVariable(name: "v3d", arg: 1, scope: !2364, file: !3, line: 2104, type: !1985)
!2368 = !DILocation(line: 2104, column: 33, scope: !2364)
!2369 = !DILocalVariable(name: "ar", arg: 2, scope: !2364, file: !3, line: 2104, type: !2070)
!2370 = !DILocation(line: 2104, column: 47, scope: !2364)
!2371 = !DILocalVariable(name: "ob", arg: 3, scope: !2364, file: !3, line: 2104, type: !2165)
!2372 = !DILocation(line: 2104, column: 59, scope: !2364)
!2373 = !DILocalVariable(name: "dt", arg: 4, scope: !2364, file: !3, line: 2104, type: !2145)
!2374 = !DILocation(line: 2104, column: 75, scope: !2364)
!2375 = !DILocalVariable(name: "rv3d", scope: !2364, file: !3, line: 2106, type: !2376)
!2376 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2377, size: 64)
!2377 = !DIDerivedType(tag: DW_TAG_typedef, name: "RegionView3D", file: !1987, line: 148, baseType: !2378)
!2378 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RegionView3D", file: !1987, line: 85, size: 7040, elements: !2379)
!2379 = !{!2380, !2381, !2382, !2383, !2384, !2385, !2386, !2387, !2390, !2391, !2392, !2394, !2397, !2411, !2412, !2415, !2416, !2417, !2418, !2419, !2420, !2421, !2422, !2423, !2424, !2425, !2426, !2427, !2428, !2429, !2430, !2431, !2432, !2433, !2434, !2435, !2436, !2437, !2438, !2439}
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "winmat", scope: !2378, file: !1987, line: 87, baseType: !549, size: 512)
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "viewmat", scope: !2378, file: !1987, line: 88, baseType: !549, size: 512, offset: 512)
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "viewinv", scope: !2378, file: !1987, line: 89, baseType: !549, size: 512, offset: 1024)
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "persmat", scope: !2378, file: !1987, line: 90, baseType: !549, size: 512, offset: 1536)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "persinv", scope: !2378, file: !1987, line: 91, baseType: !549, size: 512, offset: 2048)
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "viewmatob", scope: !2378, file: !1987, line: 94, baseType: !549, size: 512, offset: 2560)
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "persmatob", scope: !2378, file: !1987, line: 95, baseType: !549, size: 512, offset: 3072)
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "clip", scope: !2378, file: !1987, line: 99, baseType: !2388, size: 768, offset: 3584)
!2388 = !DICompositeType(tag: DW_TAG_array_type, baseType: !375, size: 768, elements: !2389)
!2389 = !{!1257, !551}
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "clip_local", scope: !2378, file: !1987, line: 100, baseType: !2388, size: 768, offset: 4352)
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "clipbb", scope: !2378, file: !1987, line: 101, baseType: !674, size: 64, offset: 5120)
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "localvd", scope: !2378, file: !1987, line: 103, baseType: !2393, size: 64, offset: 5184)
!2393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2378, size: 64)
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "render_engine", scope: !2378, file: !1987, line: 104, baseType: !2395, size: 64, offset: 5248)
!2395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2396, size: 64)
!2396 = !DICompositeType(tag: DW_TAG_structure_type, name: "RenderEngine", file: !1987, line: 44, flags: DIFlagFwdDecl)
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "depths", scope: !2378, file: !1987, line: 105, baseType: !2398, size: 64, offset: 5312)
!2398 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2399, size: 64)
!2399 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ViewDepths", file: !2400, line: 77, size: 320, elements: !2401)
!2400 = !DIFile(filename: "blender/source/blender/editors/include/ED_view3d.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2401 = !{!2402, !2403, !2404, !2405, !2406, !2407, !2410}
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !2399, file: !2400, line: 78, baseType: !813, size: 16)
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !2399, file: !2400, line: 78, baseType: !813, size: 16, offset: 16)
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !2399, file: !2400, line: 79, baseType: !415, size: 16, offset: 32)
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !2399, file: !2400, line: 79, baseType: !415, size: 16, offset: 48)
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "depths", scope: !2399, file: !2400, line: 80, baseType: !374, size: 64, offset: 64)
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "depth_range", scope: !2399, file: !2400, line: 81, baseType: !2408, size: 128, offset: 128)
!2408 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2409, size: 128, elements: !887)
!2409 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "damaged", scope: !2399, file: !2400, line: 83, baseType: !620, size: 8, offset: 256)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "gpuoffscreen", scope: !2378, file: !1987, line: 106, baseType: !386, size: 64, offset: 5376)
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "sms", scope: !2378, file: !1987, line: 109, baseType: !2413, size: 64, offset: 5440)
!2413 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2414, size: 64)
!2414 = !DICompositeType(tag: DW_TAG_structure_type, name: "SmoothView3DStore", file: !1987, line: 46, flags: DIFlagFwdDecl)
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "smooth_timer", scope: !2378, file: !1987, line: 110, baseType: !2111, size: 64, offset: 5504)
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "twmat", scope: !2378, file: !1987, line: 114, baseType: !549, size: 512, offset: 5568)
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "viewquat", scope: !2378, file: !1987, line: 116, baseType: !772, size: 128, offset: 6080)
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "dist", scope: !2378, file: !1987, line: 117, baseType: !375, size: 32, offset: 6208)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "camdx", scope: !2378, file: !1987, line: 118, baseType: !375, size: 32, offset: 6240)
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "camdy", scope: !2378, file: !1987, line: 118, baseType: !375, size: 32, offset: 6272)
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "pixsize", scope: !2378, file: !1987, line: 119, baseType: !375, size: 32, offset: 6304)
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "ofs", scope: !2378, file: !1987, line: 120, baseType: !538, size: 96, offset: 6336)
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "camzoom", scope: !2378, file: !1987, line: 122, baseType: !375, size: 32, offset: 6432)
!2424 = !DIDerivedType(tag: DW_TAG_member, name: "is_persp", scope: !2378, file: !1987, line: 123, baseType: !402, size: 8, offset: 6464)
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "persp", scope: !2378, file: !1987, line: 125, baseType: !402, size: 8, offset: 6472)
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "view", scope: !2378, file: !1987, line: 126, baseType: !402, size: 8, offset: 6480)
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "viewlock", scope: !2378, file: !1987, line: 127, baseType: !402, size: 8, offset: 6488)
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "viewlock_quad", scope: !2378, file: !1987, line: 128, baseType: !402, size: 8, offset: 6496)
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2378, file: !1987, line: 129, baseType: !1152, size: 24, offset: 6504)
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "ofs_lock", scope: !2378, file: !1987, line: 130, baseType: !886, size: 64, offset: 6528)
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "twdrawflag", scope: !2378, file: !1987, line: 132, baseType: !415, size: 16, offset: 6592)
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "rflag", scope: !2378, file: !1987, line: 133, baseType: !415, size: 16, offset: 6608)
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "lviewquat", scope: !2378, file: !1987, line: 137, baseType: !772, size: 128, offset: 6624)
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "lpersp", scope: !2378, file: !1987, line: 138, baseType: !415, size: 16, offset: 6752)
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "lview", scope: !2378, file: !1987, line: 138, baseType: !415, size: 16, offset: 6768)
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "gridview", scope: !2378, file: !1987, line: 140, baseType: !375, size: 32, offset: 6784)
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "tw_idot", scope: !2378, file: !1987, line: 141, baseType: !538, size: 96, offset: 6816)
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "rot_angle", scope: !2378, file: !1987, line: 145, baseType: !375, size: 32, offset: 6912)
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "rot_axis", scope: !2378, file: !1987, line: 146, baseType: !538, size: 96, offset: 6944)
!2440 = !DILocation(line: 2106, column: 16, scope: !2364)
!2441 = !DILocation(line: 2106, column: 23, scope: !2364)
!2442 = !DILocation(line: 2106, column: 27, scope: !2364)
!2443 = !DILocalVariable(name: "eBone", scope: !2364, file: !3, line: 2107, type: !616)
!2444 = !DILocation(line: 2107, column: 12, scope: !2364)
!2445 = !DILocalVariable(name: "arm", scope: !2364, file: !3, line: 2108, type: !376)
!2446 = !DILocation(line: 2108, column: 13, scope: !2364)
!2447 = !DILocation(line: 2108, column: 19, scope: !2364)
!2448 = !DILocation(line: 2108, column: 23, scope: !2364)
!2449 = !DILocalVariable(name: "smat", scope: !2364, file: !3, line: 2109, type: !549)
!2450 = !DILocation(line: 2109, column: 8, scope: !2364)
!2451 = !DILocalVariable(name: "imat", scope: !2364, file: !3, line: 2109, type: !549)
!2452 = !DILocation(line: 2109, column: 20, scope: !2364)
!2453 = !DILocalVariable(name: "bmat", scope: !2364, file: !3, line: 2109, type: !549)
!2454 = !DILocation(line: 2109, column: 32, scope: !2364)
!2455 = !DILocalVariable(name: "index", scope: !2364, file: !3, line: 2110, type: !7)
!2456 = !DILocation(line: 2110, column: 15, scope: !2364)
!2457 = !DILocalVariable(name: "flag", scope: !2364, file: !3, line: 2111, type: !417)
!2458 = !DILocation(line: 2111, column: 6, scope: !2364)
!2459 = !DILocation(line: 2114, column: 2, scope: !2364)
!2460 = !DILocation(line: 2114, column: 7, scope: !2364)
!2461 = !DILocation(line: 2114, column: 18, scope: !2364)
!2462 = !DILocation(line: 2116, column: 2, scope: !2364)
!2463 = !DILocation(line: 2119, column: 6, scope: !2464)
!2464 = distinct !DILexicalBlock(scope: !2364, file: !3, line: 2119, column: 6)
!2465 = !DILocation(line: 2119, column: 11, scope: !2464)
!2466 = !DILocation(line: 2119, column: 20, scope: !2464)
!2467 = !DILocation(line: 2119, column: 6, scope: !2364)
!2468 = !DILocation(line: 2121, column: 14, scope: !2469)
!2469 = distinct !DILexicalBlock(scope: !2464, file: !3, line: 2119, column: 37)
!2470 = !DILocation(line: 2121, column: 20, scope: !2469)
!2471 = !DILocation(line: 2121, column: 26, scope: !2469)
!2472 = !DILocation(line: 2121, column: 3, scope: !2469)
!2473 = !DILocation(line: 2122, column: 18, scope: !2469)
!2474 = !DILocation(line: 2122, column: 38, scope: !2469)
!2475 = !DILocation(line: 2122, column: 42, scope: !2469)
!2476 = !DILocation(line: 2122, column: 31, scope: !2469)
!2477 = !DILocation(line: 2122, column: 29, scope: !2469)
!2478 = !DILocation(line: 2122, column: 3, scope: !2469)
!2479 = !DILocation(line: 2123, column: 16, scope: !2469)
!2480 = !DILocation(line: 2123, column: 22, scope: !2469)
!2481 = !DILocation(line: 2123, column: 3, scope: !2469)
!2482 = !DILocation(line: 2126, column: 3, scope: !2469)
!2483 = !DILocation(line: 2129, column: 7, scope: !2484)
!2484 = distinct !DILexicalBlock(scope: !2469, file: !3, line: 2129, column: 7)
!2485 = !DILocation(line: 2129, column: 12, scope: !2484)
!2486 = !DILocation(line: 2129, column: 7, scope: !2469)
!2487 = !DILocation(line: 2129, column: 18, scope: !2484)
!2488 = !DILocation(line: 2131, column: 16, scope: !2489)
!2489 = distinct !DILexicalBlock(scope: !2469, file: !3, line: 2131, column: 3)
!2490 = !DILocation(line: 2131, column: 21, scope: !2489)
!2491 = !DILocation(line: 2131, column: 27, scope: !2489)
!2492 = !DILocation(line: 2131, column: 14, scope: !2489)
!2493 = !DILocation(line: 2131, column: 8, scope: !2489)
!2494 = !DILocation(line: 2131, column: 34, scope: !2495)
!2495 = distinct !DILexicalBlock(scope: !2489, file: !3, line: 2131, column: 3)
!2496 = !DILocation(line: 2131, column: 3, scope: !2489)
!2497 = !DILocation(line: 2132, column: 8, scope: !2498)
!2498 = distinct !DILexicalBlock(scope: !2499, file: !3, line: 2132, column: 8)
!2499 = distinct !DILexicalBlock(scope: !2495, file: !3, line: 2131, column: 62)
!2500 = !DILocation(line: 2132, column: 15, scope: !2498)
!2501 = !DILocation(line: 2132, column: 23, scope: !2498)
!2502 = !DILocation(line: 2132, column: 28, scope: !2498)
!2503 = !DILocation(line: 2132, column: 21, scope: !2498)
!2504 = !DILocation(line: 2132, column: 8, scope: !2499)
!2505 = !DILocation(line: 2133, column: 10, scope: !2506)
!2506 = distinct !DILexicalBlock(scope: !2507, file: !3, line: 2133, column: 9)
!2507 = distinct !DILexicalBlock(scope: !2498, file: !3, line: 2132, column: 35)
!2508 = !DILocation(line: 2133, column: 17, scope: !2506)
!2509 = !DILocation(line: 2133, column: 22, scope: !2506)
!2510 = !DILocation(line: 2133, column: 58, scope: !2506)
!2511 = !DILocation(line: 2133, column: 9, scope: !2507)
!2512 = !DILocation(line: 2134, column: 10, scope: !2513)
!2513 = distinct !DILexicalBlock(scope: !2514, file: !3, line: 2134, column: 10)
!2514 = distinct !DILexicalBlock(scope: !2506, file: !3, line: 2133, column: 64)
!2515 = !DILocation(line: 2134, column: 17, scope: !2513)
!2516 = !DILocation(line: 2134, column: 22, scope: !2513)
!2517 = !DILocation(line: 2134, column: 10, scope: !2514)
!2518 = !DILocation(line: 2135, column: 29, scope: !2513)
!2519 = !DILocation(line: 2135, column: 35, scope: !2513)
!2520 = !DILocation(line: 2135, column: 47, scope: !2513)
!2521 = !DILocation(line: 2135, column: 7, scope: !2513)
!2522 = !DILocation(line: 2136, column: 5, scope: !2514)
!2523 = !DILocation(line: 2137, column: 4, scope: !2507)
!2524 = !DILocation(line: 2138, column: 3, scope: !2499)
!2525 = !DILocation(line: 2131, column: 49, scope: !2495)
!2526 = !DILocation(line: 2131, column: 56, scope: !2495)
!2527 = !DILocation(line: 2131, column: 47, scope: !2495)
!2528 = !DILocation(line: 2131, column: 3, scope: !2495)
!2529 = distinct !{!2529, !2496, !2530}
!2530 = !DILocation(line: 2138, column: 3, scope: !2489)
!2531 = !DILocation(line: 2140, column: 7, scope: !2532)
!2532 = distinct !DILexicalBlock(scope: !2469, file: !3, line: 2140, column: 7)
!2533 = !DILocation(line: 2140, column: 12, scope: !2532)
!2534 = !DILocation(line: 2140, column: 7, scope: !2469)
!2535 = !DILocation(line: 2140, column: 18, scope: !2532)
!2536 = !DILocation(line: 2141, column: 3, scope: !2469)
!2537 = !DILocation(line: 2143, column: 2, scope: !2469)
!2538 = !DILocation(line: 2146, column: 7, scope: !2539)
!2539 = distinct !DILexicalBlock(scope: !2364, file: !3, line: 2146, column: 6)
!2540 = !DILocation(line: 2146, column: 10, scope: !2539)
!2541 = !DILocation(line: 2146, column: 21, scope: !2539)
!2542 = !DILocation(line: 2146, column: 25, scope: !2539)
!2543 = !DILocation(line: 2146, column: 30, scope: !2539)
!2544 = !DILocation(line: 2146, column: 39, scope: !2539)
!2545 = !DILocation(line: 2146, column: 6, scope: !2364)
!2546 = !DILocation(line: 2147, column: 16, scope: !2547)
!2547 = distinct !DILexicalBlock(scope: !2548, file: !3, line: 2147, column: 3)
!2548 = distinct !DILexicalBlock(scope: !2539, file: !3, line: 2146, column: 53)
!2549 = !DILocation(line: 2147, column: 21, scope: !2547)
!2550 = !DILocation(line: 2147, column: 27, scope: !2547)
!2551 = !DILocation(line: 2147, column: 14, scope: !2547)
!2552 = !DILocation(line: 2147, column: 40, scope: !2547)
!2553 = !DILocation(line: 2147, column: 8, scope: !2547)
!2554 = !DILocation(line: 2147, column: 45, scope: !2555)
!2555 = distinct !DILexicalBlock(scope: !2547, file: !3, line: 2147, column: 3)
!2556 = !DILocation(line: 2147, column: 3, scope: !2547)
!2557 = !DILocation(line: 2148, column: 8, scope: !2558)
!2558 = distinct !DILexicalBlock(scope: !2559, file: !3, line: 2148, column: 8)
!2559 = distinct !DILexicalBlock(scope: !2555, file: !3, line: 2147, column: 82)
!2560 = !DILocation(line: 2148, column: 15, scope: !2558)
!2561 = !DILocation(line: 2148, column: 23, scope: !2558)
!2562 = !DILocation(line: 2148, column: 28, scope: !2558)
!2563 = !DILocation(line: 2148, column: 21, scope: !2558)
!2564 = !DILocation(line: 2148, column: 8, scope: !2559)
!2565 = !DILocation(line: 2149, column: 10, scope: !2566)
!2566 = distinct !DILexicalBlock(scope: !2567, file: !3, line: 2149, column: 9)
!2567 = distinct !DILexicalBlock(scope: !2558, file: !3, line: 2148, column: 35)
!2568 = !DILocation(line: 2149, column: 17, scope: !2566)
!2569 = !DILocation(line: 2149, column: 22, scope: !2566)
!2570 = !DILocation(line: 2149, column: 39, scope: !2566)
!2571 = !DILocation(line: 2149, column: 9, scope: !2567)
!2572 = !DILocation(line: 2150, column: 6, scope: !2573)
!2573 = distinct !DILexicalBlock(scope: !2566, file: !3, line: 2149, column: 45)
!2574 = !DILocation(line: 2151, column: 26, scope: !2573)
!2575 = !DILocation(line: 2151, column: 33, scope: !2573)
!2576 = !DILocation(line: 2151, column: 6, scope: !2573)
!2577 = !DILocation(line: 2152, column: 6, scope: !2573)
!2578 = !DILocation(line: 2155, column: 13, scope: !2573)
!2579 = !DILocation(line: 2155, column: 20, scope: !2573)
!2580 = !DILocation(line: 2155, column: 11, scope: !2573)
!2581 = !DILocation(line: 2156, column: 11, scope: !2582)
!2582 = distinct !DILexicalBlock(scope: !2573, file: !3, line: 2156, column: 10)
!2583 = !DILocation(line: 2156, column: 18, scope: !2582)
!2584 = !DILocation(line: 2156, column: 10, scope: !2582)
!2585 = !DILocation(line: 2156, column: 26, scope: !2582)
!2586 = !DILocation(line: 2156, column: 30, scope: !2582)
!2587 = !DILocation(line: 0, scope: !2582)
!2588 = !DILocation(line: 2156, column: 10, scope: !2573)
!2589 = !DILocation(line: 2157, column: 12, scope: !2590)
!2590 = distinct !DILexicalBlock(scope: !2582, file: !3, line: 2156, column: 65)
!2591 = !DILocation(line: 2158, column: 6, scope: !2590)
!2592 = !DILocation(line: 2161, column: 10, scope: !2593)
!2593 = distinct !DILexicalBlock(scope: !2573, file: !3, line: 2161, column: 10)
!2594 = !DILocation(line: 2161, column: 19, scope: !2593)
!2595 = !DILocation(line: 2161, column: 24, scope: !2593)
!2596 = !DILocation(line: 2161, column: 16, scope: !2593)
!2597 = !DILocation(line: 2161, column: 10, scope: !2573)
!2598 = !DILocation(line: 2162, column: 12, scope: !2593)
!2599 = !DILocation(line: 2162, column: 7, scope: !2593)
!2600 = !DILocation(line: 2164, column: 10, scope: !2601)
!2601 = distinct !DILexicalBlock(scope: !2573, file: !3, line: 2164, column: 10)
!2602 = !DILocation(line: 2164, column: 15, scope: !2601)
!2603 = !DILocation(line: 2164, column: 24, scope: !2601)
!2604 = !DILocation(line: 2164, column: 10, scope: !2573)
!2605 = !DILocation(line: 2165, column: 34, scope: !2601)
!2606 = !DILocation(line: 2165, column: 39, scope: !2601)
!2607 = !DILocation(line: 2165, column: 45, scope: !2601)
!2608 = !DILocation(line: 2165, column: 54, scope: !2601)
!2609 = !DILocation(line: 2165, column: 67, scope: !2601)
!2610 = !DILocation(line: 2165, column: 7, scope: !2601)
!2611 = !DILocation(line: 2166, column: 15, scope: !2612)
!2612 = distinct !DILexicalBlock(scope: !2601, file: !3, line: 2166, column: 15)
!2613 = !DILocation(line: 2166, column: 20, scope: !2612)
!2614 = !DILocation(line: 2166, column: 29, scope: !2612)
!2615 = !DILocation(line: 2166, column: 15, scope: !2601)
!2616 = !DILocation(line: 2167, column: 29, scope: !2612)
!2617 = !DILocation(line: 2167, column: 34, scope: !2612)
!2618 = !DILocation(line: 2167, column: 40, scope: !2612)
!2619 = !DILocation(line: 2167, column: 49, scope: !2612)
!2620 = !DILocation(line: 2167, column: 62, scope: !2612)
!2621 = !DILocation(line: 2167, column: 7, scope: !2612)
!2622 = !DILocation(line: 2168, column: 15, scope: !2623)
!2623 = distinct !DILexicalBlock(scope: !2612, file: !3, line: 2168, column: 15)
!2624 = !DILocation(line: 2168, column: 20, scope: !2623)
!2625 = !DILocation(line: 2168, column: 29, scope: !2623)
!2626 = !DILocation(line: 2168, column: 15, scope: !2612)
!2627 = !DILocation(line: 2169, column: 32, scope: !2623)
!2628 = !DILocation(line: 2169, column: 37, scope: !2623)
!2629 = !DILocation(line: 2169, column: 43, scope: !2623)
!2630 = !DILocation(line: 2169, column: 52, scope: !2623)
!2631 = !DILocation(line: 2169, column: 65, scope: !2623)
!2632 = !DILocation(line: 2169, column: 7, scope: !2623)
!2633 = !DILocation(line: 2171, column: 27, scope: !2634)
!2634 = distinct !DILexicalBlock(scope: !2623, file: !3, line: 2170, column: 11)
!2635 = !DILocation(line: 2171, column: 32, scope: !2634)
!2636 = !DILocation(line: 2171, column: 38, scope: !2634)
!2637 = !DILocation(line: 2171, column: 47, scope: !2634)
!2638 = !DILocation(line: 2171, column: 54, scope: !2634)
!2639 = !DILocation(line: 2171, column: 61, scope: !2634)
!2640 = !DILocation(line: 2171, column: 7, scope: !2634)
!2641 = !DILocation(line: 2174, column: 6, scope: !2573)
!2642 = !DILocation(line: 2175, column: 5, scope: !2573)
!2643 = !DILocation(line: 2176, column: 4, scope: !2567)
!2644 = !DILocation(line: 2177, column: 3, scope: !2559)
!2645 = !DILocation(line: 2147, column: 60, scope: !2555)
!2646 = !DILocation(line: 2147, column: 67, scope: !2555)
!2647 = !DILocation(line: 2147, column: 58, scope: !2555)
!2648 = !DILocation(line: 2147, column: 78, scope: !2555)
!2649 = !DILocation(line: 2147, column: 3, scope: !2555)
!2650 = distinct !{!2650, !2556, !2651}
!2651 = !DILocation(line: 2177, column: 3, scope: !2547)
!2652 = !DILocation(line: 2178, column: 2, scope: !2548)
!2653 = !DILocation(line: 2181, column: 8, scope: !2364)
!2654 = !DILocation(line: 2182, column: 2, scope: !2364)
!2655 = !DILocation(line: 2183, column: 6, scope: !2656)
!2656 = distinct !DILexicalBlock(scope: !2364, file: !3, line: 2183, column: 6)
!2657 = !DILocation(line: 2183, column: 6, scope: !2364)
!2658 = !DILocation(line: 2184, column: 9, scope: !2659)
!2659 = distinct !DILexicalBlock(scope: !2660, file: !3, line: 2184, column: 7)
!2660 = distinct !DILexicalBlock(scope: !2656, file: !3, line: 2183, column: 47)
!2661 = !DILocation(line: 2184, column: 11, scope: !2659)
!2662 = !DILocation(line: 2184, column: 7, scope: !2660)
!2663 = !DILocation(line: 2185, column: 10, scope: !2659)
!2664 = !DILocation(line: 2185, column: 4, scope: !2659)
!2665 = !DILocation(line: 2186, column: 2, scope: !2660)
!2666 = !DILocation(line: 2187, column: 11, scope: !2667)
!2667 = distinct !DILexicalBlock(scope: !2656, file: !3, line: 2187, column: 11)
!2668 = !DILocation(line: 2187, column: 14, scope: !2667)
!2669 = !DILocation(line: 2187, column: 11, scope: !2656)
!2670 = !DILocation(line: 2188, column: 28, scope: !2667)
!2671 = !DILocation(line: 2188, column: 3, scope: !2667)
!2672 = !DILocation(line: 2189, column: 11, scope: !2673)
!2673 = distinct !DILexicalBlock(scope: !2667, file: !3, line: 2189, column: 11)
!2674 = !DILocation(line: 2189, column: 16, scope: !2673)
!2675 = !DILocation(line: 2189, column: 21, scope: !2673)
!2676 = !DILocation(line: 2189, column: 11, scope: !2667)
!2677 = !DILocation(line: 2190, column: 9, scope: !2673)
!2678 = !DILocation(line: 2190, column: 3, scope: !2673)
!2679 = !DILocation(line: 2192, column: 15, scope: !2680)
!2680 = distinct !DILexicalBlock(scope: !2364, file: !3, line: 2192, column: 2)
!2681 = !DILocation(line: 2192, column: 20, scope: !2680)
!2682 = !DILocation(line: 2192, column: 26, scope: !2680)
!2683 = !DILocation(line: 2192, column: 13, scope: !2680)
!2684 = !DILocation(line: 2192, column: 7, scope: !2680)
!2685 = !DILocation(line: 2192, column: 33, scope: !2686)
!2686 = distinct !DILexicalBlock(scope: !2680, file: !3, line: 2192, column: 2)
!2687 = !DILocation(line: 2192, column: 2, scope: !2680)
!2688 = !DILocation(line: 2193, column: 22, scope: !2689)
!2689 = distinct !DILexicalBlock(scope: !2686, file: !3, line: 2192, column: 61)
!2690 = !DILocation(line: 2193, column: 29, scope: !2689)
!2691 = !DILocation(line: 2193, column: 3, scope: !2689)
!2692 = !DILocation(line: 2193, column: 8, scope: !2689)
!2693 = !DILocation(line: 2193, column: 19, scope: !2689)
!2694 = !DILocation(line: 2194, column: 7, scope: !2695)
!2695 = distinct !DILexicalBlock(scope: !2689, file: !3, line: 2194, column: 7)
!2696 = !DILocation(line: 2194, column: 14, scope: !2695)
!2697 = !DILocation(line: 2194, column: 22, scope: !2695)
!2698 = !DILocation(line: 2194, column: 27, scope: !2695)
!2699 = !DILocation(line: 2194, column: 20, scope: !2695)
!2700 = !DILocation(line: 2194, column: 7, scope: !2689)
!2701 = !DILocation(line: 2195, column: 9, scope: !2702)
!2702 = distinct !DILexicalBlock(scope: !2703, file: !3, line: 2195, column: 8)
!2703 = distinct !DILexicalBlock(scope: !2695, file: !3, line: 2194, column: 34)
!2704 = !DILocation(line: 2195, column: 16, scope: !2702)
!2705 = !DILocation(line: 2195, column: 21, scope: !2702)
!2706 = !DILocation(line: 2195, column: 38, scope: !2702)
!2707 = !DILocation(line: 2195, column: 8, scope: !2703)
!2708 = !DILocation(line: 2198, column: 12, scope: !2709)
!2709 = distinct !DILexicalBlock(scope: !2702, file: !3, line: 2195, column: 44)
!2710 = !DILocation(line: 2198, column: 19, scope: !2709)
!2711 = !DILocation(line: 2198, column: 10, scope: !2709)
!2712 = !DILocation(line: 2199, column: 10, scope: !2713)
!2713 = distinct !DILexicalBlock(scope: !2709, file: !3, line: 2199, column: 9)
!2714 = !DILocation(line: 2199, column: 17, scope: !2713)
!2715 = !DILocation(line: 2199, column: 9, scope: !2713)
!2716 = !DILocation(line: 2199, column: 25, scope: !2713)
!2717 = !DILocation(line: 2199, column: 29, scope: !2713)
!2718 = !DILocation(line: 0, scope: !2713)
!2719 = !DILocation(line: 2199, column: 9, scope: !2709)
!2720 = !DILocation(line: 2200, column: 11, scope: !2721)
!2721 = distinct !DILexicalBlock(scope: !2713, file: !3, line: 2199, column: 64)
!2722 = !DILocation(line: 2201, column: 5, scope: !2721)
!2723 = !DILocation(line: 2204, column: 9, scope: !2724)
!2724 = distinct !DILexicalBlock(scope: !2709, file: !3, line: 2204, column: 9)
!2725 = !DILocation(line: 2204, column: 18, scope: !2724)
!2726 = !DILocation(line: 2204, column: 23, scope: !2724)
!2727 = !DILocation(line: 2204, column: 15, scope: !2724)
!2728 = !DILocation(line: 2204, column: 9, scope: !2709)
!2729 = !DILocation(line: 2205, column: 11, scope: !2724)
!2730 = !DILocation(line: 2205, column: 6, scope: !2724)
!2731 = !DILocation(line: 2207, column: 9, scope: !2732)
!2732 = distinct !DILexicalBlock(scope: !2709, file: !3, line: 2207, column: 9)
!2733 = !DILocation(line: 2207, column: 14, scope: !2732)
!2734 = !DILocation(line: 2207, column: 23, scope: !2732)
!2735 = !DILocation(line: 2207, column: 9, scope: !2709)
!2736 = !DILocation(line: 2208, column: 10, scope: !2737)
!2737 = distinct !DILexicalBlock(scope: !2738, file: !3, line: 2208, column: 10)
!2738 = distinct !DILexicalBlock(scope: !2732, file: !3, line: 2207, column: 40)
!2739 = !DILocation(line: 2208, column: 13, scope: !2737)
!2740 = !DILocation(line: 2208, column: 10, scope: !2738)
!2741 = !DILocation(line: 2209, column: 29, scope: !2737)
!2742 = !DILocation(line: 2209, column: 35, scope: !2737)
!2743 = !DILocation(line: 2209, column: 41, scope: !2737)
!2744 = !DILocation(line: 2209, column: 46, scope: !2737)
!2745 = !DILocation(line: 2209, column: 52, scope: !2737)
!2746 = !DILocation(line: 2209, column: 61, scope: !2737)
!2747 = !DILocation(line: 2209, column: 74, scope: !2737)
!2748 = !DILocation(line: 2209, column: 7, scope: !2737)
!2749 = !DILocation(line: 2210, column: 5, scope: !2738)
!2750 = !DILocation(line: 2212, column: 6, scope: !2751)
!2751 = distinct !DILexicalBlock(scope: !2732, file: !3, line: 2211, column: 10)
!2752 = !DILocation(line: 2213, column: 26, scope: !2751)
!2753 = !DILocation(line: 2213, column: 33, scope: !2751)
!2754 = !DILocation(line: 2213, column: 6, scope: !2751)
!2755 = !DILocation(line: 2214, column: 6, scope: !2751)
!2756 = !DILocation(line: 2216, column: 10, scope: !2757)
!2757 = distinct !DILexicalBlock(scope: !2751, file: !3, line: 2216, column: 10)
!2758 = !DILocation(line: 2216, column: 15, scope: !2757)
!2759 = !DILocation(line: 2216, column: 24, scope: !2757)
!2760 = !DILocation(line: 2216, column: 10, scope: !2751)
!2761 = !DILocation(line: 2217, column: 22, scope: !2757)
!2762 = !DILocation(line: 2217, column: 27, scope: !2757)
!2763 = !DILocation(line: 2217, column: 33, scope: !2757)
!2764 = !DILocation(line: 2217, column: 42, scope: !2757)
!2765 = !DILocation(line: 2217, column: 55, scope: !2757)
!2766 = !DILocation(line: 2217, column: 7, scope: !2757)
!2767 = !DILocation(line: 2218, column: 15, scope: !2768)
!2768 = distinct !DILexicalBlock(scope: !2757, file: !3, line: 2218, column: 15)
!2769 = !DILocation(line: 2218, column: 20, scope: !2768)
!2770 = !DILocation(line: 2218, column: 29, scope: !2768)
!2771 = !DILocation(line: 2218, column: 15, scope: !2757)
!2772 = !DILocation(line: 2219, column: 31, scope: !2768)
!2773 = !DILocation(line: 2219, column: 36, scope: !2768)
!2774 = !DILocation(line: 2219, column: 42, scope: !2768)
!2775 = !DILocation(line: 2219, column: 51, scope: !2768)
!2776 = !DILocation(line: 2219, column: 64, scope: !2768)
!2777 = !DILocation(line: 2219, column: 7, scope: !2768)
!2778 = !DILocation(line: 2220, column: 15, scope: !2779)
!2779 = distinct !DILexicalBlock(scope: !2768, file: !3, line: 2220, column: 15)
!2780 = !DILocation(line: 2220, column: 20, scope: !2779)
!2781 = !DILocation(line: 2220, column: 29, scope: !2779)
!2782 = !DILocation(line: 2220, column: 15, scope: !2768)
!2783 = !DILocation(line: 2221, column: 28, scope: !2779)
!2784 = !DILocation(line: 2221, column: 33, scope: !2779)
!2785 = !DILocation(line: 2221, column: 39, scope: !2779)
!2786 = !DILocation(line: 2221, column: 48, scope: !2779)
!2787 = !DILocation(line: 2221, column: 61, scope: !2779)
!2788 = !DILocation(line: 2221, column: 7, scope: !2779)
!2789 = !DILocation(line: 2223, column: 26, scope: !2779)
!2790 = !DILocation(line: 2223, column: 31, scope: !2779)
!2791 = !DILocation(line: 2223, column: 37, scope: !2779)
!2792 = !DILocation(line: 2223, column: 46, scope: !2779)
!2793 = !DILocation(line: 2223, column: 53, scope: !2779)
!2794 = !DILocation(line: 2223, column: 60, scope: !2779)
!2795 = !DILocation(line: 2223, column: 7, scope: !2779)
!2796 = !DILocation(line: 2225, column: 6, scope: !2751)
!2797 = !DILocation(line: 2229, column: 9, scope: !2798)
!2798 = distinct !DILexicalBlock(scope: !2709, file: !3, line: 2229, column: 9)
!2799 = !DILocation(line: 2229, column: 16, scope: !2798)
!2800 = !DILocation(line: 2229, column: 9, scope: !2709)
!2801 = !DILocation(line: 2230, column: 6, scope: !2802)
!2802 = distinct !DILexicalBlock(scope: !2798, file: !3, line: 2229, column: 24)
!2803 = !DILocation(line: 2231, column: 6, scope: !2802)
!2804 = !DILocation(line: 2232, column: 6, scope: !2802)
!2805 = !DILocation(line: 2234, column: 6, scope: !2802)
!2806 = !DILocation(line: 2235, column: 18, scope: !2802)
!2807 = !DILocation(line: 2235, column: 25, scope: !2802)
!2808 = !DILocation(line: 2235, column: 33, scope: !2802)
!2809 = !DILocation(line: 2235, column: 6, scope: !2802)
!2810 = !DILocation(line: 2236, column: 18, scope: !2802)
!2811 = !DILocation(line: 2236, column: 25, scope: !2802)
!2812 = !DILocation(line: 2236, column: 6, scope: !2802)
!2813 = !DILocation(line: 2237, column: 6, scope: !2802)
!2814 = !DILocation(line: 2239, column: 6, scope: !2802)
!2815 = !DILocation(line: 2240, column: 5, scope: !2802)
!2816 = !DILocation(line: 2241, column: 4, scope: !2709)
!2817 = !DILocation(line: 2242, column: 3, scope: !2703)
!2818 = !DILocation(line: 2243, column: 7, scope: !2819)
!2819 = distinct !DILexicalBlock(scope: !2689, file: !3, line: 2243, column: 7)
!2820 = !DILocation(line: 2243, column: 13, scope: !2819)
!2821 = !DILocation(line: 2243, column: 7, scope: !2689)
!2822 = !DILocation(line: 2243, column: 25, scope: !2819)
!2823 = !DILocation(line: 2243, column: 20, scope: !2819)
!2824 = !DILocation(line: 2244, column: 2, scope: !2689)
!2825 = !DILocation(line: 2192, column: 48, scope: !2686)
!2826 = !DILocation(line: 2192, column: 55, scope: !2686)
!2827 = !DILocation(line: 2192, column: 46, scope: !2686)
!2828 = !DILocation(line: 2192, column: 2, scope: !2686)
!2829 = distinct !{!2829, !2687, !2830}
!2830 = !DILocation(line: 2244, column: 2, scope: !2680)
!2831 = !DILocation(line: 2247, column: 6, scope: !2832)
!2832 = distinct !DILexicalBlock(scope: !2364, file: !3, line: 2247, column: 6)
!2833 = !DILocation(line: 2247, column: 12, scope: !2832)
!2834 = !DILocation(line: 2247, column: 6, scope: !2364)
!2835 = !DILocation(line: 2248, column: 3, scope: !2836)
!2836 = distinct !DILexicalBlock(scope: !2832, file: !3, line: 2247, column: 19)
!2837 = !DILocation(line: 2249, column: 2, scope: !2836)
!2838 = !DILocation(line: 2251, column: 6, scope: !2839)
!2839 = distinct !DILexicalBlock(scope: !2364, file: !3, line: 2251, column: 6)
!2840 = !DILocation(line: 2251, column: 6, scope: !2364)
!2841 = !DILocation(line: 2253, column: 2, scope: !2842)
!2842 = distinct !DILexicalBlock(scope: !2839, file: !3, line: 2251, column: 47)
!2843 = !DILocation(line: 2254, column: 11, scope: !2844)
!2844 = distinct !DILexicalBlock(scope: !2839, file: !3, line: 2254, column: 11)
!2845 = !DILocation(line: 2254, column: 14, scope: !2844)
!2846 = !DILocation(line: 2254, column: 11, scope: !2839)
!2847 = !DILocation(line: 2255, column: 28, scope: !2848)
!2848 = distinct !DILexicalBlock(scope: !2844, file: !3, line: 2254, column: 25)
!2849 = !DILocation(line: 2255, column: 3, scope: !2848)
!2850 = !DILocation(line: 2256, column: 2, scope: !2848)
!2851 = !DILocation(line: 2259, column: 6, scope: !2852)
!2852 = distinct !DILexicalBlock(scope: !2364, file: !3, line: 2259, column: 6)
!2853 = !DILocation(line: 2259, column: 11, scope: !2852)
!2854 = !DILocation(line: 2259, column: 16, scope: !2852)
!2855 = !DILocation(line: 2259, column: 6, scope: !2364)
!2856 = !DILocation(line: 2261, column: 10, scope: !2857)
!2857 = distinct !DILexicalBlock(scope: !2858, file: !3, line: 2261, column: 7)
!2858 = distinct !DILexicalBlock(scope: !2852, file: !3, line: 2259, column: 50)
!2859 = !DILocation(line: 2261, column: 12, scope: !2857)
!2860 = !DILocation(line: 2261, column: 25, scope: !2857)
!2861 = !DILocation(line: 2261, column: 7, scope: !2858)
!2862 = !DILocalVariable(name: "vec", scope: !2863, file: !3, line: 2262, type: !538)
!2863 = distinct !DILexicalBlock(scope: !2857, file: !3, line: 2261, column: 31)
!2864 = !DILocation(line: 2262, column: 10, scope: !2863)
!2865 = !DILocalVariable(name: "col", scope: !2863, file: !3, line: 2263, type: !958)
!2866 = !DILocation(line: 2263, column: 18, scope: !2863)
!2867 = !DILocation(line: 2264, column: 4, scope: !2863)
!2868 = !DILocation(line: 2264, column: 11, scope: !2863)
!2869 = !DILocation(line: 2266, column: 8, scope: !2870)
!2870 = distinct !DILexicalBlock(scope: !2863, file: !3, line: 2266, column: 8)
!2871 = !DILocation(line: 2266, column: 13, scope: !2870)
!2872 = !DILocation(line: 2266, column: 8, scope: !2863)
!2873 = !DILocation(line: 2266, column: 19, scope: !2870)
!2874 = !DILocation(line: 2268, column: 17, scope: !2875)
!2875 = distinct !DILexicalBlock(scope: !2863, file: !3, line: 2268, column: 4)
!2876 = !DILocation(line: 2268, column: 22, scope: !2875)
!2877 = !DILocation(line: 2268, column: 28, scope: !2875)
!2878 = !DILocation(line: 2268, column: 15, scope: !2875)
!2879 = !DILocation(line: 2268, column: 9, scope: !2875)
!2880 = !DILocation(line: 2268, column: 35, scope: !2881)
!2881 = distinct !DILexicalBlock(scope: !2875, file: !3, line: 2268, column: 4)
!2882 = !DILocation(line: 2268, column: 4, scope: !2875)
!2883 = !DILocation(line: 2269, column: 9, scope: !2884)
!2884 = distinct !DILexicalBlock(scope: !2885, file: !3, line: 2269, column: 9)
!2885 = distinct !DILexicalBlock(scope: !2881, file: !3, line: 2268, column: 63)
!2886 = !DILocation(line: 2269, column: 16, scope: !2884)
!2887 = !DILocation(line: 2269, column: 24, scope: !2884)
!2888 = !DILocation(line: 2269, column: 29, scope: !2884)
!2889 = !DILocation(line: 2269, column: 22, scope: !2884)
!2890 = !DILocation(line: 2269, column: 9, scope: !2885)
!2891 = !DILocation(line: 2270, column: 11, scope: !2892)
!2892 = distinct !DILexicalBlock(scope: !2893, file: !3, line: 2270, column: 10)
!2893 = distinct !DILexicalBlock(scope: !2884, file: !3, line: 2269, column: 36)
!2894 = !DILocation(line: 2270, column: 18, scope: !2892)
!2895 = !DILocation(line: 2270, column: 23, scope: !2892)
!2896 = !DILocation(line: 2270, column: 40, scope: !2892)
!2897 = !DILocation(line: 2270, column: 10, scope: !2893)
!2898 = !DILocation(line: 2272, column: 29, scope: !2899)
!2899 = distinct !DILexicalBlock(scope: !2892, file: !3, line: 2270, column: 46)
!2900 = !DILocation(line: 2272, column: 36, scope: !2899)
!2901 = !DILocation(line: 2272, column: 41, scope: !2899)
!2902 = !DILocation(line: 2272, column: 28, scope: !2899)
!2903 = !DILocation(line: 2272, column: 82, scope: !2899)
!2904 = !DILocation(line: 2272, column: 7, scope: !2899)
!2905 = !DILocation(line: 2275, column: 11, scope: !2906)
!2906 = distinct !DILexicalBlock(scope: !2899, file: !3, line: 2275, column: 11)
!2907 = !DILocation(line: 2275, column: 16, scope: !2906)
!2908 = !DILocation(line: 2275, column: 21, scope: !2906)
!2909 = !DILocation(line: 2275, column: 11, scope: !2899)
!2910 = !DILocation(line: 2276, column: 20, scope: !2911)
!2911 = distinct !DILexicalBlock(scope: !2906, file: !3, line: 2275, column: 38)
!2912 = !DILocation(line: 2276, column: 25, scope: !2911)
!2913 = !DILocation(line: 2276, column: 32, scope: !2911)
!2914 = !DILocation(line: 2276, column: 38, scope: !2911)
!2915 = !DILocation(line: 2276, column: 45, scope: !2911)
!2916 = !DILocation(line: 2276, column: 8, scope: !2911)
!2917 = !DILocation(line: 2277, column: 23, scope: !2911)
!2918 = !DILocation(line: 2277, column: 8, scope: !2911)
!2919 = !DILocation(line: 2278, column: 36, scope: !2911)
!2920 = !DILocation(line: 2278, column: 41, scope: !2911)
!2921 = !DILocation(line: 2278, column: 48, scope: !2911)
!2922 = !DILocation(line: 2278, column: 61, scope: !2911)
!2923 = !DILocation(line: 2278, column: 68, scope: !2911)
!2924 = !DILocation(line: 2278, column: 54, scope: !2911)
!2925 = !DILocation(line: 2278, column: 82, scope: !2911)
!2926 = !DILocation(line: 2278, column: 8, scope: !2911)
!2927 = !DILocation(line: 2279, column: 7, scope: !2911)
!2928 = !DILocation(line: 2281, column: 11, scope: !2929)
!2929 = distinct !DILexicalBlock(scope: !2899, file: !3, line: 2281, column: 11)
!2930 = !DILocation(line: 2281, column: 16, scope: !2929)
!2931 = !DILocation(line: 2281, column: 21, scope: !2929)
!2932 = !DILocation(line: 2281, column: 11, scope: !2899)
!2933 = !DILocation(line: 2282, column: 8, scope: !2934)
!2934 = distinct !DILexicalBlock(scope: !2929, file: !3, line: 2281, column: 37)
!2935 = !DILocation(line: 2283, column: 28, scope: !2934)
!2936 = !DILocation(line: 2283, column: 35, scope: !2934)
!2937 = !DILocation(line: 2283, column: 8, scope: !2934)
!2938 = !DILocation(line: 2284, column: 32, scope: !2934)
!2939 = !DILocation(line: 2284, column: 38, scope: !2934)
!2940 = !DILocation(line: 2284, column: 45, scope: !2934)
!2941 = !DILocation(line: 2284, column: 8, scope: !2934)
!2942 = !DILocation(line: 2285, column: 8, scope: !2934)
!2943 = !DILocation(line: 2287, column: 20, scope: !2934)
!2944 = !DILocation(line: 2287, column: 8, scope: !2934)
!2945 = !DILocation(line: 2288, column: 17, scope: !2934)
!2946 = !DILocation(line: 2288, column: 24, scope: !2934)
!2947 = !DILocation(line: 2288, column: 31, scope: !2934)
!2948 = !DILocation(line: 2288, column: 8, scope: !2934)
!2949 = !DILocation(line: 2290, column: 8, scope: !2934)
!2950 = !DILocation(line: 2291, column: 7, scope: !2934)
!2951 = !DILocation(line: 2293, column: 6, scope: !2899)
!2952 = !DILocation(line: 2294, column: 5, scope: !2893)
!2953 = !DILocation(line: 2295, column: 4, scope: !2885)
!2954 = !DILocation(line: 2268, column: 50, scope: !2881)
!2955 = !DILocation(line: 2268, column: 57, scope: !2881)
!2956 = !DILocation(line: 2268, column: 48, scope: !2881)
!2957 = !DILocation(line: 2268, column: 4, scope: !2881)
!2958 = distinct !{!2958, !2882, !2959}
!2959 = !DILocation(line: 2295, column: 4, scope: !2875)
!2960 = !DILocation(line: 2297, column: 8, scope: !2961)
!2961 = distinct !DILexicalBlock(scope: !2863, file: !3, line: 2297, column: 8)
!2962 = !DILocation(line: 2297, column: 13, scope: !2961)
!2963 = !DILocation(line: 2297, column: 8, scope: !2863)
!2964 = !DILocation(line: 2297, column: 19, scope: !2961)
!2965 = !DILocation(line: 2298, column: 3, scope: !2863)
!2966 = !DILocation(line: 2299, column: 2, scope: !2858)
!2967 = !DILocation(line: 2300, column: 1, scope: !2364)
!2968 = distinct !DISubprogram(name: "draw_ghost_poses_range", scope: !3, file: !3, line: 2363, type: !2969, scopeLine: 2364, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1930)
!2969 = !DISubroutineType(types: !2970)
!2970 = !{null, !1983, !1985, !2070, !2143}
!2971 = !DILocalVariable(name: "scene", arg: 1, scope: !2968, file: !3, line: 2363, type: !1983)
!2972 = !DILocation(line: 2363, column: 43, scope: !2968)
!2973 = !DILocalVariable(name: "v3d", arg: 2, scope: !2968, file: !3, line: 2363, type: !1985)
!2974 = !DILocation(line: 2363, column: 58, scope: !2968)
!2975 = !DILocalVariable(name: "ar", arg: 3, scope: !2968, file: !3, line: 2363, type: !2070)
!2976 = !DILocation(line: 2363, column: 72, scope: !2968)
!2977 = !DILocalVariable(name: "base", arg: 4, scope: !2968, file: !3, line: 2363, type: !2143)
!2978 = !DILocation(line: 2363, column: 82, scope: !2968)
!2979 = !DILocalVariable(name: "ob", scope: !2968, file: !3, line: 2365, type: !2165)
!2980 = !DILocation(line: 2365, column: 10, scope: !2968)
!2981 = !DILocation(line: 2365, column: 15, scope: !2968)
!2982 = !DILocation(line: 2365, column: 21, scope: !2968)
!2983 = !DILocalVariable(name: "adt", scope: !2968, file: !3, line: 2366, type: !2984)
!2984 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2985, size: 64)
!2985 = !DIDerivedType(tag: DW_TAG_typedef, name: "AnimData", file: !331, line: 869, baseType: !454)
!2986 = !DILocation(line: 2366, column: 12, scope: !2968)
!2987 = !DILocation(line: 2366, column: 40, scope: !2968)
!2988 = !DILocation(line: 2366, column: 44, scope: !2968)
!2989 = !DILocation(line: 2366, column: 18, scope: !2968)
!2990 = !DILocalVariable(name: "arm", scope: !2968, file: !3, line: 2367, type: !376)
!2991 = !DILocation(line: 2367, column: 13, scope: !2968)
!2992 = !DILocation(line: 2367, column: 19, scope: !2968)
!2993 = !DILocation(line: 2367, column: 23, scope: !2968)
!2994 = !DILocalVariable(name: "posen", scope: !2968, file: !3, line: 2368, type: !2995)
!2995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2996, size: 64)
!2996 = !DIDerivedType(tag: DW_TAG_typedef, name: "bPose", file: !322, line: 356, baseType: !688)
!2997 = !DILocation(line: 2368, column: 9, scope: !2968)
!2998 = !DILocalVariable(name: "poseo", scope: !2968, file: !3, line: 2368, type: !2995)
!2999 = !DILocation(line: 2368, column: 17, scope: !2968)
!3000 = !DILocalVariable(name: "start", scope: !2968, file: !3, line: 2369, type: !375)
!3001 = !DILocation(line: 2369, column: 8, scope: !2968)
!3002 = !DILocalVariable(name: "end", scope: !2968, file: !3, line: 2369, type: !375)
!3003 = !DILocation(line: 2369, column: 15, scope: !2968)
!3004 = !DILocalVariable(name: "stepsize", scope: !2968, file: !3, line: 2369, type: !375)
!3005 = !DILocation(line: 2369, column: 20, scope: !2968)
!3006 = !DILocalVariable(name: "range", scope: !2968, file: !3, line: 2369, type: !375)
!3007 = !DILocation(line: 2369, column: 30, scope: !2968)
!3008 = !DILocalVariable(name: "colfac", scope: !2968, file: !3, line: 2369, type: !375)
!3009 = !DILocation(line: 2369, column: 37, scope: !2968)
!3010 = !DILocalVariable(name: "cfrao", scope: !2968, file: !3, line: 2370, type: !417)
!3011 = !DILocation(line: 2370, column: 6, scope: !2968)
!3012 = !DILocalVariable(name: "flago", scope: !2968, file: !3, line: 2370, type: !417)
!3013 = !DILocation(line: 2370, column: 13, scope: !2968)
!3014 = !DILocalVariable(name: "ipoflago", scope: !2968, file: !3, line: 2370, type: !417)
!3015 = !DILocation(line: 2370, column: 20, scope: !2968)
!3016 = !DILocation(line: 2372, column: 17, scope: !2968)
!3017 = !DILocation(line: 2372, column: 22, scope: !2968)
!3018 = !DILocation(line: 2372, column: 10, scope: !2968)
!3019 = !DILocation(line: 2372, column: 8, scope: !2968)
!3020 = !DILocation(line: 2373, column: 15, scope: !2968)
!3021 = !DILocation(line: 2373, column: 20, scope: !2968)
!3022 = !DILocation(line: 2373, column: 8, scope: !2968)
!3023 = !DILocation(line: 2373, column: 6, scope: !2968)
!3024 = !DILocation(line: 2374, column: 6, scope: !3025)
!3025 = distinct !DILexicalBlock(scope: !2968, file: !3, line: 2374, column: 6)
!3026 = !DILocation(line: 2374, column: 13, scope: !3025)
!3027 = !DILocation(line: 2374, column: 10, scope: !3025)
!3028 = !DILocation(line: 2374, column: 6, scope: !2968)
!3029 = !DILocation(line: 2375, column: 3, scope: !3025)
!3030 = !DILocation(line: 2377, column: 21, scope: !2968)
!3031 = !DILocation(line: 2377, column: 26, scope: !2968)
!3032 = !DILocation(line: 2377, column: 13, scope: !2968)
!3033 = !DILocation(line: 2377, column: 11, scope: !2968)
!3034 = !DILocation(line: 2378, column: 18, scope: !2968)
!3035 = !DILocation(line: 2378, column: 24, scope: !2968)
!3036 = !DILocation(line: 2378, column: 22, scope: !2968)
!3037 = !DILocation(line: 2378, column: 8, scope: !2968)
!3038 = !DILocation(line: 2381, column: 2, scope: !2968)
!3039 = !DILocation(line: 2381, column: 6, scope: !2968)
!3040 = !DILocation(line: 2381, column: 11, scope: !2968)
!3041 = !DILocation(line: 2382, column: 10, scope: !2968)
!3042 = !DILocation(line: 2382, column: 8, scope: !2968)
!3043 = !DILocation(line: 2383, column: 10, scope: !2968)
!3044 = !DILocation(line: 2383, column: 15, scope: !2968)
!3045 = !DILocation(line: 2383, column: 8, scope: !2968)
!3046 = !DILocation(line: 2384, column: 2, scope: !2968)
!3047 = !DILocation(line: 2384, column: 7, scope: !2968)
!3048 = !DILocation(line: 2384, column: 12, scope: !2968)
!3049 = !DILocation(line: 2385, column: 13, scope: !2968)
!3050 = !DILocation(line: 2385, column: 17, scope: !2968)
!3051 = !DILocation(line: 2385, column: 11, scope: !2968)
!3052 = !DILocation(line: 2386, column: 2, scope: !2968)
!3053 = !DILocation(line: 2386, column: 6, scope: !2968)
!3054 = !DILocation(line: 2386, column: 14, scope: !2968)
!3055 = !DILocation(line: 2389, column: 10, scope: !2968)
!3056 = !DILocation(line: 2389, column: 14, scope: !2968)
!3057 = !DILocation(line: 2389, column: 8, scope: !2968)
!3058 = !DILocation(line: 2390, column: 29, scope: !2968)
!3059 = !DILocation(line: 2390, column: 33, scope: !2968)
!3060 = !DILocation(line: 2390, column: 2, scope: !2968)
!3061 = !DILocation(line: 2391, column: 13, scope: !2968)
!3062 = !DILocation(line: 2391, column: 2, scope: !2968)
!3063 = !DILocation(line: 2391, column: 6, scope: !2968)
!3064 = !DILocation(line: 2391, column: 11, scope: !2968)
!3065 = !DILocation(line: 2392, column: 19, scope: !2968)
!3066 = !DILocation(line: 2392, column: 23, scope: !2968)
!3067 = !DILocation(line: 2392, column: 27, scope: !2968)
!3068 = !DILocation(line: 2392, column: 2, scope: !2968)
!3069 = !DILocation(line: 2393, column: 29, scope: !2968)
!3070 = !DILocation(line: 2393, column: 2, scope: !2968)
!3071 = !DILocation(line: 2395, column: 2, scope: !2968)
!3072 = !DILocation(line: 2396, column: 6, scope: !3073)
!3073 = distinct !DILexicalBlock(scope: !2968, file: !3, line: 2396, column: 6)
!3074 = !DILocation(line: 2396, column: 11, scope: !3073)
!3075 = !DILocation(line: 2396, column: 6, scope: !2968)
!3076 = !DILocation(line: 2396, column: 17, scope: !3073)
!3077 = !DILocation(line: 2399, column: 19, scope: !3078)
!3078 = distinct !DILexicalBlock(scope: !2968, file: !3, line: 2399, column: 2)
!3079 = !DILocation(line: 2399, column: 14, scope: !3078)
!3080 = !DILocation(line: 2399, column: 7, scope: !3078)
!3081 = !DILocation(line: 2399, column: 12, scope: !3078)
!3082 = !DILocation(line: 2399, column: 26, scope: !3083)
!3083 = distinct !DILexicalBlock(scope: !3078, file: !3, line: 2399, column: 2)
!3084 = !DILocation(line: 2399, column: 33, scope: !3083)
!3085 = !DILocation(line: 2399, column: 31, scope: !3083)
!3086 = !DILocation(line: 2399, column: 2, scope: !3078)
!3087 = !DILocation(line: 2400, column: 13, scope: !3088)
!3088 = distinct !DILexicalBlock(scope: !3083, file: !3, line: 2399, column: 61)
!3089 = !DILocation(line: 2400, column: 26, scope: !3088)
!3090 = !DILocation(line: 2400, column: 19, scope: !3088)
!3091 = !DILocation(line: 2400, column: 17, scope: !3088)
!3092 = !DILocation(line: 2400, column: 34, scope: !3088)
!3093 = !DILocation(line: 2400, column: 32, scope: !3088)
!3094 = !DILocation(line: 2400, column: 10, scope: !3088)
!3095 = !DILocation(line: 2401, column: 67, scope: !3088)
!3096 = !DILocation(line: 2401, column: 61, scope: !3088)
!3097 = !DILocation(line: 2401, column: 59, scope: !3088)
!3098 = !DILocation(line: 2401, column: 46, scope: !3088)
!3099 = !DILocation(line: 2401, column: 44, scope: !3088)
!3100 = !DILocation(line: 2401, column: 3, scope: !3088)
!3101 = !DILocation(line: 2403, column: 33, scope: !3088)
!3102 = !DILocation(line: 2403, column: 41, scope: !3088)
!3103 = !DILocation(line: 2403, column: 45, scope: !3088)
!3104 = !DILocation(line: 2403, column: 49, scope: !3088)
!3105 = !DILocation(line: 2403, column: 61, scope: !3088)
!3106 = !DILocation(line: 2403, column: 54, scope: !3088)
!3107 = !DILocation(line: 2403, column: 3, scope: !3088)
!3108 = !DILocation(line: 2404, column: 21, scope: !3088)
!3109 = !DILocation(line: 2404, column: 28, scope: !3088)
!3110 = !DILocation(line: 2404, column: 3, scope: !3088)
!3111 = !DILocation(line: 2405, column: 19, scope: !3088)
!3112 = !DILocation(line: 2405, column: 26, scope: !3088)
!3113 = !DILocation(line: 2405, column: 31, scope: !3088)
!3114 = !DILocation(line: 2405, column: 35, scope: !3088)
!3115 = !DILocation(line: 2405, column: 3, scope: !3088)
!3116 = !DILocation(line: 2406, column: 2, scope: !3088)
!3117 = !DILocation(line: 2399, column: 51, scope: !3083)
!3118 = !DILocation(line: 2399, column: 46, scope: !3083)
!3119 = !DILocation(line: 2399, column: 38, scope: !3083)
!3120 = !DILocation(line: 2399, column: 43, scope: !3083)
!3121 = !DILocation(line: 2399, column: 2, scope: !3083)
!3122 = distinct !{!3122, !3086, !3123}
!3123 = !DILocation(line: 2406, column: 2, scope: !3078)
!3124 = !DILocation(line: 2407, column: 2, scope: !2968)
!3125 = !DILocation(line: 2408, column: 6, scope: !3126)
!3126 = distinct !DILexicalBlock(scope: !2968, file: !3, line: 2408, column: 6)
!3127 = !DILocation(line: 2408, column: 11, scope: !3126)
!3128 = !DILocation(line: 2408, column: 6, scope: !2968)
!3129 = !DILocation(line: 2408, column: 17, scope: !3126)
!3130 = !DILocation(line: 2411, column: 32, scope: !2968)
!3131 = !DILocation(line: 2411, column: 40, scope: !2968)
!3132 = !DILocation(line: 2411, column: 44, scope: !2968)
!3133 = !DILocation(line: 2411, column: 48, scope: !2968)
!3134 = !DILocation(line: 2411, column: 60, scope: !2968)
!3135 = !DILocation(line: 2411, column: 53, scope: !2968)
!3136 = !DILocation(line: 2411, column: 2, scope: !2968)
!3137 = !DILocation(line: 2414, column: 29, scope: !2968)
!3138 = !DILocation(line: 2414, column: 2, scope: !2968)
!3139 = !DILocation(line: 2415, column: 16, scope: !2968)
!3140 = !DILocation(line: 2415, column: 2, scope: !2968)
!3141 = !DILocation(line: 2418, column: 9, scope: !2968)
!3142 = !DILocation(line: 2418, column: 2, scope: !2968)
!3143 = !DILocation(line: 2418, column: 7, scope: !2968)
!3144 = !DILocation(line: 2419, column: 13, scope: !2968)
!3145 = !DILocation(line: 2419, column: 2, scope: !2968)
!3146 = !DILocation(line: 2419, column: 6, scope: !2968)
!3147 = !DILocation(line: 2419, column: 11, scope: !2968)
!3148 = !DILocation(line: 2420, column: 14, scope: !2968)
!3149 = !DILocation(line: 2420, column: 2, scope: !2968)
!3150 = !DILocation(line: 2420, column: 7, scope: !2968)
!3151 = !DILocation(line: 2420, column: 12, scope: !2968)
!3152 = !DILocation(line: 2421, column: 2, scope: !2968)
!3153 = !DILocation(line: 2421, column: 6, scope: !2968)
!3154 = !DILocation(line: 2421, column: 11, scope: !2968)
!3155 = !DILocation(line: 2422, column: 16, scope: !2968)
!3156 = !DILocation(line: 2422, column: 2, scope: !2968)
!3157 = !DILocation(line: 2422, column: 6, scope: !2968)
!3158 = !DILocation(line: 2422, column: 14, scope: !2968)
!3159 = !DILocation(line: 2423, column: 1, scope: !2968)
!3160 = distinct !DISubprogram(name: "draw_ghost_poses_keys", scope: !3, file: !3, line: 2428, type: !2969, scopeLine: 2429, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1930)
!3161 = !DILocalVariable(name: "scene", arg: 1, scope: !3160, file: !3, line: 2428, type: !1983)
!3162 = !DILocation(line: 2428, column: 42, scope: !3160)
!3163 = !DILocalVariable(name: "v3d", arg: 2, scope: !3160, file: !3, line: 2428, type: !1985)
!3164 = !DILocation(line: 2428, column: 57, scope: !3160)
!3165 = !DILocalVariable(name: "ar", arg: 3, scope: !3160, file: !3, line: 2428, type: !2070)
!3166 = !DILocation(line: 2428, column: 71, scope: !3160)
!3167 = !DILocalVariable(name: "base", arg: 4, scope: !3160, file: !3, line: 2428, type: !2143)
!3168 = !DILocation(line: 2428, column: 81, scope: !3160)
!3169 = !DILocalVariable(name: "ob", scope: !3160, file: !3, line: 2430, type: !2165)
!3170 = !DILocation(line: 2430, column: 10, scope: !3160)
!3171 = !DILocation(line: 2430, column: 15, scope: !3160)
!3172 = !DILocation(line: 2430, column: 21, scope: !3160)
!3173 = !DILocalVariable(name: "adt", scope: !3160, file: !3, line: 2431, type: !2984)
!3174 = !DILocation(line: 2431, column: 12, scope: !3160)
!3175 = !DILocation(line: 2431, column: 40, scope: !3160)
!3176 = !DILocation(line: 2431, column: 44, scope: !3160)
!3177 = !DILocation(line: 2431, column: 18, scope: !3160)
!3178 = !DILocalVariable(name: "act", scope: !3160, file: !3, line: 2432, type: !457)
!3179 = !DILocation(line: 2432, column: 11, scope: !3160)
!3180 = !DILocation(line: 2432, column: 18, scope: !3160)
!3181 = !DILocation(line: 2432, column: 17, scope: !3160)
!3182 = !DILocation(line: 2432, column: 25, scope: !3160)
!3183 = !DILocation(line: 2432, column: 30, scope: !3160)
!3184 = !DILocalVariable(name: "arm", scope: !3160, file: !3, line: 2433, type: !376)
!3185 = !DILocation(line: 2433, column: 13, scope: !3160)
!3186 = !DILocation(line: 2433, column: 19, scope: !3160)
!3187 = !DILocation(line: 2433, column: 23, scope: !3160)
!3188 = !DILocalVariable(name: "posen", scope: !3160, file: !3, line: 2434, type: !2995)
!3189 = !DILocation(line: 2434, column: 9, scope: !3160)
!3190 = !DILocalVariable(name: "poseo", scope: !3160, file: !3, line: 2434, type: !2995)
!3191 = !DILocation(line: 2434, column: 17, scope: !3160)
!3192 = !DILocalVariable(name: "keys", scope: !3160, file: !3, line: 2435, type: !3193)
!3193 = !DIDerivedType(tag: DW_TAG_typedef, name: "DLRBT_Tree", file: !3194, line: 74, baseType: !3195)
!3194 = !DIFile(filename: "blender/source/blender/blenlib/BLI_dlrbTree.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3195 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DLRBT_Tree", file: !3194, line: 68, size: 192, elements: !3196)
!3196 = !{!3197, !3198, !3199}
!3197 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !3195, file: !3194, line: 70, baseType: !386, size: 64)
!3198 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !3195, file: !3194, line: 70, baseType: !386, size: 64, offset: 64)
!3199 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !3195, file: !3194, line: 73, baseType: !386, size: 64, offset: 128)
!3200 = !DILocation(line: 2435, column: 13, scope: !3160)
!3201 = !DILocalVariable(name: "ak", scope: !3160, file: !3, line: 2436, type: !3202)
!3202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3203, size: 64)
!3203 = !DIDerivedType(tag: DW_TAG_typedef, name: "ActKeyColumn", file: !3204, line: 70, baseType: !3205)
!3204 = !DIFile(filename: "blender/source/blender/editors/include/ED_keyframes_draw.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3205 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ActKeyColumn", file: !3204, line: 53, size: 448, elements: !3206)
!3206 = !{!3207, !3209, !3210, !3211, !3212, !3213, !3214, !3215, !3216, !3217, !3218}
!3207 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3205, file: !3204, line: 55, baseType: !3208, size: 64)
!3208 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3205, size: 64)
!3209 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3205, file: !3204, line: 55, baseType: !3208, size: 64, offset: 64)
!3210 = !DIDerivedType(tag: DW_TAG_member, name: "left", scope: !3205, file: !3204, line: 58, baseType: !3208, size: 64, offset: 128)
!3211 = !DIDerivedType(tag: DW_TAG_member, name: "right", scope: !3205, file: !3204, line: 58, baseType: !3208, size: 64, offset: 192)
!3212 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !3205, file: !3204, line: 59, baseType: !3208, size: 64, offset: 256)
!3213 = !DIDerivedType(tag: DW_TAG_member, name: "tree_col", scope: !3205, file: !3204, line: 60, baseType: !402, size: 8, offset: 320)
!3214 = !DIDerivedType(tag: DW_TAG_member, name: "key_type", scope: !3205, file: !3204, line: 63, baseType: !402, size: 8, offset: 328)
!3215 = !DIDerivedType(tag: DW_TAG_member, name: "sel", scope: !3205, file: !3204, line: 64, baseType: !415, size: 16, offset: 336)
!3216 = !DIDerivedType(tag: DW_TAG_member, name: "cfra", scope: !3205, file: !3204, line: 65, baseType: !375, size: 32, offset: 352)
!3217 = !DIDerivedType(tag: DW_TAG_member, name: "modified", scope: !3205, file: !3204, line: 68, baseType: !415, size: 16, offset: 384)
!3218 = !DIDerivedType(tag: DW_TAG_member, name: "totcurve", scope: !3205, file: !3204, line: 69, baseType: !415, size: 16, offset: 400)
!3219 = !DILocation(line: 2436, column: 16, scope: !3160)
!3220 = !DILocalVariable(name: "akn", scope: !3160, file: !3, line: 2436, type: !3202)
!3221 = !DILocation(line: 2436, column: 21, scope: !3160)
!3222 = !DILocalVariable(name: "start", scope: !3160, file: !3, line: 2437, type: !375)
!3223 = !DILocation(line: 2437, column: 8, scope: !3160)
!3224 = !DILocalVariable(name: "end", scope: !3160, file: !3, line: 2437, type: !375)
!3225 = !DILocation(line: 2437, column: 15, scope: !3160)
!3226 = !DILocalVariable(name: "range", scope: !3160, file: !3, line: 2437, type: !375)
!3227 = !DILocation(line: 2437, column: 20, scope: !3160)
!3228 = !DILocalVariable(name: "colfac", scope: !3160, file: !3, line: 2437, type: !375)
!3229 = !DILocation(line: 2437, column: 27, scope: !3160)
!3230 = !DILocalVariable(name: "i", scope: !3160, file: !3, line: 2437, type: !375)
!3231 = !DILocation(line: 2437, column: 35, scope: !3160)
!3232 = !DILocalVariable(name: "cfrao", scope: !3160, file: !3, line: 2438, type: !417)
!3233 = !DILocation(line: 2438, column: 6, scope: !3160)
!3234 = !DILocalVariable(name: "flago", scope: !3160, file: !3, line: 2438, type: !417)
!3235 = !DILocation(line: 2438, column: 13, scope: !3160)
!3236 = !DILocation(line: 2440, column: 17, scope: !3160)
!3237 = !DILocation(line: 2440, column: 22, scope: !3160)
!3238 = !DILocation(line: 2440, column: 10, scope: !3160)
!3239 = !DILocation(line: 2440, column: 8, scope: !3160)
!3240 = !DILocation(line: 2441, column: 15, scope: !3160)
!3241 = !DILocation(line: 2441, column: 20, scope: !3160)
!3242 = !DILocation(line: 2441, column: 8, scope: !3160)
!3243 = !DILocation(line: 2441, column: 6, scope: !3160)
!3244 = !DILocation(line: 2442, column: 6, scope: !3245)
!3245 = distinct !DILexicalBlock(scope: !3160, file: !3, line: 2442, column: 6)
!3246 = !DILocation(line: 2442, column: 13, scope: !3245)
!3247 = !DILocation(line: 2442, column: 10, scope: !3245)
!3248 = !DILocation(line: 2442, column: 6, scope: !3160)
!3249 = !DILocation(line: 2443, column: 3, scope: !3245)
!3250 = !DILocation(line: 2446, column: 2, scope: !3160)
!3251 = !DILocation(line: 2447, column: 20, scope: !3160)
!3252 = !DILocation(line: 2447, column: 25, scope: !3160)
!3253 = !DILocation(line: 2447, column: 2, scope: !3160)
!3254 = !DILocation(line: 2448, column: 2, scope: !3160)
!3255 = !DILocation(line: 2450, column: 8, scope: !3160)
!3256 = !DILocation(line: 2451, column: 17, scope: !3257)
!3257 = distinct !DILexicalBlock(scope: !3160, file: !3, line: 2451, column: 2)
!3258 = !DILocation(line: 2451, column: 12, scope: !3257)
!3259 = !DILocation(line: 2451, column: 10, scope: !3257)
!3260 = !DILocation(line: 2451, column: 7, scope: !3257)
!3261 = !DILocation(line: 2451, column: 24, scope: !3262)
!3262 = distinct !DILexicalBlock(scope: !3257, file: !3, line: 2451, column: 2)
!3263 = !DILocation(line: 2451, column: 2, scope: !3257)
!3264 = !DILocation(line: 2452, column: 9, scope: !3265)
!3265 = distinct !DILexicalBlock(scope: !3262, file: !3, line: 2451, column: 38)
!3266 = !DILocation(line: 2452, column: 13, scope: !3265)
!3267 = !DILocation(line: 2452, column: 7, scope: !3265)
!3268 = !DILocation(line: 2454, column: 8, scope: !3269)
!3269 = distinct !DILexicalBlock(scope: !3265, file: !3, line: 2454, column: 7)
!3270 = !DILocation(line: 2454, column: 12, scope: !3269)
!3271 = !DILocation(line: 2454, column: 19, scope: !3269)
!3272 = !DILocation(line: 2454, column: 17, scope: !3269)
!3273 = !DILocation(line: 2454, column: 26, scope: !3269)
!3274 = !DILocation(line: 2454, column: 30, scope: !3269)
!3275 = !DILocation(line: 2454, column: 34, scope: !3269)
!3276 = !DILocation(line: 2454, column: 41, scope: !3269)
!3277 = !DILocation(line: 2454, column: 39, scope: !3269)
!3278 = !DILocation(line: 2454, column: 7, scope: !3265)
!3279 = !DILocation(line: 2455, column: 18, scope: !3269)
!3280 = !DILocation(line: 2455, column: 37, scope: !3269)
!3281 = !DILocation(line: 2455, column: 4, scope: !3269)
!3282 = !DILocation(line: 2457, column: 9, scope: !3269)
!3283 = !DILocation(line: 2458, column: 2, scope: !3265)
!3284 = !DILocation(line: 2451, column: 33, scope: !3262)
!3285 = !DILocation(line: 2451, column: 31, scope: !3262)
!3286 = !DILocation(line: 2451, column: 2, scope: !3262)
!3287 = distinct !{!3287, !3263, !3288}
!3288 = !DILocation(line: 2458, column: 2, scope: !3257)
!3289 = !DILocation(line: 2459, column: 6, scope: !3290)
!3290 = distinct !DILexicalBlock(scope: !3160, file: !3, line: 2459, column: 6)
!3291 = !DILocation(line: 2459, column: 12, scope: !3290)
!3292 = !DILocation(line: 2459, column: 6, scope: !3160)
!3293 = !DILocation(line: 2459, column: 18, scope: !3290)
!3294 = !DILocation(line: 2462, column: 2, scope: !3160)
!3295 = !DILocation(line: 2462, column: 6, scope: !3160)
!3296 = !DILocation(line: 2462, column: 11, scope: !3160)
!3297 = !DILocation(line: 2463, column: 10, scope: !3160)
!3298 = !DILocation(line: 2463, column: 8, scope: !3160)
!3299 = !DILocation(line: 2464, column: 10, scope: !3160)
!3300 = !DILocation(line: 2464, column: 15, scope: !3160)
!3301 = !DILocation(line: 2464, column: 8, scope: !3160)
!3302 = !DILocation(line: 2465, column: 2, scope: !3160)
!3303 = !DILocation(line: 2465, column: 7, scope: !3160)
!3304 = !DILocation(line: 2465, column: 12, scope: !3160)
!3305 = !DILocation(line: 2466, column: 2, scope: !3160)
!3306 = !DILocation(line: 2466, column: 6, scope: !3160)
!3307 = !DILocation(line: 2466, column: 14, scope: !3160)
!3308 = !DILocation(line: 2469, column: 10, scope: !3160)
!3309 = !DILocation(line: 2469, column: 14, scope: !3160)
!3310 = !DILocation(line: 2469, column: 8, scope: !3160)
!3311 = !DILocation(line: 2470, column: 29, scope: !3160)
!3312 = !DILocation(line: 2470, column: 33, scope: !3160)
!3313 = !DILocation(line: 2470, column: 2, scope: !3160)
!3314 = !DILocation(line: 2471, column: 13, scope: !3160)
!3315 = !DILocation(line: 2471, column: 2, scope: !3160)
!3316 = !DILocation(line: 2471, column: 6, scope: !3160)
!3317 = !DILocation(line: 2471, column: 11, scope: !3160)
!3318 = !DILocation(line: 2472, column: 19, scope: !3160)
!3319 = !DILocation(line: 2472, column: 23, scope: !3160)
!3320 = !DILocation(line: 2472, column: 27, scope: !3160)
!3321 = !DILocation(line: 2472, column: 2, scope: !3160)
!3322 = !DILocation(line: 2473, column: 29, scope: !3160)
!3323 = !DILocation(line: 2473, column: 2, scope: !3160)
!3324 = !DILocation(line: 2475, column: 2, scope: !3160)
!3325 = !DILocation(line: 2476, column: 6, scope: !3326)
!3326 = distinct !DILexicalBlock(scope: !3160, file: !3, line: 2476, column: 6)
!3327 = !DILocation(line: 2476, column: 11, scope: !3326)
!3328 = !DILocation(line: 2476, column: 6, scope: !3160)
!3329 = !DILocation(line: 2476, column: 17, scope: !3326)
!3330 = !DILocation(line: 2479, column: 17, scope: !3331)
!3331 = distinct !DILexicalBlock(scope: !3160, file: !3, line: 2479, column: 2)
!3332 = !DILocation(line: 2479, column: 12, scope: !3331)
!3333 = !DILocation(line: 2479, column: 10, scope: !3331)
!3334 = !DILocation(line: 2479, column: 26, scope: !3331)
!3335 = !DILocation(line: 2479, column: 7, scope: !3331)
!3336 = !DILocation(line: 2479, column: 31, scope: !3337)
!3337 = distinct !DILexicalBlock(scope: !3331, file: !3, line: 2479, column: 2)
!3338 = !DILocation(line: 2479, column: 2, scope: !3331)
!3339 = !DILocation(line: 2480, column: 12, scope: !3340)
!3340 = distinct !DILexicalBlock(scope: !3337, file: !3, line: 2479, column: 55)
!3341 = !DILocation(line: 2480, column: 16, scope: !3340)
!3342 = !DILocation(line: 2480, column: 14, scope: !3340)
!3343 = !DILocation(line: 2480, column: 10, scope: !3340)
!3344 = !DILocation(line: 2481, column: 67, scope: !3340)
!3345 = !DILocation(line: 2481, column: 61, scope: !3340)
!3346 = !DILocation(line: 2481, column: 59, scope: !3340)
!3347 = !DILocation(line: 2481, column: 46, scope: !3340)
!3348 = !DILocation(line: 2481, column: 44, scope: !3340)
!3349 = !DILocation(line: 2481, column: 3, scope: !3340)
!3350 = !DILocation(line: 2483, column: 15, scope: !3340)
!3351 = !DILocation(line: 2483, column: 19, scope: !3340)
!3352 = !DILocation(line: 2483, column: 10, scope: !3340)
!3353 = !DILocation(line: 2483, column: 3, scope: !3340)
!3354 = !DILocation(line: 2483, column: 8, scope: !3340)
!3355 = !DILocation(line: 2485, column: 33, scope: !3340)
!3356 = !DILocation(line: 2485, column: 41, scope: !3340)
!3357 = !DILocation(line: 2485, column: 45, scope: !3340)
!3358 = !DILocation(line: 2485, column: 49, scope: !3340)
!3359 = !DILocation(line: 2485, column: 61, scope: !3340)
!3360 = !DILocation(line: 2485, column: 54, scope: !3340)
!3361 = !DILocation(line: 2485, column: 3, scope: !3340)
!3362 = !DILocation(line: 2486, column: 21, scope: !3340)
!3363 = !DILocation(line: 2486, column: 28, scope: !3340)
!3364 = !DILocation(line: 2486, column: 3, scope: !3340)
!3365 = !DILocation(line: 2487, column: 19, scope: !3340)
!3366 = !DILocation(line: 2487, column: 26, scope: !3340)
!3367 = !DILocation(line: 2487, column: 31, scope: !3340)
!3368 = !DILocation(line: 2487, column: 35, scope: !3340)
!3369 = !DILocation(line: 2487, column: 3, scope: !3340)
!3370 = !DILocation(line: 2488, column: 2, scope: !3340)
!3371 = !DILocation(line: 2479, column: 40, scope: !3337)
!3372 = !DILocation(line: 2479, column: 44, scope: !3337)
!3373 = !DILocation(line: 2479, column: 38, scope: !3337)
!3374 = !DILocation(line: 2479, column: 51, scope: !3337)
!3375 = !DILocation(line: 2479, column: 2, scope: !3337)
!3376 = distinct !{!3376, !3338, !3377}
!3377 = !DILocation(line: 2488, column: 2, scope: !3331)
!3378 = !DILocation(line: 2489, column: 2, scope: !3160)
!3379 = !DILocation(line: 2490, column: 6, scope: !3380)
!3380 = distinct !DILexicalBlock(scope: !3160, file: !3, line: 2490, column: 6)
!3381 = !DILocation(line: 2490, column: 11, scope: !3380)
!3382 = !DILocation(line: 2490, column: 6, scope: !3160)
!3383 = !DILocation(line: 2490, column: 17, scope: !3380)
!3384 = !DILocation(line: 2493, column: 32, scope: !3160)
!3385 = !DILocation(line: 2493, column: 40, scope: !3160)
!3386 = !DILocation(line: 2493, column: 44, scope: !3160)
!3387 = !DILocation(line: 2493, column: 48, scope: !3160)
!3388 = !DILocation(line: 2493, column: 60, scope: !3160)
!3389 = !DILocation(line: 2493, column: 53, scope: !3160)
!3390 = !DILocation(line: 2493, column: 2, scope: !3160)
!3391 = !DILocation(line: 2496, column: 29, scope: !3160)
!3392 = !DILocation(line: 2496, column: 2, scope: !3160)
!3393 = !DILocation(line: 2497, column: 2, scope: !3160)
!3394 = !DILocation(line: 2498, column: 16, scope: !3160)
!3395 = !DILocation(line: 2498, column: 2, scope: !3160)
!3396 = !DILocation(line: 2501, column: 9, scope: !3160)
!3397 = !DILocation(line: 2501, column: 2, scope: !3160)
!3398 = !DILocation(line: 2501, column: 7, scope: !3160)
!3399 = !DILocation(line: 2502, column: 13, scope: !3160)
!3400 = !DILocation(line: 2502, column: 2, scope: !3160)
!3401 = !DILocation(line: 2502, column: 6, scope: !3160)
!3402 = !DILocation(line: 2502, column: 11, scope: !3160)
!3403 = !DILocation(line: 2503, column: 14, scope: !3160)
!3404 = !DILocation(line: 2503, column: 2, scope: !3160)
!3405 = !DILocation(line: 2503, column: 7, scope: !3160)
!3406 = !DILocation(line: 2503, column: 12, scope: !3160)
!3407 = !DILocation(line: 2504, column: 2, scope: !3160)
!3408 = !DILocation(line: 2504, column: 6, scope: !3160)
!3409 = !DILocation(line: 2504, column: 11, scope: !3160)
!3410 = !DILocation(line: 2505, column: 1, scope: !3160)
!3411 = distinct !DISubprogram(name: "draw_ghost_poses", scope: !3, file: !3, line: 2510, type: !2969, scopeLine: 2511, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1930)
!3412 = !DILocalVariable(name: "scene", arg: 1, scope: !3411, file: !3, line: 2510, type: !1983)
!3413 = !DILocation(line: 2510, column: 37, scope: !3411)
!3414 = !DILocalVariable(name: "v3d", arg: 2, scope: !3411, file: !3, line: 2510, type: !1985)
!3415 = !DILocation(line: 2510, column: 52, scope: !3411)
!3416 = !DILocalVariable(name: "ar", arg: 3, scope: !3411, file: !3, line: 2510, type: !2070)
!3417 = !DILocation(line: 2510, column: 66, scope: !3411)
!3418 = !DILocalVariable(name: "base", arg: 4, scope: !3411, file: !3, line: 2510, type: !2143)
!3419 = !DILocation(line: 2510, column: 76, scope: !3411)
!3420 = !DILocalVariable(name: "ob", scope: !3411, file: !3, line: 2512, type: !2165)
!3421 = !DILocation(line: 2512, column: 10, scope: !3411)
!3422 = !DILocation(line: 2512, column: 15, scope: !3411)
!3423 = !DILocation(line: 2512, column: 21, scope: !3411)
!3424 = !DILocalVariable(name: "adt", scope: !3411, file: !3, line: 2513, type: !2984)
!3425 = !DILocation(line: 2513, column: 12, scope: !3411)
!3426 = !DILocation(line: 2513, column: 40, scope: !3411)
!3427 = !DILocation(line: 2513, column: 44, scope: !3411)
!3428 = !DILocation(line: 2513, column: 18, scope: !3411)
!3429 = !DILocalVariable(name: "arm", scope: !3411, file: !3, line: 2514, type: !376)
!3430 = !DILocation(line: 2514, column: 13, scope: !3411)
!3431 = !DILocation(line: 2514, column: 19, scope: !3411)
!3432 = !DILocation(line: 2514, column: 23, scope: !3411)
!3433 = !DILocalVariable(name: "posen", scope: !3411, file: !3, line: 2515, type: !2995)
!3434 = !DILocation(line: 2515, column: 9, scope: !3411)
!3435 = !DILocalVariable(name: "poseo", scope: !3411, file: !3, line: 2515, type: !2995)
!3436 = !DILocation(line: 2515, column: 17, scope: !3411)
!3437 = !DILocalVariable(name: "cur", scope: !3411, file: !3, line: 2516, type: !375)
!3438 = !DILocation(line: 2516, column: 8, scope: !3411)
!3439 = !DILocalVariable(name: "start", scope: !3411, file: !3, line: 2516, type: !375)
!3440 = !DILocation(line: 2516, column: 13, scope: !3411)
!3441 = !DILocalVariable(name: "end", scope: !3411, file: !3, line: 2516, type: !375)
!3442 = !DILocation(line: 2516, column: 20, scope: !3411)
!3443 = !DILocalVariable(name: "stepsize", scope: !3411, file: !3, line: 2516, type: !375)
!3444 = !DILocation(line: 2516, column: 25, scope: !3411)
!3445 = !DILocalVariable(name: "range", scope: !3411, file: !3, line: 2516, type: !375)
!3446 = !DILocation(line: 2516, column: 35, scope: !3411)
!3447 = !DILocalVariable(name: "colfac", scope: !3411, file: !3, line: 2516, type: !375)
!3448 = !DILocation(line: 2516, column: 42, scope: !3411)
!3449 = !DILocalVariable(name: "actframe", scope: !3411, file: !3, line: 2516, type: !375)
!3450 = !DILocation(line: 2516, column: 50, scope: !3411)
!3451 = !DILocalVariable(name: "ctime", scope: !3411, file: !3, line: 2516, type: !375)
!3452 = !DILocation(line: 2516, column: 60, scope: !3411)
!3453 = !DILocalVariable(name: "cfrao", scope: !3411, file: !3, line: 2517, type: !417)
!3454 = !DILocation(line: 2517, column: 6, scope: !3411)
!3455 = !DILocalVariable(name: "flago", scope: !3411, file: !3, line: 2517, type: !417)
!3456 = !DILocation(line: 2517, column: 13, scope: !3411)
!3457 = !DILocation(line: 2520, column: 6, scope: !3458)
!3458 = distinct !DILexicalBlock(scope: !3411, file: !3, line: 2520, column: 6)
!3459 = !DILocation(line: 2520, column: 6, scope: !3411)
!3460 = !DILocation(line: 2521, column: 3, scope: !3458)
!3461 = !DILocation(line: 2523, column: 20, scope: !3411)
!3462 = !DILocation(line: 2523, column: 25, scope: !3411)
!3463 = !DILocation(line: 2523, column: 2, scope: !3411)
!3464 = !DILocation(line: 2524, column: 6, scope: !3465)
!3465 = distinct !DILexicalBlock(scope: !3411, file: !3, line: 2524, column: 6)
!3466 = !DILocation(line: 2524, column: 15, scope: !3465)
!3467 = !DILocation(line: 2524, column: 12, scope: !3465)
!3468 = !DILocation(line: 2524, column: 6, scope: !3411)
!3469 = !DILocation(line: 2525, column: 3, scope: !3465)
!3470 = !DILocation(line: 2527, column: 21, scope: !3411)
!3471 = !DILocation(line: 2527, column: 26, scope: !3411)
!3472 = !DILocation(line: 2527, column: 13, scope: !3411)
!3473 = !DILocation(line: 2527, column: 11, scope: !3411)
!3474 = !DILocation(line: 2528, column: 18, scope: !3411)
!3475 = !DILocation(line: 2528, column: 23, scope: !3411)
!3476 = !DILocation(line: 2528, column: 10, scope: !3411)
!3477 = !DILocation(line: 2528, column: 34, scope: !3411)
!3478 = !DILocation(line: 2528, column: 32, scope: !3411)
!3479 = !DILocation(line: 2528, column: 43, scope: !3411)
!3480 = !DILocation(line: 2528, column: 8, scope: !3411)
!3481 = !DILocation(line: 2531, column: 2, scope: !3411)
!3482 = !DILocation(line: 2531, column: 6, scope: !3411)
!3483 = !DILocation(line: 2531, column: 11, scope: !3411)
!3484 = !DILocation(line: 2532, column: 10, scope: !3411)
!3485 = !DILocation(line: 2532, column: 8, scope: !3411)
!3486 = !DILocation(line: 2533, column: 37, scope: !3411)
!3487 = !DILocation(line: 2533, column: 49, scope: !3411)
!3488 = !DILocation(line: 2533, column: 42, scope: !3411)
!3489 = !DILocation(line: 2533, column: 13, scope: !3411)
!3490 = !DILocation(line: 2533, column: 11, scope: !3411)
!3491 = !DILocation(line: 2534, column: 10, scope: !3411)
!3492 = !DILocation(line: 2534, column: 15, scope: !3411)
!3493 = !DILocation(line: 2534, column: 8, scope: !3411)
!3494 = !DILocation(line: 2535, column: 2, scope: !3411)
!3495 = !DILocation(line: 2535, column: 7, scope: !3411)
!3496 = !DILocation(line: 2535, column: 12, scope: !3411)
!3497 = !DILocation(line: 2538, column: 10, scope: !3411)
!3498 = !DILocation(line: 2538, column: 14, scope: !3411)
!3499 = !DILocation(line: 2538, column: 8, scope: !3411)
!3500 = !DILocation(line: 2539, column: 29, scope: !3411)
!3501 = !DILocation(line: 2539, column: 33, scope: !3411)
!3502 = !DILocation(line: 2539, column: 2, scope: !3411)
!3503 = !DILocation(line: 2540, column: 13, scope: !3411)
!3504 = !DILocation(line: 2540, column: 2, scope: !3411)
!3505 = !DILocation(line: 2540, column: 6, scope: !3411)
!3506 = !DILocation(line: 2540, column: 11, scope: !3411)
!3507 = !DILocation(line: 2541, column: 19, scope: !3411)
!3508 = !DILocation(line: 2541, column: 23, scope: !3411)
!3509 = !DILocation(line: 2541, column: 27, scope: !3411)
!3510 = !DILocation(line: 2541, column: 2, scope: !3411)
!3511 = !DILocation(line: 2542, column: 29, scope: !3411)
!3512 = !DILocation(line: 2542, column: 2, scope: !3411)
!3513 = !DILocation(line: 2544, column: 2, scope: !3411)
!3514 = !DILocation(line: 2545, column: 6, scope: !3515)
!3515 = distinct !DILexicalBlock(scope: !3411, file: !3, line: 2545, column: 6)
!3516 = !DILocation(line: 2545, column: 11, scope: !3515)
!3517 = !DILocation(line: 2545, column: 6, scope: !3411)
!3518 = !DILocation(line: 2545, column: 17, scope: !3515)
!3519 = !DILocation(line: 2548, column: 13, scope: !3520)
!3520 = distinct !DILexicalBlock(scope: !3411, file: !3, line: 2548, column: 2)
!3521 = !DILocation(line: 2548, column: 11, scope: !3520)
!3522 = !DILocation(line: 2548, column: 7, scope: !3520)
!3523 = !DILocation(line: 2548, column: 23, scope: !3524)
!3524 = distinct !DILexicalBlock(scope: !3520, file: !3, line: 2548, column: 2)
!3525 = !DILocation(line: 2548, column: 29, scope: !3524)
!3526 = !DILocation(line: 2548, column: 27, scope: !3524)
!3527 = !DILocation(line: 2548, column: 2, scope: !3520)
!3528 = !DILocation(line: 2549, column: 11, scope: !3529)
!3529 = distinct !DILexicalBlock(scope: !3524, file: !3, line: 2548, column: 53)
!3530 = !DILocation(line: 2549, column: 29, scope: !3529)
!3531 = !DILocation(line: 2549, column: 36, scope: !3529)
!3532 = !DILocation(line: 2549, column: 24, scope: !3529)
!3533 = !DILocation(line: 2549, column: 17, scope: !3529)
!3534 = !DILocation(line: 2549, column: 15, scope: !3529)
!3535 = !DILocation(line: 2549, column: 9, scope: !3529)
!3536 = !DILocation(line: 2550, column: 12, scope: !3529)
!3537 = !DILocation(line: 2550, column: 20, scope: !3529)
!3538 = !DILocation(line: 2550, column: 18, scope: !3529)
!3539 = !DILocation(line: 2550, column: 10, scope: !3529)
!3540 = !DILocation(line: 2551, column: 67, scope: !3529)
!3541 = !DILocation(line: 2551, column: 61, scope: !3529)
!3542 = !DILocation(line: 2551, column: 59, scope: !3529)
!3543 = !DILocation(line: 2551, column: 46, scope: !3529)
!3544 = !DILocation(line: 2551, column: 44, scope: !3529)
!3545 = !DILocation(line: 2551, column: 3, scope: !3529)
!3546 = !DILocation(line: 2554, column: 7, scope: !3547)
!3547 = distinct !DILexicalBlock(scope: !3529, file: !3, line: 2554, column: 7)
!3548 = !DILocation(line: 2554, column: 18, scope: !3547)
!3549 = !DILocation(line: 2554, column: 16, scope: !3547)
!3550 = !DILocation(line: 2554, column: 27, scope: !3547)
!3551 = !DILocation(line: 2554, column: 24, scope: !3547)
!3552 = !DILocation(line: 2554, column: 33, scope: !3547)
!3553 = !DILocation(line: 2554, column: 36, scope: !3547)
!3554 = !DILocation(line: 2554, column: 47, scope: !3547)
!3555 = !DILocation(line: 2554, column: 45, scope: !3547)
!3556 = !DILocation(line: 2554, column: 56, scope: !3547)
!3557 = !DILocation(line: 2554, column: 53, scope: !3547)
!3558 = !DILocation(line: 2554, column: 7, scope: !3529)
!3559 = !DILocation(line: 2555, column: 40, scope: !3560)
!3560 = distinct !DILexicalBlock(scope: !3547, file: !3, line: 2554, column: 61)
!3561 = !DILocation(line: 2555, column: 45, scope: !3560)
!3562 = !DILocation(line: 2555, column: 56, scope: !3560)
!3563 = !DILocation(line: 2555, column: 54, scope: !3560)
!3564 = !DILocation(line: 2555, column: 16, scope: !3560)
!3565 = !DILocation(line: 2555, column: 11, scope: !3560)
!3566 = !DILocation(line: 2555, column: 4, scope: !3560)
!3567 = !DILocation(line: 2555, column: 9, scope: !3560)
!3568 = !DILocation(line: 2557, column: 8, scope: !3569)
!3569 = distinct !DILexicalBlock(scope: !3560, file: !3, line: 2557, column: 8)
!3570 = !DILocation(line: 2557, column: 16, scope: !3569)
!3571 = !DILocation(line: 2557, column: 13, scope: !3569)
!3572 = !DILocation(line: 2557, column: 8, scope: !3560)
!3573 = !DILocation(line: 2558, column: 35, scope: !3574)
!3574 = distinct !DILexicalBlock(scope: !3569, file: !3, line: 2557, column: 23)
!3575 = !DILocation(line: 2558, column: 43, scope: !3574)
!3576 = !DILocation(line: 2558, column: 47, scope: !3574)
!3577 = !DILocation(line: 2558, column: 51, scope: !3574)
!3578 = !DILocation(line: 2558, column: 63, scope: !3574)
!3579 = !DILocation(line: 2558, column: 56, scope: !3574)
!3580 = !DILocation(line: 2558, column: 5, scope: !3574)
!3581 = !DILocation(line: 2559, column: 23, scope: !3574)
!3582 = !DILocation(line: 2559, column: 30, scope: !3574)
!3583 = !DILocation(line: 2559, column: 5, scope: !3574)
!3584 = !DILocation(line: 2560, column: 21, scope: !3574)
!3585 = !DILocation(line: 2560, column: 28, scope: !3574)
!3586 = !DILocation(line: 2560, column: 33, scope: !3574)
!3587 = !DILocation(line: 2560, column: 37, scope: !3574)
!3588 = !DILocation(line: 2560, column: 5, scope: !3574)
!3589 = !DILocation(line: 2561, column: 4, scope: !3574)
!3590 = !DILocation(line: 2562, column: 3, scope: !3560)
!3591 = !DILocation(line: 2564, column: 11, scope: !3529)
!3592 = !DILocation(line: 2564, column: 36, scope: !3529)
!3593 = !DILocation(line: 2564, column: 29, scope: !3529)
!3594 = !DILocation(line: 2564, column: 43, scope: !3529)
!3595 = !DILocation(line: 2564, column: 24, scope: !3529)
!3596 = !DILocation(line: 2564, column: 17, scope: !3529)
!3597 = !DILocation(line: 2564, column: 15, scope: !3529)
!3598 = !DILocation(line: 2564, column: 55, scope: !3529)
!3599 = !DILocation(line: 2564, column: 53, scope: !3529)
!3600 = !DILocation(line: 2564, column: 64, scope: !3529)
!3601 = !DILocation(line: 2564, column: 9, scope: !3529)
!3602 = !DILocation(line: 2565, column: 12, scope: !3529)
!3603 = !DILocation(line: 2565, column: 20, scope: !3529)
!3604 = !DILocation(line: 2565, column: 18, scope: !3529)
!3605 = !DILocation(line: 2565, column: 10, scope: !3529)
!3606 = !DILocation(line: 2566, column: 67, scope: !3529)
!3607 = !DILocation(line: 2566, column: 61, scope: !3529)
!3608 = !DILocation(line: 2566, column: 59, scope: !3529)
!3609 = !DILocation(line: 2566, column: 46, scope: !3529)
!3610 = !DILocation(line: 2566, column: 44, scope: !3529)
!3611 = !DILocation(line: 2566, column: 3, scope: !3529)
!3612 = !DILocation(line: 2569, column: 8, scope: !3613)
!3613 = distinct !DILexicalBlock(scope: !3529, file: !3, line: 2569, column: 7)
!3614 = !DILocation(line: 2569, column: 19, scope: !3613)
!3615 = !DILocation(line: 2569, column: 17, scope: !3613)
!3616 = !DILocation(line: 2569, column: 28, scope: !3613)
!3617 = !DILocation(line: 2569, column: 25, scope: !3613)
!3618 = !DILocation(line: 2569, column: 35, scope: !3613)
!3619 = !DILocation(line: 2569, column: 39, scope: !3613)
!3620 = !DILocation(line: 2569, column: 50, scope: !3613)
!3621 = !DILocation(line: 2569, column: 48, scope: !3613)
!3622 = !DILocation(line: 2569, column: 59, scope: !3613)
!3623 = !DILocation(line: 2569, column: 56, scope: !3613)
!3624 = !DILocation(line: 2569, column: 7, scope: !3529)
!3625 = !DILocation(line: 2570, column: 40, scope: !3626)
!3626 = distinct !DILexicalBlock(scope: !3613, file: !3, line: 2569, column: 65)
!3627 = !DILocation(line: 2570, column: 45, scope: !3626)
!3628 = !DILocation(line: 2570, column: 56, scope: !3626)
!3629 = !DILocation(line: 2570, column: 54, scope: !3626)
!3630 = !DILocation(line: 2570, column: 16, scope: !3626)
!3631 = !DILocation(line: 2570, column: 11, scope: !3626)
!3632 = !DILocation(line: 2570, column: 4, scope: !3626)
!3633 = !DILocation(line: 2570, column: 9, scope: !3626)
!3634 = !DILocation(line: 2572, column: 8, scope: !3635)
!3635 = distinct !DILexicalBlock(scope: !3626, file: !3, line: 2572, column: 8)
!3636 = !DILocation(line: 2572, column: 16, scope: !3635)
!3637 = !DILocation(line: 2572, column: 13, scope: !3635)
!3638 = !DILocation(line: 2572, column: 8, scope: !3626)
!3639 = !DILocation(line: 2573, column: 35, scope: !3640)
!3640 = distinct !DILexicalBlock(scope: !3635, file: !3, line: 2572, column: 23)
!3641 = !DILocation(line: 2573, column: 43, scope: !3640)
!3642 = !DILocation(line: 2573, column: 47, scope: !3640)
!3643 = !DILocation(line: 2573, column: 51, scope: !3640)
!3644 = !DILocation(line: 2573, column: 63, scope: !3640)
!3645 = !DILocation(line: 2573, column: 56, scope: !3640)
!3646 = !DILocation(line: 2573, column: 5, scope: !3640)
!3647 = !DILocation(line: 2574, column: 23, scope: !3640)
!3648 = !DILocation(line: 2574, column: 30, scope: !3640)
!3649 = !DILocation(line: 2574, column: 5, scope: !3640)
!3650 = !DILocation(line: 2575, column: 21, scope: !3640)
!3651 = !DILocation(line: 2575, column: 28, scope: !3640)
!3652 = !DILocation(line: 2575, column: 33, scope: !3640)
!3653 = !DILocation(line: 2575, column: 37, scope: !3640)
!3654 = !DILocation(line: 2575, column: 5, scope: !3640)
!3655 = !DILocation(line: 2576, column: 4, scope: !3640)
!3656 = !DILocation(line: 2577, column: 3, scope: !3626)
!3657 = !DILocation(line: 2578, column: 2, scope: !3529)
!3658 = !DILocation(line: 2548, column: 43, scope: !3524)
!3659 = !DILocation(line: 2548, column: 40, scope: !3524)
!3660 = !DILocation(line: 2548, column: 2, scope: !3524)
!3661 = distinct !{!3661, !3527, !3662}
!3662 = !DILocation(line: 2578, column: 2, scope: !3520)
!3663 = !DILocation(line: 2579, column: 2, scope: !3411)
!3664 = !DILocation(line: 2580, column: 6, scope: !3665)
!3665 = distinct !DILexicalBlock(scope: !3411, file: !3, line: 2580, column: 6)
!3666 = !DILocation(line: 2580, column: 11, scope: !3665)
!3667 = !DILocation(line: 2580, column: 6, scope: !3411)
!3668 = !DILocation(line: 2580, column: 17, scope: !3665)
!3669 = !DILocation(line: 2583, column: 32, scope: !3411)
!3670 = !DILocation(line: 2583, column: 40, scope: !3411)
!3671 = !DILocation(line: 2583, column: 44, scope: !3411)
!3672 = !DILocation(line: 2583, column: 48, scope: !3411)
!3673 = !DILocation(line: 2583, column: 60, scope: !3411)
!3674 = !DILocation(line: 2583, column: 53, scope: !3411)
!3675 = !DILocation(line: 2583, column: 2, scope: !3411)
!3676 = !DILocation(line: 2586, column: 29, scope: !3411)
!3677 = !DILocation(line: 2586, column: 2, scope: !3411)
!3678 = !DILocation(line: 2587, column: 16, scope: !3411)
!3679 = !DILocation(line: 2587, column: 2, scope: !3411)
!3680 = !DILocation(line: 2590, column: 9, scope: !3411)
!3681 = !DILocation(line: 2590, column: 2, scope: !3411)
!3682 = !DILocation(line: 2590, column: 7, scope: !3411)
!3683 = !DILocation(line: 2591, column: 13, scope: !3411)
!3684 = !DILocation(line: 2591, column: 2, scope: !3411)
!3685 = !DILocation(line: 2591, column: 6, scope: !3411)
!3686 = !DILocation(line: 2591, column: 11, scope: !3411)
!3687 = !DILocation(line: 2592, column: 14, scope: !3411)
!3688 = !DILocation(line: 2592, column: 2, scope: !3411)
!3689 = !DILocation(line: 2592, column: 7, scope: !3411)
!3690 = !DILocation(line: 2592, column: 12, scope: !3411)
!3691 = !DILocation(line: 2593, column: 2, scope: !3411)
!3692 = !DILocation(line: 2593, column: 6, scope: !3411)
!3693 = !DILocation(line: 2593, column: 11, scope: !3411)
!3694 = !DILocation(line: 2594, column: 1, scope: !3411)
!3695 = distinct !DISubprogram(name: "draw_pose_paths", scope: !3, file: !3, line: 2309, type: !3696, scopeLine: 2310, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1930)
!3696 = !DISubroutineType(types: !3697)
!3697 = !{null, !1983, !1985, !2070, !2165}
!3698 = !DILocalVariable(name: "scene", arg: 1, scope: !3695, file: !3, line: 2309, type: !1983)
!3699 = !DILocation(line: 2309, column: 36, scope: !3695)
!3700 = !DILocalVariable(name: "v3d", arg: 2, scope: !3695, file: !3, line: 2309, type: !1985)
!3701 = !DILocation(line: 2309, column: 51, scope: !3695)
!3702 = !DILocalVariable(name: "ar", arg: 3, scope: !3695, file: !3, line: 2309, type: !2070)
!3703 = !DILocation(line: 2309, column: 65, scope: !3695)
!3704 = !DILocalVariable(name: "ob", arg: 4, scope: !3695, file: !3, line: 2309, type: !2165)
!3705 = !DILocation(line: 2309, column: 77, scope: !3695)
!3706 = !DILocalVariable(name: "avs", scope: !3695, file: !3, line: 2311, type: !3707)
!3707 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !707, size: 64)
!3708 = !DILocation(line: 2311, column: 20, scope: !3695)
!3709 = !DILocation(line: 2311, column: 27, scope: !3695)
!3710 = !DILocation(line: 2311, column: 31, scope: !3695)
!3711 = !DILocation(line: 2311, column: 37, scope: !3695)
!3712 = !DILocalVariable(name: "arm", scope: !3695, file: !3, line: 2312, type: !376)
!3713 = !DILocation(line: 2312, column: 13, scope: !3695)
!3714 = !DILocation(line: 2312, column: 19, scope: !3695)
!3715 = !DILocation(line: 2312, column: 23, scope: !3695)
!3716 = !DILocalVariable(name: "pchan", scope: !3695, file: !3, line: 2313, type: !3717)
!3717 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3718, size: 64)
!3718 = !DIDerivedType(tag: DW_TAG_typedef, name: "bPoseChannel", file: !322, line: 243, baseType: !3719)
!3719 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bPoseChannel", file: !322, line: 187, size: 4352, elements: !3720)
!3720 = !{!3721, !3723, !3724, !3725, !3726, !3727, !3728, !3729, !3730, !3731, !3732, !3733, !3734, !3735, !3736, !3737, !3738, !3739, !3740, !3741, !3742, !3743, !3744, !3745, !3746, !3747, !3748, !3749, !3750, !3751, !3752, !3753, !3754, !3755, !3756, !3757, !3758, !3759, !3760, !3761}
!3721 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3719, file: !322, line: 188, baseType: !3722, size: 64)
!3722 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3719, size: 64)
!3723 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3719, file: !322, line: 188, baseType: !3722, size: 64, offset: 64)
!3724 = !DIDerivedType(tag: DW_TAG_member, name: "prop", scope: !3719, file: !322, line: 190, baseType: !421, size: 64, offset: 128)
!3725 = !DIDerivedType(tag: DW_TAG_member, name: "constraints", scope: !3719, file: !322, line: 192, baseType: !442, size: 128, offset: 192)
!3726 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3719, file: !322, line: 193, baseType: !432, size: 512, offset: 320)
!3727 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3719, file: !322, line: 195, baseType: !415, size: 16, offset: 832)
!3728 = !DIDerivedType(tag: DW_TAG_member, name: "ikflag", scope: !3719, file: !322, line: 196, baseType: !415, size: 16, offset: 848)
!3729 = !DIDerivedType(tag: DW_TAG_member, name: "protectflag", scope: !3719, file: !322, line: 197, baseType: !415, size: 16, offset: 864)
!3730 = !DIDerivedType(tag: DW_TAG_member, name: "agrp_index", scope: !3719, file: !322, line: 198, baseType: !415, size: 16, offset: 880)
!3731 = !DIDerivedType(tag: DW_TAG_member, name: "constflag", scope: !3719, file: !322, line: 199, baseType: !402, size: 8, offset: 896)
!3732 = !DIDerivedType(tag: DW_TAG_member, name: "selectflag", scope: !3719, file: !322, line: 200, baseType: !402, size: 8, offset: 904)
!3733 = !DIDerivedType(tag: DW_TAG_member, name: "pad0", scope: !3719, file: !322, line: 201, baseType: !1255, size: 48, offset: 912)
!3734 = !DIDerivedType(tag: DW_TAG_member, name: "bone", scope: !3719, file: !322, line: 203, baseType: !530, size: 64, offset: 960)
!3735 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !3719, file: !322, line: 204, baseType: !3722, size: 64, offset: 1024)
!3736 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !3719, file: !322, line: 205, baseType: !3722, size: 64, offset: 1088)
!3737 = !DIDerivedType(tag: DW_TAG_member, name: "iktree", scope: !3719, file: !322, line: 207, baseType: !444, size: 128, offset: 1152)
!3738 = !DIDerivedType(tag: DW_TAG_member, name: "siktree", scope: !3719, file: !322, line: 208, baseType: !444, size: 128, offset: 1280)
!3739 = !DIDerivedType(tag: DW_TAG_member, name: "mpath", scope: !3719, file: !322, line: 210, baseType: !734, size: 64, offset: 1408)
!3740 = !DIDerivedType(tag: DW_TAG_member, name: "custom", scope: !3719, file: !322, line: 211, baseType: !650, size: 64, offset: 1472)
!3741 = !DIDerivedType(tag: DW_TAG_member, name: "custom_tx", scope: !3719, file: !322, line: 212, baseType: !3722, size: 64, offset: 1536)
!3742 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !3719, file: !322, line: 217, baseType: !538, size: 96, offset: 1600)
!3743 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3719, file: !322, line: 218, baseType: !538, size: 96, offset: 1696)
!3744 = !DIDerivedType(tag: DW_TAG_member, name: "eul", scope: !3719, file: !322, line: 221, baseType: !538, size: 96, offset: 1792)
!3745 = !DIDerivedType(tag: DW_TAG_member, name: "quat", scope: !3719, file: !322, line: 222, baseType: !772, size: 128, offset: 1888)
!3746 = !DIDerivedType(tag: DW_TAG_member, name: "rotAxis", scope: !3719, file: !322, line: 223, baseType: !538, size: 96, offset: 2016)
!3747 = !DIDerivedType(tag: DW_TAG_member, name: "rotAngle", scope: !3719, file: !322, line: 223, baseType: !375, size: 32, offset: 2112)
!3748 = !DIDerivedType(tag: DW_TAG_member, name: "rotmode", scope: !3719, file: !322, line: 224, baseType: !415, size: 16, offset: 2144)
!3749 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3719, file: !322, line: 225, baseType: !415, size: 16, offset: 2160)
!3750 = !DIDerivedType(tag: DW_TAG_member, name: "chan_mat", scope: !3719, file: !322, line: 227, baseType: !549, size: 512, offset: 2176)
!3751 = !DIDerivedType(tag: DW_TAG_member, name: "pose_mat", scope: !3719, file: !322, line: 228, baseType: !549, size: 512, offset: 2688)
!3752 = !DIDerivedType(tag: DW_TAG_member, name: "constinv", scope: !3719, file: !322, line: 230, baseType: !549, size: 512, offset: 3200)
!3753 = !DIDerivedType(tag: DW_TAG_member, name: "pose_head", scope: !3719, file: !322, line: 233, baseType: !538, size: 96, offset: 3712)
!3754 = !DIDerivedType(tag: DW_TAG_member, name: "pose_tail", scope: !3719, file: !322, line: 234, baseType: !538, size: 96, offset: 3808)
!3755 = !DIDerivedType(tag: DW_TAG_member, name: "limitmin", scope: !3719, file: !322, line: 236, baseType: !538, size: 96, offset: 3904)
!3756 = !DIDerivedType(tag: DW_TAG_member, name: "limitmax", scope: !3719, file: !322, line: 236, baseType: !538, size: 96, offset: 4000)
!3757 = !DIDerivedType(tag: DW_TAG_member, name: "stiffness", scope: !3719, file: !322, line: 237, baseType: !538, size: 96, offset: 4096)
!3758 = !DIDerivedType(tag: DW_TAG_member, name: "ikstretch", scope: !3719, file: !322, line: 238, baseType: !375, size: 32, offset: 4192)
!3759 = !DIDerivedType(tag: DW_TAG_member, name: "ikrotweight", scope: !3719, file: !322, line: 239, baseType: !375, size: 32, offset: 4224)
!3760 = !DIDerivedType(tag: DW_TAG_member, name: "iklinweight", scope: !3719, file: !322, line: 240, baseType: !375, size: 32, offset: 4256)
!3761 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !3719, file: !322, line: 242, baseType: !386, size: 64, offset: 4288)
!3762 = !DILocation(line: 2313, column: 16, scope: !3695)
!3763 = !DILocation(line: 2316, column: 25, scope: !3695)
!3764 = !DILocation(line: 2316, column: 30, scope: !3695)
!3765 = !DILocation(line: 2316, column: 2, scope: !3695)
!3766 = !DILocation(line: 2319, column: 15, scope: !3767)
!3767 = distinct !DILexicalBlock(scope: !3695, file: !3, line: 2319, column: 2)
!3768 = !DILocation(line: 2319, column: 19, scope: !3767)
!3769 = !DILocation(line: 2319, column: 25, scope: !3767)
!3770 = !DILocation(line: 2319, column: 34, scope: !3767)
!3771 = !DILocation(line: 2319, column: 13, scope: !3767)
!3772 = !DILocation(line: 2319, column: 7, scope: !3767)
!3773 = !DILocation(line: 2319, column: 41, scope: !3774)
!3774 = distinct !DILexicalBlock(scope: !3767, file: !3, line: 2319, column: 2)
!3775 = !DILocation(line: 2319, column: 2, scope: !3767)
!3776 = !DILocation(line: 2320, column: 8, scope: !3777)
!3777 = distinct !DILexicalBlock(scope: !3778, file: !3, line: 2320, column: 7)
!3778 = distinct !DILexicalBlock(scope: !3774, file: !3, line: 2319, column: 69)
!3779 = !DILocation(line: 2320, column: 15, scope: !3777)
!3780 = !DILocation(line: 2320, column: 21, scope: !3777)
!3781 = !DILocation(line: 2320, column: 29, scope: !3777)
!3782 = !DILocation(line: 2320, column: 34, scope: !3777)
!3783 = !DILocation(line: 2320, column: 27, scope: !3777)
!3784 = !DILocation(line: 2320, column: 41, scope: !3777)
!3785 = !DILocation(line: 2320, column: 45, scope: !3777)
!3786 = !DILocation(line: 2320, column: 52, scope: !3777)
!3787 = !DILocation(line: 2320, column: 44, scope: !3777)
!3788 = !DILocation(line: 2320, column: 7, scope: !3778)
!3789 = !DILocation(line: 2321, column: 30, scope: !3777)
!3790 = !DILocation(line: 2321, column: 37, scope: !3777)
!3791 = !DILocation(line: 2321, column: 41, scope: !3777)
!3792 = !DILocation(line: 2321, column: 48, scope: !3777)
!3793 = !DILocation(line: 2321, column: 53, scope: !3777)
!3794 = !DILocation(line: 2321, column: 60, scope: !3777)
!3795 = !DILocation(line: 2321, column: 4, scope: !3777)
!3796 = !DILocation(line: 2322, column: 2, scope: !3778)
!3797 = !DILocation(line: 2319, column: 56, scope: !3774)
!3798 = !DILocation(line: 2319, column: 63, scope: !3774)
!3799 = !DILocation(line: 2319, column: 54, scope: !3774)
!3800 = !DILocation(line: 2319, column: 2, scope: !3774)
!3801 = distinct !{!3801, !3775, !3802}
!3802 = !DILocation(line: 2322, column: 2, scope: !3767)
!3803 = !DILocation(line: 2325, column: 28, scope: !3695)
!3804 = !DILocation(line: 2325, column: 2, scope: !3695)
!3805 = !DILocation(line: 2326, column: 1, scope: !3695)
!3806 = distinct !DISubprogram(name: "draw_pose_bones", scope: !3, file: !3, line: 1656, type: !3807, scopeLine: 1659, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1930)
!3807 = !DISubroutineType(types: !3808)
!3808 = !{null, !1983, !1985, !2070, !2143, !2145, !2146, !2147, !2147}
!3809 = !DILocalVariable(name: "scene", arg: 1, scope: !3806, file: !3, line: 1656, type: !1983)
!3810 = !DILocation(line: 1656, column: 36, scope: !3806)
!3811 = !DILocalVariable(name: "v3d", arg: 2, scope: !3806, file: !3, line: 1656, type: !1985)
!3812 = !DILocation(line: 1656, column: 51, scope: !3806)
!3813 = !DILocalVariable(name: "ar", arg: 3, scope: !3806, file: !3, line: 1656, type: !2070)
!3814 = !DILocation(line: 1656, column: 65, scope: !3806)
!3815 = !DILocalVariable(name: "base", arg: 4, scope: !3806, file: !3, line: 1656, type: !2143)
!3816 = !DILocation(line: 1656, column: 75, scope: !3806)
!3817 = !DILocalVariable(name: "dt", arg: 5, scope: !3806, file: !3, line: 1657, type: !2145)
!3818 = !DILocation(line: 1657, column: 41, scope: !3806)
!3819 = !DILocalVariable(name: "ob_wire_col", arg: 6, scope: !3806, file: !3, line: 1657, type: !2146)
!3820 = !DILocation(line: 1657, column: 65, scope: !3806)
!3821 = !DILocalVariable(name: "do_const_color", arg: 7, scope: !3806, file: !3, line: 1658, type: !2147)
!3822 = !DILocation(line: 1658, column: 40, scope: !3806)
!3823 = !DILocalVariable(name: "is_outline", arg: 8, scope: !3806, file: !3, line: 1658, type: !2147)
!3824 = !DILocation(line: 1658, column: 67, scope: !3806)
!3825 = !DILocalVariable(name: "rv3d", scope: !3806, file: !3, line: 1660, type: !2376)
!3826 = !DILocation(line: 1660, column: 16, scope: !3806)
!3827 = !DILocation(line: 1660, column: 23, scope: !3806)
!3828 = !DILocation(line: 1660, column: 27, scope: !3806)
!3829 = !DILocalVariable(name: "ob", scope: !3806, file: !3, line: 1661, type: !2165)
!3830 = !DILocation(line: 1661, column: 10, scope: !3806)
!3831 = !DILocation(line: 1661, column: 15, scope: !3806)
!3832 = !DILocation(line: 1661, column: 21, scope: !3806)
!3833 = !DILocalVariable(name: "arm", scope: !3806, file: !3, line: 1662, type: !376)
!3834 = !DILocation(line: 1662, column: 13, scope: !3806)
!3835 = !DILocation(line: 1662, column: 19, scope: !3806)
!3836 = !DILocation(line: 1662, column: 23, scope: !3806)
!3837 = !DILocalVariable(name: "pchan", scope: !3806, file: !3, line: 1663, type: !3717)
!3838 = !DILocation(line: 1663, column: 16, scope: !3806)
!3839 = !DILocalVariable(name: "bone", scope: !3806, file: !3, line: 1664, type: !525)
!3840 = !DILocation(line: 1664, column: 8, scope: !3806)
!3841 = !DILocalVariable(name: "tmp", scope: !3806, file: !3, line: 1665, type: !3842)
!3842 = !DIDerivedType(tag: DW_TAG_typedef, name: "GLfloat", file: !622, line: 281, baseType: !375)
!3843 = !DILocation(line: 1665, column: 10, scope: !3806)
!3844 = !DILocalVariable(name: "smat", scope: !3806, file: !3, line: 1666, type: !549)
!3845 = !DILocation(line: 1666, column: 8, scope: !3806)
!3846 = !DILocalVariable(name: "imat", scope: !3806, file: !3, line: 1666, type: !549)
!3847 = !DILocation(line: 1666, column: 20, scope: !3806)
!3848 = !DILocalVariable(name: "bmat", scope: !3806, file: !3, line: 1666, type: !549)
!3849 = !DILocation(line: 1666, column: 32, scope: !3806)
!3850 = !DILocalVariable(name: "index", scope: !3806, file: !3, line: 1667, type: !417)
!3851 = !DILocation(line: 1667, column: 6, scope: !3806)
!3852 = !DILocalVariable(name: "do_dashed", scope: !3806, file: !3, line: 1668, type: !415)
!3853 = !DILocation(line: 1668, column: 8, scope: !3806)
!3854 = !DILocalVariable(name: "draw_wire", scope: !3806, file: !3, line: 1669, type: !620)
!3855 = !DILocation(line: 1669, column: 7, scope: !3806)
!3856 = !DILocalVariable(name: "flag", scope: !3806, file: !3, line: 1670, type: !417)
!3857 = !DILocation(line: 1670, column: 6, scope: !3806)
!3858 = !DILocalVariable(name: "is_cull_enabled", scope: !3806, file: !3, line: 1671, type: !620)
!3859 = !DILocation(line: 1671, column: 7, scope: !3806)
!3860 = !DILocation(line: 1674, column: 2, scope: !3806)
!3861 = !DILocation(line: 1674, column: 7, scope: !3806)
!3862 = !DILocation(line: 1674, column: 18, scope: !3806)
!3863 = !DILocation(line: 1677, column: 2, scope: !3806)
!3864 = !DILocation(line: 1678, column: 6, scope: !3865)
!3865 = distinct !DILexicalBlock(scope: !3806, file: !3, line: 1678, column: 6)
!3866 = !DILocation(line: 1678, column: 10, scope: !3865)
!3867 = !DILocation(line: 1678, column: 6, scope: !3806)
!3868 = !DILocation(line: 1678, column: 28, scope: !3865)
!3869 = !DILocation(line: 1678, column: 18, scope: !3865)
!3870 = !DILocation(line: 1679, column: 6, scope: !3871)
!3871 = distinct !DILexicalBlock(scope: !3806, file: !3, line: 1679, column: 6)
!3872 = !DILocation(line: 1679, column: 11, scope: !3871)
!3873 = !DILocation(line: 1679, column: 16, scope: !3871)
!3874 = !DILocation(line: 1679, column: 6, scope: !3806)
!3875 = !DILocation(line: 1679, column: 48, scope: !3871)
!3876 = !DILocation(line: 1679, column: 38, scope: !3871)
!3877 = !DILocation(line: 1682, column: 6, scope: !3878)
!3878 = distinct !DILexicalBlock(scope: !3806, file: !3, line: 1682, column: 6)
!3879 = !DILocation(line: 1682, column: 11, scope: !3878)
!3880 = !DILocation(line: 1682, column: 20, scope: !3878)
!3881 = !DILocation(line: 1682, column: 6, scope: !3806)
!3882 = !DILocation(line: 1684, column: 14, scope: !3883)
!3883 = distinct !DILexicalBlock(scope: !3878, file: !3, line: 1682, column: 37)
!3884 = !DILocation(line: 1684, column: 20, scope: !3883)
!3885 = !DILocation(line: 1684, column: 26, scope: !3883)
!3886 = !DILocation(line: 1684, column: 3, scope: !3883)
!3887 = !DILocation(line: 1685, column: 18, scope: !3883)
!3888 = !DILocation(line: 1685, column: 38, scope: !3883)
!3889 = !DILocation(line: 1685, column: 42, scope: !3883)
!3890 = !DILocation(line: 1685, column: 31, scope: !3883)
!3891 = !DILocation(line: 1685, column: 29, scope: !3883)
!3892 = !DILocation(line: 1685, column: 3, scope: !3883)
!3893 = !DILocation(line: 1686, column: 16, scope: !3883)
!3894 = !DILocation(line: 1686, column: 22, scope: !3883)
!3895 = !DILocation(line: 1686, column: 3, scope: !3883)
!3896 = !DILocation(line: 1689, column: 7, scope: !3897)
!3897 = distinct !DILexicalBlock(scope: !3883, file: !3, line: 1689, column: 7)
!3898 = !DILocation(line: 1689, column: 12, scope: !3897)
!3899 = !DILocation(line: 1689, column: 17, scope: !3897)
!3900 = !DILocation(line: 1689, column: 7, scope: !3883)
!3901 = !DILocation(line: 1690, column: 4, scope: !3902)
!3902 = distinct !DILexicalBlock(scope: !3897, file: !3, line: 1689, column: 33)
!3903 = !DILocation(line: 1693, column: 8, scope: !3904)
!3904 = distinct !DILexicalBlock(scope: !3902, file: !3, line: 1693, column: 8)
!3905 = !DILocation(line: 1693, column: 13, scope: !3904)
!3906 = !DILocation(line: 1693, column: 8, scope: !3902)
!3907 = !DILocation(line: 1693, column: 19, scope: !3904)
!3908 = !DILocation(line: 1695, column: 17, scope: !3909)
!3909 = distinct !DILexicalBlock(scope: !3902, file: !3, line: 1695, column: 4)
!3910 = !DILocation(line: 1695, column: 21, scope: !3909)
!3911 = !DILocation(line: 1695, column: 27, scope: !3909)
!3912 = !DILocation(line: 1695, column: 36, scope: !3909)
!3913 = !DILocation(line: 1695, column: 15, scope: !3909)
!3914 = !DILocation(line: 1695, column: 9, scope: !3909)
!3915 = !DILocation(line: 1695, column: 43, scope: !3916)
!3916 = distinct !DILexicalBlock(scope: !3909, file: !3, line: 1695, column: 4)
!3917 = !DILocation(line: 1695, column: 4, scope: !3909)
!3918 = !DILocation(line: 1696, column: 12, scope: !3919)
!3919 = distinct !DILexicalBlock(scope: !3916, file: !3, line: 1695, column: 71)
!3920 = !DILocation(line: 1696, column: 19, scope: !3919)
!3921 = !DILocation(line: 1696, column: 10, scope: !3919)
!3922 = !DILocation(line: 1697, column: 9, scope: !3923)
!3923 = distinct !DILexicalBlock(scope: !3919, file: !3, line: 1697, column: 9)
!3924 = !DILocation(line: 1697, column: 9, scope: !3919)
!3925 = !DILocation(line: 1701, column: 12, scope: !3926)
!3926 = distinct !DILexicalBlock(scope: !3927, file: !3, line: 1701, column: 10)
!3927 = distinct !DILexicalBlock(scope: !3923, file: !3, line: 1697, column: 15)
!3928 = !DILocation(line: 1701, column: 18, scope: !3926)
!3929 = !DILocation(line: 1701, column: 23, scope: !3926)
!3930 = !DILocation(line: 1701, column: 76, scope: !3926)
!3931 = !DILocation(line: 1701, column: 82, scope: !3926)
!3932 = !DILocation(line: 1702, column: 14, scope: !3926)
!3933 = !DILocation(line: 1702, column: 16, scope: !3926)
!3934 = !DILocation(line: 1702, column: 29, scope: !3926)
!3935 = !DILocation(line: 1702, column: 34, scope: !3926)
!3936 = !DILocation(line: 1702, column: 38, scope: !3926)
!3937 = !DILocation(line: 1702, column: 44, scope: !3926)
!3938 = !DILocation(line: 1702, column: 49, scope: !3926)
!3939 = !DILocation(line: 1702, column: 70, scope: !3926)
!3940 = !DILocation(line: 1701, column: 10, scope: !3927)
!3941 = !DILocation(line: 1704, column: 11, scope: !3942)
!3942 = distinct !DILexicalBlock(scope: !3943, file: !3, line: 1704, column: 11)
!3943 = distinct !DILexicalBlock(scope: !3926, file: !3, line: 1703, column: 6)
!3944 = !DILocation(line: 1704, column: 17, scope: !3942)
!3945 = !DILocation(line: 1704, column: 22, scope: !3942)
!3946 = !DILocation(line: 1704, column: 11, scope: !3943)
!3947 = !DILocation(line: 1705, column: 12, scope: !3948)
!3948 = distinct !DILexicalBlock(scope: !3949, file: !3, line: 1705, column: 12)
!3949 = distinct !DILexicalBlock(scope: !3942, file: !3, line: 1704, column: 41)
!3950 = !DILocation(line: 1705, column: 18, scope: !3948)
!3951 = !DILocation(line: 1705, column: 26, scope: !3948)
!3952 = !DILocation(line: 1705, column: 31, scope: !3948)
!3953 = !DILocation(line: 1705, column: 24, scope: !3948)
!3954 = !DILocation(line: 1705, column: 12, scope: !3949)
!3955 = !DILocation(line: 1706, column: 31, scope: !3948)
!3956 = !DILocation(line: 1706, column: 37, scope: !3948)
!3957 = !DILocation(line: 1706, column: 43, scope: !3948)
!3958 = !DILocation(line: 1706, column: 9, scope: !3948)
!3959 = !DILocation(line: 1707, column: 7, scope: !3949)
!3960 = !DILocation(line: 1708, column: 6, scope: !3943)
!3961 = !DILocation(line: 1709, column: 5, scope: !3927)
!3962 = !DILocation(line: 1710, column: 4, scope: !3919)
!3963 = !DILocation(line: 1695, column: 58, scope: !3916)
!3964 = !DILocation(line: 1695, column: 65, scope: !3916)
!3965 = !DILocation(line: 1695, column: 56, scope: !3916)
!3966 = !DILocation(line: 1695, column: 4, scope: !3916)
!3967 = distinct !{!3967, !3917, !3968}
!3968 = !DILocation(line: 1710, column: 4, scope: !3909)
!3969 = !DILocation(line: 1712, column: 8, scope: !3970)
!3970 = distinct !DILexicalBlock(scope: !3902, file: !3, line: 1712, column: 8)
!3971 = !DILocation(line: 1712, column: 13, scope: !3970)
!3972 = !DILocation(line: 1712, column: 8, scope: !3902)
!3973 = !DILocation(line: 1712, column: 19, scope: !3970)
!3974 = !DILocation(line: 1713, column: 4, scope: !3902)
!3975 = !DILocation(line: 1715, column: 3, scope: !3902)
!3976 = !DILocation(line: 1716, column: 2, scope: !3883)
!3977 = !DILocation(line: 1719, column: 2, scope: !3806)
!3978 = !DILocation(line: 1720, column: 6, scope: !3979)
!3979 = distinct !DILexicalBlock(scope: !3806, file: !3, line: 1720, column: 6)
!3980 = !DILocation(line: 1720, column: 11, scope: !3979)
!3981 = !DILocation(line: 1720, column: 17, scope: !3979)
!3982 = !DILocation(line: 1720, column: 6, scope: !3806)
!3983 = !DILocation(line: 1721, column: 3, scope: !3984)
!3984 = distinct !DILexicalBlock(scope: !3979, file: !3, line: 1720, column: 41)
!3985 = !DILocation(line: 1722, column: 19, scope: !3984)
!3986 = !DILocation(line: 1723, column: 2, scope: !3984)
!3987 = !DILocation(line: 1725, column: 19, scope: !3988)
!3988 = distinct !DILexicalBlock(scope: !3979, file: !3, line: 1724, column: 7)
!3989 = !DILocation(line: 1729, column: 6, scope: !3990)
!3990 = distinct !DILexicalBlock(scope: !3806, file: !3, line: 1729, column: 6)
!3991 = !DILocation(line: 1729, column: 9, scope: !3990)
!3992 = !DILocation(line: 1729, column: 6, scope: !3806)
!3993 = !DILocation(line: 1730, column: 7, scope: !3994)
!3994 = distinct !DILexicalBlock(scope: !3995, file: !3, line: 1730, column: 7)
!3995 = distinct !DILexicalBlock(scope: !3990, file: !3, line: 1729, column: 20)
!3996 = !DILocation(line: 1730, column: 12, scope: !3994)
!3997 = !DILocation(line: 1730, column: 17, scope: !3994)
!3998 = !DILocation(line: 1730, column: 7, scope: !3995)
!3999 = !DILocation(line: 1731, column: 12, scope: !3994)
!4000 = !DILocation(line: 1731, column: 18, scope: !3994)
!4001 = !DILocation(line: 1731, column: 10, scope: !3994)
!4002 = !DILocation(line: 1731, column: 4, scope: !3994)
!4003 = !DILocation(line: 1733, column: 16, scope: !4004)
!4004 = distinct !DILexicalBlock(scope: !3995, file: !3, line: 1733, column: 3)
!4005 = !DILocation(line: 1733, column: 20, scope: !4004)
!4006 = !DILocation(line: 1733, column: 26, scope: !4004)
!4007 = !DILocation(line: 1733, column: 35, scope: !4004)
!4008 = !DILocation(line: 1733, column: 14, scope: !4004)
!4009 = !DILocation(line: 1733, column: 8, scope: !4004)
!4010 = !DILocation(line: 1733, column: 42, scope: !4011)
!4011 = distinct !DILexicalBlock(scope: !4004, file: !3, line: 1733, column: 3)
!4012 = !DILocation(line: 1733, column: 3, scope: !4004)
!4013 = !DILocation(line: 1734, column: 11, scope: !4014)
!4014 = distinct !DILexicalBlock(scope: !4011, file: !3, line: 1733, column: 70)
!4015 = !DILocation(line: 1734, column: 18, scope: !4014)
!4016 = !DILocation(line: 1734, column: 9, scope: !4014)
!4017 = !DILocation(line: 1735, column: 23, scope: !4014)
!4018 = !DILocation(line: 1735, column: 29, scope: !4014)
!4019 = !DILocation(line: 1735, column: 4, scope: !4014)
!4020 = !DILocation(line: 1735, column: 9, scope: !4014)
!4021 = !DILocation(line: 1735, column: 20, scope: !4014)
!4022 = !DILocation(line: 1738, column: 10, scope: !4023)
!4023 = distinct !DILexicalBlock(scope: !4014, file: !3, line: 1738, column: 8)
!4024 = !DILocation(line: 1738, column: 16, scope: !4023)
!4025 = !DILocation(line: 1738, column: 21, scope: !4023)
!4026 = !DILocation(line: 1738, column: 57, scope: !4023)
!4027 = !DILocation(line: 1738, column: 63, scope: !4023)
!4028 = !DILocation(line: 1739, column: 12, scope: !4023)
!4029 = !DILocation(line: 1739, column: 14, scope: !4023)
!4030 = !DILocation(line: 1739, column: 27, scope: !4023)
!4031 = !DILocation(line: 1739, column: 32, scope: !4023)
!4032 = !DILocation(line: 1739, column: 36, scope: !4023)
!4033 = !DILocation(line: 1739, column: 42, scope: !4023)
!4034 = !DILocation(line: 1739, column: 47, scope: !4023)
!4035 = !DILocation(line: 1739, column: 68, scope: !4023)
!4036 = !DILocation(line: 1738, column: 8, scope: !4014)
!4037 = !DILocation(line: 1741, column: 9, scope: !4038)
!4038 = distinct !DILexicalBlock(scope: !4039, file: !3, line: 1741, column: 9)
!4039 = distinct !DILexicalBlock(scope: !4023, file: !3, line: 1740, column: 4)
!4040 = !DILocation(line: 1741, column: 15, scope: !4038)
!4041 = !DILocation(line: 1741, column: 23, scope: !4038)
!4042 = !DILocation(line: 1741, column: 28, scope: !4038)
!4043 = !DILocation(line: 1741, column: 21, scope: !4038)
!4044 = !DILocation(line: 1741, column: 9, scope: !4039)
!4045 = !DILocalVariable(name: "use_custom", scope: !4046, file: !3, line: 1742, type: !2147)
!4046 = distinct !DILexicalBlock(scope: !4038, file: !3, line: 1741, column: 35)
!4047 = !DILocation(line: 1742, column: 17, scope: !4046)
!4048 = !DILocation(line: 1742, column: 31, scope: !4046)
!4049 = !DILocation(line: 1742, column: 38, scope: !4046)
!4050 = !DILocation(line: 1742, column: 30, scope: !4046)
!4051 = !DILocation(line: 1742, column: 46, scope: !4046)
!4052 = !DILocation(line: 1742, column: 51, scope: !4046)
!4053 = !DILocation(line: 1742, column: 56, scope: !4046)
!4054 = !DILocation(line: 1742, column: 61, scope: !4046)
!4055 = !DILocation(line: 1742, column: 49, scope: !4046)
!4056 = !DILocation(line: 0, scope: !4046)
!4057 = !DILocation(line: 1743, column: 6, scope: !4046)
!4058 = !DILocation(line: 1745, column: 10, scope: !4059)
!4059 = distinct !DILexicalBlock(scope: !4046, file: !3, line: 1745, column: 10)
!4060 = !DILocation(line: 1745, column: 21, scope: !4059)
!4061 = !DILocation(line: 1745, column: 24, scope: !4059)
!4062 = !DILocation(line: 1745, column: 31, scope: !4059)
!4063 = !DILocation(line: 1745, column: 10, scope: !4046)
!4064 = !DILocation(line: 1746, column: 7, scope: !4065)
!4065 = distinct !DILexicalBlock(scope: !4059, file: !3, line: 1745, column: 42)
!4066 = !DILocation(line: 1747, column: 6, scope: !4065)
!4067 = !DILocation(line: 1749, column: 7, scope: !4068)
!4068 = distinct !DILexicalBlock(scope: !4059, file: !3, line: 1748, column: 11)
!4069 = !DILocation(line: 1753, column: 13, scope: !4046)
!4070 = !DILocation(line: 1753, column: 19, scope: !4046)
!4071 = !DILocation(line: 1753, column: 11, scope: !4046)
!4072 = !DILocation(line: 1754, column: 11, scope: !4073)
!4073 = distinct !DILexicalBlock(scope: !4046, file: !3, line: 1754, column: 10)
!4074 = !DILocation(line: 1754, column: 17, scope: !4073)
!4075 = !DILocation(line: 1754, column: 10, scope: !4073)
!4076 = !DILocation(line: 1754, column: 25, scope: !4073)
!4077 = !DILocation(line: 1754, column: 29, scope: !4073)
!4078 = !DILocation(line: 1754, column: 35, scope: !4073)
!4079 = !DILocation(line: 1754, column: 43, scope: !4073)
!4080 = !DILocation(line: 1754, column: 48, scope: !4073)
!4081 = !DILocation(line: 1754, column: 10, scope: !4046)
!4082 = !DILocation(line: 1755, column: 12, scope: !4083)
!4083 = distinct !DILexicalBlock(scope: !4073, file: !3, line: 1754, column: 85)
!4084 = !DILocation(line: 1756, column: 6, scope: !4083)
!4085 = !DILocation(line: 1759, column: 10, scope: !4086)
!4086 = distinct !DILexicalBlock(scope: !4046, file: !3, line: 1759, column: 10)
!4087 = !DILocation(line: 1759, column: 18, scope: !4086)
!4088 = !DILocation(line: 1759, column: 23, scope: !4086)
!4089 = !DILocation(line: 1759, column: 15, scope: !4086)
!4090 = !DILocation(line: 1759, column: 10, scope: !4046)
!4091 = !DILocation(line: 1760, column: 12, scope: !4086)
!4092 = !DILocation(line: 1760, column: 7, scope: !4086)
!4093 = !DILocation(line: 1762, column: 10, scope: !4094)
!4094 = distinct !DILexicalBlock(scope: !4046, file: !3, line: 1762, column: 10)
!4095 = !DILocation(line: 1762, column: 10, scope: !4046)
!4096 = !DILocation(line: 1764, column: 6, scope: !4097)
!4097 = distinct !DILexicalBlock(scope: !4094, file: !3, line: 1762, column: 26)
!4098 = !DILocation(line: 1767, column: 26, scope: !4099)
!4099 = distinct !DILexicalBlock(scope: !4094, file: !3, line: 1765, column: 11)
!4100 = !DILocation(line: 1767, column: 30, scope: !4099)
!4101 = !DILocation(line: 1767, column: 7, scope: !4099)
!4102 = !DILocation(line: 1770, column: 10, scope: !4103)
!4103 = distinct !DILexicalBlock(scope: !4046, file: !3, line: 1770, column: 10)
!4104 = !DILocation(line: 1770, column: 10, scope: !4046)
!4105 = !DILocation(line: 1772, column: 11, scope: !4106)
!4106 = distinct !DILexicalBlock(scope: !4107, file: !3, line: 1772, column: 11)
!4107 = distinct !DILexicalBlock(scope: !4103, file: !3, line: 1770, column: 22)
!4108 = !DILocation(line: 1772, column: 18, scope: !4106)
!4109 = !DILocation(line: 1772, column: 24, scope: !4106)
!4110 = !DILocation(line: 1772, column: 29, scope: !4106)
!4111 = !DILocation(line: 1772, column: 11, scope: !4107)
!4112 = !DILocation(line: 1773, column: 18, scope: !4113)
!4113 = distinct !DILexicalBlock(scope: !4106, file: !3, line: 1772, column: 46)
!4114 = !DILocation(line: 1774, column: 7, scope: !4113)
!4115 = !DILocation(line: 1776, column: 12, scope: !4116)
!4116 = distinct !DILexicalBlock(scope: !4117, file: !3, line: 1776, column: 12)
!4117 = distinct !DILexicalBlock(scope: !4106, file: !3, line: 1775, column: 12)
!4118 = !DILocation(line: 1776, column: 28, scope: !4116)
!4119 = !DILocation(line: 1776, column: 32, scope: !4116)
!4120 = !DILocation(line: 1776, column: 37, scope: !4116)
!4121 = !DILocation(line: 1776, column: 43, scope: !4116)
!4122 = !DILocation(line: 1776, column: 67, scope: !4116)
!4123 = !DILocation(line: 1776, column: 12, scope: !4117)
!4124 = !DILocation(line: 1777, column: 25, scope: !4125)
!4125 = distinct !DILexicalBlock(scope: !4116, file: !3, line: 1776, column: 73)
!4126 = !DILocation(line: 1778, column: 9, scope: !4125)
!4127 = !DILocation(line: 1779, column: 8, scope: !4125)
!4128 = !DILocation(line: 1781, column: 25, scope: !4117)
!4129 = !DILocation(line: 1781, column: 32, scope: !4117)
!4130 = !DILocation(line: 1781, column: 37, scope: !4117)
!4131 = !DILocation(line: 1781, column: 43, scope: !4117)
!4132 = !DILocation(line: 1781, column: 50, scope: !4117)
!4133 = !DILocation(line: 1782, column: 35, scope: !4117)
!4134 = !DILocation(line: 1782, column: 40, scope: !4117)
!4135 = !DILocation(line: 1782, column: 46, scope: !4117)
!4136 = !DILocation(line: 1782, column: 52, scope: !4117)
!4137 = !DILocation(line: 1782, column: 59, scope: !4117)
!4138 = !DILocation(line: 1782, column: 65, scope: !4117)
!4139 = !DILocation(line: 1781, column: 8, scope: !4117)
!4140 = !DILocation(line: 1784, column: 6, scope: !4107)
!4141 = !DILocation(line: 1786, column: 11, scope: !4142)
!4142 = distinct !DILexicalBlock(scope: !4143, file: !3, line: 1786, column: 11)
!4143 = distinct !DILexicalBlock(scope: !4103, file: !3, line: 1785, column: 11)
!4144 = !DILocation(line: 1786, column: 27, scope: !4142)
!4145 = !DILocation(line: 1786, column: 11, scope: !4143)
!4146 = !DILocation(line: 1787, column: 24, scope: !4147)
!4147 = distinct !DILexicalBlock(scope: !4142, file: !3, line: 1786, column: 37)
!4148 = !DILocation(line: 1788, column: 8, scope: !4147)
!4149 = !DILocation(line: 1789, column: 7, scope: !4147)
!4150 = !DILocation(line: 1791, column: 11, scope: !4151)
!4151 = distinct !DILexicalBlock(scope: !4143, file: !3, line: 1791, column: 11)
!4152 = !DILocation(line: 1791, column: 16, scope: !4151)
!4153 = !DILocation(line: 1791, column: 25, scope: !4151)
!4154 = !DILocation(line: 1791, column: 11, scope: !4143)
!4155 = !DILocation(line: 1793, column: 7, scope: !4156)
!4156 = distinct !DILexicalBlock(scope: !4151, file: !3, line: 1791, column: 38)
!4157 = !DILocation(line: 1794, column: 16, scope: !4158)
!4158 = distinct !DILexicalBlock(scope: !4151, file: !3, line: 1794, column: 16)
!4159 = !DILocation(line: 1794, column: 21, scope: !4158)
!4160 = !DILocation(line: 1794, column: 30, scope: !4158)
!4161 = !DILocation(line: 1794, column: 16, scope: !4151)
!4162 = !DILocation(line: 1796, column: 7, scope: !4163)
!4163 = distinct !DILexicalBlock(scope: !4158, file: !3, line: 1794, column: 43)
!4164 = !DILocation(line: 1797, column: 16, scope: !4165)
!4165 = distinct !DILexicalBlock(scope: !4158, file: !3, line: 1797, column: 16)
!4166 = !DILocation(line: 1797, column: 21, scope: !4165)
!4167 = !DILocation(line: 1797, column: 30, scope: !4165)
!4168 = !DILocation(line: 1797, column: 16, scope: !4158)
!4169 = !DILocation(line: 1798, column: 35, scope: !4170)
!4170 = distinct !DILexicalBlock(scope: !4165, file: !3, line: 1797, column: 47)
!4171 = !DILocation(line: 1798, column: 40, scope: !4170)
!4172 = !DILocation(line: 1798, column: 46, scope: !4170)
!4173 = !DILocation(line: 1798, column: 55, scope: !4170)
!4174 = !DILocation(line: 1798, column: 62, scope: !4170)
!4175 = !DILocation(line: 1798, column: 8, scope: !4170)
!4176 = !DILocation(line: 1799, column: 7, scope: !4170)
!4177 = !DILocation(line: 1800, column: 16, scope: !4178)
!4178 = distinct !DILexicalBlock(scope: !4165, file: !3, line: 1800, column: 16)
!4179 = !DILocation(line: 1800, column: 21, scope: !4178)
!4180 = !DILocation(line: 1800, column: 30, scope: !4178)
!4181 = !DILocation(line: 1800, column: 16, scope: !4165)
!4182 = !DILocation(line: 1801, column: 30, scope: !4183)
!4183 = distinct !DILexicalBlock(scope: !4178, file: !3, line: 1800, column: 45)
!4184 = !DILocation(line: 1801, column: 35, scope: !4183)
!4185 = !DILocation(line: 1801, column: 41, scope: !4183)
!4186 = !DILocation(line: 1801, column: 50, scope: !4183)
!4187 = !DILocation(line: 1801, column: 57, scope: !4183)
!4188 = !DILocation(line: 1801, column: 8, scope: !4183)
!4189 = !DILocation(line: 1802, column: 7, scope: !4183)
!4190 = !DILocation(line: 1804, column: 28, scope: !4191)
!4191 = distinct !DILexicalBlock(scope: !4178, file: !3, line: 1803, column: 12)
!4192 = !DILocation(line: 1804, column: 33, scope: !4191)
!4193 = !DILocation(line: 1804, column: 39, scope: !4191)
!4194 = !DILocation(line: 1804, column: 48, scope: !4191)
!4195 = !DILocation(line: 1804, column: 55, scope: !4191)
!4196 = !DILocation(line: 1804, column: 61, scope: !4191)
!4197 = !DILocation(line: 1804, column: 8, scope: !4191)
!4198 = !DILocation(line: 1808, column: 6, scope: !4046)
!4199 = !DILocation(line: 1809, column: 5, scope: !4046)
!4200 = !DILocation(line: 1810, column: 4, scope: !4039)
!4201 = !DILocation(line: 1812, column: 8, scope: !4202)
!4202 = distinct !DILexicalBlock(scope: !4014, file: !3, line: 1812, column: 8)
!4203 = !DILocation(line: 1812, column: 14, scope: !4202)
!4204 = !DILocation(line: 1812, column: 8, scope: !4014)
!4205 = !DILocation(line: 1813, column: 11, scope: !4202)
!4206 = !DILocation(line: 1813, column: 5, scope: !4202)
!4207 = !DILocation(line: 1814, column: 3, scope: !4014)
!4208 = !DILocation(line: 1733, column: 57, scope: !4011)
!4209 = !DILocation(line: 1733, column: 64, scope: !4011)
!4210 = !DILocation(line: 1733, column: 55, scope: !4011)
!4211 = !DILocation(line: 1733, column: 3, scope: !4011)
!4212 = distinct !{!4212, !4012, !4213}
!4213 = !DILocation(line: 1814, column: 3, scope: !4004)
!4214 = !DILocation(line: 1819, column: 7, scope: !4215)
!4215 = distinct !DILexicalBlock(scope: !3995, file: !3, line: 1819, column: 7)
!4216 = !DILocation(line: 1819, column: 47, scope: !4215)
!4217 = !DILocation(line: 1819, column: 52, scope: !4215)
!4218 = !DILocation(line: 1819, column: 56, scope: !4215)
!4219 = !DILocation(line: 1819, column: 66, scope: !4215)
!4220 = !DILocation(line: 1819, column: 76, scope: !4215)
!4221 = !DILocation(line: 1819, column: 79, scope: !4215)
!4222 = !DILocation(line: 1819, column: 85, scope: !4215)
!4223 = !DILocation(line: 1819, column: 7, scope: !3995)
!4224 = !DILocation(line: 1821, column: 23, scope: !4225)
!4225 = distinct !DILexicalBlock(scope: !4215, file: !3, line: 1819, column: 92)
!4226 = !DILocation(line: 1821, column: 29, scope: !4225)
!4227 = !DILocation(line: 1821, column: 4, scope: !4225)
!4228 = !DILocation(line: 1822, column: 10, scope: !4225)
!4229 = !DILocation(line: 1823, column: 3, scope: !4225)
!4230 = !DILocation(line: 1824, column: 2, scope: !3995)
!4231 = !DILocation(line: 1827, column: 8, scope: !4232)
!4232 = distinct !DILexicalBlock(scope: !3806, file: !3, line: 1827, column: 6)
!4233 = !DILocation(line: 1827, column: 13, scope: !4232)
!4234 = !DILocation(line: 1827, column: 18, scope: !4232)
!4235 = !DILocation(line: 1827, column: 35, scope: !4232)
!4236 = !DILocation(line: 1828, column: 7, scope: !4232)
!4237 = !DILocation(line: 1828, column: 17, scope: !4232)
!4238 = !DILocation(line: 1828, column: 21, scope: !4232)
!4239 = !DILocation(line: 1828, column: 24, scope: !4232)
!4240 = !DILocation(line: 1827, column: 6, scope: !3806)
!4241 = !DILocation(line: 1830, column: 7, scope: !4242)
!4242 = distinct !DILexicalBlock(scope: !4243, file: !3, line: 1830, column: 7)
!4243 = distinct !DILexicalBlock(scope: !4232, file: !3, line: 1829, column: 2)
!4244 = !DILocation(line: 1830, column: 12, scope: !4242)
!4245 = !DILocation(line: 1830, column: 17, scope: !4242)
!4246 = !DILocation(line: 1830, column: 7, scope: !4243)
!4247 = !DILocation(line: 1831, column: 12, scope: !4242)
!4248 = !DILocation(line: 1831, column: 18, scope: !4242)
!4249 = !DILocation(line: 1831, column: 10, scope: !4242)
!4250 = !DILocation(line: 1831, column: 4, scope: !4242)
!4251 = !DILocation(line: 1834, column: 16, scope: !4252)
!4252 = distinct !DILexicalBlock(scope: !4243, file: !3, line: 1834, column: 3)
!4253 = !DILocation(line: 1834, column: 20, scope: !4252)
!4254 = !DILocation(line: 1834, column: 26, scope: !4252)
!4255 = !DILocation(line: 1834, column: 35, scope: !4252)
!4256 = !DILocation(line: 1834, column: 14, scope: !4252)
!4257 = !DILocation(line: 1834, column: 8, scope: !4252)
!4258 = !DILocation(line: 1834, column: 42, scope: !4259)
!4259 = distinct !DILexicalBlock(scope: !4252, file: !3, line: 1834, column: 3)
!4260 = !DILocation(line: 1834, column: 3, scope: !4252)
!4261 = !DILocation(line: 1835, column: 11, scope: !4262)
!4262 = distinct !DILexicalBlock(scope: !4259, file: !3, line: 1834, column: 70)
!4263 = !DILocation(line: 1835, column: 18, scope: !4262)
!4264 = !DILocation(line: 1835, column: 9, scope: !4262)
!4265 = !DILocation(line: 1838, column: 10, scope: !4266)
!4266 = distinct !DILexicalBlock(scope: !4262, file: !3, line: 1838, column: 8)
!4267 = !DILocation(line: 1838, column: 16, scope: !4266)
!4268 = !DILocation(line: 1838, column: 21, scope: !4266)
!4269 = !DILocation(line: 1838, column: 57, scope: !4266)
!4270 = !DILocation(line: 1838, column: 63, scope: !4266)
!4271 = !DILocation(line: 1839, column: 12, scope: !4266)
!4272 = !DILocation(line: 1839, column: 14, scope: !4266)
!4273 = !DILocation(line: 1839, column: 27, scope: !4266)
!4274 = !DILocation(line: 1839, column: 32, scope: !4266)
!4275 = !DILocation(line: 1839, column: 36, scope: !4266)
!4276 = !DILocation(line: 1839, column: 42, scope: !4266)
!4277 = !DILocation(line: 1839, column: 47, scope: !4266)
!4278 = !DILocation(line: 1839, column: 68, scope: !4266)
!4279 = !DILocation(line: 1838, column: 8, scope: !4262)
!4280 = !DILocation(line: 1841, column: 9, scope: !4281)
!4281 = distinct !DILexicalBlock(scope: !4282, file: !3, line: 1841, column: 9)
!4282 = distinct !DILexicalBlock(scope: !4266, file: !3, line: 1840, column: 4)
!4283 = !DILocation(line: 1841, column: 15, scope: !4281)
!4284 = !DILocation(line: 1841, column: 23, scope: !4281)
!4285 = !DILocation(line: 1841, column: 28, scope: !4281)
!4286 = !DILocation(line: 1841, column: 21, scope: !4281)
!4287 = !DILocation(line: 1841, column: 9, scope: !4282)
!4288 = !DILocation(line: 1842, column: 10, scope: !4289)
!4289 = distinct !DILexicalBlock(scope: !4290, file: !3, line: 1842, column: 10)
!4290 = distinct !DILexicalBlock(scope: !4281, file: !3, line: 1841, column: 35)
!4291 = !DILocation(line: 1842, column: 17, scope: !4289)
!4292 = !DILocation(line: 1842, column: 10, scope: !4290)
!4293 = !DILocation(line: 1843, column: 12, scope: !4294)
!4294 = distinct !DILexicalBlock(scope: !4295, file: !3, line: 1843, column: 11)
!4295 = distinct !DILexicalBlock(scope: !4289, file: !3, line: 1842, column: 25)
!4296 = !DILocation(line: 1843, column: 15, scope: !4294)
!4297 = !DILocation(line: 1843, column: 27, scope: !4294)
!4298 = !DILocation(line: 1843, column: 31, scope: !4294)
!4299 = !DILocation(line: 1843, column: 37, scope: !4294)
!4300 = !DILocation(line: 1843, column: 42, scope: !4294)
!4301 = !DILocation(line: 1843, column: 11, scope: !4295)
!4302 = !DILocation(line: 1844, column: 8, scope: !4303)
!4303 = distinct !DILexicalBlock(scope: !4294, file: !3, line: 1843, column: 60)
!4304 = !DILocation(line: 1846, column: 12, scope: !4305)
!4305 = distinct !DILexicalBlock(scope: !4303, file: !3, line: 1846, column: 12)
!4306 = !DILocation(line: 1846, column: 19, scope: !4305)
!4307 = !DILocation(line: 1846, column: 12, scope: !4303)
!4308 = !DILocation(line: 1847, column: 9, scope: !4309)
!4309 = distinct !DILexicalBlock(scope: !4305, file: !3, line: 1846, column: 30)
!4310 = !DILocation(line: 1848, column: 8, scope: !4309)
!4311 = !DILocation(line: 1850, column: 9, scope: !4312)
!4312 = distinct !DILexicalBlock(scope: !4305, file: !3, line: 1849, column: 13)
!4313 = !DILocation(line: 1854, column: 12, scope: !4314)
!4314 = distinct !DILexicalBlock(scope: !4303, file: !3, line: 1854, column: 12)
!4315 = !DILocation(line: 1854, column: 12, scope: !4303)
!4316 = !DILocation(line: 1856, column: 8, scope: !4317)
!4317 = distinct !DILexicalBlock(scope: !4314, file: !3, line: 1854, column: 28)
!4318 = !DILocation(line: 1857, column: 17, scope: !4319)
!4319 = distinct !DILexicalBlock(scope: !4314, file: !3, line: 1857, column: 17)
!4320 = !DILocation(line: 1857, column: 22, scope: !4319)
!4321 = !DILocation(line: 1857, column: 27, scope: !4319)
!4322 = !DILocation(line: 1857, column: 17, scope: !4314)
!4323 = !DILocation(line: 1858, column: 28, scope: !4319)
!4324 = !DILocation(line: 1858, column: 32, scope: !4319)
!4325 = !DILocation(line: 1858, column: 9, scope: !4319)
!4326 = !DILocation(line: 1860, column: 21, scope: !4327)
!4327 = distinct !DILexicalBlock(scope: !4319, file: !3, line: 1859, column: 13)
!4328 = !DILocation(line: 1860, column: 9, scope: !4327)
!4329 = !DILocation(line: 1864, column: 15, scope: !4303)
!4330 = !DILocation(line: 1864, column: 21, scope: !4303)
!4331 = !DILocation(line: 1864, column: 13, scope: !4303)
!4332 = !DILocation(line: 1865, column: 13, scope: !4333)
!4333 = distinct !DILexicalBlock(scope: !4303, file: !3, line: 1865, column: 12)
!4334 = !DILocation(line: 1865, column: 19, scope: !4333)
!4335 = !DILocation(line: 1865, column: 12, scope: !4333)
!4336 = !DILocation(line: 1865, column: 27, scope: !4333)
!4337 = !DILocation(line: 1865, column: 31, scope: !4333)
!4338 = !DILocation(line: 1865, column: 37, scope: !4333)
!4339 = !DILocation(line: 1865, column: 45, scope: !4333)
!4340 = !DILocation(line: 1865, column: 50, scope: !4333)
!4341 = !DILocation(line: 1865, column: 12, scope: !4303)
!4342 = !DILocation(line: 1866, column: 14, scope: !4333)
!4343 = !DILocation(line: 1866, column: 9, scope: !4333)
!4344 = !DILocation(line: 1869, column: 12, scope: !4345)
!4345 = distinct !DILexicalBlock(scope: !4303, file: !3, line: 1869, column: 12)
!4346 = !DILocation(line: 1869, column: 20, scope: !4345)
!4347 = !DILocation(line: 1869, column: 25, scope: !4345)
!4348 = !DILocation(line: 1869, column: 17, scope: !4345)
!4349 = !DILocation(line: 1869, column: 12, scope: !4303)
!4350 = !DILocation(line: 1870, column: 14, scope: !4345)
!4351 = !DILocation(line: 1870, column: 9, scope: !4345)
!4352 = !DILocation(line: 1872, column: 25, scope: !4303)
!4353 = !DILocation(line: 1872, column: 32, scope: !4303)
!4354 = !DILocation(line: 1872, column: 37, scope: !4303)
!4355 = !DILocation(line: 1872, column: 43, scope: !4303)
!4356 = !DILocation(line: 1872, column: 50, scope: !4303)
!4357 = !DILocation(line: 1873, column: 34, scope: !4303)
!4358 = !DILocation(line: 1873, column: 39, scope: !4303)
!4359 = !DILocation(line: 1873, column: 45, scope: !4303)
!4360 = !DILocation(line: 1873, column: 51, scope: !4303)
!4361 = !DILocation(line: 1873, column: 58, scope: !4303)
!4362 = !DILocation(line: 1873, column: 64, scope: !4303)
!4363 = !DILocation(line: 1872, column: 8, scope: !4303)
!4364 = !DILocation(line: 1875, column: 8, scope: !4303)
!4365 = !DILocation(line: 1876, column: 7, scope: !4303)
!4366 = !DILocation(line: 1877, column: 6, scope: !4295)
!4367 = !DILocation(line: 1878, column: 5, scope: !4290)
!4368 = !DILocation(line: 1879, column: 4, scope: !4282)
!4369 = !DILocation(line: 1881, column: 8, scope: !4370)
!4370 = distinct !DILexicalBlock(scope: !4262, file: !3, line: 1881, column: 8)
!4371 = !DILocation(line: 1881, column: 14, scope: !4370)
!4372 = !DILocation(line: 1881, column: 8, scope: !4262)
!4373 = !DILocation(line: 1882, column: 11, scope: !4370)
!4374 = !DILocation(line: 1882, column: 5, scope: !4370)
!4375 = !DILocation(line: 1883, column: 3, scope: !4262)
!4376 = !DILocation(line: 1834, column: 57, scope: !4259)
!4377 = !DILocation(line: 1834, column: 64, scope: !4259)
!4378 = !DILocation(line: 1834, column: 55, scope: !4259)
!4379 = !DILocation(line: 1834, column: 3, scope: !4259)
!4380 = distinct !{!4380, !4260, !4381}
!4381 = !DILocation(line: 1883, column: 3, scope: !4252)
!4382 = !DILocation(line: 1885, column: 7, scope: !4383)
!4383 = distinct !DILexicalBlock(scope: !4243, file: !3, line: 1885, column: 7)
!4384 = !DILocation(line: 1885, column: 47, scope: !4383)
!4385 = !DILocation(line: 1885, column: 52, scope: !4383)
!4386 = !DILocation(line: 1885, column: 55, scope: !4383)
!4387 = !DILocation(line: 1885, column: 65, scope: !4383)
!4388 = !DILocation(line: 1885, column: 68, scope: !4383)
!4389 = !DILocation(line: 1885, column: 74, scope: !4383)
!4390 = !DILocation(line: 1885, column: 7, scope: !4243)
!4391 = !DILocation(line: 1887, column: 23, scope: !4392)
!4392 = distinct !DILexicalBlock(scope: !4383, file: !3, line: 1885, column: 81)
!4393 = !DILocation(line: 1887, column: 29, scope: !4392)
!4394 = !DILocation(line: 1887, column: 4, scope: !4392)
!4395 = !DILocation(line: 1888, column: 10, scope: !4392)
!4396 = !DILocation(line: 1889, column: 3, scope: !4392)
!4397 = !DILocation(line: 1890, column: 2, scope: !4243)
!4398 = !DILocation(line: 1893, column: 7, scope: !4399)
!4399 = distinct !DILexicalBlock(scope: !3806, file: !3, line: 1893, column: 6)
!4400 = !DILocation(line: 1893, column: 10, scope: !4399)
!4401 = !DILocation(line: 1893, column: 22, scope: !4399)
!4402 = !DILocation(line: 1893, column: 26, scope: !4399)
!4403 = !DILocation(line: 1893, column: 31, scope: !4399)
!4404 = !DILocation(line: 1893, column: 36, scope: !4399)
!4405 = !DILocation(line: 1893, column: 52, scope: !4399)
!4406 = !DILocation(line: 1893, column: 55, scope: !4399)
!4407 = !DILocation(line: 1893, column: 6, scope: !3806)
!4408 = !DILocation(line: 1895, column: 7, scope: !4409)
!4409 = distinct !DILexicalBlock(scope: !4410, file: !3, line: 1895, column: 7)
!4410 = distinct !DILexicalBlock(scope: !4399, file: !3, line: 1893, column: 96)
!4411 = !DILocation(line: 1895, column: 7, scope: !4410)
!4412 = !DILocation(line: 1896, column: 8, scope: !4413)
!4413 = distinct !DILexicalBlock(scope: !4414, file: !3, line: 1896, column: 8)
!4414 = distinct !DILexicalBlock(scope: !4409, file: !3, line: 1895, column: 48)
!4415 = !DILocation(line: 1896, column: 13, scope: !4413)
!4416 = !DILocation(line: 1896, column: 18, scope: !4413)
!4417 = !DILocation(line: 1896, column: 8, scope: !4414)
!4418 = !DILocation(line: 1897, column: 13, scope: !4413)
!4419 = !DILocation(line: 1897, column: 19, scope: !4413)
!4420 = !DILocation(line: 1897, column: 11, scope: !4413)
!4421 = !DILocation(line: 1897, column: 5, scope: !4413)
!4422 = !DILocation(line: 1898, column: 3, scope: !4414)
!4423 = !DILocation(line: 1900, column: 13, scope: !4424)
!4424 = distinct !DILexicalBlock(scope: !4409, file: !3, line: 1900, column: 12)
!4425 = !DILocation(line: 1900, column: 16, scope: !4424)
!4426 = !DILocation(line: 1900, column: 27, scope: !4424)
!4427 = !DILocation(line: 1900, column: 31, scope: !4424)
!4428 = !DILocation(line: 1900, column: 36, scope: !4424)
!4429 = !DILocation(line: 1900, column: 41, scope: !4424)
!4430 = !DILocation(line: 1900, column: 12, scope: !4409)
!4431 = !DILocation(line: 1901, column: 29, scope: !4432)
!4432 = distinct !DILexicalBlock(scope: !4424, file: !3, line: 1900, column: 58)
!4433 = !DILocation(line: 1901, column: 4, scope: !4432)
!4434 = !DILocation(line: 1902, column: 3, scope: !4432)
!4435 = !DILocation(line: 1905, column: 8, scope: !4436)
!4436 = distinct !DILexicalBlock(scope: !4437, file: !3, line: 1905, column: 8)
!4437 = distinct !DILexicalBlock(scope: !4424, file: !3, line: 1903, column: 8)
!4438 = !DILocation(line: 1905, column: 13, scope: !4436)
!4439 = !DILocation(line: 1905, column: 18, scope: !4436)
!4440 = !DILocation(line: 1905, column: 8, scope: !4437)
!4441 = !DILocation(line: 1906, column: 13, scope: !4436)
!4442 = !DILocation(line: 1906, column: 19, scope: !4436)
!4443 = !DILocation(line: 1906, column: 11, scope: !4436)
!4444 = !DILocation(line: 1906, column: 5, scope: !4436)
!4445 = !DILocation(line: 1909, column: 7, scope: !4446)
!4446 = distinct !DILexicalBlock(scope: !4410, file: !3, line: 1909, column: 7)
!4447 = !DILocation(line: 1909, column: 23, scope: !4446)
!4448 = !DILocation(line: 1909, column: 7, scope: !4410)
!4449 = !DILocation(line: 1910, column: 20, scope: !4450)
!4450 = distinct !DILexicalBlock(scope: !4446, file: !3, line: 1909, column: 33)
!4451 = !DILocation(line: 1911, column: 4, scope: !4450)
!4452 = !DILocation(line: 1912, column: 3, scope: !4450)
!4453 = !DILocation(line: 1914, column: 16, scope: !4454)
!4454 = distinct !DILexicalBlock(scope: !4410, file: !3, line: 1914, column: 3)
!4455 = !DILocation(line: 1914, column: 20, scope: !4454)
!4456 = !DILocation(line: 1914, column: 26, scope: !4454)
!4457 = !DILocation(line: 1914, column: 35, scope: !4454)
!4458 = !DILocation(line: 1914, column: 14, scope: !4454)
!4459 = !DILocation(line: 1914, column: 8, scope: !4454)
!4460 = !DILocation(line: 1914, column: 42, scope: !4461)
!4461 = distinct !DILexicalBlock(scope: !4454, file: !3, line: 1914, column: 3)
!4462 = !DILocation(line: 1914, column: 3, scope: !4454)
!4463 = !DILocation(line: 1915, column: 11, scope: !4464)
!4464 = distinct !DILexicalBlock(scope: !4461, file: !3, line: 1914, column: 70)
!4465 = !DILocation(line: 1915, column: 18, scope: !4464)
!4466 = !DILocation(line: 1915, column: 9, scope: !4464)
!4467 = !DILocation(line: 1916, column: 23, scope: !4464)
!4468 = !DILocation(line: 1916, column: 29, scope: !4464)
!4469 = !DILocation(line: 1916, column: 4, scope: !4464)
!4470 = !DILocation(line: 1916, column: 9, scope: !4464)
!4471 = !DILocation(line: 1916, column: 20, scope: !4464)
!4472 = !DILocation(line: 1919, column: 10, scope: !4473)
!4473 = distinct !DILexicalBlock(scope: !4464, file: !3, line: 1919, column: 8)
!4474 = !DILocation(line: 1919, column: 16, scope: !4473)
!4475 = !DILocation(line: 1919, column: 21, scope: !4473)
!4476 = !DILocation(line: 1919, column: 57, scope: !4473)
!4477 = !DILocation(line: 1919, column: 63, scope: !4473)
!4478 = !DILocation(line: 1920, column: 12, scope: !4473)
!4479 = !DILocation(line: 1920, column: 14, scope: !4473)
!4480 = !DILocation(line: 1920, column: 27, scope: !4473)
!4481 = !DILocation(line: 1920, column: 32, scope: !4473)
!4482 = !DILocation(line: 1920, column: 36, scope: !4473)
!4483 = !DILocation(line: 1920, column: 42, scope: !4473)
!4484 = !DILocation(line: 1920, column: 47, scope: !4473)
!4485 = !DILocation(line: 1920, column: 68, scope: !4473)
!4486 = !DILocation(line: 1919, column: 8, scope: !4464)
!4487 = !DILocation(line: 1922, column: 9, scope: !4488)
!4488 = distinct !DILexicalBlock(scope: !4489, file: !3, line: 1922, column: 9)
!4489 = distinct !DILexicalBlock(scope: !4473, file: !3, line: 1921, column: 4)
!4490 = !DILocation(line: 1922, column: 15, scope: !4488)
!4491 = !DILocation(line: 1922, column: 23, scope: !4488)
!4492 = !DILocation(line: 1922, column: 28, scope: !4488)
!4493 = !DILocation(line: 1922, column: 21, scope: !4488)
!4494 = !DILocation(line: 1922, column: 9, scope: !4489)
!4495 = !DILocalVariable(name: "constflag", scope: !4496, file: !3, line: 1923, type: !2145)
!4496 = distinct !DILexicalBlock(scope: !4488, file: !3, line: 1922, column: 35)
!4497 = !DILocation(line: 1923, column: 18, scope: !4496)
!4498 = !DILocation(line: 1923, column: 30, scope: !4496)
!4499 = !DILocation(line: 1923, column: 37, scope: !4496)
!4500 = !DILocation(line: 1924, column: 11, scope: !4501)
!4501 = distinct !DILexicalBlock(scope: !4496, file: !3, line: 1924, column: 10)
!4502 = !DILocation(line: 1924, column: 21, scope: !4501)
!4503 = !DILocation(line: 1924, column: 26, scope: !4501)
!4504 = !DILocation(line: 1924, column: 30, scope: !4501)
!4505 = !DILocation(line: 1924, column: 37, scope: !4501)
!4506 = !DILocation(line: 1924, column: 29, scope: !4501)
!4507 = !DILocation(line: 1924, column: 10, scope: !4496)
!4508 = !DILocation(line: 1928, column: 12, scope: !4509)
!4509 = distinct !DILexicalBlock(scope: !4510, file: !3, line: 1928, column: 11)
!4510 = distinct !DILexicalBlock(scope: !4501, file: !3, line: 1924, column: 46)
!4511 = !DILocation(line: 1928, column: 22, scope: !4509)
!4512 = !DILocation(line: 1928, column: 27, scope: !4509)
!4513 = !DILocation(line: 1928, column: 32, scope: !4509)
!4514 = !DILocation(line: 1928, column: 38, scope: !4509)
!4515 = !DILocation(line: 1928, column: 43, scope: !4509)
!4516 = !DILocation(line: 1928, column: 61, scope: !4509)
!4517 = !DILocation(line: 1928, column: 11, scope: !4510)
!4518 = !DILocation(line: 1929, column: 12, scope: !4519)
!4519 = distinct !DILexicalBlock(scope: !4520, file: !3, line: 1929, column: 12)
!4520 = distinct !DILexicalBlock(scope: !4509, file: !3, line: 1928, column: 68)
!4521 = !DILocation(line: 1929, column: 17, scope: !4519)
!4522 = !DILocation(line: 1929, column: 22, scope: !4519)
!4523 = !DILocation(line: 1929, column: 12, scope: !4520)
!4524 = !DILocation(line: 1930, column: 28, scope: !4525)
!4525 = distinct !DILexicalBlock(scope: !4519, file: !3, line: 1929, column: 38)
!4526 = !DILocation(line: 1930, column: 34, scope: !4525)
!4527 = !DILocation(line: 1930, column: 9, scope: !4525)
!4528 = !DILocation(line: 1931, column: 9, scope: !4525)
!4529 = !DILocation(line: 1932, column: 8, scope: !4525)
!4530 = !DILocation(line: 1933, column: 8, scope: !4520)
!4531 = !DILocation(line: 1934, column: 8, scope: !4520)
!4532 = !DILocation(line: 1935, column: 20, scope: !4520)
!4533 = !DILocation(line: 1935, column: 27, scope: !4520)
!4534 = !DILocation(line: 1935, column: 8, scope: !4520)
!4535 = !DILocation(line: 1936, column: 20, scope: !4520)
!4536 = !DILocation(line: 1936, column: 27, scope: !4520)
!4537 = !DILocation(line: 1936, column: 35, scope: !4520)
!4538 = !DILocation(line: 1936, column: 8, scope: !4520)
!4539 = !DILocation(line: 1937, column: 8, scope: !4520)
!4540 = !DILocation(line: 1938, column: 8, scope: !4520)
!4541 = !DILocation(line: 1939, column: 7, scope: !4520)
!4542 = !DILocation(line: 1944, column: 11, scope: !4543)
!4543 = distinct !DILexicalBlock(scope: !4510, file: !3, line: 1944, column: 11)
!4544 = !DILocation(line: 1944, column: 16, scope: !4543)
!4545 = !DILocation(line: 1944, column: 21, scope: !4543)
!4546 = !DILocation(line: 1944, column: 11, scope: !4510)
!4547 = !DILocation(line: 1945, column: 12, scope: !4548)
!4548 = distinct !DILexicalBlock(scope: !4549, file: !3, line: 1945, column: 12)
!4549 = distinct !DILexicalBlock(scope: !4543, file: !3, line: 1944, column: 37)
!4550 = !DILocation(line: 1945, column: 22, scope: !4548)
!4551 = !DILocation(line: 1945, column: 12, scope: !4549)
!4552 = !DILocation(line: 1946, column: 13, scope: !4553)
!4553 = distinct !DILexicalBlock(scope: !4554, file: !3, line: 1946, column: 13)
!4554 = distinct !DILexicalBlock(scope: !4548, file: !3, line: 1945, column: 38)
!4555 = !DILocation(line: 1946, column: 19, scope: !4553)
!4556 = !DILocation(line: 1946, column: 24, scope: !4553)
!4557 = !DILocation(line: 1946, column: 13, scope: !4554)
!4558 = !DILocation(line: 1947, column: 14, scope: !4559)
!4559 = distinct !DILexicalBlock(scope: !4560, file: !3, line: 1947, column: 14)
!4560 = distinct !DILexicalBlock(scope: !4553, file: !3, line: 1946, column: 41)
!4561 = !DILocation(line: 1947, column: 24, scope: !4559)
!4562 = !DILocation(line: 1947, column: 14, scope: !4560)
!4563 = !DILocation(line: 1947, column: 44, scope: !4559)
!4564 = !DILocation(line: 1948, column: 15, scope: !4559)
!4565 = !DILocation(line: 1950, column: 29, scope: !4560)
!4566 = !DILocation(line: 1950, column: 35, scope: !4560)
!4567 = !DILocation(line: 1950, column: 10, scope: !4560)
!4568 = !DILocation(line: 1951, column: 35, scope: !4560)
!4569 = !DILocation(line: 1951, column: 44, scope: !4560)
!4570 = !DILocation(line: 1951, column: 54, scope: !4560)
!4571 = !DILocation(line: 1951, column: 42, scope: !4560)
!4572 = !DILocation(line: 1951, column: 10, scope: !4560)
!4573 = !DILocation(line: 1952, column: 9, scope: !4560)
!4574 = !DILocation(line: 1953, column: 8, scope: !4554)
!4575 = !DILocation(line: 1954, column: 17, scope: !4576)
!4576 = distinct !DILexicalBlock(scope: !4548, file: !3, line: 1954, column: 17)
!4577 = !DILocation(line: 1954, column: 27, scope: !4576)
!4578 = !DILocation(line: 1954, column: 17, scope: !4548)
!4579 = !DILocation(line: 1955, column: 13, scope: !4580)
!4580 = distinct !DILexicalBlock(scope: !4581, file: !3, line: 1955, column: 13)
!4581 = distinct !DILexicalBlock(scope: !4576, file: !3, line: 1954, column: 49)
!4582 = !DILocation(line: 1955, column: 19, scope: !4580)
!4583 = !DILocation(line: 1955, column: 24, scope: !4580)
!4584 = !DILocation(line: 1955, column: 13, scope: !4581)
!4585 = !DILocation(line: 1956, column: 10, scope: !4586)
!4586 = distinct !DILexicalBlock(scope: !4580, file: !3, line: 1955, column: 41)
!4587 = !DILocation(line: 1958, column: 29, scope: !4586)
!4588 = !DILocation(line: 1958, column: 35, scope: !4586)
!4589 = !DILocation(line: 1958, column: 10, scope: !4586)
!4590 = !DILocation(line: 1959, column: 35, scope: !4586)
!4591 = !DILocation(line: 1959, column: 44, scope: !4586)
!4592 = !DILocation(line: 1959, column: 54, scope: !4586)
!4593 = !DILocation(line: 1959, column: 42, scope: !4586)
!4594 = !DILocation(line: 1959, column: 10, scope: !4586)
!4595 = !DILocation(line: 1960, column: 9, scope: !4586)
!4596 = !DILocation(line: 1961, column: 8, scope: !4581)
!4597 = !DILocation(line: 1962, column: 7, scope: !4549)
!4598 = !DILocation(line: 1963, column: 6, scope: !4510)
!4599 = !DILocation(line: 1965, column: 6, scope: !4496)
!4600 = !DILocation(line: 1966, column: 10, scope: !4601)
!4601 = distinct !DILexicalBlock(scope: !4496, file: !3, line: 1966, column: 10)
!4602 = !DILocation(line: 1966, column: 15, scope: !4601)
!4603 = !DILocation(line: 1966, column: 24, scope: !4601)
!4604 = !DILocation(line: 1966, column: 10, scope: !4496)
!4605 = !DILocation(line: 1967, column: 7, scope: !4601)
!4606 = !DILocation(line: 1970, column: 13, scope: !4496)
!4607 = !DILocation(line: 1970, column: 19, scope: !4496)
!4608 = !DILocation(line: 1970, column: 11, scope: !4496)
!4609 = !DILocation(line: 1971, column: 11, scope: !4610)
!4610 = distinct !DILexicalBlock(scope: !4496, file: !3, line: 1971, column: 10)
!4611 = !DILocation(line: 1971, column: 17, scope: !4610)
!4612 = !DILocation(line: 1971, column: 10, scope: !4610)
!4613 = !DILocation(line: 1971, column: 25, scope: !4610)
!4614 = !DILocation(line: 1971, column: 29, scope: !4610)
!4615 = !DILocation(line: 1971, column: 35, scope: !4610)
!4616 = !DILocation(line: 1971, column: 43, scope: !4610)
!4617 = !DILocation(line: 1971, column: 48, scope: !4610)
!4618 = !DILocation(line: 1971, column: 10, scope: !4496)
!4619 = !DILocation(line: 1972, column: 12, scope: !4610)
!4620 = !DILocation(line: 1972, column: 7, scope: !4610)
!4621 = !DILocation(line: 1975, column: 10, scope: !4622)
!4622 = distinct !DILexicalBlock(scope: !4496, file: !3, line: 1975, column: 10)
!4623 = !DILocation(line: 1975, column: 18, scope: !4622)
!4624 = !DILocation(line: 1975, column: 23, scope: !4622)
!4625 = !DILocation(line: 1975, column: 15, scope: !4622)
!4626 = !DILocation(line: 1975, column: 10, scope: !4496)
!4627 = !DILocation(line: 1976, column: 12, scope: !4622)
!4628 = !DILocation(line: 1976, column: 7, scope: !4622)
!4629 = !DILocation(line: 1981, column: 10, scope: !4630)
!4630 = distinct !DILexicalBlock(scope: !4496, file: !3, line: 1981, column: 10)
!4631 = !DILocation(line: 1981, column: 10, scope: !4496)
!4632 = !DILocation(line: 1983, column: 6, scope: !4633)
!4633 = distinct !DILexicalBlock(scope: !4630, file: !3, line: 1981, column: 26)
!4634 = !DILocation(line: 1985, column: 26, scope: !4635)
!4635 = distinct !DILexicalBlock(scope: !4630, file: !3, line: 1984, column: 11)
!4636 = !DILocation(line: 1985, column: 30, scope: !4635)
!4637 = !DILocation(line: 1985, column: 7, scope: !4635)
!4638 = !DILocation(line: 1988, column: 11, scope: !4639)
!4639 = distinct !DILexicalBlock(scope: !4496, file: !3, line: 1988, column: 10)
!4640 = !DILocation(line: 1988, column: 18, scope: !4639)
!4641 = !DILocation(line: 1988, column: 10, scope: !4639)
!4642 = !DILocation(line: 1988, column: 26, scope: !4639)
!4643 = !DILocation(line: 1988, column: 31, scope: !4639)
!4644 = !DILocation(line: 1988, column: 36, scope: !4639)
!4645 = !DILocation(line: 1988, column: 41, scope: !4639)
!4646 = !DILocation(line: 1988, column: 10, scope: !4496)
!4647 = !DILocation(line: 1990, column: 6, scope: !4648)
!4648 = distinct !DILexicalBlock(scope: !4639, file: !3, line: 1988, column: 59)
!4649 = !DILocation(line: 1991, column: 15, scope: !4650)
!4650 = distinct !DILexicalBlock(scope: !4639, file: !3, line: 1991, column: 15)
!4651 = !DILocation(line: 1991, column: 20, scope: !4650)
!4652 = !DILocation(line: 1991, column: 29, scope: !4650)
!4653 = !DILocation(line: 1991, column: 15, scope: !4639)
!4654 = !DILocation(line: 1992, column: 11, scope: !4655)
!4655 = distinct !DILexicalBlock(scope: !4656, file: !3, line: 1992, column: 11)
!4656 = distinct !DILexicalBlock(scope: !4650, file: !3, line: 1991, column: 46)
!4657 = !DILocation(line: 1992, column: 14, scope: !4655)
!4658 = !DILocation(line: 1992, column: 11, scope: !4656)
!4659 = !DILocation(line: 1993, column: 30, scope: !4655)
!4660 = !DILocation(line: 1993, column: 36, scope: !4655)
!4661 = !DILocation(line: 1993, column: 42, scope: !4655)
!4662 = !DILocation(line: 1993, column: 47, scope: !4655)
!4663 = !DILocation(line: 1993, column: 53, scope: !4655)
!4664 = !DILocation(line: 1993, column: 59, scope: !4655)
!4665 = !DILocation(line: 1993, column: 70, scope: !4655)
!4666 = !DILocation(line: 1993, column: 77, scope: !4655)
!4667 = !DILocation(line: 1993, column: 8, scope: !4655)
!4668 = !DILocation(line: 1994, column: 6, scope: !4656)
!4669 = !DILocation(line: 1995, column: 15, scope: !4670)
!4670 = distinct !DILexicalBlock(scope: !4650, file: !3, line: 1995, column: 15)
!4671 = !DILocation(line: 1995, column: 20, scope: !4670)
!4672 = !DILocation(line: 1995, column: 29, scope: !4670)
!4673 = !DILocation(line: 1995, column: 15, scope: !4650)
!4674 = !DILocation(line: 1996, column: 22, scope: !4670)
!4675 = !DILocation(line: 1996, column: 27, scope: !4670)
!4676 = !DILocation(line: 1996, column: 33, scope: !4670)
!4677 = !DILocation(line: 1996, column: 39, scope: !4670)
!4678 = !DILocation(line: 1996, column: 50, scope: !4670)
!4679 = !DILocation(line: 1996, column: 57, scope: !4670)
!4680 = !DILocation(line: 1996, column: 7, scope: !4670)
!4681 = !DILocation(line: 1997, column: 15, scope: !4682)
!4682 = distinct !DILexicalBlock(scope: !4670, file: !3, line: 1997, column: 15)
!4683 = !DILocation(line: 1997, column: 20, scope: !4682)
!4684 = !DILocation(line: 1997, column: 29, scope: !4682)
!4685 = !DILocation(line: 1997, column: 15, scope: !4670)
!4686 = !DILocation(line: 1998, column: 22, scope: !4682)
!4687 = !DILocation(line: 1998, column: 26, scope: !4682)
!4688 = !DILocation(line: 1998, column: 31, scope: !4682)
!4689 = !DILocation(line: 1998, column: 37, scope: !4682)
!4690 = !DILocation(line: 1998, column: 43, scope: !4682)
!4691 = !DILocation(line: 1998, column: 54, scope: !4682)
!4692 = !DILocation(line: 1998, column: 61, scope: !4682)
!4693 = !DILocation(line: 1998, column: 7, scope: !4682)
!4694 = !DILocation(line: 1999, column: 15, scope: !4695)
!4695 = distinct !DILexicalBlock(scope: !4682, file: !3, line: 1999, column: 15)
!4696 = !DILocation(line: 1999, column: 20, scope: !4695)
!4697 = !DILocation(line: 1999, column: 29, scope: !4695)
!4698 = !DILocation(line: 1999, column: 15, scope: !4682)
!4699 = !DILocation(line: 2000, column: 28, scope: !4695)
!4700 = !DILocation(line: 2000, column: 33, scope: !4695)
!4701 = !DILocation(line: 2000, column: 39, scope: !4695)
!4702 = !DILocation(line: 2000, column: 45, scope: !4695)
!4703 = !DILocation(line: 2000, column: 56, scope: !4695)
!4704 = !DILocation(line: 2000, column: 63, scope: !4695)
!4705 = !DILocation(line: 2000, column: 7, scope: !4695)
!4706 = !DILocation(line: 2002, column: 26, scope: !4695)
!4707 = !DILocation(line: 2002, column: 31, scope: !4695)
!4708 = !DILocation(line: 2002, column: 37, scope: !4695)
!4709 = !DILocation(line: 2002, column: 43, scope: !4695)
!4710 = !DILocation(line: 2002, column: 54, scope: !4695)
!4711 = !DILocation(line: 2002, column: 61, scope: !4695)
!4712 = !DILocation(line: 2002, column: 67, scope: !4695)
!4713 = !DILocation(line: 2002, column: 7, scope: !4695)
!4714 = !DILocation(line: 2004, column: 6, scope: !4496)
!4715 = !DILocation(line: 2005, column: 5, scope: !4496)
!4716 = !DILocation(line: 2006, column: 4, scope: !4489)
!4717 = !DILocation(line: 2009, column: 8, scope: !4718)
!4718 = distinct !DILexicalBlock(scope: !4464, file: !3, line: 2009, column: 8)
!4719 = !DILocation(line: 2009, column: 14, scope: !4718)
!4720 = !DILocation(line: 2009, column: 8, scope: !4464)
!4721 = !DILocation(line: 2010, column: 11, scope: !4718)
!4722 = !DILocation(line: 2010, column: 5, scope: !4718)
!4723 = !DILocation(line: 2011, column: 3, scope: !4464)
!4724 = !DILocation(line: 1914, column: 57, scope: !4461)
!4725 = !DILocation(line: 1914, column: 64, scope: !4461)
!4726 = !DILocation(line: 1914, column: 55, scope: !4461)
!4727 = !DILocation(line: 1914, column: 3, scope: !4461)
!4728 = distinct !{!4728, !4462, !4729}
!4729 = !DILocation(line: 2011, column: 3, scope: !4454)
!4730 = !DILocation(line: 2013, column: 8, scope: !4731)
!4731 = distinct !DILexicalBlock(scope: !4410, file: !3, line: 2013, column: 7)
!4732 = !DILocation(line: 2013, column: 48, scope: !4731)
!4733 = !DILocation(line: 2013, column: 52, scope: !4731)
!4734 = !DILocation(line: 2013, column: 55, scope: !4731)
!4735 = !DILocation(line: 2013, column: 66, scope: !4731)
!4736 = !DILocation(line: 2013, column: 70, scope: !4731)
!4737 = !DILocation(line: 2013, column: 75, scope: !4731)
!4738 = !DILocation(line: 2013, column: 80, scope: !4731)
!4739 = !DILocation(line: 2013, column: 7, scope: !4410)
!4740 = !DILocation(line: 2014, column: 29, scope: !4731)
!4741 = !DILocation(line: 2014, column: 4, scope: !4731)
!4742 = !DILocation(line: 2015, column: 2, scope: !4410)
!4743 = !DILocation(line: 2018, column: 6, scope: !4744)
!4744 = distinct !DILexicalBlock(scope: !3806, file: !3, line: 2018, column: 6)
!4745 = !DILocation(line: 2018, column: 6, scope: !3806)
!4746 = !DILocation(line: 2019, column: 3, scope: !4747)
!4747 = distinct !DILexicalBlock(scope: !4744, file: !3, line: 2018, column: 23)
!4748 = !DILocation(line: 2020, column: 2, scope: !4747)
!4749 = !DILocation(line: 2023, column: 6, scope: !4750)
!4750 = distinct !DILexicalBlock(scope: !3806, file: !3, line: 2023, column: 6)
!4751 = !DILocation(line: 2023, column: 11, scope: !4750)
!4752 = !DILocation(line: 2023, column: 16, scope: !4750)
!4753 = !DILocation(line: 2023, column: 6, scope: !3806)
!4754 = !DILocation(line: 2024, column: 9, scope: !4755)
!4755 = distinct !DILexicalBlock(scope: !4756, file: !3, line: 2024, column: 7)
!4756 = distinct !DILexicalBlock(scope: !4750, file: !3, line: 2023, column: 32)
!4757 = !DILocation(line: 2024, column: 15, scope: !4755)
!4758 = !DILocation(line: 2024, column: 20, scope: !4755)
!4759 = !DILocation(line: 2024, column: 36, scope: !4755)
!4760 = !DILocation(line: 2024, column: 42, scope: !4755)
!4761 = !DILocation(line: 2024, column: 47, scope: !4755)
!4762 = !DILocation(line: 2024, column: 52, scope: !4755)
!4763 = !DILocation(line: 2024, column: 57, scope: !4755)
!4764 = !DILocation(line: 2024, column: 79, scope: !4755)
!4765 = !DILocation(line: 2024, column: 7, scope: !4756)
!4766 = !DILocation(line: 2025, column: 19, scope: !4767)
!4767 = distinct !DILexicalBlock(scope: !4755, file: !3, line: 2024, column: 86)
!4768 = !DILocation(line: 2025, column: 4, scope: !4767)
!4769 = !DILocation(line: 2026, column: 3, scope: !4767)
!4770 = !DILocation(line: 2027, column: 2, scope: !4756)
!4771 = !DILocation(line: 2030, column: 7, scope: !4772)
!4772 = distinct !DILexicalBlock(scope: !3806, file: !3, line: 2030, column: 6)
!4773 = !DILocation(line: 2030, column: 12, scope: !4772)
!4774 = !DILocation(line: 2030, column: 17, scope: !4772)
!4775 = !DILocation(line: 2030, column: 51, scope: !4772)
!4776 = !DILocation(line: 2031, column: 7, scope: !4772)
!4777 = !DILocation(line: 2031, column: 18, scope: !4772)
!4778 = !DILocation(line: 2031, column: 24, scope: !4772)
!4779 = !DILocation(line: 2032, column: 8, scope: !4772)
!4780 = !DILocation(line: 2032, column: 14, scope: !4772)
!4781 = !DILocation(line: 2032, column: 19, scope: !4772)
!4782 = !DILocation(line: 2032, column: 35, scope: !4772)
!4783 = !DILocation(line: 2030, column: 6, scope: !3806)
!4784 = !DILocation(line: 2035, column: 10, scope: !4785)
!4785 = distinct !DILexicalBlock(scope: !4786, file: !3, line: 2035, column: 7)
!4786 = distinct !DILexicalBlock(scope: !4772, file: !3, line: 2033, column: 2)
!4787 = !DILocation(line: 2035, column: 12, scope: !4785)
!4788 = !DILocation(line: 2035, column: 25, scope: !4785)
!4789 = !DILocation(line: 2035, column: 7, scope: !4786)
!4790 = !DILocalVariable(name: "vec", scope: !4791, file: !3, line: 2036, type: !538)
!4791 = distinct !DILexicalBlock(scope: !4785, file: !3, line: 2035, column: 31)
!4792 = !DILocation(line: 2036, column: 10, scope: !4791)
!4793 = !DILocalVariable(name: "col", scope: !4791, file: !3, line: 2038, type: !958)
!4794 = !DILocation(line: 2038, column: 18, scope: !4791)
!4795 = !DILocation(line: 2039, column: 8, scope: !4796)
!4796 = distinct !DILexicalBlock(scope: !4791, file: !3, line: 2039, column: 8)
!4797 = !DILocation(line: 2039, column: 8, scope: !4791)
!4798 = !DILocalVariable(name: "tcol", scope: !4799, file: !3, line: 2041, type: !772)
!4799 = distinct !DILexicalBlock(scope: !4796, file: !3, line: 2039, column: 24)
!4800 = !DILocation(line: 2041, column: 11, scope: !4799)
!4801 = !DILocation(line: 2042, column: 35, scope: !4799)
!4802 = !DILocation(line: 2042, column: 5, scope: !4799)
!4803 = !DILocation(line: 2043, column: 24, scope: !4799)
!4804 = !DILocation(line: 2043, column: 29, scope: !4799)
!4805 = !DILocation(line: 2043, column: 5, scope: !4799)
!4806 = !DILocation(line: 2044, column: 5, scope: !4799)
!4807 = !DILocation(line: 2044, column: 12, scope: !4799)
!4808 = !DILocation(line: 2045, column: 4, scope: !4799)
!4809 = !DILocation(line: 2047, column: 14, scope: !4810)
!4810 = distinct !DILexicalBlock(scope: !4796, file: !3, line: 2046, column: 9)
!4811 = !DILocation(line: 2047, column: 5, scope: !4810)
!4812 = !DILocation(line: 2047, column: 12, scope: !4810)
!4813 = !DILocation(line: 2048, column: 14, scope: !4810)
!4814 = !DILocation(line: 2048, column: 5, scope: !4810)
!4815 = !DILocation(line: 2048, column: 12, scope: !4810)
!4816 = !DILocation(line: 2049, column: 14, scope: !4810)
!4817 = !DILocation(line: 2049, column: 5, scope: !4810)
!4818 = !DILocation(line: 2049, column: 12, scope: !4810)
!4819 = !DILocation(line: 2050, column: 5, scope: !4810)
!4820 = !DILocation(line: 2050, column: 12, scope: !4810)
!4821 = !DILocation(line: 2053, column: 8, scope: !4822)
!4822 = distinct !DILexicalBlock(scope: !4791, file: !3, line: 2053, column: 8)
!4823 = !DILocation(line: 2053, column: 13, scope: !4822)
!4824 = !DILocation(line: 2053, column: 8, scope: !4791)
!4825 = !DILocation(line: 2053, column: 19, scope: !4822)
!4826 = !DILocation(line: 2055, column: 17, scope: !4827)
!4827 = distinct !DILexicalBlock(scope: !4791, file: !3, line: 2055, column: 4)
!4828 = !DILocation(line: 2055, column: 21, scope: !4827)
!4829 = !DILocation(line: 2055, column: 27, scope: !4827)
!4830 = !DILocation(line: 2055, column: 36, scope: !4827)
!4831 = !DILocation(line: 2055, column: 15, scope: !4827)
!4832 = !DILocation(line: 2055, column: 9, scope: !4827)
!4833 = !DILocation(line: 2055, column: 43, scope: !4834)
!4834 = distinct !DILexicalBlock(scope: !4827, file: !3, line: 2055, column: 4)
!4835 = !DILocation(line: 2055, column: 4, scope: !4827)
!4836 = !DILocation(line: 2056, column: 10, scope: !4837)
!4837 = distinct !DILexicalBlock(scope: !4838, file: !3, line: 2056, column: 9)
!4838 = distinct !DILexicalBlock(scope: !4834, file: !3, line: 2055, column: 71)
!4839 = !DILocation(line: 2056, column: 17, scope: !4837)
!4840 = !DILocation(line: 2056, column: 23, scope: !4837)
!4841 = !DILocation(line: 2056, column: 28, scope: !4837)
!4842 = !DILocation(line: 2056, column: 64, scope: !4837)
!4843 = !DILocation(line: 2056, column: 9, scope: !4838)
!4844 = !DILocation(line: 2057, column: 10, scope: !4845)
!4845 = distinct !DILexicalBlock(scope: !4846, file: !3, line: 2057, column: 10)
!4846 = distinct !DILexicalBlock(scope: !4837, file: !3, line: 2056, column: 70)
!4847 = !DILocation(line: 2057, column: 17, scope: !4845)
!4848 = !DILocation(line: 2057, column: 23, scope: !4845)
!4849 = !DILocation(line: 2057, column: 31, scope: !4845)
!4850 = !DILocation(line: 2057, column: 36, scope: !4845)
!4851 = !DILocation(line: 2057, column: 29, scope: !4845)
!4852 = !DILocation(line: 2057, column: 10, scope: !4846)
!4853 = !DILocation(line: 2058, column: 11, scope: !4854)
!4854 = distinct !DILexicalBlock(scope: !4855, file: !3, line: 2058, column: 11)
!4855 = distinct !DILexicalBlock(scope: !4845, file: !3, line: 2057, column: 43)
!4856 = !DILocation(line: 2058, column: 16, scope: !4854)
!4857 = !DILocation(line: 2058, column: 21, scope: !4854)
!4858 = !DILocation(line: 2058, column: 11, scope: !4855)
!4859 = !DILocation(line: 2059, column: 15, scope: !4860)
!4860 = distinct !DILexicalBlock(scope: !4854, file: !3, line: 2058, column: 54)
!4861 = !DILocation(line: 2059, column: 22, scope: !4860)
!4862 = !DILocation(line: 2059, column: 13, scope: !4860)
!4863 = !DILocation(line: 2060, column: 30, scope: !4860)
!4864 = !DILocation(line: 2060, column: 36, scope: !4860)
!4865 = !DILocation(line: 2060, column: 41, scope: !4860)
!4866 = !DILocation(line: 2060, column: 29, scope: !4860)
!4867 = !DILocation(line: 2060, column: 82, scope: !4860)
!4868 = !DILocation(line: 2060, column: 8, scope: !4860)
!4869 = !DILocation(line: 2061, column: 7, scope: !4860)
!4870 = !DILocation(line: 2062, column: 16, scope: !4871)
!4871 = distinct !DILexicalBlock(scope: !4854, file: !3, line: 2062, column: 16)
!4872 = !DILocation(line: 2062, column: 19, scope: !4871)
!4873 = !DILocation(line: 2062, column: 16, scope: !4854)
!4874 = !DILocation(line: 2063, column: 38, scope: !4875)
!4875 = distinct !DILexicalBlock(scope: !4871, file: !3, line: 2062, column: 30)
!4876 = !DILocation(line: 2063, column: 8, scope: !4875)
!4877 = !DILocation(line: 2064, column: 7, scope: !4875)
!4878 = !DILocation(line: 2067, column: 11, scope: !4879)
!4879 = distinct !DILexicalBlock(scope: !4855, file: !3, line: 2067, column: 11)
!4880 = !DILocation(line: 2067, column: 16, scope: !4879)
!4881 = !DILocation(line: 2067, column: 21, scope: !4879)
!4882 = !DILocation(line: 2067, column: 11, scope: !4855)
!4883 = !DILocation(line: 2068, column: 20, scope: !4884)
!4884 = distinct !DILexicalBlock(scope: !4879, file: !3, line: 2067, column: 38)
!4885 = !DILocation(line: 2068, column: 25, scope: !4884)
!4886 = !DILocation(line: 2068, column: 32, scope: !4884)
!4887 = !DILocation(line: 2068, column: 43, scope: !4884)
!4888 = !DILocation(line: 2068, column: 50, scope: !4884)
!4889 = !DILocation(line: 2068, column: 8, scope: !4884)
!4890 = !DILocation(line: 2069, column: 36, scope: !4884)
!4891 = !DILocation(line: 2069, column: 41, scope: !4884)
!4892 = !DILocation(line: 2069, column: 48, scope: !4884)
!4893 = !DILocation(line: 2069, column: 61, scope: !4884)
!4894 = !DILocation(line: 2069, column: 68, scope: !4884)
!4895 = !DILocation(line: 2069, column: 54, scope: !4884)
!4896 = !DILocation(line: 2069, column: 82, scope: !4884)
!4897 = !DILocation(line: 2069, column: 8, scope: !4884)
!4898 = !DILocation(line: 2070, column: 7, scope: !4884)
!4899 = !DILocation(line: 2073, column: 12, scope: !4900)
!4900 = distinct !DILexicalBlock(scope: !4855, file: !3, line: 2073, column: 11)
!4901 = !DILocation(line: 2073, column: 17, scope: !4900)
!4902 = !DILocation(line: 2073, column: 22, scope: !4900)
!4903 = !DILocation(line: 2073, column: 38, scope: !4900)
!4904 = !DILocation(line: 2073, column: 42, scope: !4900)
!4905 = !DILocation(line: 2073, column: 47, scope: !4900)
!4906 = !DILocation(line: 2073, column: 52, scope: !4900)
!4907 = !DILocation(line: 2073, column: 11, scope: !4855)
!4908 = !DILocation(line: 2074, column: 8, scope: !4909)
!4909 = distinct !DILexicalBlock(scope: !4900, file: !3, line: 2073, column: 69)
!4910 = !DILocation(line: 2075, column: 19, scope: !4909)
!4911 = !DILocation(line: 2075, column: 25, scope: !4909)
!4912 = !DILocation(line: 2075, column: 32, scope: !4909)
!4913 = !DILocation(line: 2075, column: 8, scope: !4909)
!4914 = !DILocation(line: 2076, column: 32, scope: !4909)
!4915 = !DILocation(line: 2076, column: 38, scope: !4909)
!4916 = !DILocation(line: 2076, column: 45, scope: !4909)
!4917 = !DILocation(line: 2076, column: 51, scope: !4909)
!4918 = !DILocation(line: 2076, column: 8, scope: !4909)
!4919 = !DILocation(line: 2077, column: 8, scope: !4909)
!4920 = !DILocation(line: 2079, column: 20, scope: !4909)
!4921 = !DILocation(line: 2079, column: 8, scope: !4909)
!4922 = !DILocation(line: 2080, column: 17, scope: !4909)
!4923 = !DILocation(line: 2080, column: 24, scope: !4909)
!4924 = !DILocation(line: 2080, column: 30, scope: !4909)
!4925 = !DILocation(line: 2080, column: 37, scope: !4909)
!4926 = !DILocation(line: 2080, column: 8, scope: !4909)
!4927 = !DILocation(line: 2082, column: 8, scope: !4909)
!4928 = !DILocation(line: 2083, column: 7, scope: !4909)
!4929 = !DILocation(line: 2084, column: 6, scope: !4855)
!4930 = !DILocation(line: 2085, column: 5, scope: !4846)
!4931 = !DILocation(line: 2086, column: 4, scope: !4838)
!4932 = !DILocation(line: 2055, column: 58, scope: !4834)
!4933 = !DILocation(line: 2055, column: 65, scope: !4834)
!4934 = !DILocation(line: 2055, column: 56, scope: !4834)
!4935 = !DILocation(line: 2055, column: 4, scope: !4834)
!4936 = distinct !{!4936, !4835, !4937}
!4937 = !DILocation(line: 2086, column: 4, scope: !4827)
!4938 = !DILocation(line: 2088, column: 8, scope: !4939)
!4939 = distinct !DILexicalBlock(scope: !4791, file: !3, line: 2088, column: 8)
!4940 = !DILocation(line: 2088, column: 13, scope: !4939)
!4941 = !DILocation(line: 2088, column: 8, scope: !4791)
!4942 = !DILocation(line: 2088, column: 19, scope: !4939)
!4943 = !DILocation(line: 2089, column: 3, scope: !4791)
!4944 = !DILocation(line: 2090, column: 2, scope: !4786)
!4945 = !DILocation(line: 2092, column: 6, scope: !4946)
!4946 = distinct !DILexicalBlock(scope: !3806, file: !3, line: 2092, column: 6)
!4947 = !DILocation(line: 2092, column: 12, scope: !4946)
!4948 = !DILocation(line: 2092, column: 6, scope: !3806)
!4949 = !DILocation(line: 2093, column: 3, scope: !4950)
!4950 = distinct !DILexicalBlock(scope: !4946, file: !3, line: 2092, column: 19)
!4951 = !DILocation(line: 2094, column: 2, scope: !4950)
!4952 = !DILocation(line: 2095, column: 1, scope: !3806)
!4953 = distinct !DISubprogram(name: "len_v3", scope: !4954, file: !4954, line: 714, type: !4955, scopeLine: 715, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1930)
!4954 = !DIFile(filename: "blender/source/blender/blenlib/intern/math_vector_inline.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!4955 = !DISubroutineType(types: !4956)
!4956 = !{!375, !4957}
!4957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1919, size: 64)
!4958 = !DILocalVariable(name: "a", arg: 1, scope: !4953, file: !4954, line: 714, type: !4957)
!4959 = !DILocation(line: 714, column: 34, scope: !4953)
!4960 = !DILocation(line: 716, column: 24, scope: !4953)
!4961 = !DILocation(line: 716, column: 27, scope: !4953)
!4962 = !DILocation(line: 716, column: 15, scope: !4953)
!4963 = !DILocation(line: 716, column: 9, scope: !4953)
!4964 = !DILocation(line: 716, column: 2, scope: !4953)
!4965 = distinct !DISubprogram(name: "draw_sphere_bone_dist", scope: !3, file: !3, line: 630, type: !4966, scopeLine: 631, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1930)
!4966 = !DISubroutineType(types: !4967)
!4967 = !{null, !4968, !4968, !3717, !616}
!4968 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !772, size: 64)
!4969 = !DILocalVariable(name: "smat", arg: 1, scope: !4965, file: !3, line: 630, type: !4968)
!4970 = !DILocation(line: 630, column: 41, scope: !4965)
!4971 = !DILocalVariable(name: "imat", arg: 2, scope: !4965, file: !3, line: 630, type: !4968)
!4972 = !DILocation(line: 630, column: 59, scope: !4965)
!4973 = !DILocalVariable(name: "pchan", arg: 3, scope: !4965, file: !3, line: 630, type: !3717)
!4974 = !DILocation(line: 630, column: 85, scope: !4965)
!4975 = !DILocalVariable(name: "ebone", arg: 4, scope: !4965, file: !3, line: 630, type: !616)
!4976 = !DILocation(line: 630, column: 102, scope: !4965)
!4977 = !DILocalVariable(name: "head", scope: !4965, file: !3, line: 632, type: !375)
!4978 = !DILocation(line: 632, column: 8, scope: !4965)
!4979 = !DILocalVariable(name: "tail", scope: !4965, file: !3, line: 632, type: !375)
!4980 = !DILocation(line: 632, column: 14, scope: !4965)
!4981 = !DILocalVariable(name: "dist", scope: !4965, file: !3, line: 632, type: !375)
!4982 = !DILocation(line: 632, column: 20, scope: !4965)
!4983 = !DILocalVariable(name: "headvec", scope: !4965, file: !3, line: 633, type: !374)
!4984 = !DILocation(line: 633, column: 9, scope: !4965)
!4985 = !DILocalVariable(name: "tailvec", scope: !4965, file: !3, line: 633, type: !374)
!4986 = !DILocation(line: 633, column: 19, scope: !4965)
!4987 = !DILocalVariable(name: "dirvec", scope: !4965, file: !3, line: 633, type: !538)
!4988 = !DILocation(line: 633, column: 28, scope: !4965)
!4989 = !DILocation(line: 636, column: 6, scope: !4990)
!4990 = distinct !DILexicalBlock(scope: !4965, file: !3, line: 636, column: 6)
!4991 = !DILocation(line: 636, column: 6, scope: !4965)
!4992 = !DILocation(line: 638, column: 28, scope: !4993)
!4993 = distinct !DILexicalBlock(scope: !4990, file: !3, line: 636, column: 13)
!4994 = !DILocation(line: 638, column: 35, scope: !4993)
!4995 = !DILocation(line: 638, column: 41, scope: !4993)
!4996 = !DILocation(line: 638, column: 48, scope: !4993)
!4997 = !DILocation(line: 638, column: 19, scope: !4993)
!4998 = !DILocation(line: 638, column: 3, scope: !4993)
!4999 = !DILocation(line: 638, column: 10, scope: !4993)
!5000 = !DILocation(line: 638, column: 17, scope: !4993)
!5001 = !DILocation(line: 641, column: 10, scope: !4993)
!5002 = !DILocation(line: 641, column: 17, scope: !4993)
!5003 = !DILocation(line: 641, column: 8, scope: !4993)
!5004 = !DILocation(line: 642, column: 10, scope: !4993)
!5005 = !DILocation(line: 642, column: 17, scope: !4993)
!5006 = !DILocation(line: 642, column: 8, scope: !4993)
!5007 = !DILocation(line: 643, column: 7, scope: !5008)
!5008 = distinct !DILexicalBlock(scope: !4993, file: !3, line: 643, column: 7)
!5009 = !DILocation(line: 643, column: 14, scope: !5008)
!5010 = !DILocation(line: 643, column: 21, scope: !5008)
!5011 = !DILocation(line: 643, column: 25, scope: !5008)
!5012 = !DILocation(line: 643, column: 32, scope: !5008)
!5013 = !DILocation(line: 643, column: 37, scope: !5008)
!5014 = !DILocation(line: 643, column: 7, scope: !4993)
!5015 = !DILocation(line: 644, column: 11, scope: !5008)
!5016 = !DILocation(line: 644, column: 18, scope: !5008)
!5017 = !DILocation(line: 644, column: 26, scope: !5008)
!5018 = !DILocation(line: 644, column: 9, scope: !5008)
!5019 = !DILocation(line: 644, column: 4, scope: !5008)
!5020 = !DILocation(line: 646, column: 11, scope: !5008)
!5021 = !DILocation(line: 646, column: 18, scope: !5008)
!5022 = !DILocation(line: 646, column: 9, scope: !5008)
!5023 = !DILocation(line: 647, column: 13, scope: !4993)
!5024 = !DILocation(line: 647, column: 20, scope: !4993)
!5025 = !DILocation(line: 647, column: 11, scope: !4993)
!5026 = !DILocation(line: 648, column: 13, scope: !4993)
!5027 = !DILocation(line: 648, column: 20, scope: !4993)
!5028 = !DILocation(line: 648, column: 11, scope: !4993)
!5029 = !DILocation(line: 649, column: 2, scope: !4993)
!5030 = !DILocation(line: 652, column: 10, scope: !5031)
!5031 = distinct !DILexicalBlock(scope: !4990, file: !3, line: 650, column: 7)
!5032 = !DILocation(line: 652, column: 17, scope: !5031)
!5033 = !DILocation(line: 652, column: 23, scope: !5031)
!5034 = !DILocation(line: 652, column: 8, scope: !5031)
!5035 = !DILocation(line: 653, column: 10, scope: !5031)
!5036 = !DILocation(line: 653, column: 17, scope: !5031)
!5037 = !DILocation(line: 653, column: 23, scope: !5031)
!5038 = !DILocation(line: 653, column: 8, scope: !5031)
!5039 = !DILocation(line: 654, column: 7, scope: !5040)
!5040 = distinct !DILexicalBlock(scope: !5031, file: !3, line: 654, column: 7)
!5041 = !DILocation(line: 654, column: 14, scope: !5040)
!5042 = !DILocation(line: 654, column: 21, scope: !5040)
!5043 = !DILocation(line: 654, column: 25, scope: !5040)
!5044 = !DILocation(line: 654, column: 32, scope: !5040)
!5045 = !DILocation(line: 654, column: 38, scope: !5040)
!5046 = !DILocation(line: 654, column: 43, scope: !5040)
!5047 = !DILocation(line: 654, column: 7, scope: !5031)
!5048 = !DILocation(line: 655, column: 11, scope: !5040)
!5049 = !DILocation(line: 655, column: 18, scope: !5040)
!5050 = !DILocation(line: 655, column: 26, scope: !5040)
!5051 = !DILocation(line: 655, column: 32, scope: !5040)
!5052 = !DILocation(line: 655, column: 9, scope: !5040)
!5053 = !DILocation(line: 655, column: 4, scope: !5040)
!5054 = !DILocation(line: 657, column: 11, scope: !5040)
!5055 = !DILocation(line: 657, column: 18, scope: !5040)
!5056 = !DILocation(line: 657, column: 24, scope: !5040)
!5057 = !DILocation(line: 657, column: 9, scope: !5040)
!5058 = !DILocation(line: 658, column: 13, scope: !5031)
!5059 = !DILocation(line: 658, column: 20, scope: !5031)
!5060 = !DILocation(line: 658, column: 11, scope: !5031)
!5061 = !DILocation(line: 659, column: 13, scope: !5031)
!5062 = !DILocation(line: 659, column: 20, scope: !5031)
!5063 = !DILocation(line: 659, column: 11, scope: !5031)
!5064 = !DILocation(line: 665, column: 14, scope: !4965)
!5065 = !DILocation(line: 665, column: 22, scope: !4965)
!5066 = !DILocation(line: 665, column: 31, scope: !4965)
!5067 = !DILocation(line: 665, column: 2, scope: !4965)
!5068 = !DILocation(line: 666, column: 17, scope: !4965)
!5069 = !DILocation(line: 666, column: 23, scope: !4965)
!5070 = !DILocation(line: 666, column: 2, scope: !4965)
!5071 = !DILocation(line: 668, column: 2, scope: !4965)
!5072 = !DILocation(line: 668, column: 12, scope: !4965)
!5073 = !DILocation(line: 670, column: 6, scope: !5074)
!5074 = distinct !DILexicalBlock(scope: !4965, file: !3, line: 670, column: 6)
!5075 = !DILocation(line: 670, column: 14, scope: !5074)
!5076 = !DILocation(line: 670, column: 11, scope: !5074)
!5077 = !DILocation(line: 670, column: 6, scope: !4965)
!5078 = !DILocalVariable(name: "view_dist", scope: !5079, file: !3, line: 673, type: !375)
!5079 = distinct !DILexicalBlock(scope: !5074, file: !3, line: 670, column: 20)
!5080 = !DILocation(line: 673, column: 9, scope: !5079)
!5081 = !DILocation(line: 673, column: 28, scope: !5079)
!5082 = !DILocation(line: 673, column: 21, scope: !5079)
!5083 = !DILocation(line: 675, column: 7, scope: !5084)
!5084 = distinct !DILexicalBlock(scope: !5079, file: !3, line: 675, column: 7)
!5085 = !DILocation(line: 675, column: 14, scope: !5084)
!5086 = !DILocation(line: 675, column: 12, scope: !5084)
!5087 = !DILocation(line: 675, column: 26, scope: !5084)
!5088 = !DILocation(line: 675, column: 24, scope: !5084)
!5089 = !DILocation(line: 675, column: 7, scope: !5079)
!5090 = !DILocation(line: 676, column: 14, scope: !5091)
!5091 = distinct !DILexicalBlock(scope: !5084, file: !3, line: 675, column: 32)
!5092 = !DILocation(line: 676, column: 12, scope: !5091)
!5093 = !DILocation(line: 677, column: 11, scope: !5091)
!5094 = !DILocation(line: 677, column: 9, scope: !5091)
!5095 = !DILocation(line: 678, column: 12, scope: !5091)
!5096 = !DILocation(line: 678, column: 4, scope: !5091)
!5097 = !DILocation(line: 679, column: 4, scope: !5091)
!5098 = !DILocation(line: 679, column: 14, scope: !5091)
!5099 = !DILocation(line: 680, column: 3, scope: !5091)
!5100 = !DILocation(line: 681, column: 12, scope: !5101)
!5101 = distinct !DILexicalBlock(scope: !5084, file: !3, line: 681, column: 12)
!5102 = !DILocation(line: 681, column: 19, scope: !5101)
!5103 = !DILocation(line: 681, column: 17, scope: !5101)
!5104 = !DILocation(line: 681, column: 31, scope: !5101)
!5105 = !DILocation(line: 681, column: 29, scope: !5101)
!5106 = !DILocation(line: 681, column: 12, scope: !5084)
!5107 = !DILocation(line: 682, column: 14, scope: !5108)
!5108 = distinct !DILexicalBlock(scope: !5101, file: !3, line: 681, column: 37)
!5109 = !DILocation(line: 682, column: 12, scope: !5108)
!5110 = !DILocation(line: 683, column: 11, scope: !5108)
!5111 = !DILocation(line: 683, column: 9, scope: !5108)
!5112 = !DILocation(line: 684, column: 12, scope: !5108)
!5113 = !DILocation(line: 684, column: 4, scope: !5108)
!5114 = !DILocation(line: 685, column: 4, scope: !5108)
!5115 = !DILocation(line: 685, column: 14, scope: !5108)
!5116 = !DILocation(line: 686, column: 3, scope: !5108)
!5117 = !DILocation(line: 687, column: 2, scope: !5079)
!5118 = !DILocation(line: 690, column: 17, scope: !4965)
!5119 = !DILocation(line: 690, column: 23, scope: !4965)
!5120 = !DILocation(line: 690, column: 2, scope: !4965)
!5121 = !DILocation(line: 692, column: 27, scope: !5122)
!5122 = distinct !DILexicalBlock(scope: !4965, file: !3, line: 692, column: 6)
!5123 = !DILocation(line: 692, column: 14, scope: !5122)
!5124 = !DILocation(line: 692, column: 11, scope: !5122)
!5125 = !DILocation(line: 692, column: 6, scope: !4965)
!5126 = !DILocalVariable(name: "norvec", scope: !5127, file: !3, line: 693, type: !538)
!5127 = distinct !DILexicalBlock(scope: !5122, file: !3, line: 692, column: 36)
!5128 = !DILocation(line: 693, column: 9, scope: !5127)
!5129 = !DILocalVariable(name: "vec1", scope: !5127, file: !3, line: 693, type: !538)
!5130 = !DILocation(line: 693, column: 20, scope: !5127)
!5131 = !DILocalVariable(name: "vec2", scope: !5127, file: !3, line: 693, type: !538)
!5132 = !DILocation(line: 693, column: 29, scope: !5127)
!5133 = !DILocalVariable(name: "vec", scope: !5127, file: !3, line: 693, type: !538)
!5134 = !DILocation(line: 693, column: 38, scope: !5127)
!5135 = !DILocalVariable(name: "a", scope: !5127, file: !3, line: 694, type: !417)
!5136 = !DILocation(line: 694, column: 7, scope: !5127)
!5137 = !DILocation(line: 697, column: 17, scope: !5127)
!5138 = !DILocation(line: 697, column: 25, scope: !5127)
!5139 = !DILocation(line: 697, column: 33, scope: !5127)
!5140 = !DILocation(line: 697, column: 3, scope: !5127)
!5141 = !DILocation(line: 699, column: 3, scope: !5127)
!5142 = !DILocation(line: 701, column: 10, scope: !5143)
!5143 = distinct !DILexicalBlock(scope: !5127, file: !3, line: 701, column: 3)
!5144 = !DILocation(line: 701, column: 8, scope: !5143)
!5145 = !DILocation(line: 701, column: 15, scope: !5146)
!5146 = distinct !DILexicalBlock(scope: !5143, file: !3, line: 701, column: 3)
!5147 = !DILocation(line: 701, column: 17, scope: !5146)
!5148 = !DILocation(line: 701, column: 3, scope: !5143)
!5149 = !DILocation(line: 702, column: 17, scope: !5150)
!5150 = distinct !DILexicalBlock(scope: !5146, file: !3, line: 701, column: 28)
!5151 = !DILocation(line: 702, column: 14, scope: !5150)
!5152 = !DILocation(line: 702, column: 13, scope: !5150)
!5153 = !DILocation(line: 702, column: 22, scope: !5150)
!5154 = !DILocation(line: 702, column: 20, scope: !5150)
!5155 = !DILocation(line: 702, column: 37, scope: !5150)
!5156 = !DILocation(line: 702, column: 34, scope: !5150)
!5157 = !DILocation(line: 702, column: 42, scope: !5150)
!5158 = !DILocation(line: 702, column: 40, scope: !5150)
!5159 = !DILocation(line: 702, column: 32, scope: !5150)
!5160 = !DILocation(line: 702, column: 4, scope: !5150)
!5161 = !DILocation(line: 702, column: 11, scope: !5150)
!5162 = !DILocation(line: 703, column: 17, scope: !5150)
!5163 = !DILocation(line: 703, column: 14, scope: !5150)
!5164 = !DILocation(line: 703, column: 13, scope: !5150)
!5165 = !DILocation(line: 703, column: 22, scope: !5150)
!5166 = !DILocation(line: 703, column: 20, scope: !5150)
!5167 = !DILocation(line: 703, column: 37, scope: !5150)
!5168 = !DILocation(line: 703, column: 34, scope: !5150)
!5169 = !DILocation(line: 703, column: 42, scope: !5150)
!5170 = !DILocation(line: 703, column: 40, scope: !5150)
!5171 = !DILocation(line: 703, column: 32, scope: !5150)
!5172 = !DILocation(line: 703, column: 4, scope: !5150)
!5173 = !DILocation(line: 703, column: 11, scope: !5150)
!5174 = !DILocation(line: 704, column: 17, scope: !5150)
!5175 = !DILocation(line: 704, column: 14, scope: !5150)
!5176 = !DILocation(line: 704, column: 13, scope: !5150)
!5177 = !DILocation(line: 704, column: 22, scope: !5150)
!5178 = !DILocation(line: 704, column: 20, scope: !5150)
!5179 = !DILocation(line: 704, column: 37, scope: !5150)
!5180 = !DILocation(line: 704, column: 34, scope: !5150)
!5181 = !DILocation(line: 704, column: 42, scope: !5150)
!5182 = !DILocation(line: 704, column: 40, scope: !5150)
!5183 = !DILocation(line: 704, column: 32, scope: !5150)
!5184 = !DILocation(line: 704, column: 4, scope: !5150)
!5185 = !DILocation(line: 704, column: 11, scope: !5150)
!5186 = !DILocation(line: 706, column: 19, scope: !5150)
!5187 = !DILocation(line: 706, column: 25, scope: !5150)
!5188 = !DILocation(line: 706, column: 34, scope: !5150)
!5189 = !DILocation(line: 706, column: 39, scope: !5150)
!5190 = !DILocation(line: 706, column: 4, scope: !5150)
!5191 = !DILocation(line: 707, column: 19, scope: !5150)
!5192 = !DILocation(line: 707, column: 25, scope: !5150)
!5193 = !DILocation(line: 707, column: 34, scope: !5150)
!5194 = !DILocation(line: 707, column: 39, scope: !5150)
!5195 = !DILocation(line: 707, column: 46, scope: !5150)
!5196 = !DILocation(line: 707, column: 44, scope: !5150)
!5197 = !DILocation(line: 707, column: 4, scope: !5150)
!5198 = !DILocation(line: 709, column: 4, scope: !5150)
!5199 = !DILocation(line: 710, column: 16, scope: !5150)
!5200 = !DILocation(line: 710, column: 4, scope: !5150)
!5201 = !DILocation(line: 712, column: 16, scope: !5150)
!5202 = !DILocation(line: 712, column: 4, scope: !5150)
!5203 = !DILocation(line: 713, column: 3, scope: !5150)
!5204 = !DILocation(line: 701, column: 24, scope: !5146)
!5205 = !DILocation(line: 701, column: 3, scope: !5146)
!5206 = distinct !{!5206, !5148, !5207}
!5207 = !DILocation(line: 713, column: 3, scope: !5143)
!5208 = !DILocation(line: 715, column: 10, scope: !5209)
!5209 = distinct !DILexicalBlock(scope: !5127, file: !3, line: 715, column: 3)
!5210 = !DILocation(line: 715, column: 8, scope: !5209)
!5211 = !DILocation(line: 715, column: 16, scope: !5212)
!5212 = distinct !DILexicalBlock(scope: !5209, file: !3, line: 715, column: 3)
!5213 = !DILocation(line: 715, column: 18, scope: !5212)
!5214 = !DILocation(line: 715, column: 3, scope: !5209)
!5215 = !DILocation(line: 716, column: 16, scope: !5216)
!5216 = distinct !DILexicalBlock(scope: !5212, file: !3, line: 715, column: 29)
!5217 = !DILocation(line: 716, column: 13, scope: !5216)
!5218 = !DILocation(line: 716, column: 21, scope: !5216)
!5219 = !DILocation(line: 716, column: 19, scope: !5216)
!5220 = !DILocation(line: 716, column: 36, scope: !5216)
!5221 = !DILocation(line: 716, column: 33, scope: !5216)
!5222 = !DILocation(line: 716, column: 41, scope: !5216)
!5223 = !DILocation(line: 716, column: 39, scope: !5216)
!5224 = !DILocation(line: 716, column: 31, scope: !5216)
!5225 = !DILocation(line: 716, column: 4, scope: !5216)
!5226 = !DILocation(line: 716, column: 11, scope: !5216)
!5227 = !DILocation(line: 717, column: 16, scope: !5216)
!5228 = !DILocation(line: 717, column: 13, scope: !5216)
!5229 = !DILocation(line: 717, column: 21, scope: !5216)
!5230 = !DILocation(line: 717, column: 19, scope: !5216)
!5231 = !DILocation(line: 717, column: 36, scope: !5216)
!5232 = !DILocation(line: 717, column: 33, scope: !5216)
!5233 = !DILocation(line: 717, column: 41, scope: !5216)
!5234 = !DILocation(line: 717, column: 39, scope: !5216)
!5235 = !DILocation(line: 717, column: 31, scope: !5216)
!5236 = !DILocation(line: 717, column: 4, scope: !5216)
!5237 = !DILocation(line: 717, column: 11, scope: !5216)
!5238 = !DILocation(line: 718, column: 16, scope: !5216)
!5239 = !DILocation(line: 718, column: 13, scope: !5216)
!5240 = !DILocation(line: 718, column: 21, scope: !5216)
!5241 = !DILocation(line: 718, column: 19, scope: !5216)
!5242 = !DILocation(line: 718, column: 36, scope: !5216)
!5243 = !DILocation(line: 718, column: 33, scope: !5216)
!5244 = !DILocation(line: 718, column: 41, scope: !5216)
!5245 = !DILocation(line: 718, column: 39, scope: !5216)
!5246 = !DILocation(line: 718, column: 31, scope: !5216)
!5247 = !DILocation(line: 718, column: 4, scope: !5216)
!5248 = !DILocation(line: 718, column: 11, scope: !5216)
!5249 = !DILocation(line: 720, column: 19, scope: !5216)
!5250 = !DILocation(line: 720, column: 25, scope: !5216)
!5251 = !DILocation(line: 720, column: 34, scope: !5216)
!5252 = !DILocation(line: 720, column: 39, scope: !5216)
!5253 = !DILocation(line: 720, column: 4, scope: !5216)
!5254 = !DILocation(line: 721, column: 19, scope: !5216)
!5255 = !DILocation(line: 721, column: 25, scope: !5216)
!5256 = !DILocation(line: 721, column: 34, scope: !5216)
!5257 = !DILocation(line: 721, column: 39, scope: !5216)
!5258 = !DILocation(line: 721, column: 46, scope: !5216)
!5259 = !DILocation(line: 721, column: 44, scope: !5216)
!5260 = !DILocation(line: 721, column: 4, scope: !5216)
!5261 = !DILocation(line: 724, column: 16, scope: !5216)
!5262 = !DILocation(line: 724, column: 4, scope: !5216)
!5263 = !DILocation(line: 726, column: 16, scope: !5216)
!5264 = !DILocation(line: 726, column: 4, scope: !5216)
!5265 = !DILocation(line: 727, column: 3, scope: !5216)
!5266 = !DILocation(line: 715, column: 25, scope: !5212)
!5267 = !DILocation(line: 715, column: 3, scope: !5212)
!5268 = distinct !{!5268, !5214, !5269}
!5269 = !DILocation(line: 727, column: 3, scope: !5209)
!5270 = !DILocation(line: 730, column: 13, scope: !5127)
!5271 = !DILocation(line: 730, column: 12, scope: !5127)
!5272 = !DILocation(line: 730, column: 21, scope: !5127)
!5273 = !DILocation(line: 730, column: 19, scope: !5127)
!5274 = !DILocation(line: 730, column: 33, scope: !5127)
!5275 = !DILocation(line: 730, column: 41, scope: !5127)
!5276 = !DILocation(line: 730, column: 39, scope: !5127)
!5277 = !DILocation(line: 730, column: 31, scope: !5127)
!5278 = !DILocation(line: 730, column: 3, scope: !5127)
!5279 = !DILocation(line: 730, column: 10, scope: !5127)
!5280 = !DILocation(line: 731, column: 13, scope: !5127)
!5281 = !DILocation(line: 731, column: 12, scope: !5127)
!5282 = !DILocation(line: 731, column: 21, scope: !5127)
!5283 = !DILocation(line: 731, column: 19, scope: !5127)
!5284 = !DILocation(line: 731, column: 33, scope: !5127)
!5285 = !DILocation(line: 731, column: 41, scope: !5127)
!5286 = !DILocation(line: 731, column: 39, scope: !5127)
!5287 = !DILocation(line: 731, column: 31, scope: !5127)
!5288 = !DILocation(line: 731, column: 3, scope: !5127)
!5289 = !DILocation(line: 731, column: 10, scope: !5127)
!5290 = !DILocation(line: 732, column: 13, scope: !5127)
!5291 = !DILocation(line: 732, column: 12, scope: !5127)
!5292 = !DILocation(line: 732, column: 21, scope: !5127)
!5293 = !DILocation(line: 732, column: 19, scope: !5127)
!5294 = !DILocation(line: 732, column: 33, scope: !5127)
!5295 = !DILocation(line: 732, column: 41, scope: !5127)
!5296 = !DILocation(line: 732, column: 39, scope: !5127)
!5297 = !DILocation(line: 732, column: 31, scope: !5127)
!5298 = !DILocation(line: 732, column: 3, scope: !5127)
!5299 = !DILocation(line: 732, column: 10, scope: !5127)
!5300 = !DILocation(line: 734, column: 18, scope: !5127)
!5301 = !DILocation(line: 734, column: 24, scope: !5127)
!5302 = !DILocation(line: 734, column: 33, scope: !5127)
!5303 = !DILocation(line: 734, column: 38, scope: !5127)
!5304 = !DILocation(line: 734, column: 3, scope: !5127)
!5305 = !DILocation(line: 735, column: 18, scope: !5127)
!5306 = !DILocation(line: 735, column: 24, scope: !5127)
!5307 = !DILocation(line: 735, column: 33, scope: !5127)
!5308 = !DILocation(line: 735, column: 38, scope: !5127)
!5309 = !DILocation(line: 735, column: 45, scope: !5127)
!5310 = !DILocation(line: 735, column: 43, scope: !5127)
!5311 = !DILocation(line: 735, column: 3, scope: !5127)
!5312 = !DILocation(line: 738, column: 15, scope: !5127)
!5313 = !DILocation(line: 738, column: 3, scope: !5127)
!5314 = !DILocation(line: 740, column: 15, scope: !5127)
!5315 = !DILocation(line: 740, column: 3, scope: !5127)
!5316 = !DILocation(line: 742, column: 3, scope: !5127)
!5317 = !DILocation(line: 743, column: 2, scope: !5127)
!5318 = !DILocation(line: 744, column: 1, scope: !4965)
!5319 = distinct !DISubprogram(name: "get_matrix_editbone", scope: !3, file: !3, line: 2098, type: !5320, scopeLine: 2099, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1930)
!5320 = !DISubroutineType(types: !5321)
!5321 = !{null, !616, !4968}
!5322 = !DILocalVariable(name: "ebone", arg: 1, scope: !5319, file: !3, line: 2098, type: !616)
!5323 = !DILocation(line: 2098, column: 43, scope: !5319)
!5324 = !DILocalVariable(name: "bmat", arg: 2, scope: !5319, file: !3, line: 2098, type: !4968)
!5325 = !DILocation(line: 2098, column: 56, scope: !5319)
!5326 = !DILocation(line: 2100, column: 27, scope: !5319)
!5327 = !DILocation(line: 2100, column: 34, scope: !5319)
!5328 = !DILocation(line: 2100, column: 40, scope: !5319)
!5329 = !DILocation(line: 2100, column: 47, scope: !5319)
!5330 = !DILocation(line: 2100, column: 18, scope: !5319)
!5331 = !DILocation(line: 2100, column: 2, scope: !5319)
!5332 = !DILocation(line: 2100, column: 9, scope: !5319)
!5333 = !DILocation(line: 2100, column: 16, scope: !5319)
!5334 = !DILocation(line: 2101, column: 28, scope: !5319)
!5335 = !DILocation(line: 2101, column: 35, scope: !5319)
!5336 = !DILocation(line: 2101, column: 2, scope: !5319)
!5337 = !DILocation(line: 2102, column: 1, scope: !5319)
!5338 = distinct !DISubprogram(name: "draw_sphere_bone", scope: !3, file: !3, line: 855, type: !5339, scopeLine: 857, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1930)
!5339 = !DISubroutineType(types: !5340)
!5340 = !{null, !2145, !417, !417, !415, !7, !3717, !616}
!5341 = !DILocalVariable(name: "dt", arg: 1, scope: !5338, file: !3, line: 855, type: !2145)
!5342 = !DILocation(line: 855, column: 42, scope: !5338)
!5343 = !DILocalVariable(name: "armflag", arg: 2, scope: !5338, file: !3, line: 855, type: !417)
!5344 = !DILocation(line: 855, column: 50, scope: !5338)
!5345 = !DILocalVariable(name: "boneflag", arg: 3, scope: !5338, file: !3, line: 855, type: !417)
!5346 = !DILocation(line: 855, column: 63, scope: !5338)
!5347 = !DILocalVariable(name: "constflag", arg: 4, scope: !5338, file: !3, line: 855, type: !415)
!5348 = !DILocation(line: 855, column: 79, scope: !5338)
!5349 = !DILocalVariable(name: "id", arg: 5, scope: !5338, file: !3, line: 855, type: !7)
!5350 = !DILocation(line: 855, column: 103, scope: !5338)
!5351 = !DILocalVariable(name: "pchan", arg: 6, scope: !5338, file: !3, line: 856, type: !3717)
!5352 = !DILocation(line: 856, column: 44, scope: !5338)
!5353 = !DILocalVariable(name: "ebone", arg: 7, scope: !5338, file: !3, line: 856, type: !616)
!5354 = !DILocation(line: 856, column: 61, scope: !5338)
!5355 = !DILocalVariable(name: "qobj", scope: !5338, file: !3, line: 858, type: !5356)
!5356 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5357, size: 64)
!5357 = !DIDerivedType(tag: DW_TAG_typedef, name: "GLUquadricObj", file: !5358, line: 285, baseType: !5359)
!5358 = !DIFile(filename: "include/GL/glu.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!5359 = !DIDerivedType(tag: DW_TAG_typedef, name: "GLUquadric", file: !5358, line: 280, baseType: !5360)
!5360 = !DICompositeType(tag: DW_TAG_structure_type, name: "GLUquadric", file: !5358, line: 280, flags: DIFlagFwdDecl)
!5361 = !DILocation(line: 858, column: 17, scope: !5338)
!5362 = !DILocalVariable(name: "head", scope: !5338, file: !3, line: 859, type: !375)
!5363 = !DILocation(line: 859, column: 8, scope: !5338)
!5364 = !DILocalVariable(name: "tail", scope: !5338, file: !3, line: 859, type: !375)
!5365 = !DILocation(line: 859, column: 14, scope: !5338)
!5366 = !DILocalVariable(name: "length", scope: !5338, file: !3, line: 859, type: !375)
!5367 = !DILocation(line: 859, column: 20, scope: !5338)
!5368 = !DILocalVariable(name: "fac1", scope: !5338, file: !3, line: 860, type: !375)
!5369 = !DILocation(line: 860, column: 8, scope: !5338)
!5370 = !DILocalVariable(name: "fac2", scope: !5338, file: !3, line: 860, type: !375)
!5371 = !DILocation(line: 860, column: 14, scope: !5338)
!5372 = !DILocation(line: 862, column: 2, scope: !5338)
!5373 = !DILocation(line: 863, column: 9, scope: !5338)
!5374 = !DILocation(line: 863, column: 7, scope: !5338)
!5375 = !DILocation(line: 866, column: 6, scope: !5376)
!5376 = distinct !DILexicalBlock(scope: !5338, file: !3, line: 866, column: 6)
!5377 = !DILocation(line: 866, column: 6, scope: !5338)
!5378 = !DILocation(line: 867, column: 12, scope: !5379)
!5379 = distinct !DILexicalBlock(scope: !5376, file: !3, line: 866, column: 13)
!5380 = !DILocation(line: 867, column: 19, scope: !5379)
!5381 = !DILocation(line: 867, column: 10, scope: !5379)
!5382 = !DILocation(line: 868, column: 10, scope: !5379)
!5383 = !DILocation(line: 868, column: 17, scope: !5379)
!5384 = !DILocation(line: 868, column: 8, scope: !5379)
!5385 = !DILocation(line: 869, column: 7, scope: !5386)
!5386 = distinct !DILexicalBlock(scope: !5379, file: !3, line: 869, column: 7)
!5387 = !DILocation(line: 869, column: 14, scope: !5386)
!5388 = !DILocation(line: 869, column: 21, scope: !5386)
!5389 = !DILocation(line: 869, column: 25, scope: !5386)
!5390 = !DILocation(line: 869, column: 34, scope: !5386)
!5391 = !DILocation(line: 869, column: 7, scope: !5379)
!5392 = !DILocation(line: 870, column: 11, scope: !5386)
!5393 = !DILocation(line: 870, column: 18, scope: !5386)
!5394 = !DILocation(line: 870, column: 26, scope: !5386)
!5395 = !DILocation(line: 870, column: 9, scope: !5386)
!5396 = !DILocation(line: 870, column: 4, scope: !5386)
!5397 = !DILocation(line: 872, column: 11, scope: !5386)
!5398 = !DILocation(line: 872, column: 18, scope: !5386)
!5399 = !DILocation(line: 872, column: 9, scope: !5386)
!5400 = !DILocation(line: 873, column: 2, scope: !5379)
!5401 = !DILocation(line: 875, column: 12, scope: !5402)
!5402 = distinct !DILexicalBlock(scope: !5376, file: !3, line: 874, column: 7)
!5403 = !DILocation(line: 875, column: 19, scope: !5402)
!5404 = !DILocation(line: 875, column: 25, scope: !5402)
!5405 = !DILocation(line: 875, column: 10, scope: !5402)
!5406 = !DILocation(line: 876, column: 10, scope: !5402)
!5407 = !DILocation(line: 876, column: 17, scope: !5402)
!5408 = !DILocation(line: 876, column: 23, scope: !5402)
!5409 = !DILocation(line: 876, column: 8, scope: !5402)
!5410 = !DILocation(line: 877, column: 7, scope: !5411)
!5411 = distinct !DILexicalBlock(scope: !5402, file: !3, line: 877, column: 7)
!5412 = !DILocation(line: 877, column: 14, scope: !5411)
!5413 = !DILocation(line: 877, column: 21, scope: !5411)
!5414 = !DILocation(line: 877, column: 25, scope: !5411)
!5415 = !DILocation(line: 877, column: 34, scope: !5411)
!5416 = !DILocation(line: 877, column: 7, scope: !5402)
!5417 = !DILocation(line: 878, column: 11, scope: !5411)
!5418 = !DILocation(line: 878, column: 18, scope: !5411)
!5419 = !DILocation(line: 878, column: 26, scope: !5411)
!5420 = !DILocation(line: 878, column: 32, scope: !5411)
!5421 = !DILocation(line: 878, column: 9, scope: !5411)
!5422 = !DILocation(line: 878, column: 4, scope: !5411)
!5423 = !DILocation(line: 880, column: 11, scope: !5411)
!5424 = !DILocation(line: 880, column: 18, scope: !5411)
!5425 = !DILocation(line: 880, column: 24, scope: !5411)
!5426 = !DILocation(line: 880, column: 9, scope: !5411)
!5427 = !DILocation(line: 884, column: 2, scope: !5338)
!5428 = !DILocation(line: 886, column: 6, scope: !5429)
!5429 = distinct !DILexicalBlock(scope: !5338, file: !3, line: 886, column: 6)
!5430 = !DILocation(line: 886, column: 9, scope: !5429)
!5431 = !DILocation(line: 886, column: 6, scope: !5338)
!5432 = !DILocation(line: 888, column: 3, scope: !5433)
!5433 = distinct !DILexicalBlock(scope: !5429, file: !3, line: 886, column: 22)
!5434 = !DILocation(line: 889, column: 3, scope: !5433)
!5435 = !DILocation(line: 891, column: 23, scope: !5433)
!5436 = !DILocation(line: 891, column: 3, scope: !5433)
!5437 = !DILocation(line: 892, column: 3, scope: !5433)
!5438 = !DILocation(line: 893, column: 2, scope: !5433)
!5439 = !DILocation(line: 895, column: 23, scope: !5440)
!5440 = distinct !DILexicalBlock(scope: !5429, file: !3, line: 894, column: 7)
!5441 = !DILocation(line: 895, column: 3, scope: !5440)
!5442 = !DILocation(line: 899, column: 6, scope: !5443)
!5443 = distinct !DILexicalBlock(scope: !5338, file: !3, line: 899, column: 6)
!5444 = !DILocation(line: 899, column: 14, scope: !5443)
!5445 = !DILocation(line: 899, column: 6, scope: !5338)
!5446 = !DILocation(line: 900, column: 7, scope: !5447)
!5447 = distinct !DILexicalBlock(scope: !5448, file: !3, line: 900, column: 7)
!5448 = distinct !DILexicalBlock(scope: !5443, file: !3, line: 899, column: 30)
!5449 = !DILocation(line: 900, column: 16, scope: !5447)
!5450 = !DILocation(line: 900, column: 7, scope: !5448)
!5451 = !DILocation(line: 900, column: 32, scope: !5447)
!5452 = !DILocation(line: 901, column: 8, scope: !5447)
!5453 = !DILocation(line: 902, column: 2, scope: !5448)
!5454 = !DILocation(line: 903, column: 11, scope: !5455)
!5455 = distinct !DILexicalBlock(scope: !5443, file: !3, line: 903, column: 11)
!5456 = !DILocation(line: 903, column: 19, scope: !5455)
!5457 = !DILocation(line: 903, column: 11, scope: !5443)
!5458 = !DILocation(line: 904, column: 49, scope: !5455)
!5459 = !DILocation(line: 904, column: 59, scope: !5455)
!5460 = !DILocation(line: 904, column: 3, scope: !5455)
!5461 = !DILocation(line: 905, column: 11, scope: !5462)
!5462 = distinct !DILexicalBlock(scope: !5455, file: !3, line: 905, column: 11)
!5463 = !DILocation(line: 905, column: 14, scope: !5462)
!5464 = !DILocation(line: 905, column: 11, scope: !5455)
!5465 = !DILocation(line: 906, column: 3, scope: !5462)
!5466 = !DILocation(line: 909, column: 7, scope: !5467)
!5467 = distinct !DILexicalBlock(scope: !5338, file: !3, line: 909, column: 6)
!5468 = !DILocation(line: 909, column: 16, scope: !5467)
!5469 = !DILocation(line: 909, column: 34, scope: !5467)
!5470 = !DILocation(line: 909, column: 6, scope: !5338)
!5471 = !DILocation(line: 910, column: 7, scope: !5472)
!5472 = distinct !DILexicalBlock(scope: !5473, file: !3, line: 910, column: 7)
!5473 = distinct !DILexicalBlock(scope: !5467, file: !3, line: 909, column: 40)
!5474 = !DILocation(line: 910, column: 10, scope: !5472)
!5475 = !DILocation(line: 910, column: 7, scope: !5473)
!5476 = !DILocation(line: 911, column: 23, scope: !5472)
!5477 = !DILocation(line: 911, column: 26, scope: !5472)
!5478 = !DILocation(line: 911, column: 4, scope: !5472)
!5479 = !DILocation(line: 912, column: 13, scope: !5473)
!5480 = !DILocation(line: 912, column: 19, scope: !5473)
!5481 = !DILocation(line: 912, column: 3, scope: !5473)
!5482 = !DILocation(line: 913, column: 2, scope: !5473)
!5483 = !DILocation(line: 916, column: 6, scope: !5484)
!5484 = distinct !DILexicalBlock(scope: !5338, file: !3, line: 916, column: 6)
!5485 = !DILocation(line: 916, column: 14, scope: !5484)
!5486 = !DILocation(line: 916, column: 6, scope: !5338)
!5487 = !DILocation(line: 917, column: 7, scope: !5488)
!5488 = distinct !DILexicalBlock(scope: !5489, file: !3, line: 917, column: 7)
!5489 = distinct !DILexicalBlock(scope: !5484, file: !3, line: 916, column: 30)
!5490 = !DILocation(line: 917, column: 16, scope: !5488)
!5491 = !DILocation(line: 917, column: 7, scope: !5489)
!5492 = !DILocation(line: 917, column: 31, scope: !5488)
!5493 = !DILocation(line: 918, column: 8, scope: !5488)
!5494 = !DILocation(line: 919, column: 2, scope: !5489)
!5495 = !DILocation(line: 921, column: 6, scope: !5496)
!5496 = distinct !DILexicalBlock(scope: !5338, file: !3, line: 921, column: 6)
!5497 = !DILocation(line: 921, column: 9, scope: !5496)
!5498 = !DILocation(line: 921, column: 6, scope: !5338)
!5499 = !DILocation(line: 922, column: 22, scope: !5496)
!5500 = !DILocation(line: 922, column: 25, scope: !5496)
!5501 = !DILocation(line: 922, column: 3, scope: !5496)
!5502 = !DILocation(line: 924, column: 27, scope: !5338)
!5503 = !DILocation(line: 924, column: 2, scope: !5338)
!5504 = !DILocation(line: 925, column: 12, scope: !5338)
!5505 = !DILocation(line: 925, column: 18, scope: !5338)
!5506 = !DILocation(line: 925, column: 2, scope: !5338)
!5507 = !DILocation(line: 926, column: 28, scope: !5338)
!5508 = !DILocation(line: 926, column: 27, scope: !5338)
!5509 = !DILocation(line: 926, column: 2, scope: !5338)
!5510 = !DILocation(line: 929, column: 6, scope: !5511)
!5511 = distinct !DILexicalBlock(scope: !5338, file: !3, line: 929, column: 6)
!5512 = !DILocation(line: 929, column: 14, scope: !5511)
!5513 = !DILocation(line: 929, column: 6, scope: !5338)
!5514 = !DILocation(line: 930, column: 7, scope: !5515)
!5515 = distinct !DILexicalBlock(scope: !5516, file: !3, line: 930, column: 7)
!5516 = distinct !DILexicalBlock(scope: !5511, file: !3, line: 929, column: 30)
!5517 = !DILocation(line: 930, column: 16, scope: !5515)
!5518 = !DILocation(line: 930, column: 7, scope: !5516)
!5519 = !DILocation(line: 930, column: 33, scope: !5515)
!5520 = !DILocation(line: 931, column: 8, scope: !5515)
!5521 = !DILocation(line: 932, column: 2, scope: !5516)
!5522 = !DILocation(line: 933, column: 11, scope: !5523)
!5523 = distinct !DILexicalBlock(scope: !5511, file: !3, line: 933, column: 11)
!5524 = !DILocation(line: 933, column: 19, scope: !5523)
!5525 = !DILocation(line: 933, column: 11, scope: !5511)
!5526 = !DILocation(line: 934, column: 50, scope: !5523)
!5527 = !DILocation(line: 934, column: 60, scope: !5523)
!5528 = !DILocation(line: 934, column: 3, scope: !5523)
!5529 = !DILocation(line: 935, column: 11, scope: !5530)
!5530 = distinct !DILexicalBlock(scope: !5523, file: !3, line: 935, column: 11)
!5531 = !DILocation(line: 935, column: 14, scope: !5530)
!5532 = !DILocation(line: 935, column: 11, scope: !5523)
!5533 = !DILocation(line: 936, column: 3, scope: !5530)
!5534 = !DILocation(line: 938, column: 10, scope: !5338)
!5535 = !DILocation(line: 938, column: 19, scope: !5338)
!5536 = !DILocation(line: 938, column: 17, scope: !5338)
!5537 = !DILocation(line: 938, column: 27, scope: !5338)
!5538 = !DILocation(line: 938, column: 25, scope: !5338)
!5539 = !DILocation(line: 938, column: 7, scope: !5338)
!5540 = !DILocation(line: 939, column: 10, scope: !5338)
!5541 = !DILocation(line: 939, column: 19, scope: !5338)
!5542 = !DILocation(line: 939, column: 17, scope: !5338)
!5543 = !DILocation(line: 939, column: 27, scope: !5338)
!5544 = !DILocation(line: 939, column: 25, scope: !5338)
!5545 = !DILocation(line: 939, column: 7, scope: !5338)
!5546 = !DILocation(line: 941, column: 6, scope: !5547)
!5547 = distinct !DILexicalBlock(scope: !5338, file: !3, line: 941, column: 6)
!5548 = !DILocation(line: 941, column: 16, scope: !5547)
!5549 = !DILocation(line: 941, column: 23, scope: !5547)
!5550 = !DILocation(line: 941, column: 21, scope: !5547)
!5551 = !DILocation(line: 941, column: 13, scope: !5547)
!5552 = !DILocation(line: 941, column: 6, scope: !5338)
!5553 = !DILocation(line: 942, column: 7, scope: !5554)
!5554 = distinct !DILexicalBlock(scope: !5555, file: !3, line: 942, column: 7)
!5555 = distinct !DILexicalBlock(scope: !5547, file: !3, line: 941, column: 30)
!5556 = !DILocation(line: 942, column: 10, scope: !5554)
!5557 = !DILocation(line: 942, column: 7, scope: !5555)
!5558 = !DILocation(line: 943, column: 23, scope: !5554)
!5559 = !DILocation(line: 943, column: 26, scope: !5554)
!5560 = !DILocation(line: 943, column: 4, scope: !5554)
!5561 = !DILocation(line: 945, column: 3, scope: !5555)
!5562 = !DILocation(line: 946, column: 3, scope: !5555)
!5563 = !DILocation(line: 948, column: 28, scope: !5555)
!5564 = !DILocation(line: 948, column: 3, scope: !5555)
!5565 = !DILocation(line: 949, column: 15, scope: !5555)
!5566 = !DILocation(line: 949, column: 21, scope: !5555)
!5567 = !DILocation(line: 949, column: 28, scope: !5555)
!5568 = !DILocation(line: 949, column: 26, scope: !5555)
!5569 = !DILocation(line: 949, column: 43, scope: !5555)
!5570 = !DILocation(line: 949, column: 41, scope: !5555)
!5571 = !DILocation(line: 949, column: 51, scope: !5555)
!5572 = !DILocation(line: 949, column: 49, scope: !5555)
!5573 = !DILocation(line: 949, column: 33, scope: !5555)
!5574 = !DILocation(line: 949, column: 57, scope: !5555)
!5575 = !DILocation(line: 949, column: 64, scope: !5555)
!5576 = !DILocation(line: 949, column: 62, scope: !5555)
!5577 = !DILocation(line: 949, column: 79, scope: !5555)
!5578 = !DILocation(line: 949, column: 77, scope: !5555)
!5579 = !DILocation(line: 949, column: 87, scope: !5555)
!5580 = !DILocation(line: 949, column: 85, scope: !5555)
!5581 = !DILocation(line: 949, column: 69, scope: !5555)
!5582 = !DILocation(line: 949, column: 93, scope: !5555)
!5583 = !DILocation(line: 949, column: 102, scope: !5555)
!5584 = !DILocation(line: 949, column: 100, scope: !5555)
!5585 = !DILocation(line: 949, column: 109, scope: !5555)
!5586 = !DILocation(line: 949, column: 107, scope: !5555)
!5587 = !DILocation(line: 949, column: 3, scope: !5555)
!5588 = !DILocation(line: 950, column: 29, scope: !5555)
!5589 = !DILocation(line: 950, column: 28, scope: !5555)
!5590 = !DILocation(line: 950, column: 3, scope: !5555)
!5591 = !DILocation(line: 952, column: 3, scope: !5555)
!5592 = !DILocation(line: 955, column: 28, scope: !5555)
!5593 = !DILocation(line: 955, column: 37, scope: !5555)
!5594 = !DILocation(line: 955, column: 35, scope: !5555)
!5595 = !DILocation(line: 955, column: 3, scope: !5555)
!5596 = !DILocation(line: 956, column: 13, scope: !5555)
!5597 = !DILocation(line: 956, column: 19, scope: !5555)
!5598 = !DILocation(line: 956, column: 26, scope: !5555)
!5599 = !DILocation(line: 956, column: 24, scope: !5555)
!5600 = !DILocation(line: 956, column: 41, scope: !5555)
!5601 = !DILocation(line: 956, column: 39, scope: !5555)
!5602 = !DILocation(line: 956, column: 49, scope: !5555)
!5603 = !DILocation(line: 956, column: 47, scope: !5555)
!5604 = !DILocation(line: 956, column: 31, scope: !5555)
!5605 = !DILocation(line: 956, column: 3, scope: !5555)
!5606 = !DILocation(line: 957, column: 29, scope: !5555)
!5607 = !DILocation(line: 957, column: 28, scope: !5555)
!5608 = !DILocation(line: 957, column: 38, scope: !5555)
!5609 = !DILocation(line: 957, column: 36, scope: !5555)
!5610 = !DILocation(line: 957, column: 3, scope: !5555)
!5611 = !DILocation(line: 959, column: 28, scope: !5555)
!5612 = !DILocation(line: 959, column: 3, scope: !5555)
!5613 = !DILocation(line: 960, column: 13, scope: !5555)
!5614 = !DILocation(line: 960, column: 19, scope: !5555)
!5615 = !DILocation(line: 960, column: 26, scope: !5555)
!5616 = !DILocation(line: 960, column: 24, scope: !5555)
!5617 = !DILocation(line: 960, column: 41, scope: !5555)
!5618 = !DILocation(line: 960, column: 39, scope: !5555)
!5619 = !DILocation(line: 960, column: 49, scope: !5555)
!5620 = !DILocation(line: 960, column: 47, scope: !5555)
!5621 = !DILocation(line: 960, column: 31, scope: !5555)
!5622 = !DILocation(line: 960, column: 3, scope: !5555)
!5623 = !DILocation(line: 961, column: 2, scope: !5555)
!5624 = !DILocation(line: 964, column: 29, scope: !5625)
!5625 = distinct !DILexicalBlock(scope: !5547, file: !3, line: 962, column: 7)
!5626 = !DILocation(line: 964, column: 36, scope: !5625)
!5627 = !DILocation(line: 964, column: 34, scope: !5625)
!5628 = !DILocation(line: 964, column: 45, scope: !5625)
!5629 = !DILocation(line: 964, column: 43, scope: !5625)
!5630 = !DILocation(line: 964, column: 51, scope: !5625)
!5631 = !DILocation(line: 964, column: 3, scope: !5625)
!5632 = !DILocation(line: 965, column: 13, scope: !5625)
!5633 = !DILocation(line: 965, column: 19, scope: !5625)
!5634 = !DILocation(line: 965, column: 26, scope: !5625)
!5635 = !DILocation(line: 965, column: 24, scope: !5625)
!5636 = !DILocation(line: 965, column: 41, scope: !5625)
!5637 = !DILocation(line: 965, column: 39, scope: !5625)
!5638 = !DILocation(line: 965, column: 49, scope: !5625)
!5639 = !DILocation(line: 965, column: 47, scope: !5625)
!5640 = !DILocation(line: 965, column: 31, scope: !5625)
!5641 = !DILocation(line: 965, column: 3, scope: !5625)
!5642 = !DILocation(line: 969, column: 6, scope: !5643)
!5643 = distinct !DILexicalBlock(scope: !5338, file: !3, line: 969, column: 6)
!5644 = !DILocation(line: 969, column: 9, scope: !5643)
!5645 = !DILocation(line: 969, column: 6, scope: !5338)
!5646 = !DILocation(line: 970, column: 3, scope: !5647)
!5647 = distinct !DILexicalBlock(scope: !5643, file: !3, line: 969, column: 22)
!5648 = !DILocation(line: 971, column: 3, scope: !5647)
!5649 = !DILocation(line: 972, column: 3, scope: !5647)
!5650 = !DILocation(line: 973, column: 2, scope: !5647)
!5651 = !DILocation(line: 975, column: 2, scope: !5338)
!5652 = !DILocation(line: 976, column: 19, scope: !5338)
!5653 = !DILocation(line: 976, column: 2, scope: !5338)
!5654 = !DILocation(line: 977, column: 1, scope: !5338)
!5655 = distinct !DISubprogram(name: "draw_b_bone", scope: !3, file: !3, line: 1123, type: !5339, scopeLine: 1125, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1930)
!5656 = !DILocalVariable(name: "dt", arg: 1, scope: !5655, file: !3, line: 1123, type: !2145)
!5657 = !DILocation(line: 1123, column: 37, scope: !5655)
!5658 = !DILocalVariable(name: "armflag", arg: 2, scope: !5655, file: !3, line: 1123, type: !417)
!5659 = !DILocation(line: 1123, column: 45, scope: !5655)
!5660 = !DILocalVariable(name: "boneflag", arg: 3, scope: !5655, file: !3, line: 1123, type: !417)
!5661 = !DILocation(line: 1123, column: 58, scope: !5655)
!5662 = !DILocalVariable(name: "constflag", arg: 4, scope: !5655, file: !3, line: 1123, type: !415)
!5663 = !DILocation(line: 1123, column: 74, scope: !5655)
!5664 = !DILocalVariable(name: "id", arg: 5, scope: !5655, file: !3, line: 1123, type: !7)
!5665 = !DILocation(line: 1123, column: 98, scope: !5655)
!5666 = !DILocalVariable(name: "pchan", arg: 6, scope: !5655, file: !3, line: 1124, type: !3717)
!5667 = !DILocation(line: 1124, column: 39, scope: !5655)
!5668 = !DILocalVariable(name: "ebone", arg: 7, scope: !5655, file: !3, line: 1124, type: !616)
!5669 = !DILocation(line: 1124, column: 56, scope: !5655)
!5670 = !DILocalVariable(name: "xwidth", scope: !5655, file: !3, line: 1126, type: !375)
!5671 = !DILocation(line: 1126, column: 8, scope: !5655)
!5672 = !DILocalVariable(name: "length", scope: !5655, file: !3, line: 1126, type: !375)
!5673 = !DILocation(line: 1126, column: 16, scope: !5655)
!5674 = !DILocalVariable(name: "zwidth", scope: !5655, file: !3, line: 1126, type: !375)
!5675 = !DILocation(line: 1126, column: 24, scope: !5655)
!5676 = !DILocation(line: 1128, column: 6, scope: !5677)
!5677 = distinct !DILexicalBlock(scope: !5655, file: !3, line: 1128, column: 6)
!5678 = !DILocation(line: 1128, column: 6, scope: !5655)
!5679 = !DILocation(line: 1129, column: 12, scope: !5680)
!5680 = distinct !DILexicalBlock(scope: !5677, file: !3, line: 1128, column: 13)
!5681 = !DILocation(line: 1129, column: 19, scope: !5680)
!5682 = !DILocation(line: 1129, column: 25, scope: !5680)
!5683 = !DILocation(line: 1129, column: 10, scope: !5680)
!5684 = !DILocation(line: 1130, column: 12, scope: !5680)
!5685 = !DILocation(line: 1130, column: 19, scope: !5680)
!5686 = !DILocation(line: 1130, column: 25, scope: !5680)
!5687 = !DILocation(line: 1130, column: 10, scope: !5680)
!5688 = !DILocation(line: 1131, column: 12, scope: !5680)
!5689 = !DILocation(line: 1131, column: 19, scope: !5680)
!5690 = !DILocation(line: 1131, column: 25, scope: !5680)
!5691 = !DILocation(line: 1131, column: 10, scope: !5680)
!5692 = !DILocation(line: 1132, column: 2, scope: !5680)
!5693 = !DILocation(line: 1134, column: 12, scope: !5694)
!5694 = distinct !DILexicalBlock(scope: !5677, file: !3, line: 1133, column: 7)
!5695 = !DILocation(line: 1134, column: 19, scope: !5694)
!5696 = !DILocation(line: 1134, column: 10, scope: !5694)
!5697 = !DILocation(line: 1135, column: 12, scope: !5694)
!5698 = !DILocation(line: 1135, column: 19, scope: !5694)
!5699 = !DILocation(line: 1135, column: 10, scope: !5694)
!5700 = !DILocation(line: 1136, column: 12, scope: !5694)
!5701 = !DILocation(line: 1136, column: 19, scope: !5694)
!5702 = !DILocation(line: 1136, column: 10, scope: !5694)
!5703 = !DILocation(line: 1140, column: 6, scope: !5704)
!5704 = distinct !DILexicalBlock(scope: !5655, file: !3, line: 1140, column: 6)
!5705 = !DILocation(line: 1140, column: 14, scope: !5704)
!5706 = !DILocation(line: 1140, column: 6, scope: !5655)
!5707 = !DILocation(line: 1142, column: 3, scope: !5708)
!5708 = distinct !DILexicalBlock(scope: !5704, file: !3, line: 1140, column: 30)
!5709 = !DILocation(line: 1143, column: 12, scope: !5708)
!5710 = !DILocation(line: 1143, column: 20, scope: !5708)
!5711 = !DILocation(line: 1143, column: 28, scope: !5708)
!5712 = !DILocation(line: 1143, column: 3, scope: !5708)
!5713 = !DILocation(line: 1144, column: 20, scope: !5708)
!5714 = !DILocation(line: 1144, column: 24, scope: !5708)
!5715 = !DILocation(line: 1144, column: 33, scope: !5708)
!5716 = !DILocation(line: 1144, column: 43, scope: !5708)
!5717 = !DILocation(line: 1144, column: 3, scope: !5708)
!5718 = !DILocation(line: 1145, column: 3, scope: !5708)
!5719 = !DILocation(line: 1146, column: 10, scope: !5708)
!5720 = !DILocation(line: 1147, column: 2, scope: !5708)
!5721 = !DILocation(line: 1150, column: 6, scope: !5722)
!5722 = distinct !DILexicalBlock(scope: !5655, file: !3, line: 1150, column: 6)
!5723 = !DILocation(line: 1150, column: 14, scope: !5722)
!5724 = !DILocation(line: 1150, column: 6, scope: !5655)
!5725 = !DILocation(line: 1151, column: 7, scope: !5726)
!5726 = distinct !DILexicalBlock(scope: !5727, file: !3, line: 1151, column: 7)
!5727 = distinct !DILexicalBlock(scope: !5722, file: !3, line: 1150, column: 30)
!5728 = !DILocation(line: 1151, column: 10, scope: !5726)
!5729 = !DILocation(line: 1151, column: 7, scope: !5727)
!5730 = !DILocation(line: 1152, column: 42, scope: !5726)
!5731 = !DILocation(line: 1152, column: 52, scope: !5726)
!5732 = !DILocation(line: 1152, column: 4, scope: !5726)
!5733 = !DILocation(line: 1154, column: 41, scope: !5726)
!5734 = !DILocation(line: 1154, column: 51, scope: !5726)
!5735 = !DILocation(line: 1154, column: 4, scope: !5726)
!5736 = !DILocation(line: 1155, column: 2, scope: !5727)
!5737 = !DILocation(line: 1156, column: 11, scope: !5738)
!5738 = distinct !DILexicalBlock(scope: !5722, file: !3, line: 1156, column: 11)
!5739 = !DILocation(line: 1156, column: 19, scope: !5738)
!5740 = !DILocation(line: 1156, column: 11, scope: !5722)
!5741 = !DILocation(line: 1157, column: 7, scope: !5742)
!5742 = distinct !DILexicalBlock(scope: !5743, file: !3, line: 1157, column: 7)
!5743 = distinct !DILexicalBlock(scope: !5738, file: !3, line: 1156, column: 35)
!5744 = !DILocation(line: 1157, column: 10, scope: !5742)
!5745 = !DILocation(line: 1157, column: 7, scope: !5743)
!5746 = !DILocation(line: 1158, column: 22, scope: !5747)
!5747 = distinct !DILexicalBlock(scope: !5742, file: !3, line: 1157, column: 22)
!5748 = !DILocation(line: 1158, column: 4, scope: !5747)
!5749 = !DILocation(line: 1159, column: 3, scope: !5747)
!5750 = !DILocation(line: 1161, column: 4, scope: !5742)
!5751 = !DILocation(line: 1162, column: 2, scope: !5743)
!5752 = !DILocation(line: 1164, column: 6, scope: !5753)
!5753 = distinct !DILexicalBlock(scope: !5655, file: !3, line: 1164, column: 6)
!5754 = !DILocation(line: 1164, column: 9, scope: !5753)
!5755 = !DILocation(line: 1164, column: 6, scope: !5655)
!5756 = !DILocation(line: 1165, column: 31, scope: !5757)
!5757 = distinct !DILexicalBlock(scope: !5753, file: !3, line: 1164, column: 16)
!5758 = !DILocation(line: 1165, column: 34, scope: !5757)
!5759 = !DILocation(line: 1165, column: 3, scope: !5757)
!5760 = !DILocation(line: 1166, column: 2, scope: !5757)
!5761 = !DILocation(line: 1169, column: 6, scope: !5762)
!5762 = distinct !DILexicalBlock(scope: !5655, file: !3, line: 1169, column: 6)
!5763 = !DILocation(line: 1169, column: 9, scope: !5762)
!5764 = !DILocation(line: 1169, column: 6, scope: !5655)
!5765 = !DILocation(line: 1170, column: 3, scope: !5766)
!5766 = distinct !DILexicalBlock(scope: !5762, file: !3, line: 1169, column: 20)
!5767 = !DILocation(line: 1171, column: 3, scope: !5766)
!5768 = !DILocation(line: 1173, column: 7, scope: !5769)
!5769 = distinct !DILexicalBlock(scope: !5766, file: !3, line: 1173, column: 7)
!5770 = !DILocation(line: 1173, column: 15, scope: !5769)
!5771 = !DILocation(line: 1173, column: 7, scope: !5766)
!5772 = !DILocation(line: 1174, column: 41, scope: !5769)
!5773 = !DILocation(line: 1174, column: 51, scope: !5769)
!5774 = !DILocation(line: 1174, column: 4, scope: !5769)
!5775 = !DILocation(line: 1176, column: 4, scope: !5769)
!5776 = !DILocation(line: 1178, column: 31, scope: !5766)
!5777 = !DILocation(line: 1178, column: 38, scope: !5766)
!5778 = !DILocation(line: 1178, column: 46, scope: !5766)
!5779 = !DILocation(line: 1178, column: 54, scope: !5766)
!5780 = !DILocation(line: 1178, column: 3, scope: !5766)
!5781 = !DILocation(line: 1181, column: 3, scope: !5766)
!5782 = !DILocation(line: 1182, column: 3, scope: !5766)
!5783 = !DILocation(line: 1183, column: 2, scope: !5766)
!5784 = !DILocation(line: 1186, column: 7, scope: !5785)
!5785 = distinct !DILexicalBlock(scope: !5786, file: !3, line: 1186, column: 7)
!5786 = distinct !DILexicalBlock(scope: !5762, file: !3, line: 1184, column: 7)
!5787 = !DILocation(line: 1186, column: 15, scope: !5785)
!5788 = !DILocation(line: 1186, column: 7, scope: !5786)
!5789 = !DILocation(line: 1187, column: 8, scope: !5790)
!5790 = distinct !DILexicalBlock(scope: !5791, file: !3, line: 1187, column: 8)
!5791 = distinct !DILexicalBlock(scope: !5785, file: !3, line: 1186, column: 31)
!5792 = !DILocation(line: 1187, column: 8, scope: !5791)
!5793 = !DILocation(line: 1189, column: 47, scope: !5794)
!5794 = distinct !DILexicalBlock(scope: !5795, file: !3, line: 1189, column: 9)
!5795 = distinct !DILexicalBlock(scope: !5790, file: !3, line: 1187, column: 19)
!5796 = !DILocation(line: 1189, column: 57, scope: !5794)
!5797 = !DILocation(line: 1189, column: 9, scope: !5794)
!5798 = !DILocation(line: 1189, column: 9, scope: !5795)
!5799 = !DILocation(line: 1190, column: 6, scope: !5800)
!5800 = distinct !DILexicalBlock(scope: !5794, file: !3, line: 1189, column: 69)
!5801 = !DILocation(line: 1192, column: 34, scope: !5800)
!5802 = !DILocation(line: 1192, column: 41, scope: !5800)
!5803 = !DILocation(line: 1192, column: 49, scope: !5800)
!5804 = !DILocation(line: 1192, column: 57, scope: !5800)
!5805 = !DILocation(line: 1192, column: 6, scope: !5800)
!5806 = !DILocation(line: 1194, column: 6, scope: !5800)
!5807 = !DILocation(line: 1195, column: 5, scope: !5800)
!5808 = !DILocation(line: 1198, column: 43, scope: !5795)
!5809 = !DILocation(line: 1198, column: 53, scope: !5795)
!5810 = !DILocation(line: 1198, column: 5, scope: !5795)
!5811 = !DILocation(line: 1199, column: 4, scope: !5795)
!5812 = !DILocation(line: 1200, column: 3, scope: !5791)
!5813 = !DILocation(line: 1202, column: 30, scope: !5786)
!5814 = !DILocation(line: 1202, column: 37, scope: !5786)
!5815 = !DILocation(line: 1202, column: 45, scope: !5786)
!5816 = !DILocation(line: 1202, column: 53, scope: !5786)
!5817 = !DILocation(line: 1202, column: 3, scope: !5786)
!5818 = !DILocation(line: 1204, column: 1, scope: !5655)
!5819 = distinct !DISubprogram(name: "draw_wire_bone", scope: !3, file: !3, line: 1237, type: !5339, scopeLine: 1239, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1930)
!5820 = !DILocalVariable(name: "dt", arg: 1, scope: !5819, file: !3, line: 1237, type: !2145)
!5821 = !DILocation(line: 1237, column: 40, scope: !5819)
!5822 = !DILocalVariable(name: "armflag", arg: 2, scope: !5819, file: !3, line: 1237, type: !417)
!5823 = !DILocation(line: 1237, column: 48, scope: !5819)
!5824 = !DILocalVariable(name: "boneflag", arg: 3, scope: !5819, file: !3, line: 1237, type: !417)
!5825 = !DILocation(line: 1237, column: 61, scope: !5819)
!5826 = !DILocalVariable(name: "constflag", arg: 4, scope: !5819, file: !3, line: 1237, type: !415)
!5827 = !DILocation(line: 1237, column: 77, scope: !5819)
!5828 = !DILocalVariable(name: "id", arg: 5, scope: !5819, file: !3, line: 1237, type: !7)
!5829 = !DILocation(line: 1237, column: 101, scope: !5819)
!5830 = !DILocalVariable(name: "pchan", arg: 6, scope: !5819, file: !3, line: 1238, type: !3717)
!5831 = !DILocation(line: 1238, column: 42, scope: !5819)
!5832 = !DILocalVariable(name: "ebone", arg: 7, scope: !5819, file: !3, line: 1238, type: !616)
!5833 = !DILocation(line: 1238, column: 59, scope: !5819)
!5834 = !DILocalVariable(name: "bbones_array", scope: !5819, file: !3, line: 1240, type: !5835)
!5835 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5836, size: 16384, elements: !1514)
!5836 = !DIDerivedType(tag: DW_TAG_typedef, name: "Mat4", file: !5837, line: 132, baseType: !5838)
!5837 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_armature.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!5838 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Mat4", file: !5837, line: 130, size: 512, elements: !5839)
!5839 = !{!5840}
!5840 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !5838, file: !5837, line: 131, baseType: !549, size: 512)
!5841 = !DILocation(line: 1240, column: 7, scope: !5819)
!5842 = !DILocalVariable(name: "bbones", scope: !5819, file: !3, line: 1241, type: !5843)
!5843 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5836, size: 64)
!5844 = !DILocation(line: 1241, column: 8, scope: !5819)
!5845 = !DILocalVariable(name: "segments", scope: !5819, file: !3, line: 1242, type: !417)
!5846 = !DILocation(line: 1242, column: 6, scope: !5819)
!5847 = !DILocalVariable(name: "length", scope: !5819, file: !3, line: 1243, type: !375)
!5848 = !DILocation(line: 1243, column: 8, scope: !5819)
!5849 = !DILocation(line: 1245, column: 6, scope: !5850)
!5850 = distinct !DILexicalBlock(scope: !5819, file: !3, line: 1245, column: 6)
!5851 = !DILocation(line: 1245, column: 6, scope: !5819)
!5852 = !DILocation(line: 1246, column: 14, scope: !5853)
!5853 = distinct !DILexicalBlock(scope: !5850, file: !3, line: 1245, column: 13)
!5854 = !DILocation(line: 1246, column: 21, scope: !5853)
!5855 = !DILocation(line: 1246, column: 27, scope: !5853)
!5856 = !DILocation(line: 1246, column: 12, scope: !5853)
!5857 = !DILocation(line: 1247, column: 12, scope: !5853)
!5858 = !DILocation(line: 1247, column: 19, scope: !5853)
!5859 = !DILocation(line: 1247, column: 25, scope: !5853)
!5860 = !DILocation(line: 1247, column: 10, scope: !5853)
!5861 = !DILocation(line: 1249, column: 7, scope: !5862)
!5862 = distinct !DILexicalBlock(scope: !5853, file: !3, line: 1249, column: 7)
!5863 = !DILocation(line: 1249, column: 16, scope: !5862)
!5864 = !DILocation(line: 1249, column: 7, scope: !5853)
!5865 = !DILocation(line: 1250, column: 24, scope: !5866)
!5866 = distinct !DILexicalBlock(scope: !5862, file: !3, line: 1249, column: 21)
!5867 = !DILocation(line: 1250, column: 34, scope: !5866)
!5868 = !DILocation(line: 1250, column: 4, scope: !5866)
!5869 = !DILocation(line: 1251, column: 13, scope: !5866)
!5870 = !DILocation(line: 1251, column: 11, scope: !5866)
!5871 = !DILocation(line: 1252, column: 3, scope: !5866)
!5872 = !DILocation(line: 1253, column: 2, scope: !5853)
!5873 = !DILocation(line: 1255, column: 12, scope: !5850)
!5874 = !DILocation(line: 1255, column: 19, scope: !5850)
!5875 = !DILocation(line: 1255, column: 10, scope: !5850)
!5876 = !DILocation(line: 1258, column: 6, scope: !5877)
!5877 = distinct !DILexicalBlock(scope: !5819, file: !3, line: 1258, column: 6)
!5878 = !DILocation(line: 1258, column: 14, scope: !5877)
!5879 = !DILocation(line: 1258, column: 6, scope: !5819)
!5880 = !DILocation(line: 1260, column: 3, scope: !5881)
!5881 = distinct !DILexicalBlock(scope: !5877, file: !3, line: 1258, column: 30)
!5882 = !DILocation(line: 1261, column: 12, scope: !5881)
!5883 = !DILocation(line: 1261, column: 20, scope: !5881)
!5884 = !DILocation(line: 1261, column: 28, scope: !5881)
!5885 = !DILocation(line: 1261, column: 3, scope: !5881)
!5886 = !DILocation(line: 1262, column: 20, scope: !5881)
!5887 = !DILocation(line: 1262, column: 24, scope: !5881)
!5888 = !DILocation(line: 1262, column: 33, scope: !5881)
!5889 = !DILocation(line: 1262, column: 43, scope: !5881)
!5890 = !DILocation(line: 1262, column: 3, scope: !5881)
!5891 = !DILocation(line: 1263, column: 3, scope: !5881)
!5892 = !DILocation(line: 1264, column: 10, scope: !5881)
!5893 = !DILocation(line: 1265, column: 2, scope: !5881)
!5894 = !DILocation(line: 1268, column: 6, scope: !5895)
!5895 = distinct !DILexicalBlock(scope: !5819, file: !3, line: 1268, column: 6)
!5896 = !DILocation(line: 1268, column: 14, scope: !5895)
!5897 = !DILocation(line: 1268, column: 6, scope: !5819)
!5898 = !DILocation(line: 1269, column: 7, scope: !5899)
!5899 = distinct !DILexicalBlock(scope: !5900, file: !3, line: 1269, column: 7)
!5900 = distinct !DILexicalBlock(scope: !5895, file: !3, line: 1268, column: 47)
!5901 = !DILocation(line: 1269, column: 10, scope: !5899)
!5902 = !DILocation(line: 1269, column: 7, scope: !5900)
!5903 = !DILocation(line: 1270, column: 32, scope: !5899)
!5904 = !DILocation(line: 1270, column: 35, scope: !5899)
!5905 = !DILocation(line: 1270, column: 4, scope: !5899)
!5906 = !DILocation(line: 1272, column: 27, scope: !5900)
!5907 = !DILocation(line: 1272, column: 34, scope: !5900)
!5908 = !DILocation(line: 1272, column: 42, scope: !5900)
!5909 = !DILocation(line: 1272, column: 50, scope: !5900)
!5910 = !DILocation(line: 1272, column: 3, scope: !5900)
!5911 = !DILocation(line: 1275, column: 7, scope: !5912)
!5912 = distinct !DILexicalBlock(scope: !5900, file: !3, line: 1275, column: 7)
!5913 = !DILocation(line: 1275, column: 10, scope: !5912)
!5914 = !DILocation(line: 1275, column: 7, scope: !5900)
!5915 = !DILocation(line: 1276, column: 23, scope: !5912)
!5916 = !DILocation(line: 1276, column: 26, scope: !5912)
!5917 = !DILocation(line: 1276, column: 4, scope: !5912)
!5918 = !DILocation(line: 1277, column: 2, scope: !5900)
!5919 = !DILocation(line: 1280, column: 6, scope: !5920)
!5920 = distinct !DILexicalBlock(scope: !5819, file: !3, line: 1280, column: 6)
!5921 = !DILocation(line: 1280, column: 14, scope: !5920)
!5922 = !DILocation(line: 1280, column: 6, scope: !5819)
!5923 = !DILocation(line: 1281, column: 41, scope: !5924)
!5924 = distinct !DILexicalBlock(scope: !5920, file: !3, line: 1280, column: 30)
!5925 = !DILocation(line: 1281, column: 51, scope: !5924)
!5926 = !DILocation(line: 1281, column: 3, scope: !5924)
!5927 = !DILocation(line: 1282, column: 2, scope: !5924)
!5928 = !DILocation(line: 1283, column: 11, scope: !5929)
!5929 = distinct !DILexicalBlock(scope: !5920, file: !3, line: 1283, column: 11)
!5930 = !DILocation(line: 1283, column: 19, scope: !5929)
!5931 = !DILocation(line: 1283, column: 11, scope: !5920)
!5932 = !DILocation(line: 1284, column: 21, scope: !5933)
!5933 = distinct !DILexicalBlock(scope: !5929, file: !3, line: 1283, column: 35)
!5934 = !DILocation(line: 1284, column: 3, scope: !5933)
!5935 = !DILocation(line: 1285, column: 2, scope: !5933)
!5936 = !DILocation(line: 1288, column: 26, scope: !5819)
!5937 = !DILocation(line: 1288, column: 33, scope: !5819)
!5938 = !DILocation(line: 1288, column: 41, scope: !5819)
!5939 = !DILocation(line: 1288, column: 49, scope: !5819)
!5940 = !DILocation(line: 1288, column: 2, scope: !5819)
!5941 = !DILocation(line: 1289, column: 1, scope: !5819)
!5942 = distinct !DISubprogram(name: "draw_bone", scope: !3, file: !3, line: 1291, type: !5943, scopeLine: 1292, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1930)
!5943 = !DISubroutineType(types: !5944)
!5944 = !{null, !2145, !417, !417, !415, !7, !375}
!5945 = !DILocalVariable(name: "dt", arg: 1, scope: !5942, file: !3, line: 1291, type: !2145)
!5946 = !DILocation(line: 1291, column: 35, scope: !5942)
!5947 = !DILocalVariable(name: "armflag", arg: 2, scope: !5942, file: !3, line: 1291, type: !417)
!5948 = !DILocation(line: 1291, column: 43, scope: !5942)
!5949 = !DILocalVariable(name: "boneflag", arg: 3, scope: !5942, file: !3, line: 1291, type: !417)
!5950 = !DILocation(line: 1291, column: 56, scope: !5942)
!5951 = !DILocalVariable(name: "constflag", arg: 4, scope: !5942, file: !3, line: 1291, type: !415)
!5952 = !DILocation(line: 1291, column: 72, scope: !5942)
!5953 = !DILocalVariable(name: "id", arg: 5, scope: !5942, file: !3, line: 1291, type: !7)
!5954 = !DILocation(line: 1291, column: 96, scope: !5942)
!5955 = !DILocalVariable(name: "length", arg: 6, scope: !5942, file: !3, line: 1291, type: !375)
!5956 = !DILocation(line: 1291, column: 106, scope: !5942)
!5957 = !DILocation(line: 1297, column: 11, scope: !5942)
!5958 = !DILocation(line: 1297, column: 19, scope: !5942)
!5959 = !DILocation(line: 1297, column: 27, scope: !5942)
!5960 = !DILocation(line: 1297, column: 2, scope: !5942)
!5961 = !DILocation(line: 1300, column: 6, scope: !5962)
!5962 = distinct !DILexicalBlock(scope: !5942, file: !3, line: 1300, column: 6)
!5963 = !DILocation(line: 1300, column: 9, scope: !5962)
!5964 = !DILocation(line: 1300, column: 6, scope: !5942)
!5965 = !DILocation(line: 1301, column: 3, scope: !5966)
!5966 = distinct !DILexicalBlock(scope: !5962, file: !3, line: 1300, column: 20)
!5967 = !DILocation(line: 1302, column: 3, scope: !5966)
!5968 = !DILocation(line: 1303, column: 3, scope: !5966)
!5969 = !DILocation(line: 1304, column: 2, scope: !5966)
!5970 = !DILocation(line: 1307, column: 6, scope: !5971)
!5971 = distinct !DILexicalBlock(scope: !5942, file: !3, line: 1307, column: 6)
!5972 = !DILocation(line: 1307, column: 14, scope: !5971)
!5973 = !DILocation(line: 1307, column: 6, scope: !5942)
!5974 = !DILocation(line: 1308, column: 7, scope: !5975)
!5975 = distinct !DILexicalBlock(scope: !5976, file: !3, line: 1308, column: 7)
!5976 = distinct !DILexicalBlock(scope: !5971, file: !3, line: 1307, column: 30)
!5977 = !DILocation(line: 1308, column: 10, scope: !5975)
!5978 = !DILocation(line: 1308, column: 7, scope: !5976)
!5979 = !DILocation(line: 1309, column: 42, scope: !5975)
!5980 = !DILocation(line: 1309, column: 52, scope: !5975)
!5981 = !DILocation(line: 1309, column: 4, scope: !5975)
!5982 = !DILocation(line: 1311, column: 41, scope: !5975)
!5983 = !DILocation(line: 1311, column: 51, scope: !5975)
!5984 = !DILocation(line: 1311, column: 4, scope: !5975)
!5985 = !DILocation(line: 1312, column: 2, scope: !5976)
!5986 = !DILocation(line: 1315, column: 19, scope: !5942)
!5987 = !DILocation(line: 1315, column: 23, scope: !5942)
!5988 = !DILocation(line: 1315, column: 32, scope: !5942)
!5989 = !DILocation(line: 1315, column: 42, scope: !5942)
!5990 = !DILocation(line: 1315, column: 2, scope: !5942)
!5991 = !DILocation(line: 1318, column: 6, scope: !5992)
!5992 = distinct !DILexicalBlock(scope: !5942, file: !3, line: 1318, column: 6)
!5993 = !DILocation(line: 1318, column: 9, scope: !5992)
!5994 = !DILocation(line: 1318, column: 6, scope: !5942)
!5995 = !DILocation(line: 1319, column: 31, scope: !5996)
!5996 = distinct !DILexicalBlock(scope: !5992, file: !3, line: 1318, column: 16)
!5997 = !DILocation(line: 1319, column: 34, scope: !5996)
!5998 = !DILocation(line: 1319, column: 3, scope: !5996)
!5999 = !DILocation(line: 1320, column: 2, scope: !5996)
!6000 = !DILocation(line: 1323, column: 6, scope: !6001)
!6001 = distinct !DILexicalBlock(scope: !5942, file: !3, line: 1323, column: 6)
!6002 = !DILocation(line: 1323, column: 9, scope: !6001)
!6003 = !DILocation(line: 1323, column: 6, scope: !5942)
!6004 = !DILocation(line: 1325, column: 7, scope: !6005)
!6005 = distinct !DILexicalBlock(scope: !6006, file: !3, line: 1325, column: 7)
!6006 = distinct !DILexicalBlock(scope: !6001, file: !3, line: 1323, column: 21)
!6007 = !DILocation(line: 1325, column: 15, scope: !6005)
!6008 = !DILocation(line: 1325, column: 7, scope: !6006)
!6009 = !DILocation(line: 1326, column: 22, scope: !6010)
!6010 = distinct !DILexicalBlock(scope: !6005, file: !3, line: 1325, column: 31)
!6011 = !DILocation(line: 1326, column: 4, scope: !6010)
!6012 = !DILocation(line: 1327, column: 3, scope: !6010)
!6013 = !DILocation(line: 1328, column: 12, scope: !6014)
!6014 = distinct !DILexicalBlock(scope: !6005, file: !3, line: 1328, column: 12)
!6015 = !DILocation(line: 1328, column: 20, scope: !6014)
!6016 = !DILocation(line: 1328, column: 12, scope: !6005)
!6017 = !DILocation(line: 1329, column: 8, scope: !6018)
!6018 = distinct !DILexicalBlock(scope: !6019, file: !3, line: 1329, column: 8)
!6019 = distinct !DILexicalBlock(scope: !6014, file: !3, line: 1328, column: 36)
!6020 = !DILocation(line: 1329, column: 8, scope: !6019)
!6021 = !DILocation(line: 1331, column: 47, scope: !6022)
!6022 = distinct !DILexicalBlock(scope: !6023, file: !3, line: 1331, column: 9)
!6023 = distinct !DILexicalBlock(scope: !6018, file: !3, line: 1329, column: 19)
!6024 = !DILocation(line: 1331, column: 57, scope: !6022)
!6025 = !DILocation(line: 1331, column: 9, scope: !6022)
!6026 = !DILocation(line: 1331, column: 9, scope: !6023)
!6027 = !DILocation(line: 1332, column: 6, scope: !6028)
!6028 = distinct !DILexicalBlock(scope: !6022, file: !3, line: 1331, column: 69)
!6029 = !DILocation(line: 1334, column: 6, scope: !6028)
!6030 = !DILocation(line: 1336, column: 6, scope: !6028)
!6031 = !DILocation(line: 1337, column: 5, scope: !6028)
!6032 = !DILocation(line: 1340, column: 43, scope: !6023)
!6033 = !DILocation(line: 1340, column: 53, scope: !6023)
!6034 = !DILocation(line: 1340, column: 5, scope: !6023)
!6035 = !DILocation(line: 1341, column: 4, scope: !6023)
!6036 = !DILocation(line: 1342, column: 3, scope: !6019)
!6037 = !DILocation(line: 1343, column: 3, scope: !6006)
!6038 = !DILocation(line: 1344, column: 2, scope: !6006)
!6039 = !DILocation(line: 1347, column: 7, scope: !6040)
!6040 = distinct !DILexicalBlock(scope: !6041, file: !3, line: 1347, column: 7)
!6041 = distinct !DILexicalBlock(scope: !6001, file: !3, line: 1345, column: 7)
!6042 = !DILocation(line: 1347, column: 15, scope: !6040)
!6043 = !DILocation(line: 1347, column: 7, scope: !6041)
!6044 = !DILocation(line: 1348, column: 41, scope: !6040)
!6045 = !DILocation(line: 1348, column: 51, scope: !6040)
!6046 = !DILocation(line: 1348, column: 4, scope: !6040)
!6047 = !DILocation(line: 1350, column: 4, scope: !6040)
!6048 = !DILocation(line: 1351, column: 3, scope: !6041)
!6049 = !DILocation(line: 1355, column: 6, scope: !6050)
!6050 = distinct !DILexicalBlock(scope: !5942, file: !3, line: 1355, column: 6)
!6051 = !DILocation(line: 1355, column: 9, scope: !6050)
!6052 = !DILocation(line: 1355, column: 6, scope: !5942)
!6053 = !DILocation(line: 1356, column: 3, scope: !6054)
!6054 = distinct !DILexicalBlock(scope: !6050, file: !3, line: 1355, column: 20)
!6055 = !DILocation(line: 1357, column: 3, scope: !6054)
!6056 = !DILocation(line: 1358, column: 2, scope: !6054)
!6057 = !DILocation(line: 1359, column: 1, scope: !5942)
!6058 = distinct !DISubprogram(name: "draw_sphere_bone_wire", scope: !3, file: !3, line: 748, type: !6059, scopeLine: 751, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1930)
!6059 = !DISubroutineType(types: !6060)
!6060 = !{null, !4968, !4968, !417, !417, !415, !7, !3717, !616}
!6061 = !DILocalVariable(name: "smat", arg: 1, scope: !6058, file: !3, line: 748, type: !4968)
!6062 = !DILocation(line: 748, column: 41, scope: !6058)
!6063 = !DILocalVariable(name: "imat", arg: 2, scope: !6058, file: !3, line: 748, type: !4968)
!6064 = !DILocation(line: 748, column: 59, scope: !6058)
!6065 = !DILocalVariable(name: "armflag", arg: 3, scope: !6058, file: !3, line: 749, type: !417)
!6066 = !DILocation(line: 749, column: 39, scope: !6058)
!6067 = !DILocalVariable(name: "boneflag", arg: 4, scope: !6058, file: !3, line: 749, type: !417)
!6068 = !DILocation(line: 749, column: 52, scope: !6058)
!6069 = !DILocalVariable(name: "constflag", arg: 5, scope: !6058, file: !3, line: 749, type: !415)
!6070 = !DILocation(line: 749, column: 68, scope: !6058)
!6071 = !DILocalVariable(name: "id", arg: 6, scope: !6058, file: !3, line: 749, type: !7)
!6072 = !DILocation(line: 749, column: 92, scope: !6058)
!6073 = !DILocalVariable(name: "pchan", arg: 7, scope: !6058, file: !3, line: 750, type: !3717)
!6074 = !DILocation(line: 750, column: 49, scope: !6058)
!6075 = !DILocalVariable(name: "ebone", arg: 8, scope: !6058, file: !3, line: 750, type: !616)
!6076 = !DILocation(line: 750, column: 66, scope: !6058)
!6077 = !DILocalVariable(name: "head", scope: !6058, file: !3, line: 752, type: !375)
!6078 = !DILocation(line: 752, column: 8, scope: !6058)
!6079 = !DILocalVariable(name: "tail", scope: !6058, file: !3, line: 752, type: !375)
!6080 = !DILocation(line: 752, column: 14, scope: !6058)
!6081 = !DILocalVariable(name: "headvec", scope: !6058, file: !3, line: 753, type: !374)
!6082 = !DILocation(line: 753, column: 9, scope: !6058)
!6083 = !DILocalVariable(name: "tailvec", scope: !6058, file: !3, line: 753, type: !374)
!6084 = !DILocation(line: 753, column: 19, scope: !6058)
!6085 = !DILocalVariable(name: "dirvec", scope: !6058, file: !3, line: 753, type: !538)
!6086 = !DILocation(line: 753, column: 28, scope: !6058)
!6087 = !DILocation(line: 756, column: 6, scope: !6088)
!6088 = distinct !DILexicalBlock(scope: !6058, file: !3, line: 756, column: 6)
!6089 = !DILocation(line: 756, column: 6, scope: !6058)
!6090 = !DILocation(line: 758, column: 28, scope: !6091)
!6091 = distinct !DILexicalBlock(scope: !6088, file: !3, line: 756, column: 13)
!6092 = !DILocation(line: 758, column: 35, scope: !6091)
!6093 = !DILocation(line: 758, column: 41, scope: !6091)
!6094 = !DILocation(line: 758, column: 48, scope: !6091)
!6095 = !DILocation(line: 758, column: 19, scope: !6091)
!6096 = !DILocation(line: 758, column: 3, scope: !6091)
!6097 = !DILocation(line: 758, column: 10, scope: !6091)
!6098 = !DILocation(line: 758, column: 17, scope: !6091)
!6099 = !DILocation(line: 761, column: 10, scope: !6091)
!6100 = !DILocation(line: 761, column: 17, scope: !6091)
!6101 = !DILocation(line: 761, column: 8, scope: !6091)
!6102 = !DILocation(line: 762, column: 7, scope: !6103)
!6103 = distinct !DILexicalBlock(scope: !6091, file: !3, line: 762, column: 7)
!6104 = !DILocation(line: 762, column: 14, scope: !6103)
!6105 = !DILocation(line: 762, column: 21, scope: !6103)
!6106 = !DILocation(line: 762, column: 25, scope: !6103)
!6107 = !DILocation(line: 762, column: 34, scope: !6103)
!6108 = !DILocation(line: 762, column: 7, scope: !6091)
!6109 = !DILocation(line: 763, column: 11, scope: !6103)
!6110 = !DILocation(line: 763, column: 18, scope: !6103)
!6111 = !DILocation(line: 763, column: 26, scope: !6103)
!6112 = !DILocation(line: 763, column: 9, scope: !6103)
!6113 = !DILocation(line: 763, column: 4, scope: !6103)
!6114 = !DILocation(line: 765, column: 11, scope: !6103)
!6115 = !DILocation(line: 765, column: 18, scope: !6103)
!6116 = !DILocation(line: 765, column: 9, scope: !6103)
!6117 = !DILocation(line: 766, column: 13, scope: !6091)
!6118 = !DILocation(line: 766, column: 20, scope: !6091)
!6119 = !DILocation(line: 766, column: 11, scope: !6091)
!6120 = !DILocation(line: 767, column: 13, scope: !6091)
!6121 = !DILocation(line: 767, column: 20, scope: !6091)
!6122 = !DILocation(line: 767, column: 11, scope: !6091)
!6123 = !DILocation(line: 768, column: 2, scope: !6091)
!6124 = !DILocation(line: 771, column: 10, scope: !6125)
!6125 = distinct !DILexicalBlock(scope: !6088, file: !3, line: 769, column: 7)
!6126 = !DILocation(line: 771, column: 17, scope: !6125)
!6127 = !DILocation(line: 771, column: 23, scope: !6125)
!6128 = !DILocation(line: 771, column: 8, scope: !6125)
!6129 = !DILocation(line: 772, column: 8, scope: !6130)
!6130 = distinct !DILexicalBlock(scope: !6125, file: !3, line: 772, column: 7)
!6131 = !DILocation(line: 772, column: 15, scope: !6130)
!6132 = !DILocation(line: 772, column: 7, scope: !6130)
!6133 = !DILocation(line: 772, column: 23, scope: !6130)
!6134 = !DILocation(line: 772, column: 27, scope: !6130)
!6135 = !DILocation(line: 772, column: 36, scope: !6130)
!6136 = !DILocation(line: 772, column: 7, scope: !6125)
!6137 = !DILocation(line: 773, column: 11, scope: !6130)
!6138 = !DILocation(line: 773, column: 18, scope: !6130)
!6139 = !DILocation(line: 773, column: 26, scope: !6130)
!6140 = !DILocation(line: 773, column: 32, scope: !6130)
!6141 = !DILocation(line: 773, column: 9, scope: !6130)
!6142 = !DILocation(line: 773, column: 4, scope: !6130)
!6143 = !DILocation(line: 775, column: 11, scope: !6130)
!6144 = !DILocation(line: 775, column: 18, scope: !6130)
!6145 = !DILocation(line: 775, column: 24, scope: !6130)
!6146 = !DILocation(line: 775, column: 9, scope: !6130)
!6147 = !DILocation(line: 776, column: 13, scope: !6125)
!6148 = !DILocation(line: 776, column: 20, scope: !6125)
!6149 = !DILocation(line: 776, column: 11, scope: !6125)
!6150 = !DILocation(line: 777, column: 13, scope: !6125)
!6151 = !DILocation(line: 777, column: 20, scope: !6125)
!6152 = !DILocation(line: 777, column: 11, scope: !6125)
!6153 = !DILocation(line: 781, column: 6, scope: !6154)
!6154 = distinct !DILexicalBlock(scope: !6058, file: !3, line: 781, column: 6)
!6155 = !DILocation(line: 781, column: 14, scope: !6154)
!6156 = !DILocation(line: 781, column: 6, scope: !6058)
!6157 = !DILocation(line: 782, column: 7, scope: !6158)
!6158 = distinct !DILexicalBlock(scope: !6159, file: !3, line: 782, column: 7)
!6159 = distinct !DILexicalBlock(scope: !6154, file: !3, line: 781, column: 30)
!6160 = !DILocation(line: 782, column: 16, scope: !6158)
!6161 = !DILocation(line: 782, column: 7, scope: !6159)
!6162 = !DILocation(line: 782, column: 32, scope: !6158)
!6163 = !DILocation(line: 783, column: 8, scope: !6158)
!6164 = !DILocation(line: 784, column: 2, scope: !6159)
!6165 = !DILocation(line: 785, column: 11, scope: !6166)
!6166 = distinct !DILexicalBlock(scope: !6154, file: !3, line: 785, column: 11)
!6167 = !DILocation(line: 785, column: 19, scope: !6166)
!6168 = !DILocation(line: 785, column: 11, scope: !6154)
!6169 = !DILocation(line: 786, column: 41, scope: !6166)
!6170 = !DILocation(line: 786, column: 51, scope: !6166)
!6171 = !DILocation(line: 786, column: 3, scope: !6166)
!6172 = !DILocation(line: 789, column: 7, scope: !6173)
!6173 = distinct !DILexicalBlock(scope: !6058, file: !3, line: 789, column: 6)
!6174 = !DILocation(line: 789, column: 16, scope: !6173)
!6175 = !DILocation(line: 789, column: 34, scope: !6173)
!6176 = !DILocation(line: 789, column: 6, scope: !6058)
!6177 = !DILocation(line: 790, column: 7, scope: !6178)
!6178 = distinct !DILexicalBlock(scope: !6179, file: !3, line: 790, column: 7)
!6179 = distinct !DILexicalBlock(scope: !6173, file: !3, line: 789, column: 40)
!6180 = !DILocation(line: 790, column: 10, scope: !6178)
!6181 = !DILocation(line: 790, column: 7, scope: !6179)
!6182 = !DILocation(line: 791, column: 23, scope: !6178)
!6183 = !DILocation(line: 791, column: 26, scope: !6178)
!6184 = !DILocation(line: 791, column: 4, scope: !6178)
!6185 = !DILocation(line: 793, column: 30, scope: !6179)
!6186 = !DILocation(line: 793, column: 39, scope: !6179)
!6187 = !DILocation(line: 793, column: 45, scope: !6179)
!6188 = !DILocation(line: 793, column: 3, scope: !6179)
!6189 = !DILocation(line: 794, column: 2, scope: !6179)
!6190 = !DILocation(line: 797, column: 6, scope: !6191)
!6191 = distinct !DILexicalBlock(scope: !6058, file: !3, line: 797, column: 6)
!6192 = !DILocation(line: 797, column: 14, scope: !6191)
!6193 = !DILocation(line: 797, column: 6, scope: !6058)
!6194 = !DILocation(line: 798, column: 7, scope: !6195)
!6195 = distinct !DILexicalBlock(scope: !6196, file: !3, line: 798, column: 7)
!6196 = distinct !DILexicalBlock(scope: !6191, file: !3, line: 797, column: 30)
!6197 = !DILocation(line: 798, column: 16, scope: !6195)
!6198 = !DILocation(line: 798, column: 7, scope: !6196)
!6199 = !DILocation(line: 798, column: 31, scope: !6195)
!6200 = !DILocation(line: 799, column: 8, scope: !6195)
!6201 = !DILocation(line: 800, column: 2, scope: !6196)
!6202 = !DILocation(line: 802, column: 6, scope: !6203)
!6203 = distinct !DILexicalBlock(scope: !6058, file: !3, line: 802, column: 6)
!6204 = !DILocation(line: 802, column: 9, scope: !6203)
!6205 = !DILocation(line: 802, column: 6, scope: !6058)
!6206 = !DILocation(line: 803, column: 22, scope: !6203)
!6207 = !DILocation(line: 803, column: 25, scope: !6203)
!6208 = !DILocation(line: 803, column: 3, scope: !6203)
!6209 = !DILocation(line: 805, column: 29, scope: !6058)
!6210 = !DILocation(line: 805, column: 38, scope: !6058)
!6211 = !DILocation(line: 805, column: 44, scope: !6058)
!6212 = !DILocation(line: 805, column: 2, scope: !6058)
!6213 = !DILocation(line: 808, column: 6, scope: !6214)
!6214 = distinct !DILexicalBlock(scope: !6058, file: !3, line: 808, column: 6)
!6215 = !DILocation(line: 808, column: 14, scope: !6214)
!6216 = !DILocation(line: 808, column: 6, scope: !6058)
!6217 = !DILocation(line: 809, column: 7, scope: !6218)
!6218 = distinct !DILexicalBlock(scope: !6219, file: !3, line: 809, column: 7)
!6219 = distinct !DILexicalBlock(scope: !6214, file: !3, line: 808, column: 30)
!6220 = !DILocation(line: 809, column: 16, scope: !6218)
!6221 = !DILocation(line: 809, column: 7, scope: !6219)
!6222 = !DILocation(line: 809, column: 33, scope: !6218)
!6223 = !DILocation(line: 810, column: 8, scope: !6218)
!6224 = !DILocation(line: 811, column: 2, scope: !6219)
!6225 = !DILocation(line: 813, column: 14, scope: !6058)
!6226 = !DILocation(line: 813, column: 22, scope: !6058)
!6227 = !DILocation(line: 813, column: 31, scope: !6058)
!6228 = !DILocation(line: 813, column: 2, scope: !6058)
!6229 = !DILocation(line: 816, column: 17, scope: !6058)
!6230 = !DILocation(line: 816, column: 23, scope: !6058)
!6231 = !DILocation(line: 816, column: 2, scope: !6058)
!6232 = !DILocation(line: 818, column: 2, scope: !6058)
!6233 = !DILocation(line: 818, column: 12, scope: !6058)
!6234 = !DILocation(line: 820, column: 17, scope: !6058)
!6235 = !DILocation(line: 820, column: 23, scope: !6058)
!6236 = !DILocation(line: 820, column: 2, scope: !6058)
!6237 = !DILocation(line: 822, column: 27, scope: !6238)
!6238 = distinct !DILexicalBlock(scope: !6058, file: !3, line: 822, column: 6)
!6239 = !DILocation(line: 822, column: 14, scope: !6238)
!6240 = !DILocation(line: 822, column: 11, scope: !6238)
!6241 = !DILocation(line: 822, column: 6, scope: !6058)
!6242 = !DILocalVariable(name: "norvech", scope: !6243, file: !3, line: 823, type: !538)
!6243 = distinct !DILexicalBlock(scope: !6238, file: !3, line: 822, column: 36)
!6244 = !DILocation(line: 823, column: 9, scope: !6243)
!6245 = !DILocalVariable(name: "norvect", scope: !6243, file: !3, line: 823, type: !538)
!6246 = !DILocation(line: 823, column: 21, scope: !6243)
!6247 = !DILocalVariable(name: "vec", scope: !6243, file: !3, line: 823, type: !538)
!6248 = !DILocation(line: 823, column: 33, scope: !6243)
!6249 = !DILocation(line: 825, column: 14, scope: !6243)
!6250 = !DILocation(line: 825, column: 19, scope: !6243)
!6251 = !DILocation(line: 825, column: 3, scope: !6243)
!6252 = !DILocation(line: 827, column: 13, scope: !6243)
!6253 = !DILocation(line: 827, column: 21, scope: !6243)
!6254 = !DILocation(line: 827, column: 3, scope: !6243)
!6255 = !DILocation(line: 828, column: 17, scope: !6243)
!6256 = !DILocation(line: 828, column: 26, scope: !6243)
!6257 = !DILocation(line: 828, column: 34, scope: !6243)
!6258 = !DILocation(line: 828, column: 3, scope: !6243)
!6259 = !DILocation(line: 830, column: 13, scope: !6243)
!6260 = !DILocation(line: 830, column: 18, scope: !6243)
!6261 = !DILocation(line: 830, column: 3, scope: !6243)
!6262 = !DILocation(line: 831, column: 17, scope: !6243)
!6263 = !DILocation(line: 831, column: 26, scope: !6243)
!6264 = !DILocation(line: 831, column: 31, scope: !6243)
!6265 = !DILocation(line: 831, column: 3, scope: !6243)
!6266 = !DILocation(line: 833, column: 7, scope: !6267)
!6267 = distinct !DILexicalBlock(scope: !6243, file: !3, line: 833, column: 7)
!6268 = !DILocation(line: 833, column: 10, scope: !6267)
!6269 = !DILocation(line: 833, column: 7, scope: !6243)
!6270 = !DILocation(line: 834, column: 23, scope: !6267)
!6271 = !DILocation(line: 834, column: 26, scope: !6267)
!6272 = !DILocation(line: 834, column: 4, scope: !6267)
!6273 = !DILocation(line: 836, column: 3, scope: !6243)
!6274 = !DILocation(line: 838, column: 15, scope: !6243)
!6275 = !DILocation(line: 838, column: 20, scope: !6243)
!6276 = !DILocation(line: 838, column: 29, scope: !6243)
!6277 = !DILocation(line: 838, column: 3, scope: !6243)
!6278 = !DILocation(line: 839, column: 15, scope: !6243)
!6279 = !DILocation(line: 839, column: 3, scope: !6243)
!6280 = !DILocation(line: 841, column: 15, scope: !6243)
!6281 = !DILocation(line: 841, column: 20, scope: !6243)
!6282 = !DILocation(line: 841, column: 29, scope: !6243)
!6283 = !DILocation(line: 841, column: 3, scope: !6243)
!6284 = !DILocation(line: 842, column: 15, scope: !6243)
!6285 = !DILocation(line: 842, column: 3, scope: !6243)
!6286 = !DILocation(line: 844, column: 15, scope: !6243)
!6287 = !DILocation(line: 844, column: 20, scope: !6243)
!6288 = !DILocation(line: 844, column: 29, scope: !6243)
!6289 = !DILocation(line: 844, column: 3, scope: !6243)
!6290 = !DILocation(line: 845, column: 15, scope: !6243)
!6291 = !DILocation(line: 845, column: 3, scope: !6243)
!6292 = !DILocation(line: 847, column: 15, scope: !6243)
!6293 = !DILocation(line: 847, column: 20, scope: !6243)
!6294 = !DILocation(line: 847, column: 29, scope: !6243)
!6295 = !DILocation(line: 847, column: 3, scope: !6243)
!6296 = !DILocation(line: 848, column: 15, scope: !6243)
!6297 = !DILocation(line: 848, column: 3, scope: !6243)
!6298 = !DILocation(line: 850, column: 3, scope: !6243)
!6299 = !DILocation(line: 851, column: 2, scope: !6243)
!6300 = !DILocation(line: 852, column: 1, scope: !6058)
!6301 = distinct !DISubprogram(name: "draw_line_bone", scope: !3, file: !3, line: 986, type: !6302, scopeLine: 988, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1930)
!6302 = !DISubroutineType(types: !6303)
!6303 = !{null, !417, !417, !415, !7, !3717, !616}
!6304 = !DILocalVariable(name: "armflag", arg: 1, scope: !6301, file: !3, line: 986, type: !417)
!6305 = !DILocation(line: 986, column: 32, scope: !6301)
!6306 = !DILocalVariable(name: "boneflag", arg: 2, scope: !6301, file: !3, line: 986, type: !417)
!6307 = !DILocation(line: 986, column: 45, scope: !6301)
!6308 = !DILocalVariable(name: "constflag", arg: 3, scope: !6301, file: !3, line: 986, type: !415)
!6309 = !DILocation(line: 986, column: 61, scope: !6301)
!6310 = !DILocalVariable(name: "id", arg: 4, scope: !6301, file: !3, line: 986, type: !7)
!6311 = !DILocation(line: 986, column: 85, scope: !6301)
!6312 = !DILocalVariable(name: "pchan", arg: 5, scope: !6301, file: !3, line: 987, type: !3717)
!6313 = !DILocation(line: 987, column: 42, scope: !6301)
!6314 = !DILocalVariable(name: "ebone", arg: 6, scope: !6301, file: !3, line: 987, type: !616)
!6315 = !DILocation(line: 987, column: 59, scope: !6301)
!6316 = !DILocalVariable(name: "length", scope: !6301, file: !3, line: 989, type: !375)
!6317 = !DILocation(line: 989, column: 8, scope: !6301)
!6318 = !DILocation(line: 991, column: 2, scope: !6301)
!6319 = !DILocation(line: 993, column: 6, scope: !6320)
!6320 = distinct !DILexicalBlock(scope: !6301, file: !3, line: 993, column: 6)
!6321 = !DILocation(line: 993, column: 6, scope: !6301)
!6322 = !DILocation(line: 994, column: 12, scope: !6320)
!6323 = !DILocation(line: 994, column: 19, scope: !6320)
!6324 = !DILocation(line: 994, column: 25, scope: !6320)
!6325 = !DILocation(line: 994, column: 10, scope: !6320)
!6326 = !DILocation(line: 994, column: 3, scope: !6320)
!6327 = !DILocation(line: 996, column: 12, scope: !6320)
!6328 = !DILocation(line: 996, column: 19, scope: !6320)
!6329 = !DILocation(line: 996, column: 10, scope: !6320)
!6330 = !DILocation(line: 998, column: 2, scope: !6301)
!6331 = !DILocation(line: 999, column: 11, scope: !6301)
!6332 = !DILocation(line: 999, column: 19, scope: !6301)
!6333 = !DILocation(line: 999, column: 27, scope: !6301)
!6334 = !DILocation(line: 999, column: 2, scope: !6301)
!6335 = !DILocation(line: 1002, column: 6, scope: !6336)
!6336 = distinct !DILexicalBlock(scope: !6301, file: !3, line: 1002, column: 6)
!6337 = !DILocation(line: 1002, column: 14, scope: !6336)
!6338 = !DILocation(line: 1002, column: 6, scope: !6301)
!6339 = !DILocation(line: 1003, column: 3, scope: !6340)
!6340 = distinct !DILexicalBlock(scope: !6336, file: !3, line: 1002, column: 47)
!6341 = !DILocation(line: 1004, column: 7, scope: !6342)
!6342 = distinct !DILexicalBlock(scope: !6340, file: !3, line: 1004, column: 7)
!6343 = !DILocation(line: 1004, column: 15, scope: !6342)
!6344 = !DILocation(line: 1004, column: 7, scope: !6340)
!6345 = !DILocation(line: 1005, column: 42, scope: !6342)
!6346 = !DILocation(line: 1005, column: 52, scope: !6342)
!6347 = !DILocation(line: 1005, column: 4, scope: !6342)
!6348 = !DILocation(line: 1006, column: 12, scope: !6349)
!6349 = distinct !DILexicalBlock(scope: !6342, file: !3, line: 1006, column: 12)
!6350 = !DILocation(line: 1006, column: 20, scope: !6349)
!6351 = !DILocation(line: 1006, column: 12, scope: !6342)
!6352 = !DILocation(line: 1007, column: 4, scope: !6353)
!6353 = distinct !DILexicalBlock(scope: !6349, file: !3, line: 1006, column: 36)
!6354 = !DILocation(line: 1008, column: 3, scope: !6353)
!6355 = !DILocation(line: 1011, column: 8, scope: !6356)
!6356 = distinct !DILexicalBlock(scope: !6340, file: !3, line: 1011, column: 7)
!6357 = !DILocation(line: 1011, column: 17, scope: !6356)
!6358 = !DILocation(line: 1011, column: 35, scope: !6356)
!6359 = !DILocation(line: 1011, column: 7, scope: !6340)
!6360 = !DILocation(line: 1012, column: 10, scope: !6361)
!6361 = distinct !DILexicalBlock(scope: !6362, file: !3, line: 1012, column: 8)
!6362 = distinct !DILexicalBlock(scope: !6356, file: !3, line: 1011, column: 41)
!6363 = !DILocation(line: 1012, column: 12, scope: !6361)
!6364 = !DILocation(line: 1012, column: 8, scope: !6362)
!6365 = !DILocation(line: 1013, column: 24, scope: !6366)
!6366 = distinct !DILexicalBlock(scope: !6361, file: !3, line: 1012, column: 25)
!6367 = !DILocation(line: 1013, column: 27, scope: !6366)
!6368 = !DILocation(line: 1013, column: 5, scope: !6366)
!6369 = !DILocation(line: 1014, column: 5, scope: !6366)
!6370 = !DILocation(line: 1015, column: 5, scope: !6366)
!6371 = !DILocation(line: 1016, column: 5, scope: !6366)
!6372 = !DILocation(line: 1017, column: 4, scope: !6366)
!6373 = !DILocation(line: 1019, column: 5, scope: !6374)
!6374 = distinct !DILexicalBlock(scope: !6361, file: !3, line: 1018, column: 9)
!6375 = !DILocation(line: 1020, column: 5, scope: !6374)
!6376 = !DILocation(line: 1022, column: 3, scope: !6362)
!6377 = !DILocation(line: 1024, column: 7, scope: !6378)
!6378 = distinct !DILexicalBlock(scope: !6340, file: !3, line: 1024, column: 7)
!6379 = !DILocation(line: 1024, column: 10, scope: !6378)
!6380 = !DILocation(line: 1024, column: 7, scope: !6340)
!6381 = !DILocation(line: 1025, column: 32, scope: !6378)
!6382 = !DILocation(line: 1025, column: 35, scope: !6378)
!6383 = !DILocation(line: 1025, column: 4, scope: !6378)
!6384 = !DILocation(line: 1027, column: 3, scope: !6340)
!6385 = !DILocation(line: 1028, column: 3, scope: !6340)
!6386 = !DILocation(line: 1029, column: 3, scope: !6340)
!6387 = !DILocation(line: 1030, column: 3, scope: !6340)
!6388 = !DILocation(line: 1033, column: 9, scope: !6389)
!6389 = distinct !DILexicalBlock(scope: !6340, file: !3, line: 1033, column: 7)
!6390 = !DILocation(line: 1033, column: 11, scope: !6389)
!6391 = !DILocation(line: 1033, column: 7, scope: !6340)
!6392 = !DILocation(line: 1035, column: 23, scope: !6393)
!6393 = distinct !DILexicalBlock(scope: !6389, file: !3, line: 1033, column: 24)
!6394 = !DILocation(line: 1035, column: 26, scope: !6393)
!6395 = !DILocation(line: 1035, column: 4, scope: !6393)
!6396 = !DILocation(line: 1036, column: 4, scope: !6393)
!6397 = !DILocation(line: 1037, column: 4, scope: !6393)
!6398 = !DILocation(line: 1038, column: 4, scope: !6393)
!6399 = !DILocation(line: 1039, column: 3, scope: !6393)
!6400 = !DILocation(line: 1041, column: 4, scope: !6401)
!6401 = distinct !DILexicalBlock(scope: !6389, file: !3, line: 1040, column: 8)
!6402 = !DILocation(line: 1042, column: 4, scope: !6401)
!6403 = !DILocation(line: 1046, column: 7, scope: !6404)
!6404 = distinct !DILexicalBlock(scope: !6340, file: !3, line: 1046, column: 7)
!6405 = !DILocation(line: 1046, column: 10, scope: !6404)
!6406 = !DILocation(line: 1046, column: 7, scope: !6340)
!6407 = !DILocation(line: 1047, column: 23, scope: !6404)
!6408 = !DILocation(line: 1047, column: 26, scope: !6404)
!6409 = !DILocation(line: 1047, column: 4, scope: !6404)
!6410 = !DILocation(line: 1049, column: 7, scope: !6411)
!6411 = distinct !DILexicalBlock(scope: !6340, file: !3, line: 1049, column: 7)
!6412 = !DILocation(line: 1049, column: 15, scope: !6411)
!6413 = !DILocation(line: 1049, column: 7, scope: !6340)
!6414 = !DILocation(line: 1050, column: 44, scope: !6411)
!6415 = !DILocation(line: 1050, column: 54, scope: !6411)
!6416 = !DILocation(line: 1050, column: 4, scope: !6411)
!6417 = !DILocation(line: 1051, column: 2, scope: !6340)
!6418 = !DILocation(line: 1053, column: 2, scope: !6301)
!6419 = !DILocation(line: 1056, column: 7, scope: !6420)
!6420 = distinct !DILexicalBlock(scope: !6301, file: !3, line: 1056, column: 6)
!6421 = !DILocation(line: 1056, column: 16, scope: !6420)
!6422 = !DILocation(line: 1056, column: 34, scope: !6420)
!6423 = !DILocation(line: 1056, column: 6, scope: !6301)
!6424 = !DILocation(line: 1057, column: 10, scope: !6425)
!6425 = distinct !DILexicalBlock(scope: !6426, file: !3, line: 1057, column: 7)
!6426 = distinct !DILexicalBlock(scope: !6420, file: !3, line: 1056, column: 40)
!6427 = !DILocation(line: 1057, column: 12, scope: !6425)
!6428 = !DILocation(line: 1057, column: 25, scope: !6425)
!6429 = !DILocation(line: 1057, column: 7, scope: !6426)
!6430 = !DILocation(line: 1059, column: 8, scope: !6431)
!6431 = distinct !DILexicalBlock(scope: !6432, file: !3, line: 1059, column: 8)
!6432 = distinct !DILexicalBlock(scope: !6425, file: !3, line: 1057, column: 31)
!6433 = !DILocation(line: 1059, column: 16, scope: !6431)
!6434 = !DILocation(line: 1059, column: 8, scope: !6432)
!6435 = !DILocation(line: 1060, column: 9, scope: !6436)
!6436 = distinct !DILexicalBlock(scope: !6437, file: !3, line: 1060, column: 9)
!6437 = distinct !DILexicalBlock(scope: !6431, file: !3, line: 1059, column: 32)
!6438 = !DILocation(line: 1060, column: 18, scope: !6436)
!6439 = !DILocation(line: 1060, column: 9, scope: !6437)
!6440 = !DILocation(line: 1060, column: 34, scope: !6436)
!6441 = !DILocation(line: 1061, column: 10, scope: !6436)
!6442 = !DILocation(line: 1062, column: 4, scope: !6437)
!6443 = !DILocation(line: 1063, column: 4, scope: !6432)
!6444 = !DILocation(line: 1064, column: 4, scope: !6432)
!6445 = !DILocation(line: 1065, column: 3, scope: !6432)
!6446 = !DILocation(line: 1066, column: 2, scope: !6426)
!6447 = !DILocation(line: 1068, column: 6, scope: !6448)
!6448 = distinct !DILexicalBlock(scope: !6301, file: !3, line: 1068, column: 6)
!6449 = !DILocation(line: 1068, column: 14, scope: !6448)
!6450 = !DILocation(line: 1068, column: 6, scope: !6301)
!6451 = !DILocation(line: 1069, column: 7, scope: !6452)
!6452 = distinct !DILexicalBlock(scope: !6453, file: !3, line: 1069, column: 7)
!6453 = distinct !DILexicalBlock(scope: !6448, file: !3, line: 1068, column: 30)
!6454 = !DILocation(line: 1069, column: 16, scope: !6452)
!6455 = !DILocation(line: 1069, column: 7, scope: !6453)
!6456 = !DILocation(line: 1069, column: 33, scope: !6452)
!6457 = !DILocation(line: 1070, column: 8, scope: !6452)
!6458 = !DILocation(line: 1071, column: 2, scope: !6453)
!6459 = !DILocation(line: 1072, column: 2, scope: !6301)
!6460 = !DILocation(line: 1073, column: 2, scope: !6301)
!6461 = !DILocation(line: 1074, column: 2, scope: !6301)
!6462 = !DILocation(line: 1075, column: 2, scope: !6301)
!6463 = !DILocation(line: 1078, column: 9, scope: !6464)
!6464 = distinct !DILexicalBlock(scope: !6301, file: !3, line: 1078, column: 6)
!6465 = !DILocation(line: 1078, column: 11, scope: !6464)
!6466 = !DILocation(line: 1078, column: 24, scope: !6464)
!6467 = !DILocation(line: 1078, column: 6, scope: !6301)
!6468 = !DILocation(line: 1080, column: 7, scope: !6469)
!6469 = distinct !DILexicalBlock(scope: !6470, file: !3, line: 1080, column: 7)
!6470 = distinct !DILexicalBlock(scope: !6464, file: !3, line: 1078, column: 30)
!6471 = !DILocation(line: 1080, column: 15, scope: !6469)
!6472 = !DILocation(line: 1080, column: 7, scope: !6470)
!6473 = !DILocation(line: 1081, column: 8, scope: !6474)
!6474 = distinct !DILexicalBlock(scope: !6475, file: !3, line: 1081, column: 8)
!6475 = distinct !DILexicalBlock(scope: !6469, file: !3, line: 1080, column: 31)
!6476 = !DILocation(line: 1081, column: 17, scope: !6474)
!6477 = !DILocation(line: 1081, column: 8, scope: !6475)
!6478 = !DILocation(line: 1081, column: 32, scope: !6474)
!6479 = !DILocation(line: 1082, column: 9, scope: !6474)
!6480 = !DILocation(line: 1083, column: 3, scope: !6475)
!6481 = !DILocation(line: 1084, column: 3, scope: !6470)
!6482 = !DILocation(line: 1085, column: 3, scope: !6470)
!6483 = !DILocation(line: 1086, column: 2, scope: !6470)
!6484 = !DILocation(line: 1088, column: 2, scope: !6301)
!6485 = !DILocation(line: 1090, column: 2, scope: !6301)
!6486 = !DILocation(line: 1091, column: 1, scope: !6301)
!6487 = distinct !DISubprogram(name: "bone_matrix_translate_y", scope: !3, file: !3, line: 1646, type: !6488, scopeLine: 1647, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1930)
!6488 = !DISubroutineType(types: !6489)
!6489 = !{null, !4968, !375}
!6490 = !DILocalVariable(name: "mat", arg: 1, scope: !6487, file: !3, line: 1646, type: !4968)
!6491 = !DILocation(line: 1646, column: 43, scope: !6487)
!6492 = !DILocalVariable(name: "y", arg: 2, scope: !6487, file: !3, line: 1646, type: !375)
!6493 = !DILocation(line: 1646, column: 60, scope: !6487)
!6494 = !DILocalVariable(name: "trans", scope: !6487, file: !3, line: 1648, type: !538)
!6495 = !DILocation(line: 1648, column: 8, scope: !6487)
!6496 = !DILocation(line: 1650, column: 13, scope: !6487)
!6497 = !DILocation(line: 1650, column: 20, scope: !6487)
!6498 = !DILocation(line: 1650, column: 2, scope: !6487)
!6499 = !DILocation(line: 1651, column: 12, scope: !6487)
!6500 = !DILocation(line: 1651, column: 19, scope: !6487)
!6501 = !DILocation(line: 1651, column: 2, scope: !6487)
!6502 = !DILocation(line: 1652, column: 12, scope: !6487)
!6503 = !DILocation(line: 1652, column: 20, scope: !6487)
!6504 = !DILocation(line: 1652, column: 2, scope: !6487)
!6505 = !DILocation(line: 1653, column: 1, scope: !6487)
!6506 = distinct !DISubprogram(name: "dot_v3v3", scope: !4954, file: !4954, line: 619, type: !6507, scopeLine: 620, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1930)
!6507 = !DISubroutineType(types: !6508)
!6508 = !{!375, !4957, !4957}
!6509 = !DILocalVariable(name: "a", arg: 1, scope: !6506, file: !4954, line: 619, type: !4957)
!6510 = !DILocation(line: 619, column: 36, scope: !6506)
!6511 = !DILocalVariable(name: "b", arg: 2, scope: !6506, file: !4954, line: 619, type: !4957)
!6512 = !DILocation(line: 619, column: 54, scope: !6506)
!6513 = !DILocation(line: 621, column: 9, scope: !6506)
!6514 = !DILocation(line: 621, column: 16, scope: !6506)
!6515 = !DILocation(line: 621, column: 14, scope: !6506)
!6516 = !DILocation(line: 621, column: 23, scope: !6506)
!6517 = !DILocation(line: 621, column: 30, scope: !6506)
!6518 = !DILocation(line: 621, column: 28, scope: !6506)
!6519 = !DILocation(line: 621, column: 21, scope: !6506)
!6520 = !DILocation(line: 621, column: 37, scope: !6506)
!6521 = !DILocation(line: 621, column: 44, scope: !6506)
!6522 = !DILocation(line: 621, column: 42, scope: !6506)
!6523 = !DILocation(line: 621, column: 35, scope: !6506)
!6524 = !DILocation(line: 621, column: 2, scope: !6506)
!6525 = distinct !DISubprogram(name: "len_v3v3", scope: !4954, file: !4954, line: 759, type: !6507, scopeLine: 760, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1930)
!6526 = !DILocalVariable(name: "a", arg: 1, scope: !6525, file: !4954, line: 759, type: !4957)
!6527 = !DILocation(line: 759, column: 36, scope: !6525)
!6528 = !DILocalVariable(name: "b", arg: 2, scope: !6525, file: !4954, line: 759, type: !4957)
!6529 = !DILocation(line: 759, column: 54, scope: !6525)
!6530 = !DILocalVariable(name: "d", scope: !6525, file: !4954, line: 761, type: !538)
!6531 = !DILocation(line: 761, column: 8, scope: !6525)
!6532 = !DILocation(line: 763, column: 14, scope: !6525)
!6533 = !DILocation(line: 763, column: 17, scope: !6525)
!6534 = !DILocation(line: 763, column: 20, scope: !6525)
!6535 = !DILocation(line: 763, column: 2, scope: !6525)
!6536 = !DILocation(line: 764, column: 16, scope: !6525)
!6537 = !DILocation(line: 764, column: 9, scope: !6525)
!6538 = !DILocation(line: 764, column: 2, scope: !6525)
!6539 = distinct !DISubprogram(name: "sub_v3_v3v3", scope: !4954, file: !4954, line: 357, type: !6540, scopeLine: 358, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1930)
!6540 = !DISubroutineType(types: !6541)
!6541 = !{null, !374, !4957, !4957}
!6542 = !DILocalVariable(name: "r", arg: 1, scope: !6539, file: !4954, line: 357, type: !374)
!6543 = !DILocation(line: 357, column: 32, scope: !6539)
!6544 = !DILocalVariable(name: "a", arg: 2, scope: !6539, file: !4954, line: 357, type: !4957)
!6545 = !DILocation(line: 357, column: 50, scope: !6539)
!6546 = !DILocalVariable(name: "b", arg: 3, scope: !6539, file: !4954, line: 357, type: !4957)
!6547 = !DILocation(line: 357, column: 68, scope: !6539)
!6548 = !DILocation(line: 359, column: 9, scope: !6539)
!6549 = !DILocation(line: 359, column: 16, scope: !6539)
!6550 = !DILocation(line: 359, column: 14, scope: !6539)
!6551 = !DILocation(line: 359, column: 2, scope: !6539)
!6552 = !DILocation(line: 359, column: 7, scope: !6539)
!6553 = !DILocation(line: 360, column: 9, scope: !6539)
!6554 = !DILocation(line: 360, column: 16, scope: !6539)
!6555 = !DILocation(line: 360, column: 14, scope: !6539)
!6556 = !DILocation(line: 360, column: 2, scope: !6539)
!6557 = !DILocation(line: 360, column: 7, scope: !6539)
!6558 = !DILocation(line: 361, column: 9, scope: !6539)
!6559 = !DILocation(line: 361, column: 16, scope: !6539)
!6560 = !DILocation(line: 361, column: 14, scope: !6539)
!6561 = !DILocation(line: 361, column: 2, scope: !6539)
!6562 = !DILocation(line: 361, column: 7, scope: !6539)
!6563 = !DILocation(line: 362, column: 1, scope: !6539)
!6564 = distinct !DISubprogram(name: "len_v2", scope: !4954, file: !4954, line: 691, type: !4955, scopeLine: 692, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1930)
!6565 = !DILocalVariable(name: "v", arg: 1, scope: !6564, file: !4954, line: 691, type: !4957)
!6566 = !DILocation(line: 691, column: 34, scope: !6564)
!6567 = !DILocation(line: 693, column: 15, scope: !6564)
!6568 = !DILocation(line: 693, column: 22, scope: !6564)
!6569 = !DILocation(line: 693, column: 20, scope: !6564)
!6570 = !DILocation(line: 693, column: 29, scope: !6564)
!6571 = !DILocation(line: 693, column: 36, scope: !6564)
!6572 = !DILocation(line: 693, column: 34, scope: !6564)
!6573 = !DILocation(line: 693, column: 27, scope: !6564)
!6574 = !DILocation(line: 693, column: 9, scope: !6564)
!6575 = !DILocation(line: 693, column: 2, scope: !6564)
!6576 = distinct !DISubprogram(name: "zero_v3", scope: !4954, file: !4954, line: 43, type: !6577, scopeLine: 44, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1930)
!6577 = !DISubroutineType(types: !6578)
!6578 = !{null, !374}
!6579 = !DILocalVariable(name: "r", arg: 1, scope: !6576, file: !4954, line: 43, type: !374)
!6580 = !DILocation(line: 43, column: 28, scope: !6576)
!6581 = !DILocation(line: 45, column: 2, scope: !6576)
!6582 = !DILocation(line: 45, column: 7, scope: !6576)
!6583 = !DILocation(line: 46, column: 2, scope: !6576)
!6584 = !DILocation(line: 46, column: 7, scope: !6576)
!6585 = !DILocation(line: 47, column: 2, scope: !6576)
!6586 = !DILocation(line: 47, column: 7, scope: !6576)
!6587 = !DILocation(line: 48, column: 1, scope: !6576)
!6588 = distinct !DISubprogram(name: "normalize_v3", scope: !4954, file: !4954, line: 830, type: !6589, scopeLine: 831, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1930)
!6589 = !DISubroutineType(types: !6590)
!6590 = !{!375, !374}
!6591 = !DILocalVariable(name: "n", arg: 1, scope: !6588, file: !4954, line: 830, type: !374)
!6592 = !DILocation(line: 830, column: 34, scope: !6588)
!6593 = !DILocation(line: 832, column: 25, scope: !6588)
!6594 = !DILocation(line: 832, column: 28, scope: !6588)
!6595 = !DILocation(line: 832, column: 9, scope: !6588)
!6596 = !DILocation(line: 832, column: 2, scope: !6588)
!6597 = distinct !DISubprogram(name: "cross_v3_v3v3", scope: !4954, file: !4954, line: 634, type: !6540, scopeLine: 635, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1930)
!6598 = !DILocalVariable(name: "r", arg: 1, scope: !6597, file: !4954, line: 634, type: !374)
!6599 = !DILocation(line: 634, column: 34, scope: !6597)
!6600 = !DILocalVariable(name: "a", arg: 2, scope: !6597, file: !4954, line: 634, type: !4957)
!6601 = !DILocation(line: 634, column: 52, scope: !6597)
!6602 = !DILocalVariable(name: "b", arg: 3, scope: !6597, file: !4954, line: 634, type: !4957)
!6603 = !DILocation(line: 634, column: 70, scope: !6597)
!6604 = !DILocation(line: 637, column: 9, scope: !6597)
!6605 = !DILocation(line: 637, column: 16, scope: !6597)
!6606 = !DILocation(line: 637, column: 14, scope: !6597)
!6607 = !DILocation(line: 637, column: 23, scope: !6597)
!6608 = !DILocation(line: 637, column: 30, scope: !6597)
!6609 = !DILocation(line: 637, column: 28, scope: !6597)
!6610 = !DILocation(line: 637, column: 21, scope: !6597)
!6611 = !DILocation(line: 637, column: 2, scope: !6597)
!6612 = !DILocation(line: 637, column: 7, scope: !6597)
!6613 = !DILocation(line: 638, column: 9, scope: !6597)
!6614 = !DILocation(line: 638, column: 16, scope: !6597)
!6615 = !DILocation(line: 638, column: 14, scope: !6597)
!6616 = !DILocation(line: 638, column: 23, scope: !6597)
!6617 = !DILocation(line: 638, column: 30, scope: !6597)
!6618 = !DILocation(line: 638, column: 28, scope: !6597)
!6619 = !DILocation(line: 638, column: 21, scope: !6597)
!6620 = !DILocation(line: 638, column: 2, scope: !6597)
!6621 = !DILocation(line: 638, column: 7, scope: !6597)
!6622 = !DILocation(line: 639, column: 9, scope: !6597)
!6623 = !DILocation(line: 639, column: 16, scope: !6597)
!6624 = !DILocation(line: 639, column: 14, scope: !6597)
!6625 = !DILocation(line: 639, column: 23, scope: !6597)
!6626 = !DILocation(line: 639, column: 30, scope: !6597)
!6627 = !DILocation(line: 639, column: 28, scope: !6597)
!6628 = !DILocation(line: 639, column: 21, scope: !6597)
!6629 = !DILocation(line: 639, column: 2, scope: !6597)
!6630 = !DILocation(line: 639, column: 7, scope: !6597)
!6631 = !DILocation(line: 640, column: 1, scope: !6597)
!6632 = distinct !DISubprogram(name: "madd_v3_v3v3fl", scope: !4954, file: !4954, line: 527, type: !6633, scopeLine: 528, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1930)
!6633 = !DISubroutineType(types: !6634)
!6634 = !{null, !374, !4957, !4957, !375}
!6635 = !DILocalVariable(name: "r", arg: 1, scope: !6632, file: !4954, line: 527, type: !374)
!6636 = !DILocation(line: 527, column: 35, scope: !6632)
!6637 = !DILocalVariable(name: "a", arg: 2, scope: !6632, file: !4954, line: 527, type: !4957)
!6638 = !DILocation(line: 527, column: 53, scope: !6632)
!6639 = !DILocalVariable(name: "b", arg: 3, scope: !6632, file: !4954, line: 527, type: !4957)
!6640 = !DILocation(line: 527, column: 71, scope: !6632)
!6641 = !DILocalVariable(name: "f", arg: 4, scope: !6632, file: !4954, line: 527, type: !375)
!6642 = !DILocation(line: 527, column: 83, scope: !6632)
!6643 = !DILocation(line: 529, column: 9, scope: !6632)
!6644 = !DILocation(line: 529, column: 16, scope: !6632)
!6645 = !DILocation(line: 529, column: 23, scope: !6632)
!6646 = !DILocation(line: 529, column: 21, scope: !6632)
!6647 = !DILocation(line: 529, column: 14, scope: !6632)
!6648 = !DILocation(line: 529, column: 2, scope: !6632)
!6649 = !DILocation(line: 529, column: 7, scope: !6632)
!6650 = !DILocation(line: 530, column: 9, scope: !6632)
!6651 = !DILocation(line: 530, column: 16, scope: !6632)
!6652 = !DILocation(line: 530, column: 23, scope: !6632)
!6653 = !DILocation(line: 530, column: 21, scope: !6632)
!6654 = !DILocation(line: 530, column: 14, scope: !6632)
!6655 = !DILocation(line: 530, column: 2, scope: !6632)
!6656 = !DILocation(line: 530, column: 7, scope: !6632)
!6657 = !DILocation(line: 531, column: 9, scope: !6632)
!6658 = !DILocation(line: 531, column: 16, scope: !6632)
!6659 = !DILocation(line: 531, column: 23, scope: !6632)
!6660 = !DILocation(line: 531, column: 21, scope: !6632)
!6661 = !DILocation(line: 531, column: 14, scope: !6632)
!6662 = !DILocation(line: 531, column: 2, scope: !6632)
!6663 = !DILocation(line: 531, column: 7, scope: !6632)
!6664 = !DILocation(line: 532, column: 1, scope: !6632)
!6665 = distinct !DISubprogram(name: "normalize_v3_v3", scope: !4954, file: !4954, line: 788, type: !6666, scopeLine: 789, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1930)
!6666 = !DISubroutineType(types: !6667)
!6667 = !{!375, !374, !4957}
!6668 = !DILocalVariable(name: "r", arg: 1, scope: !6665, file: !4954, line: 788, type: !374)
!6669 = !DILocation(line: 788, column: 37, scope: !6665)
!6670 = !DILocalVariable(name: "a", arg: 2, scope: !6665, file: !4954, line: 788, type: !4957)
!6671 = !DILocation(line: 788, column: 55, scope: !6665)
!6672 = !DILocalVariable(name: "d", scope: !6665, file: !4954, line: 790, type: !375)
!6673 = !DILocation(line: 790, column: 8, scope: !6665)
!6674 = !DILocation(line: 790, column: 21, scope: !6665)
!6675 = !DILocation(line: 790, column: 24, scope: !6665)
!6676 = !DILocation(line: 790, column: 12, scope: !6665)
!6677 = !DILocation(line: 794, column: 6, scope: !6678)
!6678 = distinct !DILexicalBlock(scope: !6665, file: !4954, line: 794, column: 6)
!6679 = !DILocation(line: 794, column: 8, scope: !6678)
!6680 = !DILocation(line: 794, column: 6, scope: !6665)
!6681 = !DILocation(line: 795, column: 13, scope: !6682)
!6682 = distinct !DILexicalBlock(scope: !6678, file: !4954, line: 794, column: 20)
!6683 = !DILocation(line: 795, column: 7, scope: !6682)
!6684 = !DILocation(line: 795, column: 5, scope: !6682)
!6685 = !DILocation(line: 796, column: 15, scope: !6682)
!6686 = !DILocation(line: 796, column: 18, scope: !6682)
!6687 = !DILocation(line: 796, column: 28, scope: !6682)
!6688 = !DILocation(line: 796, column: 26, scope: !6682)
!6689 = !DILocation(line: 796, column: 3, scope: !6682)
!6690 = !DILocation(line: 797, column: 2, scope: !6682)
!6691 = !DILocation(line: 799, column: 11, scope: !6692)
!6692 = distinct !DILexicalBlock(scope: !6678, file: !4954, line: 798, column: 7)
!6693 = !DILocation(line: 799, column: 3, scope: !6692)
!6694 = !DILocation(line: 800, column: 5, scope: !6692)
!6695 = !DILocation(line: 803, column: 9, scope: !6665)
!6696 = !DILocation(line: 803, column: 2, scope: !6665)
!6697 = distinct !DISubprogram(name: "mul_v3_v3fl", scope: !4954, file: !4954, line: 399, type: !6698, scopeLine: 400, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1930)
!6698 = !DISubroutineType(types: !6699)
!6699 = !{null, !374, !4957, !375}
!6700 = !DILocalVariable(name: "r", arg: 1, scope: !6697, file: !4954, line: 399, type: !374)
!6701 = !DILocation(line: 399, column: 32, scope: !6697)
!6702 = !DILocalVariable(name: "a", arg: 2, scope: !6697, file: !4954, line: 399, type: !4957)
!6703 = !DILocation(line: 399, column: 50, scope: !6697)
!6704 = !DILocalVariable(name: "f", arg: 3, scope: !6697, file: !4954, line: 399, type: !375)
!6705 = !DILocation(line: 399, column: 62, scope: !6697)
!6706 = !DILocation(line: 401, column: 9, scope: !6697)
!6707 = !DILocation(line: 401, column: 16, scope: !6697)
!6708 = !DILocation(line: 401, column: 14, scope: !6697)
!6709 = !DILocation(line: 401, column: 2, scope: !6697)
!6710 = !DILocation(line: 401, column: 7, scope: !6697)
!6711 = !DILocation(line: 402, column: 9, scope: !6697)
!6712 = !DILocation(line: 402, column: 16, scope: !6697)
!6713 = !DILocation(line: 402, column: 14, scope: !6697)
!6714 = !DILocation(line: 402, column: 2, scope: !6697)
!6715 = !DILocation(line: 402, column: 7, scope: !6697)
!6716 = !DILocation(line: 403, column: 9, scope: !6697)
!6717 = !DILocation(line: 403, column: 16, scope: !6697)
!6718 = !DILocation(line: 403, column: 14, scope: !6697)
!6719 = !DILocation(line: 403, column: 2, scope: !6697)
!6720 = !DILocation(line: 403, column: 7, scope: !6697)
!6721 = !DILocation(line: 404, column: 1, scope: !6697)
!6722 = distinct !DISubprogram(name: "set_pchan_glColor", scope: !3, file: !3, line: 147, type: !6723, scopeLine: 148, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1930)
!6723 = !DISubroutineType(types: !6724)
!6724 = !{!620, !415, !417, !415}
!6725 = !DILocalVariable(name: "colCode", arg: 1, scope: !6722, file: !3, line: 147, type: !415)
!6726 = !DILocation(line: 147, column: 37, scope: !6722)
!6727 = !DILocalVariable(name: "boneflag", arg: 2, scope: !6722, file: !3, line: 147, type: !417)
!6728 = !DILocation(line: 147, column: 50, scope: !6722)
!6729 = !DILocalVariable(name: "constflag", arg: 3, scope: !6722, file: !3, line: 147, type: !415)
!6730 = !DILocation(line: 147, column: 66, scope: !6722)
!6731 = !DILocation(line: 149, column: 10, scope: !6722)
!6732 = !DILocation(line: 149, column: 2, scope: !6722)
!6733 = !DILocation(line: 152, column: 8, scope: !6734)
!6734 = distinct !DILexicalBlock(scope: !6735, file: !3, line: 152, column: 8)
!6735 = distinct !DILexicalBlock(scope: !6736, file: !3, line: 151, column: 3)
!6736 = distinct !DILexicalBlock(scope: !6722, file: !3, line: 149, column: 19)
!6737 = !DILocation(line: 152, column: 8, scope: !6735)
!6738 = !DILocalVariable(name: "cp", scope: !6739, file: !3, line: 153, type: !6740)
!6739 = distinct !DILexicalBlock(scope: !6734, file: !3, line: 152, column: 16)
!6740 = !DICompositeType(tag: DW_TAG_array_type, baseType: !620, size: 24, elements: !539)
!6741 = !DILocation(line: 153, column: 19, scope: !6739)
!6742 = !DILocation(line: 155, column: 9, scope: !6743)
!6743 = distinct !DILexicalBlock(scope: !6739, file: !3, line: 155, column: 9)
!6744 = !DILocation(line: 155, column: 18, scope: !6743)
!6745 = !DILocation(line: 155, column: 9, scope: !6739)
!6746 = !DILocation(line: 156, column: 30, scope: !6747)
!6747 = distinct !DILexicalBlock(scope: !6743, file: !3, line: 155, column: 38)
!6748 = !DILocation(line: 156, column: 34, scope: !6747)
!6749 = !DILocation(line: 156, column: 42, scope: !6747)
!6750 = !DILocation(line: 156, column: 6, scope: !6747)
!6751 = !DILocation(line: 157, column: 12, scope: !6752)
!6752 = distinct !DILexicalBlock(scope: !6747, file: !3, line: 157, column: 10)
!6753 = !DILocation(line: 157, column: 21, scope: !6752)
!6754 = !DILocation(line: 157, column: 10, scope: !6747)
!6755 = !DILocation(line: 158, column: 25, scope: !6756)
!6756 = distinct !DILexicalBlock(scope: !6752, file: !3, line: 157, column: 39)
!6757 = !DILocation(line: 158, column: 7, scope: !6756)
!6758 = !DILocation(line: 159, column: 6, scope: !6756)
!6759 = !DILocation(line: 160, column: 5, scope: !6747)
!6760 = !DILocation(line: 161, column: 14, scope: !6761)
!6761 = distinct !DILexicalBlock(scope: !6743, file: !3, line: 161, column: 14)
!6762 = !DILocation(line: 161, column: 23, scope: !6761)
!6763 = !DILocation(line: 161, column: 14, scope: !6743)
!6764 = !DILocation(line: 162, column: 30, scope: !6765)
!6765 = distinct !DILexicalBlock(scope: !6761, file: !3, line: 161, column: 40)
!6766 = !DILocation(line: 162, column: 34, scope: !6765)
!6767 = !DILocation(line: 162, column: 42, scope: !6765)
!6768 = !DILocation(line: 162, column: 6, scope: !6765)
!6769 = !DILocation(line: 163, column: 5, scope: !6765)
!6770 = !DILocation(line: 166, column: 30, scope: !6771)
!6771 = distinct !DILexicalBlock(scope: !6761, file: !3, line: 164, column: 10)
!6772 = !DILocation(line: 166, column: 34, scope: !6771)
!6773 = !DILocation(line: 166, column: 42, scope: !6771)
!6774 = !DILocation(line: 166, column: 6, scope: !6771)
!6775 = !DILocation(line: 167, column: 24, scope: !6771)
!6776 = !DILocation(line: 167, column: 6, scope: !6771)
!6777 = !DILocation(line: 170, column: 17, scope: !6739)
!6778 = !DILocation(line: 170, column: 5, scope: !6739)
!6779 = !DILocation(line: 171, column: 4, scope: !6739)
!6780 = !DILocation(line: 173, column: 10, scope: !6781)
!6781 = distinct !DILexicalBlock(scope: !6782, file: !3, line: 173, column: 9)
!6782 = distinct !DILexicalBlock(scope: !6734, file: !3, line: 172, column: 9)
!6783 = !DILocation(line: 173, column: 19, scope: !6781)
!6784 = !DILocation(line: 173, column: 39, scope: !6781)
!6785 = !DILocation(line: 173, column: 43, scope: !6781)
!6786 = !DILocation(line: 173, column: 52, scope: !6781)
!6787 = !DILocation(line: 173, column: 9, scope: !6782)
!6788 = !DILocation(line: 174, column: 6, scope: !6789)
!6789 = distinct !DILexicalBlock(scope: !6781, file: !3, line: 173, column: 70)
!6790 = !DILocation(line: 175, column: 5, scope: !6789)
!6791 = !DILocation(line: 176, column: 14, scope: !6792)
!6792 = distinct !DILexicalBlock(scope: !6781, file: !3, line: 176, column: 14)
!6793 = !DILocation(line: 176, column: 23, scope: !6792)
!6794 = !DILocation(line: 176, column: 14, scope: !6781)
!6795 = !DILocation(line: 177, column: 6, scope: !6796)
!6796 = distinct !DILexicalBlock(scope: !6792, file: !3, line: 176, column: 43)
!6797 = !DILocation(line: 178, column: 5, scope: !6796)
!6798 = !DILocation(line: 179, column: 14, scope: !6799)
!6799 = distinct !DILexicalBlock(scope: !6792, file: !3, line: 179, column: 14)
!6800 = !DILocation(line: 179, column: 23, scope: !6799)
!6801 = !DILocation(line: 179, column: 14, scope: !6792)
!6802 = !DILocation(line: 180, column: 6, scope: !6803)
!6803 = distinct !DILexicalBlock(scope: !6799, file: !3, line: 179, column: 40)
!6804 = !DILocation(line: 181, column: 5, scope: !6803)
!6805 = !DILocation(line: 183, column: 6, scope: !6806)
!6806 = distinct !DILexicalBlock(scope: !6799, file: !3, line: 182, column: 10)
!6807 = !DILocation(line: 187, column: 4, scope: !6735)
!6808 = !DILocation(line: 191, column: 8, scope: !6809)
!6809 = distinct !DILexicalBlock(scope: !6810, file: !3, line: 191, column: 8)
!6810 = distinct !DILexicalBlock(scope: !6736, file: !3, line: 190, column: 3)
!6811 = !DILocation(line: 191, column: 8, scope: !6810)
!6812 = !DILocation(line: 192, column: 34, scope: !6813)
!6813 = distinct !DILexicalBlock(scope: !6809, file: !3, line: 191, column: 16)
!6814 = !DILocation(line: 192, column: 42, scope: !6813)
!6815 = !DILocation(line: 192, column: 5, scope: !6813)
!6816 = !DILocation(line: 193, column: 4, scope: !6813)
!6817 = !DILocation(line: 195, column: 5, scope: !6809)
!6818 = !DILocation(line: 197, column: 4, scope: !6810)
!6819 = !DILocation(line: 201, column: 9, scope: !6820)
!6820 = distinct !DILexicalBlock(scope: !6821, file: !3, line: 201, column: 8)
!6821 = distinct !DILexicalBlock(scope: !6736, file: !3, line: 200, column: 3)
!6822 = !DILocation(line: 201, column: 16, scope: !6820)
!6823 = !DILocation(line: 201, column: 25, scope: !6820)
!6824 = !DILocation(line: 201, column: 29, scope: !6820)
!6825 = !DILocation(line: 201, column: 37, scope: !6820)
!6826 = !DILocation(line: 201, column: 42, scope: !6820)
!6827 = !DILocation(line: 201, column: 8, scope: !6821)
!6828 = !DILocation(line: 202, column: 9, scope: !6829)
!6829 = distinct !DILexicalBlock(scope: !6830, file: !3, line: 202, column: 9)
!6830 = distinct !DILexicalBlock(scope: !6820, file: !3, line: 201, column: 69)
!6831 = !DILocation(line: 202, column: 19, scope: !6829)
!6832 = !DILocation(line: 202, column: 9, scope: !6830)
!6833 = !DILocation(line: 202, column: 39, scope: !6829)
!6834 = !DILocation(line: 203, column: 14, scope: !6835)
!6835 = distinct !DILexicalBlock(scope: !6829, file: !3, line: 203, column: 14)
!6836 = !DILocation(line: 203, column: 24, scope: !6835)
!6837 = !DILocation(line: 203, column: 14, scope: !6829)
!6838 = !DILocation(line: 203, column: 40, scope: !6835)
!6839 = !DILocation(line: 204, column: 14, scope: !6840)
!6840 = distinct !DILexicalBlock(scope: !6835, file: !3, line: 204, column: 14)
!6841 = !DILocation(line: 204, column: 24, scope: !6840)
!6842 = !DILocation(line: 204, column: 14, scope: !6835)
!6843 = !DILocation(line: 204, column: 46, scope: !6840)
!6844 = !DILocation(line: 205, column: 14, scope: !6845)
!6845 = distinct !DILexicalBlock(scope: !6840, file: !3, line: 205, column: 14)
!6846 = !DILocation(line: 205, column: 24, scope: !6845)
!6847 = !DILocation(line: 205, column: 14, scope: !6840)
!6848 = !DILocation(line: 205, column: 43, scope: !6845)
!6849 = !DILocation(line: 207, column: 5, scope: !6830)
!6850 = !DILocation(line: 209, column: 4, scope: !6821)
!6851 = !DILocation(line: 213, column: 8, scope: !6852)
!6852 = distinct !DILexicalBlock(scope: !6853, file: !3, line: 213, column: 8)
!6853 = distinct !DILexicalBlock(scope: !6736, file: !3, line: 212, column: 3)
!6854 = !DILocation(line: 213, column: 8, scope: !6853)
!6855 = !DILocalVariable(name: "cp", scope: !6856, file: !3, line: 214, type: !6740)
!6856 = distinct !DILexicalBlock(scope: !6852, file: !3, line: 213, column: 16)
!6857 = !DILocation(line: 214, column: 19, scope: !6856)
!6858 = !DILocation(line: 216, column: 9, scope: !6859)
!6859 = distinct !DILexicalBlock(scope: !6856, file: !3, line: 216, column: 9)
!6860 = !DILocation(line: 216, column: 18, scope: !6859)
!6861 = !DILocation(line: 216, column: 9, scope: !6856)
!6862 = !DILocation(line: 217, column: 30, scope: !6863)
!6863 = distinct !DILexicalBlock(scope: !6859, file: !3, line: 216, column: 38)
!6864 = !DILocation(line: 217, column: 34, scope: !6863)
!6865 = !DILocation(line: 217, column: 42, scope: !6863)
!6866 = !DILocation(line: 217, column: 6, scope: !6863)
!6867 = !DILocation(line: 218, column: 5, scope: !6863)
!6868 = !DILocation(line: 219, column: 14, scope: !6869)
!6869 = distinct !DILexicalBlock(scope: !6859, file: !3, line: 219, column: 14)
!6870 = !DILocation(line: 219, column: 23, scope: !6869)
!6871 = !DILocation(line: 219, column: 14, scope: !6859)
!6872 = !DILocation(line: 220, column: 30, scope: !6873)
!6873 = distinct !DILexicalBlock(scope: !6869, file: !3, line: 219, column: 40)
!6874 = !DILocation(line: 220, column: 34, scope: !6873)
!6875 = !DILocation(line: 220, column: 42, scope: !6873)
!6876 = !DILocation(line: 220, column: 6, scope: !6873)
!6877 = !DILocation(line: 221, column: 5, scope: !6873)
!6878 = !DILocation(line: 223, column: 30, scope: !6879)
!6879 = distinct !DILexicalBlock(scope: !6869, file: !3, line: 222, column: 10)
!6880 = !DILocation(line: 223, column: 34, scope: !6879)
!6881 = !DILocation(line: 223, column: 42, scope: !6879)
!6882 = !DILocation(line: 223, column: 6, scope: !6879)
!6883 = !DILocation(line: 226, column: 17, scope: !6856)
!6884 = !DILocation(line: 226, column: 5, scope: !6856)
!6885 = !DILocation(line: 227, column: 4, scope: !6856)
!6886 = !DILocation(line: 229, column: 9, scope: !6887)
!6887 = distinct !DILexicalBlock(scope: !6888, file: !3, line: 229, column: 9)
!6888 = distinct !DILexicalBlock(scope: !6852, file: !3, line: 228, column: 9)
!6889 = !DILocation(line: 229, column: 18, scope: !6887)
!6890 = !DILocation(line: 229, column: 9, scope: !6888)
!6891 = !DILocation(line: 229, column: 38, scope: !6887)
!6892 = !DILocation(line: 230, column: 14, scope: !6893)
!6893 = distinct !DILexicalBlock(scope: !6887, file: !3, line: 230, column: 14)
!6894 = !DILocation(line: 230, column: 23, scope: !6893)
!6895 = !DILocation(line: 230, column: 14, scope: !6887)
!6896 = !DILocation(line: 230, column: 40, scope: !6893)
!6897 = !DILocation(line: 231, column: 10, scope: !6893)
!6898 = !DILocation(line: 234, column: 4, scope: !6853)
!6899 = !DILocation(line: 238, column: 8, scope: !6900)
!6900 = distinct !DILexicalBlock(scope: !6901, file: !3, line: 238, column: 8)
!6901 = distinct !DILexicalBlock(scope: !6736, file: !3, line: 237, column: 3)
!6902 = !DILocation(line: 238, column: 8, scope: !6901)
!6903 = !DILocalVariable(name: "cp", scope: !6904, file: !3, line: 239, type: !6740)
!6904 = distinct !DILexicalBlock(scope: !6900, file: !3, line: 238, column: 16)
!6905 = !DILocation(line: 239, column: 19, scope: !6904)
!6906 = !DILocation(line: 241, column: 9, scope: !6907)
!6907 = distinct !DILexicalBlock(scope: !6904, file: !3, line: 241, column: 9)
!6908 = !DILocation(line: 241, column: 18, scope: !6907)
!6909 = !DILocation(line: 241, column: 9, scope: !6904)
!6910 = !DILocation(line: 242, column: 30, scope: !6911)
!6911 = distinct !DILexicalBlock(scope: !6907, file: !3, line: 241, column: 38)
!6912 = !DILocation(line: 242, column: 34, scope: !6911)
!6913 = !DILocation(line: 242, column: 42, scope: !6911)
!6914 = !DILocation(line: 242, column: 6, scope: !6911)
!6915 = !DILocation(line: 243, column: 24, scope: !6911)
!6916 = !DILocation(line: 243, column: 6, scope: !6911)
!6917 = !DILocation(line: 244, column: 5, scope: !6911)
!6918 = !DILocation(line: 245, column: 14, scope: !6919)
!6919 = distinct !DILexicalBlock(scope: !6907, file: !3, line: 245, column: 14)
!6920 = !DILocation(line: 245, column: 23, scope: !6919)
!6921 = !DILocation(line: 245, column: 14, scope: !6907)
!6922 = !DILocation(line: 246, column: 30, scope: !6923)
!6923 = distinct !DILexicalBlock(scope: !6919, file: !3, line: 245, column: 40)
!6924 = !DILocation(line: 246, column: 34, scope: !6923)
!6925 = !DILocation(line: 246, column: 42, scope: !6923)
!6926 = !DILocation(line: 246, column: 6, scope: !6923)
!6927 = !DILocation(line: 247, column: 24, scope: !6923)
!6928 = !DILocation(line: 247, column: 6, scope: !6923)
!6929 = !DILocation(line: 248, column: 5, scope: !6923)
!6930 = !DILocation(line: 250, column: 30, scope: !6931)
!6931 = distinct !DILexicalBlock(scope: !6919, file: !3, line: 249, column: 10)
!6932 = !DILocation(line: 250, column: 34, scope: !6931)
!6933 = !DILocation(line: 250, column: 42, scope: !6931)
!6934 = !DILocation(line: 250, column: 6, scope: !6931)
!6935 = !DILocation(line: 251, column: 24, scope: !6931)
!6936 = !DILocation(line: 251, column: 6, scope: !6931)
!6937 = !DILocation(line: 254, column: 17, scope: !6904)
!6938 = !DILocation(line: 254, column: 5, scope: !6904)
!6939 = !DILocation(line: 255, column: 4, scope: !6904)
!6940 = !DILocation(line: 257, column: 9, scope: !6941)
!6941 = distinct !DILexicalBlock(scope: !6942, file: !3, line: 257, column: 9)
!6942 = distinct !DILexicalBlock(scope: !6900, file: !3, line: 256, column: 9)
!6943 = !DILocation(line: 257, column: 18, scope: !6941)
!6944 = !DILocation(line: 257, column: 9, scope: !6942)
!6945 = !DILocation(line: 257, column: 38, scope: !6941)
!6946 = !DILocation(line: 258, column: 14, scope: !6947)
!6947 = distinct !DILexicalBlock(scope: !6941, file: !3, line: 258, column: 14)
!6948 = !DILocation(line: 258, column: 23, scope: !6947)
!6949 = !DILocation(line: 258, column: 14, scope: !6941)
!6950 = !DILocation(line: 258, column: 40, scope: !6947)
!6951 = !DILocation(line: 259, column: 10, scope: !6947)
!6952 = !DILocation(line: 261, column: 4, scope: !6901)
!6953 = !DILocation(line: 266, column: 9, scope: !6954)
!6954 = distinct !DILexicalBlock(scope: !6955, file: !3, line: 266, column: 8)
!6955 = distinct !DILexicalBlock(scope: !6736, file: !3, line: 264, column: 3)
!6956 = !DILocation(line: 266, column: 8, scope: !6954)
!6957 = !DILocation(line: 266, column: 20, scope: !6954)
!6958 = !DILocation(line: 266, column: 25, scope: !6954)
!6959 = !DILocation(line: 266, column: 32, scope: !6954)
!6960 = !DILocation(line: 266, column: 41, scope: !6954)
!6961 = !DILocation(line: 266, column: 45, scope: !6954)
!6962 = !DILocation(line: 266, column: 53, scope: !6954)
!6963 = !DILocation(line: 266, column: 58, scope: !6954)
!6964 = !DILocation(line: 266, column: 8, scope: !6955)
!6965 = !DILocation(line: 267, column: 9, scope: !6966)
!6966 = distinct !DILexicalBlock(scope: !6967, file: !3, line: 267, column: 9)
!6967 = distinct !DILexicalBlock(scope: !6954, file: !3, line: 266, column: 86)
!6968 = !DILocation(line: 267, column: 19, scope: !6966)
!6969 = !DILocation(line: 267, column: 9, scope: !6967)
!6970 = !DILocation(line: 267, column: 39, scope: !6966)
!6971 = !DILocation(line: 268, column: 14, scope: !6972)
!6972 = distinct !DILexicalBlock(scope: !6966, file: !3, line: 268, column: 14)
!6973 = !DILocation(line: 268, column: 24, scope: !6972)
!6974 = !DILocation(line: 268, column: 14, scope: !6966)
!6975 = !DILocation(line: 268, column: 40, scope: !6972)
!6976 = !DILocation(line: 269, column: 14, scope: !6977)
!6977 = distinct !DILexicalBlock(scope: !6972, file: !3, line: 269, column: 14)
!6978 = !DILocation(line: 269, column: 24, scope: !6977)
!6979 = !DILocation(line: 269, column: 14, scope: !6972)
!6980 = !DILocation(line: 269, column: 46, scope: !6977)
!6981 = !DILocation(line: 270, column: 14, scope: !6982)
!6982 = distinct !DILexicalBlock(scope: !6977, file: !3, line: 270, column: 14)
!6983 = !DILocation(line: 270, column: 24, scope: !6982)
!6984 = !DILocation(line: 270, column: 14, scope: !6977)
!6985 = !DILocation(line: 270, column: 43, scope: !6982)
!6986 = !DILocation(line: 271, column: 14, scope: !6987)
!6987 = distinct !DILexicalBlock(scope: !6982, file: !3, line: 271, column: 14)
!6988 = !DILocation(line: 271, column: 14, scope: !6982)
!6989 = !DILocation(line: 271, column: 25, scope: !6987)
!6990 = !DILocation(line: 272, column: 4, scope: !6967)
!6991 = !DILocation(line: 274, column: 9, scope: !6992)
!6992 = distinct !DILexicalBlock(scope: !6993, file: !3, line: 274, column: 9)
!6993 = distinct !DILexicalBlock(scope: !6954, file: !3, line: 273, column: 9)
!6994 = !DILocation(line: 274, column: 9, scope: !6993)
!6995 = !DILocalVariable(name: "cp", scope: !6996, file: !3, line: 275, type: !6997)
!6996 = distinct !DILexicalBlock(scope: !6992, file: !3, line: 274, column: 17)
!6997 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6998, size: 64)
!6998 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !402)
!6999 = !DILocation(line: 275, column: 18, scope: !6996)
!7000 = !DILocation(line: 275, column: 23, scope: !6996)
!7001 = !DILocation(line: 275, column: 31, scope: !6996)
!7002 = !DILocation(line: 276, column: 17, scope: !6996)
!7003 = !DILocation(line: 276, column: 24, scope: !6996)
!7004 = !DILocation(line: 276, column: 31, scope: !6996)
!7005 = !DILocation(line: 276, column: 6, scope: !6996)
!7006 = !DILocation(line: 277, column: 5, scope: !6996)
!7007 = !DILocation(line: 279, column: 6, scope: !6992)
!7008 = !DILocation(line: 282, column: 4, scope: !6955)
!7009 = !DILocation(line: 286, column: 2, scope: !6722)
!7010 = !DILocation(line: 287, column: 1, scope: !6722)
!7011 = distinct !DISubprogram(name: "copy_v3_v3_char", scope: !4954, file: !4954, line: 107, type: !7012, scopeLine: 108, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1930)
!7012 = !DISubroutineType(types: !7013)
!7013 = !{null, !618, !6997}
!7014 = !DILocalVariable(name: "r", arg: 1, scope: !7011, file: !4954, line: 107, type: !618)
!7015 = !DILocation(line: 107, column: 35, scope: !7011)
!7016 = !DILocalVariable(name: "a", arg: 2, scope: !7011, file: !4954, line: 107, type: !6997)
!7017 = !DILocation(line: 107, column: 52, scope: !7011)
!7018 = !DILocation(line: 109, column: 9, scope: !7011)
!7019 = !DILocation(line: 109, column: 2, scope: !7011)
!7020 = !DILocation(line: 109, column: 7, scope: !7011)
!7021 = !DILocation(line: 110, column: 9, scope: !7011)
!7022 = !DILocation(line: 110, column: 2, scope: !7011)
!7023 = !DILocation(line: 110, column: 7, scope: !7011)
!7024 = !DILocation(line: 111, column: 9, scope: !7011)
!7025 = !DILocation(line: 111, column: 2, scope: !7011)
!7026 = !DILocation(line: 111, column: 7, scope: !7011)
!7027 = !DILocation(line: 112, column: 1, scope: !7011)
!7028 = distinct !DISubprogram(name: "cp_shade_color3ub", scope: !3, file: !3, line: 130, type: !7029, scopeLine: 131, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1930)
!7029 = !DISubroutineType(types: !7030)
!7030 = !{null, !619, !7031}
!7031 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !417)
!7032 = !DILocalVariable(name: "cp", arg: 1, scope: !7028, file: !3, line: 130, type: !619)
!7033 = !DILocation(line: 130, column: 45, scope: !7028)
!7034 = !DILocalVariable(name: "offset", arg: 2, scope: !7028, file: !3, line: 130, type: !7031)
!7035 = !DILocation(line: 130, column: 62, scope: !7028)
!7036 = !DILocalVariable(name: "r", scope: !7028, file: !3, line: 132, type: !417)
!7037 = !DILocation(line: 132, column: 6, scope: !7028)
!7038 = !DILocalVariable(name: "g", scope: !7028, file: !3, line: 132, type: !417)
!7039 = !DILocation(line: 132, column: 9, scope: !7028)
!7040 = !DILocalVariable(name: "b", scope: !7028, file: !3, line: 132, type: !417)
!7041 = !DILocation(line: 132, column: 12, scope: !7028)
!7042 = !DILocation(line: 134, column: 6, scope: !7028)
!7043 = !DILocation(line: 134, column: 21, scope: !7028)
!7044 = !DILocation(line: 134, column: 15, scope: !7028)
!7045 = !DILocation(line: 134, column: 13, scope: !7028)
!7046 = !DILocation(line: 134, column: 4, scope: !7028)
!7047 = !DILocation(line: 135, column: 2, scope: !7048)
!7048 = distinct !DILexicalBlock(scope: !7049, file: !3, line: 135, column: 2)
!7049 = distinct !DILexicalBlock(scope: !7028, file: !3, line: 135, column: 2)
!7050 = !DILocation(line: 135, column: 2, scope: !7049)
!7051 = !DILocation(line: 135, column: 2, scope: !7052)
!7052 = distinct !DILexicalBlock(scope: !7048, file: !3, line: 135, column: 2)
!7053 = !DILocation(line: 136, column: 6, scope: !7028)
!7054 = !DILocation(line: 136, column: 21, scope: !7028)
!7055 = !DILocation(line: 136, column: 15, scope: !7028)
!7056 = !DILocation(line: 136, column: 13, scope: !7028)
!7057 = !DILocation(line: 136, column: 4, scope: !7028)
!7058 = !DILocation(line: 137, column: 2, scope: !7059)
!7059 = distinct !DILexicalBlock(scope: !7060, file: !3, line: 137, column: 2)
!7060 = distinct !DILexicalBlock(scope: !7028, file: !3, line: 137, column: 2)
!7061 = !DILocation(line: 137, column: 2, scope: !7060)
!7062 = !DILocation(line: 137, column: 2, scope: !7063)
!7063 = distinct !DILexicalBlock(scope: !7059, file: !3, line: 137, column: 2)
!7064 = !DILocation(line: 138, column: 6, scope: !7028)
!7065 = !DILocation(line: 138, column: 21, scope: !7028)
!7066 = !DILocation(line: 138, column: 15, scope: !7028)
!7067 = !DILocation(line: 138, column: 13, scope: !7028)
!7068 = !DILocation(line: 138, column: 4, scope: !7028)
!7069 = !DILocation(line: 139, column: 2, scope: !7070)
!7070 = distinct !DILexicalBlock(scope: !7071, file: !3, line: 139, column: 2)
!7071 = distinct !DILexicalBlock(scope: !7028, file: !3, line: 139, column: 2)
!7072 = !DILocation(line: 139, column: 2, scope: !7071)
!7073 = !DILocation(line: 139, column: 2, scope: !7074)
!7074 = distinct !DILexicalBlock(scope: !7070, file: !3, line: 139, column: 2)
!7075 = !DILocation(line: 141, column: 10, scope: !7028)
!7076 = !DILocation(line: 141, column: 2, scope: !7028)
!7077 = !DILocation(line: 141, column: 8, scope: !7028)
!7078 = !DILocation(line: 142, column: 10, scope: !7028)
!7079 = !DILocation(line: 142, column: 2, scope: !7028)
!7080 = !DILocation(line: 142, column: 8, scope: !7028)
!7081 = !DILocation(line: 143, column: 10, scope: !7028)
!7082 = !DILocation(line: 143, column: 2, scope: !7028)
!7083 = !DILocation(line: 143, column: 8, scope: !7028)
!7084 = !DILocation(line: 144, column: 1, scope: !7028)
!7085 = distinct !DISubprogram(name: "draw_bone_points", scope: !3, file: !3, line: 550, type: !7086, scopeLine: 551, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1930)
!7086 = !DISubroutineType(types: !7087)
!7087 = !{null, !2145, !417, !7, !417}
!7088 = !DILocalVariable(name: "dt", arg: 1, scope: !7085, file: !3, line: 550, type: !2145)
!7089 = !DILocation(line: 550, column: 42, scope: !7085)
!7090 = !DILocalVariable(name: "armflag", arg: 2, scope: !7085, file: !3, line: 550, type: !417)
!7091 = !DILocation(line: 550, column: 50, scope: !7085)
!7092 = !DILocalVariable(name: "boneflag", arg: 3, scope: !7085, file: !3, line: 550, type: !7)
!7093 = !DILocation(line: 550, column: 72, scope: !7085)
!7094 = !DILocalVariable(name: "id", arg: 4, scope: !7085, file: !3, line: 550, type: !417)
!7095 = !DILocation(line: 550, column: 86, scope: !7085)
!7096 = !DILocation(line: 553, column: 7, scope: !7097)
!7097 = distinct !DILexicalBlock(scope: !7085, file: !3, line: 553, column: 6)
!7098 = !DILocation(line: 553, column: 16, scope: !7097)
!7099 = !DILocation(line: 553, column: 34, scope: !7097)
!7100 = !DILocation(line: 553, column: 6, scope: !7085)
!7101 = !DILocation(line: 554, column: 7, scope: !7102)
!7102 = distinct !DILexicalBlock(scope: !7103, file: !3, line: 554, column: 7)
!7103 = distinct !DILexicalBlock(scope: !7097, file: !3, line: 553, column: 40)
!7104 = !DILocation(line: 554, column: 10, scope: !7102)
!7105 = !DILocation(line: 554, column: 7, scope: !7103)
!7106 = !DILocation(line: 555, column: 23, scope: !7102)
!7107 = !DILocation(line: 555, column: 26, scope: !7102)
!7108 = !DILocation(line: 555, column: 4, scope: !7102)
!7109 = !DILocation(line: 557, column: 7, scope: !7110)
!7110 = distinct !DILexicalBlock(scope: !7103, file: !3, line: 557, column: 7)
!7111 = !DILocation(line: 557, column: 10, scope: !7110)
!7112 = !DILocation(line: 557, column: 7, scope: !7103)
!7113 = !DILocation(line: 558, column: 8, scope: !7114)
!7114 = distinct !DILexicalBlock(scope: !7115, file: !3, line: 558, column: 8)
!7115 = distinct !DILexicalBlock(scope: !7110, file: !3, line: 557, column: 22)
!7116 = !DILocation(line: 558, column: 16, scope: !7114)
!7117 = !DILocation(line: 558, column: 8, scope: !7115)
!7118 = !DILocation(line: 559, column: 9, scope: !7119)
!7119 = distinct !DILexicalBlock(scope: !7120, file: !3, line: 559, column: 9)
!7120 = distinct !DILexicalBlock(scope: !7114, file: !3, line: 558, column: 32)
!7121 = !DILocation(line: 559, column: 18, scope: !7119)
!7122 = !DILocation(line: 559, column: 9, scope: !7120)
!7123 = !DILocation(line: 559, column: 34, scope: !7119)
!7124 = !DILocation(line: 560, column: 10, scope: !7119)
!7125 = !DILocation(line: 561, column: 4, scope: !7120)
!7126 = !DILocation(line: 562, column: 3, scope: !7115)
!7127 = !DILocation(line: 564, column: 8, scope: !7128)
!7128 = distinct !DILexicalBlock(scope: !7129, file: !3, line: 564, column: 8)
!7129 = distinct !DILexicalBlock(scope: !7110, file: !3, line: 563, column: 8)
!7130 = !DILocation(line: 564, column: 16, scope: !7128)
!7131 = !DILocation(line: 564, column: 8, scope: !7129)
!7132 = !DILocation(line: 565, column: 42, scope: !7128)
!7133 = !DILocation(line: 565, column: 5, scope: !7128)
!7134 = !DILocation(line: 567, column: 5, scope: !7128)
!7135 = !DILocation(line: 570, column: 7, scope: !7136)
!7136 = distinct !DILexicalBlock(scope: !7103, file: !3, line: 570, column: 7)
!7137 = !DILocation(line: 570, column: 10, scope: !7136)
!7138 = !DILocation(line: 570, column: 7, scope: !7103)
!7139 = !DILocation(line: 571, column: 4, scope: !7136)
!7140 = !DILocation(line: 573, column: 4, scope: !7136)
!7141 = !DILocation(line: 574, column: 2, scope: !7103)
!7142 = !DILocation(line: 577, column: 6, scope: !7143)
!7143 = distinct !DILexicalBlock(scope: !7085, file: !3, line: 577, column: 6)
!7144 = !DILocation(line: 577, column: 9, scope: !7143)
!7145 = !DILocation(line: 577, column: 6, scope: !7085)
!7146 = !DILocation(line: 578, column: 22, scope: !7143)
!7147 = !DILocation(line: 578, column: 25, scope: !7143)
!7148 = !DILocation(line: 578, column: 3, scope: !7143)
!7149 = !DILocation(line: 580, column: 6, scope: !7150)
!7150 = distinct !DILexicalBlock(scope: !7085, file: !3, line: 580, column: 6)
!7151 = !DILocation(line: 580, column: 9, scope: !7150)
!7152 = !DILocation(line: 580, column: 6, scope: !7085)
!7153 = !DILocation(line: 581, column: 7, scope: !7154)
!7154 = distinct !DILexicalBlock(scope: !7155, file: !3, line: 581, column: 7)
!7155 = distinct !DILexicalBlock(scope: !7150, file: !3, line: 580, column: 21)
!7156 = !DILocation(line: 581, column: 15, scope: !7154)
!7157 = !DILocation(line: 581, column: 7, scope: !7155)
!7158 = !DILocation(line: 582, column: 8, scope: !7159)
!7159 = distinct !DILexicalBlock(scope: !7160, file: !3, line: 582, column: 8)
!7160 = distinct !DILexicalBlock(scope: !7154, file: !3, line: 581, column: 31)
!7161 = !DILocation(line: 582, column: 17, scope: !7159)
!7162 = !DILocation(line: 582, column: 8, scope: !7160)
!7163 = !DILocation(line: 582, column: 32, scope: !7159)
!7164 = !DILocation(line: 583, column: 9, scope: !7159)
!7165 = !DILocation(line: 584, column: 3, scope: !7160)
!7166 = !DILocation(line: 585, column: 2, scope: !7155)
!7167 = !DILocation(line: 587, column: 7, scope: !7168)
!7168 = distinct !DILexicalBlock(scope: !7169, file: !3, line: 587, column: 7)
!7169 = distinct !DILexicalBlock(scope: !7150, file: !3, line: 586, column: 7)
!7170 = !DILocation(line: 587, column: 15, scope: !7168)
!7171 = !DILocation(line: 587, column: 7, scope: !7169)
!7172 = !DILocation(line: 588, column: 41, scope: !7168)
!7173 = !DILocation(line: 588, column: 4, scope: !7168)
!7174 = !DILocation(line: 590, column: 4, scope: !7168)
!7175 = !DILocation(line: 593, column: 2, scope: !7085)
!7176 = !DILocation(line: 594, column: 6, scope: !7177)
!7177 = distinct !DILexicalBlock(scope: !7085, file: !3, line: 594, column: 6)
!7178 = !DILocation(line: 594, column: 9, scope: !7177)
!7179 = !DILocation(line: 594, column: 6, scope: !7085)
!7180 = !DILocation(line: 595, column: 3, scope: !7177)
!7181 = !DILocation(line: 597, column: 3, scope: !7177)
!7182 = !DILocation(line: 598, column: 2, scope: !7085)
!7183 = !DILocation(line: 600, column: 1, scope: !7085)
!7184 = distinct !DISubprogram(name: "set_ebone_glColor", scope: !3, file: !3, line: 289, type: !7185, scopeLine: 290, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1930)
!7185 = !DISubroutineType(types: !7186)
!7186 = !{null, !1957}
!7187 = !DILocalVariable(name: "boneflag", arg: 1, scope: !7184, file: !3, line: 289, type: !1957)
!7188 = !DILocation(line: 289, column: 50, scope: !7184)
!7189 = !DILocation(line: 291, column: 7, scope: !7190)
!7190 = distinct !DILexicalBlock(scope: !7184, file: !3, line: 291, column: 6)
!7191 = !DILocation(line: 291, column: 16, scope: !7190)
!7192 = !DILocation(line: 291, column: 36, scope: !7190)
!7193 = !DILocation(line: 291, column: 40, scope: !7190)
!7194 = !DILocation(line: 291, column: 49, scope: !7190)
!7195 = !DILocation(line: 291, column: 6, scope: !7184)
!7196 = !DILocation(line: 292, column: 3, scope: !7197)
!7197 = distinct !DILexicalBlock(scope: !7190, file: !3, line: 291, column: 67)
!7198 = !DILocation(line: 293, column: 2, scope: !7197)
!7199 = !DILocation(line: 294, column: 11, scope: !7200)
!7200 = distinct !DILexicalBlock(scope: !7190, file: !3, line: 294, column: 11)
!7201 = !DILocation(line: 294, column: 20, scope: !7200)
!7202 = !DILocation(line: 294, column: 11, scope: !7190)
!7203 = !DILocation(line: 295, column: 3, scope: !7204)
!7204 = distinct !DILexicalBlock(scope: !7200, file: !3, line: 294, column: 40)
!7205 = !DILocation(line: 296, column: 2, scope: !7204)
!7206 = !DILocation(line: 297, column: 11, scope: !7207)
!7207 = distinct !DILexicalBlock(scope: !7200, file: !3, line: 297, column: 11)
!7208 = !DILocation(line: 297, column: 20, scope: !7207)
!7209 = !DILocation(line: 297, column: 11, scope: !7200)
!7210 = !DILocation(line: 298, column: 3, scope: !7211)
!7211 = distinct !DILexicalBlock(scope: !7207, file: !3, line: 297, column: 37)
!7212 = !DILocation(line: 299, column: 2, scope: !7211)
!7213 = !DILocation(line: 301, column: 3, scope: !7214)
!7214 = distinct !DILexicalBlock(scope: !7207, file: !3, line: 300, column: 7)
!7215 = !DILocation(line: 303, column: 1, scope: !7184)
!7216 = distinct !DISubprogram(name: "draw_b_bone_boxes", scope: !3, file: !3, line: 1093, type: !7217, scopeLine: 1094, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1930)
!7217 = !DISubroutineType(types: !7218)
!7218 = !{null, !2145, !3717, !375, !375, !375}
!7219 = !DILocalVariable(name: "dt", arg: 1, scope: !7216, file: !3, line: 1093, type: !2145)
!7220 = !DILocation(line: 1093, column: 43, scope: !7216)
!7221 = !DILocalVariable(name: "pchan", arg: 2, scope: !7216, file: !3, line: 1093, type: !3717)
!7222 = !DILocation(line: 1093, column: 61, scope: !7216)
!7223 = !DILocalVariable(name: "xwidth", arg: 3, scope: !7216, file: !3, line: 1093, type: !375)
!7224 = !DILocation(line: 1093, column: 74, scope: !7216)
!7225 = !DILocalVariable(name: "length", arg: 4, scope: !7216, file: !3, line: 1093, type: !375)
!7226 = !DILocation(line: 1093, column: 88, scope: !7216)
!7227 = !DILocalVariable(name: "zwidth", arg: 5, scope: !7216, file: !3, line: 1093, type: !375)
!7228 = !DILocation(line: 1093, column: 102, scope: !7216)
!7229 = !DILocalVariable(name: "segments", scope: !7216, file: !3, line: 1095, type: !417)
!7230 = !DILocation(line: 1095, column: 6, scope: !7216)
!7231 = !DILocation(line: 1097, column: 6, scope: !7232)
!7232 = distinct !DILexicalBlock(scope: !7216, file: !3, line: 1097, column: 6)
!7233 = !DILocation(line: 1097, column: 6, scope: !7216)
!7234 = !DILocation(line: 1098, column: 14, scope: !7232)
!7235 = !DILocation(line: 1098, column: 21, scope: !7232)
!7236 = !DILocation(line: 1098, column: 27, scope: !7232)
!7237 = !DILocation(line: 1098, column: 12, scope: !7232)
!7238 = !DILocation(line: 1098, column: 3, scope: !7232)
!7239 = !DILocation(line: 1100, column: 7, scope: !7240)
!7240 = distinct !DILexicalBlock(scope: !7216, file: !3, line: 1100, column: 6)
!7241 = !DILocation(line: 1100, column: 16, scope: !7240)
!7242 = !DILocation(line: 1100, column: 21, scope: !7240)
!7243 = !DILocation(line: 1100, column: 25, scope: !7240)
!7244 = !DILocation(line: 1100, column: 24, scope: !7240)
!7245 = !DILocation(line: 1100, column: 6, scope: !7216)
!7246 = !DILocalVariable(name: "dlen", scope: !7247, file: !3, line: 1101, type: !375)
!7247 = distinct !DILexicalBlock(scope: !7240, file: !3, line: 1100, column: 33)
!7248 = !DILocation(line: 1101, column: 9, scope: !7247)
!7249 = !DILocation(line: 1101, column: 16, scope: !7247)
!7250 = !DILocation(line: 1101, column: 32, scope: !7247)
!7251 = !DILocation(line: 1101, column: 25, scope: !7247)
!7252 = !DILocation(line: 1101, column: 23, scope: !7247)
!7253 = !DILocalVariable(name: "bbone", scope: !7247, file: !3, line: 1102, type: !5835)
!7254 = !DILocation(line: 1102, column: 8, scope: !7247)
!7255 = !DILocalVariable(name: "a", scope: !7247, file: !3, line: 1103, type: !417)
!7256 = !DILocation(line: 1103, column: 7, scope: !7247)
!7257 = !DILocation(line: 1105, column: 23, scope: !7247)
!7258 = !DILocation(line: 1105, column: 33, scope: !7247)
!7259 = !DILocation(line: 1105, column: 3, scope: !7247)
!7260 = !DILocation(line: 1107, column: 10, scope: !7261)
!7261 = distinct !DILexicalBlock(scope: !7247, file: !3, line: 1107, column: 3)
!7262 = !DILocation(line: 1107, column: 8, scope: !7261)
!7263 = !DILocation(line: 1107, column: 15, scope: !7264)
!7264 = distinct !DILexicalBlock(scope: !7261, file: !3, line: 1107, column: 3)
!7265 = !DILocation(line: 1107, column: 19, scope: !7264)
!7266 = !DILocation(line: 1107, column: 17, scope: !7264)
!7267 = !DILocation(line: 1107, column: 3, scope: !7261)
!7268 = !DILocation(line: 1108, column: 4, scope: !7269)
!7269 = distinct !DILexicalBlock(scope: !7264, file: !3, line: 1107, column: 34)
!7270 = !DILocation(line: 1109, column: 4, scope: !7269)
!7271 = !DILocation(line: 1110, column: 8, scope: !7272)
!7272 = distinct !DILexicalBlock(scope: !7269, file: !3, line: 1110, column: 8)
!7273 = !DILocation(line: 1110, column: 11, scope: !7272)
!7274 = !DILocation(line: 1110, column: 8, scope: !7269)
!7275 = !DILocation(line: 1110, column: 43, scope: !7272)
!7276 = !DILocation(line: 1110, column: 51, scope: !7272)
!7277 = !DILocation(line: 1110, column: 57, scope: !7272)
!7278 = !DILocation(line: 1110, column: 24, scope: !7272)
!7279 = !DILocation(line: 1111, column: 23, scope: !7272)
!7280 = !DILocation(line: 1111, column: 31, scope: !7272)
!7281 = !DILocation(line: 1111, column: 37, scope: !7272)
!7282 = !DILocation(line: 1111, column: 9, scope: !7272)
!7283 = !DILocation(line: 1112, column: 4, scope: !7269)
!7284 = !DILocation(line: 1113, column: 3, scope: !7269)
!7285 = !DILocation(line: 1107, column: 30, scope: !7264)
!7286 = !DILocation(line: 1107, column: 3, scope: !7264)
!7287 = distinct !{!7287, !7267, !7288}
!7288 = !DILocation(line: 1113, column: 3, scope: !7261)
!7289 = !DILocation(line: 1114, column: 2, scope: !7247)
!7290 = !DILocation(line: 1116, column: 3, scope: !7291)
!7291 = distinct !DILexicalBlock(scope: !7240, file: !3, line: 1115, column: 7)
!7292 = !DILocation(line: 1117, column: 7, scope: !7293)
!7293 = distinct !DILexicalBlock(scope: !7291, file: !3, line: 1117, column: 7)
!7294 = !DILocation(line: 1117, column: 10, scope: !7293)
!7295 = !DILocation(line: 1117, column: 7, scope: !7291)
!7296 = !DILocation(line: 1117, column: 42, scope: !7293)
!7297 = !DILocation(line: 1117, column: 50, scope: !7293)
!7298 = !DILocation(line: 1117, column: 58, scope: !7293)
!7299 = !DILocation(line: 1117, column: 23, scope: !7293)
!7300 = !DILocation(line: 1118, column: 22, scope: !7293)
!7301 = !DILocation(line: 1118, column: 30, scope: !7293)
!7302 = !DILocation(line: 1118, column: 38, scope: !7293)
!7303 = !DILocation(line: 1118, column: 8, scope: !7293)
!7304 = !DILocation(line: 1119, column: 3, scope: !7291)
!7305 = !DILocation(line: 1121, column: 1, scope: !7216)
!7306 = !DILocation(line: 425, column: 6, scope: !7307)
!7307 = distinct !DILexicalBlock(scope: !1927, file: !3, line: 425, column: 6)
!7308 = !DILocation(line: 425, column: 15, scope: !7307)
!7309 = !DILocation(line: 425, column: 6, scope: !1927)
!7310 = !DILocalVariable(name: "qobj", scope: !7311, file: !3, line: 426, type: !5356)
!7311 = distinct !DILexicalBlock(scope: !7307, file: !3, line: 425, column: 21)
!7312 = !DILocation(line: 426, column: 18, scope: !7311)
!7313 = !DILocation(line: 428, column: 14, scope: !7311)
!7314 = !DILocation(line: 428, column: 12, scope: !7311)
!7315 = !DILocation(line: 429, column: 13, scope: !7311)
!7316 = !DILocation(line: 429, column: 3, scope: !7311)
!7317 = !DILocation(line: 431, column: 10, scope: !7311)
!7318 = !DILocation(line: 431, column: 8, scope: !7311)
!7319 = !DILocation(line: 432, column: 23, scope: !7311)
!7320 = !DILocation(line: 432, column: 3, scope: !7311)
!7321 = !DILocation(line: 433, column: 3, scope: !7311)
!7322 = !DILocation(line: 434, column: 13, scope: !7311)
!7323 = !DILocation(line: 434, column: 3, scope: !7311)
!7324 = !DILocation(line: 435, column: 3, scope: !7311)
!7325 = !DILocation(line: 436, column: 20, scope: !7311)
!7326 = !DILocation(line: 436, column: 3, scope: !7311)
!7327 = !DILocation(line: 438, column: 3, scope: !7311)
!7328 = !DILocation(line: 439, column: 2, scope: !7311)
!7329 = !DILocation(line: 441, column: 13, scope: !1927)
!7330 = !DILocation(line: 441, column: 2, scope: !1927)
!7331 = !DILocation(line: 442, column: 1, scope: !1927)
!7332 = !DILocation(line: 394, column: 6, scope: !7333)
!7333 = distinct !DILexicalBlock(scope: !1933, file: !3, line: 394, column: 6)
!7334 = !DILocation(line: 394, column: 15, scope: !7333)
!7335 = !DILocation(line: 394, column: 6, scope: !1933)
!7336 = !DILocalVariable(name: "qobj", scope: !7337, file: !3, line: 395, type: !5356)
!7337 = distinct !DILexicalBlock(scope: !7333, file: !3, line: 394, column: 21)
!7338 = !DILocation(line: 395, column: 20, scope: !7337)
!7339 = !DILocation(line: 397, column: 14, scope: !7337)
!7340 = !DILocation(line: 397, column: 12, scope: !7337)
!7341 = !DILocation(line: 398, column: 13, scope: !7337)
!7342 = !DILocation(line: 398, column: 3, scope: !7337)
!7343 = !DILocation(line: 400, column: 3, scope: !7337)
!7344 = !DILocation(line: 402, column: 13, scope: !7337)
!7345 = !DILocation(line: 402, column: 11, scope: !7337)
!7346 = !DILocation(line: 403, column: 23, scope: !7337)
!7347 = !DILocation(line: 403, column: 3, scope: !7337)
!7348 = !DILocation(line: 404, column: 11, scope: !7337)
!7349 = !DILocation(line: 404, column: 3, scope: !7337)
!7350 = !DILocation(line: 406, column: 3, scope: !7337)
!7351 = !DILocation(line: 407, column: 11, scope: !7337)
!7352 = !DILocation(line: 407, column: 3, scope: !7337)
!7353 = !DILocation(line: 409, column: 3, scope: !7337)
!7354 = !DILocation(line: 410, column: 11, scope: !7337)
!7355 = !DILocation(line: 410, column: 3, scope: !7337)
!7356 = !DILocation(line: 412, column: 20, scope: !7337)
!7357 = !DILocation(line: 412, column: 3, scope: !7337)
!7358 = !DILocation(line: 414, column: 3, scope: !7337)
!7359 = !DILocation(line: 415, column: 3, scope: !7337)
!7360 = !DILocation(line: 416, column: 2, scope: !7337)
!7361 = !DILocation(line: 418, column: 13, scope: !1933)
!7362 = !DILocation(line: 418, column: 2, scope: !1933)
!7363 = !DILocation(line: 419, column: 1, scope: !1933)
!7364 = !DILocalVariable(name: "xsize", arg: 1, scope: !1936, file: !3, line: 319, type: !375)
!7365 = !DILocation(line: 319, column: 38, scope: !1936)
!7366 = !DILocalVariable(name: "ysize", arg: 2, scope: !1936, file: !3, line: 319, type: !375)
!7367 = !DILocation(line: 319, column: 51, scope: !1936)
!7368 = !DILocalVariable(name: "zsize", arg: 3, scope: !1936, file: !3, line: 319, type: !375)
!7369 = !DILocation(line: 319, column: 64, scope: !1936)
!7370 = !DILocalVariable(name: "n", scope: !1936, file: !3, line: 322, type: !538)
!7371 = !DILocation(line: 322, column: 8, scope: !1936)
!7372 = !DILocation(line: 324, column: 11, scope: !1936)
!7373 = !DILocation(line: 324, column: 18, scope: !1936)
!7374 = !DILocation(line: 324, column: 25, scope: !1936)
!7375 = !DILocation(line: 324, column: 2, scope: !1936)
!7376 = !DILocation(line: 326, column: 6, scope: !7377)
!7377 = distinct !DILexicalBlock(scope: !1936, file: !3, line: 326, column: 6)
!7378 = !DILocation(line: 326, column: 15, scope: !7377)
!7379 = !DILocation(line: 326, column: 6, scope: !1936)
!7380 = !DILocation(line: 327, column: 14, scope: !7381)
!7381 = distinct !DILexicalBlock(scope: !7377, file: !3, line: 326, column: 21)
!7382 = !DILocation(line: 327, column: 12, scope: !7381)
!7383 = !DILocation(line: 328, column: 13, scope: !7381)
!7384 = !DILocation(line: 328, column: 3, scope: !7381)
!7385 = !DILocation(line: 330, column: 3, scope: !7381)
!7386 = !DILocation(line: 331, column: 3, scope: !7381)
!7387 = !DILocation(line: 331, column: 8, scope: !7381)
!7388 = !DILocation(line: 332, column: 15, scope: !7381)
!7389 = !DILocation(line: 332, column: 3, scope: !7381)
!7390 = !DILocation(line: 333, column: 3, scope: !7381)
!7391 = !DILocation(line: 333, column: 25, scope: !7381)
!7392 = !DILocation(line: 333, column: 47, scope: !7381)
!7393 = !DILocation(line: 333, column: 69, scope: !7381)
!7394 = !DILocation(line: 334, column: 3, scope: !7381)
!7395 = !DILocation(line: 334, column: 8, scope: !7381)
!7396 = !DILocation(line: 335, column: 3, scope: !7381)
!7397 = !DILocation(line: 335, column: 8, scope: !7381)
!7398 = !DILocation(line: 336, column: 15, scope: !7381)
!7399 = !DILocation(line: 336, column: 3, scope: !7381)
!7400 = !DILocation(line: 337, column: 3, scope: !7381)
!7401 = !DILocation(line: 337, column: 25, scope: !7381)
!7402 = !DILocation(line: 337, column: 47, scope: !7381)
!7403 = !DILocation(line: 337, column: 69, scope: !7381)
!7404 = !DILocation(line: 338, column: 3, scope: !7381)
!7405 = !DILocation(line: 338, column: 8, scope: !7381)
!7406 = !DILocation(line: 339, column: 3, scope: !7381)
!7407 = !DILocation(line: 339, column: 8, scope: !7381)
!7408 = !DILocation(line: 340, column: 15, scope: !7381)
!7409 = !DILocation(line: 340, column: 3, scope: !7381)
!7410 = !DILocation(line: 341, column: 3, scope: !7381)
!7411 = !DILocation(line: 341, column: 25, scope: !7381)
!7412 = !DILocation(line: 341, column: 47, scope: !7381)
!7413 = !DILocation(line: 341, column: 69, scope: !7381)
!7414 = !DILocation(line: 342, column: 3, scope: !7381)
!7415 = !DILocation(line: 342, column: 8, scope: !7381)
!7416 = !DILocation(line: 343, column: 3, scope: !7381)
!7417 = !DILocation(line: 343, column: 8, scope: !7381)
!7418 = !DILocation(line: 344, column: 15, scope: !7381)
!7419 = !DILocation(line: 344, column: 3, scope: !7381)
!7420 = !DILocation(line: 345, column: 3, scope: !7381)
!7421 = !DILocation(line: 345, column: 25, scope: !7381)
!7422 = !DILocation(line: 345, column: 47, scope: !7381)
!7423 = !DILocation(line: 345, column: 69, scope: !7381)
!7424 = !DILocation(line: 346, column: 3, scope: !7381)
!7425 = !DILocation(line: 346, column: 8, scope: !7381)
!7426 = !DILocation(line: 347, column: 3, scope: !7381)
!7427 = !DILocation(line: 347, column: 8, scope: !7381)
!7428 = !DILocation(line: 348, column: 15, scope: !7381)
!7429 = !DILocation(line: 348, column: 3, scope: !7381)
!7430 = !DILocation(line: 349, column: 3, scope: !7381)
!7431 = !DILocation(line: 349, column: 25, scope: !7381)
!7432 = !DILocation(line: 349, column: 47, scope: !7381)
!7433 = !DILocation(line: 349, column: 69, scope: !7381)
!7434 = !DILocation(line: 350, column: 3, scope: !7381)
!7435 = !DILocation(line: 350, column: 8, scope: !7381)
!7436 = !DILocation(line: 351, column: 15, scope: !7381)
!7437 = !DILocation(line: 351, column: 3, scope: !7381)
!7438 = !DILocation(line: 352, column: 3, scope: !7381)
!7439 = !DILocation(line: 352, column: 25, scope: !7381)
!7440 = !DILocation(line: 352, column: 47, scope: !7381)
!7441 = !DILocation(line: 352, column: 69, scope: !7381)
!7442 = !DILocation(line: 353, column: 3, scope: !7381)
!7443 = !DILocation(line: 355, column: 3, scope: !7381)
!7444 = !DILocation(line: 356, column: 2, scope: !7381)
!7445 = !DILocation(line: 358, column: 13, scope: !1936)
!7446 = !DILocation(line: 358, column: 2, scope: !1936)
!7447 = !DILocation(line: 359, column: 1, scope: !1936)
!7448 = !DILocalVariable(name: "xsize", arg: 1, scope: !1944, file: !3, line: 361, type: !375)
!7449 = !DILocation(line: 361, column: 33, scope: !1944)
!7450 = !DILocalVariable(name: "ysize", arg: 2, scope: !1944, file: !3, line: 361, type: !375)
!7451 = !DILocation(line: 361, column: 46, scope: !1944)
!7452 = !DILocalVariable(name: "zsize", arg: 3, scope: !1944, file: !3, line: 361, type: !375)
!7453 = !DILocation(line: 361, column: 59, scope: !1944)
!7454 = !DILocation(line: 365, column: 6, scope: !7455)
!7455 = distinct !DILexicalBlock(scope: !1944, file: !3, line: 365, column: 6)
!7456 = !DILocation(line: 365, column: 15, scope: !7455)
!7457 = !DILocation(line: 365, column: 6, scope: !1944)
!7458 = !DILocation(line: 366, column: 14, scope: !7459)
!7459 = distinct !DILexicalBlock(scope: !7455, file: !3, line: 365, column: 21)
!7460 = !DILocation(line: 366, column: 12, scope: !7459)
!7461 = !DILocation(line: 367, column: 13, scope: !7459)
!7462 = !DILocation(line: 367, column: 3, scope: !7459)
!7463 = !DILocation(line: 369, column: 3, scope: !7459)
!7464 = !DILocation(line: 370, column: 3, scope: !7459)
!7465 = !DILocation(line: 370, column: 25, scope: !7459)
!7466 = !DILocation(line: 370, column: 47, scope: !7459)
!7467 = !DILocation(line: 370, column: 69, scope: !7459)
!7468 = !DILocation(line: 371, column: 3, scope: !7459)
!7469 = !DILocation(line: 371, column: 25, scope: !7459)
!7470 = !DILocation(line: 371, column: 47, scope: !7459)
!7471 = !DILocation(line: 371, column: 69, scope: !7459)
!7472 = !DILocation(line: 372, column: 3, scope: !7459)
!7473 = !DILocation(line: 372, column: 25, scope: !7459)
!7474 = !DILocation(line: 373, column: 3, scope: !7459)
!7475 = !DILocation(line: 375, column: 3, scope: !7459)
!7476 = !DILocation(line: 376, column: 3, scope: !7459)
!7477 = !DILocation(line: 376, column: 25, scope: !7459)
!7478 = !DILocation(line: 377, column: 3, scope: !7459)
!7479 = !DILocation(line: 377, column: 25, scope: !7459)
!7480 = !DILocation(line: 378, column: 3, scope: !7459)
!7481 = !DILocation(line: 378, column: 25, scope: !7459)
!7482 = !DILocation(line: 379, column: 3, scope: !7459)
!7483 = !DILocation(line: 381, column: 3, scope: !7459)
!7484 = !DILocation(line: 382, column: 2, scope: !7459)
!7485 = !DILocation(line: 384, column: 11, scope: !1944)
!7486 = !DILocation(line: 384, column: 18, scope: !1944)
!7487 = !DILocation(line: 384, column: 25, scope: !1944)
!7488 = !DILocation(line: 384, column: 2, scope: !1944)
!7489 = !DILocation(line: 385, column: 13, scope: !1944)
!7490 = !DILocation(line: 385, column: 2, scope: !1944)
!7491 = !DILocation(line: 387, column: 1, scope: !1944)
!7492 = distinct !DISubprogram(name: "draw_wire_bone_segments", scope: !3, file: !3, line: 1206, type: !7493, scopeLine: 1207, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1930)
!7493 = !DISubroutineType(types: !7494)
!7494 = !{null, !3717, !5843, !375, !417}
!7495 = !DILocalVariable(name: "pchan", arg: 1, scope: !7492, file: !3, line: 1206, type: !3717)
!7496 = !DILocation(line: 1206, column: 51, scope: !7492)
!7497 = !DILocalVariable(name: "bbones", arg: 2, scope: !7492, file: !3, line: 1206, type: !5843)
!7498 = !DILocation(line: 1206, column: 64, scope: !7492)
!7499 = !DILocalVariable(name: "length", arg: 3, scope: !7492, file: !3, line: 1206, type: !375)
!7500 = !DILocation(line: 1206, column: 78, scope: !7492)
!7501 = !DILocalVariable(name: "segments", arg: 4, scope: !7492, file: !3, line: 1206, type: !417)
!7502 = !DILocation(line: 1206, column: 90, scope: !7492)
!7503 = !DILocation(line: 1208, column: 7, scope: !7504)
!7504 = distinct !DILexicalBlock(scope: !7492, file: !3, line: 1208, column: 6)
!7505 = !DILocation(line: 1208, column: 16, scope: !7504)
!7506 = !DILocation(line: 1208, column: 21, scope: !7504)
!7507 = !DILocation(line: 1208, column: 25, scope: !7504)
!7508 = !DILocation(line: 1208, column: 24, scope: !7504)
!7509 = !DILocation(line: 1208, column: 6, scope: !7492)
!7510 = !DILocalVariable(name: "dlen", scope: !7511, file: !3, line: 1209, type: !375)
!7511 = distinct !DILexicalBlock(scope: !7504, file: !3, line: 1208, column: 33)
!7512 = !DILocation(line: 1209, column: 9, scope: !7511)
!7513 = !DILocation(line: 1209, column: 16, scope: !7511)
!7514 = !DILocation(line: 1209, column: 32, scope: !7511)
!7515 = !DILocation(line: 1209, column: 25, scope: !7511)
!7516 = !DILocation(line: 1209, column: 23, scope: !7511)
!7517 = !DILocalVariable(name: "bbone", scope: !7511, file: !3, line: 1210, type: !5843)
!7518 = !DILocation(line: 1210, column: 9, scope: !7511)
!7519 = !DILocation(line: 1210, column: 17, scope: !7511)
!7520 = !DILocalVariable(name: "a", scope: !7511, file: !3, line: 1211, type: !417)
!7521 = !DILocation(line: 1211, column: 7, scope: !7511)
!7522 = !DILocation(line: 1213, column: 10, scope: !7523)
!7523 = distinct !DILexicalBlock(scope: !7511, file: !3, line: 1213, column: 3)
!7524 = !DILocation(line: 1213, column: 8, scope: !7523)
!7525 = !DILocation(line: 1213, column: 15, scope: !7526)
!7526 = distinct !DILexicalBlock(scope: !7523, file: !3, line: 1213, column: 3)
!7527 = !DILocation(line: 1213, column: 19, scope: !7526)
!7528 = !DILocation(line: 1213, column: 17, scope: !7526)
!7529 = !DILocation(line: 1213, column: 3, scope: !7523)
!7530 = !DILocation(line: 1214, column: 4, scope: !7531)
!7531 = distinct !DILexicalBlock(scope: !7526, file: !3, line: 1213, column: 43)
!7532 = !DILocation(line: 1215, column: 4, scope: !7531)
!7533 = !DILocation(line: 1217, column: 4, scope: !7531)
!7534 = !DILocation(line: 1218, column: 4, scope: !7531)
!7535 = !DILocation(line: 1219, column: 21, scope: !7531)
!7536 = !DILocation(line: 1219, column: 4, scope: !7531)
!7537 = !DILocation(line: 1220, column: 4, scope: !7531)
!7538 = !DILocation(line: 1222, column: 4, scope: !7531)
!7539 = !DILocation(line: 1223, column: 3, scope: !7531)
!7540 = !DILocation(line: 1213, column: 30, scope: !7526)
!7541 = !DILocation(line: 1213, column: 39, scope: !7526)
!7542 = !DILocation(line: 1213, column: 3, scope: !7526)
!7543 = distinct !{!7543, !7529, !7544}
!7544 = !DILocation(line: 1223, column: 3, scope: !7523)
!7545 = !DILocation(line: 1224, column: 2, scope: !7511)
!7546 = !DILocation(line: 1226, column: 3, scope: !7547)
!7547 = distinct !DILexicalBlock(scope: !7504, file: !3, line: 1225, column: 7)
!7548 = !DILocation(line: 1228, column: 3, scope: !7547)
!7549 = !DILocation(line: 1229, column: 3, scope: !7547)
!7550 = !DILocation(line: 1230, column: 20, scope: !7547)
!7551 = !DILocation(line: 1230, column: 3, scope: !7547)
!7552 = !DILocation(line: 1231, column: 3, scope: !7547)
!7553 = !DILocation(line: 1233, column: 3, scope: !7547)
!7554 = !DILocation(line: 1235, column: 1, scope: !7492)
!7555 = !DILocation(line: 513, column: 6, scope: !7556)
!7556 = distinct !DILexicalBlock(scope: !1947, file: !3, line: 513, column: 6)
!7557 = !DILocation(line: 513, column: 15, scope: !7556)
!7558 = !DILocation(line: 513, column: 6, scope: !1947)
!7559 = !DILocalVariable(name: "i", scope: !7560, file: !3, line: 514, type: !417)
!7560 = distinct !DILexicalBlock(scope: !7556, file: !3, line: 513, column: 21)
!7561 = !DILocation(line: 514, column: 7, scope: !7560)
!7562 = !DILocation(line: 516, column: 14, scope: !7560)
!7563 = !DILocation(line: 516, column: 12, scope: !7560)
!7564 = !DILocation(line: 517, column: 13, scope: !7560)
!7565 = !DILocation(line: 517, column: 3, scope: !7560)
!7566 = !DILocation(line: 520, column: 3, scope: !7560)
!7567 = !DILocation(line: 521, column: 10, scope: !7568)
!7568 = distinct !DILexicalBlock(scope: !7560, file: !3, line: 521, column: 3)
!7569 = !DILocation(line: 521, column: 8, scope: !7568)
!7570 = !DILocation(line: 521, column: 15, scope: !7571)
!7571 = distinct !DILexicalBlock(scope: !7568, file: !3, line: 521, column: 3)
!7572 = !DILocation(line: 521, column: 17, scope: !7571)
!7573 = !DILocation(line: 521, column: 3, scope: !7568)
!7574 = !DILocation(line: 522, column: 46, scope: !7575)
!7575 = distinct !DILexicalBlock(scope: !7571, file: !3, line: 521, column: 27)
!7576 = !DILocation(line: 522, column: 16, scope: !7575)
!7577 = !DILocation(line: 522, column: 4, scope: !7575)
!7578 = !DILocation(line: 523, column: 65, scope: !7575)
!7579 = !DILocation(line: 523, column: 38, scope: !7575)
!7580 = !DILocation(line: 523, column: 16, scope: !7575)
!7581 = !DILocation(line: 523, column: 4, scope: !7575)
!7582 = !DILocation(line: 524, column: 65, scope: !7575)
!7583 = !DILocation(line: 524, column: 38, scope: !7575)
!7584 = !DILocation(line: 524, column: 16, scope: !7575)
!7585 = !DILocation(line: 524, column: 4, scope: !7575)
!7586 = !DILocation(line: 525, column: 65, scope: !7575)
!7587 = !DILocation(line: 525, column: 38, scope: !7575)
!7588 = !DILocation(line: 525, column: 16, scope: !7575)
!7589 = !DILocation(line: 525, column: 4, scope: !7575)
!7590 = !DILocation(line: 526, column: 3, scope: !7575)
!7591 = !DILocation(line: 521, column: 23, scope: !7571)
!7592 = !DILocation(line: 521, column: 3, scope: !7571)
!7593 = distinct !{!7593, !7573, !7594}
!7594 = !DILocation(line: 526, column: 3, scope: !7568)
!7595 = !DILocation(line: 528, column: 3, scope: !7560)
!7596 = !DILocation(line: 541, column: 3, scope: !7560)
!7597 = !DILocation(line: 542, column: 2, scope: !7560)
!7598 = !DILocation(line: 544, column: 13, scope: !1947)
!7599 = !DILocation(line: 544, column: 2, scope: !1947)
!7600 = !DILocation(line: 545, column: 1, scope: !1947)
!7601 = !DILocation(line: 484, column: 6, scope: !7602)
!7602 = distinct !DILexicalBlock(scope: !1960, file: !3, line: 484, column: 6)
!7603 = !DILocation(line: 484, column: 15, scope: !7602)
!7604 = !DILocation(line: 484, column: 6, scope: !1960)
!7605 = !DILocation(line: 485, column: 14, scope: !7606)
!7606 = distinct !DILexicalBlock(scope: !7602, file: !3, line: 484, column: 21)
!7607 = !DILocation(line: 485, column: 12, scope: !7606)
!7608 = !DILocation(line: 486, column: 13, scope: !7606)
!7609 = !DILocation(line: 486, column: 3, scope: !7606)
!7610 = !DILocation(line: 489, column: 3, scope: !7606)
!7611 = !DILocation(line: 490, column: 3, scope: !7606)
!7612 = !DILocation(line: 491, column: 3, scope: !7606)
!7613 = !DILocation(line: 497, column: 3, scope: !7606)
!7614 = !DILocation(line: 501, column: 3, scope: !7606)
!7615 = !DILocation(line: 503, column: 3, scope: !7606)
!7616 = !DILocation(line: 504, column: 2, scope: !7606)
!7617 = !DILocation(line: 506, column: 13, scope: !1960)
!7618 = !DILocation(line: 506, column: 2, scope: !1960)
!7619 = !DILocation(line: 507, column: 1, scope: !1960)
!7620 = distinct !DISubprogram(name: "copy_v3_v3", scope: !4954, file: !4954, line: 64, type: !7621, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1930)
!7621 = !DISubroutineType(types: !7622)
!7622 = !{null, !374, !4957}
!7623 = !DILocalVariable(name: "r", arg: 1, scope: !7620, file: !4954, line: 64, type: !374)
!7624 = !DILocation(line: 64, column: 31, scope: !7620)
!7625 = !DILocalVariable(name: "a", arg: 2, scope: !7620, file: !4954, line: 64, type: !4957)
!7626 = !DILocation(line: 64, column: 49, scope: !7620)
!7627 = !DILocation(line: 66, column: 9, scope: !7620)
!7628 = !DILocation(line: 66, column: 2, scope: !7620)
!7629 = !DILocation(line: 66, column: 7, scope: !7620)
!7630 = !DILocation(line: 67, column: 9, scope: !7620)
!7631 = !DILocation(line: 67, column: 2, scope: !7620)
!7632 = !DILocation(line: 67, column: 7, scope: !7620)
!7633 = !DILocation(line: 68, column: 9, scope: !7620)
!7634 = !DILocation(line: 68, column: 2, scope: !7620)
!7635 = !DILocation(line: 68, column: 7, scope: !7620)
!7636 = !DILocation(line: 69, column: 1, scope: !7620)
!7637 = distinct !DISubprogram(name: "mul_v3_fl", scope: !4954, file: !4954, line: 392, type: !7638, scopeLine: 393, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1930)
!7638 = !DISubroutineType(types: !7639)
!7639 = !{null, !374, !375}
!7640 = !DILocalVariable(name: "r", arg: 1, scope: !7637, file: !4954, line: 392, type: !374)
!7641 = !DILocation(line: 392, column: 30, scope: !7637)
!7642 = !DILocalVariable(name: "f", arg: 2, scope: !7637, file: !4954, line: 392, type: !375)
!7643 = !DILocation(line: 392, column: 42, scope: !7637)
!7644 = !DILocation(line: 394, column: 10, scope: !7637)
!7645 = !DILocation(line: 394, column: 2, scope: !7637)
!7646 = !DILocation(line: 394, column: 7, scope: !7637)
!7647 = !DILocation(line: 395, column: 10, scope: !7637)
!7648 = !DILocation(line: 395, column: 2, scope: !7637)
!7649 = !DILocation(line: 395, column: 7, scope: !7637)
!7650 = !DILocation(line: 396, column: 10, scope: !7637)
!7651 = !DILocation(line: 396, column: 2, scope: !7637)
!7652 = !DILocation(line: 396, column: 7, scope: !7637)
!7653 = !DILocation(line: 397, column: 1, scope: !7637)
!7654 = distinct !DISubprogram(name: "add_v3_v3v3", scope: !4954, file: !4954, line: 309, type: !6540, scopeLine: 310, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1930)
!7655 = !DILocalVariable(name: "r", arg: 1, scope: !7654, file: !4954, line: 309, type: !374)
!7656 = !DILocation(line: 309, column: 32, scope: !7654)
!7657 = !DILocalVariable(name: "a", arg: 2, scope: !7654, file: !4954, line: 309, type: !4957)
!7658 = !DILocation(line: 309, column: 50, scope: !7654)
!7659 = !DILocalVariable(name: "b", arg: 3, scope: !7654, file: !4954, line: 309, type: !4957)
!7660 = !DILocation(line: 309, column: 68, scope: !7654)
!7661 = !DILocation(line: 311, column: 9, scope: !7654)
!7662 = !DILocation(line: 311, column: 16, scope: !7654)
!7663 = !DILocation(line: 311, column: 14, scope: !7654)
!7664 = !DILocation(line: 311, column: 2, scope: !7654)
!7665 = !DILocation(line: 311, column: 7, scope: !7654)
!7666 = !DILocation(line: 312, column: 9, scope: !7654)
!7667 = !DILocation(line: 312, column: 16, scope: !7654)
!7668 = !DILocation(line: 312, column: 14, scope: !7654)
!7669 = !DILocation(line: 312, column: 2, scope: !7654)
!7670 = !DILocation(line: 312, column: 7, scope: !7654)
!7671 = !DILocation(line: 313, column: 9, scope: !7654)
!7672 = !DILocation(line: 313, column: 16, scope: !7654)
!7673 = !DILocation(line: 313, column: 14, scope: !7654)
!7674 = !DILocation(line: 313, column: 2, scope: !7654)
!7675 = !DILocation(line: 313, column: 7, scope: !7654)
!7676 = !DILocation(line: 314, column: 1, scope: !7654)
!7677 = distinct !DISubprogram(name: "add_v3_v3", scope: !4954, file: !4954, line: 302, type: !7621, scopeLine: 303, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1930)
!7678 = !DILocalVariable(name: "r", arg: 1, scope: !7677, file: !4954, line: 302, type: !374)
!7679 = !DILocation(line: 302, column: 30, scope: !7677)
!7680 = !DILocalVariable(name: "a", arg: 2, scope: !7677, file: !4954, line: 302, type: !4957)
!7681 = !DILocation(line: 302, column: 48, scope: !7677)
!7682 = !DILocation(line: 304, column: 10, scope: !7677)
!7683 = !DILocation(line: 304, column: 2, scope: !7677)
!7684 = !DILocation(line: 304, column: 7, scope: !7677)
!7685 = !DILocation(line: 305, column: 10, scope: !7677)
!7686 = !DILocation(line: 305, column: 2, scope: !7677)
!7687 = !DILocation(line: 305, column: 7, scope: !7677)
!7688 = !DILocation(line: 306, column: 10, scope: !7677)
!7689 = !DILocation(line: 306, column: 2, scope: !7677)
!7690 = !DILocation(line: 306, column: 7, scope: !7677)
!7691 = !DILocation(line: 307, column: 1, scope: !7677)
!7692 = distinct !DISubprogram(name: "ghost_poses_tag_unselected", scope: !3, file: !3, line: 2334, type: !7693, scopeLine: 2335, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1930)
!7693 = !DISubroutineType(types: !7694)
!7694 = !{null, !2165, !415}
!7695 = !DILocalVariable(name: "ob", arg: 1, scope: !7692, file: !3, line: 2334, type: !2165)
!7696 = !DILocation(line: 2334, column: 48, scope: !7692)
!7697 = !DILocalVariable(name: "unset", arg: 2, scope: !7692, file: !3, line: 2334, type: !415)
!7698 = !DILocation(line: 2334, column: 58, scope: !7692)
!7699 = !DILocalVariable(name: "arm", scope: !7692, file: !3, line: 2336, type: !376)
!7700 = !DILocation(line: 2336, column: 13, scope: !7692)
!7701 = !DILocation(line: 2336, column: 19, scope: !7692)
!7702 = !DILocation(line: 2336, column: 23, scope: !7692)
!7703 = !DILocalVariable(name: "pose", scope: !7692, file: !3, line: 2337, type: !2995)
!7704 = !DILocation(line: 2337, column: 9, scope: !7692)
!7705 = !DILocation(line: 2337, column: 16, scope: !7692)
!7706 = !DILocation(line: 2337, column: 20, scope: !7692)
!7707 = !DILocalVariable(name: "pchan", scope: !7692, file: !3, line: 2338, type: !3717)
!7708 = !DILocation(line: 2338, column: 16, scope: !7692)
!7709 = !DILocation(line: 2341, column: 7, scope: !7710)
!7710 = distinct !DILexicalBlock(scope: !7692, file: !3, line: 2341, column: 6)
!7711 = !DILocation(line: 2341, column: 12, scope: !7710)
!7712 = !DILocation(line: 2341, column: 17, scope: !7710)
!7713 = !DILocation(line: 2341, column: 38, scope: !7710)
!7714 = !DILocation(line: 2341, column: 6, scope: !7692)
!7715 = !DILocation(line: 2342, column: 3, scope: !7710)
!7716 = !DILocation(line: 2345, column: 15, scope: !7717)
!7717 = distinct !DILexicalBlock(scope: !7692, file: !3, line: 2345, column: 2)
!7718 = !DILocation(line: 2345, column: 21, scope: !7717)
!7719 = !DILocation(line: 2345, column: 30, scope: !7717)
!7720 = !DILocation(line: 2345, column: 13, scope: !7717)
!7721 = !DILocation(line: 2345, column: 7, scope: !7717)
!7722 = !DILocation(line: 2345, column: 37, scope: !7723)
!7723 = distinct !DILexicalBlock(scope: !7717, file: !3, line: 2345, column: 2)
!7724 = !DILocation(line: 2345, column: 2, scope: !7717)
!7725 = !DILocation(line: 2346, column: 8, scope: !7726)
!7726 = distinct !DILexicalBlock(scope: !7727, file: !3, line: 2346, column: 7)
!7727 = distinct !DILexicalBlock(scope: !7723, file: !3, line: 2345, column: 65)
!7728 = !DILocation(line: 2346, column: 15, scope: !7726)
!7729 = !DILocation(line: 2346, column: 7, scope: !7726)
!7730 = !DILocation(line: 2346, column: 21, scope: !7726)
!7731 = !DILocation(line: 2346, column: 25, scope: !7726)
!7732 = !DILocation(line: 2346, column: 30, scope: !7726)
!7733 = !DILocation(line: 2346, column: 38, scope: !7726)
!7734 = !DILocation(line: 2346, column: 45, scope: !7726)
!7735 = !DILocation(line: 2346, column: 51, scope: !7726)
!7736 = !DILocation(line: 2346, column: 36, scope: !7726)
!7737 = !DILocation(line: 2346, column: 7, scope: !7727)
!7738 = !DILocation(line: 2347, column: 8, scope: !7739)
!7739 = distinct !DILexicalBlock(scope: !7740, file: !3, line: 2347, column: 8)
!7740 = distinct !DILexicalBlock(scope: !7726, file: !3, line: 2346, column: 59)
!7741 = !DILocation(line: 2347, column: 8, scope: !7740)
!7742 = !DILocation(line: 2349, column: 5, scope: !7743)
!7743 = distinct !DILexicalBlock(scope: !7739, file: !3, line: 2347, column: 15)
!7744 = !DILocation(line: 2349, column: 12, scope: !7743)
!7745 = !DILocation(line: 2349, column: 18, scope: !7743)
!7746 = !DILocation(line: 2349, column: 23, scope: !7743)
!7747 = !DILocation(line: 2350, column: 4, scope: !7743)
!7748 = !DILocation(line: 2353, column: 10, scope: !7749)
!7749 = distinct !DILexicalBlock(scope: !7750, file: !3, line: 2353, column: 9)
!7750 = distinct !DILexicalBlock(scope: !7739, file: !3, line: 2351, column: 9)
!7751 = !DILocation(line: 2353, column: 17, scope: !7749)
!7752 = !DILocation(line: 2353, column: 23, scope: !7749)
!7753 = !DILocation(line: 2353, column: 28, scope: !7749)
!7754 = !DILocation(line: 2353, column: 45, scope: !7749)
!7755 = !DILocation(line: 2353, column: 9, scope: !7750)
!7756 = !DILocation(line: 2354, column: 6, scope: !7749)
!7757 = !DILocation(line: 2354, column: 13, scope: !7749)
!7758 = !DILocation(line: 2354, column: 19, scope: !7749)
!7759 = !DILocation(line: 2354, column: 24, scope: !7749)
!7760 = !DILocation(line: 2356, column: 3, scope: !7740)
!7761 = !DILocation(line: 2357, column: 2, scope: !7727)
!7762 = !DILocation(line: 2345, column: 52, scope: !7723)
!7763 = !DILocation(line: 2345, column: 59, scope: !7723)
!7764 = !DILocation(line: 2345, column: 50, scope: !7723)
!7765 = !DILocation(line: 2345, column: 2, scope: !7723)
!7766 = distinct !{!7766, !7724, !7767}
!7767 = !DILocation(line: 2357, column: 2, scope: !7717)
!7768 = !DILocation(line: 2358, column: 1, scope: !7692)
!7769 = distinct !DISubprogram(name: "set_pchan_colorset", scope: !3, file: !3, line: 89, type: !7770, scopeLine: 90, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1930)
!7770 = !DISubroutineType(types: !7771)
!7771 = !{null, !2165, !3717}
!7772 = !DILocalVariable(name: "ob", arg: 1, scope: !7769, file: !3, line: 89, type: !2165)
!7773 = !DILocation(line: 89, column: 40, scope: !7769)
!7774 = !DILocalVariable(name: "pchan", arg: 2, scope: !7769, file: !3, line: 89, type: !3717)
!7775 = !DILocation(line: 89, column: 58, scope: !7769)
!7776 = !DILocalVariable(name: "pose", scope: !7769, file: !3, line: 91, type: !2995)
!7777 = !DILocation(line: 91, column: 9, scope: !7769)
!7778 = !DILocation(line: 91, column: 17, scope: !7769)
!7779 = !DILocation(line: 91, column: 16, scope: !7769)
!7780 = !DILocation(line: 91, column: 23, scope: !7769)
!7781 = !DILocation(line: 91, column: 27, scope: !7769)
!7782 = !DILocalVariable(name: "arm", scope: !7769, file: !3, line: 92, type: !376)
!7783 = !DILocation(line: 92, column: 13, scope: !7769)
!7784 = !DILocation(line: 92, column: 20, scope: !7769)
!7785 = !DILocation(line: 92, column: 19, scope: !7769)
!7786 = !DILocation(line: 92, column: 26, scope: !7769)
!7787 = !DILocation(line: 92, column: 30, scope: !7769)
!7788 = !DILocalVariable(name: "grp", scope: !7769, file: !3, line: 93, type: !623)
!7789 = !DILocation(line: 93, column: 16, scope: !7769)
!7790 = !DILocalVariable(name: "color_index", scope: !7769, file: !3, line: 94, type: !415)
!7791 = !DILocation(line: 94, column: 8, scope: !7769)
!7792 = !DILocation(line: 97, column: 6, scope: !7793)
!7793 = distinct !DILexicalBlock(scope: !7769, file: !3, line: 97, column: 6)
!7794 = !DILocation(line: 97, column: 6, scope: !7769)
!7795 = !DILocation(line: 98, column: 10, scope: !7796)
!7796 = distinct !DILexicalBlock(scope: !7793, file: !3, line: 97, column: 40)
!7797 = !DILocation(line: 99, column: 3, scope: !7796)
!7798 = !DILocation(line: 103, column: 6, scope: !7799)
!7799 = distinct !DILexicalBlock(scope: !7769, file: !3, line: 103, column: 6)
!7800 = !DILocation(line: 103, column: 11, scope: !7799)
!7801 = !DILocation(line: 103, column: 16, scope: !7799)
!7802 = !DILocation(line: 103, column: 6, scope: !7769)
!7803 = !DILocation(line: 107, column: 7, scope: !7804)
!7804 = distinct !DILexicalBlock(scope: !7805, file: !3, line: 107, column: 7)
!7805 = distinct !DILexicalBlock(scope: !7799, file: !3, line: 103, column: 34)
!7806 = !DILocation(line: 107, column: 14, scope: !7804)
!7807 = !DILocation(line: 107, column: 7, scope: !7805)
!7808 = !DILocation(line: 108, column: 40, scope: !7809)
!7809 = distinct !DILexicalBlock(scope: !7804, file: !3, line: 107, column: 26)
!7810 = !DILocation(line: 108, column: 46, scope: !7809)
!7811 = !DILocation(line: 108, column: 56, scope: !7809)
!7812 = !DILocation(line: 108, column: 63, scope: !7809)
!7813 = !DILocation(line: 108, column: 74, scope: !7809)
!7814 = !DILocation(line: 108, column: 26, scope: !7809)
!7815 = !DILocation(line: 108, column: 10, scope: !7809)
!7816 = !DILocation(line: 108, column: 8, scope: !7809)
!7817 = !DILocation(line: 109, column: 8, scope: !7818)
!7818 = distinct !DILexicalBlock(scope: !7809, file: !3, line: 109, column: 8)
!7819 = !DILocation(line: 109, column: 8, scope: !7809)
!7820 = !DILocation(line: 110, column: 19, scope: !7818)
!7821 = !DILocation(line: 110, column: 24, scope: !7818)
!7822 = !DILocation(line: 110, column: 17, scope: !7818)
!7823 = !DILocation(line: 110, column: 5, scope: !7818)
!7824 = !DILocation(line: 111, column: 3, scope: !7809)
!7825 = !DILocation(line: 112, column: 2, scope: !7805)
!7826 = !DILocation(line: 117, column: 6, scope: !7827)
!7827 = distinct !DILexicalBlock(scope: !7769, file: !3, line: 117, column: 6)
!7828 = !DILocation(line: 117, column: 18, scope: !7827)
!7829 = !DILocation(line: 117, column: 6, scope: !7769)
!7830 = !DILocalVariable(name: "btheme", scope: !7831, file: !3, line: 118, type: !7832)
!7831 = distinct !DILexicalBlock(scope: !7827, file: !3, line: 117, column: 23)
!7832 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7833, size: 64)
!7833 = !DIDerivedType(tag: DW_TAG_typedef, name: "bTheme", file: !317, line: 387, baseType: !7834)
!7834 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bTheme", file: !317, line: 356, size: 108224, elements: !7835)
!7835 = !{!7836, !7838, !7839, !7840, !7905, !8094, !8095, !8096, !8097, !8098, !8099, !8100, !8101, !8102, !8103, !8104, !8105, !8106, !8107, !8108, !8109, !8110, !8114, !8115}
!7836 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !7834, file: !317, line: 357, baseType: !7837, size: 64)
!7837 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7834, size: 64)
!7838 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !7834, file: !317, line: 357, baseType: !7837, size: 64, offset: 64)
!7839 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !7834, file: !317, line: 358, baseType: !1513, size: 256, offset: 128)
!7840 = !DIDerivedType(tag: DW_TAG_member, name: "tui", scope: !7834, file: !317, line: 360, baseType: !7841, size: 7296, offset: 384)
!7841 = !DIDerivedType(tag: DW_TAG_typedef, name: "ThemeUI", file: !317, line: 184, baseType: !7842)
!7842 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ThemeUI", file: !317, line: 159, size: 7296, elements: !7843)
!7843 = !{!7844, !7858, !7859, !7860, !7861, !7862, !7863, !7864, !7865, !7866, !7867, !7868, !7869, !7870, !7871, !7872, !7873, !7874, !7875, !7887, !7896, !7897, !7898, !7899, !7900, !7901, !7902, !7903, !7904}
!7844 = !DIDerivedType(tag: DW_TAG_member, name: "wcol_regular", scope: !7842, file: !317, line: 161, baseType: !7845, size: 256)
!7845 = !DIDerivedType(tag: DW_TAG_typedef, name: "uiWidgetColors", file: !317, line: 132, baseType: !7846)
!7846 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uiWidgetColors", file: !317, line: 122, size: 256, elements: !7847)
!7847 = !{!7848, !7849, !7850, !7851, !7852, !7853, !7854, !7855, !7856, !7857}
!7848 = !DIDerivedType(tag: DW_TAG_member, name: "outline", scope: !7846, file: !317, line: 123, baseType: !639, size: 32)
!7849 = !DIDerivedType(tag: DW_TAG_member, name: "inner", scope: !7846, file: !317, line: 124, baseType: !639, size: 32, offset: 32)
!7850 = !DIDerivedType(tag: DW_TAG_member, name: "inner_sel", scope: !7846, file: !317, line: 125, baseType: !639, size: 32, offset: 64)
!7851 = !DIDerivedType(tag: DW_TAG_member, name: "item", scope: !7846, file: !317, line: 126, baseType: !639, size: 32, offset: 96)
!7852 = !DIDerivedType(tag: DW_TAG_member, name: "text", scope: !7846, file: !317, line: 127, baseType: !639, size: 32, offset: 128)
!7853 = !DIDerivedType(tag: DW_TAG_member, name: "text_sel", scope: !7846, file: !317, line: 128, baseType: !639, size: 32, offset: 160)
!7854 = !DIDerivedType(tag: DW_TAG_member, name: "shaded", scope: !7846, file: !317, line: 129, baseType: !415, size: 16, offset: 192)
!7855 = !DIDerivedType(tag: DW_TAG_member, name: "shadetop", scope: !7846, file: !317, line: 130, baseType: !415, size: 16, offset: 208)
!7856 = !DIDerivedType(tag: DW_TAG_member, name: "shadedown", scope: !7846, file: !317, line: 130, baseType: !415, size: 16, offset: 224)
!7857 = !DIDerivedType(tag: DW_TAG_member, name: "alpha_check", scope: !7846, file: !317, line: 131, baseType: !415, size: 16, offset: 240)
!7858 = !DIDerivedType(tag: DW_TAG_member, name: "wcol_tool", scope: !7842, file: !317, line: 161, baseType: !7845, size: 256, offset: 256)
!7859 = !DIDerivedType(tag: DW_TAG_member, name: "wcol_text", scope: !7842, file: !317, line: 161, baseType: !7845, size: 256, offset: 512)
!7860 = !DIDerivedType(tag: DW_TAG_member, name: "wcol_radio", scope: !7842, file: !317, line: 162, baseType: !7845, size: 256, offset: 768)
!7861 = !DIDerivedType(tag: DW_TAG_member, name: "wcol_option", scope: !7842, file: !317, line: 162, baseType: !7845, size: 256, offset: 1024)
!7862 = !DIDerivedType(tag: DW_TAG_member, name: "wcol_toggle", scope: !7842, file: !317, line: 162, baseType: !7845, size: 256, offset: 1280)
!7863 = !DIDerivedType(tag: DW_TAG_member, name: "wcol_num", scope: !7842, file: !317, line: 163, baseType: !7845, size: 256, offset: 1536)
!7864 = !DIDerivedType(tag: DW_TAG_member, name: "wcol_numslider", scope: !7842, file: !317, line: 163, baseType: !7845, size: 256, offset: 1792)
!7865 = !DIDerivedType(tag: DW_TAG_member, name: "wcol_menu", scope: !7842, file: !317, line: 164, baseType: !7845, size: 256, offset: 2048)
!7866 = !DIDerivedType(tag: DW_TAG_member, name: "wcol_pulldown", scope: !7842, file: !317, line: 164, baseType: !7845, size: 256, offset: 2304)
!7867 = !DIDerivedType(tag: DW_TAG_member, name: "wcol_menu_back", scope: !7842, file: !317, line: 164, baseType: !7845, size: 256, offset: 2560)
!7868 = !DIDerivedType(tag: DW_TAG_member, name: "wcol_menu_item", scope: !7842, file: !317, line: 164, baseType: !7845, size: 256, offset: 2816)
!7869 = !DIDerivedType(tag: DW_TAG_member, name: "wcol_tooltip", scope: !7842, file: !317, line: 164, baseType: !7845, size: 256, offset: 3072)
!7870 = !DIDerivedType(tag: DW_TAG_member, name: "wcol_box", scope: !7842, file: !317, line: 165, baseType: !7845, size: 256, offset: 3328)
!7871 = !DIDerivedType(tag: DW_TAG_member, name: "wcol_scroll", scope: !7842, file: !317, line: 165, baseType: !7845, size: 256, offset: 3584)
!7872 = !DIDerivedType(tag: DW_TAG_member, name: "wcol_progress", scope: !7842, file: !317, line: 165, baseType: !7845, size: 256, offset: 3840)
!7873 = !DIDerivedType(tag: DW_TAG_member, name: "wcol_list_item", scope: !7842, file: !317, line: 165, baseType: !7845, size: 256, offset: 4096)
!7874 = !DIDerivedType(tag: DW_TAG_member, name: "wcol_pie_menu", scope: !7842, file: !317, line: 165, baseType: !7845, size: 256, offset: 4352)
!7875 = !DIDerivedType(tag: DW_TAG_member, name: "wcol_state", scope: !7842, file: !317, line: 167, baseType: !7876, size: 256, offset: 4608)
!7876 = !DIDerivedType(tag: DW_TAG_typedef, name: "uiWidgetStateColors", file: !317, line: 142, baseType: !7877)
!7877 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uiWidgetStateColors", file: !317, line: 134, size: 256, elements: !7878)
!7878 = !{!7879, !7880, !7881, !7882, !7883, !7884, !7885, !7886}
!7879 = !DIDerivedType(tag: DW_TAG_member, name: "inner_anim", scope: !7877, file: !317, line: 135, baseType: !639, size: 32)
!7880 = !DIDerivedType(tag: DW_TAG_member, name: "inner_anim_sel", scope: !7877, file: !317, line: 136, baseType: !639, size: 32, offset: 32)
!7881 = !DIDerivedType(tag: DW_TAG_member, name: "inner_key", scope: !7877, file: !317, line: 137, baseType: !639, size: 32, offset: 64)
!7882 = !DIDerivedType(tag: DW_TAG_member, name: "inner_key_sel", scope: !7877, file: !317, line: 138, baseType: !639, size: 32, offset: 96)
!7883 = !DIDerivedType(tag: DW_TAG_member, name: "inner_driven", scope: !7877, file: !317, line: 139, baseType: !639, size: 32, offset: 128)
!7884 = !DIDerivedType(tag: DW_TAG_member, name: "inner_driven_sel", scope: !7877, file: !317, line: 140, baseType: !639, size: 32, offset: 160)
!7885 = !DIDerivedType(tag: DW_TAG_member, name: "blend", scope: !7877, file: !317, line: 141, baseType: !375, size: 32, offset: 192)
!7886 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !7877, file: !317, line: 141, baseType: !375, size: 32, offset: 224)
!7887 = !DIDerivedType(tag: DW_TAG_member, name: "panel", scope: !7842, file: !317, line: 169, baseType: !7888, size: 128, offset: 4864)
!7888 = !DIDerivedType(tag: DW_TAG_typedef, name: "uiPanelColors", file: !317, line: 150, baseType: !7889)
!7889 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uiPanelColors", file: !317, line: 144, size: 128, elements: !7890)
!7890 = !{!7891, !7892, !7893, !7894, !7895}
!7891 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !7889, file: !317, line: 145, baseType: !639, size: 32)
!7892 = !DIDerivedType(tag: DW_TAG_member, name: "back", scope: !7889, file: !317, line: 146, baseType: !639, size: 32, offset: 32)
!7893 = !DIDerivedType(tag: DW_TAG_member, name: "show_header", scope: !7889, file: !317, line: 147, baseType: !415, size: 16, offset: 64)
!7894 = !DIDerivedType(tag: DW_TAG_member, name: "show_back", scope: !7889, file: !317, line: 148, baseType: !415, size: 16, offset: 80)
!7895 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !7889, file: !317, line: 149, baseType: !417, size: 32, offset: 96)
!7896 = !DIDerivedType(tag: DW_TAG_member, name: "emboss", scope: !7842, file: !317, line: 171, baseType: !639, size: 32, offset: 4992)
!7897 = !DIDerivedType(tag: DW_TAG_member, name: "menu_shadow_fac", scope: !7842, file: !317, line: 174, baseType: !375, size: 32, offset: 5024)
!7898 = !DIDerivedType(tag: DW_TAG_member, name: "menu_shadow_width", scope: !7842, file: !317, line: 175, baseType: !415, size: 16, offset: 5056)
!7899 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !7842, file: !317, line: 177, baseType: !1582, size: 48, offset: 5072)
!7900 = !DIDerivedType(tag: DW_TAG_member, name: "iconfile", scope: !7842, file: !317, line: 179, baseType: !1830, size: 2048, offset: 5120)
!7901 = !DIDerivedType(tag: DW_TAG_member, name: "icon_alpha", scope: !7842, file: !317, line: 180, baseType: !375, size: 32, offset: 7168)
!7902 = !DIDerivedType(tag: DW_TAG_member, name: "xaxis", scope: !7842, file: !317, line: 183, baseType: !639, size: 32, offset: 7200)
!7903 = !DIDerivedType(tag: DW_TAG_member, name: "yaxis", scope: !7842, file: !317, line: 183, baseType: !639, size: 32, offset: 7232)
!7904 = !DIDerivedType(tag: DW_TAG_member, name: "zaxis", scope: !7842, file: !317, line: 183, baseType: !639, size: 32, offset: 7264)
!7905 = !DIDerivedType(tag: DW_TAG_member, name: "tbuts", scope: !7834, file: !317, line: 364, baseType: !7906, size: 5760, offset: 7680)
!7906 = !DIDerivedType(tag: DW_TAG_typedef, name: "ThemeSpace", file: !317, line: 336, baseType: !7907)
!7907 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ThemeSpace", file: !317, line: 189, size: 5760, elements: !7908)
!7908 = !{!7909, !7910, !7911, !7912, !7913, !7914, !7915, !7916, !7917, !7918, !7919, !7920, !7921, !7922, !7923, !7924, !7925, !7926, !7927, !7928, !7929, !7930, !7938, !7939, !7940, !7941, !7942, !7943, !7944, !7945, !7946, !7947, !7948, !7949, !7950, !7951, !7952, !7953, !7954, !7955, !7956, !7957, !7958, !7959, !7960, !7961, !7962, !7963, !7964, !7965, !7966, !7967, !7968, !7969, !7970, !7971, !7972, !7973, !7974, !7975, !7976, !7977, !7978, !7979, !7980, !7981, !7982, !7983, !7984, !7985, !7986, !7987, !7988, !7989, !7990, !7991, !7992, !7993, !7994, !7995, !7996, !7997, !7998, !7999, !8000, !8001, !8002, !8003, !8004, !8005, !8006, !8007, !8008, !8009, !8010, !8011, !8012, !8013, !8014, !8015, !8016, !8017, !8018, !8019, !8020, !8021, !8022, !8023, !8024, !8025, !8026, !8027, !8028, !8029, !8030, !8031, !8032, !8033, !8034, !8035, !8036, !8037, !8038, !8039, !8040, !8041, !8042, !8043, !8044, !8045, !8046, !8047, !8048, !8049, !8050, !8051, !8052, !8053, !8054, !8055, !8056, !8057, !8058, !8059, !8060, !8061, !8062, !8063, !8064, !8065, !8066, !8067, !8068, !8069, !8070, !8071, !8072, !8073, !8074, !8075, !8076, !8077, !8078, !8079, !8080, !8081, !8082, !8083, !8084, !8085, !8086, !8087, !8088, !8089, !8090, !8091, !8092, !8093}
!7909 = !DIDerivedType(tag: DW_TAG_member, name: "back", scope: !7907, file: !317, line: 191, baseType: !639, size: 32)
!7910 = !DIDerivedType(tag: DW_TAG_member, name: "title", scope: !7907, file: !317, line: 192, baseType: !639, size: 32, offset: 32)
!7911 = !DIDerivedType(tag: DW_TAG_member, name: "text", scope: !7907, file: !317, line: 193, baseType: !639, size: 32, offset: 64)
!7912 = !DIDerivedType(tag: DW_TAG_member, name: "text_hi", scope: !7907, file: !317, line: 194, baseType: !639, size: 32, offset: 96)
!7913 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !7907, file: !317, line: 197, baseType: !639, size: 32, offset: 128)
!7914 = !DIDerivedType(tag: DW_TAG_member, name: "header_title", scope: !7907, file: !317, line: 198, baseType: !639, size: 32, offset: 160)
!7915 = !DIDerivedType(tag: DW_TAG_member, name: "header_text", scope: !7907, file: !317, line: 199, baseType: !639, size: 32, offset: 192)
!7916 = !DIDerivedType(tag: DW_TAG_member, name: "header_text_hi", scope: !7907, file: !317, line: 200, baseType: !639, size: 32, offset: 224)
!7917 = !DIDerivedType(tag: DW_TAG_member, name: "tab_active", scope: !7907, file: !317, line: 203, baseType: !639, size: 32, offset: 256)
!7918 = !DIDerivedType(tag: DW_TAG_member, name: "tab_inactive", scope: !7907, file: !317, line: 204, baseType: !639, size: 32, offset: 288)
!7919 = !DIDerivedType(tag: DW_TAG_member, name: "tab_back", scope: !7907, file: !317, line: 205, baseType: !639, size: 32, offset: 320)
!7920 = !DIDerivedType(tag: DW_TAG_member, name: "tab_outline", scope: !7907, file: !317, line: 206, baseType: !639, size: 32, offset: 352)
!7921 = !DIDerivedType(tag: DW_TAG_member, name: "button", scope: !7907, file: !317, line: 209, baseType: !639, size: 32, offset: 384)
!7922 = !DIDerivedType(tag: DW_TAG_member, name: "button_title", scope: !7907, file: !317, line: 210, baseType: !639, size: 32, offset: 416)
!7923 = !DIDerivedType(tag: DW_TAG_member, name: "button_text", scope: !7907, file: !317, line: 211, baseType: !639, size: 32, offset: 448)
!7924 = !DIDerivedType(tag: DW_TAG_member, name: "button_text_hi", scope: !7907, file: !317, line: 212, baseType: !639, size: 32, offset: 480)
!7925 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !7907, file: !317, line: 215, baseType: !639, size: 32, offset: 512)
!7926 = !DIDerivedType(tag: DW_TAG_member, name: "list_title", scope: !7907, file: !317, line: 216, baseType: !639, size: 32, offset: 544)
!7927 = !DIDerivedType(tag: DW_TAG_member, name: "list_text", scope: !7907, file: !317, line: 217, baseType: !639, size: 32, offset: 576)
!7928 = !DIDerivedType(tag: DW_TAG_member, name: "list_text_hi", scope: !7907, file: !317, line: 218, baseType: !639, size: 32, offset: 608)
!7929 = !DIDerivedType(tag: DW_TAG_member, name: "panelcolors", scope: !7907, file: !317, line: 227, baseType: !7888, size: 128, offset: 640)
!7930 = !DIDerivedType(tag: DW_TAG_member, name: "gradients", scope: !7907, file: !317, line: 229, baseType: !7931, size: 128, offset: 768)
!7931 = !DIDerivedType(tag: DW_TAG_typedef, name: "uiGradientColors", file: !317, line: 157, baseType: !7932)
!7932 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uiGradientColors", file: !317, line: 152, size: 128, elements: !7933)
!7933 = !{!7934, !7935, !7936, !7937}
!7934 = !DIDerivedType(tag: DW_TAG_member, name: "gradient", scope: !7932, file: !317, line: 153, baseType: !639, size: 32)
!7935 = !DIDerivedType(tag: DW_TAG_member, name: "high_gradient", scope: !7932, file: !317, line: 154, baseType: !639, size: 32, offset: 32)
!7936 = !DIDerivedType(tag: DW_TAG_member, name: "show_grad", scope: !7932, file: !317, line: 155, baseType: !417, size: 32, offset: 64)
!7937 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !7932, file: !317, line: 156, baseType: !417, size: 32, offset: 96)
!7938 = !DIDerivedType(tag: DW_TAG_member, name: "shade1", scope: !7907, file: !317, line: 231, baseType: !639, size: 32, offset: 896)
!7939 = !DIDerivedType(tag: DW_TAG_member, name: "shade2", scope: !7907, file: !317, line: 232, baseType: !639, size: 32, offset: 928)
!7940 = !DIDerivedType(tag: DW_TAG_member, name: "hilite", scope: !7907, file: !317, line: 234, baseType: !639, size: 32, offset: 960)
!7941 = !DIDerivedType(tag: DW_TAG_member, name: "grid", scope: !7907, file: !317, line: 235, baseType: !639, size: 32, offset: 992)
!7942 = !DIDerivedType(tag: DW_TAG_member, name: "view_overlay", scope: !7907, file: !317, line: 237, baseType: !639, size: 32, offset: 1024)
!7943 = !DIDerivedType(tag: DW_TAG_member, name: "wire", scope: !7907, file: !317, line: 239, baseType: !639, size: 32, offset: 1056)
!7944 = !DIDerivedType(tag: DW_TAG_member, name: "wire_edit", scope: !7907, file: !317, line: 239, baseType: !639, size: 32, offset: 1088)
!7945 = !DIDerivedType(tag: DW_TAG_member, name: "select", scope: !7907, file: !317, line: 239, baseType: !639, size: 32, offset: 1120)
!7946 = !DIDerivedType(tag: DW_TAG_member, name: "lamp", scope: !7907, file: !317, line: 240, baseType: !639, size: 32, offset: 1152)
!7947 = !DIDerivedType(tag: DW_TAG_member, name: "speaker", scope: !7907, file: !317, line: 240, baseType: !639, size: 32, offset: 1184)
!7948 = !DIDerivedType(tag: DW_TAG_member, name: "empty", scope: !7907, file: !317, line: 240, baseType: !639, size: 32, offset: 1216)
!7949 = !DIDerivedType(tag: DW_TAG_member, name: "camera", scope: !7907, file: !317, line: 240, baseType: !639, size: 32, offset: 1248)
!7950 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !7907, file: !317, line: 241, baseType: !639, size: 32, offset: 1280)
!7951 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !7907, file: !317, line: 241, baseType: !639, size: 32, offset: 1312)
!7952 = !DIDerivedType(tag: DW_TAG_member, name: "group_active", scope: !7907, file: !317, line: 241, baseType: !639, size: 32, offset: 1344)
!7953 = !DIDerivedType(tag: DW_TAG_member, name: "transform", scope: !7907, file: !317, line: 241, baseType: !639, size: 32, offset: 1376)
!7954 = !DIDerivedType(tag: DW_TAG_member, name: "vertex", scope: !7907, file: !317, line: 242, baseType: !639, size: 32, offset: 1408)
!7955 = !DIDerivedType(tag: DW_TAG_member, name: "vertex_select", scope: !7907, file: !317, line: 242, baseType: !639, size: 32, offset: 1440)
!7956 = !DIDerivedType(tag: DW_TAG_member, name: "vertex_unreferenced", scope: !7907, file: !317, line: 242, baseType: !639, size: 32, offset: 1472)
!7957 = !DIDerivedType(tag: DW_TAG_member, name: "edge", scope: !7907, file: !317, line: 243, baseType: !639, size: 32, offset: 1504)
!7958 = !DIDerivedType(tag: DW_TAG_member, name: "edge_select", scope: !7907, file: !317, line: 243, baseType: !639, size: 32, offset: 1536)
!7959 = !DIDerivedType(tag: DW_TAG_member, name: "edge_seam", scope: !7907, file: !317, line: 244, baseType: !639, size: 32, offset: 1568)
!7960 = !DIDerivedType(tag: DW_TAG_member, name: "edge_sharp", scope: !7907, file: !317, line: 244, baseType: !639, size: 32, offset: 1600)
!7961 = !DIDerivedType(tag: DW_TAG_member, name: "edge_facesel", scope: !7907, file: !317, line: 244, baseType: !639, size: 32, offset: 1632)
!7962 = !DIDerivedType(tag: DW_TAG_member, name: "edge_crease", scope: !7907, file: !317, line: 244, baseType: !639, size: 32, offset: 1664)
!7963 = !DIDerivedType(tag: DW_TAG_member, name: "face", scope: !7907, file: !317, line: 245, baseType: !639, size: 32, offset: 1696)
!7964 = !DIDerivedType(tag: DW_TAG_member, name: "face_select", scope: !7907, file: !317, line: 245, baseType: !639, size: 32, offset: 1728)
!7965 = !DIDerivedType(tag: DW_TAG_member, name: "face_dot", scope: !7907, file: !317, line: 246, baseType: !639, size: 32, offset: 1760)
!7966 = !DIDerivedType(tag: DW_TAG_member, name: "extra_edge_len", scope: !7907, file: !317, line: 247, baseType: !639, size: 32, offset: 1792)
!7967 = !DIDerivedType(tag: DW_TAG_member, name: "extra_edge_angle", scope: !7907, file: !317, line: 247, baseType: !639, size: 32, offset: 1824)
!7968 = !DIDerivedType(tag: DW_TAG_member, name: "extra_face_angle", scope: !7907, file: !317, line: 247, baseType: !639, size: 32, offset: 1856)
!7969 = !DIDerivedType(tag: DW_TAG_member, name: "extra_face_area", scope: !7907, file: !317, line: 247, baseType: !639, size: 32, offset: 1888)
!7970 = !DIDerivedType(tag: DW_TAG_member, name: "normal", scope: !7907, file: !317, line: 248, baseType: !639, size: 32, offset: 1920)
!7971 = !DIDerivedType(tag: DW_TAG_member, name: "vertex_normal", scope: !7907, file: !317, line: 249, baseType: !639, size: 32, offset: 1952)
!7972 = !DIDerivedType(tag: DW_TAG_member, name: "loop_normal", scope: !7907, file: !317, line: 250, baseType: !639, size: 32, offset: 1984)
!7973 = !DIDerivedType(tag: DW_TAG_member, name: "bone_solid", scope: !7907, file: !317, line: 251, baseType: !639, size: 32, offset: 2016)
!7974 = !DIDerivedType(tag: DW_TAG_member, name: "bone_pose", scope: !7907, file: !317, line: 251, baseType: !639, size: 32, offset: 2048)
!7975 = !DIDerivedType(tag: DW_TAG_member, name: "bone_pose_active", scope: !7907, file: !317, line: 251, baseType: !639, size: 32, offset: 2080)
!7976 = !DIDerivedType(tag: DW_TAG_member, name: "strip", scope: !7907, file: !317, line: 252, baseType: !639, size: 32, offset: 2112)
!7977 = !DIDerivedType(tag: DW_TAG_member, name: "strip_select", scope: !7907, file: !317, line: 252, baseType: !639, size: 32, offset: 2144)
!7978 = !DIDerivedType(tag: DW_TAG_member, name: "cframe", scope: !7907, file: !317, line: 253, baseType: !639, size: 32, offset: 2176)
!7979 = !DIDerivedType(tag: DW_TAG_member, name: "freestyle_edge_mark", scope: !7907, file: !317, line: 254, baseType: !639, size: 32, offset: 2208)
!7980 = !DIDerivedType(tag: DW_TAG_member, name: "freestyle_face_mark", scope: !7907, file: !317, line: 254, baseType: !639, size: 32, offset: 2240)
!7981 = !DIDerivedType(tag: DW_TAG_member, name: "nurb_uline", scope: !7907, file: !317, line: 256, baseType: !639, size: 32, offset: 2272)
!7982 = !DIDerivedType(tag: DW_TAG_member, name: "nurb_vline", scope: !7907, file: !317, line: 256, baseType: !639, size: 32, offset: 2304)
!7983 = !DIDerivedType(tag: DW_TAG_member, name: "act_spline", scope: !7907, file: !317, line: 257, baseType: !639, size: 32, offset: 2336)
!7984 = !DIDerivedType(tag: DW_TAG_member, name: "nurb_sel_uline", scope: !7907, file: !317, line: 257, baseType: !639, size: 32, offset: 2368)
!7985 = !DIDerivedType(tag: DW_TAG_member, name: "nurb_sel_vline", scope: !7907, file: !317, line: 257, baseType: !639, size: 32, offset: 2400)
!7986 = !DIDerivedType(tag: DW_TAG_member, name: "lastsel_point", scope: !7907, file: !317, line: 257, baseType: !639, size: 32, offset: 2432)
!7987 = !DIDerivedType(tag: DW_TAG_member, name: "handle_free", scope: !7907, file: !317, line: 259, baseType: !639, size: 32, offset: 2464)
!7988 = !DIDerivedType(tag: DW_TAG_member, name: "handle_auto", scope: !7907, file: !317, line: 259, baseType: !639, size: 32, offset: 2496)
!7989 = !DIDerivedType(tag: DW_TAG_member, name: "handle_vect", scope: !7907, file: !317, line: 259, baseType: !639, size: 32, offset: 2528)
!7990 = !DIDerivedType(tag: DW_TAG_member, name: "handle_align", scope: !7907, file: !317, line: 259, baseType: !639, size: 32, offset: 2560)
!7991 = !DIDerivedType(tag: DW_TAG_member, name: "handle_auto_clamped", scope: !7907, file: !317, line: 259, baseType: !639, size: 32, offset: 2592)
!7992 = !DIDerivedType(tag: DW_TAG_member, name: "handle_sel_free", scope: !7907, file: !317, line: 260, baseType: !639, size: 32, offset: 2624)
!7993 = !DIDerivedType(tag: DW_TAG_member, name: "handle_sel_auto", scope: !7907, file: !317, line: 260, baseType: !639, size: 32, offset: 2656)
!7994 = !DIDerivedType(tag: DW_TAG_member, name: "handle_sel_vect", scope: !7907, file: !317, line: 260, baseType: !639, size: 32, offset: 2688)
!7995 = !DIDerivedType(tag: DW_TAG_member, name: "handle_sel_align", scope: !7907, file: !317, line: 260, baseType: !639, size: 32, offset: 2720)
!7996 = !DIDerivedType(tag: DW_TAG_member, name: "handle_sel_auto_clamped", scope: !7907, file: !317, line: 260, baseType: !639, size: 32, offset: 2752)
!7997 = !DIDerivedType(tag: DW_TAG_member, name: "ds_channel", scope: !7907, file: !317, line: 262, baseType: !639, size: 32, offset: 2784)
!7998 = !DIDerivedType(tag: DW_TAG_member, name: "ds_subchannel", scope: !7907, file: !317, line: 262, baseType: !639, size: 32, offset: 2816)
!7999 = !DIDerivedType(tag: DW_TAG_member, name: "keytype_keyframe", scope: !7907, file: !317, line: 263, baseType: !639, size: 32, offset: 2848)
!8000 = !DIDerivedType(tag: DW_TAG_member, name: "keytype_extreme", scope: !7907, file: !317, line: 263, baseType: !639, size: 32, offset: 2880)
!8001 = !DIDerivedType(tag: DW_TAG_member, name: "keytype_breakdown", scope: !7907, file: !317, line: 263, baseType: !639, size: 32, offset: 2912)
!8002 = !DIDerivedType(tag: DW_TAG_member, name: "keytype_jitter", scope: !7907, file: !317, line: 263, baseType: !639, size: 32, offset: 2944)
!8003 = !DIDerivedType(tag: DW_TAG_member, name: "keytype_keyframe_select", scope: !7907, file: !317, line: 264, baseType: !639, size: 32, offset: 2976)
!8004 = !DIDerivedType(tag: DW_TAG_member, name: "keytype_extreme_select", scope: !7907, file: !317, line: 264, baseType: !639, size: 32, offset: 3008)
!8005 = !DIDerivedType(tag: DW_TAG_member, name: "keytype_breakdown_select", scope: !7907, file: !317, line: 264, baseType: !639, size: 32, offset: 3040)
!8006 = !DIDerivedType(tag: DW_TAG_member, name: "keytype_jitter_select", scope: !7907, file: !317, line: 264, baseType: !639, size: 32, offset: 3072)
!8007 = !DIDerivedType(tag: DW_TAG_member, name: "keyborder", scope: !7907, file: !317, line: 265, baseType: !639, size: 32, offset: 3104)
!8008 = !DIDerivedType(tag: DW_TAG_member, name: "keyborder_select", scope: !7907, file: !317, line: 265, baseType: !639, size: 32, offset: 3136)
!8009 = !DIDerivedType(tag: DW_TAG_member, name: "console_output", scope: !7907, file: !317, line: 267, baseType: !639, size: 32, offset: 3168)
!8010 = !DIDerivedType(tag: DW_TAG_member, name: "console_input", scope: !7907, file: !317, line: 267, baseType: !639, size: 32, offset: 3200)
!8011 = !DIDerivedType(tag: DW_TAG_member, name: "console_info", scope: !7907, file: !317, line: 267, baseType: !639, size: 32, offset: 3232)
!8012 = !DIDerivedType(tag: DW_TAG_member, name: "console_error", scope: !7907, file: !317, line: 267, baseType: !639, size: 32, offset: 3264)
!8013 = !DIDerivedType(tag: DW_TAG_member, name: "console_cursor", scope: !7907, file: !317, line: 268, baseType: !639, size: 32, offset: 3296)
!8014 = !DIDerivedType(tag: DW_TAG_member, name: "console_select", scope: !7907, file: !317, line: 268, baseType: !639, size: 32, offset: 3328)
!8015 = !DIDerivedType(tag: DW_TAG_member, name: "vertex_size", scope: !7907, file: !317, line: 270, baseType: !402, size: 8, offset: 3360)
!8016 = !DIDerivedType(tag: DW_TAG_member, name: "outline_width", scope: !7907, file: !317, line: 270, baseType: !402, size: 8, offset: 3368)
!8017 = !DIDerivedType(tag: DW_TAG_member, name: "facedot_size", scope: !7907, file: !317, line: 270, baseType: !402, size: 8, offset: 3376)
!8018 = !DIDerivedType(tag: DW_TAG_member, name: "noodle_curving", scope: !7907, file: !317, line: 271, baseType: !402, size: 8, offset: 3384)
!8019 = !DIDerivedType(tag: DW_TAG_member, name: "syntaxl", scope: !7907, file: !317, line: 274, baseType: !639, size: 32, offset: 3392)
!8020 = !DIDerivedType(tag: DW_TAG_member, name: "syntaxs", scope: !7907, file: !317, line: 274, baseType: !639, size: 32, offset: 3424)
!8021 = !DIDerivedType(tag: DW_TAG_member, name: "syntaxb", scope: !7907, file: !317, line: 275, baseType: !639, size: 32, offset: 3456)
!8022 = !DIDerivedType(tag: DW_TAG_member, name: "syntaxn", scope: !7907, file: !317, line: 275, baseType: !639, size: 32, offset: 3488)
!8023 = !DIDerivedType(tag: DW_TAG_member, name: "syntaxv", scope: !7907, file: !317, line: 276, baseType: !639, size: 32, offset: 3520)
!8024 = !DIDerivedType(tag: DW_TAG_member, name: "syntaxc", scope: !7907, file: !317, line: 276, baseType: !639, size: 32, offset: 3552)
!8025 = !DIDerivedType(tag: DW_TAG_member, name: "syntaxd", scope: !7907, file: !317, line: 277, baseType: !639, size: 32, offset: 3584)
!8026 = !DIDerivedType(tag: DW_TAG_member, name: "syntaxr", scope: !7907, file: !317, line: 277, baseType: !639, size: 32, offset: 3616)
!8027 = !DIDerivedType(tag: DW_TAG_member, name: "nodeclass_output", scope: !7907, file: !317, line: 279, baseType: !639, size: 32, offset: 3648)
!8028 = !DIDerivedType(tag: DW_TAG_member, name: "nodeclass_filter", scope: !7907, file: !317, line: 279, baseType: !639, size: 32, offset: 3680)
!8029 = !DIDerivedType(tag: DW_TAG_member, name: "nodeclass_vector", scope: !7907, file: !317, line: 280, baseType: !639, size: 32, offset: 3712)
!8030 = !DIDerivedType(tag: DW_TAG_member, name: "nodeclass_texture", scope: !7907, file: !317, line: 280, baseType: !639, size: 32, offset: 3744)
!8031 = !DIDerivedType(tag: DW_TAG_member, name: "nodeclass_shader", scope: !7907, file: !317, line: 281, baseType: !639, size: 32, offset: 3776)
!8032 = !DIDerivedType(tag: DW_TAG_member, name: "nodeclass_script", scope: !7907, file: !317, line: 281, baseType: !639, size: 32, offset: 3808)
!8033 = !DIDerivedType(tag: DW_TAG_member, name: "nodeclass_pattern", scope: !7907, file: !317, line: 282, baseType: !639, size: 32, offset: 3840)
!8034 = !DIDerivedType(tag: DW_TAG_member, name: "nodeclass_layout", scope: !7907, file: !317, line: 282, baseType: !639, size: 32, offset: 3872)
!8035 = !DIDerivedType(tag: DW_TAG_member, name: "movie", scope: !7907, file: !317, line: 284, baseType: !639, size: 32, offset: 3904)
!8036 = !DIDerivedType(tag: DW_TAG_member, name: "movieclip", scope: !7907, file: !317, line: 284, baseType: !639, size: 32, offset: 3936)
!8037 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !7907, file: !317, line: 284, baseType: !639, size: 32, offset: 3968)
!8038 = !DIDerivedType(tag: DW_TAG_member, name: "image", scope: !7907, file: !317, line: 284, baseType: !639, size: 32, offset: 4000)
!8039 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !7907, file: !317, line: 284, baseType: !639, size: 32, offset: 4032)
!8040 = !DIDerivedType(tag: DW_TAG_member, name: "audio", scope: !7907, file: !317, line: 284, baseType: !639, size: 32, offset: 4064)
!8041 = !DIDerivedType(tag: DW_TAG_member, name: "effect", scope: !7907, file: !317, line: 285, baseType: !639, size: 32, offset: 4096)
!8042 = !DIDerivedType(tag: DW_TAG_member, name: "transition", scope: !7907, file: !317, line: 285, baseType: !639, size: 32, offset: 4128)
!8043 = !DIDerivedType(tag: DW_TAG_member, name: "meta", scope: !7907, file: !317, line: 285, baseType: !639, size: 32, offset: 4160)
!8044 = !DIDerivedType(tag: DW_TAG_member, name: "editmesh_active", scope: !7907, file: !317, line: 286, baseType: !639, size: 32, offset: 4192)
!8045 = !DIDerivedType(tag: DW_TAG_member, name: "handle_vertex", scope: !7907, file: !317, line: 288, baseType: !639, size: 32, offset: 4224)
!8046 = !DIDerivedType(tag: DW_TAG_member, name: "handle_vertex_select", scope: !7907, file: !317, line: 289, baseType: !639, size: 32, offset: 4256)
!8047 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !7907, file: !317, line: 290, baseType: !639, size: 32, offset: 4288)
!8048 = !DIDerivedType(tag: DW_TAG_member, name: "handle_vertex_size", scope: !7907, file: !317, line: 292, baseType: !402, size: 8, offset: 4320)
!8049 = !DIDerivedType(tag: DW_TAG_member, name: "marker_outline", scope: !7907, file: !317, line: 294, baseType: !639, size: 32, offset: 4328)
!8050 = !DIDerivedType(tag: DW_TAG_member, name: "marker", scope: !7907, file: !317, line: 294, baseType: !639, size: 32, offset: 4360)
!8051 = !DIDerivedType(tag: DW_TAG_member, name: "act_marker", scope: !7907, file: !317, line: 294, baseType: !639, size: 32, offset: 4392)
!8052 = !DIDerivedType(tag: DW_TAG_member, name: "sel_marker", scope: !7907, file: !317, line: 294, baseType: !639, size: 32, offset: 4424)
!8053 = !DIDerivedType(tag: DW_TAG_member, name: "dis_marker", scope: !7907, file: !317, line: 294, baseType: !639, size: 32, offset: 4456)
!8054 = !DIDerivedType(tag: DW_TAG_member, name: "lock_marker", scope: !7907, file: !317, line: 294, baseType: !639, size: 32, offset: 4488)
!8055 = !DIDerivedType(tag: DW_TAG_member, name: "bundle_solid", scope: !7907, file: !317, line: 295, baseType: !639, size: 32, offset: 4520)
!8056 = !DIDerivedType(tag: DW_TAG_member, name: "path_before", scope: !7907, file: !317, line: 296, baseType: !639, size: 32, offset: 4552)
!8057 = !DIDerivedType(tag: DW_TAG_member, name: "path_after", scope: !7907, file: !317, line: 296, baseType: !639, size: 32, offset: 4584)
!8058 = !DIDerivedType(tag: DW_TAG_member, name: "camera_path", scope: !7907, file: !317, line: 297, baseType: !639, size: 32, offset: 4616)
!8059 = !DIDerivedType(tag: DW_TAG_member, name: "hpad", scope: !7907, file: !317, line: 298, baseType: !1152, size: 24, offset: 4648)
!8060 = !DIDerivedType(tag: DW_TAG_member, name: "preview_back", scope: !7907, file: !317, line: 300, baseType: !639, size: 32, offset: 4672)
!8061 = !DIDerivedType(tag: DW_TAG_member, name: "preview_stitch_face", scope: !7907, file: !317, line: 301, baseType: !639, size: 32, offset: 4704)
!8062 = !DIDerivedType(tag: DW_TAG_member, name: "preview_stitch_edge", scope: !7907, file: !317, line: 302, baseType: !639, size: 32, offset: 4736)
!8063 = !DIDerivedType(tag: DW_TAG_member, name: "preview_stitch_vert", scope: !7907, file: !317, line: 303, baseType: !639, size: 32, offset: 4768)
!8064 = !DIDerivedType(tag: DW_TAG_member, name: "preview_stitch_stitchable", scope: !7907, file: !317, line: 304, baseType: !639, size: 32, offset: 4800)
!8065 = !DIDerivedType(tag: DW_TAG_member, name: "preview_stitch_unstitchable", scope: !7907, file: !317, line: 305, baseType: !639, size: 32, offset: 4832)
!8066 = !DIDerivedType(tag: DW_TAG_member, name: "preview_stitch_active", scope: !7907, file: !317, line: 306, baseType: !639, size: 32, offset: 4864)
!8067 = !DIDerivedType(tag: DW_TAG_member, name: "uv_shadow", scope: !7907, file: !317, line: 308, baseType: !639, size: 32, offset: 4896)
!8068 = !DIDerivedType(tag: DW_TAG_member, name: "uv_others", scope: !7907, file: !317, line: 309, baseType: !639, size: 32, offset: 4928)
!8069 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !7907, file: !317, line: 311, baseType: !639, size: 32, offset: 4960)
!8070 = !DIDerivedType(tag: DW_TAG_member, name: "selected_highlight", scope: !7907, file: !317, line: 312, baseType: !639, size: 32, offset: 4992)
!8071 = !DIDerivedType(tag: DW_TAG_member, name: "skin_root", scope: !7907, file: !317, line: 314, baseType: !639, size: 32, offset: 5024)
!8072 = !DIDerivedType(tag: DW_TAG_member, name: "anim_active", scope: !7907, file: !317, line: 317, baseType: !639, size: 32, offset: 5056)
!8073 = !DIDerivedType(tag: DW_TAG_member, name: "anim_non_active", scope: !7907, file: !317, line: 318, baseType: !639, size: 32, offset: 5088)
!8074 = !DIDerivedType(tag: DW_TAG_member, name: "nla_tweaking", scope: !7907, file: !317, line: 320, baseType: !639, size: 32, offset: 5120)
!8075 = !DIDerivedType(tag: DW_TAG_member, name: "nla_tweakdupli", scope: !7907, file: !317, line: 321, baseType: !639, size: 32, offset: 5152)
!8076 = !DIDerivedType(tag: DW_TAG_member, name: "nla_transition", scope: !7907, file: !317, line: 323, baseType: !639, size: 32, offset: 5184)
!8077 = !DIDerivedType(tag: DW_TAG_member, name: "nla_transition_sel", scope: !7907, file: !317, line: 323, baseType: !639, size: 32, offset: 5216)
!8078 = !DIDerivedType(tag: DW_TAG_member, name: "nla_meta", scope: !7907, file: !317, line: 324, baseType: !639, size: 32, offset: 5248)
!8079 = !DIDerivedType(tag: DW_TAG_member, name: "nla_meta_sel", scope: !7907, file: !317, line: 324, baseType: !639, size: 32, offset: 5280)
!8080 = !DIDerivedType(tag: DW_TAG_member, name: "nla_sound", scope: !7907, file: !317, line: 325, baseType: !639, size: 32, offset: 5312)
!8081 = !DIDerivedType(tag: DW_TAG_member, name: "nla_sound_sel", scope: !7907, file: !317, line: 325, baseType: !639, size: 32, offset: 5344)
!8082 = !DIDerivedType(tag: DW_TAG_member, name: "info_selected", scope: !7907, file: !317, line: 328, baseType: !639, size: 32, offset: 5376)
!8083 = !DIDerivedType(tag: DW_TAG_member, name: "info_selected_text", scope: !7907, file: !317, line: 328, baseType: !639, size: 32, offset: 5408)
!8084 = !DIDerivedType(tag: DW_TAG_member, name: "info_error", scope: !7907, file: !317, line: 329, baseType: !639, size: 32, offset: 5440)
!8085 = !DIDerivedType(tag: DW_TAG_member, name: "info_error_text", scope: !7907, file: !317, line: 329, baseType: !639, size: 32, offset: 5472)
!8086 = !DIDerivedType(tag: DW_TAG_member, name: "info_warning", scope: !7907, file: !317, line: 330, baseType: !639, size: 32, offset: 5504)
!8087 = !DIDerivedType(tag: DW_TAG_member, name: "info_warning_text", scope: !7907, file: !317, line: 330, baseType: !639, size: 32, offset: 5536)
!8088 = !DIDerivedType(tag: DW_TAG_member, name: "info_info", scope: !7907, file: !317, line: 331, baseType: !639, size: 32, offset: 5568)
!8089 = !DIDerivedType(tag: DW_TAG_member, name: "info_info_text", scope: !7907, file: !317, line: 331, baseType: !639, size: 32, offset: 5600)
!8090 = !DIDerivedType(tag: DW_TAG_member, name: "info_debug", scope: !7907, file: !317, line: 332, baseType: !639, size: 32, offset: 5632)
!8091 = !DIDerivedType(tag: DW_TAG_member, name: "info_debug_text", scope: !7907, file: !317, line: 332, baseType: !639, size: 32, offset: 5664)
!8092 = !DIDerivedType(tag: DW_TAG_member, name: "paint_curve_pivot", scope: !7907, file: !317, line: 334, baseType: !639, size: 32, offset: 5696)
!8093 = !DIDerivedType(tag: DW_TAG_member, name: "paint_curve_handle", scope: !7907, file: !317, line: 335, baseType: !639, size: 32, offset: 5728)
!8094 = !DIDerivedType(tag: DW_TAG_member, name: "tv3d", scope: !7834, file: !317, line: 365, baseType: !7906, size: 5760, offset: 13440)
!8095 = !DIDerivedType(tag: DW_TAG_member, name: "tfile", scope: !7834, file: !317, line: 366, baseType: !7906, size: 5760, offset: 19200)
!8096 = !DIDerivedType(tag: DW_TAG_member, name: "tipo", scope: !7834, file: !317, line: 367, baseType: !7906, size: 5760, offset: 24960)
!8097 = !DIDerivedType(tag: DW_TAG_member, name: "tinfo", scope: !7834, file: !317, line: 368, baseType: !7906, size: 5760, offset: 30720)
!8098 = !DIDerivedType(tag: DW_TAG_member, name: "tact", scope: !7834, file: !317, line: 369, baseType: !7906, size: 5760, offset: 36480)
!8099 = !DIDerivedType(tag: DW_TAG_member, name: "tnla", scope: !7834, file: !317, line: 370, baseType: !7906, size: 5760, offset: 42240)
!8100 = !DIDerivedType(tag: DW_TAG_member, name: "tseq", scope: !7834, file: !317, line: 371, baseType: !7906, size: 5760, offset: 48000)
!8101 = !DIDerivedType(tag: DW_TAG_member, name: "tima", scope: !7834, file: !317, line: 372, baseType: !7906, size: 5760, offset: 53760)
!8102 = !DIDerivedType(tag: DW_TAG_member, name: "text", scope: !7834, file: !317, line: 373, baseType: !7906, size: 5760, offset: 59520)
!8103 = !DIDerivedType(tag: DW_TAG_member, name: "toops", scope: !7834, file: !317, line: 374, baseType: !7906, size: 5760, offset: 65280)
!8104 = !DIDerivedType(tag: DW_TAG_member, name: "ttime", scope: !7834, file: !317, line: 375, baseType: !7906, size: 5760, offset: 71040)
!8105 = !DIDerivedType(tag: DW_TAG_member, name: "tnode", scope: !7834, file: !317, line: 376, baseType: !7906, size: 5760, offset: 76800)
!8106 = !DIDerivedType(tag: DW_TAG_member, name: "tlogic", scope: !7834, file: !317, line: 377, baseType: !7906, size: 5760, offset: 82560)
!8107 = !DIDerivedType(tag: DW_TAG_member, name: "tuserpref", scope: !7834, file: !317, line: 378, baseType: !7906, size: 5760, offset: 88320)
!8108 = !DIDerivedType(tag: DW_TAG_member, name: "tconsole", scope: !7834, file: !317, line: 379, baseType: !7906, size: 5760, offset: 94080)
!8109 = !DIDerivedType(tag: DW_TAG_member, name: "tclip", scope: !7834, file: !317, line: 380, baseType: !7906, size: 5760, offset: 99840)
!8110 = !DIDerivedType(tag: DW_TAG_member, name: "tarm", scope: !7834, file: !317, line: 383, baseType: !8111, size: 2560, offset: 105600)
!8111 = !DICompositeType(tag: DW_TAG_array_type, baseType: !635, size: 2560, elements: !8112)
!8112 = !{!8113}
!8113 = !DISubrange(count: 20)
!8114 = !DIDerivedType(tag: DW_TAG_member, name: "active_theme_area", scope: !7834, file: !317, line: 386, baseType: !417, size: 32, offset: 108160)
!8115 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !7834, file: !317, line: 386, baseType: !417, size: 32, offset: 108192)
!8116 = !DILocation(line: 118, column: 11, scope: !7831)
!8117 = !DILocation(line: 118, column: 20, scope: !7831)
!8118 = !DILocation(line: 119, column: 13, scope: !7831)
!8119 = !DILocation(line: 119, column: 21, scope: !7831)
!8120 = !DILocation(line: 119, column: 27, scope: !7831)
!8121 = !DILocation(line: 119, column: 39, scope: !7831)
!8122 = !DILocation(line: 119, column: 10, scope: !7831)
!8123 = !DILocation(line: 120, column: 2, scope: !7831)
!8124 = !DILocation(line: 121, column: 11, scope: !8125)
!8125 = distinct !DILexicalBlock(scope: !7827, file: !3, line: 121, column: 11)
!8126 = !DILocation(line: 121, column: 23, scope: !8125)
!8127 = !DILocation(line: 121, column: 11, scope: !7827)
!8128 = !DILocation(line: 123, column: 13, scope: !8129)
!8129 = distinct !DILexicalBlock(scope: !8125, file: !3, line: 121, column: 30)
!8130 = !DILocation(line: 123, column: 12, scope: !8129)
!8131 = !DILocation(line: 123, column: 21, scope: !8129)
!8132 = !DILocation(line: 123, column: 26, scope: !8129)
!8133 = !DILocation(line: 123, column: 10, scope: !8129)
!8134 = !DILocation(line: 124, column: 2, scope: !8129)
!8135 = !DILocation(line: 126, column: 10, scope: !8125)
!8136 = !DILocation(line: 127, column: 1, scope: !7769)
!8137 = distinct !DISubprogram(name: "draw_custom_bone", scope: !3, file: !3, line: 1361, type: !8138, scopeLine: 1363, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1930)
!8138 = !DISubroutineType(types: !8139)
!8139 = !{null, !1983, !1985, !2376, !2165, !2145, !417, !417, !7, !375}
!8140 = !DILocalVariable(name: "scene", arg: 1, scope: !8137, file: !3, line: 1361, type: !1983)
!8141 = !DILocation(line: 1361, column: 37, scope: !8137)
!8142 = !DILocalVariable(name: "v3d", arg: 2, scope: !8137, file: !3, line: 1361, type: !1985)
!8143 = !DILocation(line: 1361, column: 52, scope: !8137)
!8144 = !DILocalVariable(name: "rv3d", arg: 3, scope: !8137, file: !3, line: 1361, type: !2376)
!8145 = !DILocation(line: 1361, column: 71, scope: !8137)
!8146 = !DILocalVariable(name: "ob", arg: 4, scope: !8137, file: !3, line: 1361, type: !2165)
!8147 = !DILocation(line: 1361, column: 85, scope: !8137)
!8148 = !DILocalVariable(name: "dt", arg: 5, scope: !8137, file: !3, line: 1362, type: !2145)
!8149 = !DILocation(line: 1362, column: 42, scope: !8137)
!8150 = !DILocalVariable(name: "armflag", arg: 6, scope: !8137, file: !3, line: 1362, type: !417)
!8151 = !DILocation(line: 1362, column: 50, scope: !8137)
!8152 = !DILocalVariable(name: "boneflag", arg: 7, scope: !8137, file: !3, line: 1362, type: !417)
!8153 = !DILocation(line: 1362, column: 63, scope: !8137)
!8154 = !DILocalVariable(name: "id", arg: 8, scope: !8137, file: !3, line: 1362, type: !7)
!8155 = !DILocation(line: 1362, column: 86, scope: !8137)
!8156 = !DILocalVariable(name: "length", arg: 9, scope: !8137, file: !3, line: 1362, type: !375)
!8157 = !DILocation(line: 1362, column: 96, scope: !8137)
!8158 = !DILocation(line: 1364, column: 6, scope: !8159)
!8159 = distinct !DILexicalBlock(scope: !8137, file: !3, line: 1364, column: 6)
!8160 = !DILocation(line: 1364, column: 9, scope: !8159)
!8161 = !DILocation(line: 1364, column: 6, scope: !8137)
!8162 = !DILocation(line: 1364, column: 18, scope: !8159)
!8163 = !DILocation(line: 1366, column: 11, scope: !8137)
!8164 = !DILocation(line: 1366, column: 19, scope: !8137)
!8165 = !DILocation(line: 1366, column: 27, scope: !8137)
!8166 = !DILocation(line: 1366, column: 2, scope: !8137)
!8167 = !DILocation(line: 1369, column: 6, scope: !8168)
!8168 = distinct !DILexicalBlock(scope: !8137, file: !3, line: 1369, column: 6)
!8169 = !DILocation(line: 1369, column: 14, scope: !8168)
!8170 = !DILocation(line: 1369, column: 6, scope: !8137)
!8171 = !DILocation(line: 1370, column: 41, scope: !8172)
!8172 = distinct !DILexicalBlock(scope: !8168, file: !3, line: 1369, column: 30)
!8173 = !DILocation(line: 1370, column: 3, scope: !8172)
!8174 = !DILocation(line: 1371, column: 2, scope: !8172)
!8175 = !DILocation(line: 1373, column: 6, scope: !8176)
!8176 = distinct !DILexicalBlock(scope: !8137, file: !3, line: 1373, column: 6)
!8177 = !DILocation(line: 1373, column: 9, scope: !8176)
!8178 = !DILocation(line: 1373, column: 6, scope: !8137)
!8179 = !DILocation(line: 1374, column: 31, scope: !8180)
!8180 = distinct !DILexicalBlock(scope: !8176, file: !3, line: 1373, column: 16)
!8181 = !DILocation(line: 1374, column: 34, scope: !8180)
!8182 = !DILocation(line: 1374, column: 3, scope: !8180)
!8183 = !DILocation(line: 1375, column: 2, scope: !8180)
!8184 = !DILocation(line: 1377, column: 23, scope: !8137)
!8185 = !DILocation(line: 1377, column: 30, scope: !8137)
!8186 = !DILocation(line: 1377, column: 35, scope: !8137)
!8187 = !DILocation(line: 1377, column: 41, scope: !8137)
!8188 = !DILocation(line: 1377, column: 45, scope: !8137)
!8189 = !DILocation(line: 1377, column: 49, scope: !8137)
!8190 = !DILocation(line: 1377, column: 57, scope: !8137)
!8191 = !DILocation(line: 1377, column: 2, scope: !8137)
!8192 = !DILocation(line: 1378, column: 1, scope: !8137)
!8193 = distinct !DISubprogram(name: "pchan_draw_IK_root_lines", scope: !3, file: !3, line: 1381, type: !8194, scopeLine: 1382, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1930)
!8194 = !DISubroutineType(types: !8195)
!8195 = !{null, !3717, !415}
!8196 = !DILocalVariable(name: "pchan", arg: 1, scope: !8193, file: !3, line: 1381, type: !3717)
!8197 = !DILocation(line: 1381, column: 52, scope: !8193)
!8198 = !DILocalVariable(name: "only_temp", arg: 2, scope: !8193, file: !3, line: 1381, type: !415)
!8199 = !DILocation(line: 1381, column: 65, scope: !8193)
!8200 = !DILocalVariable(name: "con", scope: !8193, file: !3, line: 1383, type: !8201)
!8201 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8202, size: 64)
!8202 = !DIDerivedType(tag: DW_TAG_typedef, name: "bConstraint", file: !343, line: 76, baseType: !8203)
!8203 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bConstraint", file: !343, line: 54, size: 960, elements: !8204)
!8204 = !{!8205, !8207, !8208, !8209, !8210, !8211, !8212, !8213, !8214, !8215, !8216, !8217, !8218, !8219}
!8205 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !8203, file: !343, line: 55, baseType: !8206, size: 64)
!8206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8203, size: 64)
!8207 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !8203, file: !343, line: 55, baseType: !8206, size: 64, offset: 64)
!8208 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !8203, file: !343, line: 57, baseType: !386, size: 64, offset: 128)
!8209 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !8203, file: !343, line: 58, baseType: !415, size: 16, offset: 192)
!8210 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !8203, file: !343, line: 59, baseType: !415, size: 16, offset: 208)
!8211 = !DIDerivedType(tag: DW_TAG_member, name: "ownspace", scope: !8203, file: !343, line: 61, baseType: !402, size: 8, offset: 224)
!8212 = !DIDerivedType(tag: DW_TAG_member, name: "tarspace", scope: !8203, file: !343, line: 62, baseType: !402, size: 8, offset: 232)
!8213 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !8203, file: !343, line: 64, baseType: !432, size: 512, offset: 240)
!8214 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !8203, file: !343, line: 66, baseType: !415, size: 16, offset: 752)
!8215 = !DIDerivedType(tag: DW_TAG_member, name: "enforce", scope: !8203, file: !343, line: 68, baseType: !375, size: 32, offset: 768)
!8216 = !DIDerivedType(tag: DW_TAG_member, name: "headtail", scope: !8203, file: !343, line: 69, baseType: !375, size: 32, offset: 800)
!8217 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !8203, file: !343, line: 71, baseType: !670, size: 64, offset: 832)
!8218 = !DIDerivedType(tag: DW_TAG_member, name: "lin_error", scope: !8203, file: !343, line: 74, baseType: !375, size: 32, offset: 896)
!8219 = !DIDerivedType(tag: DW_TAG_member, name: "rot_error", scope: !8203, file: !343, line: 75, baseType: !375, size: 32, offset: 928)
!8220 = !DILocation(line: 1383, column: 15, scope: !8193)
!8221 = !DILocalVariable(name: "parchan", scope: !8193, file: !3, line: 1384, type: !3717)
!8222 = !DILocation(line: 1384, column: 16, scope: !8193)
!8223 = !DILocation(line: 1386, column: 13, scope: !8224)
!8224 = distinct !DILexicalBlock(scope: !8193, file: !3, line: 1386, column: 2)
!8225 = !DILocation(line: 1386, column: 20, scope: !8224)
!8226 = !DILocation(line: 1386, column: 32, scope: !8224)
!8227 = !DILocation(line: 1386, column: 11, scope: !8224)
!8228 = !DILocation(line: 1386, column: 7, scope: !8224)
!8229 = !DILocation(line: 1386, column: 39, scope: !8230)
!8230 = distinct !DILexicalBlock(scope: !8224, file: !3, line: 1386, column: 2)
!8231 = !DILocation(line: 1386, column: 2, scope: !8224)
!8232 = !DILocation(line: 1387, column: 7, scope: !8233)
!8233 = distinct !DILexicalBlock(scope: !8234, file: !3, line: 1387, column: 7)
!8234 = distinct !DILexicalBlock(scope: !8230, file: !3, line: 1386, column: 61)
!8235 = !DILocation(line: 1387, column: 12, scope: !8233)
!8236 = !DILocation(line: 1387, column: 20, scope: !8233)
!8237 = !DILocation(line: 1387, column: 7, scope: !8234)
!8238 = !DILocation(line: 1388, column: 4, scope: !8233)
!8239 = !DILocation(line: 1390, column: 11, scope: !8234)
!8240 = !DILocation(line: 1390, column: 16, scope: !8234)
!8241 = !DILocation(line: 1390, column: 3, scope: !8234)
!8242 = !DILocalVariable(name: "data", scope: !8243, file: !3, line: 1393, type: !645)
!8243 = distinct !DILexicalBlock(scope: !8244, file: !3, line: 1392, column: 4)
!8244 = distinct !DILexicalBlock(scope: !8234, file: !3, line: 1390, column: 22)
!8245 = !DILocation(line: 1393, column: 27, scope: !8243)
!8246 = !DILocation(line: 1393, column: 58, scope: !8243)
!8247 = !DILocation(line: 1393, column: 63, scope: !8243)
!8248 = !DILocation(line: 1393, column: 34, scope: !8243)
!8249 = !DILocalVariable(name: "segcount", scope: !8243, file: !3, line: 1394, type: !417)
!8250 = !DILocation(line: 1394, column: 9, scope: !8243)
!8251 = !DILocation(line: 1397, column: 10, scope: !8252)
!8252 = distinct !DILexicalBlock(scope: !8243, file: !3, line: 1397, column: 9)
!8253 = !DILocation(line: 1397, column: 9, scope: !8252)
!8254 = !DILocation(line: 1397, column: 21, scope: !8252)
!8255 = !DILocation(line: 1397, column: 26, scope: !8252)
!8256 = !DILocation(line: 1397, column: 32, scope: !8252)
!8257 = !DILocation(line: 1397, column: 37, scope: !8252)
!8258 = !DILocation(line: 1397, column: 9, scope: !8243)
!8259 = !DILocation(line: 1398, column: 6, scope: !8252)
!8260 = !DILocation(line: 1400, column: 5, scope: !8243)
!8261 = !DILocation(line: 1401, column: 5, scope: !8243)
!8262 = !DILocation(line: 1404, column: 10, scope: !8263)
!8263 = distinct !DILexicalBlock(scope: !8243, file: !3, line: 1404, column: 9)
!8264 = !DILocation(line: 1404, column: 16, scope: !8263)
!8265 = !DILocation(line: 1404, column: 21, scope: !8263)
!8266 = !DILocation(line: 1404, column: 42, scope: !8263)
!8267 = !DILocation(line: 1404, column: 9, scope: !8243)
!8268 = !DILocation(line: 1405, column: 16, scope: !8263)
!8269 = !DILocation(line: 1405, column: 23, scope: !8263)
!8270 = !DILocation(line: 1405, column: 14, scope: !8263)
!8271 = !DILocation(line: 1405, column: 6, scope: !8263)
!8272 = !DILocation(line: 1407, column: 16, scope: !8263)
!8273 = !DILocation(line: 1407, column: 14, scope: !8263)
!8274 = !DILocation(line: 1409, column: 17, scope: !8243)
!8275 = !DILocation(line: 1409, column: 26, scope: !8243)
!8276 = !DILocation(line: 1409, column: 5, scope: !8243)
!8277 = !DILocation(line: 1412, column: 5, scope: !8243)
!8278 = !DILocation(line: 1412, column: 12, scope: !8243)
!8279 = !DILocation(line: 1412, column: 21, scope: !8243)
!8280 = !DILocation(line: 1413, column: 14, scope: !8281)
!8281 = distinct !DILexicalBlock(scope: !8243, file: !3, line: 1412, column: 29)
!8282 = !DILocation(line: 1414, column: 10, scope: !8283)
!8283 = distinct !DILexicalBlock(scope: !8281, file: !3, line: 1414, column: 10)
!8284 = !DILocation(line: 1414, column: 22, scope: !8283)
!8285 = !DILocation(line: 1414, column: 28, scope: !8283)
!8286 = !DILocation(line: 1414, column: 19, scope: !8283)
!8287 = !DILocation(line: 1414, column: 37, scope: !8283)
!8288 = !DILocation(line: 1414, column: 40, scope: !8283)
!8289 = !DILocation(line: 1414, column: 49, scope: !8283)
!8290 = !DILocation(line: 1414, column: 10, scope: !8281)
!8291 = !DILocation(line: 1415, column: 7, scope: !8292)
!8292 = distinct !DILexicalBlock(scope: !8283, file: !3, line: 1414, column: 56)
!8293 = !DILocation(line: 1417, column: 16, scope: !8281)
!8294 = !DILocation(line: 1417, column: 25, scope: !8281)
!8295 = !DILocation(line: 1417, column: 14, scope: !8281)
!8296 = distinct !{!8296, !8277, !8297}
!8297 = !DILocation(line: 1418, column: 5, scope: !8243)
!8298 = !DILocation(line: 1419, column: 9, scope: !8299)
!8299 = distinct !DILexicalBlock(scope: !8243, file: !3, line: 1419, column: 9)
!8300 = !DILocation(line: 1419, column: 9, scope: !8243)
!8301 = !DILocation(line: 1420, column: 18, scope: !8299)
!8302 = !DILocation(line: 1420, column: 27, scope: !8299)
!8303 = !DILocation(line: 1420, column: 6, scope: !8299)
!8304 = !DILocation(line: 1422, column: 5, scope: !8243)
!8305 = !DILocation(line: 1423, column: 5, scope: !8243)
!8306 = !DILocation(line: 1424, column: 5, scope: !8243)
!8307 = !DILocalVariable(name: "data", scope: !8308, file: !3, line: 1428, type: !1905)
!8308 = distinct !DILexicalBlock(scope: !8244, file: !3, line: 1427, column: 4)
!8309 = !DILocation(line: 1428, column: 26, scope: !8308)
!8310 = !DILocation(line: 1428, column: 56, scope: !8308)
!8311 = !DILocation(line: 1428, column: 61, scope: !8308)
!8312 = !DILocation(line: 1428, column: 33, scope: !8308)
!8313 = !DILocalVariable(name: "segcount", scope: !8308, file: !3, line: 1429, type: !417)
!8314 = !DILocation(line: 1429, column: 9, scope: !8308)
!8315 = !DILocation(line: 1431, column: 5, scope: !8308)
!8316 = !DILocation(line: 1432, column: 5, scope: !8308)
!8317 = !DILocation(line: 1434, column: 15, scope: !8308)
!8318 = !DILocation(line: 1434, column: 13, scope: !8308)
!8319 = !DILocation(line: 1435, column: 17, scope: !8308)
!8320 = !DILocation(line: 1435, column: 26, scope: !8308)
!8321 = !DILocation(line: 1435, column: 5, scope: !8308)
!8322 = !DILocation(line: 1438, column: 5, scope: !8308)
!8323 = !DILocation(line: 1438, column: 12, scope: !8308)
!8324 = !DILocation(line: 1438, column: 21, scope: !8308)
!8325 = !DILocation(line: 1439, column: 14, scope: !8326)
!8326 = distinct !DILexicalBlock(scope: !8308, file: !3, line: 1438, column: 29)
!8327 = !DILocation(line: 1441, column: 10, scope: !8328)
!8328 = distinct !DILexicalBlock(scope: !8326, file: !3, line: 1441, column: 10)
!8329 = !DILocation(line: 1441, column: 22, scope: !8328)
!8330 = !DILocation(line: 1441, column: 28, scope: !8328)
!8331 = !DILocation(line: 1441, column: 19, scope: !8328)
!8332 = !DILocation(line: 1441, column: 37, scope: !8328)
!8333 = !DILocation(line: 1441, column: 40, scope: !8328)
!8334 = !DILocation(line: 1441, column: 49, scope: !8328)
!8335 = !DILocation(line: 1441, column: 10, scope: !8326)
!8336 = !DILocation(line: 1441, column: 56, scope: !8328)
!8337 = !DILocation(line: 1442, column: 16, scope: !8326)
!8338 = !DILocation(line: 1442, column: 25, scope: !8326)
!8339 = !DILocation(line: 1442, column: 14, scope: !8326)
!8340 = distinct !{!8340, !8322, !8341}
!8341 = !DILocation(line: 1443, column: 5, scope: !8308)
!8342 = !DILocation(line: 1444, column: 9, scope: !8343)
!8343 = distinct !DILexicalBlock(scope: !8308, file: !3, line: 1444, column: 9)
!8344 = !DILocation(line: 1444, column: 9, scope: !8308)
!8345 = !DILocation(line: 1445, column: 18, scope: !8343)
!8346 = !DILocation(line: 1445, column: 27, scope: !8343)
!8347 = !DILocation(line: 1445, column: 6, scope: !8343)
!8348 = !DILocation(line: 1447, column: 5, scope: !8308)
!8349 = !DILocation(line: 1448, column: 5, scope: !8308)
!8350 = !DILocation(line: 1449, column: 5, scope: !8308)
!8351 = !DILocation(line: 1452, column: 2, scope: !8234)
!8352 = !DILocation(line: 1386, column: 50, scope: !8230)
!8353 = !DILocation(line: 1386, column: 55, scope: !8230)
!8354 = !DILocation(line: 1386, column: 48, scope: !8230)
!8355 = !DILocation(line: 1386, column: 2, scope: !8230)
!8356 = distinct !{!8356, !8231, !8357}
!8357 = !DILocation(line: 1452, column: 2, scope: !8224)
!8358 = !DILocation(line: 1453, column: 1, scope: !8193)
!8359 = distinct !DISubprogram(name: "draw_pose_dofs", scope: !3, file: !3, line: 1529, type: !8360, scopeLine: 1530, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1930)
!8360 = !DISubroutineType(types: !8361)
!8361 = !{null, !2165}
!8362 = !DILocalVariable(name: "ob", arg: 1, scope: !8359, file: !3, line: 1529, type: !2165)
!8363 = !DILocation(line: 1529, column: 36, scope: !8359)
!8364 = !DILocalVariable(name: "arm", scope: !8359, file: !3, line: 1531, type: !376)
!8365 = !DILocation(line: 1531, column: 13, scope: !8359)
!8366 = !DILocation(line: 1531, column: 19, scope: !8359)
!8367 = !DILocation(line: 1531, column: 23, scope: !8359)
!8368 = !DILocalVariable(name: "pchan", scope: !8359, file: !3, line: 1532, type: !3717)
!8369 = !DILocation(line: 1532, column: 16, scope: !8359)
!8370 = !DILocalVariable(name: "bone", scope: !8359, file: !3, line: 1533, type: !525)
!8371 = !DILocation(line: 1533, column: 8, scope: !8359)
!8372 = !DILocation(line: 1535, column: 15, scope: !8373)
!8373 = distinct !DILexicalBlock(scope: !8359, file: !3, line: 1535, column: 2)
!8374 = !DILocation(line: 1535, column: 19, scope: !8373)
!8375 = !DILocation(line: 1535, column: 25, scope: !8373)
!8376 = !DILocation(line: 1535, column: 34, scope: !8373)
!8377 = !DILocation(line: 1535, column: 13, scope: !8373)
!8378 = !DILocation(line: 1535, column: 7, scope: !8373)
!8379 = !DILocation(line: 1535, column: 41, scope: !8380)
!8380 = distinct !DILexicalBlock(scope: !8373, file: !3, line: 1535, column: 2)
!8381 = !DILocation(line: 1535, column: 2, scope: !8373)
!8382 = !DILocation(line: 1536, column: 10, scope: !8383)
!8383 = distinct !DILexicalBlock(scope: !8380, file: !3, line: 1535, column: 69)
!8384 = !DILocation(line: 1536, column: 17, scope: !8383)
!8385 = !DILocation(line: 1536, column: 8, scope: !8383)
!8386 = !DILocation(line: 1538, column: 8, scope: !8387)
!8387 = distinct !DILexicalBlock(scope: !8383, file: !3, line: 1538, column: 7)
!8388 = !DILocation(line: 1538, column: 13, scope: !8387)
!8389 = !DILocation(line: 1538, column: 22, scope: !8387)
!8390 = !DILocation(line: 1538, column: 27, scope: !8387)
!8391 = !DILocation(line: 1538, column: 33, scope: !8387)
!8392 = !DILocation(line: 1538, column: 38, scope: !8387)
!8393 = !DILocation(line: 1538, column: 7, scope: !8383)
!8394 = !DILocation(line: 1539, column: 8, scope: !8395)
!8395 = distinct !DILexicalBlock(scope: !8396, file: !3, line: 1539, column: 8)
!8396 = distinct !DILexicalBlock(scope: !8387, file: !3, line: 1538, column: 75)
!8397 = !DILocation(line: 1539, column: 14, scope: !8395)
!8398 = !DILocation(line: 1539, column: 19, scope: !8395)
!8399 = !DILocation(line: 1539, column: 8, scope: !8396)
!8400 = !DILocation(line: 1540, column: 9, scope: !8401)
!8401 = distinct !DILexicalBlock(scope: !8402, file: !3, line: 1540, column: 9)
!8402 = distinct !DILexicalBlock(scope: !8395, file: !3, line: 1539, column: 36)
!8403 = !DILocation(line: 1540, column: 15, scope: !8401)
!8404 = !DILocation(line: 1540, column: 23, scope: !8401)
!8405 = !DILocation(line: 1540, column: 28, scope: !8401)
!8406 = !DILocation(line: 1540, column: 21, scope: !8401)
!8407 = !DILocation(line: 1540, column: 9, scope: !8402)
!8408 = !DILocation(line: 1541, column: 10, scope: !8409)
!8409 = distinct !DILexicalBlock(scope: !8410, file: !3, line: 1541, column: 10)
!8410 = distinct !DILexicalBlock(scope: !8401, file: !3, line: 1540, column: 35)
!8411 = !DILocation(line: 1541, column: 17, scope: !8409)
!8412 = !DILocation(line: 1541, column: 24, scope: !8409)
!8413 = !DILocation(line: 1541, column: 10, scope: !8410)
!8414 = !DILocation(line: 1542, column: 40, scope: !8415)
!8415 = distinct !DILexicalBlock(scope: !8416, file: !3, line: 1542, column: 11)
!8416 = distinct !DILexicalBlock(scope: !8409, file: !3, line: 1541, column: 61)
!8417 = !DILocation(line: 1542, column: 44, scope: !8415)
!8418 = !DILocation(line: 1542, column: 11, scope: !8415)
!8419 = !DILocation(line: 1542, column: 11, scope: !8416)
!8420 = !DILocalVariable(name: "corner", scope: !8421, file: !3, line: 1543, type: !8422)
!8421 = distinct !DILexicalBlock(scope: !8415, file: !3, line: 1542, column: 52)
!8422 = !DICompositeType(tag: DW_TAG_array_type, baseType: !375, size: 384, elements: !8423)
!8423 = !{!551, !540}
!8424 = !DILocation(line: 1543, column: 14, scope: !8421)
!8425 = !DILocalVariable(name: "posetrans", scope: !8421, file: !3, line: 1543, type: !538)
!8426 = !DILocation(line: 1543, column: 28, scope: !8421)
!8427 = !DILocalVariable(name: "mat", scope: !8421, file: !3, line: 1543, type: !549)
!8428 = !DILocation(line: 1543, column: 42, scope: !8421)
!8429 = !DILocalVariable(name: "phi", scope: !8421, file: !3, line: 1544, type: !375)
!8430 = !DILocation(line: 1544, column: 14, scope: !8421)
!8431 = !DILocalVariable(name: "theta", scope: !8421, file: !3, line: 1544, type: !375)
!8432 = !DILocation(line: 1544, column: 26, scope: !8421)
!8433 = !DILocalVariable(name: "scale", scope: !8421, file: !3, line: 1544, type: !375)
!8434 = !DILocation(line: 1544, column: 40, scope: !8421)
!8435 = !DILocalVariable(name: "a", scope: !8421, file: !3, line: 1545, type: !417)
!8436 = !DILocation(line: 1545, column: 12, scope: !8421)
!8437 = !DILocalVariable(name: "i", scope: !8421, file: !3, line: 1545, type: !417)
!8438 = !DILocation(line: 1545, column: 15, scope: !8421)
!8439 = !DILocation(line: 1548, column: 8, scope: !8421)
!8440 = !DILocation(line: 1550, column: 19, scope: !8421)
!8441 = !DILocation(line: 1550, column: 30, scope: !8421)
!8442 = !DILocation(line: 1550, column: 37, scope: !8421)
!8443 = !DILocation(line: 1550, column: 8, scope: !8421)
!8444 = !DILocation(line: 1551, column: 21, scope: !8421)
!8445 = !DILocation(line: 1551, column: 35, scope: !8421)
!8446 = !DILocation(line: 1551, column: 49, scope: !8421)
!8447 = !DILocation(line: 1551, column: 8, scope: !8421)
!8448 = !DILocation(line: 1553, column: 12, scope: !8449)
!8449 = distinct !DILexicalBlock(scope: !8421, file: !3, line: 1553, column: 12)
!8450 = !DILocation(line: 1553, column: 19, scope: !8449)
!8451 = !DILocation(line: 1553, column: 12, scope: !8421)
!8452 = !DILocation(line: 1554, column: 20, scope: !8453)
!8453 = distinct !DILexicalBlock(scope: !8449, file: !3, line: 1553, column: 27)
!8454 = !DILocation(line: 1554, column: 25, scope: !8453)
!8455 = !DILocation(line: 1554, column: 32, scope: !8453)
!8456 = !DILocation(line: 1554, column: 40, scope: !8453)
!8457 = !DILocation(line: 1554, column: 9, scope: !8453)
!8458 = !DILocation(line: 1555, column: 33, scope: !8453)
!8459 = !DILocation(line: 1555, column: 43, scope: !8453)
!8460 = !DILocation(line: 1555, column: 21, scope: !8453)
!8461 = !DILocation(line: 1555, column: 31, scope: !8453)
!8462 = !DILocation(line: 1555, column: 9, scope: !8453)
!8463 = !DILocation(line: 1555, column: 19, scope: !8453)
!8464 = !DILocation(line: 1556, column: 9, scope: !8453)
!8465 = !DILocation(line: 1557, column: 8, scope: !8453)
!8466 = !DILocation(line: 1559, column: 19, scope: !8421)
!8467 = !DILocation(line: 1559, column: 24, scope: !8421)
!8468 = !DILocation(line: 1559, column: 31, scope: !8421)
!8469 = !DILocation(line: 1559, column: 37, scope: !8421)
!8470 = !DILocation(line: 1559, column: 8, scope: !8421)
!8471 = !DILocation(line: 1560, column: 8, scope: !8421)
!8472 = !DILocation(line: 1562, column: 16, scope: !8421)
!8473 = !DILocation(line: 1562, column: 22, scope: !8421)
!8474 = !DILocation(line: 1562, column: 31, scope: !8421)
!8475 = !DILocation(line: 1562, column: 38, scope: !8421)
!8476 = !DILocation(line: 1562, column: 29, scope: !8421)
!8477 = !DILocation(line: 1562, column: 14, scope: !8421)
!8478 = !DILocation(line: 1563, column: 17, scope: !8421)
!8479 = !DILocation(line: 1563, column: 24, scope: !8421)
!8480 = !DILocation(line: 1563, column: 31, scope: !8421)
!8481 = !DILocation(line: 1563, column: 8, scope: !8421)
!8482 = !DILocation(line: 1565, column: 12, scope: !8483)
!8483 = distinct !DILexicalBlock(scope: !8421, file: !3, line: 1565, column: 12)
!8484 = !DILocation(line: 1565, column: 19, scope: !8483)
!8485 = !DILocation(line: 1565, column: 26, scope: !8483)
!8486 = !DILocation(line: 1565, column: 12, scope: !8421)
!8487 = !DILocation(line: 1566, column: 13, scope: !8488)
!8488 = distinct !DILexicalBlock(scope: !8489, file: !3, line: 1566, column: 13)
!8489 = distinct !DILexicalBlock(scope: !8483, file: !3, line: 1565, column: 44)
!8490 = !DILocation(line: 1566, column: 20, scope: !8488)
!8491 = !DILocation(line: 1566, column: 27, scope: !8488)
!8492 = !DILocation(line: 1566, column: 13, scope: !8489)
!8493 = !DILocalVariable(name: "amin", scope: !8494, file: !3, line: 1567, type: !538)
!8494 = distinct !DILexicalBlock(scope: !8488, file: !3, line: 1566, column: 45)
!8495 = !DILocation(line: 1567, column: 16, scope: !8494)
!8496 = !DILocalVariable(name: "amax", scope: !8494, file: !3, line: 1567, type: !538)
!8497 = !DILocation(line: 1567, column: 25, scope: !8494)
!8498 = !DILocation(line: 1569, column: 17, scope: !8499)
!8499 = distinct !DILexicalBlock(scope: !8494, file: !3, line: 1569, column: 10)
!8500 = !DILocation(line: 1569, column: 15, scope: !8499)
!8501 = !DILocation(line: 1569, column: 22, scope: !8502)
!8502 = distinct !DILexicalBlock(scope: !8499, file: !3, line: 1569, column: 10)
!8503 = !DILocation(line: 1569, column: 24, scope: !8502)
!8504 = !DILocation(line: 1569, column: 10, scope: !8499)
!8505 = !DILocation(line: 1571, column: 26, scope: !8506)
!8506 = distinct !DILexicalBlock(scope: !8502, file: !3, line: 1569, column: 34)
!8507 = !DILocation(line: 1571, column: 33, scope: !8506)
!8508 = !DILocation(line: 1571, column: 42, scope: !8506)
!8509 = !DILocation(line: 1571, column: 45, scope: !8506)
!8510 = !DILocation(line: 1571, column: 21, scope: !8506)
!8511 = !DILocation(line: 1571, column: 16, scope: !8506)
!8512 = !DILocation(line: 1571, column: 11, scope: !8506)
!8513 = !DILocation(line: 1571, column: 19, scope: !8506)
!8514 = !DILocation(line: 1572, column: 26, scope: !8506)
!8515 = !DILocation(line: 1572, column: 33, scope: !8506)
!8516 = !DILocation(line: 1572, column: 42, scope: !8506)
!8517 = !DILocation(line: 1572, column: 45, scope: !8506)
!8518 = !DILocation(line: 1572, column: 21, scope: !8506)
!8519 = !DILocation(line: 1572, column: 16, scope: !8506)
!8520 = !DILocation(line: 1572, column: 11, scope: !8506)
!8521 = !DILocation(line: 1572, column: 19, scope: !8506)
!8522 = !DILocation(line: 1573, column: 10, scope: !8506)
!8523 = !DILocation(line: 1569, column: 30, scope: !8502)
!8524 = !DILocation(line: 1569, column: 10, scope: !8502)
!8525 = distinct !{!8525, !8504, !8526}
!8526 = !DILocation(line: 1573, column: 10, scope: !8499)
!8527 = !DILocation(line: 1575, column: 10, scope: !8494)
!8528 = !DILocation(line: 1576, column: 15, scope: !8529)
!8529 = distinct !DILexicalBlock(scope: !8494, file: !3, line: 1576, column: 14)
!8530 = !DILocation(line: 1576, column: 23, scope: !8529)
!8531 = !DILocation(line: 1576, column: 32, scope: !8529)
!8532 = !DILocation(line: 1576, column: 36, scope: !8529)
!8533 = !DILocation(line: 1576, column: 44, scope: !8529)
!8534 = !DILocation(line: 1576, column: 14, scope: !8494)
!8535 = !DILocation(line: 1577, column: 28, scope: !8529)
!8536 = !DILocation(line: 1577, column: 37, scope: !8529)
!8537 = !DILocation(line: 1577, column: 11, scope: !8529)
!8538 = !DILocation(line: 1578, column: 15, scope: !8539)
!8539 = distinct !DILexicalBlock(scope: !8494, file: !3, line: 1578, column: 14)
!8540 = !DILocation(line: 1578, column: 23, scope: !8539)
!8541 = !DILocation(line: 1578, column: 32, scope: !8539)
!8542 = !DILocation(line: 1578, column: 36, scope: !8539)
!8543 = !DILocation(line: 1578, column: 44, scope: !8539)
!8544 = !DILocation(line: 1578, column: 14, scope: !8494)
!8545 = !DILocation(line: 1579, column: 28, scope: !8539)
!8546 = !DILocation(line: 1579, column: 37, scope: !8539)
!8547 = !DILocation(line: 1579, column: 11, scope: !8539)
!8548 = !DILocation(line: 1580, column: 15, scope: !8549)
!8549 = distinct !DILexicalBlock(scope: !8494, file: !3, line: 1580, column: 14)
!8550 = !DILocation(line: 1580, column: 23, scope: !8549)
!8551 = !DILocation(line: 1580, column: 32, scope: !8549)
!8552 = !DILocation(line: 1580, column: 36, scope: !8549)
!8553 = !DILocation(line: 1580, column: 44, scope: !8549)
!8554 = !DILocation(line: 1580, column: 14, scope: !8494)
!8555 = !DILocation(line: 1581, column: 28, scope: !8549)
!8556 = !DILocation(line: 1581, column: 37, scope: !8549)
!8557 = !DILocation(line: 1581, column: 11, scope: !8549)
!8558 = !DILocation(line: 1582, column: 15, scope: !8559)
!8559 = distinct !DILexicalBlock(scope: !8494, file: !3, line: 1582, column: 14)
!8560 = !DILocation(line: 1582, column: 23, scope: !8559)
!8561 = !DILocation(line: 1582, column: 32, scope: !8559)
!8562 = !DILocation(line: 1582, column: 36, scope: !8559)
!8563 = !DILocation(line: 1582, column: 44, scope: !8559)
!8564 = !DILocation(line: 1582, column: 14, scope: !8494)
!8565 = !DILocation(line: 1583, column: 28, scope: !8559)
!8566 = !DILocation(line: 1583, column: 37, scope: !8559)
!8567 = !DILocation(line: 1583, column: 11, scope: !8559)
!8568 = !DILocation(line: 1584, column: 10, scope: !8494)
!8569 = !DILocation(line: 1585, column: 9, scope: !8494)
!8570 = !DILocation(line: 1586, column: 8, scope: !8489)
!8571 = !DILocation(line: 1589, column: 12, scope: !8572)
!8572 = distinct !DILexicalBlock(scope: !8421, file: !3, line: 1589, column: 12)
!8573 = !DILocation(line: 1589, column: 19, scope: !8572)
!8574 = !DILocation(line: 1589, column: 26, scope: !8572)
!8575 = !DILocation(line: 1589, column: 12, scope: !8421)
!8576 = !DILocation(line: 1591, column: 17, scope: !8577)
!8577 = distinct !DILexicalBlock(scope: !8572, file: !3, line: 1589, column: 44)
!8578 = !DILocation(line: 1591, column: 15, scope: !8577)
!8579 = !DILocation(line: 1592, column: 19, scope: !8577)
!8580 = !DILocation(line: 1592, column: 9, scope: !8577)
!8581 = !DILocation(line: 1594, column: 9, scope: !8577)
!8582 = !DILocation(line: 1595, column: 9, scope: !8577)
!8583 = !DILocation(line: 1596, column: 16, scope: !8584)
!8584 = distinct !DILexicalBlock(scope: !8577, file: !3, line: 1596, column: 9)
!8585 = !DILocation(line: 1596, column: 14, scope: !8584)
!8586 = !DILocation(line: 1596, column: 23, scope: !8587)
!8587 = distinct !DILexicalBlock(scope: !8584, file: !3, line: 1596, column: 9)
!8588 = !DILocation(line: 1596, column: 25, scope: !8587)
!8589 = !DILocation(line: 1596, column: 9, scope: !8584)
!8590 = !DILocalVariable(name: "fac", scope: !8591, file: !3, line: 1598, type: !375)
!8591 = distinct !DILexicalBlock(scope: !8587, file: !3, line: 1596, column: 37)
!8592 = !DILocation(line: 1598, column: 16, scope: !8591)
!8593 = !DILocation(line: 1598, column: 30, scope: !8591)
!8594 = !DILocation(line: 1598, column: 23, scope: !8591)
!8595 = !DILocation(line: 1598, column: 33, scope: !8591)
!8596 = !DILocation(line: 1598, column: 41, scope: !8591)
!8597 = !DILocation(line: 1600, column: 16, scope: !8591)
!8598 = !DILocation(line: 1600, column: 23, scope: !8591)
!8599 = !DILocation(line: 1600, column: 30, scope: !8591)
!8600 = !DILocation(line: 1600, column: 44, scope: !8591)
!8601 = !DILocation(line: 1600, column: 51, scope: !8591)
!8602 = !DILocation(line: 1600, column: 42, scope: !8591)
!8603 = !DILocation(line: 1600, column: 20, scope: !8591)
!8604 = !DILocation(line: 1600, column: 14, scope: !8591)
!8605 = !DILocation(line: 1602, column: 15, scope: !8591)
!8606 = !DILocation(line: 1602, column: 17, scope: !8591)
!8607 = !DILocation(line: 1602, column: 14, scope: !8591)
!8608 = !DILocation(line: 1602, column: 12, scope: !8591)
!8609 = !DILocation(line: 1603, column: 30, scope: !8591)
!8610 = !DILocation(line: 1603, column: 25, scope: !8591)
!8611 = !DILocation(line: 1603, column: 17, scope: !8591)
!8612 = !DILocation(line: 1603, column: 10, scope: !8591)
!8613 = !DILocation(line: 1603, column: 23, scope: !8591)
!8614 = !DILocation(line: 1604, column: 30, scope: !8591)
!8615 = !DILocation(line: 1604, column: 25, scope: !8591)
!8616 = !DILocation(line: 1604, column: 17, scope: !8591)
!8617 = !DILocation(line: 1604, column: 10, scope: !8591)
!8618 = !DILocation(line: 1604, column: 23, scope: !8591)
!8619 = !DILocation(line: 1605, column: 17, scope: !8591)
!8620 = !DILocation(line: 1605, column: 10, scope: !8591)
!8621 = !DILocation(line: 1605, column: 23, scope: !8591)
!8622 = !DILocation(line: 1606, column: 29, scope: !8591)
!8623 = !DILocation(line: 1606, column: 22, scope: !8591)
!8624 = !DILocation(line: 1606, column: 10, scope: !8591)
!8625 = !DILocation(line: 1607, column: 9, scope: !8591)
!8626 = !DILocation(line: 1596, column: 33, scope: !8587)
!8627 = !DILocation(line: 1596, column: 9, scope: !8587)
!8628 = distinct !{!8628, !8589, !8629}
!8629 = !DILocation(line: 1607, column: 9, scope: !8584)
!8630 = !DILocation(line: 1608, column: 9, scope: !8577)
!8631 = !DILocation(line: 1610, column: 20, scope: !8577)
!8632 = !DILocation(line: 1610, column: 19, scope: !8577)
!8633 = !DILocation(line: 1610, column: 9, scope: !8577)
!8634 = !DILocation(line: 1611, column: 8, scope: !8577)
!8635 = !DILocation(line: 1613, column: 12, scope: !8636)
!8636 = distinct !DILexicalBlock(scope: !8421, file: !3, line: 1613, column: 12)
!8637 = !DILocation(line: 1613, column: 19, scope: !8636)
!8638 = !DILocation(line: 1613, column: 26, scope: !8636)
!8639 = !DILocation(line: 1613, column: 12, scope: !8421)
!8640 = !DILocation(line: 1615, column: 17, scope: !8641)
!8641 = distinct !DILexicalBlock(scope: !8636, file: !3, line: 1613, column: 44)
!8642 = !DILocation(line: 1615, column: 15, scope: !8641)
!8643 = !DILocation(line: 1616, column: 19, scope: !8641)
!8644 = !DILocation(line: 1616, column: 9, scope: !8641)
!8645 = !DILocation(line: 1618, column: 9, scope: !8641)
!8646 = !DILocation(line: 1619, column: 9, scope: !8641)
!8647 = !DILocation(line: 1620, column: 16, scope: !8648)
!8648 = distinct !DILexicalBlock(scope: !8641, file: !3, line: 1620, column: 9)
!8649 = !DILocation(line: 1620, column: 14, scope: !8648)
!8650 = !DILocation(line: 1620, column: 23, scope: !8651)
!8651 = distinct !DILexicalBlock(scope: !8648, file: !3, line: 1620, column: 9)
!8652 = !DILocation(line: 1620, column: 25, scope: !8651)
!8653 = !DILocation(line: 1620, column: 9, scope: !8648)
!8654 = !DILocalVariable(name: "fac", scope: !8655, file: !3, line: 1622, type: !375)
!8655 = distinct !DILexicalBlock(scope: !8651, file: !3, line: 1620, column: 37)
!8656 = !DILocation(line: 1622, column: 16, scope: !8655)
!8657 = !DILocation(line: 1622, column: 30, scope: !8655)
!8658 = !DILocation(line: 1622, column: 23, scope: !8655)
!8659 = !DILocation(line: 1622, column: 33, scope: !8655)
!8660 = !DILocation(line: 1622, column: 41, scope: !8655)
!8661 = !DILocation(line: 1623, column: 38, scope: !8655)
!8662 = !DILocation(line: 1623, column: 45, scope: !8655)
!8663 = !DILocation(line: 1623, column: 52, scope: !8655)
!8664 = !DILocation(line: 1623, column: 66, scope: !8655)
!8665 = !DILocation(line: 1623, column: 73, scope: !8655)
!8666 = !DILocation(line: 1623, column: 64, scope: !8655)
!8667 = !DILocation(line: 1623, column: 42, scope: !8655)
!8668 = !DILocation(line: 1623, column: 36, scope: !8655)
!8669 = !DILocation(line: 1623, column: 14, scope: !8655)
!8670 = !DILocation(line: 1625, column: 15, scope: !8655)
!8671 = !DILocation(line: 1625, column: 17, scope: !8655)
!8672 = !DILocation(line: 1625, column: 14, scope: !8655)
!8673 = !DILocation(line: 1625, column: 12, scope: !8655)
!8674 = !DILocation(line: 1626, column: 17, scope: !8655)
!8675 = !DILocation(line: 1626, column: 10, scope: !8655)
!8676 = !DILocation(line: 1626, column: 23, scope: !8655)
!8677 = !DILocation(line: 1627, column: 30, scope: !8655)
!8678 = !DILocation(line: 1627, column: 25, scope: !8655)
!8679 = !DILocation(line: 1627, column: 17, scope: !8655)
!8680 = !DILocation(line: 1627, column: 10, scope: !8655)
!8681 = !DILocation(line: 1627, column: 23, scope: !8655)
!8682 = !DILocation(line: 1628, column: 30, scope: !8655)
!8683 = !DILocation(line: 1628, column: 25, scope: !8655)
!8684 = !DILocation(line: 1628, column: 17, scope: !8655)
!8685 = !DILocation(line: 1628, column: 10, scope: !8655)
!8686 = !DILocation(line: 1628, column: 23, scope: !8655)
!8687 = !DILocation(line: 1629, column: 29, scope: !8655)
!8688 = !DILocation(line: 1629, column: 22, scope: !8655)
!8689 = !DILocation(line: 1629, column: 10, scope: !8655)
!8690 = !DILocation(line: 1630, column: 9, scope: !8655)
!8691 = !DILocation(line: 1620, column: 33, scope: !8651)
!8692 = !DILocation(line: 1620, column: 9, scope: !8651)
!8693 = distinct !{!8693, !8653, !8694}
!8694 = !DILocation(line: 1630, column: 9, scope: !8648)
!8695 = !DILocation(line: 1631, column: 9, scope: !8641)
!8696 = !DILocation(line: 1633, column: 20, scope: !8641)
!8697 = !DILocation(line: 1633, column: 19, scope: !8641)
!8698 = !DILocation(line: 1633, column: 9, scope: !8641)
!8699 = !DILocation(line: 1634, column: 8, scope: !8641)
!8700 = !DILocation(line: 1637, column: 8, scope: !8421)
!8701 = !DILocation(line: 1638, column: 7, scope: !8421)
!8702 = !DILocation(line: 1639, column: 6, scope: !8416)
!8703 = !DILocation(line: 1640, column: 5, scope: !8410)
!8704 = !DILocation(line: 1641, column: 4, scope: !8402)
!8705 = !DILocation(line: 1642, column: 3, scope: !8396)
!8706 = !DILocation(line: 1643, column: 2, scope: !8383)
!8707 = !DILocation(line: 1535, column: 56, scope: !8380)
!8708 = !DILocation(line: 1535, column: 63, scope: !8380)
!8709 = !DILocation(line: 1535, column: 54, scope: !8380)
!8710 = !DILocation(line: 1535, column: 2, scope: !8380)
!8711 = distinct !{!8711, !8381, !8712}
!8712 = !DILocation(line: 1643, column: 2, scope: !8373)
!8713 = !DILocation(line: 1644, column: 1, scope: !8359)
!8714 = distinct !DISubprogram(name: "draw_dof_ellipse", scope: !3, file: !3, line: 1469, type: !8715, scopeLine: 1470, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1930)
!8715 = !DISubroutineType(types: !8716)
!8716 = !{null, !375, !375}
!8717 = !DILocalVariable(name: "ax", arg: 1, scope: !8714, file: !3, line: 1469, type: !375)
!8718 = !DILocation(line: 1469, column: 36, scope: !8714)
!8719 = !DILocalVariable(name: "az", arg: 2, scope: !8714, file: !3, line: 1469, type: !375)
!8720 = !DILocation(line: 1469, column: 46, scope: !8714)
!8721 = !DILocalVariable(name: "staticSine", scope: !8714, file: !3, line: 1471, type: !1918)
!8722 = !DILocation(line: 1471, column: 14, scope: !8714)
!8723 = !DILocalVariable(name: "i", scope: !8714, file: !3, line: 1479, type: !417)
!8724 = !DILocation(line: 1479, column: 6, scope: !8714)
!8725 = !DILocalVariable(name: "j", scope: !8714, file: !3, line: 1479, type: !417)
!8726 = !DILocation(line: 1479, column: 9, scope: !8714)
!8727 = !DILocalVariable(name: "n", scope: !8714, file: !3, line: 1479, type: !417)
!8728 = !DILocation(line: 1479, column: 12, scope: !8714)
!8729 = !DILocalVariable(name: "x", scope: !8714, file: !3, line: 1480, type: !375)
!8730 = !DILocation(line: 1480, column: 8, scope: !8714)
!8731 = !DILocalVariable(name: "z", scope: !8714, file: !3, line: 1480, type: !375)
!8732 = !DILocation(line: 1480, column: 11, scope: !8714)
!8733 = !DILocalVariable(name: "px", scope: !8714, file: !3, line: 1480, type: !375)
!8734 = !DILocation(line: 1480, column: 14, scope: !8714)
!8735 = !DILocalVariable(name: "pz", scope: !8714, file: !3, line: 1480, type: !375)
!8736 = !DILocation(line: 1480, column: 18, scope: !8714)
!8737 = !DILocation(line: 1482, column: 2, scope: !8714)
!8738 = !DILocation(line: 1483, column: 2, scope: !8714)
!8739 = !DILocation(line: 1485, column: 2, scope: !8714)
!8740 = !DILocation(line: 1487, column: 2, scope: !8714)
!8741 = !DILocation(line: 1488, column: 5, scope: !8714)
!8742 = !DILocation(line: 1489, column: 9, scope: !8743)
!8743 = distinct !DILexicalBlock(scope: !8714, file: !3, line: 1489, column: 2)
!8744 = !DILocation(line: 1489, column: 7, scope: !8743)
!8745 = !DILocation(line: 1489, column: 14, scope: !8746)
!8746 = distinct !DILexicalBlock(scope: !8743, file: !3, line: 1489, column: 2)
!8747 = !DILocation(line: 1489, column: 18, scope: !8746)
!8748 = !DILocation(line: 1489, column: 16, scope: !8746)
!8749 = !DILocation(line: 1489, column: 2, scope: !8743)
!8750 = !DILocation(line: 1490, column: 18, scope: !8751)
!8751 = distinct !DILexicalBlock(scope: !8746, file: !3, line: 1489, column: 26)
!8752 = !DILocation(line: 1490, column: 7, scope: !8751)
!8753 = !DILocation(line: 1490, column: 5, scope: !8751)
!8754 = !DILocation(line: 1492, column: 6, scope: !8751)
!8755 = !DILocation(line: 1493, column: 10, scope: !8756)
!8756 = distinct !DILexicalBlock(scope: !8751, file: !3, line: 1493, column: 3)
!8757 = !DILocation(line: 1493, column: 8, scope: !8756)
!8758 = !DILocation(line: 1493, column: 15, scope: !8759)
!8759 = distinct !DILexicalBlock(scope: !8756, file: !3, line: 1493, column: 3)
!8760 = !DILocation(line: 1493, column: 21, scope: !8759)
!8761 = !DILocation(line: 1493, column: 25, scope: !8759)
!8762 = !DILocation(line: 1493, column: 23, scope: !8759)
!8763 = !DILocation(line: 1493, column: 17, scope: !8759)
!8764 = !DILocation(line: 1493, column: 3, scope: !8756)
!8765 = !DILocation(line: 1494, column: 19, scope: !8766)
!8766 = distinct !DILexicalBlock(scope: !8759, file: !3, line: 1493, column: 34)
!8767 = !DILocation(line: 1494, column: 8, scope: !8766)
!8768 = !DILocation(line: 1494, column: 6, scope: !8766)
!8769 = !DILocation(line: 1496, column: 8, scope: !8770)
!8770 = distinct !DILexicalBlock(scope: !8766, file: !3, line: 1496, column: 8)
!8771 = !DILocation(line: 1496, column: 13, scope: !8770)
!8772 = !DILocation(line: 1496, column: 17, scope: !8770)
!8773 = !DILocation(line: 1496, column: 15, scope: !8770)
!8774 = !DILocation(line: 1496, column: 10, scope: !8770)
!8775 = !DILocation(line: 1496, column: 8, scope: !8766)
!8776 = !DILocation(line: 1497, column: 5, scope: !8777)
!8777 = distinct !DILexicalBlock(scope: !8770, file: !3, line: 1496, column: 20)
!8778 = !DILocation(line: 1498, column: 5, scope: !8777)
!8779 = !DILocation(line: 1499, column: 24, scope: !8777)
!8780 = !DILocation(line: 1499, column: 29, scope: !8777)
!8781 = !DILocation(line: 1499, column: 27, scope: !8777)
!8782 = !DILocation(line: 1499, column: 33, scope: !8777)
!8783 = !DILocation(line: 1499, column: 38, scope: !8777)
!8784 = !DILocation(line: 1499, column: 36, scope: !8777)
!8785 = !DILocation(line: 1499, column: 5, scope: !8777)
!8786 = !DILocation(line: 1500, column: 24, scope: !8777)
!8787 = !DILocation(line: 1500, column: 29, scope: !8777)
!8788 = !DILocation(line: 1500, column: 27, scope: !8777)
!8789 = !DILocation(line: 1500, column: 33, scope: !8777)
!8790 = !DILocation(line: 1500, column: 38, scope: !8777)
!8791 = !DILocation(line: 1500, column: 36, scope: !8777)
!8792 = !DILocation(line: 1500, column: 5, scope: !8777)
!8793 = !DILocation(line: 1501, column: 24, scope: !8777)
!8794 = !DILocation(line: 1501, column: 29, scope: !8777)
!8795 = !DILocation(line: 1501, column: 27, scope: !8777)
!8796 = !DILocation(line: 1501, column: 32, scope: !8777)
!8797 = !DILocation(line: 1501, column: 37, scope: !8777)
!8798 = !DILocation(line: 1501, column: 35, scope: !8777)
!8799 = !DILocation(line: 1501, column: 5, scope: !8777)
!8800 = !DILocation(line: 1502, column: 5, scope: !8777)
!8801 = !DILocation(line: 1503, column: 5, scope: !8777)
!8802 = !DILocation(line: 1504, column: 4, scope: !8777)
!8803 = !DILocation(line: 1506, column: 24, scope: !8804)
!8804 = distinct !DILexicalBlock(scope: !8770, file: !3, line: 1505, column: 9)
!8805 = !DILocation(line: 1506, column: 29, scope: !8804)
!8806 = !DILocation(line: 1506, column: 27, scope: !8804)
!8807 = !DILocation(line: 1506, column: 32, scope: !8804)
!8808 = !DILocation(line: 1506, column: 37, scope: !8804)
!8809 = !DILocation(line: 1506, column: 35, scope: !8804)
!8810 = !DILocation(line: 1506, column: 5, scope: !8804)
!8811 = !DILocation(line: 1507, column: 24, scope: !8804)
!8812 = !DILocation(line: 1507, column: 29, scope: !8804)
!8813 = !DILocation(line: 1507, column: 27, scope: !8804)
!8814 = !DILocation(line: 1507, column: 32, scope: !8804)
!8815 = !DILocation(line: 1507, column: 37, scope: !8804)
!8816 = !DILocation(line: 1507, column: 35, scope: !8804)
!8817 = !DILocation(line: 1507, column: 5, scope: !8804)
!8818 = !DILocation(line: 1508, column: 24, scope: !8804)
!8819 = !DILocation(line: 1508, column: 29, scope: !8804)
!8820 = !DILocation(line: 1508, column: 27, scope: !8804)
!8821 = !DILocation(line: 1508, column: 33, scope: !8804)
!8822 = !DILocation(line: 1508, column: 38, scope: !8804)
!8823 = !DILocation(line: 1508, column: 36, scope: !8804)
!8824 = !DILocation(line: 1508, column: 5, scope: !8804)
!8825 = !DILocation(line: 1509, column: 24, scope: !8804)
!8826 = !DILocation(line: 1509, column: 29, scope: !8804)
!8827 = !DILocation(line: 1509, column: 27, scope: !8804)
!8828 = !DILocation(line: 1509, column: 33, scope: !8804)
!8829 = !DILocation(line: 1509, column: 38, scope: !8804)
!8830 = !DILocation(line: 1509, column: 36, scope: !8804)
!8831 = !DILocation(line: 1509, column: 5, scope: !8804)
!8832 = !DILocation(line: 1512, column: 9, scope: !8766)
!8833 = !DILocation(line: 1512, column: 7, scope: !8766)
!8834 = !DILocation(line: 1513, column: 3, scope: !8766)
!8835 = !DILocation(line: 1493, column: 30, scope: !8759)
!8836 = !DILocation(line: 1493, column: 3, scope: !8759)
!8837 = distinct !{!8837, !8764, !8838}
!8838 = !DILocation(line: 1513, column: 3, scope: !8756)
!8839 = !DILocation(line: 1514, column: 8, scope: !8751)
!8840 = !DILocation(line: 1514, column: 6, scope: !8751)
!8841 = !DILocation(line: 1515, column: 2, scope: !8751)
!8842 = !DILocation(line: 1489, column: 22, scope: !8746)
!8843 = !DILocation(line: 1489, column: 2, scope: !8746)
!8844 = distinct !{!8844, !8749, !8845}
!8845 = !DILocation(line: 1515, column: 2, scope: !8743)
!8846 = !DILocation(line: 1516, column: 2, scope: !8714)
!8847 = !DILocation(line: 1518, column: 2, scope: !8714)
!8848 = !DILocation(line: 1519, column: 2, scope: !8714)
!8849 = !DILocation(line: 1521, column: 2, scope: !8714)
!8850 = !DILocation(line: 1523, column: 2, scope: !8714)
!8851 = !DILocation(line: 1524, column: 9, scope: !8852)
!8852 = distinct !DILexicalBlock(scope: !8714, file: !3, line: 1524, column: 2)
!8853 = !DILocation(line: 1524, column: 7, scope: !8852)
!8854 = !DILocation(line: 1524, column: 14, scope: !8855)
!8855 = distinct !DILexicalBlock(scope: !8852, file: !3, line: 1524, column: 2)
!8856 = !DILocation(line: 1524, column: 18, scope: !8855)
!8857 = !DILocation(line: 1524, column: 16, scope: !8855)
!8858 = !DILocation(line: 1524, column: 2, scope: !8852)
!8859 = !DILocation(line: 1525, column: 33, scope: !8855)
!8860 = !DILocation(line: 1525, column: 37, scope: !8855)
!8861 = !DILocation(line: 1525, column: 35, scope: !8855)
!8862 = !DILocation(line: 1525, column: 39, scope: !8855)
!8863 = !DILocation(line: 1525, column: 22, scope: !8855)
!8864 = !DILocation(line: 1525, column: 46, scope: !8855)
!8865 = !DILocation(line: 1525, column: 44, scope: !8855)
!8866 = !DILocation(line: 1525, column: 61, scope: !8855)
!8867 = !DILocation(line: 1525, column: 50, scope: !8855)
!8868 = !DILocation(line: 1525, column: 66, scope: !8855)
!8869 = !DILocation(line: 1525, column: 64, scope: !8855)
!8870 = !DILocation(line: 1525, column: 3, scope: !8855)
!8871 = !DILocation(line: 1524, column: 22, scope: !8855)
!8872 = !DILocation(line: 1524, column: 2, scope: !8855)
!8873 = distinct !{!8873, !8858, !8874}
!8874 = !DILocation(line: 1525, column: 68, scope: !8852)
!8875 = !DILocation(line: 1526, column: 2, scope: !8714)
!8876 = !DILocation(line: 1527, column: 1, scope: !8714)
!8877 = distinct !DISubprogram(name: "bgl_sphere_project", scope: !3, file: !3, line: 1455, type: !8715, scopeLine: 1456, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1930)
!8878 = !DILocalVariable(name: "ax", arg: 1, scope: !8877, file: !3, line: 1455, type: !375)
!8879 = !DILocation(line: 1455, column: 38, scope: !8877)
!8880 = !DILocalVariable(name: "az", arg: 2, scope: !8877, file: !3, line: 1455, type: !375)
!8881 = !DILocation(line: 1455, column: 48, scope: !8877)
!8882 = !DILocalVariable(name: "dir", scope: !8877, file: !3, line: 1457, type: !538)
!8883 = !DILocation(line: 1457, column: 8, scope: !8877)
!8884 = !DILocalVariable(name: "sine", scope: !8877, file: !3, line: 1457, type: !375)
!8885 = !DILocation(line: 1457, column: 16, scope: !8877)
!8886 = !DILocalVariable(name: "q3", scope: !8877, file: !3, line: 1457, type: !375)
!8887 = !DILocation(line: 1457, column: 22, scope: !8877)
!8888 = !DILocation(line: 1459, column: 16, scope: !8877)
!8889 = !DILocation(line: 1459, column: 21, scope: !8877)
!8890 = !DILocation(line: 1459, column: 19, scope: !8877)
!8891 = !DILocation(line: 1459, column: 14, scope: !8877)
!8892 = !DILocation(line: 1459, column: 26, scope: !8877)
!8893 = !DILocation(line: 1459, column: 31, scope: !8877)
!8894 = !DILocation(line: 1459, column: 29, scope: !8877)
!8895 = !DILocation(line: 1459, column: 24, scope: !8877)
!8896 = !DILocation(line: 1459, column: 7, scope: !8877)
!8897 = !DILocation(line: 1460, column: 8, scope: !8877)
!8898 = !DILocation(line: 1460, column: 13, scope: !8877)
!8899 = !DILocation(line: 1460, column: 7, scope: !8877)
!8900 = !DILocation(line: 1460, column: 44, scope: !8877)
!8901 = !DILocation(line: 1460, column: 38, scope: !8877)
!8902 = !DILocation(line: 1460, column: 36, scope: !8877)
!8903 = !DILocation(line: 1460, column: 5, scope: !8877)
!8904 = !DILocation(line: 1462, column: 12, scope: !8877)
!8905 = !DILocation(line: 1462, column: 11, scope: !8877)
!8906 = !DILocation(line: 1462, column: 17, scope: !8877)
!8907 = !DILocation(line: 1462, column: 15, scope: !8877)
!8908 = !DILocation(line: 1462, column: 2, scope: !8877)
!8909 = !DILocation(line: 1462, column: 9, scope: !8877)
!8910 = !DILocation(line: 1463, column: 25, scope: !8877)
!8911 = !DILocation(line: 1463, column: 23, scope: !8877)
!8912 = !DILocation(line: 1463, column: 16, scope: !8877)
!8913 = !DILocation(line: 1463, column: 2, scope: !8877)
!8914 = !DILocation(line: 1463, column: 9, scope: !8877)
!8915 = !DILocation(line: 1464, column: 11, scope: !8877)
!8916 = !DILocation(line: 1464, column: 16, scope: !8877)
!8917 = !DILocation(line: 1464, column: 14, scope: !8877)
!8918 = !DILocation(line: 1464, column: 2, scope: !8877)
!8919 = !DILocation(line: 1464, column: 9, scope: !8877)
!8920 = !DILocation(line: 1466, column: 14, scope: !8877)
!8921 = !DILocation(line: 1466, column: 2, scope: !8877)
!8922 = !DILocation(line: 1467, column: 1, scope: !8877)
