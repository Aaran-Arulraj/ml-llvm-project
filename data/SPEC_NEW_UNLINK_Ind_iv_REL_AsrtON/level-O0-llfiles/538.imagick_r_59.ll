; ModuleID = 'magick/distort.c'
source_filename = "magick/distort.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct._Image = type { i32, i32, i32, i64, i32, i32, i32, i64, i64, i64, i64, %struct._PixelPacket*, %struct._PixelPacket, %struct._PixelPacket, %struct._PixelPacket, double, %struct._ChromaticityInfo, i32, i8*, i32, i8*, i8*, i8*, i64, double, double, %struct._RectangleInfo, %struct._RectangleInfo, %struct._RectangleInfo, double, double, double, i32, i32, i32, i32, i32, i32, %struct._Image*, i64, i64, i64, i64, i64, i64, %struct._ErrorInfo, %struct._TimerInfo, i32 (i8*, i64, i64, i8*)*, i8*, i8*, i8*, %struct._Ascii85Info*, %struct._BlobInfo*, [4096 x i8], [4096 x i8], [4096 x i8], i64, i64, %struct._ExceptionInfo, i32, i64, %struct.SemaphoreInfo*, %struct._ProfileInfo, %struct._ProfileInfo, %struct._ProfileInfo*, i64, i64, %struct._Image*, %struct._Image*, %struct._Image*, i32, i32, %struct._PixelPacket, %struct._Image*, %struct._RectangleInfo, i8*, i8*, i32, i32, i64, i32, i64, i64, i32, i64 }
%struct._ChromaticityInfo = type { %struct._PrimaryInfo, %struct._PrimaryInfo, %struct._PrimaryInfo, %struct._PrimaryInfo }
%struct._PrimaryInfo = type { double, double, double }
%struct._ErrorInfo = type { double, double, double }
%struct._TimerInfo = type { %struct._Timer, %struct._Timer, i32, i64 }
%struct._Timer = type { double, double, double }
%struct._Ascii85Info = type opaque
%struct._BlobInfo = type opaque
%struct._ExceptionInfo = type { i32, i32, i8*, i8*, i8*, i32, %struct.SemaphoreInfo*, i64 }
%struct.SemaphoreInfo = type opaque
%struct._ProfileInfo = type { i8*, i64, i8*, i64 }
%struct._PixelPacket = type { i16, i16, i16, i16 }
%struct._RectangleInfo = type { i64, i64, i64, i64 }
%struct._AffineMatrix = type { double, double, double, double, double, double }
%struct._PointInfo = type { double, double }
%struct._CacheView = type opaque
%struct._MagickPixelPacket = type { i32, i32, i32, double, i64, float, float, float, float, float }
%struct._ResampleFilter = type opaque

@.str = private unnamed_addr constant [17 x i8] c"magick/distort.c\00", align 1
@.str.1 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.2 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.3 = private unnamed_addr constant [16 x i8] c"InvalidArgument\00", align 1
@.str.4 = private unnamed_addr constant [10 x i8] c"%s : '%s'\00", align 1
@.str.5 = private unnamed_addr constant [7 x i8] c"Resize\00", align 1
@.str.6 = private unnamed_addr constant [31 x i8] c"Invalid number of args: 2 only\00", align 1
@.str.7 = private unnamed_addr constant [17 x i8] c"distort:viewport\00", align 1
@.str.8 = private unnamed_addr constant [16 x i8] c"InvalidGeometry\00", align 1
@.str.9 = private unnamed_addr constant [10 x i8] c"`%s' `%s'\00", align 1
@.str.10 = private unnamed_addr constant [8 x i8] c"verbose\00", align 1
@.str.11 = private unnamed_addr constant [54 x i8] c"  -size %.20gx%.20g -page %+.20g%+.20g xc: +insert \\\0A\00", align 1
@.str.12 = private unnamed_addr constant [38 x i8] c"v.p{ xx-v.page.x-.5, yy-v.page.y-.5 }\00", align 1
@.str.13 = private unnamed_addr constant [32 x i8] c"p{ xx-page.x-.5, yy-page.y-.5 }\00", align 1
@.str.14 = private unnamed_addr constant [23 x i8] c"MemoryAllocationFailed\00", align 1
@.str.15 = private unnamed_addr constant [14 x i8] c"DistortImages\00", align 1
@stderr = external dso_local global %struct._IO_FILE*, align 8
@.str.16 = private unnamed_addr constant [20 x i8] c"Affine Projection:\0A\00", align 1
@.str.17 = private unnamed_addr constant [38 x i8] c"  -distort AffineProjection \\\0A      '\00", align 1
@.str.18 = private unnamed_addr constant [5 x i8] c"%lf,\00", align 1
@.str.19 = private unnamed_addr constant [6 x i8] c"%lf'\0A\00", align 1
@.str.20 = private unnamed_addr constant [32 x i8] c"Affine Distort, FX Equivelent:\0A\00", align 1
@.str.21 = private unnamed_addr constant [42 x i8] c"  -fx 'ii=i+page.x+0.5; jj=j+page.y+0.5;\0A\00", align 1
@.str.22 = private unnamed_addr constant [33 x i8] c"       xx=%+lf*ii %+lf*jj %+lf;\0A\00", align 1
@.str.23 = private unnamed_addr constant [33 x i8] c"       yy=%+lf*ii %+lf*jj %+lf;\0A\00", align 1
@.str.24 = private unnamed_addr constant [14 x i8] c"       %s' \\\0A\00", align 1
@.str.25 = private unnamed_addr constant [20 x i8] c"DistortCoefficients\00", align 1
@.str.26 = private unnamed_addr constant [25 x i8] c"Perspective Projection:\0A\00", align 1
@.str.27 = private unnamed_addr constant [43 x i8] c"  -distort PerspectiveProjection \\\0A      '\00", align 1
@.str.28 = private unnamed_addr constant [6 x i8] c"%lf, \00", align 1
@.str.29 = private unnamed_addr constant [9 x i8] c"\0A       \00", align 1
@.str.30 = private unnamed_addr constant [37 x i8] c"Perspective Distort, FX Equivelent:\0A\00", align 1
@.str.31 = private unnamed_addr constant [32 x i8] c"       rr=%+lf*ii %+lf*jj + 1;\0A\00", align 1
@.str.32 = private unnamed_addr constant [38 x i8] c"       xx=(%+lf*ii %+lf*jj %+lf)/rr;\0A\00", align 1
@.str.33 = private unnamed_addr constant [38 x i8] c"       yy=(%+lf*ii %+lf*jj %+lf)/rr;\0A\00", align 1
@.str.34 = private unnamed_addr constant [29 x i8] c"       rr%s0 ? %s : blue' \\\0A\00", align 1
@.str.35 = private unnamed_addr constant [2 x i8] c"<\00", align 1
@.str.36 = private unnamed_addr constant [2 x i8] c">\00", align 1
@.str.37 = private unnamed_addr constant [36 x i8] c"BilinearForward Mapping Equations:\0A\00", align 1
@.str.38 = private unnamed_addr constant [38 x i8] c"    i = %+lf*x %+lf*y %+lf*x*y %+lf;\0A\00", align 1
@.str.39 = private unnamed_addr constant [38 x i8] c"    j = %+lf*x %+lf*y %+lf*x*y %+lf;\0A\00", align 1
@.str.40 = private unnamed_addr constant [41 x i8] c"BilinearForward Distort, FX Equivelent:\0A\00", align 1
@.str.41 = private unnamed_addr constant [42 x i8] c"  -fx 'ii=i+page.x%+lf; jj=j+page.y%+lf;\0A\00", align 1
@.str.42 = private unnamed_addr constant [32 x i8] c"       bb=%lf*ii %+lf*jj %+lf;\0A\00", align 1
@.str.43 = private unnamed_addr constant [39 x i8] c"       rt=bb*bb %+lf*(%lf*ii%+lf*jj);\0A\00", align 1
@.str.44 = private unnamed_addr constant [37 x i8] c"       yy=( -bb + sqrt(rt) ) / %lf;\0A\00", align 1
@.str.45 = private unnamed_addr constant [31 x i8] c"       yy=(%lf*ii%+lf*jj)/bb;\0A\00", align 1
@.str.46 = private unnamed_addr constant [39 x i8] c"       xx=(ii %+lf*yy)/(%lf %+lf*yy);\0A\00", align 1
@.str.47 = private unnamed_addr constant [30 x i8] c"       (rt < 0 ) ? red : %s'\0A\00", align 1
@.str.48 = private unnamed_addr constant [41 x i8] c"BilinearReverse Distort, FX Equivelent:\0A\00", align 1
@.str.49 = private unnamed_addr constant [44 x i8] c"       xx=%+lf*ii %+lf*jj %+lf*ii*jj %+lf;\0A\00", align 1
@.str.50 = private unnamed_addr constant [44 x i8] c"       yy=%+lf*ii %+lf*jj %+lf*ii*jj %+lf;\0A\00", align 1
@.str.51 = private unnamed_addr constant [50 x i8] c"Polynomial (order %lg, terms %lu), FX Equivelent\0A\00", align 1
@.str.52 = private unnamed_addr constant [12 x i8] c"       xx =\00", align 1
@.str.53 = private unnamed_addr constant [11 x i8] c"\0A         \00", align 1
@.str.54 = private unnamed_addr constant [8 x i8] c" %+lf%s\00", align 1
@.str.55 = private unnamed_addr constant [14 x i8] c";\0A       yy =\00", align 1
@.str.56 = private unnamed_addr constant [16 x i8] c";\0A       %s' \\\0A\00", align 1
@.str.57 = private unnamed_addr constant [37 x i8] c"Arc Distort, Internal Coefficients:\0A\00", align 1
@.str.58 = private unnamed_addr constant [17 x i8] c"  c%.20g = %+lf\0A\00", align 1
@.str.59 = private unnamed_addr constant [29 x i8] c"Arc Distort, FX Equivelent:\0A\00", align 1
@.str.60 = private unnamed_addr constant [34 x i8] c"  -fx 'ii=i+page.x; jj=j+page.y;\0A\00", align 1
@.str.61 = private unnamed_addr constant [38 x i8] c"       xx=(atan2(jj,ii)%+lf)/(2*pi);\0A\00", align 1
@.str.62 = private unnamed_addr constant [25 x i8] c"       xx=xx-round(xx);\0A\00", align 1
@.str.63 = private unnamed_addr constant [24 x i8] c"       xx=xx*%lf %+lf;\0A\00", align 1
@.str.64 = private unnamed_addr constant [39 x i8] c"       yy=(%lf - hypot(ii,jj)) * %lf;\0A\00", align 1
@.str.65 = private unnamed_addr constant [28 x i8] c"       v.p{xx-.5,yy-.5}' \\\0A\00", align 1
@.str.66 = private unnamed_addr constant [37 x i8] c"Polar Distort, Internal Coefficents\0A\00", align 1
@.str.67 = private unnamed_addr constant [31 x i8] c"Polar Distort, FX Equivelent:\0A\00", align 1
@.str.68 = private unnamed_addr constant [38 x i8] c"       xx=(atan2(ii,jj)%+lf)/(2*pi);\0A\00", align 1
@.str.69 = private unnamed_addr constant [32 x i8] c"       xx=xx*2*pi*%lf + v.w/2;\0A\00", align 1
@.str.70 = private unnamed_addr constant [35 x i8] c"       yy=(hypot(ii,jj)%+lf)*%lf;\0A\00", align 1
@.str.71 = private unnamed_addr constant [39 x i8] c"DePolar Distort, Internal Coefficents\0A\00", align 1
@.str.72 = private unnamed_addr constant [33 x i8] c"DePolar Distort, FX Equivelent:\0A\00", align 1
@.str.73 = private unnamed_addr constant [28 x i8] c"  -fx 'aa=(i+.5)*%lf %+lf;\0A\00", align 1
@.str.74 = private unnamed_addr constant [28 x i8] c"       rr=(j+.5)*%lf %+lf;\0A\00", align 1
@.str.75 = private unnamed_addr constant [28 x i8] c"       xx=rr*sin(aa) %+lf;\0A\00", align 1
@.str.76 = private unnamed_addr constant [28 x i8] c"       yy=rr*cos(aa) %+lf;\0A\00", align 1
@.str.77 = private unnamed_addr constant [49 x i8] c"Cylinder to Plane Distort, Internal Coefficents\0A\00", align 1
@.str.78 = private unnamed_addr constant [26 x i8] c"  cylinder_radius = %+lf\0A\00", align 1
@.str.79 = private unnamed_addr constant [43 x i8] c"Cylinder to Plane Distort, FX Equivelent:\0A\00", align 1
@.str.80 = private unnamed_addr constant [50 x i8] c"  -fx 'ii=i+page.x%+lf+0.5; jj=j+page.y%+lf+0.5;\0A\00", align 1
@.str.81 = private unnamed_addr constant [26 x i8] c"       aa=atan(ii/%+lf);\0A\00", align 1
@.str.82 = private unnamed_addr constant [23 x i8] c"       xx=%lf*aa%+lf;\0A\00", align 1
@.str.83 = private unnamed_addr constant [27 x i8] c"       yy=jj*cos(aa)%+lf;\0A\00", align 1
@.str.84 = private unnamed_addr constant [49 x i8] c"Plane to Cylinder Distort, Internal Coefficents\0A\00", align 1
@.str.85 = private unnamed_addr constant [43 x i8] c"Plane to Cylinder Distort, FX Equivelent:\0A\00", align 1
@.str.86 = private unnamed_addr constant [20 x i8] c"       ii=ii/%+lf;\0A\00", align 1
@.str.87 = private unnamed_addr constant [28 x i8] c"       xx=%lf*tan(ii)%+lf;\0A\00", align 1
@.str.88 = private unnamed_addr constant [27 x i8] c"       yy=jj/cos(ii)%+lf;\0A\00", align 1
@.str.89 = private unnamed_addr constant [34 x i8] c"Barrel%s Distort, FX Equivelent:\0A\00", align 1
@.str.90 = private unnamed_addr constant [4 x i8] c"Inv\00", align 1
@.str.91 = private unnamed_addr constant [33 x i8] c"  -fx 'xc=(w-1)/2;  yc=(h-1)/2;\0A\00", align 1
@.str.92 = private unnamed_addr constant [25 x i8] c"  -fx 'xc=%lf;  yc=%lf;\0A\00", align 1
@.str.93 = private unnamed_addr constant [45 x i8] c"       ii=i-xc;  jj=j-yc;  rr=hypot(ii,jj);\0A\00", align 1
@.str.94 = private unnamed_addr constant [55 x i8] c"       ii=ii%s(%lf*rr*rr*rr %+lf*rr*rr %+lf*rr %+lf);\0A\00", align 1
@.str.95 = private unnamed_addr constant [2 x i8] c"*\00", align 1
@.str.96 = private unnamed_addr constant [2 x i8] c"/\00", align 1
@.str.97 = private unnamed_addr constant [55 x i8] c"       jj=jj%s(%lf*rr*rr*rr %+lf*rr*rr %+lf*rr %+lf);\0A\00", align 1
@.str.98 = private unnamed_addr constant [34 x i8] c"       v.p{fx*ii+xc,fy*jj+yc}' \\\0A\00", align 1
@.str.99 = private unnamed_addr constant [14 x i8] c"distort:scale\00", align 1
@.str.100 = private unnamed_addr constant [22 x i8] c"-define distort:scale\00", align 1
@.str.101 = private unnamed_addr constant [28 x i8] c"x=%lf  y=%lf  u=%lf  v=%lf\0A\00", align 1
@.str.102 = private unnamed_addr constant [41 x i8] c"radius = %lf  phi = %lf  validity = %lf\0A\00", align 1
@.str.103 = private unnamed_addr constant [44 x i8] c"du/dx=%lf  du/dx=%lf  dv/dx=%lf  dv/dy=%lf\0A\00", align 1
@.str.104 = private unnamed_addr constant [14 x i8] c"Distort/Image\00", align 1
@.str.105 = private unnamed_addr constant [27 x i8] c"Barycentric Sparse Color:\0A\00", align 1
@.str.106 = private unnamed_addr constant [41 x i8] c"  -channel R -fx '%+lf*i %+lf*j %+lf' \\\0A\00", align 1
@.str.107 = private unnamed_addr constant [41 x i8] c"  -channel G -fx '%+lf*i %+lf*j %+lf' \\\0A\00", align 1
@.str.108 = private unnamed_addr constant [41 x i8] c"  -channel B -fx '%+lf*i %+lf*j %+lf' \\\0A\00", align 1
@.str.109 = private unnamed_addr constant [41 x i8] c"  -channel K -fx '%+lf*i %+lf*j %+lf' \\\0A\00", align 1
@.str.110 = private unnamed_addr constant [41 x i8] c"  -channel A -fx '%+lf*i %+lf*j %+lf' \\\0A\00", align 1
@.str.111 = private unnamed_addr constant [23 x i8] c"Bilinear Sparse Color\0A\00", align 1
@.str.112 = private unnamed_addr constant [49 x i8] c"   -channel R -fx '%+lf*i %+lf*j %+lf*i*j %+lf;\0A\00", align 1
@.str.113 = private unnamed_addr constant [49 x i8] c"   -channel G -fx '%+lf*i %+lf*j %+lf*i*j %+lf;\0A\00", align 1
@.str.114 = private unnamed_addr constant [49 x i8] c"   -channel B -fx '%+lf*i %+lf*j %+lf*i*j %+lf;\0A\00", align 1
@.str.115 = private unnamed_addr constant [49 x i8] c"   -channel K -fx '%+lf*i %+lf*j %+lf*i*j %+lf;\0A\00", align 1
@.str.116 = private unnamed_addr constant [49 x i8] c"   -channel A -fx '%+lf*i %+lf*j %+lf*i*j %+lf;\0A\00", align 1
@.str.117 = private unnamed_addr constant [20 x i8] c"Distort/SparseColor\00", align 1
@.str.118 = private unnamed_addr constant [11 x i8] c"Polynomial\00", align 1
@.str.119 = private unnamed_addr constant [39 x i8] c"Invalid number of args: order [CPs]...\00", align 1
@.str.120 = private unnamed_addr constant [49 x i8] c"Invalid order, should be interger 1 to 5, or 1.5\00", align 1
@.str.121 = private unnamed_addr constant [34 x i8] c"%s : 'require at least %.20g CPs'\00", align 1
@.str.122 = private unnamed_addr constant [21 x i8] c"unknown method given\00", align 1
@.str.123 = private unnamed_addr constant [21 x i8] c"GenerateCoefficients\00", align 1
@.str.124 = private unnamed_addr constant [7 x i8] c"Affine\00", align 1
@.str.125 = private unnamed_addr constant [25 x i8] c"%s : 'Unsolvable Matrix'\00", align 1
@.str.126 = private unnamed_addr constant [28 x i8] c"%s : 'Needs 6 coeff values'\00", align 1
@.str.127 = private unnamed_addr constant [33 x i8] c"%s : 'Needs at least 1 argument'\00", align 1
@.str.128 = private unnamed_addr constant [38 x i8] c"%s : 'Too Many Arguments (7 or less)'\00", align 1
@.str.129 = private unnamed_addr constant [24 x i8] c"%s : 'Zero Scale Given'\00", align 1
@.str.130 = private unnamed_addr constant [34 x i8] c"%s : 'Needs 8 coefficient values'\00", align 1
@.str.131 = private unnamed_addr constant [27 x i8] c"%s : 'Arc Angle Too Small'\00", align 1
@.str.132 = private unnamed_addr constant [30 x i8] c"%s : 'Outer Radius Too Small'\00", align 1
@.str.133 = private unnamed_addr constant [25 x i8] c"%s : number of arguments\00", align 1
@.str.134 = private unnamed_addr constant [20 x i8] c"%s : Invalid Radius\00", align 1
@.str.135 = private unnamed_addr constant [23 x i8] c"%s : Invalid FOV Angle\00", align 1
@.str.136 = private unnamed_addr constant [38 x i8] c"%s : 'requires CP's (4 numbers each)'\00", align 1
@.str.137 = private unnamed_addr constant [15 x i8] c"shepards:power\00", align 1
@.str.138 = private unnamed_addr constant [23 x i8] c"-define shepards:power\00", align 1
@.str.139 = private unnamed_addr constant [18 x i8] c"no method handler\00", align 1
@.str.140 = private unnamed_addr constant [4 x i8] c"*ii\00", align 1
@.str.141 = private unnamed_addr constant [4 x i8] c"*jj\00", align 1
@.str.142 = private unnamed_addr constant [7 x i8] c"*ii*jj\00", align 1
@.str.143 = private unnamed_addr constant [7 x i8] c"*ii*ii\00", align 1
@.str.144 = private unnamed_addr constant [7 x i8] c"*jj*jj\00", align 1
@.str.145 = private unnamed_addr constant [10 x i8] c"*ii*ii*ii\00", align 1
@.str.146 = private unnamed_addr constant [10 x i8] c"*ii*ii*jj\00", align 1
@.str.147 = private unnamed_addr constant [10 x i8] c"*ii*jj*jj\00", align 1
@.str.148 = private unnamed_addr constant [10 x i8] c"*jj*jj*jj\00", align 1
@.str.149 = private unnamed_addr constant [13 x i8] c"*ii*ii*ii*ii\00", align 1
@.str.150 = private unnamed_addr constant [13 x i8] c"*ii*ii*ii*jj\00", align 1
@.str.151 = private unnamed_addr constant [13 x i8] c"*ii*ii*jj*jj\00", align 1
@.str.152 = private unnamed_addr constant [13 x i8] c"*ii*jj*jj*jj\00", align 1
@.str.153 = private unnamed_addr constant [13 x i8] c"*jj*jj*jj*jj\00", align 1
@.str.154 = private unnamed_addr constant [16 x i8] c"*ii*ii*ii*ii*ii\00", align 1
@.str.155 = private unnamed_addr constant [16 x i8] c"*ii*ii*ii*ii*jj\00", align 1
@.str.156 = private unnamed_addr constant [16 x i8] c"*ii*ii*ii*jj*jj\00", align 1
@.str.157 = private unnamed_addr constant [16 x i8] c"*ii*ii*jj*jj*jj\00", align 1
@.str.158 = private unnamed_addr constant [16 x i8] c"*ii*jj*jj*jj*jj\00", align 1
@.str.159 = private unnamed_addr constant [16 x i8] c"*jj*jj*jj*jj*jj\00", align 1
@.str.160 = private unnamed_addr constant [8 x i8] c"UNKNOWN\00", align 1
@.str.161 = private unnamed_addr constant [6 x i8] c"%s/%s\00", align 1

; Function Attrs: noinline nounwind uwtable
define dso_local %struct._Image* @AffineTransformImage(%struct._Image* %image, %struct._AffineMatrix* %affine_matrix, %struct._ExceptionInfo* %exception) #0 !dbg !840 {
entry:
  %image.addr = alloca %struct._Image*, align 8
  %affine_matrix.addr = alloca %struct._AffineMatrix*, align 8
  %exception.addr = alloca %struct._ExceptionInfo*, align 8
  %distort = alloca [6 x double], align 16
  %deskew_image = alloca %struct._Image*, align 8
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !858, metadata !DIExpression()), !dbg !859
  store %struct._AffineMatrix* %affine_matrix, %struct._AffineMatrix** %affine_matrix.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._AffineMatrix** %affine_matrix.addr, metadata !860, metadata !DIExpression()), !dbg !861
  store %struct._ExceptionInfo* %exception, %struct._ExceptionInfo** %exception.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo** %exception.addr, metadata !862, metadata !DIExpression()), !dbg !863
  call void @llvm.dbg.declare(metadata [6 x double]* %distort, metadata !864, metadata !DIExpression()), !dbg !868
  call void @llvm.dbg.declare(metadata %struct._Image** %deskew_image, metadata !869, metadata !DIExpression()), !dbg !870
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !871
  %debug = getelementptr inbounds %struct._Image, %struct._Image* %0, i32 0, i32 59, !dbg !873
  %1 = load i32, i32* %debug, align 8, !dbg !873
  %cmp = icmp ne i32 %1, 0, !dbg !874
  br i1 %cmp, label %if.then, label %if.end, !dbg !875

if.then:                                          ; preds = %entry
  %2 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !876
  %filename = getelementptr inbounds %struct._Image, %struct._Image* %2, i32 0, i32 53, !dbg !877
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename, i64 0, i64 0, !dbg !876
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 1, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 308, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !878
  br label %if.end, !dbg !879

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._AffineMatrix*, %struct._AffineMatrix** %affine_matrix.addr, align 8, !dbg !880
  %sx = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %3, i32 0, i32 0, !dbg !881
  %4 = load double, double* %sx, align 8, !dbg !881
  %arrayidx = getelementptr inbounds [6 x double], [6 x double]* %distort, i64 0, i64 0, !dbg !882
  store double %4, double* %arrayidx, align 16, !dbg !883
  %5 = load %struct._AffineMatrix*, %struct._AffineMatrix** %affine_matrix.addr, align 8, !dbg !884
  %rx = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %5, i32 0, i32 1, !dbg !885
  %6 = load double, double* %rx, align 8, !dbg !885
  %arrayidx1 = getelementptr inbounds [6 x double], [6 x double]* %distort, i64 0, i64 1, !dbg !886
  store double %6, double* %arrayidx1, align 8, !dbg !887
  %7 = load %struct._AffineMatrix*, %struct._AffineMatrix** %affine_matrix.addr, align 8, !dbg !888
  %ry = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %7, i32 0, i32 2, !dbg !889
  %8 = load double, double* %ry, align 8, !dbg !889
  %arrayidx2 = getelementptr inbounds [6 x double], [6 x double]* %distort, i64 0, i64 2, !dbg !890
  store double %8, double* %arrayidx2, align 16, !dbg !891
  %9 = load %struct._AffineMatrix*, %struct._AffineMatrix** %affine_matrix.addr, align 8, !dbg !892
  %sy = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %9, i32 0, i32 3, !dbg !893
  %10 = load double, double* %sy, align 8, !dbg !893
  %arrayidx3 = getelementptr inbounds [6 x double], [6 x double]* %distort, i64 0, i64 3, !dbg !894
  store double %10, double* %arrayidx3, align 8, !dbg !895
  %11 = load %struct._AffineMatrix*, %struct._AffineMatrix** %affine_matrix.addr, align 8, !dbg !896
  %tx = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %11, i32 0, i32 4, !dbg !897
  %12 = load double, double* %tx, align 8, !dbg !897
  %arrayidx4 = getelementptr inbounds [6 x double], [6 x double]* %distort, i64 0, i64 4, !dbg !898
  store double %12, double* %arrayidx4, align 16, !dbg !899
  %13 = load %struct._AffineMatrix*, %struct._AffineMatrix** %affine_matrix.addr, align 8, !dbg !900
  %ty = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %13, i32 0, i32 5, !dbg !901
  %14 = load double, double* %ty, align 8, !dbg !901
  %arrayidx5 = getelementptr inbounds [6 x double], [6 x double]* %distort, i64 0, i64 5, !dbg !902
  store double %14, double* %arrayidx5, align 8, !dbg !903
  %15 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !904
  %arraydecay6 = getelementptr inbounds [6 x double], [6 x double]* %distort, i64 0, i64 0, !dbg !905
  %16 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !906
  %call7 = call %struct._Image* @DistortImage(%struct._Image* %15, i32 2, i64 6, double* %arraydecay6, i32 1, %struct._ExceptionInfo* %16), !dbg !907
  store %struct._Image* %call7, %struct._Image** %deskew_image, align 8, !dbg !908
  %17 = load %struct._Image*, %struct._Image** %deskew_image, align 8, !dbg !909
  ret %struct._Image* %17, !dbg !910
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

declare dso_local i32 @LogMagickEvent(i32, i8*, i8*, i64, i8*, ...) #2

; Function Attrs: noinline nounwind uwtable
define dso_local %struct._Image* @DistortImage(%struct._Image* %image, i32 %method, i64 %number_arguments, double* %arguments, i32 %bestfit, %struct._ExceptionInfo* %exception) #0 !dbg !911 {
entry:
  %retval = alloca %struct._Image*, align 8
  %image.addr = alloca %struct._Image*, align 8
  %method.addr = alloca i32, align 4
  %number_arguments.addr = alloca i64, align 8
  %arguments.addr = alloca double*, align 8
  %bestfit.addr = alloca i32, align 4
  %exception.addr = alloca %struct._ExceptionInfo*, align 8
  %coeff = alloca double*, align 8
  %output_scaling = alloca double, align 8
  %distort_image = alloca %struct._Image*, align 8
  %geometry = alloca %struct._RectangleInfo, align 8
  %viewport_given = alloca i32, align 4
  %s = alloca %struct._PointInfo, align 8
  %d = alloca %struct._PointInfo, align 8
  %min = alloca %struct._PointInfo, align 8
  %max = alloca %struct._PointInfo, align 8
  %fix_bounds = alloca i32, align 4
  %inverse = alloca [6 x double], align 16
  %inverse204 = alloca [8 x double], align 16
  %scale = alloca double, align 8
  %a = alloca double, align 8
  %ca = alloca double, align 8
  %sa = alloca double, align 8
  %artifact = alloca i8*, align 8
  %flags = alloca i32, align 4
  %i = alloca i64, align 8
  %image_gen = alloca [4096 x i8], align 16
  %lookup = alloca i8*, align 8
  %inverse741 = alloca double*, align 8
  %inverse776 = alloca double*, align 8
  %nterms = alloca i64, align 8
  %xc = alloca double, align 8
  %yc = alloca double, align 8
  %artifact1141 = alloca i8*, align 8
  %distort_view = alloca %struct._CacheView*, align 8
  %status = alloca i32, align 4
  %progress = alloca i64, align 8
  %zero = alloca %struct._MagickPixelPacket, align 8
  %resample_filter = alloca %struct._ResampleFilter**, align 8
  %j = alloca i64, align 8
  %id = alloca i32, align 4
  %validity = alloca double, align 8
  %sync = alloca i32, align 4
  %pixel = alloca %struct._MagickPixelPacket, align 8
  %invalid = alloca %struct._MagickPixelPacket, align 8
  %d1223 = alloca %struct._PointInfo, align 8
  %s1224 = alloca %struct._PointInfo, align 8
  %indexes = alloca i16*, align 8
  %i1225 = alloca i64, align 8
  %q = alloca %struct._PixelPacket*, align 8
  %p = alloca double, align 8
  %q1289 = alloca double, align 8
  %r = alloca double, align 8
  %abs_r = alloca double, align 8
  %abs_c6 = alloca double, align 8
  %abs_c7 = alloca double, align 8
  %scale1290 = alloca double, align 8
  %b = alloca double, align 8
  %c = alloca double, align 8
  %k = alloca i64, align 8
  %nterms1516 = alloca i64, align 8
  %du = alloca %struct._PointInfo, align 8
  %dv = alloca %struct._PointInfo, align 8
  %ax = alloca double, align 8
  %cx = alloca double, align 8
  %cx1828 = alloca double, align 8
  %tx = alloca double, align 8
  %r1890 = alloca double, align 8
  %fx = alloca double, align 8
  %fy = alloca double, align 8
  %gx = alloca double, align 8
  %gy = alloca double, align 8
  %i2020 = alloca i64, align 8
  %denominator = alloca double, align 8
  %weight = alloca double, align 8
  %proceed = alloca i32, align 4
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !917, metadata !DIExpression()), !dbg !918
  store i32 %method, i32* %method.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %method.addr, metadata !919, metadata !DIExpression()), !dbg !920
  store i64 %number_arguments, i64* %number_arguments.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %number_arguments.addr, metadata !921, metadata !DIExpression()), !dbg !922
  store double* %arguments, double** %arguments.addr, align 8
  call void @llvm.dbg.declare(metadata double** %arguments.addr, metadata !923, metadata !DIExpression()), !dbg !924
  store i32 %bestfit, i32* %bestfit.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bestfit.addr, metadata !925, metadata !DIExpression()), !dbg !926
  store %struct._ExceptionInfo* %exception, %struct._ExceptionInfo** %exception.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo** %exception.addr, metadata !927, metadata !DIExpression()), !dbg !928
  call void @llvm.dbg.declare(metadata double** %coeff, metadata !929, metadata !DIExpression()), !dbg !930
  call void @llvm.dbg.declare(metadata double* %output_scaling, metadata !931, metadata !DIExpression()), !dbg !932
  call void @llvm.dbg.declare(metadata %struct._Image** %distort_image, metadata !933, metadata !DIExpression()), !dbg !934
  call void @llvm.dbg.declare(metadata %struct._RectangleInfo* %geometry, metadata !935, metadata !DIExpression()), !dbg !936
  call void @llvm.dbg.declare(metadata i32* %viewport_given, metadata !937, metadata !DIExpression()), !dbg !938
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !939
  %debug = getelementptr inbounds %struct._Image, %struct._Image* %0, i32 0, i32 59, !dbg !941
  %1 = load i32, i32* %debug, align 8, !dbg !941
  %cmp = icmp ne i32 %1, 0, !dbg !942
  br i1 %cmp, label %if.then, label %if.end, !dbg !943

if.then:                                          ; preds = %entry
  %2 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !944
  %filename = getelementptr inbounds %struct._Image, %struct._Image* %2, i32 0, i32 53, !dbg !945
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename, i64 0, i64 0, !dbg !944
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 1, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 1708, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !946
  br label %if.end, !dbg !947

if.end:                                           ; preds = %if.then, %entry
  %3 = load i32, i32* %method.addr, align 4, !dbg !948
  %cmp1 = icmp eq i32 %3, 17, !dbg !950
  br i1 %cmp1, label %if.then2, label %if.end10, !dbg !951

if.then2:                                         ; preds = %if.end
  %4 = load i64, i64* %number_arguments.addr, align 8, !dbg !952
  %cmp3 = icmp ne i64 %4, 2, !dbg !955
  br i1 %cmp3, label %if.then4, label %if.end6, !dbg !956

if.then4:                                         ; preds = %if.then2
  %5 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !957
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %5, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 1719, i32 410, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.6, i64 0, i64 0)), !dbg !959
  store %struct._Image* null, %struct._Image** %retval, align 8, !dbg !960
  br label %return, !dbg !960

if.end6:                                          ; preds = %if.then2
  %6 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !961
  %7 = load double*, double** %arguments.addr, align 8, !dbg !962
  %arrayidx = getelementptr inbounds double, double* %7, i64 0, !dbg !962
  %8 = load double, double* %arrayidx, align 8, !dbg !962
  %conv = fptoui double %8 to i64, !dbg !963
  %9 = load double*, double** %arguments.addr, align 8, !dbg !964
  %arrayidx7 = getelementptr inbounds double, double* %9, i64 1, !dbg !964
  %10 = load double, double* %arrayidx7, align 8, !dbg !964
  %conv8 = fptoui double %10 to i64, !dbg !965
  %11 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !966
  %call9 = call %struct._Image* @DistortResizeImage(%struct._Image* %6, i64 %conv, i64 %conv8, %struct._ExceptionInfo* %11), !dbg !967
  store %struct._Image* %call9, %struct._Image** %distort_image, align 8, !dbg !968
  %12 = load %struct._Image*, %struct._Image** %distort_image, align 8, !dbg !969
  store %struct._Image* %12, %struct._Image** %retval, align 8, !dbg !970
  br label %return, !dbg !970

if.end10:                                         ; preds = %if.end
  %13 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !971
  %14 = load i64, i64* %number_arguments.addr, align 8, !dbg !972
  %15 = load double*, double** %arguments.addr, align 8, !dbg !973
  %16 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !974
  %call11 = call double* @GenerateCoefficients(%struct._Image* %13, i32* %method.addr, i64 %14, double* %15, i64 0, %struct._ExceptionInfo* %16), !dbg !975
  store double* %call11, double** %coeff, align 8, !dbg !976
  %17 = load double*, double** %coeff, align 8, !dbg !977
  %cmp12 = icmp eq double* %17, null, !dbg !979
  br i1 %cmp12, label %if.then14, label %if.end15, !dbg !980

if.then14:                                        ; preds = %if.end10
  store %struct._Image* null, %struct._Image** %retval, align 8, !dbg !981
  br label %return, !dbg !981

if.end15:                                         ; preds = %if.end10
  %18 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !982
  %columns = getelementptr inbounds %struct._Image, %struct._Image* %18, i32 0, i32 7, !dbg !983
  %19 = load i64, i64* %columns, align 8, !dbg !983
  %width = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %geometry, i32 0, i32 0, !dbg !984
  store i64 %19, i64* %width, align 8, !dbg !985
  %20 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !986
  %rows = getelementptr inbounds %struct._Image, %struct._Image* %20, i32 0, i32 8, !dbg !987
  %21 = load i64, i64* %rows, align 8, !dbg !987
  %height = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %geometry, i32 0, i32 1, !dbg !988
  store i64 %21, i64* %height, align 8, !dbg !989
  %x = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %geometry, i32 0, i32 2, !dbg !990
  store i64 0, i64* %x, align 8, !dbg !991
  %y = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %geometry, i32 0, i32 3, !dbg !992
  store i64 0, i64* %y, align 8, !dbg !993
  %22 = load i32, i32* %method.addr, align 4, !dbg !994
  %cmp16 = icmp eq i32 %22, 9, !dbg !996
  br i1 %cmp16, label %if.then18, label %if.end19, !dbg !997

if.then18:                                        ; preds = %if.end15
  store i32 1, i32* %bestfit.addr, align 4, !dbg !998
  br label %if.end19, !dbg !1000

if.end19:                                         ; preds = %if.then18, %if.end15
  %23 = load i32, i32* %bestfit.addr, align 4, !dbg !1001
  %tobool = icmp ne i32 %23, 0, !dbg !1001
  br i1 %tobool, label %if.then20, label %if.end708, !dbg !1003

if.then20:                                        ; preds = %if.end19
  call void @llvm.dbg.declare(metadata %struct._PointInfo* %s, metadata !1004, metadata !DIExpression()), !dbg !1012
  call void @llvm.dbg.declare(metadata %struct._PointInfo* %d, metadata !1013, metadata !DIExpression()), !dbg !1014
  call void @llvm.dbg.declare(metadata %struct._PointInfo* %min, metadata !1015, metadata !DIExpression()), !dbg !1016
  call void @llvm.dbg.declare(metadata %struct._PointInfo* %max, metadata !1017, metadata !DIExpression()), !dbg !1018
  call void @llvm.dbg.declare(metadata i32* %fix_bounds, metadata !1019, metadata !DIExpression()), !dbg !1020
  store i32 1, i32* %fix_bounds, align 4, !dbg !1020
  %y21 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %max, i32 0, i32 1, !dbg !1021
  store double 0.000000e+00, double* %y21, align 8, !dbg !1022
  %y22 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %min, i32 0, i32 1, !dbg !1023
  store double 0.000000e+00, double* %y22, align 8, !dbg !1024
  %x23 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %max, i32 0, i32 0, !dbg !1025
  store double 0.000000e+00, double* %x23, align 8, !dbg !1026
  %x24 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %min, i32 0, i32 0, !dbg !1027
  store double 0.000000e+00, double* %x24, align 8, !dbg !1028
  %y25 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %s, i32 0, i32 1, !dbg !1029
  store double 0.000000e+00, double* %y25, align 8, !dbg !1030
  %x26 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %s, i32 0, i32 0, !dbg !1031
  store double 0.000000e+00, double* %x26, align 8, !dbg !1032
  %24 = load i32, i32* %method.addr, align 4, !dbg !1033
  switch i32 %24, label %sw.default [
    i32 1, label %sw.bb
    i32 4, label %sw.bb203
    i32 9, label %sw.bb428
    i32 10, label %sw.bb573
    i32 11, label %sw.bb603
    i32 12, label %sw.bb635
    i32 13, label %sw.bb662
    i32 16, label %sw.bb682
    i32 6, label %sw.bb682
    i32 7, label %sw.bb682
    i32 8, label %sw.bb682
    i32 14, label %sw.bb682
    i32 15, label %sw.bb682
  ], !dbg !1034

sw.bb:                                            ; preds = %if.then20
  call void @llvm.dbg.declare(metadata [6 x double]* %inverse, metadata !1035, metadata !DIExpression()), !dbg !1038
  %25 = load double*, double** %coeff, align 8, !dbg !1039
  %arraydecay27 = getelementptr inbounds [6 x double], [6 x double]* %inverse, i64 0, i64 0, !dbg !1040
  call void @InvertAffineCoefficients(double* %25, double* %arraydecay27), !dbg !1041
  %26 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1042
  %page = getelementptr inbounds %struct._Image, %struct._Image* %26, i32 0, i32 26, !dbg !1043
  %x28 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %page, i32 0, i32 2, !dbg !1044
  %27 = load i64, i64* %x28, align 8, !dbg !1044
  %conv29 = sitofp i64 %27 to double, !dbg !1045
  %x30 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %s, i32 0, i32 0, !dbg !1046
  store double %conv29, double* %x30, align 8, !dbg !1047
  %28 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1048
  %page31 = getelementptr inbounds %struct._Image, %struct._Image* %28, i32 0, i32 26, !dbg !1049
  %y32 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %page31, i32 0, i32 3, !dbg !1050
  %29 = load i64, i64* %y32, align 8, !dbg !1050
  %conv33 = sitofp i64 %29 to double, !dbg !1051
  %y34 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %s, i32 0, i32 1, !dbg !1052
  store double %conv33, double* %y34, align 8, !dbg !1053
  %arrayidx35 = getelementptr inbounds [6 x double], [6 x double]* %inverse, i64 0, i64 0, !dbg !1054
  %30 = load double, double* %arrayidx35, align 16, !dbg !1054
  %x36 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %s, i32 0, i32 0, !dbg !1055
  %31 = load double, double* %x36, align 8, !dbg !1055
  %mul = fmul double %30, %31, !dbg !1056
  %arrayidx37 = getelementptr inbounds [6 x double], [6 x double]* %inverse, i64 0, i64 1, !dbg !1057
  %32 = load double, double* %arrayidx37, align 8, !dbg !1057
  %y38 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %s, i32 0, i32 1, !dbg !1058
  %33 = load double, double* %y38, align 8, !dbg !1058
  %mul39 = fmul double %32, %33, !dbg !1059
  %add = fadd double %mul, %mul39, !dbg !1060
  %arrayidx40 = getelementptr inbounds [6 x double], [6 x double]* %inverse, i64 0, i64 2, !dbg !1061
  %34 = load double, double* %arrayidx40, align 16, !dbg !1061
  %add41 = fadd double %add, %34, !dbg !1062
  %x42 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %d, i32 0, i32 0, !dbg !1063
  store double %add41, double* %x42, align 8, !dbg !1064
  %arrayidx43 = getelementptr inbounds [6 x double], [6 x double]* %inverse, i64 0, i64 3, !dbg !1065
  %35 = load double, double* %arrayidx43, align 8, !dbg !1065
  %x44 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %s, i32 0, i32 0, !dbg !1066
  %36 = load double, double* %x44, align 8, !dbg !1066
  %mul45 = fmul double %35, %36, !dbg !1067
  %arrayidx46 = getelementptr inbounds [6 x double], [6 x double]* %inverse, i64 0, i64 4, !dbg !1068
  %37 = load double, double* %arrayidx46, align 16, !dbg !1068
  %y47 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %s, i32 0, i32 1, !dbg !1069
  %38 = load double, double* %y47, align 8, !dbg !1069
  %mul48 = fmul double %37, %38, !dbg !1070
  %add49 = fadd double %mul45, %mul48, !dbg !1071
  %arrayidx50 = getelementptr inbounds [6 x double], [6 x double]* %inverse, i64 0, i64 5, !dbg !1072
  %39 = load double, double* %arrayidx50, align 8, !dbg !1072
  %add51 = fadd double %add49, %39, !dbg !1073
  %y52 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %d, i32 0, i32 1, !dbg !1074
  store double %add51, double* %y52, align 8, !dbg !1075
  %x53 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %d, i32 0, i32 0, !dbg !1076
  %40 = load double, double* %x53, align 8, !dbg !1076
  %x54 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %max, i32 0, i32 0, !dbg !1076
  store double %40, double* %x54, align 8, !dbg !1076
  %x55 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %min, i32 0, i32 0, !dbg !1076
  store double %40, double* %x55, align 8, !dbg !1076
  %y56 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %d, i32 0, i32 1, !dbg !1076
  %41 = load double, double* %y56, align 8, !dbg !1076
  %y57 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %max, i32 0, i32 1, !dbg !1076
  store double %41, double* %y57, align 8, !dbg !1076
  %y58 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %min, i32 0, i32 1, !dbg !1076
  store double %41, double* %y58, align 8, !dbg !1076
  %42 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1078
  %page59 = getelementptr inbounds %struct._Image, %struct._Image* %42, i32 0, i32 26, !dbg !1079
  %x60 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %page59, i32 0, i32 2, !dbg !1080
  %43 = load i64, i64* %x60, align 8, !dbg !1080
  %conv61 = sitofp i64 %43 to double, !dbg !1081
  %44 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1082
  %columns62 = getelementptr inbounds %struct._Image, %struct._Image* %44, i32 0, i32 7, !dbg !1083
  %45 = load i64, i64* %columns62, align 8, !dbg !1083
  %conv63 = uitofp i64 %45 to double, !dbg !1082
  %add64 = fadd double %conv61, %conv63, !dbg !1084
  %x65 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %s, i32 0, i32 0, !dbg !1085
  store double %add64, double* %x65, align 8, !dbg !1086
  %46 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1087
  %page66 = getelementptr inbounds %struct._Image, %struct._Image* %46, i32 0, i32 26, !dbg !1088
  %y67 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %page66, i32 0, i32 3, !dbg !1089
  %47 = load i64, i64* %y67, align 8, !dbg !1089
  %conv68 = sitofp i64 %47 to double, !dbg !1090
  %y69 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %s, i32 0, i32 1, !dbg !1091
  store double %conv68, double* %y69, align 8, !dbg !1092
  %arrayidx70 = getelementptr inbounds [6 x double], [6 x double]* %inverse, i64 0, i64 0, !dbg !1093
  %48 = load double, double* %arrayidx70, align 16, !dbg !1093
  %x71 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %s, i32 0, i32 0, !dbg !1094
  %49 = load double, double* %x71, align 8, !dbg !1094
  %mul72 = fmul double %48, %49, !dbg !1095
  %arrayidx73 = getelementptr inbounds [6 x double], [6 x double]* %inverse, i64 0, i64 1, !dbg !1096
  %50 = load double, double* %arrayidx73, align 8, !dbg !1096
  %y74 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %s, i32 0, i32 1, !dbg !1097
  %51 = load double, double* %y74, align 8, !dbg !1097
  %mul75 = fmul double %50, %51, !dbg !1098
  %add76 = fadd double %mul72, %mul75, !dbg !1099
  %arrayidx77 = getelementptr inbounds [6 x double], [6 x double]* %inverse, i64 0, i64 2, !dbg !1100
  %52 = load double, double* %arrayidx77, align 16, !dbg !1100
  %add78 = fadd double %add76, %52, !dbg !1101
  %x79 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %d, i32 0, i32 0, !dbg !1102
  store double %add78, double* %x79, align 8, !dbg !1103
  %arrayidx80 = getelementptr inbounds [6 x double], [6 x double]* %inverse, i64 0, i64 3, !dbg !1104
  %53 = load double, double* %arrayidx80, align 8, !dbg !1104
  %x81 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %s, i32 0, i32 0, !dbg !1105
  %54 = load double, double* %x81, align 8, !dbg !1105
  %mul82 = fmul double %53, %54, !dbg !1106
  %arrayidx83 = getelementptr inbounds [6 x double], [6 x double]* %inverse, i64 0, i64 4, !dbg !1107
  %55 = load double, double* %arrayidx83, align 16, !dbg !1107
  %y84 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %s, i32 0, i32 1, !dbg !1108
  %56 = load double, double* %y84, align 8, !dbg !1108
  %mul85 = fmul double %55, %56, !dbg !1109
  %add86 = fadd double %mul82, %mul85, !dbg !1110
  %arrayidx87 = getelementptr inbounds [6 x double], [6 x double]* %inverse, i64 0, i64 5, !dbg !1111
  %57 = load double, double* %arrayidx87, align 8, !dbg !1111
  %add88 = fadd double %add86, %57, !dbg !1112
  %y89 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %d, i32 0, i32 1, !dbg !1113
  store double %add88, double* %y89, align 8, !dbg !1114
  %x90 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %min, i32 0, i32 0, !dbg !1115
  %58 = load double, double* %x90, align 8, !dbg !1115
  %x91 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %d, i32 0, i32 0, !dbg !1115
  %59 = load double, double* %x91, align 8, !dbg !1115
  %call92 = call double @MagickMin(double %58, double %59), !dbg !1115
  %x93 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %min, i32 0, i32 0, !dbg !1115
  store double %call92, double* %x93, align 8, !dbg !1115
  %x94 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %max, i32 0, i32 0, !dbg !1115
  %60 = load double, double* %x94, align 8, !dbg !1115
  %x95 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %d, i32 0, i32 0, !dbg !1115
  %61 = load double, double* %x95, align 8, !dbg !1115
  %call96 = call double @MagickMax(double %60, double %61), !dbg !1115
  %x97 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %max, i32 0, i32 0, !dbg !1115
  store double %call96, double* %x97, align 8, !dbg !1115
  %y98 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %min, i32 0, i32 1, !dbg !1115
  %62 = load double, double* %y98, align 8, !dbg !1115
  %y99 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %d, i32 0, i32 1, !dbg !1115
  %63 = load double, double* %y99, align 8, !dbg !1115
  %call100 = call double @MagickMin(double %62, double %63), !dbg !1115
  %y101 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %min, i32 0, i32 1, !dbg !1115
  store double %call100, double* %y101, align 8, !dbg !1115
  %y102 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %max, i32 0, i32 1, !dbg !1115
  %64 = load double, double* %y102, align 8, !dbg !1115
  %y103 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %d, i32 0, i32 1, !dbg !1115
  %65 = load double, double* %y103, align 8, !dbg !1115
  %call104 = call double @MagickMax(double %64, double %65), !dbg !1115
  %y105 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %max, i32 0, i32 1, !dbg !1115
  store double %call104, double* %y105, align 8, !dbg !1115
  %66 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1117
  %page106 = getelementptr inbounds %struct._Image, %struct._Image* %66, i32 0, i32 26, !dbg !1118
  %x107 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %page106, i32 0, i32 2, !dbg !1119
  %67 = load i64, i64* %x107, align 8, !dbg !1119
  %conv108 = sitofp i64 %67 to double, !dbg !1120
  %x109 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %s, i32 0, i32 0, !dbg !1121
  store double %conv108, double* %x109, align 8, !dbg !1122
  %68 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1123
  %page110 = getelementptr inbounds %struct._Image, %struct._Image* %68, i32 0, i32 26, !dbg !1124
  %y111 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %page110, i32 0, i32 3, !dbg !1125
  %69 = load i64, i64* %y111, align 8, !dbg !1125
  %conv112 = sitofp i64 %69 to double, !dbg !1126
  %70 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1127
  %rows113 = getelementptr inbounds %struct._Image, %struct._Image* %70, i32 0, i32 8, !dbg !1128
  %71 = load i64, i64* %rows113, align 8, !dbg !1128
  %conv114 = uitofp i64 %71 to double, !dbg !1127
  %add115 = fadd double %conv112, %conv114, !dbg !1129
  %y116 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %s, i32 0, i32 1, !dbg !1130
  store double %add115, double* %y116, align 8, !dbg !1131
  %arrayidx117 = getelementptr inbounds [6 x double], [6 x double]* %inverse, i64 0, i64 0, !dbg !1132
  %72 = load double, double* %arrayidx117, align 16, !dbg !1132
  %x118 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %s, i32 0, i32 0, !dbg !1133
  %73 = load double, double* %x118, align 8, !dbg !1133
  %mul119 = fmul double %72, %73, !dbg !1134
  %arrayidx120 = getelementptr inbounds [6 x double], [6 x double]* %inverse, i64 0, i64 1, !dbg !1135
  %74 = load double, double* %arrayidx120, align 8, !dbg !1135
  %y121 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %s, i32 0, i32 1, !dbg !1136
  %75 = load double, double* %y121, align 8, !dbg !1136
  %mul122 = fmul double %74, %75, !dbg !1137
  %add123 = fadd double %mul119, %mul122, !dbg !1138
  %arrayidx124 = getelementptr inbounds [6 x double], [6 x double]* %inverse, i64 0, i64 2, !dbg !1139
  %76 = load double, double* %arrayidx124, align 16, !dbg !1139
  %add125 = fadd double %add123, %76, !dbg !1140
  %x126 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %d, i32 0, i32 0, !dbg !1141
  store double %add125, double* %x126, align 8, !dbg !1142
  %arrayidx127 = getelementptr inbounds [6 x double], [6 x double]* %inverse, i64 0, i64 3, !dbg !1143
  %77 = load double, double* %arrayidx127, align 8, !dbg !1143
  %x128 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %s, i32 0, i32 0, !dbg !1144
  %78 = load double, double* %x128, align 8, !dbg !1144
  %mul129 = fmul double %77, %78, !dbg !1145
  %arrayidx130 = getelementptr inbounds [6 x double], [6 x double]* %inverse, i64 0, i64 4, !dbg !1146
  %79 = load double, double* %arrayidx130, align 16, !dbg !1146
  %y131 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %s, i32 0, i32 1, !dbg !1147
  %80 = load double, double* %y131, align 8, !dbg !1147
  %mul132 = fmul double %79, %80, !dbg !1148
  %add133 = fadd double %mul129, %mul132, !dbg !1149
  %arrayidx134 = getelementptr inbounds [6 x double], [6 x double]* %inverse, i64 0, i64 5, !dbg !1150
  %81 = load double, double* %arrayidx134, align 8, !dbg !1150
  %add135 = fadd double %add133, %81, !dbg !1151
  %y136 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %d, i32 0, i32 1, !dbg !1152
  store double %add135, double* %y136, align 8, !dbg !1153
  %x137 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %min, i32 0, i32 0, !dbg !1154
  %82 = load double, double* %x137, align 8, !dbg !1154
  %x138 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %d, i32 0, i32 0, !dbg !1154
  %83 = load double, double* %x138, align 8, !dbg !1154
  %call139 = call double @MagickMin(double %82, double %83), !dbg !1154
  %x140 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %min, i32 0, i32 0, !dbg !1154
  store double %call139, double* %x140, align 8, !dbg !1154
  %x141 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %max, i32 0, i32 0, !dbg !1154
  %84 = load double, double* %x141, align 8, !dbg !1154
  %x142 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %d, i32 0, i32 0, !dbg !1154
  %85 = load double, double* %x142, align 8, !dbg !1154
  %call143 = call double @MagickMax(double %84, double %85), !dbg !1154
  %x144 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %max, i32 0, i32 0, !dbg !1154
  store double %call143, double* %x144, align 8, !dbg !1154
  %y145 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %min, i32 0, i32 1, !dbg !1154
  %86 = load double, double* %y145, align 8, !dbg !1154
  %y146 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %d, i32 0, i32 1, !dbg !1154
  %87 = load double, double* %y146, align 8, !dbg !1154
  %call147 = call double @MagickMin(double %86, double %87), !dbg !1154
  %y148 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %min, i32 0, i32 1, !dbg !1154
  store double %call147, double* %y148, align 8, !dbg !1154
  %y149 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %max, i32 0, i32 1, !dbg !1154
  %88 = load double, double* %y149, align 8, !dbg !1154
  %y150 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %d, i32 0, i32 1, !dbg !1154
  %89 = load double, double* %y150, align 8, !dbg !1154
  %call151 = call double @MagickMax(double %88, double %89), !dbg !1154
  %y152 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %max, i32 0, i32 1, !dbg !1154
  store double %call151, double* %y152, align 8, !dbg !1154
  %90 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1156
  %page153 = getelementptr inbounds %struct._Image, %struct._Image* %90, i32 0, i32 26, !dbg !1157
  %x154 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %page153, i32 0, i32 2, !dbg !1158
  %91 = load i64, i64* %x154, align 8, !dbg !1158
  %conv155 = sitofp i64 %91 to double, !dbg !1159
  %92 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1160
  %columns156 = getelementptr inbounds %struct._Image, %struct._Image* %92, i32 0, i32 7, !dbg !1161
  %93 = load i64, i64* %columns156, align 8, !dbg !1161
  %conv157 = uitofp i64 %93 to double, !dbg !1160
  %add158 = fadd double %conv155, %conv157, !dbg !1162
  %x159 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %s, i32 0, i32 0, !dbg !1163
  store double %add158, double* %x159, align 8, !dbg !1164
  %94 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1165
  %page160 = getelementptr inbounds %struct._Image, %struct._Image* %94, i32 0, i32 26, !dbg !1166
  %y161 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %page160, i32 0, i32 3, !dbg !1167
  %95 = load i64, i64* %y161, align 8, !dbg !1167
  %conv162 = sitofp i64 %95 to double, !dbg !1168
  %96 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1169
  %rows163 = getelementptr inbounds %struct._Image, %struct._Image* %96, i32 0, i32 8, !dbg !1170
  %97 = load i64, i64* %rows163, align 8, !dbg !1170
  %conv164 = uitofp i64 %97 to double, !dbg !1169
  %add165 = fadd double %conv162, %conv164, !dbg !1171
  %y166 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %s, i32 0, i32 1, !dbg !1172
  store double %add165, double* %y166, align 8, !dbg !1173
  %arrayidx167 = getelementptr inbounds [6 x double], [6 x double]* %inverse, i64 0, i64 0, !dbg !1174
  %98 = load double, double* %arrayidx167, align 16, !dbg !1174
  %x168 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %s, i32 0, i32 0, !dbg !1175
  %99 = load double, double* %x168, align 8, !dbg !1175
  %mul169 = fmul double %98, %99, !dbg !1176
  %arrayidx170 = getelementptr inbounds [6 x double], [6 x double]* %inverse, i64 0, i64 1, !dbg !1177
  %100 = load double, double* %arrayidx170, align 8, !dbg !1177
  %y171 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %s, i32 0, i32 1, !dbg !1178
  %101 = load double, double* %y171, align 8, !dbg !1178
  %mul172 = fmul double %100, %101, !dbg !1179
  %add173 = fadd double %mul169, %mul172, !dbg !1180
  %arrayidx174 = getelementptr inbounds [6 x double], [6 x double]* %inverse, i64 0, i64 2, !dbg !1181
  %102 = load double, double* %arrayidx174, align 16, !dbg !1181
  %add175 = fadd double %add173, %102, !dbg !1182
  %x176 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %d, i32 0, i32 0, !dbg !1183
  store double %add175, double* %x176, align 8, !dbg !1184
  %arrayidx177 = getelementptr inbounds [6 x double], [6 x double]* %inverse, i64 0, i64 3, !dbg !1185
  %103 = load double, double* %arrayidx177, align 8, !dbg !1185
  %x178 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %s, i32 0, i32 0, !dbg !1186
  %104 = load double, double* %x178, align 8, !dbg !1186
  %mul179 = fmul double %103, %104, !dbg !1187
  %arrayidx180 = getelementptr inbounds [6 x double], [6 x double]* %inverse, i64 0, i64 4, !dbg !1188
  %105 = load double, double* %arrayidx180, align 16, !dbg !1188
  %y181 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %s, i32 0, i32 1, !dbg !1189
  %106 = load double, double* %y181, align 8, !dbg !1189
  %mul182 = fmul double %105, %106, !dbg !1190
  %add183 = fadd double %mul179, %mul182, !dbg !1191
  %arrayidx184 = getelementptr inbounds [6 x double], [6 x double]* %inverse, i64 0, i64 5, !dbg !1192
  %107 = load double, double* %arrayidx184, align 8, !dbg !1192
  %add185 = fadd double %add183, %107, !dbg !1193
  %y186 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %d, i32 0, i32 1, !dbg !1194
  store double %add185, double* %y186, align 8, !dbg !1195
  %x187 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %min, i32 0, i32 0, !dbg !1196
  %108 = load double, double* %x187, align 8, !dbg !1196
  %x188 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %d, i32 0, i32 0, !dbg !1196
  %109 = load double, double* %x188, align 8, !dbg !1196
  %call189 = call double @MagickMin(double %108, double %109), !dbg !1196
  %x190 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %min, i32 0, i32 0, !dbg !1196
  store double %call189, double* %x190, align 8, !dbg !1196
  %x191 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %max, i32 0, i32 0, !dbg !1196
  %110 = load double, double* %x191, align 8, !dbg !1196
  %x192 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %d, i32 0, i32 0, !dbg !1196
  %111 = load double, double* %x192, align 8, !dbg !1196
  %call193 = call double @MagickMax(double %110, double %111), !dbg !1196
  %x194 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %max, i32 0, i32 0, !dbg !1196
  store double %call193, double* %x194, align 8, !dbg !1196
  %y195 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %min, i32 0, i32 1, !dbg !1196
  %112 = load double, double* %y195, align 8, !dbg !1196
  %y196 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %d, i32 0, i32 1, !dbg !1196
  %113 = load double, double* %y196, align 8, !dbg !1196
  %call197 = call double @MagickMin(double %112, double %113), !dbg !1196
  %y198 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %min, i32 0, i32 1, !dbg !1196
  store double %call197, double* %y198, align 8, !dbg !1196
  %y199 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %max, i32 0, i32 1, !dbg !1196
  %114 = load double, double* %y199, align 8, !dbg !1196
  %y200 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %d, i32 0, i32 1, !dbg !1196
  %115 = load double, double* %y200, align 8, !dbg !1196
  %call201 = call double @MagickMax(double %114, double %115), !dbg !1196
  %y202 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %max, i32 0, i32 1, !dbg !1196
  store double %call201, double* %y202, align 8, !dbg !1196
  br label %sw.epilog, !dbg !1198

sw.bb203:                                         ; preds = %if.then20
  call void @llvm.dbg.declare(metadata [8 x double]* %inverse204, metadata !1199, metadata !DIExpression()), !dbg !1204
  call void @llvm.dbg.declare(metadata double* %scale, metadata !1205, metadata !DIExpression()), !dbg !1206
  %116 = load double*, double** %coeff, align 8, !dbg !1207
  %arraydecay205 = getelementptr inbounds [8 x double], [8 x double]* %inverse204, i64 0, i64 0, !dbg !1208
  call void @InvertPerspectiveCoefficients(double* %116, double* %arraydecay205), !dbg !1209
  %117 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1210
  %page206 = getelementptr inbounds %struct._Image, %struct._Image* %117, i32 0, i32 26, !dbg !1211
  %x207 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %page206, i32 0, i32 2, !dbg !1212
  %118 = load i64, i64* %x207, align 8, !dbg !1212
  %conv208 = sitofp i64 %118 to double, !dbg !1213
  %x209 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %s, i32 0, i32 0, !dbg !1214
  store double %conv208, double* %x209, align 8, !dbg !1215
  %119 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1216
  %page210 = getelementptr inbounds %struct._Image, %struct._Image* %119, i32 0, i32 26, !dbg !1217
  %y211 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %page210, i32 0, i32 3, !dbg !1218
  %120 = load i64, i64* %y211, align 8, !dbg !1218
  %conv212 = sitofp i64 %120 to double, !dbg !1219
  %y213 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %s, i32 0, i32 1, !dbg !1220
  store double %conv212, double* %y213, align 8, !dbg !1221
  %arrayidx214 = getelementptr inbounds [8 x double], [8 x double]* %inverse204, i64 0, i64 6, !dbg !1222
  %121 = load double, double* %arrayidx214, align 16, !dbg !1222
  %x215 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %s, i32 0, i32 0, !dbg !1223
  %122 = load double, double* %x215, align 8, !dbg !1223
  %mul216 = fmul double %121, %122, !dbg !1224
  %arrayidx217 = getelementptr inbounds [8 x double], [8 x double]* %inverse204, i64 0, i64 7, !dbg !1225
  %123 = load double, double* %arrayidx217, align 8, !dbg !1225
  %y218 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %s, i32 0, i32 1, !dbg !1226
  %124 = load double, double* %y218, align 8, !dbg !1226
  %mul219 = fmul double %123, %124, !dbg !1227
  %add220 = fadd double %mul216, %mul219, !dbg !1228
  %add221 = fadd double %add220, 1.000000e+00, !dbg !1229
  store double %add221, double* %scale, align 8, !dbg !1230
  %125 = load double, double* %scale, align 8, !dbg !1231
  %call222 = call double @PerceptibleReciprocal(double %125), !dbg !1232
  store double %call222, double* %scale, align 8, !dbg !1233
  %126 = load double, double* %scale, align 8, !dbg !1234
  %arrayidx223 = getelementptr inbounds [8 x double], [8 x double]* %inverse204, i64 0, i64 0, !dbg !1235
  %127 = load double, double* %arrayidx223, align 16, !dbg !1235
  %x224 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %s, i32 0, i32 0, !dbg !1236
  %128 = load double, double* %x224, align 8, !dbg !1236
  %mul225 = fmul double %127, %128, !dbg !1237
  %arrayidx226 = getelementptr inbounds [8 x double], [8 x double]* %inverse204, i64 0, i64 1, !dbg !1238
  %129 = load double, double* %arrayidx226, align 8, !dbg !1238
  %y227 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %s, i32 0, i32 1, !dbg !1239
  %130 = load double, double* %y227, align 8, !dbg !1239
  %mul228 = fmul double %129, %130, !dbg !1240
  %add229 = fadd double %mul225, %mul228, !dbg !1241
  %arrayidx230 = getelementptr inbounds [8 x double], [8 x double]* %inverse204, i64 0, i64 2, !dbg !1242
  %131 = load double, double* %arrayidx230, align 16, !dbg !1242
  %add231 = fadd double %add229, %131, !dbg !1243
  %mul232 = fmul double %126, %add231, !dbg !1244
  %x233 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %d, i32 0, i32 0, !dbg !1245
  store double %mul232, double* %x233, align 8, !dbg !1246
  %132 = load double, double* %scale, align 8, !dbg !1247
  %arrayidx234 = getelementptr inbounds [8 x double], [8 x double]* %inverse204, i64 0, i64 3, !dbg !1248
  %133 = load double, double* %arrayidx234, align 8, !dbg !1248
  %x235 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %s, i32 0, i32 0, !dbg !1249
  %134 = load double, double* %x235, align 8, !dbg !1249
  %mul236 = fmul double %133, %134, !dbg !1250
  %arrayidx237 = getelementptr inbounds [8 x double], [8 x double]* %inverse204, i64 0, i64 4, !dbg !1251
  %135 = load double, double* %arrayidx237, align 16, !dbg !1251
  %y238 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %s, i32 0, i32 1, !dbg !1252
  %136 = load double, double* %y238, align 8, !dbg !1252
  %mul239 = fmul double %135, %136, !dbg !1253
  %add240 = fadd double %mul236, %mul239, !dbg !1254
  %arrayidx241 = getelementptr inbounds [8 x double], [8 x double]* %inverse204, i64 0, i64 5, !dbg !1255
  %137 = load double, double* %arrayidx241, align 8, !dbg !1255
  %add242 = fadd double %add240, %137, !dbg !1256
  %mul243 = fmul double %132, %add242, !dbg !1257
  %y244 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %d, i32 0, i32 1, !dbg !1258
  store double %mul243, double* %y244, align 8, !dbg !1259
  %x245 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %d, i32 0, i32 0, !dbg !1260
  %138 = load double, double* %x245, align 8, !dbg !1260
  %x246 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %max, i32 0, i32 0, !dbg !1260
  store double %138, double* %x246, align 8, !dbg !1260
  %x247 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %min, i32 0, i32 0, !dbg !1260
  store double %138, double* %x247, align 8, !dbg !1260
  %y248 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %d, i32 0, i32 1, !dbg !1260
  %139 = load double, double* %y248, align 8, !dbg !1260
  %y249 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %max, i32 0, i32 1, !dbg !1260
  store double %139, double* %y249, align 8, !dbg !1260
  %y250 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %min, i32 0, i32 1, !dbg !1260
  store double %139, double* %y250, align 8, !dbg !1260
  %140 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1262
  %page251 = getelementptr inbounds %struct._Image, %struct._Image* %140, i32 0, i32 26, !dbg !1263
  %x252 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %page251, i32 0, i32 2, !dbg !1264
  %141 = load i64, i64* %x252, align 8, !dbg !1264
  %conv253 = sitofp i64 %141 to double, !dbg !1265
  %142 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1266
  %columns254 = getelementptr inbounds %struct._Image, %struct._Image* %142, i32 0, i32 7, !dbg !1267
  %143 = load i64, i64* %columns254, align 8, !dbg !1267
  %conv255 = uitofp i64 %143 to double, !dbg !1266
  %add256 = fadd double %conv253, %conv255, !dbg !1268
  %x257 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %s, i32 0, i32 0, !dbg !1269
  store double %add256, double* %x257, align 8, !dbg !1270
  %144 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1271
  %page258 = getelementptr inbounds %struct._Image, %struct._Image* %144, i32 0, i32 26, !dbg !1272
  %y259 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %page258, i32 0, i32 3, !dbg !1273
  %145 = load i64, i64* %y259, align 8, !dbg !1273
  %conv260 = sitofp i64 %145 to double, !dbg !1274
  %y261 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %s, i32 0, i32 1, !dbg !1275
  store double %conv260, double* %y261, align 8, !dbg !1276
  %arrayidx262 = getelementptr inbounds [8 x double], [8 x double]* %inverse204, i64 0, i64 6, !dbg !1277
  %146 = load double, double* %arrayidx262, align 16, !dbg !1277
  %x263 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %s, i32 0, i32 0, !dbg !1278
  %147 = load double, double* %x263, align 8, !dbg !1278
  %mul264 = fmul double %146, %147, !dbg !1279
  %arrayidx265 = getelementptr inbounds [8 x double], [8 x double]* %inverse204, i64 0, i64 7, !dbg !1280
  %148 = load double, double* %arrayidx265, align 8, !dbg !1280
  %y266 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %s, i32 0, i32 1, !dbg !1281
  %149 = load double, double* %y266, align 8, !dbg !1281
  %mul267 = fmul double %148, %149, !dbg !1282
  %add268 = fadd double %mul264, %mul267, !dbg !1283
  %add269 = fadd double %add268, 1.000000e+00, !dbg !1284
  store double %add269, double* %scale, align 8, !dbg !1285
  %150 = load double, double* %scale, align 8, !dbg !1286
  %call270 = call double @PerceptibleReciprocal(double %150), !dbg !1287
  store double %call270, double* %scale, align 8, !dbg !1288
  %151 = load double, double* %scale, align 8, !dbg !1289
  %arrayidx271 = getelementptr inbounds [8 x double], [8 x double]* %inverse204, i64 0, i64 0, !dbg !1290
  %152 = load double, double* %arrayidx271, align 16, !dbg !1290
  %x272 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %s, i32 0, i32 0, !dbg !1291
  %153 = load double, double* %x272, align 8, !dbg !1291
  %mul273 = fmul double %152, %153, !dbg !1292
  %arrayidx274 = getelementptr inbounds [8 x double], [8 x double]* %inverse204, i64 0, i64 1, !dbg !1293
  %154 = load double, double* %arrayidx274, align 8, !dbg !1293
  %y275 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %s, i32 0, i32 1, !dbg !1294
  %155 = load double, double* %y275, align 8, !dbg !1294
  %mul276 = fmul double %154, %155, !dbg !1295
  %add277 = fadd double %mul273, %mul276, !dbg !1296
  %arrayidx278 = getelementptr inbounds [8 x double], [8 x double]* %inverse204, i64 0, i64 2, !dbg !1297
  %156 = load double, double* %arrayidx278, align 16, !dbg !1297
  %add279 = fadd double %add277, %156, !dbg !1298
  %mul280 = fmul double %151, %add279, !dbg !1299
  %x281 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %d, i32 0, i32 0, !dbg !1300
  store double %mul280, double* %x281, align 8, !dbg !1301
  %157 = load double, double* %scale, align 8, !dbg !1302
  %arrayidx282 = getelementptr inbounds [8 x double], [8 x double]* %inverse204, i64 0, i64 3, !dbg !1303
  %158 = load double, double* %arrayidx282, align 8, !dbg !1303
  %x283 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %s, i32 0, i32 0, !dbg !1304
  %159 = load double, double* %x283, align 8, !dbg !1304
  %mul284 = fmul double %158, %159, !dbg !1305
  %arrayidx285 = getelementptr inbounds [8 x double], [8 x double]* %inverse204, i64 0, i64 4, !dbg !1306
  %160 = load double, double* %arrayidx285, align 16, !dbg !1306
  %y286 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %s, i32 0, i32 1, !dbg !1307
  %161 = load double, double* %y286, align 8, !dbg !1307
  %mul287 = fmul double %160, %161, !dbg !1308
  %add288 = fadd double %mul284, %mul287, !dbg !1309
  %arrayidx289 = getelementptr inbounds [8 x double], [8 x double]* %inverse204, i64 0, i64 5, !dbg !1310
  %162 = load double, double* %arrayidx289, align 8, !dbg !1310
  %add290 = fadd double %add288, %162, !dbg !1311
  %mul291 = fmul double %157, %add290, !dbg !1312
  %y292 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %d, i32 0, i32 1, !dbg !1313
  store double %mul291, double* %y292, align 8, !dbg !1314
  %x293 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %min, i32 0, i32 0, !dbg !1315
  %163 = load double, double* %x293, align 8, !dbg !1315
  %x294 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %d, i32 0, i32 0, !dbg !1315
  %164 = load double, double* %x294, align 8, !dbg !1315
  %call295 = call double @MagickMin(double %163, double %164), !dbg !1315
  %x296 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %min, i32 0, i32 0, !dbg !1315
  store double %call295, double* %x296, align 8, !dbg !1315
  %x297 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %max, i32 0, i32 0, !dbg !1315
  %165 = load double, double* %x297, align 8, !dbg !1315
  %x298 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %d, i32 0, i32 0, !dbg !1315
  %166 = load double, double* %x298, align 8, !dbg !1315
  %call299 = call double @MagickMax(double %165, double %166), !dbg !1315
  %x300 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %max, i32 0, i32 0, !dbg !1315
  store double %call299, double* %x300, align 8, !dbg !1315
  %y301 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %min, i32 0, i32 1, !dbg !1315
  %167 = load double, double* %y301, align 8, !dbg !1315
  %y302 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %d, i32 0, i32 1, !dbg !1315
  %168 = load double, double* %y302, align 8, !dbg !1315
  %call303 = call double @MagickMin(double %167, double %168), !dbg !1315
  %y304 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %min, i32 0, i32 1, !dbg !1315
  store double %call303, double* %y304, align 8, !dbg !1315
  %y305 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %max, i32 0, i32 1, !dbg !1315
  %169 = load double, double* %y305, align 8, !dbg !1315
  %y306 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %d, i32 0, i32 1, !dbg !1315
  %170 = load double, double* %y306, align 8, !dbg !1315
  %call307 = call double @MagickMax(double %169, double %170), !dbg !1315
  %y308 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %max, i32 0, i32 1, !dbg !1315
  store double %call307, double* %y308, align 8, !dbg !1315
  %171 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1317
  %page309 = getelementptr inbounds %struct._Image, %struct._Image* %171, i32 0, i32 26, !dbg !1318
  %x310 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %page309, i32 0, i32 2, !dbg !1319
  %172 = load i64, i64* %x310, align 8, !dbg !1319
  %conv311 = sitofp i64 %172 to double, !dbg !1320
  %x312 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %s, i32 0, i32 0, !dbg !1321
  store double %conv311, double* %x312, align 8, !dbg !1322
  %173 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1323
  %page313 = getelementptr inbounds %struct._Image, %struct._Image* %173, i32 0, i32 26, !dbg !1324
  %y314 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %page313, i32 0, i32 3, !dbg !1325
  %174 = load i64, i64* %y314, align 8, !dbg !1325
  %conv315 = sitofp i64 %174 to double, !dbg !1326
  %175 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1327
  %rows316 = getelementptr inbounds %struct._Image, %struct._Image* %175, i32 0, i32 8, !dbg !1328
  %176 = load i64, i64* %rows316, align 8, !dbg !1328
  %conv317 = uitofp i64 %176 to double, !dbg !1327
  %add318 = fadd double %conv315, %conv317, !dbg !1329
  %y319 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %s, i32 0, i32 1, !dbg !1330
  store double %add318, double* %y319, align 8, !dbg !1331
  %arrayidx320 = getelementptr inbounds [8 x double], [8 x double]* %inverse204, i64 0, i64 6, !dbg !1332
  %177 = load double, double* %arrayidx320, align 16, !dbg !1332
  %x321 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %s, i32 0, i32 0, !dbg !1333
  %178 = load double, double* %x321, align 8, !dbg !1333
  %mul322 = fmul double %177, %178, !dbg !1334
  %arrayidx323 = getelementptr inbounds [8 x double], [8 x double]* %inverse204, i64 0, i64 7, !dbg !1335
  %179 = load double, double* %arrayidx323, align 8, !dbg !1335
  %y324 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %s, i32 0, i32 1, !dbg !1336
  %180 = load double, double* %y324, align 8, !dbg !1336
  %mul325 = fmul double %179, %180, !dbg !1337
  %add326 = fadd double %mul322, %mul325, !dbg !1338
  %add327 = fadd double %add326, 1.000000e+00, !dbg !1339
  store double %add327, double* %scale, align 8, !dbg !1340
  %181 = load double, double* %scale, align 8, !dbg !1341
  %call328 = call double @PerceptibleReciprocal(double %181), !dbg !1342
  store double %call328, double* %scale, align 8, !dbg !1343
  %182 = load double, double* %scale, align 8, !dbg !1344
  %arrayidx329 = getelementptr inbounds [8 x double], [8 x double]* %inverse204, i64 0, i64 0, !dbg !1345
  %183 = load double, double* %arrayidx329, align 16, !dbg !1345
  %x330 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %s, i32 0, i32 0, !dbg !1346
  %184 = load double, double* %x330, align 8, !dbg !1346
  %mul331 = fmul double %183, %184, !dbg !1347
  %arrayidx332 = getelementptr inbounds [8 x double], [8 x double]* %inverse204, i64 0, i64 1, !dbg !1348
  %185 = load double, double* %arrayidx332, align 8, !dbg !1348
  %y333 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %s, i32 0, i32 1, !dbg !1349
  %186 = load double, double* %y333, align 8, !dbg !1349
  %mul334 = fmul double %185, %186, !dbg !1350
  %add335 = fadd double %mul331, %mul334, !dbg !1351
  %arrayidx336 = getelementptr inbounds [8 x double], [8 x double]* %inverse204, i64 0, i64 2, !dbg !1352
  %187 = load double, double* %arrayidx336, align 16, !dbg !1352
  %add337 = fadd double %add335, %187, !dbg !1353
  %mul338 = fmul double %182, %add337, !dbg !1354
  %x339 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %d, i32 0, i32 0, !dbg !1355
  store double %mul338, double* %x339, align 8, !dbg !1356
  %188 = load double, double* %scale, align 8, !dbg !1357
  %arrayidx340 = getelementptr inbounds [8 x double], [8 x double]* %inverse204, i64 0, i64 3, !dbg !1358
  %189 = load double, double* %arrayidx340, align 8, !dbg !1358
  %x341 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %s, i32 0, i32 0, !dbg !1359
  %190 = load double, double* %x341, align 8, !dbg !1359
  %mul342 = fmul double %189, %190, !dbg !1360
  %arrayidx343 = getelementptr inbounds [8 x double], [8 x double]* %inverse204, i64 0, i64 4, !dbg !1361
  %191 = load double, double* %arrayidx343, align 16, !dbg !1361
  %y344 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %s, i32 0, i32 1, !dbg !1362
  %192 = load double, double* %y344, align 8, !dbg !1362
  %mul345 = fmul double %191, %192, !dbg !1363
  %add346 = fadd double %mul342, %mul345, !dbg !1364
  %arrayidx347 = getelementptr inbounds [8 x double], [8 x double]* %inverse204, i64 0, i64 5, !dbg !1365
  %193 = load double, double* %arrayidx347, align 8, !dbg !1365
  %add348 = fadd double %add346, %193, !dbg !1366
  %mul349 = fmul double %188, %add348, !dbg !1367
  %y350 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %d, i32 0, i32 1, !dbg !1368
  store double %mul349, double* %y350, align 8, !dbg !1369
  %x351 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %min, i32 0, i32 0, !dbg !1370
  %194 = load double, double* %x351, align 8, !dbg !1370
  %x352 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %d, i32 0, i32 0, !dbg !1370
  %195 = load double, double* %x352, align 8, !dbg !1370
  %call353 = call double @MagickMin(double %194, double %195), !dbg !1370
  %x354 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %min, i32 0, i32 0, !dbg !1370
  store double %call353, double* %x354, align 8, !dbg !1370
  %x355 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %max, i32 0, i32 0, !dbg !1370
  %196 = load double, double* %x355, align 8, !dbg !1370
  %x356 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %d, i32 0, i32 0, !dbg !1370
  %197 = load double, double* %x356, align 8, !dbg !1370
  %call357 = call double @MagickMax(double %196, double %197), !dbg !1370
  %x358 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %max, i32 0, i32 0, !dbg !1370
  store double %call357, double* %x358, align 8, !dbg !1370
  %y359 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %min, i32 0, i32 1, !dbg !1370
  %198 = load double, double* %y359, align 8, !dbg !1370
  %y360 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %d, i32 0, i32 1, !dbg !1370
  %199 = load double, double* %y360, align 8, !dbg !1370
  %call361 = call double @MagickMin(double %198, double %199), !dbg !1370
  %y362 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %min, i32 0, i32 1, !dbg !1370
  store double %call361, double* %y362, align 8, !dbg !1370
  %y363 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %max, i32 0, i32 1, !dbg !1370
  %200 = load double, double* %y363, align 8, !dbg !1370
  %y364 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %d, i32 0, i32 1, !dbg !1370
  %201 = load double, double* %y364, align 8, !dbg !1370
  %call365 = call double @MagickMax(double %200, double %201), !dbg !1370
  %y366 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %max, i32 0, i32 1, !dbg !1370
  store double %call365, double* %y366, align 8, !dbg !1370
  %202 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1372
  %page367 = getelementptr inbounds %struct._Image, %struct._Image* %202, i32 0, i32 26, !dbg !1373
  %x368 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %page367, i32 0, i32 2, !dbg !1374
  %203 = load i64, i64* %x368, align 8, !dbg !1374
  %conv369 = sitofp i64 %203 to double, !dbg !1375
  %204 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1376
  %columns370 = getelementptr inbounds %struct._Image, %struct._Image* %204, i32 0, i32 7, !dbg !1377
  %205 = load i64, i64* %columns370, align 8, !dbg !1377
  %conv371 = uitofp i64 %205 to double, !dbg !1376
  %add372 = fadd double %conv369, %conv371, !dbg !1378
  %x373 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %s, i32 0, i32 0, !dbg !1379
  store double %add372, double* %x373, align 8, !dbg !1380
  %206 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1381
  %page374 = getelementptr inbounds %struct._Image, %struct._Image* %206, i32 0, i32 26, !dbg !1382
  %y375 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %page374, i32 0, i32 3, !dbg !1383
  %207 = load i64, i64* %y375, align 8, !dbg !1383
  %conv376 = sitofp i64 %207 to double, !dbg !1384
  %208 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1385
  %rows377 = getelementptr inbounds %struct._Image, %struct._Image* %208, i32 0, i32 8, !dbg !1386
  %209 = load i64, i64* %rows377, align 8, !dbg !1386
  %conv378 = uitofp i64 %209 to double, !dbg !1385
  %add379 = fadd double %conv376, %conv378, !dbg !1387
  %y380 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %s, i32 0, i32 1, !dbg !1388
  store double %add379, double* %y380, align 8, !dbg !1389
  %arrayidx381 = getelementptr inbounds [8 x double], [8 x double]* %inverse204, i64 0, i64 6, !dbg !1390
  %210 = load double, double* %arrayidx381, align 16, !dbg !1390
  %x382 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %s, i32 0, i32 0, !dbg !1391
  %211 = load double, double* %x382, align 8, !dbg !1391
  %mul383 = fmul double %210, %211, !dbg !1392
  %arrayidx384 = getelementptr inbounds [8 x double], [8 x double]* %inverse204, i64 0, i64 7, !dbg !1393
  %212 = load double, double* %arrayidx384, align 8, !dbg !1393
  %y385 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %s, i32 0, i32 1, !dbg !1394
  %213 = load double, double* %y385, align 8, !dbg !1394
  %mul386 = fmul double %212, %213, !dbg !1395
  %add387 = fadd double %mul383, %mul386, !dbg !1396
  %add388 = fadd double %add387, 1.000000e+00, !dbg !1397
  store double %add388, double* %scale, align 8, !dbg !1398
  %214 = load double, double* %scale, align 8, !dbg !1399
  %call389 = call double @PerceptibleReciprocal(double %214), !dbg !1400
  store double %call389, double* %scale, align 8, !dbg !1401
  %215 = load double, double* %scale, align 8, !dbg !1402
  %arrayidx390 = getelementptr inbounds [8 x double], [8 x double]* %inverse204, i64 0, i64 0, !dbg !1403
  %216 = load double, double* %arrayidx390, align 16, !dbg !1403
  %x391 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %s, i32 0, i32 0, !dbg !1404
  %217 = load double, double* %x391, align 8, !dbg !1404
  %mul392 = fmul double %216, %217, !dbg !1405
  %arrayidx393 = getelementptr inbounds [8 x double], [8 x double]* %inverse204, i64 0, i64 1, !dbg !1406
  %218 = load double, double* %arrayidx393, align 8, !dbg !1406
  %y394 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %s, i32 0, i32 1, !dbg !1407
  %219 = load double, double* %y394, align 8, !dbg !1407
  %mul395 = fmul double %218, %219, !dbg !1408
  %add396 = fadd double %mul392, %mul395, !dbg !1409
  %arrayidx397 = getelementptr inbounds [8 x double], [8 x double]* %inverse204, i64 0, i64 2, !dbg !1410
  %220 = load double, double* %arrayidx397, align 16, !dbg !1410
  %add398 = fadd double %add396, %220, !dbg !1411
  %mul399 = fmul double %215, %add398, !dbg !1412
  %x400 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %d, i32 0, i32 0, !dbg !1413
  store double %mul399, double* %x400, align 8, !dbg !1414
  %221 = load double, double* %scale, align 8, !dbg !1415
  %arrayidx401 = getelementptr inbounds [8 x double], [8 x double]* %inverse204, i64 0, i64 3, !dbg !1416
  %222 = load double, double* %arrayidx401, align 8, !dbg !1416
  %x402 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %s, i32 0, i32 0, !dbg !1417
  %223 = load double, double* %x402, align 8, !dbg !1417
  %mul403 = fmul double %222, %223, !dbg !1418
  %arrayidx404 = getelementptr inbounds [8 x double], [8 x double]* %inverse204, i64 0, i64 4, !dbg !1419
  %224 = load double, double* %arrayidx404, align 16, !dbg !1419
  %y405 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %s, i32 0, i32 1, !dbg !1420
  %225 = load double, double* %y405, align 8, !dbg !1420
  %mul406 = fmul double %224, %225, !dbg !1421
  %add407 = fadd double %mul403, %mul406, !dbg !1422
  %arrayidx408 = getelementptr inbounds [8 x double], [8 x double]* %inverse204, i64 0, i64 5, !dbg !1423
  %226 = load double, double* %arrayidx408, align 8, !dbg !1423
  %add409 = fadd double %add407, %226, !dbg !1424
  %mul410 = fmul double %221, %add409, !dbg !1425
  %y411 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %d, i32 0, i32 1, !dbg !1426
  store double %mul410, double* %y411, align 8, !dbg !1427
  %x412 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %min, i32 0, i32 0, !dbg !1428
  %227 = load double, double* %x412, align 8, !dbg !1428
  %x413 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %d, i32 0, i32 0, !dbg !1428
  %228 = load double, double* %x413, align 8, !dbg !1428
  %call414 = call double @MagickMin(double %227, double %228), !dbg !1428
  %x415 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %min, i32 0, i32 0, !dbg !1428
  store double %call414, double* %x415, align 8, !dbg !1428
  %x416 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %max, i32 0, i32 0, !dbg !1428
  %229 = load double, double* %x416, align 8, !dbg !1428
  %x417 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %d, i32 0, i32 0, !dbg !1428
  %230 = load double, double* %x417, align 8, !dbg !1428
  %call418 = call double @MagickMax(double %229, double %230), !dbg !1428
  %x419 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %max, i32 0, i32 0, !dbg !1428
  store double %call418, double* %x419, align 8, !dbg !1428
  %y420 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %min, i32 0, i32 1, !dbg !1428
  %231 = load double, double* %y420, align 8, !dbg !1428
  %y421 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %d, i32 0, i32 1, !dbg !1428
  %232 = load double, double* %y421, align 8, !dbg !1428
  %call422 = call double @MagickMin(double %231, double %232), !dbg !1428
  %y423 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %min, i32 0, i32 1, !dbg !1428
  store double %call422, double* %y423, align 8, !dbg !1428
  %y424 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %max, i32 0, i32 1, !dbg !1428
  %233 = load double, double* %y424, align 8, !dbg !1428
  %y425 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %d, i32 0, i32 1, !dbg !1428
  %234 = load double, double* %y425, align 8, !dbg !1428
  %call426 = call double @MagickMax(double %233, double %234), !dbg !1428
  %y427 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %max, i32 0, i32 1, !dbg !1428
  store double %call426, double* %y427, align 8, !dbg !1428
  br label %sw.epilog, !dbg !1430

sw.bb428:                                         ; preds = %if.then20
  call void @llvm.dbg.declare(metadata double* %a, metadata !1431, metadata !DIExpression()), !dbg !1433
  call void @llvm.dbg.declare(metadata double* %ca, metadata !1434, metadata !DIExpression()), !dbg !1435
  call void @llvm.dbg.declare(metadata double* %sa, metadata !1436, metadata !DIExpression()), !dbg !1437
  %235 = load double*, double** %coeff, align 8, !dbg !1438
  %arrayidx429 = getelementptr inbounds double, double* %235, i64 0, !dbg !1438
  %236 = load double, double* %arrayidx429, align 8, !dbg !1438
  %237 = load double*, double** %coeff, align 8, !dbg !1439
  %arrayidx430 = getelementptr inbounds double, double* %237, i64 1, !dbg !1439
  %238 = load double, double* %arrayidx430, align 8, !dbg !1439
  %div = fdiv double %238, 2.000000e+00, !dbg !1440
  %sub = fsub double %236, %div, !dbg !1441
  store double %sub, double* %a, align 8, !dbg !1442
  %239 = load double, double* %a, align 8, !dbg !1443
  %call431 = call double @cos(double %239) #6, !dbg !1444
  store double %call431, double* %ca, align 8, !dbg !1445
  %240 = load double, double* %a, align 8, !dbg !1446
  %call432 = call double @sin(double %240) #6, !dbg !1447
  store double %call432, double* %sa, align 8, !dbg !1448
  %241 = load double*, double** %coeff, align 8, !dbg !1449
  %arrayidx433 = getelementptr inbounds double, double* %241, i64 2, !dbg !1449
  %242 = load double, double* %arrayidx433, align 8, !dbg !1449
  %243 = load double, double* %ca, align 8, !dbg !1450
  %mul434 = fmul double %242, %243, !dbg !1451
  %x435 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %d, i32 0, i32 0, !dbg !1452
  store double %mul434, double* %x435, align 8, !dbg !1453
  %244 = load double*, double** %coeff, align 8, !dbg !1454
  %arrayidx436 = getelementptr inbounds double, double* %244, i64 2, !dbg !1454
  %245 = load double, double* %arrayidx436, align 8, !dbg !1454
  %246 = load double, double* %sa, align 8, !dbg !1455
  %mul437 = fmul double %245, %246, !dbg !1456
  %y438 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %d, i32 0, i32 1, !dbg !1457
  store double %mul437, double* %y438, align 8, !dbg !1458
  %x439 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %d, i32 0, i32 0, !dbg !1459
  %247 = load double, double* %x439, align 8, !dbg !1459
  %x440 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %max, i32 0, i32 0, !dbg !1459
  store double %247, double* %x440, align 8, !dbg !1459
  %x441 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %min, i32 0, i32 0, !dbg !1459
  store double %247, double* %x441, align 8, !dbg !1459
  %y442 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %d, i32 0, i32 1, !dbg !1459
  %248 = load double, double* %y442, align 8, !dbg !1459
  %y443 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %max, i32 0, i32 1, !dbg !1459
  store double %248, double* %y443, align 8, !dbg !1459
  %y444 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %min, i32 0, i32 1, !dbg !1459
  store double %248, double* %y444, align 8, !dbg !1459
  %249 = load double*, double** %coeff, align 8, !dbg !1461
  %arrayidx445 = getelementptr inbounds double, double* %249, i64 2, !dbg !1461
  %250 = load double, double* %arrayidx445, align 8, !dbg !1461
  %251 = load double*, double** %coeff, align 8, !dbg !1462
  %arrayidx446 = getelementptr inbounds double, double* %251, i64 3, !dbg !1462
  %252 = load double, double* %arrayidx446, align 8, !dbg !1462
  %sub447 = fsub double %250, %252, !dbg !1463
  %253 = load double, double* %ca, align 8, !dbg !1464
  %mul448 = fmul double %sub447, %253, !dbg !1465
  %x449 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %d, i32 0, i32 0, !dbg !1466
  store double %mul448, double* %x449, align 8, !dbg !1467
  %254 = load double*, double** %coeff, align 8, !dbg !1468
  %arrayidx450 = getelementptr inbounds double, double* %254, i64 2, !dbg !1468
  %255 = load double, double* %arrayidx450, align 8, !dbg !1468
  %256 = load double*, double** %coeff, align 8, !dbg !1469
  %arrayidx451 = getelementptr inbounds double, double* %256, i64 3, !dbg !1469
  %257 = load double, double* %arrayidx451, align 8, !dbg !1469
  %sub452 = fsub double %255, %257, !dbg !1470
  %258 = load double, double* %sa, align 8, !dbg !1471
  %mul453 = fmul double %sub452, %258, !dbg !1472
  %y454 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %d, i32 0, i32 1, !dbg !1473
  store double %mul453, double* %y454, align 8, !dbg !1474
  %x455 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %min, i32 0, i32 0, !dbg !1475
  %259 = load double, double* %x455, align 8, !dbg !1475
  %x456 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %d, i32 0, i32 0, !dbg !1475
  %260 = load double, double* %x456, align 8, !dbg !1475
  %call457 = call double @MagickMin(double %259, double %260), !dbg !1475
  %x458 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %min, i32 0, i32 0, !dbg !1475
  store double %call457, double* %x458, align 8, !dbg !1475
  %x459 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %max, i32 0, i32 0, !dbg !1475
  %261 = load double, double* %x459, align 8, !dbg !1475
  %x460 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %d, i32 0, i32 0, !dbg !1475
  %262 = load double, double* %x460, align 8, !dbg !1475
  %call461 = call double @MagickMax(double %261, double %262), !dbg !1475
  %x462 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %max, i32 0, i32 0, !dbg !1475
  store double %call461, double* %x462, align 8, !dbg !1475
  %y463 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %min, i32 0, i32 1, !dbg !1475
  %263 = load double, double* %y463, align 8, !dbg !1475
  %y464 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %d, i32 0, i32 1, !dbg !1475
  %264 = load double, double* %y464, align 8, !dbg !1475
  %call465 = call double @MagickMin(double %263, double %264), !dbg !1475
  %y466 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %min, i32 0, i32 1, !dbg !1475
  store double %call465, double* %y466, align 8, !dbg !1475
  %y467 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %max, i32 0, i32 1, !dbg !1475
  %265 = load double, double* %y467, align 8, !dbg !1475
  %y468 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %d, i32 0, i32 1, !dbg !1475
  %266 = load double, double* %y468, align 8, !dbg !1475
  %call469 = call double @MagickMax(double %265, double %266), !dbg !1475
  %y470 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %max, i32 0, i32 1, !dbg !1475
  store double %call469, double* %y470, align 8, !dbg !1475
  %267 = load double*, double** %coeff, align 8, !dbg !1477
  %arrayidx471 = getelementptr inbounds double, double* %267, i64 0, !dbg !1477
  %268 = load double, double* %arrayidx471, align 8, !dbg !1477
  %269 = load double*, double** %coeff, align 8, !dbg !1478
  %arrayidx472 = getelementptr inbounds double, double* %269, i64 1, !dbg !1478
  %270 = load double, double* %arrayidx472, align 8, !dbg !1478
  %div473 = fdiv double %270, 2.000000e+00, !dbg !1479
  %add474 = fadd double %268, %div473, !dbg !1480
  store double %add474, double* %a, align 8, !dbg !1481
  %271 = load double, double* %a, align 8, !dbg !1482
  %call475 = call double @cos(double %271) #6, !dbg !1483
  store double %call475, double* %ca, align 8, !dbg !1484
  %272 = load double, double* %a, align 8, !dbg !1485
  %call476 = call double @sin(double %272) #6, !dbg !1486
  store double %call476, double* %sa, align 8, !dbg !1487
  %273 = load double*, double** %coeff, align 8, !dbg !1488
  %arrayidx477 = getelementptr inbounds double, double* %273, i64 2, !dbg !1488
  %274 = load double, double* %arrayidx477, align 8, !dbg !1488
  %275 = load double, double* %ca, align 8, !dbg !1489
  %mul478 = fmul double %274, %275, !dbg !1490
  %x479 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %d, i32 0, i32 0, !dbg !1491
  store double %mul478, double* %x479, align 8, !dbg !1492
  %276 = load double*, double** %coeff, align 8, !dbg !1493
  %arrayidx480 = getelementptr inbounds double, double* %276, i64 2, !dbg !1493
  %277 = load double, double* %arrayidx480, align 8, !dbg !1493
  %278 = load double, double* %sa, align 8, !dbg !1494
  %mul481 = fmul double %277, %278, !dbg !1495
  %y482 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %d, i32 0, i32 1, !dbg !1496
  store double %mul481, double* %y482, align 8, !dbg !1497
  %x483 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %min, i32 0, i32 0, !dbg !1498
  %279 = load double, double* %x483, align 8, !dbg !1498
  %x484 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %d, i32 0, i32 0, !dbg !1498
  %280 = load double, double* %x484, align 8, !dbg !1498
  %call485 = call double @MagickMin(double %279, double %280), !dbg !1498
  %x486 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %min, i32 0, i32 0, !dbg !1498
  store double %call485, double* %x486, align 8, !dbg !1498
  %x487 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %max, i32 0, i32 0, !dbg !1498
  %281 = load double, double* %x487, align 8, !dbg !1498
  %x488 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %d, i32 0, i32 0, !dbg !1498
  %282 = load double, double* %x488, align 8, !dbg !1498
  %call489 = call double @MagickMax(double %281, double %282), !dbg !1498
  %x490 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %max, i32 0, i32 0, !dbg !1498
  store double %call489, double* %x490, align 8, !dbg !1498
  %y491 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %min, i32 0, i32 1, !dbg !1498
  %283 = load double, double* %y491, align 8, !dbg !1498
  %y492 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %d, i32 0, i32 1, !dbg !1498
  %284 = load double, double* %y492, align 8, !dbg !1498
  %call493 = call double @MagickMin(double %283, double %284), !dbg !1498
  %y494 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %min, i32 0, i32 1, !dbg !1498
  store double %call493, double* %y494, align 8, !dbg !1498
  %y495 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %max, i32 0, i32 1, !dbg !1498
  %285 = load double, double* %y495, align 8, !dbg !1498
  %y496 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %d, i32 0, i32 1, !dbg !1498
  %286 = load double, double* %y496, align 8, !dbg !1498
  %call497 = call double @MagickMax(double %285, double %286), !dbg !1498
  %y498 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %max, i32 0, i32 1, !dbg !1498
  store double %call497, double* %y498, align 8, !dbg !1498
  %287 = load double*, double** %coeff, align 8, !dbg !1500
  %arrayidx499 = getelementptr inbounds double, double* %287, i64 2, !dbg !1500
  %288 = load double, double* %arrayidx499, align 8, !dbg !1500
  %289 = load double*, double** %coeff, align 8, !dbg !1501
  %arrayidx500 = getelementptr inbounds double, double* %289, i64 3, !dbg !1501
  %290 = load double, double* %arrayidx500, align 8, !dbg !1501
  %sub501 = fsub double %288, %290, !dbg !1502
  %291 = load double, double* %ca, align 8, !dbg !1503
  %mul502 = fmul double %sub501, %291, !dbg !1504
  %x503 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %d, i32 0, i32 0, !dbg !1505
  store double %mul502, double* %x503, align 8, !dbg !1506
  %292 = load double*, double** %coeff, align 8, !dbg !1507
  %arrayidx504 = getelementptr inbounds double, double* %292, i64 2, !dbg !1507
  %293 = load double, double* %arrayidx504, align 8, !dbg !1507
  %294 = load double*, double** %coeff, align 8, !dbg !1508
  %arrayidx505 = getelementptr inbounds double, double* %294, i64 3, !dbg !1508
  %295 = load double, double* %arrayidx505, align 8, !dbg !1508
  %sub506 = fsub double %293, %295, !dbg !1509
  %296 = load double, double* %sa, align 8, !dbg !1510
  %mul507 = fmul double %sub506, %296, !dbg !1511
  %y508 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %d, i32 0, i32 1, !dbg !1512
  store double %mul507, double* %y508, align 8, !dbg !1513
  %x509 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %min, i32 0, i32 0, !dbg !1514
  %297 = load double, double* %x509, align 8, !dbg !1514
  %x510 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %d, i32 0, i32 0, !dbg !1514
  %298 = load double, double* %x510, align 8, !dbg !1514
  %call511 = call double @MagickMin(double %297, double %298), !dbg !1514
  %x512 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %min, i32 0, i32 0, !dbg !1514
  store double %call511, double* %x512, align 8, !dbg !1514
  %x513 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %max, i32 0, i32 0, !dbg !1514
  %299 = load double, double* %x513, align 8, !dbg !1514
  %x514 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %d, i32 0, i32 0, !dbg !1514
  %300 = load double, double* %x514, align 8, !dbg !1514
  %call515 = call double @MagickMax(double %299, double %300), !dbg !1514
  %x516 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %max, i32 0, i32 0, !dbg !1514
  store double %call515, double* %x516, align 8, !dbg !1514
  %y517 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %min, i32 0, i32 1, !dbg !1514
  %301 = load double, double* %y517, align 8, !dbg !1514
  %y518 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %d, i32 0, i32 1, !dbg !1514
  %302 = load double, double* %y518, align 8, !dbg !1514
  %call519 = call double @MagickMin(double %301, double %302), !dbg !1514
  %y520 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %min, i32 0, i32 1, !dbg !1514
  store double %call519, double* %y520, align 8, !dbg !1514
  %y521 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %max, i32 0, i32 1, !dbg !1514
  %303 = load double, double* %y521, align 8, !dbg !1514
  %y522 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %d, i32 0, i32 1, !dbg !1514
  %304 = load double, double* %y522, align 8, !dbg !1514
  %call523 = call double @MagickMax(double %303, double %304), !dbg !1514
  %y524 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %max, i32 0, i32 1, !dbg !1514
  store double %call523, double* %y524, align 8, !dbg !1514
  %305 = load double*, double** %coeff, align 8, !dbg !1516
  %arrayidx525 = getelementptr inbounds double, double* %305, i64 0, !dbg !1516
  %306 = load double, double* %arrayidx525, align 8, !dbg !1516
  %307 = load double*, double** %coeff, align 8, !dbg !1518
  %arrayidx526 = getelementptr inbounds double, double* %307, i64 1, !dbg !1518
  %308 = load double, double* %arrayidx526, align 8, !dbg !1518
  %div527 = fdiv double %308, 2.000000e+00, !dbg !1519
  %sub528 = fsub double %306, %div527, !dbg !1520
  %div529 = fdiv double %sub528, 0x3FF921FB54442D18, !dbg !1521
  %309 = call double @llvm.ceil.f64(double %div529), !dbg !1522
  %mul530 = fmul double %309, 0x3FF921FB54442D18, !dbg !1523
  store double %mul530, double* %a, align 8, !dbg !1524
  br label %for.cond, !dbg !1525

for.cond:                                         ; preds = %for.inc, %sw.bb428
  %310 = load double, double* %a, align 8, !dbg !1526
  %311 = load double*, double** %coeff, align 8, !dbg !1528
  %arrayidx531 = getelementptr inbounds double, double* %311, i64 0, !dbg !1528
  %312 = load double, double* %arrayidx531, align 8, !dbg !1528
  %313 = load double*, double** %coeff, align 8, !dbg !1529
  %arrayidx532 = getelementptr inbounds double, double* %313, i64 1, !dbg !1529
  %314 = load double, double* %arrayidx532, align 8, !dbg !1529
  %div533 = fdiv double %314, 2.000000e+00, !dbg !1530
  %add534 = fadd double %312, %div533, !dbg !1531
  %cmp535 = fcmp olt double %310, %add534, !dbg !1532
  br i1 %cmp535, label %for.body, label %for.end, !dbg !1533

for.body:                                         ; preds = %for.cond
  %315 = load double, double* %a, align 8, !dbg !1534
  %call537 = call double @cos(double %315) #6, !dbg !1536
  store double %call537, double* %ca, align 8, !dbg !1537
  %316 = load double, double* %a, align 8, !dbg !1538
  %call538 = call double @sin(double %316) #6, !dbg !1539
  store double %call538, double* %sa, align 8, !dbg !1540
  %317 = load double*, double** %coeff, align 8, !dbg !1541
  %arrayidx539 = getelementptr inbounds double, double* %317, i64 2, !dbg !1541
  %318 = load double, double* %arrayidx539, align 8, !dbg !1541
  %319 = load double, double* %ca, align 8, !dbg !1542
  %mul540 = fmul double %318, %319, !dbg !1543
  %x541 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %d, i32 0, i32 0, !dbg !1544
  store double %mul540, double* %x541, align 8, !dbg !1545
  %320 = load double*, double** %coeff, align 8, !dbg !1546
  %arrayidx542 = getelementptr inbounds double, double* %320, i64 2, !dbg !1546
  %321 = load double, double* %arrayidx542, align 8, !dbg !1546
  %322 = load double, double* %sa, align 8, !dbg !1547
  %mul543 = fmul double %321, %322, !dbg !1548
  %y544 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %d, i32 0, i32 1, !dbg !1549
  store double %mul543, double* %y544, align 8, !dbg !1550
  %x545 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %min, i32 0, i32 0, !dbg !1551
  %323 = load double, double* %x545, align 8, !dbg !1551
  %x546 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %d, i32 0, i32 0, !dbg !1551
  %324 = load double, double* %x546, align 8, !dbg !1551
  %call547 = call double @MagickMin(double %323, double %324), !dbg !1551
  %x548 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %min, i32 0, i32 0, !dbg !1551
  store double %call547, double* %x548, align 8, !dbg !1551
  %x549 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %max, i32 0, i32 0, !dbg !1551
  %325 = load double, double* %x549, align 8, !dbg !1551
  %x550 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %d, i32 0, i32 0, !dbg !1551
  %326 = load double, double* %x550, align 8, !dbg !1551
  %call551 = call double @MagickMax(double %325, double %326), !dbg !1551
  %x552 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %max, i32 0, i32 0, !dbg !1551
  store double %call551, double* %x552, align 8, !dbg !1551
  %y553 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %min, i32 0, i32 1, !dbg !1551
  %327 = load double, double* %y553, align 8, !dbg !1551
  %y554 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %d, i32 0, i32 1, !dbg !1551
  %328 = load double, double* %y554, align 8, !dbg !1551
  %call555 = call double @MagickMin(double %327, double %328), !dbg !1551
  %y556 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %min, i32 0, i32 1, !dbg !1551
  store double %call555, double* %y556, align 8, !dbg !1551
  %y557 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %max, i32 0, i32 1, !dbg !1551
  %329 = load double, double* %y557, align 8, !dbg !1551
  %y558 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %d, i32 0, i32 1, !dbg !1551
  %330 = load double, double* %y558, align 8, !dbg !1551
  %call559 = call double @MagickMax(double %329, double %330), !dbg !1551
  %y560 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %max, i32 0, i32 1, !dbg !1551
  store double %call559, double* %y560, align 8, !dbg !1551
  br label %for.inc, !dbg !1553

for.inc:                                          ; preds = %for.body
  %331 = load double, double* %a, align 8, !dbg !1554
  %add561 = fadd double %331, 0x3FF921FB54442D18, !dbg !1554
  store double %add561, double* %a, align 8, !dbg !1554
  br label %for.cond, !dbg !1555, !llvm.loop !1556

for.end:                                          ; preds = %for.cond
  %332 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1558
  %columns562 = getelementptr inbounds %struct._Image, %struct._Image* %332, i32 0, i32 7, !dbg !1559
  %333 = load i64, i64* %columns562, align 8, !dbg !1559
  %conv563 = uitofp i64 %333 to double, !dbg !1558
  %mul564 = fmul double 0x401921FB54442D18, %conv563, !dbg !1560
  %334 = load double*, double** %coeff, align 8, !dbg !1561
  %arrayidx565 = getelementptr inbounds double, double* %334, i64 1, !dbg !1561
  %335 = load double, double* %arrayidx565, align 8, !dbg !1561
  %div566 = fdiv double %mul564, %335, !dbg !1562
  %336 = load double*, double** %coeff, align 8, !dbg !1563
  %arrayidx567 = getelementptr inbounds double, double* %336, i64 1, !dbg !1563
  store double %div566, double* %arrayidx567, align 8, !dbg !1564
  %337 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1565
  %rows568 = getelementptr inbounds %struct._Image, %struct._Image* %337, i32 0, i32 8, !dbg !1566
  %338 = load i64, i64* %rows568, align 8, !dbg !1566
  %conv569 = uitofp i64 %338 to double, !dbg !1567
  %339 = load double*, double** %coeff, align 8, !dbg !1568
  %arrayidx570 = getelementptr inbounds double, double* %339, i64 3, !dbg !1568
  %340 = load double, double* %arrayidx570, align 8, !dbg !1568
  %div571 = fdiv double %conv569, %340, !dbg !1569
  %341 = load double*, double** %coeff, align 8, !dbg !1570
  %arrayidx572 = getelementptr inbounds double, double* %341, i64 3, !dbg !1570
  store double %div571, double* %arrayidx572, align 8, !dbg !1571
  br label %sw.epilog, !dbg !1572

sw.bb573:                                         ; preds = %if.then20
  %342 = load i64, i64* %number_arguments.addr, align 8, !dbg !1573
  %cmp574 = icmp ult i64 %342, 2, !dbg !1576
  br i1 %cmp574, label %if.then576, label %if.end579, !dbg !1577

if.then576:                                       ; preds = %sw.bb573
  %343 = load double*, double** %coeff, align 8, !dbg !1578
  %arrayidx577 = getelementptr inbounds double, double* %343, i64 3, !dbg !1578
  store double 0.000000e+00, double* %arrayidx577, align 8, !dbg !1579
  %344 = load double*, double** %coeff, align 8, !dbg !1580
  %arrayidx578 = getelementptr inbounds double, double* %344, i64 2, !dbg !1580
  store double 0.000000e+00, double* %arrayidx578, align 8, !dbg !1581
  br label %if.end579, !dbg !1580

if.end579:                                        ; preds = %if.then576, %sw.bb573
  %345 = load double*, double** %coeff, align 8, !dbg !1582
  %arrayidx580 = getelementptr inbounds double, double* %345, i64 2, !dbg !1582
  %346 = load double, double* %arrayidx580, align 8, !dbg !1582
  %347 = load double*, double** %coeff, align 8, !dbg !1583
  %arrayidx581 = getelementptr inbounds double, double* %347, i64 0, !dbg !1583
  %348 = load double, double* %arrayidx581, align 8, !dbg !1583
  %sub582 = fsub double %346, %348, !dbg !1584
  %x583 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %min, i32 0, i32 0, !dbg !1585
  store double %sub582, double* %x583, align 8, !dbg !1586
  %349 = load double*, double** %coeff, align 8, !dbg !1587
  %arrayidx584 = getelementptr inbounds double, double* %349, i64 2, !dbg !1587
  %350 = load double, double* %arrayidx584, align 8, !dbg !1587
  %351 = load double*, double** %coeff, align 8, !dbg !1588
  %arrayidx585 = getelementptr inbounds double, double* %351, i64 0, !dbg !1588
  %352 = load double, double* %arrayidx585, align 8, !dbg !1588
  %add586 = fadd double %350, %352, !dbg !1589
  %x587 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %max, i32 0, i32 0, !dbg !1590
  store double %add586, double* %x587, align 8, !dbg !1591
  %353 = load double*, double** %coeff, align 8, !dbg !1592
  %arrayidx588 = getelementptr inbounds double, double* %353, i64 3, !dbg !1592
  %354 = load double, double* %arrayidx588, align 8, !dbg !1592
  %355 = load double*, double** %coeff, align 8, !dbg !1593
  %arrayidx589 = getelementptr inbounds double, double* %355, i64 0, !dbg !1593
  %356 = load double, double* %arrayidx589, align 8, !dbg !1593
  %sub590 = fsub double %354, %356, !dbg !1594
  %y591 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %min, i32 0, i32 1, !dbg !1595
  store double %sub590, double* %y591, align 8, !dbg !1596
  %357 = load double*, double** %coeff, align 8, !dbg !1597
  %arrayidx592 = getelementptr inbounds double, double* %357, i64 3, !dbg !1597
  %358 = load double, double* %arrayidx592, align 8, !dbg !1597
  %359 = load double*, double** %coeff, align 8, !dbg !1598
  %arrayidx593 = getelementptr inbounds double, double* %359, i64 0, !dbg !1598
  %360 = load double, double* %arrayidx593, align 8, !dbg !1598
  %add594 = fadd double %358, %360, !dbg !1599
  %y595 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %max, i32 0, i32 1, !dbg !1600
  store double %add594, double* %y595, align 8, !dbg !1601
  %height596 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %geometry, i32 0, i32 1, !dbg !1602
  %361 = load i64, i64* %height596, align 8, !dbg !1602
  %conv597 = uitofp i64 %361 to double, !dbg !1603
  %362 = load double*, double** %coeff, align 8, !dbg !1604
  %arrayidx598 = getelementptr inbounds double, double* %362, i64 0, !dbg !1604
  %363 = load double, double* %arrayidx598, align 8, !dbg !1604
  %364 = load double*, double** %coeff, align 8, !dbg !1605
  %arrayidx599 = getelementptr inbounds double, double* %364, i64 1, !dbg !1605
  %365 = load double, double* %arrayidx599, align 8, !dbg !1605
  %sub600 = fsub double %363, %365, !dbg !1606
  %div601 = fdiv double %conv597, %sub600, !dbg !1607
  %366 = load double*, double** %coeff, align 8, !dbg !1608
  %arrayidx602 = getelementptr inbounds double, double* %366, i64 7, !dbg !1608
  store double %div601, double* %arrayidx602, align 8, !dbg !1609
  br label %sw.epilog, !dbg !1610

sw.bb603:                                         ; preds = %if.then20
  store i32 0, i32* %fix_bounds, align 4, !dbg !1611
  %y604 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %geometry, i32 0, i32 3, !dbg !1613
  store i64 0, i64* %y604, align 8, !dbg !1614
  %x605 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %geometry, i32 0, i32 2, !dbg !1615
  store i64 0, i64* %x605, align 8, !dbg !1616
  %367 = load double*, double** %coeff, align 8, !dbg !1617
  %arrayidx606 = getelementptr inbounds double, double* %367, i64 0, !dbg !1617
  %368 = load double, double* %arrayidx606, align 8, !dbg !1617
  %369 = load double*, double** %coeff, align 8, !dbg !1618
  %arrayidx607 = getelementptr inbounds double, double* %369, i64 1, !dbg !1618
  %370 = load double, double* %arrayidx607, align 8, !dbg !1618
  %sub608 = fsub double %368, %370, !dbg !1619
  %371 = call double @llvm.ceil.f64(double %sub608), !dbg !1620
  %conv609 = fptoui double %371 to i64, !dbg !1621
  %height610 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %geometry, i32 0, i32 1, !dbg !1622
  store i64 %conv609, i64* %height610, align 8, !dbg !1623
  %372 = load double*, double** %coeff, align 8, !dbg !1624
  %arrayidx611 = getelementptr inbounds double, double* %372, i64 0, !dbg !1624
  %373 = load double, double* %arrayidx611, align 8, !dbg !1624
  %374 = load double*, double** %coeff, align 8, !dbg !1625
  %arrayidx612 = getelementptr inbounds double, double* %374, i64 1, !dbg !1625
  %375 = load double, double* %arrayidx612, align 8, !dbg !1625
  %sub613 = fsub double %373, %375, !dbg !1626
  %376 = load double*, double** %coeff, align 8, !dbg !1627
  %arrayidx614 = getelementptr inbounds double, double* %376, i64 5, !dbg !1627
  %377 = load double, double* %arrayidx614, align 8, !dbg !1627
  %378 = load double*, double** %coeff, align 8, !dbg !1628
  %arrayidx615 = getelementptr inbounds double, double* %378, i64 4, !dbg !1628
  %379 = load double, double* %arrayidx615, align 8, !dbg !1628
  %sub616 = fsub double %377, %379, !dbg !1629
  %mul617 = fmul double %sub613, %sub616, !dbg !1630
  %mul618 = fmul double %mul617, 5.000000e-01, !dbg !1631
  %380 = call double @llvm.ceil.f64(double %mul618), !dbg !1632
  %conv619 = fptoui double %380 to i64, !dbg !1633
  %width620 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %geometry, i32 0, i32 0, !dbg !1634
  store i64 %conv619, i64* %width620, align 8, !dbg !1635
  %381 = load double*, double** %coeff, align 8, !dbg !1636
  %arrayidx621 = getelementptr inbounds double, double* %381, i64 5, !dbg !1636
  %382 = load double, double* %arrayidx621, align 8, !dbg !1636
  %383 = load double*, double** %coeff, align 8, !dbg !1637
  %arrayidx622 = getelementptr inbounds double, double* %383, i64 4, !dbg !1637
  %384 = load double, double* %arrayidx622, align 8, !dbg !1637
  %sub623 = fsub double %382, %384, !dbg !1638
  %width624 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %geometry, i32 0, i32 0, !dbg !1639
  %385 = load i64, i64* %width624, align 8, !dbg !1639
  %conv625 = uitofp i64 %385 to double, !dbg !1640
  %div626 = fdiv double %sub623, %conv625, !dbg !1641
  %386 = load double*, double** %coeff, align 8, !dbg !1642
  %arrayidx627 = getelementptr inbounds double, double* %386, i64 6, !dbg !1642
  store double %div626, double* %arrayidx627, align 8, !dbg !1643
  %387 = load double*, double** %coeff, align 8, !dbg !1644
  %arrayidx628 = getelementptr inbounds double, double* %387, i64 0, !dbg !1644
  %388 = load double, double* %arrayidx628, align 8, !dbg !1644
  %389 = load double*, double** %coeff, align 8, !dbg !1645
  %arrayidx629 = getelementptr inbounds double, double* %389, i64 1, !dbg !1645
  %390 = load double, double* %arrayidx629, align 8, !dbg !1645
  %sub630 = fsub double %388, %390, !dbg !1646
  %height631 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %geometry, i32 0, i32 1, !dbg !1647
  %391 = load i64, i64* %height631, align 8, !dbg !1647
  %conv632 = uitofp i64 %391 to double, !dbg !1648
  %div633 = fdiv double %sub630, %conv632, !dbg !1649
  %392 = load double*, double** %coeff, align 8, !dbg !1650
  %arrayidx634 = getelementptr inbounds double, double* %392, i64 7, !dbg !1650
  store double %div633, double* %arrayidx634, align 8, !dbg !1651
  br label %sw.epilog, !dbg !1652

sw.bb635:                                         ; preds = %if.then20
  %y636 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %geometry, i32 0, i32 3, !dbg !1653
  store i64 0, i64* %y636, align 8, !dbg !1655
  %x637 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %geometry, i32 0, i32 2, !dbg !1656
  store i64 0, i64* %x637, align 8, !dbg !1657
  %393 = load double*, double** %coeff, align 8, !dbg !1658
  %arrayidx638 = getelementptr inbounds double, double* %393, i64 1, !dbg !1658
  %394 = load double, double* %arrayidx638, align 8, !dbg !1658
  %mul639 = fmul double 2.000000e+00, %394, !dbg !1659
  %395 = load double*, double** %coeff, align 8, !dbg !1660
  %arrayidx640 = getelementptr inbounds double, double* %395, i64 0, !dbg !1660
  %396 = load double, double* %arrayidx640, align 8, !dbg !1660
  %div641 = fdiv double %396, 2.000000e+00, !dbg !1661
  %call642 = call double @tan(double %div641) #6, !dbg !1662
  %mul643 = fmul double %mul639, %call642, !dbg !1663
  %397 = call double @llvm.ceil.f64(double %mul643), !dbg !1664
  %conv644 = fptoui double %397 to i64, !dbg !1665
  %width645 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %geometry, i32 0, i32 0, !dbg !1666
  store i64 %conv644, i64* %width645, align 8, !dbg !1667
  %398 = load double*, double** %coeff, align 8, !dbg !1668
  %arrayidx646 = getelementptr inbounds double, double* %398, i64 3, !dbg !1668
  %399 = load double, double* %arrayidx646, align 8, !dbg !1668
  %mul647 = fmul double 2.000000e+00, %399, !dbg !1669
  %400 = load double*, double** %coeff, align 8, !dbg !1670
  %arrayidx648 = getelementptr inbounds double, double* %400, i64 0, !dbg !1670
  %401 = load double, double* %arrayidx648, align 8, !dbg !1670
  %div649 = fdiv double %401, 2.000000e+00, !dbg !1671
  %call650 = call double @cos(double %div649) #6, !dbg !1672
  %div651 = fdiv double %mul647, %call650, !dbg !1673
  %402 = call double @llvm.ceil.f64(double %div651), !dbg !1674
  %conv652 = fptoui double %402 to i64, !dbg !1675
  %height653 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %geometry, i32 0, i32 1, !dbg !1676
  store i64 %conv652, i64* %height653, align 8, !dbg !1677
  %width654 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %geometry, i32 0, i32 0, !dbg !1678
  %403 = load i64, i64* %width654, align 8, !dbg !1678
  %conv655 = uitofp i64 %403 to double, !dbg !1679
  %div656 = fdiv double %conv655, 2.000000e+00, !dbg !1680
  %404 = load double*, double** %coeff, align 8, !dbg !1681
  %arrayidx657 = getelementptr inbounds double, double* %404, i64 4, !dbg !1681
  store double %div656, double* %arrayidx657, align 8, !dbg !1682
  %height658 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %geometry, i32 0, i32 1, !dbg !1683
  %405 = load i64, i64* %height658, align 8, !dbg !1683
  %conv659 = uitofp i64 %405 to double, !dbg !1684
  %div660 = fdiv double %conv659, 2.000000e+00, !dbg !1685
  %406 = load double*, double** %coeff, align 8, !dbg !1686
  %arrayidx661 = getelementptr inbounds double, double* %406, i64 5, !dbg !1686
  store double %div660, double* %arrayidx661, align 8, !dbg !1687
  store i32 0, i32* %fix_bounds, align 4, !dbg !1688
  br label %sw.epilog, !dbg !1689

sw.bb662:                                         ; preds = %if.then20
  %y663 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %geometry, i32 0, i32 3, !dbg !1690
  store i64 0, i64* %y663, align 8, !dbg !1692
  %x664 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %geometry, i32 0, i32 2, !dbg !1693
  store i64 0, i64* %x664, align 8, !dbg !1694
  %407 = load double*, double** %coeff, align 8, !dbg !1695
  %arrayidx665 = getelementptr inbounds double, double* %407, i64 0, !dbg !1695
  %408 = load double, double* %arrayidx665, align 8, !dbg !1695
  %409 = load double*, double** %coeff, align 8, !dbg !1696
  %arrayidx666 = getelementptr inbounds double, double* %409, i64 1, !dbg !1696
  %410 = load double, double* %arrayidx666, align 8, !dbg !1696
  %mul667 = fmul double %408, %410, !dbg !1697
  %411 = call double @llvm.ceil.f64(double %mul667), !dbg !1698
  %conv668 = fptoui double %411 to i64, !dbg !1699
  %width669 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %geometry, i32 0, i32 0, !dbg !1700
  store i64 %conv668, i64* %width669, align 8, !dbg !1701
  %412 = load double*, double** %coeff, align 8, !dbg !1702
  %arrayidx670 = getelementptr inbounds double, double* %412, i64 3, !dbg !1702
  %413 = load double, double* %arrayidx670, align 8, !dbg !1702
  %mul671 = fmul double 2.000000e+00, %413, !dbg !1703
  %conv672 = fptoui double %mul671 to i64, !dbg !1704
  %height673 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %geometry, i32 0, i32 1, !dbg !1705
  store i64 %conv672, i64* %height673, align 8, !dbg !1706
  %width674 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %geometry, i32 0, i32 0, !dbg !1707
  %414 = load i64, i64* %width674, align 8, !dbg !1707
  %conv675 = uitofp i64 %414 to double, !dbg !1708
  %div676 = fdiv double %conv675, 2.000000e+00, !dbg !1709
  %415 = load double*, double** %coeff, align 8, !dbg !1710
  %arrayidx677 = getelementptr inbounds double, double* %415, i64 4, !dbg !1710
  store double %div676, double* %arrayidx677, align 8, !dbg !1711
  %height678 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %geometry, i32 0, i32 1, !dbg !1712
  %416 = load i64, i64* %height678, align 8, !dbg !1712
  %conv679 = uitofp i64 %416 to double, !dbg !1713
  %div680 = fdiv double %conv679, 2.000000e+00, !dbg !1714
  %417 = load double*, double** %coeff, align 8, !dbg !1715
  %arrayidx681 = getelementptr inbounds double, double* %417, i64 5, !dbg !1715
  store double %div680, double* %arrayidx681, align 8, !dbg !1716
  store i32 0, i32* %fix_bounds, align 4, !dbg !1717
  br label %sw.epilog, !dbg !1718

sw.bb682:                                         ; preds = %if.then20, %if.then20, %if.then20, %if.then20, %if.then20, %if.then20
  br label %sw.default, !dbg !1719

sw.default:                                       ; preds = %if.then20, %sw.bb682
  store i32 0, i32* %bestfit.addr, align 4, !dbg !1720
  store i32 0, i32* %fix_bounds, align 4, !dbg !1721
  br label %sw.epilog, !dbg !1722

sw.epilog:                                        ; preds = %sw.default, %sw.bb662, %sw.bb635, %sw.bb603, %if.end579, %for.end, %sw.bb203, %sw.bb
  %418 = load i32, i32* %fix_bounds, align 4, !dbg !1723
  %tobool683 = icmp ne i32 %418, 0, !dbg !1723
  br i1 %tobool683, label %if.then684, label %if.end707, !dbg !1725

if.then684:                                       ; preds = %sw.epilog
  %x685 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %min, i32 0, i32 0, !dbg !1726
  %419 = load double, double* %x685, align 8, !dbg !1726
  %sub686 = fsub double %419, 5.000000e-01, !dbg !1728
  %420 = call double @llvm.floor.f64(double %sub686), !dbg !1729
  %conv687 = fptosi double %420 to i64, !dbg !1730
  %x688 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %geometry, i32 0, i32 2, !dbg !1731
  store i64 %conv687, i64* %x688, align 8, !dbg !1732
  %y689 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %min, i32 0, i32 1, !dbg !1733
  %421 = load double, double* %y689, align 8, !dbg !1733
  %sub690 = fsub double %421, 5.000000e-01, !dbg !1734
  %422 = call double @llvm.floor.f64(double %sub690), !dbg !1735
  %conv691 = fptosi double %422 to i64, !dbg !1736
  %y692 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %geometry, i32 0, i32 3, !dbg !1737
  store i64 %conv691, i64* %y692, align 8, !dbg !1738
  %x693 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %max, i32 0, i32 0, !dbg !1739
  %423 = load double, double* %x693, align 8, !dbg !1739
  %x694 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %geometry, i32 0, i32 2, !dbg !1740
  %424 = load i64, i64* %x694, align 8, !dbg !1740
  %conv695 = sitofp i64 %424 to double, !dbg !1741
  %sub696 = fsub double %423, %conv695, !dbg !1742
  %add697 = fadd double %sub696, 5.000000e-01, !dbg !1743
  %425 = call double @llvm.ceil.f64(double %add697), !dbg !1744
  %conv698 = fptoui double %425 to i64, !dbg !1745
  %width699 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %geometry, i32 0, i32 0, !dbg !1746
  store i64 %conv698, i64* %width699, align 8, !dbg !1747
  %y700 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %max, i32 0, i32 1, !dbg !1748
  %426 = load double, double* %y700, align 8, !dbg !1748
  %y701 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %geometry, i32 0, i32 3, !dbg !1749
  %427 = load i64, i64* %y701, align 8, !dbg !1749
  %conv702 = sitofp i64 %427 to double, !dbg !1750
  %sub703 = fsub double %426, %conv702, !dbg !1751
  %add704 = fadd double %sub703, 5.000000e-01, !dbg !1752
  %428 = call double @llvm.ceil.f64(double %add704), !dbg !1753
  %conv705 = fptoui double %428 to i64, !dbg !1754
  %height706 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %geometry, i32 0, i32 1, !dbg !1755
  store i64 %conv705, i64* %height706, align 8, !dbg !1756
  br label %if.end707, !dbg !1757

if.end707:                                        ; preds = %if.then684, %sw.epilog
  br label %if.end708, !dbg !1758

if.end708:                                        ; preds = %if.end707, %if.end19
  call void @llvm.dbg.declare(metadata i8** %artifact, metadata !1759, metadata !DIExpression()), !dbg !1761
  %429 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1762
  %call709 = call i8* @GetImageArtifact(%struct._Image* %429, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.7, i64 0, i64 0)), !dbg !1763
  store i8* %call709, i8** %artifact, align 8, !dbg !1761
  store i32 0, i32* %viewport_given, align 4, !dbg !1764
  %430 = load i8*, i8** %artifact, align 8, !dbg !1765
  %cmp710 = icmp ne i8* %430, null, !dbg !1767
  br i1 %cmp710, label %if.then712, label %if.end719, !dbg !1768

if.then712:                                       ; preds = %if.end708
  call void @llvm.dbg.declare(metadata i32* %flags, metadata !1769, metadata !DIExpression()), !dbg !1772
  %431 = load i8*, i8** %artifact, align 8, !dbg !1773
  %call713 = call i32 @ParseAbsoluteGeometry(i8* %431, %struct._RectangleInfo* %geometry), !dbg !1774
  store i32 %call713, i32* %flags, align 4, !dbg !1772
  %432 = load i32, i32* %flags, align 4, !dbg !1775
  %cmp714 = icmp eq i32 %432, 0, !dbg !1777
  br i1 %cmp714, label %if.then716, label %if.else, !dbg !1778

if.then716:                                       ; preds = %if.then712
  %433 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !1779
  %434 = load i8*, i8** %artifact, align 8, !dbg !1780
  %call717 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %433, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 1968, i32 310, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.7, i64 0, i64 0), i8* %434), !dbg !1781
  br label %if.end718, !dbg !1782

if.else:                                          ; preds = %if.then712
  store i32 1, i32* %viewport_given, align 4, !dbg !1783
  br label %if.end718

if.end718:                                        ; preds = %if.else, %if.then716
  br label %if.end719, !dbg !1784

if.end719:                                        ; preds = %if.end718, %if.end708
  %435 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1785
  %call720 = call i8* @GetImageArtifact(%struct._Image* %435, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10, i64 0, i64 0)), !dbg !1787
  %cmp721 = icmp ne i8* %call720, null, !dbg !1788
  br i1 %cmp721, label %if.then723, label %if.end1140, !dbg !1789

if.then723:                                       ; preds = %if.end719
  call void @llvm.dbg.declare(metadata i64* %i, metadata !1790, metadata !DIExpression()), !dbg !1792
  call void @llvm.dbg.declare(metadata [4096 x i8]* %image_gen, metadata !1793, metadata !DIExpression()), !dbg !1794
  call void @llvm.dbg.declare(metadata i8** %lookup, metadata !1795, metadata !DIExpression()), !dbg !1796
  %436 = load i32, i32* %bestfit.addr, align 4, !dbg !1797
  %tobool724 = icmp ne i32 %436, 0, !dbg !1797
  br i1 %tobool724, label %if.then726, label %lor.lhs.false, !dbg !1799

lor.lhs.false:                                    ; preds = %if.then723
  %437 = load i32, i32* %viewport_given, align 4, !dbg !1800
  %tobool725 = icmp ne i32 %437, 0, !dbg !1800
  br i1 %tobool725, label %if.then726, label %if.else737, !dbg !1801

if.then726:                                       ; preds = %lor.lhs.false, %if.then723
  %arraydecay727 = getelementptr inbounds [4096 x i8], [4096 x i8]* %image_gen, i64 0, i64 0, !dbg !1802
  %width728 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %geometry, i32 0, i32 0, !dbg !1804
  %438 = load i64, i64* %width728, align 8, !dbg !1804
  %conv729 = uitofp i64 %438 to double, !dbg !1805
  %height730 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %geometry, i32 0, i32 1, !dbg !1806
  %439 = load i64, i64* %height730, align 8, !dbg !1806
  %conv731 = uitofp i64 %439 to double, !dbg !1807
  %x732 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %geometry, i32 0, i32 2, !dbg !1808
  %440 = load i64, i64* %x732, align 8, !dbg !1808
  %conv733 = sitofp i64 %440 to double, !dbg !1809
  %y734 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %geometry, i32 0, i32 3, !dbg !1810
  %441 = load i64, i64* %y734, align 8, !dbg !1810
  %conv735 = sitofp i64 %441 to double, !dbg !1811
  %call736 = call i64 (i8*, i64, i8*, ...) @FormatLocaleString(i8* %arraydecay727, i64 4096, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.11, i64 0, i64 0), double %conv729, double %conv731, double %conv733, double %conv735), !dbg !1812
  store i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.12, i64 0, i64 0), i8** %lookup, align 8, !dbg !1813
  br label %if.end739, !dbg !1814

if.else737:                                       ; preds = %lor.lhs.false
  %arrayidx738 = getelementptr inbounds [4096 x i8], [4096 x i8]* %image_gen, i64 0, i64 0, !dbg !1815
  store i8 0, i8* %arrayidx738, align 16, !dbg !1817
  store i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.13, i64 0, i64 0), i8** %lookup, align 8, !dbg !1818
  br label %if.end739

if.end739:                                        ; preds = %if.else737, %if.then726
  %442 = load i32, i32* %method.addr, align 4, !dbg !1819
  switch i32 %442, label %sw.default1138 [
    i32 1, label %sw.bb740
    i32 4, label %sw.bb775
    i32 6, label %sw.bb827
    i32 7, label %sw.bb884
    i32 8, label %sw.bb900
    i32 9, label %sw.bb950
    i32 10, label %sw.bb977
    i32 11, label %sw.bb1011
    i32 12, label %sw.bb1037
    i32 13, label %sw.bb1057
    i32 14, label %sw.bb1077
    i32 15, label %sw.bb1077
  ], !dbg !1820

sw.bb740:                                         ; preds = %if.end739
  call void @llvm.dbg.declare(metadata double** %inverse741, metadata !1821, metadata !DIExpression()), !dbg !1824
  %call742 = call i8* @AcquireQuantumMemory(i64 6, i64 8) #7, !dbg !1825
  %443 = bitcast i8* %call742 to double*, !dbg !1826
  store double* %443, double** %inverse741, align 8, !dbg !1827
  %444 = load double*, double** %inverse741, align 8, !dbg !1828
  %cmp743 = icmp eq double* %444, null, !dbg !1830
  br i1 %cmp743, label %if.then745, label %if.end748, !dbg !1831

if.then745:                                       ; preds = %sw.bb740
  %445 = load double*, double** %coeff, align 8, !dbg !1832
  %446 = bitcast double* %445 to i8*, !dbg !1832
  %call746 = call i8* @RelinquishMagickMemory(i8* %446), !dbg !1834
  %447 = bitcast i8* %call746 to double*, !dbg !1835
  store double* %447, double** %coeff, align 8, !dbg !1836
  %448 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !1837
  %call747 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %448, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 2003, i32 400, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.15, i64 0, i64 0)), !dbg !1838
  store %struct._Image* null, %struct._Image** %retval, align 8, !dbg !1839
  br label %return, !dbg !1839

if.end748:                                        ; preds = %sw.bb740
  %449 = load double*, double** %coeff, align 8, !dbg !1840
  %450 = load double*, double** %inverse741, align 8, !dbg !1841
  call void @InvertAffineCoefficients(double* %449, double* %450), !dbg !1842
  %451 = load double*, double** %inverse741, align 8, !dbg !1843
  call void @CoefficientsToAffineArgs(double* %451), !dbg !1844
  %452 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !1845
  %call749 = call i64 (%struct._IO_FILE*, i8*, ...) @FormatLocaleFile(%struct._IO_FILE* %452, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.16, i64 0, i64 0)), !dbg !1846
  %453 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !1847
  %call750 = call i64 (%struct._IO_FILE*, i8*, ...) @FormatLocaleFile(%struct._IO_FILE* %453, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.17, i64 0, i64 0)), !dbg !1848
  store i64 0, i64* %i, align 8, !dbg !1849
  br label %for.cond751, !dbg !1851

for.cond751:                                      ; preds = %for.inc757, %if.end748
  %454 = load i64, i64* %i, align 8, !dbg !1852
  %cmp752 = icmp slt i64 %454, 5, !dbg !1854
  br i1 %cmp752, label %for.body754, label %for.end758, !dbg !1855

for.body754:                                      ; preds = %for.cond751
  %455 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !1856
  %456 = load double*, double** %inverse741, align 8, !dbg !1857
  %457 = load i64, i64* %i, align 8, !dbg !1858
  %arrayidx755 = getelementptr inbounds double, double* %456, i64 %457, !dbg !1857
  %458 = load double, double* %arrayidx755, align 8, !dbg !1857
  %call756 = call i64 (%struct._IO_FILE*, i8*, ...) @FormatLocaleFile(%struct._IO_FILE* %455, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.18, i64 0, i64 0), double %458), !dbg !1859
  br label %for.inc757, !dbg !1860

for.inc757:                                       ; preds = %for.body754
  %459 = load i64, i64* %i, align 8, !dbg !1861
  %inc = add nsw i64 %459, 1, !dbg !1861
  store i64 %inc, i64* %i, align 8, !dbg !1861
  br label %for.cond751, !dbg !1862, !llvm.loop !1863

for.end758:                                       ; preds = %for.cond751
  %460 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !1865
  %461 = load double*, double** %inverse741, align 8, !dbg !1866
  %arrayidx759 = getelementptr inbounds double, double* %461, i64 5, !dbg !1866
  %462 = load double, double* %arrayidx759, align 8, !dbg !1866
  %call760 = call i64 (%struct._IO_FILE*, i8*, ...) @FormatLocaleFile(%struct._IO_FILE* %460, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.19, i64 0, i64 0), double %462), !dbg !1867
  %463 = load double*, double** %inverse741, align 8, !dbg !1868
  %464 = bitcast double* %463 to i8*, !dbg !1868
  %call761 = call i8* @RelinquishMagickMemory(i8* %464), !dbg !1869
  %465 = bitcast i8* %call761 to double*, !dbg !1870
  store double* %465, double** %inverse741, align 8, !dbg !1871
  %466 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !1872
  %call762 = call i64 (%struct._IO_FILE*, i8*, ...) @FormatLocaleFile(%struct._IO_FILE* %466, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.20, i64 0, i64 0)), !dbg !1873
  %467 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !1874
  %arraydecay763 = getelementptr inbounds [4096 x i8], [4096 x i8]* %image_gen, i64 0, i64 0, !dbg !1875
  %call764 = call i64 (%struct._IO_FILE*, i8*, ...) @FormatLocaleFile(%struct._IO_FILE* %467, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay763), !dbg !1876
  %468 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !1877
  %call765 = call i64 (%struct._IO_FILE*, i8*, ...) @FormatLocaleFile(%struct._IO_FILE* %468, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.21, i64 0, i64 0)), !dbg !1878
  %469 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !1879
  %470 = load double*, double** %coeff, align 8, !dbg !1880
  %arrayidx766 = getelementptr inbounds double, double* %470, i64 0, !dbg !1880
  %471 = load double, double* %arrayidx766, align 8, !dbg !1880
  %472 = load double*, double** %coeff, align 8, !dbg !1881
  %arrayidx767 = getelementptr inbounds double, double* %472, i64 1, !dbg !1881
  %473 = load double, double* %arrayidx767, align 8, !dbg !1881
  %474 = load double*, double** %coeff, align 8, !dbg !1882
  %arrayidx768 = getelementptr inbounds double, double* %474, i64 2, !dbg !1882
  %475 = load double, double* %arrayidx768, align 8, !dbg !1882
  %call769 = call i64 (%struct._IO_FILE*, i8*, ...) @FormatLocaleFile(%struct._IO_FILE* %469, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.22, i64 0, i64 0), double %471, double %473, double %475), !dbg !1883
  %476 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !1884
  %477 = load double*, double** %coeff, align 8, !dbg !1885
  %arrayidx770 = getelementptr inbounds double, double* %477, i64 3, !dbg !1885
  %478 = load double, double* %arrayidx770, align 8, !dbg !1885
  %479 = load double*, double** %coeff, align 8, !dbg !1886
  %arrayidx771 = getelementptr inbounds double, double* %479, i64 4, !dbg !1886
  %480 = load double, double* %arrayidx771, align 8, !dbg !1886
  %481 = load double*, double** %coeff, align 8, !dbg !1887
  %arrayidx772 = getelementptr inbounds double, double* %481, i64 5, !dbg !1887
  %482 = load double, double* %arrayidx772, align 8, !dbg !1887
  %call773 = call i64 (%struct._IO_FILE*, i8*, ...) @FormatLocaleFile(%struct._IO_FILE* %476, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.23, i64 0, i64 0), double %478, double %480, double %482), !dbg !1888
  %483 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !1889
  %484 = load i8*, i8** %lookup, align 8, !dbg !1890
  %call774 = call i64 (%struct._IO_FILE*, i8*, ...) @FormatLocaleFile(%struct._IO_FILE* %483, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.24, i64 0, i64 0), i8* %484), !dbg !1891
  br label %sw.epilog1139, !dbg !1892

sw.bb775:                                         ; preds = %if.end739
  call void @llvm.dbg.declare(metadata double** %inverse776, metadata !1893, metadata !DIExpression()), !dbg !1895
  %call777 = call i8* @AcquireQuantumMemory(i64 8, i64 8) #7, !dbg !1896
  %485 = bitcast i8* %call777 to double*, !dbg !1897
  store double* %485, double** %inverse776, align 8, !dbg !1898
  %486 = load double*, double** %inverse776, align 8, !dbg !1899
  %cmp778 = icmp eq double* %486, null, !dbg !1901
  br i1 %cmp778, label %if.then780, label %if.end783, !dbg !1902

if.then780:                                       ; preds = %sw.bb775
  %487 = load double*, double** %coeff, align 8, !dbg !1903
  %488 = bitcast double* %487 to i8*, !dbg !1903
  %call781 = call i8* @RelinquishMagickMemory(i8* %488), !dbg !1905
  %489 = bitcast i8* %call781 to double*, !dbg !1906
  store double* %489, double** %coeff, align 8, !dbg !1907
  %490 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !1908
  %call782 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %490, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 2036, i32 400, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.25, i64 0, i64 0)), !dbg !1909
  store %struct._Image* null, %struct._Image** %retval, align 8, !dbg !1910
  br label %return, !dbg !1910

if.end783:                                        ; preds = %sw.bb775
  %491 = load double*, double** %coeff, align 8, !dbg !1911
  %492 = load double*, double** %inverse776, align 8, !dbg !1912
  call void @InvertPerspectiveCoefficients(double* %491, double* %492), !dbg !1913
  %493 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !1914
  %call784 = call i64 (%struct._IO_FILE*, i8*, ...) @FormatLocaleFile(%struct._IO_FILE* %493, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.26, i64 0, i64 0)), !dbg !1915
  %494 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !1916
  %call785 = call i64 (%struct._IO_FILE*, i8*, ...) @FormatLocaleFile(%struct._IO_FILE* %494, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.27, i64 0, i64 0)), !dbg !1917
  store i64 0, i64* %i, align 8, !dbg !1918
  br label %for.cond786, !dbg !1920

for.cond786:                                      ; preds = %for.inc792, %if.end783
  %495 = load i64, i64* %i, align 8, !dbg !1921
  %cmp787 = icmp slt i64 %495, 4, !dbg !1923
  br i1 %cmp787, label %for.body789, label %for.end794, !dbg !1924

for.body789:                                      ; preds = %for.cond786
  %496 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !1925
  %497 = load double*, double** %inverse776, align 8, !dbg !1926
  %498 = load i64, i64* %i, align 8, !dbg !1927
  %arrayidx790 = getelementptr inbounds double, double* %497, i64 %498, !dbg !1926
  %499 = load double, double* %arrayidx790, align 8, !dbg !1926
  %call791 = call i64 (%struct._IO_FILE*, i8*, ...) @FormatLocaleFile(%struct._IO_FILE* %496, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.28, i64 0, i64 0), double %499), !dbg !1928
  br label %for.inc792, !dbg !1929

for.inc792:                                       ; preds = %for.body789
  %500 = load i64, i64* %i, align 8, !dbg !1930
  %inc793 = add nsw i64 %500, 1, !dbg !1930
  store i64 %inc793, i64* %i, align 8, !dbg !1930
  br label %for.cond786, !dbg !1931, !llvm.loop !1932

for.end794:                                       ; preds = %for.cond786
  %501 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !1934
  %call795 = call i64 (%struct._IO_FILE*, i8*, ...) @FormatLocaleFile(%struct._IO_FILE* %501, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.29, i64 0, i64 0)), !dbg !1935
  br label %for.cond796, !dbg !1936

for.cond796:                                      ; preds = %for.inc802, %for.end794
  %502 = load i64, i64* %i, align 8, !dbg !1937
  %cmp797 = icmp slt i64 %502, 7, !dbg !1940
  br i1 %cmp797, label %for.body799, label %for.end804, !dbg !1941

for.body799:                                      ; preds = %for.cond796
  %503 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !1942
  %504 = load double*, double** %inverse776, align 8, !dbg !1943
  %505 = load i64, i64* %i, align 8, !dbg !1944
  %arrayidx800 = getelementptr inbounds double, double* %504, i64 %505, !dbg !1943
  %506 = load double, double* %arrayidx800, align 8, !dbg !1943
  %call801 = call i64 (%struct._IO_FILE*, i8*, ...) @FormatLocaleFile(%struct._IO_FILE* %503, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.28, i64 0, i64 0), double %506), !dbg !1945
  br label %for.inc802, !dbg !1946

for.inc802:                                       ; preds = %for.body799
  %507 = load i64, i64* %i, align 8, !dbg !1947
  %inc803 = add nsw i64 %507, 1, !dbg !1947
  store i64 %inc803, i64* %i, align 8, !dbg !1947
  br label %for.cond796, !dbg !1948, !llvm.loop !1949

for.end804:                                       ; preds = %for.cond796
  %508 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !1951
  %509 = load double*, double** %inverse776, align 8, !dbg !1952
  %arrayidx805 = getelementptr inbounds double, double* %509, i64 7, !dbg !1952
  %510 = load double, double* %arrayidx805, align 8, !dbg !1952
  %call806 = call i64 (%struct._IO_FILE*, i8*, ...) @FormatLocaleFile(%struct._IO_FILE* %508, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.19, i64 0, i64 0), double %510), !dbg !1953
  %511 = load double*, double** %inverse776, align 8, !dbg !1954
  %512 = bitcast double* %511 to i8*, !dbg !1954
  %call807 = call i8* @RelinquishMagickMemory(i8* %512), !dbg !1955
  %513 = bitcast i8* %call807 to double*, !dbg !1956
  store double* %513, double** %inverse776, align 8, !dbg !1957
  %514 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !1958
  %call808 = call i64 (%struct._IO_FILE*, i8*, ...) @FormatLocaleFile(%struct._IO_FILE* %514, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.30, i64 0, i64 0)), !dbg !1959
  %515 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !1960
  %arraydecay809 = getelementptr inbounds [4096 x i8], [4096 x i8]* %image_gen, i64 0, i64 0, !dbg !1961
  %call810 = call i64 (%struct._IO_FILE*, i8*, ...) @FormatLocaleFile(%struct._IO_FILE* %515, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay809), !dbg !1962
  %516 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !1963
  %call811 = call i64 (%struct._IO_FILE*, i8*, ...) @FormatLocaleFile(%struct._IO_FILE* %516, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.21, i64 0, i64 0)), !dbg !1964
  %517 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !1965
  %518 = load double*, double** %coeff, align 8, !dbg !1966
  %arrayidx812 = getelementptr inbounds double, double* %518, i64 6, !dbg !1966
  %519 = load double, double* %arrayidx812, align 8, !dbg !1966
  %520 = load double*, double** %coeff, align 8, !dbg !1967
  %arrayidx813 = getelementptr inbounds double, double* %520, i64 7, !dbg !1967
  %521 = load double, double* %arrayidx813, align 8, !dbg !1967
  %call814 = call i64 (%struct._IO_FILE*, i8*, ...) @FormatLocaleFile(%struct._IO_FILE* %517, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.31, i64 0, i64 0), double %519, double %521), !dbg !1968
  %522 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !1969
  %523 = load double*, double** %coeff, align 8, !dbg !1970
  %arrayidx815 = getelementptr inbounds double, double* %523, i64 0, !dbg !1970
  %524 = load double, double* %arrayidx815, align 8, !dbg !1970
  %525 = load double*, double** %coeff, align 8, !dbg !1971
  %arrayidx816 = getelementptr inbounds double, double* %525, i64 1, !dbg !1971
  %526 = load double, double* %arrayidx816, align 8, !dbg !1971
  %527 = load double*, double** %coeff, align 8, !dbg !1972
  %arrayidx817 = getelementptr inbounds double, double* %527, i64 2, !dbg !1972
  %528 = load double, double* %arrayidx817, align 8, !dbg !1972
  %call818 = call i64 (%struct._IO_FILE*, i8*, ...) @FormatLocaleFile(%struct._IO_FILE* %522, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.32, i64 0, i64 0), double %524, double %526, double %528), !dbg !1973
  %529 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !1974
  %530 = load double*, double** %coeff, align 8, !dbg !1975
  %arrayidx819 = getelementptr inbounds double, double* %530, i64 3, !dbg !1975
  %531 = load double, double* %arrayidx819, align 8, !dbg !1975
  %532 = load double*, double** %coeff, align 8, !dbg !1976
  %arrayidx820 = getelementptr inbounds double, double* %532, i64 4, !dbg !1976
  %533 = load double, double* %arrayidx820, align 8, !dbg !1976
  %534 = load double*, double** %coeff, align 8, !dbg !1977
  %arrayidx821 = getelementptr inbounds double, double* %534, i64 5, !dbg !1977
  %535 = load double, double* %arrayidx821, align 8, !dbg !1977
  %call822 = call i64 (%struct._IO_FILE*, i8*, ...) @FormatLocaleFile(%struct._IO_FILE* %529, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.33, i64 0, i64 0), double %531, double %533, double %535), !dbg !1978
  %536 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !1979
  %537 = load double*, double** %coeff, align 8, !dbg !1980
  %arrayidx823 = getelementptr inbounds double, double* %537, i64 8, !dbg !1980
  %538 = load double, double* %arrayidx823, align 8, !dbg !1980
  %cmp824 = fcmp olt double %538, 0.000000e+00, !dbg !1981
  %539 = zext i1 %cmp824 to i64, !dbg !1980
  %cond = select i1 %cmp824, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.35, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.36, i64 0, i64 0), !dbg !1980
  %540 = load i8*, i8** %lookup, align 8, !dbg !1982
  %call826 = call i64 (%struct._IO_FILE*, i8*, ...) @FormatLocaleFile(%struct._IO_FILE* %536, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.34, i64 0, i64 0), i8* %cond, i8* %540), !dbg !1983
  br label %sw.epilog1139, !dbg !1984

sw.bb827:                                         ; preds = %if.end739
  %541 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !1985
  %call828 = call i64 (%struct._IO_FILE*, i8*, ...) @FormatLocaleFile(%struct._IO_FILE* %541, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.37, i64 0, i64 0)), !dbg !1986
  %542 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !1987
  %arraydecay829 = getelementptr inbounds [4096 x i8], [4096 x i8]* %image_gen, i64 0, i64 0, !dbg !1988
  %call830 = call i64 (%struct._IO_FILE*, i8*, ...) @FormatLocaleFile(%struct._IO_FILE* %542, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay829), !dbg !1989
  %543 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !1990
  %544 = load double*, double** %coeff, align 8, !dbg !1991
  %arrayidx831 = getelementptr inbounds double, double* %544, i64 0, !dbg !1991
  %545 = load double, double* %arrayidx831, align 8, !dbg !1991
  %546 = load double*, double** %coeff, align 8, !dbg !1992
  %arrayidx832 = getelementptr inbounds double, double* %546, i64 1, !dbg !1992
  %547 = load double, double* %arrayidx832, align 8, !dbg !1992
  %548 = load double*, double** %coeff, align 8, !dbg !1993
  %arrayidx833 = getelementptr inbounds double, double* %548, i64 2, !dbg !1993
  %549 = load double, double* %arrayidx833, align 8, !dbg !1993
  %550 = load double*, double** %coeff, align 8, !dbg !1994
  %arrayidx834 = getelementptr inbounds double, double* %550, i64 3, !dbg !1994
  %551 = load double, double* %arrayidx834, align 8, !dbg !1994
  %call835 = call i64 (%struct._IO_FILE*, i8*, ...) @FormatLocaleFile(%struct._IO_FILE* %543, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.38, i64 0, i64 0), double %545, double %547, double %549, double %551), !dbg !1995
  %552 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !1996
  %553 = load double*, double** %coeff, align 8, !dbg !1997
  %arrayidx836 = getelementptr inbounds double, double* %553, i64 4, !dbg !1997
  %554 = load double, double* %arrayidx836, align 8, !dbg !1997
  %555 = load double*, double** %coeff, align 8, !dbg !1998
  %arrayidx837 = getelementptr inbounds double, double* %555, i64 5, !dbg !1998
  %556 = load double, double* %arrayidx837, align 8, !dbg !1998
  %557 = load double*, double** %coeff, align 8, !dbg !1999
  %arrayidx838 = getelementptr inbounds double, double* %557, i64 6, !dbg !1999
  %558 = load double, double* %arrayidx838, align 8, !dbg !1999
  %559 = load double*, double** %coeff, align 8, !dbg !2000
  %arrayidx839 = getelementptr inbounds double, double* %559, i64 7, !dbg !2000
  %560 = load double, double* %arrayidx839, align 8, !dbg !2000
  %call840 = call i64 (%struct._IO_FILE*, i8*, ...) @FormatLocaleFile(%struct._IO_FILE* %552, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.39, i64 0, i64 0), double %554, double %556, double %558, double %560), !dbg !2001
  %561 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2002
  %call841 = call i64 (%struct._IO_FILE*, i8*, ...) @FormatLocaleFile(%struct._IO_FILE* %561, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.40, i64 0, i64 0)), !dbg !2003
  %562 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2004
  %arraydecay842 = getelementptr inbounds [4096 x i8], [4096 x i8]* %image_gen, i64 0, i64 0, !dbg !2005
  %call843 = call i64 (%struct._IO_FILE*, i8*, ...) @FormatLocaleFile(%struct._IO_FILE* %562, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay842), !dbg !2006
  %563 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2007
  %564 = load double*, double** %coeff, align 8, !dbg !2008
  %arrayidx844 = getelementptr inbounds double, double* %564, i64 3, !dbg !2008
  %565 = load double, double* %arrayidx844, align 8, !dbg !2008
  %sub845 = fsub double 5.000000e-01, %565, !dbg !2009
  %566 = load double*, double** %coeff, align 8, !dbg !2010
  %arrayidx846 = getelementptr inbounds double, double* %566, i64 7, !dbg !2010
  %567 = load double, double* %arrayidx846, align 8, !dbg !2010
  %sub847 = fsub double 5.000000e-01, %567, !dbg !2011
  %call848 = call i64 (%struct._IO_FILE*, i8*, ...) @FormatLocaleFile(%struct._IO_FILE* %563, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.41, i64 0, i64 0), double %sub845, double %sub847), !dbg !2012
  %568 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2013
  %569 = load double*, double** %coeff, align 8, !dbg !2014
  %arrayidx849 = getelementptr inbounds double, double* %569, i64 6, !dbg !2014
  %570 = load double, double* %arrayidx849, align 8, !dbg !2014
  %571 = load double*, double** %coeff, align 8, !dbg !2015
  %arrayidx850 = getelementptr inbounds double, double* %571, i64 2, !dbg !2015
  %572 = load double, double* %arrayidx850, align 8, !dbg !2015
  %fneg = fneg double %572, !dbg !2016
  %573 = load double*, double** %coeff, align 8, !dbg !2017
  %arrayidx851 = getelementptr inbounds double, double* %573, i64 8, !dbg !2017
  %574 = load double, double* %arrayidx851, align 8, !dbg !2017
  %call852 = call i64 (%struct._IO_FILE*, i8*, ...) @FormatLocaleFile(%struct._IO_FILE* %568, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.42, i64 0, i64 0), double %570, double %fneg, double %574), !dbg !2018
  %575 = load double*, double** %coeff, align 8, !dbg !2019
  %arrayidx853 = getelementptr inbounds double, double* %575, i64 9, !dbg !2019
  %576 = load double, double* %arrayidx853, align 8, !dbg !2019
  %cmp854 = fcmp une double %576, 0.000000e+00, !dbg !2021
  br i1 %cmp854, label %if.then856, label %if.else865, !dbg !2022

if.then856:                                       ; preds = %sw.bb827
  %577 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2023
  %578 = load double*, double** %coeff, align 8, !dbg !2025
  %arrayidx857 = getelementptr inbounds double, double* %578, i64 9, !dbg !2025
  %579 = load double, double* %arrayidx857, align 8, !dbg !2025
  %mul858 = fmul double -2.000000e+00, %579, !dbg !2026
  %580 = load double*, double** %coeff, align 8, !dbg !2027
  %arrayidx859 = getelementptr inbounds double, double* %580, i64 4, !dbg !2027
  %581 = load double, double* %arrayidx859, align 8, !dbg !2027
  %582 = load double*, double** %coeff, align 8, !dbg !2028
  %arrayidx860 = getelementptr inbounds double, double* %582, i64 0, !dbg !2028
  %583 = load double, double* %arrayidx860, align 8, !dbg !2028
  %fneg861 = fneg double %583, !dbg !2029
  %call862 = call i64 (%struct._IO_FILE*, i8*, ...) @FormatLocaleFile(%struct._IO_FILE* %577, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.43, i64 0, i64 0), double %mul858, double %581, double %fneg861), !dbg !2030
  %584 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2031
  %585 = load double*, double** %coeff, align 8, !dbg !2032
  %arrayidx863 = getelementptr inbounds double, double* %585, i64 9, !dbg !2032
  %586 = load double, double* %arrayidx863, align 8, !dbg !2032
  %call864 = call i64 (%struct._IO_FILE*, i8*, ...) @FormatLocaleFile(%struct._IO_FILE* %584, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.44, i64 0, i64 0), double %586), !dbg !2033
  br label %if.end870, !dbg !2034

if.else865:                                       ; preds = %sw.bb827
  %587 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2035
  %588 = load double*, double** %coeff, align 8, !dbg !2036
  %arrayidx866 = getelementptr inbounds double, double* %588, i64 4, !dbg !2036
  %589 = load double, double* %arrayidx866, align 8, !dbg !2036
  %fneg867 = fneg double %589, !dbg !2037
  %590 = load double*, double** %coeff, align 8, !dbg !2038
  %arrayidx868 = getelementptr inbounds double, double* %590, i64 0, !dbg !2038
  %591 = load double, double* %arrayidx868, align 8, !dbg !2038
  %call869 = call i64 (%struct._IO_FILE*, i8*, ...) @FormatLocaleFile(%struct._IO_FILE* %587, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.45, i64 0, i64 0), double %fneg867, double %591), !dbg !2039
  br label %if.end870

if.end870:                                        ; preds = %if.else865, %if.then856
  %592 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2040
  %593 = load double*, double** %coeff, align 8, !dbg !2041
  %arrayidx871 = getelementptr inbounds double, double* %593, i64 1, !dbg !2041
  %594 = load double, double* %arrayidx871, align 8, !dbg !2041
  %fneg872 = fneg double %594, !dbg !2042
  %595 = load double*, double** %coeff, align 8, !dbg !2043
  %arrayidx873 = getelementptr inbounds double, double* %595, i64 0, !dbg !2043
  %596 = load double, double* %arrayidx873, align 8, !dbg !2043
  %597 = load double*, double** %coeff, align 8, !dbg !2044
  %arrayidx874 = getelementptr inbounds double, double* %597, i64 2, !dbg !2044
  %598 = load double, double* %arrayidx874, align 8, !dbg !2044
  %call875 = call i64 (%struct._IO_FILE*, i8*, ...) @FormatLocaleFile(%struct._IO_FILE* %592, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.46, i64 0, i64 0), double %fneg872, double %596, double %598), !dbg !2045
  %599 = load double*, double** %coeff, align 8, !dbg !2046
  %arrayidx876 = getelementptr inbounds double, double* %599, i64 9, !dbg !2046
  %600 = load double, double* %arrayidx876, align 8, !dbg !2046
  %cmp877 = fcmp une double %600, 0.000000e+00, !dbg !2048
  br i1 %cmp877, label %if.then879, label %if.else881, !dbg !2049

if.then879:                                       ; preds = %if.end870
  %601 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2050
  %602 = load i8*, i8** %lookup, align 8, !dbg !2051
  %call880 = call i64 (%struct._IO_FILE*, i8*, ...) @FormatLocaleFile(%struct._IO_FILE* %601, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.47, i64 0, i64 0), i8* %602), !dbg !2052
  br label %if.end883, !dbg !2053

if.else881:                                       ; preds = %if.end870
  %603 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2054
  %604 = load i8*, i8** %lookup, align 8, !dbg !2055
  %call882 = call i64 (%struct._IO_FILE*, i8*, ...) @FormatLocaleFile(%struct._IO_FILE* %603, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.24, i64 0, i64 0), i8* %604), !dbg !2056
  br label %if.end883

if.end883:                                        ; preds = %if.else881, %if.then879
  br label %sw.epilog1139, !dbg !2057

sw.bb884:                                         ; preds = %if.end739
  %605 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2058
  %call885 = call i64 (%struct._IO_FILE*, i8*, ...) @FormatLocaleFile(%struct._IO_FILE* %605, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.48, i64 0, i64 0)), !dbg !2059
  %606 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2060
  %arraydecay886 = getelementptr inbounds [4096 x i8], [4096 x i8]* %image_gen, i64 0, i64 0, !dbg !2061
  %call887 = call i64 (%struct._IO_FILE*, i8*, ...) @FormatLocaleFile(%struct._IO_FILE* %606, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay886), !dbg !2062
  %607 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2063
  %call888 = call i64 (%struct._IO_FILE*, i8*, ...) @FormatLocaleFile(%struct._IO_FILE* %607, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.21, i64 0, i64 0)), !dbg !2064
  %608 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2065
  %609 = load double*, double** %coeff, align 8, !dbg !2066
  %arrayidx889 = getelementptr inbounds double, double* %609, i64 0, !dbg !2066
  %610 = load double, double* %arrayidx889, align 8, !dbg !2066
  %611 = load double*, double** %coeff, align 8, !dbg !2067
  %arrayidx890 = getelementptr inbounds double, double* %611, i64 1, !dbg !2067
  %612 = load double, double* %arrayidx890, align 8, !dbg !2067
  %613 = load double*, double** %coeff, align 8, !dbg !2068
  %arrayidx891 = getelementptr inbounds double, double* %613, i64 2, !dbg !2068
  %614 = load double, double* %arrayidx891, align 8, !dbg !2068
  %615 = load double*, double** %coeff, align 8, !dbg !2069
  %arrayidx892 = getelementptr inbounds double, double* %615, i64 3, !dbg !2069
  %616 = load double, double* %arrayidx892, align 8, !dbg !2069
  %call893 = call i64 (%struct._IO_FILE*, i8*, ...) @FormatLocaleFile(%struct._IO_FILE* %608, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.49, i64 0, i64 0), double %610, double %612, double %614, double %616), !dbg !2070
  %617 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2071
  %618 = load double*, double** %coeff, align 8, !dbg !2072
  %arrayidx894 = getelementptr inbounds double, double* %618, i64 4, !dbg !2072
  %619 = load double, double* %arrayidx894, align 8, !dbg !2072
  %620 = load double*, double** %coeff, align 8, !dbg !2073
  %arrayidx895 = getelementptr inbounds double, double* %620, i64 5, !dbg !2073
  %621 = load double, double* %arrayidx895, align 8, !dbg !2073
  %622 = load double*, double** %coeff, align 8, !dbg !2074
  %arrayidx896 = getelementptr inbounds double, double* %622, i64 6, !dbg !2074
  %623 = load double, double* %arrayidx896, align 8, !dbg !2074
  %624 = load double*, double** %coeff, align 8, !dbg !2075
  %arrayidx897 = getelementptr inbounds double, double* %624, i64 7, !dbg !2075
  %625 = load double, double* %arrayidx897, align 8, !dbg !2075
  %call898 = call i64 (%struct._IO_FILE*, i8*, ...) @FormatLocaleFile(%struct._IO_FILE* %617, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.50, i64 0, i64 0), double %619, double %621, double %623, double %625), !dbg !2076
  %626 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2077
  %627 = load i8*, i8** %lookup, align 8, !dbg !2078
  %call899 = call i64 (%struct._IO_FILE*, i8*, ...) @FormatLocaleFile(%struct._IO_FILE* %626, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.24, i64 0, i64 0), i8* %627), !dbg !2079
  br label %sw.epilog1139, !dbg !2080

sw.bb900:                                         ; preds = %if.end739
  call void @llvm.dbg.declare(metadata i64* %nterms, metadata !2081, metadata !DIExpression()), !dbg !2083
  %628 = load double*, double** %coeff, align 8, !dbg !2084
  %arrayidx901 = getelementptr inbounds double, double* %628, i64 1, !dbg !2084
  %629 = load double, double* %arrayidx901, align 8, !dbg !2084
  %conv902 = fptoui double %629 to i64, !dbg !2085
  store i64 %conv902, i64* %nterms, align 8, !dbg !2083
  %630 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2086
  %631 = load double*, double** %coeff, align 8, !dbg !2087
  %arrayidx903 = getelementptr inbounds double, double* %631, i64 0, !dbg !2087
  %632 = load double, double* %arrayidx903, align 8, !dbg !2087
  %633 = load i64, i64* %nterms, align 8, !dbg !2088
  %call904 = call i64 (%struct._IO_FILE*, i8*, ...) @FormatLocaleFile(%struct._IO_FILE* %630, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.51, i64 0, i64 0), double %632, i64 %633), !dbg !2089
  %634 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2090
  %arraydecay905 = getelementptr inbounds [4096 x i8], [4096 x i8]* %image_gen, i64 0, i64 0, !dbg !2091
  %call906 = call i64 (%struct._IO_FILE*, i8*, ...) @FormatLocaleFile(%struct._IO_FILE* %634, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay905), !dbg !2092
  %635 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2093
  %call907 = call i64 (%struct._IO_FILE*, i8*, ...) @FormatLocaleFile(%struct._IO_FILE* %635, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.21, i64 0, i64 0)), !dbg !2094
  %636 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2095
  %call908 = call i64 (%struct._IO_FILE*, i8*, ...) @FormatLocaleFile(%struct._IO_FILE* %636, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.52, i64 0, i64 0)), !dbg !2096
  store i64 0, i64* %i, align 8, !dbg !2097
  br label %for.cond909, !dbg !2099

for.cond909:                                      ; preds = %for.inc924, %sw.bb900
  %637 = load i64, i64* %i, align 8, !dbg !2100
  %638 = load i64, i64* %nterms, align 8, !dbg !2102
  %cmp910 = icmp slt i64 %637, %638, !dbg !2103
  br i1 %cmp910, label %for.body912, label %for.end926, !dbg !2104

for.body912:                                      ; preds = %for.cond909
  %639 = load i64, i64* %i, align 8, !dbg !2105
  %cmp913 = icmp ne i64 %639, 0, !dbg !2108
  br i1 %cmp913, label %land.lhs.true, label %if.end919, !dbg !2109

land.lhs.true:                                    ; preds = %for.body912
  %640 = load i64, i64* %i, align 8, !dbg !2110
  %rem = srem i64 %640, 4, !dbg !2111
  %cmp915 = icmp eq i64 %rem, 0, !dbg !2112
  br i1 %cmp915, label %if.then917, label %if.end919, !dbg !2113

if.then917:                                       ; preds = %land.lhs.true
  %641 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2114
  %call918 = call i64 (%struct._IO_FILE*, i8*, ...) @FormatLocaleFile(%struct._IO_FILE* %641, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.53, i64 0, i64 0)), !dbg !2115
  br label %if.end919, !dbg !2116

if.end919:                                        ; preds = %if.then917, %land.lhs.true, %for.body912
  %642 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2117
  %643 = load double*, double** %coeff, align 8, !dbg !2118
  %644 = load i64, i64* %i, align 8, !dbg !2119
  %add920 = add nsw i64 2, %644, !dbg !2120
  %arrayidx921 = getelementptr inbounds double, double* %643, i64 %add920, !dbg !2118
  %645 = load double, double* %arrayidx921, align 8, !dbg !2118
  %646 = load i64, i64* %i, align 8, !dbg !2121
  %call922 = call i8* @poly_basis_str(i64 %646), !dbg !2122
  %call923 = call i64 (%struct._IO_FILE*, i8*, ...) @FormatLocaleFile(%struct._IO_FILE* %642, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.54, i64 0, i64 0), double %645, i8* %call922), !dbg !2123
  br label %for.inc924, !dbg !2124

for.inc924:                                       ; preds = %if.end919
  %647 = load i64, i64* %i, align 8, !dbg !2125
  %inc925 = add nsw i64 %647, 1, !dbg !2125
  store i64 %inc925, i64* %i, align 8, !dbg !2125
  br label %for.cond909, !dbg !2126, !llvm.loop !2127

for.end926:                                       ; preds = %for.cond909
  %648 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2129
  %call927 = call i64 (%struct._IO_FILE*, i8*, ...) @FormatLocaleFile(%struct._IO_FILE* %648, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.55, i64 0, i64 0)), !dbg !2130
  store i64 0, i64* %i, align 8, !dbg !2131
  br label %for.cond928, !dbg !2133

for.cond928:                                      ; preds = %for.inc946, %for.end926
  %649 = load i64, i64* %i, align 8, !dbg !2134
  %650 = load i64, i64* %nterms, align 8, !dbg !2136
  %cmp929 = icmp slt i64 %649, %650, !dbg !2137
  br i1 %cmp929, label %for.body931, label %for.end948, !dbg !2138

for.body931:                                      ; preds = %for.cond928
  %651 = load i64, i64* %i, align 8, !dbg !2139
  %cmp932 = icmp ne i64 %651, 0, !dbg !2142
  br i1 %cmp932, label %land.lhs.true934, label %if.end940, !dbg !2143

land.lhs.true934:                                 ; preds = %for.body931
  %652 = load i64, i64* %i, align 8, !dbg !2144
  %rem935 = srem i64 %652, 4, !dbg !2145
  %cmp936 = icmp eq i64 %rem935, 0, !dbg !2146
  br i1 %cmp936, label %if.then938, label %if.end940, !dbg !2147

if.then938:                                       ; preds = %land.lhs.true934
  %653 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2148
  %call939 = call i64 (%struct._IO_FILE*, i8*, ...) @FormatLocaleFile(%struct._IO_FILE* %653, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.53, i64 0, i64 0)), !dbg !2149
  br label %if.end940, !dbg !2150

if.end940:                                        ; preds = %if.then938, %land.lhs.true934, %for.body931
  %654 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2151
  %655 = load double*, double** %coeff, align 8, !dbg !2152
  %656 = load i64, i64* %i, align 8, !dbg !2153
  %add941 = add nsw i64 2, %656, !dbg !2154
  %657 = load i64, i64* %nterms, align 8, !dbg !2155
  %add942 = add i64 %add941, %657, !dbg !2156
  %arrayidx943 = getelementptr inbounds double, double* %655, i64 %add942, !dbg !2152
  %658 = load double, double* %arrayidx943, align 8, !dbg !2152
  %659 = load i64, i64* %i, align 8, !dbg !2157
  %call944 = call i8* @poly_basis_str(i64 %659), !dbg !2158
  %call945 = call i64 (%struct._IO_FILE*, i8*, ...) @FormatLocaleFile(%struct._IO_FILE* %654, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.54, i64 0, i64 0), double %658, i8* %call944), !dbg !2159
  br label %for.inc946, !dbg !2160

for.inc946:                                       ; preds = %if.end940
  %660 = load i64, i64* %i, align 8, !dbg !2161
  %inc947 = add nsw i64 %660, 1, !dbg !2161
  store i64 %inc947, i64* %i, align 8, !dbg !2161
  br label %for.cond928, !dbg !2162, !llvm.loop !2163

for.end948:                                       ; preds = %for.cond928
  %661 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2165
  %662 = load i8*, i8** %lookup, align 8, !dbg !2166
  %call949 = call i64 (%struct._IO_FILE*, i8*, ...) @FormatLocaleFile(%struct._IO_FILE* %661, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.56, i64 0, i64 0), i8* %662), !dbg !2167
  br label %sw.epilog1139, !dbg !2168

sw.bb950:                                         ; preds = %if.end739
  %663 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2169
  %call951 = call i64 (%struct._IO_FILE*, i8*, ...) @FormatLocaleFile(%struct._IO_FILE* %663, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.57, i64 0, i64 0)), !dbg !2171
  store i64 0, i64* %i, align 8, !dbg !2172
  br label %for.cond952, !dbg !2174

for.cond952:                                      ; preds = %for.inc959, %sw.bb950
  %664 = load i64, i64* %i, align 8, !dbg !2175
  %cmp953 = icmp slt i64 %664, 5, !dbg !2177
  br i1 %cmp953, label %for.body955, label %for.end961, !dbg !2178

for.body955:                                      ; preds = %for.cond952
  %665 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2179
  %666 = load i64, i64* %i, align 8, !dbg !2180
  %conv956 = sitofp i64 %666 to double, !dbg !2181
  %667 = load double*, double** %coeff, align 8, !dbg !2182
  %668 = load i64, i64* %i, align 8, !dbg !2183
  %arrayidx957 = getelementptr inbounds double, double* %667, i64 %668, !dbg !2182
  %669 = load double, double* %arrayidx957, align 8, !dbg !2182
  %call958 = call i64 (%struct._IO_FILE*, i8*, ...) @FormatLocaleFile(%struct._IO_FILE* %665, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.58, i64 0, i64 0), double %conv956, double %669), !dbg !2184
  br label %for.inc959, !dbg !2185

for.inc959:                                       ; preds = %for.body955
  %670 = load i64, i64* %i, align 8, !dbg !2186
  %inc960 = add nsw i64 %670, 1, !dbg !2186
  store i64 %inc960, i64* %i, align 8, !dbg !2186
  br label %for.cond952, !dbg !2187, !llvm.loop !2188

for.end961:                                       ; preds = %for.cond952
  %671 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2190
  %call962 = call i64 (%struct._IO_FILE*, i8*, ...) @FormatLocaleFile(%struct._IO_FILE* %671, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.59, i64 0, i64 0)), !dbg !2191
  %672 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2192
  %arraydecay963 = getelementptr inbounds [4096 x i8], [4096 x i8]* %image_gen, i64 0, i64 0, !dbg !2193
  %call964 = call i64 (%struct._IO_FILE*, i8*, ...) @FormatLocaleFile(%struct._IO_FILE* %672, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay963), !dbg !2194
  %673 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2195
  %call965 = call i64 (%struct._IO_FILE*, i8*, ...) @FormatLocaleFile(%struct._IO_FILE* %673, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.60, i64 0, i64 0)), !dbg !2196
  %674 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2197
  %675 = load double*, double** %coeff, align 8, !dbg !2198
  %arrayidx966 = getelementptr inbounds double, double* %675, i64 0, !dbg !2198
  %676 = load double, double* %arrayidx966, align 8, !dbg !2198
  %fneg967 = fneg double %676, !dbg !2199
  %call968 = call i64 (%struct._IO_FILE*, i8*, ...) @FormatLocaleFile(%struct._IO_FILE* %674, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.61, i64 0, i64 0), double %fneg967), !dbg !2200
  %677 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2201
  %call969 = call i64 (%struct._IO_FILE*, i8*, ...) @FormatLocaleFile(%struct._IO_FILE* %677, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.62, i64 0, i64 0)), !dbg !2202
  %678 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2203
  %679 = load double*, double** %coeff, align 8, !dbg !2204
  %arrayidx970 = getelementptr inbounds double, double* %679, i64 1, !dbg !2204
  %680 = load double, double* %arrayidx970, align 8, !dbg !2204
  %681 = load double*, double** %coeff, align 8, !dbg !2205
  %arrayidx971 = getelementptr inbounds double, double* %681, i64 4, !dbg !2205
  %682 = load double, double* %arrayidx971, align 8, !dbg !2205
  %call972 = call i64 (%struct._IO_FILE*, i8*, ...) @FormatLocaleFile(%struct._IO_FILE* %678, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.63, i64 0, i64 0), double %680, double %682), !dbg !2206
  %683 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2207
  %684 = load double*, double** %coeff, align 8, !dbg !2208
  %arrayidx973 = getelementptr inbounds double, double* %684, i64 2, !dbg !2208
  %685 = load double, double* %arrayidx973, align 8, !dbg !2208
  %686 = load double*, double** %coeff, align 8, !dbg !2209
  %arrayidx974 = getelementptr inbounds double, double* %686, i64 3, !dbg !2209
  %687 = load double, double* %arrayidx974, align 8, !dbg !2209
  %call975 = call i64 (%struct._IO_FILE*, i8*, ...) @FormatLocaleFile(%struct._IO_FILE* %683, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.64, i64 0, i64 0), double %685, double %687), !dbg !2210
  %688 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2211
  %call976 = call i64 (%struct._IO_FILE*, i8*, ...) @FormatLocaleFile(%struct._IO_FILE* %688, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.65, i64 0, i64 0)), !dbg !2212
  br label %sw.epilog1139, !dbg !2213

sw.bb977:                                         ; preds = %if.end739
  %689 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2214
  %call978 = call i64 (%struct._IO_FILE*, i8*, ...) @FormatLocaleFile(%struct._IO_FILE* %689, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.66, i64 0, i64 0)), !dbg !2216
  store i64 0, i64* %i, align 8, !dbg !2217
  br label %for.cond979, !dbg !2219

for.cond979:                                      ; preds = %for.inc986, %sw.bb977
  %690 = load i64, i64* %i, align 8, !dbg !2220
  %cmp980 = icmp slt i64 %690, 8, !dbg !2222
  br i1 %cmp980, label %for.body982, label %for.end988, !dbg !2223

for.body982:                                      ; preds = %for.cond979
  %691 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2224
  %692 = load i64, i64* %i, align 8, !dbg !2225
  %conv983 = sitofp i64 %692 to double, !dbg !2226
  %693 = load double*, double** %coeff, align 8, !dbg !2227
  %694 = load i64, i64* %i, align 8, !dbg !2228
  %arrayidx984 = getelementptr inbounds double, double* %693, i64 %694, !dbg !2227
  %695 = load double, double* %arrayidx984, align 8, !dbg !2227
  %call985 = call i64 (%struct._IO_FILE*, i8*, ...) @FormatLocaleFile(%struct._IO_FILE* %691, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.58, i64 0, i64 0), double %conv983, double %695), !dbg !2229
  br label %for.inc986, !dbg !2230

for.inc986:                                       ; preds = %for.body982
  %696 = load i64, i64* %i, align 8, !dbg !2231
  %inc987 = add nsw i64 %696, 1, !dbg !2231
  store i64 %inc987, i64* %i, align 8, !dbg !2231
  br label %for.cond979, !dbg !2232, !llvm.loop !2233

for.end988:                                       ; preds = %for.cond979
  %697 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2235
  %call989 = call i64 (%struct._IO_FILE*, i8*, ...) @FormatLocaleFile(%struct._IO_FILE* %697, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.67, i64 0, i64 0)), !dbg !2236
  %698 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2237
  %arraydecay990 = getelementptr inbounds [4096 x i8], [4096 x i8]* %image_gen, i64 0, i64 0, !dbg !2238
  %call991 = call i64 (%struct._IO_FILE*, i8*, ...) @FormatLocaleFile(%struct._IO_FILE* %698, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay990), !dbg !2239
  %699 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2240
  %700 = load double*, double** %coeff, align 8, !dbg !2241
  %arrayidx992 = getelementptr inbounds double, double* %700, i64 2, !dbg !2241
  %701 = load double, double* %arrayidx992, align 8, !dbg !2241
  %fneg993 = fneg double %701, !dbg !2242
  %702 = load double*, double** %coeff, align 8, !dbg !2243
  %arrayidx994 = getelementptr inbounds double, double* %702, i64 3, !dbg !2243
  %703 = load double, double* %arrayidx994, align 8, !dbg !2243
  %fneg995 = fneg double %703, !dbg !2244
  %call996 = call i64 (%struct._IO_FILE*, i8*, ...) @FormatLocaleFile(%struct._IO_FILE* %699, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.41, i64 0, i64 0), double %fneg993, double %fneg995), !dbg !2245
  %704 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2246
  %705 = load double*, double** %coeff, align 8, !dbg !2247
  %arrayidx997 = getelementptr inbounds double, double* %705, i64 4, !dbg !2247
  %706 = load double, double* %arrayidx997, align 8, !dbg !2247
  %707 = load double*, double** %coeff, align 8, !dbg !2248
  %arrayidx998 = getelementptr inbounds double, double* %707, i64 5, !dbg !2248
  %708 = load double, double* %arrayidx998, align 8, !dbg !2248
  %add999 = fadd double %706, %708, !dbg !2249
  %fneg1000 = fneg double %add999, !dbg !2250
  %div1001 = fdiv double %fneg1000, 2.000000e+00, !dbg !2251
  %call1002 = call i64 (%struct._IO_FILE*, i8*, ...) @FormatLocaleFile(%struct._IO_FILE* %704, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.68, i64 0, i64 0), double %div1001), !dbg !2252
  %709 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2253
  %call1003 = call i64 (%struct._IO_FILE*, i8*, ...) @FormatLocaleFile(%struct._IO_FILE* %709, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.62, i64 0, i64 0)), !dbg !2254
  %710 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2255
  %711 = load double*, double** %coeff, align 8, !dbg !2256
  %arrayidx1004 = getelementptr inbounds double, double* %711, i64 6, !dbg !2256
  %712 = load double, double* %arrayidx1004, align 8, !dbg !2256
  %call1005 = call i64 (%struct._IO_FILE*, i8*, ...) @FormatLocaleFile(%struct._IO_FILE* %710, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.69, i64 0, i64 0), double %712), !dbg !2257
  %713 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2258
  %714 = load double*, double** %coeff, align 8, !dbg !2259
  %arrayidx1006 = getelementptr inbounds double, double* %714, i64 1, !dbg !2259
  %715 = load double, double* %arrayidx1006, align 8, !dbg !2259
  %fneg1007 = fneg double %715, !dbg !2260
  %716 = load double*, double** %coeff, align 8, !dbg !2261
  %arrayidx1008 = getelementptr inbounds double, double* %716, i64 7, !dbg !2261
  %717 = load double, double* %arrayidx1008, align 8, !dbg !2261
  %call1009 = call i64 (%struct._IO_FILE*, i8*, ...) @FormatLocaleFile(%struct._IO_FILE* %713, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.70, i64 0, i64 0), double %fneg1007, double %717), !dbg !2262
  %718 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2263
  %call1010 = call i64 (%struct._IO_FILE*, i8*, ...) @FormatLocaleFile(%struct._IO_FILE* %718, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.65, i64 0, i64 0)), !dbg !2264
  br label %sw.epilog1139, !dbg !2265

sw.bb1011:                                        ; preds = %if.end739
  %719 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2266
  %call1012 = call i64 (%struct._IO_FILE*, i8*, ...) @FormatLocaleFile(%struct._IO_FILE* %719, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.71, i64 0, i64 0)), !dbg !2268
  store i64 0, i64* %i, align 8, !dbg !2269
  br label %for.cond1013, !dbg !2271

for.cond1013:                                     ; preds = %for.inc1020, %sw.bb1011
  %720 = load i64, i64* %i, align 8, !dbg !2272
  %cmp1014 = icmp slt i64 %720, 8, !dbg !2274
  br i1 %cmp1014, label %for.body1016, label %for.end1022, !dbg !2275

for.body1016:                                     ; preds = %for.cond1013
  %721 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2276
  %722 = load i64, i64* %i, align 8, !dbg !2277
  %conv1017 = sitofp i64 %722 to double, !dbg !2278
  %723 = load double*, double** %coeff, align 8, !dbg !2279
  %724 = load i64, i64* %i, align 8, !dbg !2280
  %arrayidx1018 = getelementptr inbounds double, double* %723, i64 %724, !dbg !2279
  %725 = load double, double* %arrayidx1018, align 8, !dbg !2279
  %call1019 = call i64 (%struct._IO_FILE*, i8*, ...) @FormatLocaleFile(%struct._IO_FILE* %721, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.58, i64 0, i64 0), double %conv1017, double %725), !dbg !2281
  br label %for.inc1020, !dbg !2282

for.inc1020:                                      ; preds = %for.body1016
  %726 = load i64, i64* %i, align 8, !dbg !2283
  %inc1021 = add nsw i64 %726, 1, !dbg !2283
  store i64 %inc1021, i64* %i, align 8, !dbg !2283
  br label %for.cond1013, !dbg !2284, !llvm.loop !2285

for.end1022:                                      ; preds = %for.cond1013
  %727 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2287
  %call1023 = call i64 (%struct._IO_FILE*, i8*, ...) @FormatLocaleFile(%struct._IO_FILE* %727, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.72, i64 0, i64 0)), !dbg !2288
  %728 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2289
  %arraydecay1024 = getelementptr inbounds [4096 x i8], [4096 x i8]* %image_gen, i64 0, i64 0, !dbg !2290
  %call1025 = call i64 (%struct._IO_FILE*, i8*, ...) @FormatLocaleFile(%struct._IO_FILE* %728, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay1024), !dbg !2291
  %729 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2292
  %730 = load double*, double** %coeff, align 8, !dbg !2293
  %arrayidx1026 = getelementptr inbounds double, double* %730, i64 6, !dbg !2293
  %731 = load double, double* %arrayidx1026, align 8, !dbg !2293
  %732 = load double*, double** %coeff, align 8, !dbg !2294
  %arrayidx1027 = getelementptr inbounds double, double* %732, i64 4, !dbg !2294
  %733 = load double, double* %arrayidx1027, align 8, !dbg !2294
  %call1028 = call i64 (%struct._IO_FILE*, i8*, ...) @FormatLocaleFile(%struct._IO_FILE* %729, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.73, i64 0, i64 0), double %731, double %733), !dbg !2295
  %734 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2296
  %735 = load double*, double** %coeff, align 8, !dbg !2297
  %arrayidx1029 = getelementptr inbounds double, double* %735, i64 7, !dbg !2297
  %736 = load double, double* %arrayidx1029, align 8, !dbg !2297
  %737 = load double*, double** %coeff, align 8, !dbg !2298
  %arrayidx1030 = getelementptr inbounds double, double* %737, i64 1, !dbg !2298
  %738 = load double, double* %arrayidx1030, align 8, !dbg !2298
  %call1031 = call i64 (%struct._IO_FILE*, i8*, ...) @FormatLocaleFile(%struct._IO_FILE* %734, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.74, i64 0, i64 0), double %736, double %738), !dbg !2299
  %739 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2300
  %740 = load double*, double** %coeff, align 8, !dbg !2301
  %arrayidx1032 = getelementptr inbounds double, double* %740, i64 2, !dbg !2301
  %741 = load double, double* %arrayidx1032, align 8, !dbg !2301
  %call1033 = call i64 (%struct._IO_FILE*, i8*, ...) @FormatLocaleFile(%struct._IO_FILE* %739, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.75, i64 0, i64 0), double %741), !dbg !2302
  %742 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2303
  %743 = load double*, double** %coeff, align 8, !dbg !2304
  %arrayidx1034 = getelementptr inbounds double, double* %743, i64 3, !dbg !2304
  %744 = load double, double* %arrayidx1034, align 8, !dbg !2304
  %call1035 = call i64 (%struct._IO_FILE*, i8*, ...) @FormatLocaleFile(%struct._IO_FILE* %742, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.76, i64 0, i64 0), double %744), !dbg !2305
  %745 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2306
  %call1036 = call i64 (%struct._IO_FILE*, i8*, ...) @FormatLocaleFile(%struct._IO_FILE* %745, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.65, i64 0, i64 0)), !dbg !2307
  br label %sw.epilog1139, !dbg !2308

sw.bb1037:                                        ; preds = %if.end739
  %746 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2309
  %call1038 = call i64 (%struct._IO_FILE*, i8*, ...) @FormatLocaleFile(%struct._IO_FILE* %746, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.77, i64 0, i64 0)), !dbg !2311
  %747 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2312
  %748 = load double*, double** %coeff, align 8, !dbg !2313
  %arrayidx1039 = getelementptr inbounds double, double* %748, i64 1, !dbg !2313
  %749 = load double, double* %arrayidx1039, align 8, !dbg !2313
  %call1040 = call i64 (%struct._IO_FILE*, i8*, ...) @FormatLocaleFile(%struct._IO_FILE* %747, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.78, i64 0, i64 0), double %749), !dbg !2314
  %750 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2315
  %call1041 = call i64 (%struct._IO_FILE*, i8*, ...) @FormatLocaleFile(%struct._IO_FILE* %750, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.79, i64 0, i64 0)), !dbg !2316
  %751 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2317
  %arraydecay1042 = getelementptr inbounds [4096 x i8], [4096 x i8]* %image_gen, i64 0, i64 0, !dbg !2318
  %call1043 = call i64 (%struct._IO_FILE*, i8*, ...) @FormatLocaleFile(%struct._IO_FILE* %751, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay1042), !dbg !2319
  %752 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2320
  %753 = load double*, double** %coeff, align 8, !dbg !2321
  %arrayidx1044 = getelementptr inbounds double, double* %753, i64 4, !dbg !2321
  %754 = load double, double* %arrayidx1044, align 8, !dbg !2321
  %fneg1045 = fneg double %754, !dbg !2322
  %755 = load double*, double** %coeff, align 8, !dbg !2323
  %arrayidx1046 = getelementptr inbounds double, double* %755, i64 5, !dbg !2323
  %756 = load double, double* %arrayidx1046, align 8, !dbg !2323
  %fneg1047 = fneg double %756, !dbg !2324
  %call1048 = call i64 (%struct._IO_FILE*, i8*, ...) @FormatLocaleFile(%struct._IO_FILE* %752, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.80, i64 0, i64 0), double %fneg1045, double %fneg1047), !dbg !2325
  %757 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2326
  %758 = load double*, double** %coeff, align 8, !dbg !2327
  %arrayidx1049 = getelementptr inbounds double, double* %758, i64 1, !dbg !2327
  %759 = load double, double* %arrayidx1049, align 8, !dbg !2327
  %call1050 = call i64 (%struct._IO_FILE*, i8*, ...) @FormatLocaleFile(%struct._IO_FILE* %757, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.81, i64 0, i64 0), double %759), !dbg !2328
  %760 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2329
  %761 = load double*, double** %coeff, align 8, !dbg !2330
  %arrayidx1051 = getelementptr inbounds double, double* %761, i64 1, !dbg !2330
  %762 = load double, double* %arrayidx1051, align 8, !dbg !2330
  %763 = load double*, double** %coeff, align 8, !dbg !2331
  %arrayidx1052 = getelementptr inbounds double, double* %763, i64 2, !dbg !2331
  %764 = load double, double* %arrayidx1052, align 8, !dbg !2331
  %call1053 = call i64 (%struct._IO_FILE*, i8*, ...) @FormatLocaleFile(%struct._IO_FILE* %760, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.82, i64 0, i64 0), double %762, double %764), !dbg !2332
  %765 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2333
  %766 = load double*, double** %coeff, align 8, !dbg !2334
  %arrayidx1054 = getelementptr inbounds double, double* %766, i64 3, !dbg !2334
  %767 = load double, double* %arrayidx1054, align 8, !dbg !2334
  %call1055 = call i64 (%struct._IO_FILE*, i8*, ...) @FormatLocaleFile(%struct._IO_FILE* %765, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.83, i64 0, i64 0), double %767), !dbg !2335
  %768 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2336
  %769 = load i8*, i8** %lookup, align 8, !dbg !2337
  %call1056 = call i64 (%struct._IO_FILE*, i8*, ...) @FormatLocaleFile(%struct._IO_FILE* %768, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.24, i64 0, i64 0), i8* %769), !dbg !2338
  br label %sw.epilog1139, !dbg !2339

sw.bb1057:                                        ; preds = %if.end739
  %770 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2340
  %call1058 = call i64 (%struct._IO_FILE*, i8*, ...) @FormatLocaleFile(%struct._IO_FILE* %770, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.84, i64 0, i64 0)), !dbg !2342
  %771 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2343
  %772 = load double*, double** %coeff, align 8, !dbg !2344
  %arrayidx1059 = getelementptr inbounds double, double* %772, i64 1, !dbg !2344
  %773 = load double, double* %arrayidx1059, align 8, !dbg !2344
  %call1060 = call i64 (%struct._IO_FILE*, i8*, ...) @FormatLocaleFile(%struct._IO_FILE* %771, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.78, i64 0, i64 0), double %773), !dbg !2345
  %774 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2346
  %call1061 = call i64 (%struct._IO_FILE*, i8*, ...) @FormatLocaleFile(%struct._IO_FILE* %774, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.85, i64 0, i64 0)), !dbg !2347
  %775 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2348
  %arraydecay1062 = getelementptr inbounds [4096 x i8], [4096 x i8]* %image_gen, i64 0, i64 0, !dbg !2349
  %call1063 = call i64 (%struct._IO_FILE*, i8*, ...) @FormatLocaleFile(%struct._IO_FILE* %775, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay1062), !dbg !2350
  %776 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2351
  %777 = load double*, double** %coeff, align 8, !dbg !2352
  %arrayidx1064 = getelementptr inbounds double, double* %777, i64 4, !dbg !2352
  %778 = load double, double* %arrayidx1064, align 8, !dbg !2352
  %fneg1065 = fneg double %778, !dbg !2353
  %779 = load double*, double** %coeff, align 8, !dbg !2354
  %arrayidx1066 = getelementptr inbounds double, double* %779, i64 5, !dbg !2354
  %780 = load double, double* %arrayidx1066, align 8, !dbg !2354
  %fneg1067 = fneg double %780, !dbg !2355
  %call1068 = call i64 (%struct._IO_FILE*, i8*, ...) @FormatLocaleFile(%struct._IO_FILE* %776, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.80, i64 0, i64 0), double %fneg1065, double %fneg1067), !dbg !2356
  %781 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2357
  %782 = load double*, double** %coeff, align 8, !dbg !2358
  %arrayidx1069 = getelementptr inbounds double, double* %782, i64 1, !dbg !2358
  %783 = load double, double* %arrayidx1069, align 8, !dbg !2358
  %call1070 = call i64 (%struct._IO_FILE*, i8*, ...) @FormatLocaleFile(%struct._IO_FILE* %781, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.86, i64 0, i64 0), double %783), !dbg !2359
  %784 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2360
  %785 = load double*, double** %coeff, align 8, !dbg !2361
  %arrayidx1071 = getelementptr inbounds double, double* %785, i64 1, !dbg !2361
  %786 = load double, double* %arrayidx1071, align 8, !dbg !2361
  %787 = load double*, double** %coeff, align 8, !dbg !2362
  %arrayidx1072 = getelementptr inbounds double, double* %787, i64 2, !dbg !2362
  %788 = load double, double* %arrayidx1072, align 8, !dbg !2362
  %call1073 = call i64 (%struct._IO_FILE*, i8*, ...) @FormatLocaleFile(%struct._IO_FILE* %784, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.87, i64 0, i64 0), double %786, double %788), !dbg !2363
  %789 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2364
  %790 = load double*, double** %coeff, align 8, !dbg !2365
  %arrayidx1074 = getelementptr inbounds double, double* %790, i64 3, !dbg !2365
  %791 = load double, double* %arrayidx1074, align 8, !dbg !2365
  %call1075 = call i64 (%struct._IO_FILE*, i8*, ...) @FormatLocaleFile(%struct._IO_FILE* %789, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.88, i64 0, i64 0), double %791), !dbg !2366
  %792 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2367
  %793 = load i8*, i8** %lookup, align 8, !dbg !2368
  %call1076 = call i64 (%struct._IO_FILE*, i8*, ...) @FormatLocaleFile(%struct._IO_FILE* %792, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.24, i64 0, i64 0), i8* %793), !dbg !2369
  br label %sw.epilog1139, !dbg !2370

sw.bb1077:                                        ; preds = %if.end739, %if.end739
  call void @llvm.dbg.declare(metadata double* %xc, metadata !2371, metadata !DIExpression()), !dbg !2373
  call void @llvm.dbg.declare(metadata double* %yc, metadata !2374, metadata !DIExpression()), !dbg !2375
  %794 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2376
  %columns1078 = getelementptr inbounds %struct._Image, %struct._Image* %794, i32 0, i32 7, !dbg !2377
  %795 = load i64, i64* %columns1078, align 8, !dbg !2377
  %conv1079 = uitofp i64 %795 to double, !dbg !2378
  %sub1080 = fsub double %conv1079, 1.000000e+00, !dbg !2379
  %div1081 = fdiv double %sub1080, 2.000000e+00, !dbg !2380
  %796 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2381
  %page1082 = getelementptr inbounds %struct._Image, %struct._Image* %796, i32 0, i32 26, !dbg !2382
  %x1083 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %page1082, i32 0, i32 2, !dbg !2383
  %797 = load i64, i64* %x1083, align 8, !dbg !2383
  %conv1084 = sitofp i64 %797 to double, !dbg !2381
  %add1085 = fadd double %div1081, %conv1084, !dbg !2384
  store double %add1085, double* %xc, align 8, !dbg !2385
  %798 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2386
  %rows1086 = getelementptr inbounds %struct._Image, %struct._Image* %798, i32 0, i32 8, !dbg !2387
  %799 = load i64, i64* %rows1086, align 8, !dbg !2387
  %conv1087 = uitofp i64 %799 to double, !dbg !2388
  %sub1088 = fsub double %conv1087, 1.000000e+00, !dbg !2389
  %div1089 = fdiv double %sub1088, 2.000000e+00, !dbg !2390
  %800 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2391
  %page1090 = getelementptr inbounds %struct._Image, %struct._Image* %800, i32 0, i32 26, !dbg !2392
  %y1091 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %page1090, i32 0, i32 3, !dbg !2393
  %801 = load i64, i64* %y1091, align 8, !dbg !2393
  %conv1092 = sitofp i64 %801 to double, !dbg !2391
  %add1093 = fadd double %div1089, %conv1092, !dbg !2394
  store double %add1093, double* %yc, align 8, !dbg !2395
  %802 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2396
  %803 = load i32, i32* %method.addr, align 4, !dbg !2397
  %cmp1094 = icmp eq i32 %803, 14, !dbg !2398
  %804 = zext i1 %cmp1094 to i64, !dbg !2397
  %cond1096 = select i1 %cmp1094, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.90, i64 0, i64 0), !dbg !2397
  %call1097 = call i64 (%struct._IO_FILE*, i8*, ...) @FormatLocaleFile(%struct._IO_FILE* %802, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.89, i64 0, i64 0), i8* %cond1096), !dbg !2399
  %805 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2400
  %arraydecay1098 = getelementptr inbounds [4096 x i8], [4096 x i8]* %image_gen, i64 0, i64 0, !dbg !2401
  %call1099 = call i64 (%struct._IO_FILE*, i8*, ...) @FormatLocaleFile(%struct._IO_FILE* %805, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay1098), !dbg !2402
  %806 = load double*, double** %coeff, align 8, !dbg !2403
  %arrayidx1100 = getelementptr inbounds double, double* %806, i64 8, !dbg !2403
  %807 = load double, double* %arrayidx1100, align 8, !dbg !2403
  %808 = load double, double* %xc, align 8, !dbg !2405
  %sub1101 = fsub double %807, %808, !dbg !2406
  %sub1102 = fsub double %sub1101, 5.000000e-01, !dbg !2407
  %809 = call double @llvm.fabs.f64(double %sub1102), !dbg !2408
  %cmp1103 = fcmp olt double %809, 1.000000e-01, !dbg !2409
  br i1 %cmp1103, label %land.lhs.true1105, label %if.else1113, !dbg !2410

land.lhs.true1105:                                ; preds = %sw.bb1077
  %810 = load double*, double** %coeff, align 8, !dbg !2411
  %arrayidx1106 = getelementptr inbounds double, double* %810, i64 9, !dbg !2411
  %811 = load double, double* %arrayidx1106, align 8, !dbg !2411
  %812 = load double, double* %yc, align 8, !dbg !2412
  %sub1107 = fsub double %811, %812, !dbg !2413
  %sub1108 = fsub double %sub1107, 5.000000e-01, !dbg !2414
  %813 = call double @llvm.fabs.f64(double %sub1108), !dbg !2415
  %cmp1109 = fcmp olt double %813, 1.000000e-01, !dbg !2416
  br i1 %cmp1109, label %if.then1111, label %if.else1113, !dbg !2417

if.then1111:                                      ; preds = %land.lhs.true1105
  %814 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2418
  %call1112 = call i64 (%struct._IO_FILE*, i8*, ...) @FormatLocaleFile(%struct._IO_FILE* %814, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.91, i64 0, i64 0)), !dbg !2419
  br label %if.end1119, !dbg !2420

if.else1113:                                      ; preds = %land.lhs.true1105, %sw.bb1077
  %815 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2421
  %816 = load double*, double** %coeff, align 8, !dbg !2422
  %arrayidx1114 = getelementptr inbounds double, double* %816, i64 8, !dbg !2422
  %817 = load double, double* %arrayidx1114, align 8, !dbg !2422
  %sub1115 = fsub double %817, 5.000000e-01, !dbg !2423
  %818 = load double*, double** %coeff, align 8, !dbg !2424
  %arrayidx1116 = getelementptr inbounds double, double* %818, i64 9, !dbg !2424
  %819 = load double, double* %arrayidx1116, align 8, !dbg !2424
  %sub1117 = fsub double %819, 5.000000e-01, !dbg !2425
  %call1118 = call i64 (%struct._IO_FILE*, i8*, ...) @FormatLocaleFile(%struct._IO_FILE* %815, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.92, i64 0, i64 0), double %sub1115, double %sub1117), !dbg !2426
  br label %if.end1119

if.end1119:                                       ; preds = %if.else1113, %if.then1111
  %820 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2427
  %call1120 = call i64 (%struct._IO_FILE*, i8*, ...) @FormatLocaleFile(%struct._IO_FILE* %820, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.93, i64 0, i64 0)), !dbg !2428
  %821 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2429
  %822 = load i32, i32* %method.addr, align 4, !dbg !2430
  %cmp1121 = icmp eq i32 %822, 14, !dbg !2431
  %823 = zext i1 %cmp1121 to i64, !dbg !2430
  %cond1123 = select i1 %cmp1121, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.95, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.96, i64 0, i64 0), !dbg !2430
  %824 = load double*, double** %coeff, align 8, !dbg !2432
  %arrayidx1124 = getelementptr inbounds double, double* %824, i64 0, !dbg !2432
  %825 = load double, double* %arrayidx1124, align 8, !dbg !2432
  %826 = load double*, double** %coeff, align 8, !dbg !2433
  %arrayidx1125 = getelementptr inbounds double, double* %826, i64 1, !dbg !2433
  %827 = load double, double* %arrayidx1125, align 8, !dbg !2433
  %828 = load double*, double** %coeff, align 8, !dbg !2434
  %arrayidx1126 = getelementptr inbounds double, double* %828, i64 2, !dbg !2434
  %829 = load double, double* %arrayidx1126, align 8, !dbg !2434
  %830 = load double*, double** %coeff, align 8, !dbg !2435
  %arrayidx1127 = getelementptr inbounds double, double* %830, i64 3, !dbg !2435
  %831 = load double, double* %arrayidx1127, align 8, !dbg !2435
  %call1128 = call i64 (%struct._IO_FILE*, i8*, ...) @FormatLocaleFile(%struct._IO_FILE* %821, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.94, i64 0, i64 0), i8* %cond1123, double %825, double %827, double %829, double %831), !dbg !2436
  %832 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2437
  %833 = load i32, i32* %method.addr, align 4, !dbg !2438
  %cmp1129 = icmp eq i32 %833, 14, !dbg !2439
  %834 = zext i1 %cmp1129 to i64, !dbg !2438
  %cond1131 = select i1 %cmp1129, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.95, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.96, i64 0, i64 0), !dbg !2438
  %835 = load double*, double** %coeff, align 8, !dbg !2440
  %arrayidx1132 = getelementptr inbounds double, double* %835, i64 4, !dbg !2440
  %836 = load double, double* %arrayidx1132, align 8, !dbg !2440
  %837 = load double*, double** %coeff, align 8, !dbg !2441
  %arrayidx1133 = getelementptr inbounds double, double* %837, i64 5, !dbg !2441
  %838 = load double, double* %arrayidx1133, align 8, !dbg !2441
  %839 = load double*, double** %coeff, align 8, !dbg !2442
  %arrayidx1134 = getelementptr inbounds double, double* %839, i64 6, !dbg !2442
  %840 = load double, double* %arrayidx1134, align 8, !dbg !2442
  %841 = load double*, double** %coeff, align 8, !dbg !2443
  %arrayidx1135 = getelementptr inbounds double, double* %841, i64 7, !dbg !2443
  %842 = load double, double* %arrayidx1135, align 8, !dbg !2443
  %call1136 = call i64 (%struct._IO_FILE*, i8*, ...) @FormatLocaleFile(%struct._IO_FILE* %832, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.97, i64 0, i64 0), i8* %cond1131, double %836, double %838, double %840, double %842), !dbg !2444
  %843 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2445
  %call1137 = call i64 (%struct._IO_FILE*, i8*, ...) @FormatLocaleFile(%struct._IO_FILE* %843, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.98, i64 0, i64 0)), !dbg !2446
  br label %sw.default1138, !dbg !2447

sw.default1138:                                   ; preds = %if.end739, %if.end1119
  br label %sw.epilog1139, !dbg !2448

sw.epilog1139:                                    ; preds = %sw.default1138, %sw.bb1057, %sw.bb1037, %for.end1022, %for.end988, %for.end961, %for.end948, %sw.bb884, %if.end883, %for.end804, %for.end758
  br label %if.end1140, !dbg !2449

if.end1140:                                       ; preds = %sw.epilog1139, %if.end719
  call void @llvm.dbg.declare(metadata i8** %artifact1141, metadata !2450, metadata !DIExpression()), !dbg !2452
  %844 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2453
  %call1142 = call i8* @GetImageArtifact(%struct._Image* %844, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.99, i64 0, i64 0)), !dbg !2454
  store i8* %call1142, i8** %artifact1141, align 8, !dbg !2455
  store double 1.000000e+00, double* %output_scaling, align 8, !dbg !2456
  %845 = load i8*, i8** %artifact1141, align 8, !dbg !2457
  %cmp1143 = icmp ne i8* %845, null, !dbg !2459
  br i1 %cmp1143, label %if.then1145, label %if.end1178, !dbg !2460

if.then1145:                                      ; preds = %if.end1140
  %846 = load i8*, i8** %artifact1141, align 8, !dbg !2461
  %call1146 = call double @StringToDouble(i8* %846, i8** null), !dbg !2463
  %847 = call double @llvm.fabs.f64(double %call1146), !dbg !2464
  store double %847, double* %output_scaling, align 8, !dbg !2465
  %848 = load double, double* %output_scaling, align 8, !dbg !2466
  %width1147 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %geometry, i32 0, i32 0, !dbg !2467
  %849 = load i64, i64* %width1147, align 8, !dbg !2467
  %conv1148 = uitofp i64 %849 to double, !dbg !2468
  %mul1149 = fmul double %848, %conv1148, !dbg !2469
  %add1150 = fadd double %mul1149, 5.000000e-01, !dbg !2470
  %conv1151 = fptoui double %add1150 to i64, !dbg !2471
  %width1152 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %geometry, i32 0, i32 0, !dbg !2472
  store i64 %conv1151, i64* %width1152, align 8, !dbg !2473
  %850 = load double, double* %output_scaling, align 8, !dbg !2474
  %height1153 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %geometry, i32 0, i32 1, !dbg !2475
  %851 = load i64, i64* %height1153, align 8, !dbg !2475
  %conv1154 = uitofp i64 %851 to double, !dbg !2476
  %mul1155 = fmul double %850, %conv1154, !dbg !2477
  %add1156 = fadd double %mul1155, 5.000000e-01, !dbg !2478
  %conv1157 = fptoui double %add1156 to i64, !dbg !2479
  %height1158 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %geometry, i32 0, i32 1, !dbg !2480
  store i64 %conv1157, i64* %height1158, align 8, !dbg !2481
  %852 = load double, double* %output_scaling, align 8, !dbg !2482
  %x1159 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %geometry, i32 0, i32 2, !dbg !2483
  %853 = load i64, i64* %x1159, align 8, !dbg !2483
  %conv1160 = sitofp i64 %853 to double, !dbg !2484
  %mul1161 = fmul double %852, %conv1160, !dbg !2485
  %add1162 = fadd double %mul1161, 5.000000e-01, !dbg !2486
  %conv1163 = fptosi double %add1162 to i64, !dbg !2487
  %x1164 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %geometry, i32 0, i32 2, !dbg !2488
  store i64 %conv1163, i64* %x1164, align 8, !dbg !2489
  %854 = load double, double* %output_scaling, align 8, !dbg !2490
  %y1165 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %geometry, i32 0, i32 3, !dbg !2491
  %855 = load i64, i64* %y1165, align 8, !dbg !2491
  %conv1166 = sitofp i64 %855 to double, !dbg !2492
  %mul1167 = fmul double %854, %conv1166, !dbg !2493
  %add1168 = fadd double %mul1167, 5.000000e-01, !dbg !2494
  %conv1169 = fptosi double %add1168 to i64, !dbg !2495
  %y1170 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %geometry, i32 0, i32 3, !dbg !2496
  store i64 %conv1169, i64* %y1170, align 8, !dbg !2497
  %856 = load double, double* %output_scaling, align 8, !dbg !2498
  %cmp1171 = fcmp olt double %856, 1.000000e-01, !dbg !2500
  br i1 %cmp1171, label %if.then1173, label %if.end1176, !dbg !2501

if.then1173:                                      ; preds = %if.then1145
  %857 = load double*, double** %coeff, align 8, !dbg !2502
  %858 = bitcast double* %857 to i8*, !dbg !2502
  %call1174 = call i8* @RelinquishMagickMemory(i8* %858), !dbg !2504
  %859 = bitcast i8* %call1174 to double*, !dbg !2505
  store double* %859, double** %coeff, align 8, !dbg !2506
  %860 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !2507
  %call1175 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %860, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 2273, i32 410, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.100, i64 0, i64 0)), !dbg !2508
  store %struct._Image* null, %struct._Image** %retval, align 8, !dbg !2509
  br label %return, !dbg !2509

if.end1176:                                       ; preds = %if.then1145
  %861 = load double, double* %output_scaling, align 8, !dbg !2510
  %div1177 = fdiv double 1.000000e+00, %861, !dbg !2511
  store double %div1177, double* %output_scaling, align 8, !dbg !2512
  br label %if.end1178, !dbg !2513

if.end1178:                                       ; preds = %if.end1176, %if.end1140
  %862 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2514
  %width1179 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %geometry, i32 0, i32 0, !dbg !2515
  %863 = load i64, i64* %width1179, align 8, !dbg !2515
  %height1180 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %geometry, i32 0, i32 1, !dbg !2516
  %864 = load i64, i64* %height1180, align 8, !dbg !2516
  %865 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !2517
  %call1181 = call %struct._Image* @CloneImage(%struct._Image* %862, i64 %863, i64 %864, i32 1, %struct._ExceptionInfo* %865), !dbg !2518
  store %struct._Image* %call1181, %struct._Image** %distort_image, align 8, !dbg !2519
  %866 = load %struct._Image*, %struct._Image** %distort_image, align 8, !dbg !2520
  %cmp1182 = icmp eq %struct._Image* %866, null, !dbg !2522
  br i1 %cmp1182, label %if.then1184, label %if.end1185, !dbg !2523

if.then1184:                                      ; preds = %if.end1178
  store %struct._Image* null, %struct._Image** %retval, align 8, !dbg !2524
  br label %return, !dbg !2524

if.end1185:                                       ; preds = %if.end1178
  %867 = load %struct._Image*, %struct._Image** %distort_image, align 8, !dbg !2525
  %call1186 = call i32 @SetImageStorageClass(%struct._Image* %867, i32 1), !dbg !2527
  %cmp1187 = icmp eq i32 %call1186, 0, !dbg !2528
  br i1 %cmp1187, label %if.then1189, label %if.end1192, !dbg !2529

if.then1189:                                      ; preds = %if.end1185
  %868 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !2530
  %869 = load %struct._Image*, %struct._Image** %distort_image, align 8, !dbg !2532
  %exception1190 = getelementptr inbounds %struct._Image, %struct._Image* %869, i32 0, i32 58, !dbg !2533
  call void @InheritException(%struct._ExceptionInfo* %868, %struct._ExceptionInfo* %exception1190), !dbg !2534
  %870 = load %struct._Image*, %struct._Image** %distort_image, align 8, !dbg !2535
  %call1191 = call %struct._Image* @DestroyImage(%struct._Image* %870), !dbg !2536
  store %struct._Image* %call1191, %struct._Image** %distort_image, align 8, !dbg !2537
  store %struct._Image* null, %struct._Image** %retval, align 8, !dbg !2538
  br label %return, !dbg !2538

if.end1192:                                       ; preds = %if.end1185
  %871 = load %struct._Image*, %struct._Image** %distort_image, align 8, !dbg !2539
  %background_color = getelementptr inbounds %struct._Image, %struct._Image* %871, i32 0, i32 12, !dbg !2541
  %call1193 = call i32 @IsPixelGray(%struct._PixelPacket* %background_color), !dbg !2542
  %cmp1194 = icmp eq i32 %call1193, 0, !dbg !2543
  br i1 %cmp1194, label %land.lhs.true1196, label %if.end1202, !dbg !2544

land.lhs.true1196:                                ; preds = %if.end1192
  %872 = load %struct._Image*, %struct._Image** %distort_image, align 8, !dbg !2545
  %colorspace = getelementptr inbounds %struct._Image, %struct._Image* %872, i32 0, i32 1, !dbg !2546
  %873 = load i32, i32* %colorspace, align 4, !dbg !2546
  %call1197 = call i32 @IsGrayColorspace(i32 %873), !dbg !2547
  %cmp1198 = icmp ne i32 %call1197, 0, !dbg !2548
  br i1 %cmp1198, label %if.then1200, label %if.end1202, !dbg !2549

if.then1200:                                      ; preds = %land.lhs.true1196
  %874 = load %struct._Image*, %struct._Image** %distort_image, align 8, !dbg !2550
  %call1201 = call i32 @SetImageColorspace(%struct._Image* %874, i32 13), !dbg !2551
  br label %if.end1202, !dbg !2552

if.end1202:                                       ; preds = %if.then1200, %land.lhs.true1196, %if.end1192
  %875 = load %struct._Image*, %struct._Image** %distort_image, align 8, !dbg !2553
  %background_color1203 = getelementptr inbounds %struct._Image, %struct._Image* %875, i32 0, i32 12, !dbg !2555
  %opacity = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %background_color1203, i32 0, i32 3, !dbg !2556
  %876 = load i16, i16* %opacity, align 2, !dbg !2556
  %conv1204 = zext i16 %876 to i32, !dbg !2553
  %cmp1205 = icmp ne i32 %conv1204, 0, !dbg !2557
  br i1 %cmp1205, label %if.then1207, label %if.end1208, !dbg !2558

if.then1207:                                      ; preds = %if.end1202
  %877 = load %struct._Image*, %struct._Image** %distort_image, align 8, !dbg !2559
  %matte = getelementptr inbounds %struct._Image, %struct._Image* %877, i32 0, i32 6, !dbg !2560
  store i32 1, i32* %matte, align 8, !dbg !2561
  br label %if.end1208, !dbg !2559

if.end1208:                                       ; preds = %if.then1207, %if.end1202
  %x1209 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %geometry, i32 0, i32 2, !dbg !2562
  %878 = load i64, i64* %x1209, align 8, !dbg !2562
  %879 = load %struct._Image*, %struct._Image** %distort_image, align 8, !dbg !2563
  %page1210 = getelementptr inbounds %struct._Image, %struct._Image* %879, i32 0, i32 26, !dbg !2564
  %x1211 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %page1210, i32 0, i32 2, !dbg !2565
  store i64 %878, i64* %x1211, align 8, !dbg !2566
  %y1212 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %geometry, i32 0, i32 3, !dbg !2567
  %880 = load i64, i64* %y1212, align 8, !dbg !2567
  %881 = load %struct._Image*, %struct._Image** %distort_image, align 8, !dbg !2568
  %page1213 = getelementptr inbounds %struct._Image, %struct._Image* %881, i32 0, i32 26, !dbg !2569
  %y1214 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %page1213, i32 0, i32 3, !dbg !2570
  store i64 %880, i64* %y1214, align 8, !dbg !2571
  call void @llvm.dbg.declare(metadata %struct._CacheView** %distort_view, metadata !2572, metadata !DIExpression()), !dbg !2577
  call void @llvm.dbg.declare(metadata i32* %status, metadata !2578, metadata !DIExpression()), !dbg !2579
  call void @llvm.dbg.declare(metadata i64* %progress, metadata !2580, metadata !DIExpression()), !dbg !2581
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket* %zero, metadata !2582, metadata !DIExpression()), !dbg !2596
  call void @llvm.dbg.declare(metadata %struct._ResampleFilter*** %resample_filter, metadata !2597, metadata !DIExpression()), !dbg !2599
  call void @llvm.dbg.declare(metadata i64* %j, metadata !2600, metadata !DIExpression()), !dbg !2601
  store i32 1, i32* %status, align 4, !dbg !2602
  store i64 0, i64* %progress, align 8, !dbg !2603
  %882 = load %struct._Image*, %struct._Image** %distort_image, align 8, !dbg !2604
  call void @GetMagickPixelPacket(%struct._Image* %882, %struct._MagickPixelPacket* %zero), !dbg !2605
  %883 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2606
  %884 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !2607
  %call1215 = call %struct._ResampleFilter** @AcquireResampleFilterThreadSet(%struct._Image* %883, i32 0, i32 0, %struct._ExceptionInfo* %884), !dbg !2608
  store %struct._ResampleFilter** %call1215, %struct._ResampleFilter*** %resample_filter, align 8, !dbg !2609
  %885 = load %struct._Image*, %struct._Image** %distort_image, align 8, !dbg !2610
  %886 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !2611
  %call1216 = call %struct._CacheView* @AcquireAuthenticCacheView(%struct._Image* %885, %struct._ExceptionInfo* %886), !dbg !2612
  store %struct._CacheView* %call1216, %struct._CacheView** %distort_view, align 8, !dbg !2613
  store i64 0, i64* %j, align 8, !dbg !2614
  br label %for.cond1217, !dbg !2616

for.cond1217:                                     ; preds = %for.inc2140, %if.end1208
  %887 = load i64, i64* %j, align 8, !dbg !2617
  %888 = load %struct._Image*, %struct._Image** %distort_image, align 8, !dbg !2619
  %rows1218 = getelementptr inbounds %struct._Image, %struct._Image* %888, i32 0, i32 8, !dbg !2620
  %889 = load i64, i64* %rows1218, align 8, !dbg !2620
  %cmp1219 = icmp slt i64 %887, %889, !dbg !2621
  br i1 %cmp1219, label %for.body1221, label %for.end2142, !dbg !2622

for.body1221:                                     ; preds = %for.cond1217
  call void @llvm.dbg.declare(metadata i32* %id, metadata !2623, metadata !DIExpression()), !dbg !2626
  %call1222 = call i32 @GetOpenMPThreadId(), !dbg !2627
  store i32 %call1222, i32* %id, align 4, !dbg !2626
  call void @llvm.dbg.declare(metadata double* %validity, metadata !2628, metadata !DIExpression()), !dbg !2629
  call void @llvm.dbg.declare(metadata i32* %sync, metadata !2630, metadata !DIExpression()), !dbg !2631
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket* %pixel, metadata !2632, metadata !DIExpression()), !dbg !2633
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket* %invalid, metadata !2634, metadata !DIExpression()), !dbg !2635
  call void @llvm.dbg.declare(metadata %struct._PointInfo* %d1223, metadata !2636, metadata !DIExpression()), !dbg !2637
  call void @llvm.dbg.declare(metadata %struct._PointInfo* %s1224, metadata !2638, metadata !DIExpression()), !dbg !2639
  call void @llvm.dbg.declare(metadata i16** %indexes, metadata !2640, metadata !DIExpression()), !dbg !2642
  call void @llvm.dbg.declare(metadata i64* %i1225, metadata !2643, metadata !DIExpression()), !dbg !2644
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %q, metadata !2645, metadata !DIExpression()), !dbg !2647
  %890 = load %struct._CacheView*, %struct._CacheView** %distort_view, align 8, !dbg !2648
  %891 = load i64, i64* %j, align 8, !dbg !2649
  %892 = load %struct._Image*, %struct._Image** %distort_image, align 8, !dbg !2650
  %columns1226 = getelementptr inbounds %struct._Image, %struct._Image* %892, i32 0, i32 7, !dbg !2651
  %893 = load i64, i64* %columns1226, align 8, !dbg !2651
  %894 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !2652
  %call1227 = call %struct._PixelPacket* @QueueCacheViewAuthenticPixels(%struct._CacheView* %890, i64 0, i64 %891, i64 %893, i64 1, %struct._ExceptionInfo* %894), !dbg !2653
  store %struct._PixelPacket* %call1227, %struct._PixelPacket** %q, align 8, !dbg !2654
  %895 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !2655
  %cmp1228 = icmp eq %struct._PixelPacket* %895, null, !dbg !2657
  br i1 %cmp1228, label %if.then1230, label %if.end1231, !dbg !2658

if.then1230:                                      ; preds = %for.body1221
  store i32 0, i32* %status, align 4, !dbg !2659
  br label %for.inc2140, !dbg !2661

if.end1231:                                       ; preds = %for.body1221
  %896 = load %struct._CacheView*, %struct._CacheView** %distort_view, align 8, !dbg !2662
  %call1232 = call i16* @GetCacheViewAuthenticIndexQueue(%struct._CacheView* %896), !dbg !2663
  store i16* %call1232, i16** %indexes, align 8, !dbg !2664
  %897 = bitcast %struct._MagickPixelPacket* %pixel to i8*, !dbg !2665
  %898 = bitcast %struct._MagickPixelPacket* %zero to i8*, !dbg !2665
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %897, i8* align 8 %898, i64 56, i1 false), !dbg !2665
  %899 = load i32, i32* %method.addr, align 4, !dbg !2666
  switch i32 %899, label %sw.default1243 [
    i32 1, label %sw.bb1233
  ], !dbg !2667

sw.bb1233:                                        ; preds = %if.end1231
  %900 = load %struct._ResampleFilter**, %struct._ResampleFilter*** %resample_filter, align 8, !dbg !2668
  %901 = load i32, i32* %id, align 4, !dbg !2668
  %idxprom = sext i32 %901 to i64, !dbg !2668
  %arrayidx1234 = getelementptr inbounds %struct._ResampleFilter*, %struct._ResampleFilter** %900, i64 %idxprom, !dbg !2668
  %902 = load %struct._ResampleFilter*, %struct._ResampleFilter** %arrayidx1234, align 8, !dbg !2668
  %903 = load double, double* %output_scaling, align 8, !dbg !2668
  %904 = load double*, double** %coeff, align 8, !dbg !2668
  %arrayidx1235 = getelementptr inbounds double, double* %904, i64 0, !dbg !2668
  %905 = load double, double* %arrayidx1235, align 8, !dbg !2668
  %mul1236 = fmul double %903, %905, !dbg !2668
  %906 = load double, double* %output_scaling, align 8, !dbg !2668
  %907 = load double*, double** %coeff, align 8, !dbg !2668
  %arrayidx1237 = getelementptr inbounds double, double* %907, i64 1, !dbg !2668
  %908 = load double, double* %arrayidx1237, align 8, !dbg !2668
  %mul1238 = fmul double %906, %908, !dbg !2668
  %909 = load double, double* %output_scaling, align 8, !dbg !2668
  %910 = load double*, double** %coeff, align 8, !dbg !2668
  %arrayidx1239 = getelementptr inbounds double, double* %910, i64 3, !dbg !2668
  %911 = load double, double* %arrayidx1239, align 8, !dbg !2668
  %mul1240 = fmul double %909, %911, !dbg !2668
  %912 = load double, double* %output_scaling, align 8, !dbg !2668
  %913 = load double*, double** %coeff, align 8, !dbg !2668
  %arrayidx1241 = getelementptr inbounds double, double* %913, i64 4, !dbg !2668
  %914 = load double, double* %arrayidx1241, align 8, !dbg !2668
  %mul1242 = fmul double %912, %914, !dbg !2668
  call void @ScaleResampleFilter(%struct._ResampleFilter* %902, double %mul1236, double %mul1238, double %mul1240, double %mul1242), !dbg !2668
  br label %sw.epilog1244, !dbg !2670

sw.default1243:                                   ; preds = %if.end1231
  br label %sw.epilog1244, !dbg !2671

sw.epilog1244:                                    ; preds = %sw.default1243, %sw.bb1233
  store double 1.000000e+00, double* %validity, align 8, !dbg !2672
  %915 = load %struct._Image*, %struct._Image** %distort_image, align 8, !dbg !2673
  call void @GetMagickPixelPacket(%struct._Image* %915, %struct._MagickPixelPacket* %invalid), !dbg !2674
  %916 = load %struct._Image*, %struct._Image** %distort_image, align 8, !dbg !2675
  %917 = load %struct._Image*, %struct._Image** %distort_image, align 8, !dbg !2676
  %matte_color = getelementptr inbounds %struct._Image, %struct._Image* %917, i32 0, i32 14, !dbg !2677
  call void @SetMagickPixelPacket(%struct._Image* %916, %struct._PixelPacket* %matte_color, i16* null, %struct._MagickPixelPacket* %invalid), !dbg !2678
  %918 = load %struct._Image*, %struct._Image** %distort_image, align 8, !dbg !2679
  %colorspace1245 = getelementptr inbounds %struct._Image, %struct._Image* %918, i32 0, i32 1, !dbg !2681
  %919 = load i32, i32* %colorspace1245, align 4, !dbg !2681
  %cmp1246 = icmp eq i32 %919, 12, !dbg !2682
  br i1 %cmp1246, label %if.then1248, label %if.end1249, !dbg !2683

if.then1248:                                      ; preds = %sw.epilog1244
  call void @ConvertRGBToCMYK(%struct._MagickPixelPacket* %invalid), !dbg !2684
  br label %if.end1249, !dbg !2684

if.end1249:                                       ; preds = %if.then1248, %sw.epilog1244
  store i64 0, i64* %i1225, align 8, !dbg !2685
  br label %for.cond1250, !dbg !2687

for.cond1250:                                     ; preds = %for.inc2121, %if.end1249
  %920 = load i64, i64* %i1225, align 8, !dbg !2688
  %921 = load %struct._Image*, %struct._Image** %distort_image, align 8, !dbg !2690
  %columns1251 = getelementptr inbounds %struct._Image, %struct._Image* %921, i32 0, i32 7, !dbg !2691
  %922 = load i64, i64* %columns1251, align 8, !dbg !2691
  %cmp1252 = icmp slt i64 %920, %922, !dbg !2692
  br i1 %cmp1252, label %for.body1254, label %for.end2123, !dbg !2693

for.body1254:                                     ; preds = %for.cond1250
  %x1255 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %geometry, i32 0, i32 2, !dbg !2694
  %923 = load i64, i64* %x1255, align 8, !dbg !2694
  %924 = load i64, i64* %i1225, align 8, !dbg !2696
  %add1256 = add nsw i64 %923, %924, !dbg !2697
  %conv1257 = sitofp i64 %add1256 to double, !dbg !2698
  %add1258 = fadd double %conv1257, 5.000000e-01, !dbg !2699
  %925 = load double, double* %output_scaling, align 8, !dbg !2700
  %mul1259 = fmul double %add1258, %925, !dbg !2701
  %x1260 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %d1223, i32 0, i32 0, !dbg !2702
  store double %mul1259, double* %x1260, align 8, !dbg !2703
  %y1261 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %geometry, i32 0, i32 3, !dbg !2704
  %926 = load i64, i64* %y1261, align 8, !dbg !2704
  %927 = load i64, i64* %j, align 8, !dbg !2705
  %add1262 = add nsw i64 %926, %927, !dbg !2706
  %conv1263 = sitofp i64 %add1262 to double, !dbg !2707
  %add1264 = fadd double %conv1263, 5.000000e-01, !dbg !2708
  %928 = load double, double* %output_scaling, align 8, !dbg !2709
  %mul1265 = fmul double %add1264, %928, !dbg !2710
  %y1266 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %d1223, i32 0, i32 1, !dbg !2711
  store double %mul1265, double* %y1266, align 8, !dbg !2712
  %929 = bitcast %struct._PointInfo* %s1224 to i8*, !dbg !2713
  %930 = bitcast %struct._PointInfo* %d1223 to i8*, !dbg !2713
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %929, i8* align 8 %930, i64 16, i1 false), !dbg !2713
  %931 = load i32, i32* %method.addr, align 4, !dbg !2714
  switch i32 %931, label %sw.default2081 [
    i32 1, label %sw.bb1267
    i32 4, label %sw.bb1288
    i32 7, label %sw.bb1392
    i32 6, label %sw.bb1451
    i32 8, label %sw.bb1515
    i32 9, label %sw.bb1593
    i32 10, label %sw.bb1657
    i32 11, label %sw.bb1734
    i32 12, label %sw.bb1765
    i32 13, label %sw.bb1812
    i32 14, label %sw.bb1889
    i32 15, label %sw.bb1889
    i32 16, label %sw.bb2019
  ], !dbg !2715

sw.bb1267:                                        ; preds = %for.body1254
  %932 = load double*, double** %coeff, align 8, !dbg !2716
  %arrayidx1268 = getelementptr inbounds double, double* %932, i64 0, !dbg !2716
  %933 = load double, double* %arrayidx1268, align 8, !dbg !2716
  %x1269 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %d1223, i32 0, i32 0, !dbg !2719
  %934 = load double, double* %x1269, align 8, !dbg !2719
  %mul1270 = fmul double %933, %934, !dbg !2720
  %935 = load double*, double** %coeff, align 8, !dbg !2721
  %arrayidx1271 = getelementptr inbounds double, double* %935, i64 1, !dbg !2721
  %936 = load double, double* %arrayidx1271, align 8, !dbg !2721
  %y1272 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %d1223, i32 0, i32 1, !dbg !2722
  %937 = load double, double* %y1272, align 8, !dbg !2722
  %mul1273 = fmul double %936, %937, !dbg !2723
  %add1274 = fadd double %mul1270, %mul1273, !dbg !2724
  %938 = load double*, double** %coeff, align 8, !dbg !2725
  %arrayidx1275 = getelementptr inbounds double, double* %938, i64 2, !dbg !2725
  %939 = load double, double* %arrayidx1275, align 8, !dbg !2725
  %add1276 = fadd double %add1274, %939, !dbg !2726
  %x1277 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %s1224, i32 0, i32 0, !dbg !2727
  store double %add1276, double* %x1277, align 8, !dbg !2728
  %940 = load double*, double** %coeff, align 8, !dbg !2729
  %arrayidx1278 = getelementptr inbounds double, double* %940, i64 3, !dbg !2729
  %941 = load double, double* %arrayidx1278, align 8, !dbg !2729
  %x1279 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %d1223, i32 0, i32 0, !dbg !2730
  %942 = load double, double* %x1279, align 8, !dbg !2730
  %mul1280 = fmul double %941, %942, !dbg !2731
  %943 = load double*, double** %coeff, align 8, !dbg !2732
  %arrayidx1281 = getelementptr inbounds double, double* %943, i64 4, !dbg !2732
  %944 = load double, double* %arrayidx1281, align 8, !dbg !2732
  %y1282 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %d1223, i32 0, i32 1, !dbg !2733
  %945 = load double, double* %y1282, align 8, !dbg !2733
  %mul1283 = fmul double %944, %945, !dbg !2734
  %add1284 = fadd double %mul1280, %mul1283, !dbg !2735
  %946 = load double*, double** %coeff, align 8, !dbg !2736
  %arrayidx1285 = getelementptr inbounds double, double* %946, i64 5, !dbg !2736
  %947 = load double, double* %arrayidx1285, align 8, !dbg !2736
  %add1286 = fadd double %add1284, %947, !dbg !2737
  %y1287 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %s1224, i32 0, i32 1, !dbg !2738
  store double %add1286, double* %y1287, align 8, !dbg !2739
  br label %sw.epilog2082, !dbg !2740

sw.bb1288:                                        ; preds = %for.body1254
  call void @llvm.dbg.declare(metadata double* %p, metadata !2741, metadata !DIExpression()), !dbg !2743
  call void @llvm.dbg.declare(metadata double* %q1289, metadata !2744, metadata !DIExpression()), !dbg !2745
  call void @llvm.dbg.declare(metadata double* %r, metadata !2746, metadata !DIExpression()), !dbg !2747
  call void @llvm.dbg.declare(metadata double* %abs_r, metadata !2748, metadata !DIExpression()), !dbg !2749
  call void @llvm.dbg.declare(metadata double* %abs_c6, metadata !2750, metadata !DIExpression()), !dbg !2751
  call void @llvm.dbg.declare(metadata double* %abs_c7, metadata !2752, metadata !DIExpression()), !dbg !2753
  call void @llvm.dbg.declare(metadata double* %scale1290, metadata !2754, metadata !DIExpression()), !dbg !2755
  %948 = load double*, double** %coeff, align 8, !dbg !2756
  %arrayidx1291 = getelementptr inbounds double, double* %948, i64 0, !dbg !2756
  %949 = load double, double* %arrayidx1291, align 8, !dbg !2756
  %x1292 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %d1223, i32 0, i32 0, !dbg !2757
  %950 = load double, double* %x1292, align 8, !dbg !2757
  %mul1293 = fmul double %949, %950, !dbg !2758
  %951 = load double*, double** %coeff, align 8, !dbg !2759
  %arrayidx1294 = getelementptr inbounds double, double* %951, i64 1, !dbg !2759
  %952 = load double, double* %arrayidx1294, align 8, !dbg !2759
  %y1295 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %d1223, i32 0, i32 1, !dbg !2760
  %953 = load double, double* %y1295, align 8, !dbg !2760
  %mul1296 = fmul double %952, %953, !dbg !2761
  %add1297 = fadd double %mul1293, %mul1296, !dbg !2762
  %954 = load double*, double** %coeff, align 8, !dbg !2763
  %arrayidx1298 = getelementptr inbounds double, double* %954, i64 2, !dbg !2763
  %955 = load double, double* %arrayidx1298, align 8, !dbg !2763
  %add1299 = fadd double %add1297, %955, !dbg !2764
  store double %add1299, double* %p, align 8, !dbg !2765
  %956 = load double*, double** %coeff, align 8, !dbg !2766
  %arrayidx1300 = getelementptr inbounds double, double* %956, i64 3, !dbg !2766
  %957 = load double, double* %arrayidx1300, align 8, !dbg !2766
  %x1301 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %d1223, i32 0, i32 0, !dbg !2767
  %958 = load double, double* %x1301, align 8, !dbg !2767
  %mul1302 = fmul double %957, %958, !dbg !2768
  %959 = load double*, double** %coeff, align 8, !dbg !2769
  %arrayidx1303 = getelementptr inbounds double, double* %959, i64 4, !dbg !2769
  %960 = load double, double* %arrayidx1303, align 8, !dbg !2769
  %y1304 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %d1223, i32 0, i32 1, !dbg !2770
  %961 = load double, double* %y1304, align 8, !dbg !2770
  %mul1305 = fmul double %960, %961, !dbg !2771
  %add1306 = fadd double %mul1302, %mul1305, !dbg !2772
  %962 = load double*, double** %coeff, align 8, !dbg !2773
  %arrayidx1307 = getelementptr inbounds double, double* %962, i64 5, !dbg !2773
  %963 = load double, double* %arrayidx1307, align 8, !dbg !2773
  %add1308 = fadd double %add1306, %963, !dbg !2774
  store double %add1308, double* %q1289, align 8, !dbg !2775
  %964 = load double*, double** %coeff, align 8, !dbg !2776
  %arrayidx1309 = getelementptr inbounds double, double* %964, i64 6, !dbg !2776
  %965 = load double, double* %arrayidx1309, align 8, !dbg !2776
  %x1310 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %d1223, i32 0, i32 0, !dbg !2777
  %966 = load double, double* %x1310, align 8, !dbg !2777
  %mul1311 = fmul double %965, %966, !dbg !2778
  %967 = load double*, double** %coeff, align 8, !dbg !2779
  %arrayidx1312 = getelementptr inbounds double, double* %967, i64 7, !dbg !2779
  %968 = load double, double* %arrayidx1312, align 8, !dbg !2779
  %y1313 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %d1223, i32 0, i32 1, !dbg !2780
  %969 = load double, double* %y1313, align 8, !dbg !2780
  %mul1314 = fmul double %968, %969, !dbg !2781
  %add1315 = fadd double %mul1311, %mul1314, !dbg !2782
  %add1316 = fadd double %add1315, 1.000000e+00, !dbg !2783
  store double %add1316, double* %r, align 8, !dbg !2784
  %970 = load double, double* %r, align 8, !dbg !2785
  %971 = load double*, double** %coeff, align 8, !dbg !2786
  %arrayidx1317 = getelementptr inbounds double, double* %971, i64 8, !dbg !2786
  %972 = load double, double* %arrayidx1317, align 8, !dbg !2786
  %mul1318 = fmul double %970, %972, !dbg !2787
  %cmp1319 = fcmp olt double %mul1318, 0.000000e+00, !dbg !2788
  %973 = zext i1 %cmp1319 to i64, !dbg !2789
  %cond1321 = select i1 %cmp1319, double 0.000000e+00, double 1.000000e+00, !dbg !2789
  store double %cond1321, double* %validity, align 8, !dbg !2790
  %974 = load double, double* %r, align 8, !dbg !2791
  %975 = call double @llvm.fabs.f64(double %974), !dbg !2792
  %mul1322 = fmul double %975, 2.000000e+00, !dbg !2793
  store double %mul1322, double* %abs_r, align 8, !dbg !2794
  %976 = load double*, double** %coeff, align 8, !dbg !2795
  %arrayidx1323 = getelementptr inbounds double, double* %976, i64 6, !dbg !2795
  %977 = load double, double* %arrayidx1323, align 8, !dbg !2795
  %978 = call double @llvm.fabs.f64(double %977), !dbg !2796
  store double %978, double* %abs_c6, align 8, !dbg !2797
  %979 = load double*, double** %coeff, align 8, !dbg !2798
  %arrayidx1324 = getelementptr inbounds double, double* %979, i64 7, !dbg !2798
  %980 = load double, double* %arrayidx1324, align 8, !dbg !2798
  %981 = call double @llvm.fabs.f64(double %980), !dbg !2799
  store double %981, double* %abs_c7, align 8, !dbg !2800
  %982 = load double, double* %abs_c6, align 8, !dbg !2801
  %983 = load double, double* %abs_c7, align 8, !dbg !2803
  %cmp1325 = fcmp ogt double %982, %983, !dbg !2804
  br i1 %cmp1325, label %if.then1327, label %if.else1339, !dbg !2805

if.then1327:                                      ; preds = %sw.bb1288
  %984 = load double, double* %abs_r, align 8, !dbg !2806
  %985 = load double, double* %abs_c6, align 8, !dbg !2809
  %986 = load double, double* %output_scaling, align 8, !dbg !2810
  %mul1328 = fmul double %985, %986, !dbg !2811
  %cmp1329 = fcmp olt double %984, %mul1328, !dbg !2812
  br i1 %cmp1329, label %if.then1331, label %if.end1338, !dbg !2813

if.then1331:                                      ; preds = %if.then1327
  %987 = load double*, double** %coeff, align 8, !dbg !2814
  %arrayidx1332 = getelementptr inbounds double, double* %987, i64 8, !dbg !2814
  %988 = load double, double* %arrayidx1332, align 8, !dbg !2814
  %989 = load double, double* %r, align 8, !dbg !2815
  %mul1333 = fmul double %988, %989, !dbg !2816
  %990 = load double*, double** %coeff, align 8, !dbg !2817
  %arrayidx1334 = getelementptr inbounds double, double* %990, i64 6, !dbg !2817
  %991 = load double, double* %arrayidx1334, align 8, !dbg !2817
  %992 = load double, double* %output_scaling, align 8, !dbg !2818
  %mul1335 = fmul double %991, %992, !dbg !2819
  %div1336 = fdiv double %mul1333, %mul1335, !dbg !2820
  %sub1337 = fsub double 5.000000e-01, %div1336, !dbg !2821
  store double %sub1337, double* %validity, align 8, !dbg !2822
  br label %if.end1338, !dbg !2823

if.end1338:                                       ; preds = %if.then1331, %if.then1327
  br label %if.end1351, !dbg !2824

if.else1339:                                      ; preds = %sw.bb1288
  %993 = load double, double* %abs_r, align 8, !dbg !2825
  %994 = load double, double* %abs_c7, align 8, !dbg !2827
  %995 = load double, double* %output_scaling, align 8, !dbg !2828
  %mul1340 = fmul double %994, %995, !dbg !2829
  %cmp1341 = fcmp olt double %993, %mul1340, !dbg !2830
  br i1 %cmp1341, label %if.then1343, label %if.end1350, !dbg !2831

if.then1343:                                      ; preds = %if.else1339
  %996 = load double*, double** %coeff, align 8, !dbg !2832
  %arrayidx1344 = getelementptr inbounds double, double* %996, i64 8, !dbg !2832
  %997 = load double, double* %arrayidx1344, align 8, !dbg !2832
  %998 = load double, double* %r, align 8, !dbg !2833
  %mul1345 = fmul double %997, %998, !dbg !2834
  %999 = load double*, double** %coeff, align 8, !dbg !2835
  %arrayidx1346 = getelementptr inbounds double, double* %999, i64 7, !dbg !2835
  %1000 = load double, double* %arrayidx1346, align 8, !dbg !2835
  %1001 = load double, double* %output_scaling, align 8, !dbg !2836
  %mul1347 = fmul double %1000, %1001, !dbg !2837
  %div1348 = fdiv double %mul1345, %mul1347, !dbg !2838
  %sub1349 = fsub double 5.000000e-01, %div1348, !dbg !2839
  store double %sub1349, double* %validity, align 8, !dbg !2840
  br label %if.end1350, !dbg !2841

if.end1350:                                       ; preds = %if.then1343, %if.else1339
  br label %if.end1351

if.end1351:                                       ; preds = %if.end1350, %if.end1338
  %1002 = load double, double* %validity, align 8, !dbg !2842
  %cmp1352 = fcmp ogt double %1002, 0.000000e+00, !dbg !2844
  br i1 %cmp1352, label %if.then1354, label %if.end1391, !dbg !2845

if.then1354:                                      ; preds = %if.end1351
  %1003 = load double, double* %r, align 8, !dbg !2846
  %div1355 = fdiv double 1.000000e+00, %1003, !dbg !2848
  store double %div1355, double* %scale1290, align 8, !dbg !2849
  %1004 = load double, double* %p, align 8, !dbg !2850
  %1005 = load double, double* %scale1290, align 8, !dbg !2851
  %mul1356 = fmul double %1004, %1005, !dbg !2852
  %x1357 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %s1224, i32 0, i32 0, !dbg !2853
  store double %mul1356, double* %x1357, align 8, !dbg !2854
  %1006 = load double, double* %q1289, align 8, !dbg !2855
  %1007 = load double, double* %scale1290, align 8, !dbg !2856
  %mul1358 = fmul double %1006, %1007, !dbg !2857
  %y1359 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %s1224, i32 0, i32 1, !dbg !2858
  store double %mul1358, double* %y1359, align 8, !dbg !2859
  %1008 = load double, double* %scale1290, align 8, !dbg !2860
  %1009 = load double, double* %scale1290, align 8, !dbg !2861
  %mul1360 = fmul double %1009, %1008, !dbg !2861
  store double %mul1360, double* %scale1290, align 8, !dbg !2861
  %1010 = load %struct._ResampleFilter**, %struct._ResampleFilter*** %resample_filter, align 8, !dbg !2862
  %1011 = load i32, i32* %id, align 4, !dbg !2862
  %idxprom1361 = sext i32 %1011 to i64, !dbg !2862
  %arrayidx1362 = getelementptr inbounds %struct._ResampleFilter*, %struct._ResampleFilter** %1010, i64 %idxprom1361, !dbg !2862
  %1012 = load %struct._ResampleFilter*, %struct._ResampleFilter** %arrayidx1362, align 8, !dbg !2862
  %1013 = load double, double* %output_scaling, align 8, !dbg !2862
  %1014 = load double, double* %r, align 8, !dbg !2862
  %1015 = load double*, double** %coeff, align 8, !dbg !2862
  %arrayidx1363 = getelementptr inbounds double, double* %1015, i64 0, !dbg !2862
  %1016 = load double, double* %arrayidx1363, align 8, !dbg !2862
  %mul1364 = fmul double %1014, %1016, !dbg !2862
  %1017 = load double, double* %p, align 8, !dbg !2862
  %1018 = load double*, double** %coeff, align 8, !dbg !2862
  %arrayidx1365 = getelementptr inbounds double, double* %1018, i64 6, !dbg !2862
  %1019 = load double, double* %arrayidx1365, align 8, !dbg !2862
  %mul1366 = fmul double %1017, %1019, !dbg !2862
  %sub1367 = fsub double %mul1364, %mul1366, !dbg !2862
  %1020 = load double, double* %scale1290, align 8, !dbg !2862
  %mul1368 = fmul double %sub1367, %1020, !dbg !2862
  %mul1369 = fmul double %1013, %mul1368, !dbg !2862
  %1021 = load double, double* %output_scaling, align 8, !dbg !2862
  %1022 = load double, double* %r, align 8, !dbg !2862
  %1023 = load double*, double** %coeff, align 8, !dbg !2862
  %arrayidx1370 = getelementptr inbounds double, double* %1023, i64 1, !dbg !2862
  %1024 = load double, double* %arrayidx1370, align 8, !dbg !2862
  %mul1371 = fmul double %1022, %1024, !dbg !2862
  %1025 = load double, double* %p, align 8, !dbg !2862
  %1026 = load double*, double** %coeff, align 8, !dbg !2862
  %arrayidx1372 = getelementptr inbounds double, double* %1026, i64 7, !dbg !2862
  %1027 = load double, double* %arrayidx1372, align 8, !dbg !2862
  %mul1373 = fmul double %1025, %1027, !dbg !2862
  %sub1374 = fsub double %mul1371, %mul1373, !dbg !2862
  %1028 = load double, double* %scale1290, align 8, !dbg !2862
  %mul1375 = fmul double %sub1374, %1028, !dbg !2862
  %mul1376 = fmul double %1021, %mul1375, !dbg !2862
  %1029 = load double, double* %output_scaling, align 8, !dbg !2862
  %1030 = load double, double* %r, align 8, !dbg !2862
  %1031 = load double*, double** %coeff, align 8, !dbg !2862
  %arrayidx1377 = getelementptr inbounds double, double* %1031, i64 3, !dbg !2862
  %1032 = load double, double* %arrayidx1377, align 8, !dbg !2862
  %mul1378 = fmul double %1030, %1032, !dbg !2862
  %1033 = load double, double* %q1289, align 8, !dbg !2862
  %1034 = load double*, double** %coeff, align 8, !dbg !2862
  %arrayidx1379 = getelementptr inbounds double, double* %1034, i64 6, !dbg !2862
  %1035 = load double, double* %arrayidx1379, align 8, !dbg !2862
  %mul1380 = fmul double %1033, %1035, !dbg !2862
  %sub1381 = fsub double %mul1378, %mul1380, !dbg !2862
  %1036 = load double, double* %scale1290, align 8, !dbg !2862
  %mul1382 = fmul double %sub1381, %1036, !dbg !2862
  %mul1383 = fmul double %1029, %mul1382, !dbg !2862
  %1037 = load double, double* %output_scaling, align 8, !dbg !2862
  %1038 = load double, double* %r, align 8, !dbg !2862
  %1039 = load double*, double** %coeff, align 8, !dbg !2862
  %arrayidx1384 = getelementptr inbounds double, double* %1039, i64 4, !dbg !2862
  %1040 = load double, double* %arrayidx1384, align 8, !dbg !2862
  %mul1385 = fmul double %1038, %1040, !dbg !2862
  %1041 = load double, double* %q1289, align 8, !dbg !2862
  %1042 = load double*, double** %coeff, align 8, !dbg !2862
  %arrayidx1386 = getelementptr inbounds double, double* %1042, i64 7, !dbg !2862
  %1043 = load double, double* %arrayidx1386, align 8, !dbg !2862
  %mul1387 = fmul double %1041, %1043, !dbg !2862
  %sub1388 = fsub double %mul1385, %mul1387, !dbg !2862
  %1044 = load double, double* %scale1290, align 8, !dbg !2862
  %mul1389 = fmul double %sub1388, %1044, !dbg !2862
  %mul1390 = fmul double %1037, %mul1389, !dbg !2862
  call void @ScaleResampleFilter(%struct._ResampleFilter* %1012, double %mul1369, double %mul1376, double %mul1383, double %mul1390), !dbg !2862
  br label %if.end1391, !dbg !2863

if.end1391:                                       ; preds = %if.then1354, %if.end1351
  br label %sw.epilog2082, !dbg !2864

sw.bb1392:                                        ; preds = %for.body1254
  %1045 = load double*, double** %coeff, align 8, !dbg !2865
  %arrayidx1393 = getelementptr inbounds double, double* %1045, i64 0, !dbg !2865
  %1046 = load double, double* %arrayidx1393, align 8, !dbg !2865
  %x1394 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %d1223, i32 0, i32 0, !dbg !2867
  %1047 = load double, double* %x1394, align 8, !dbg !2867
  %mul1395 = fmul double %1046, %1047, !dbg !2868
  %1048 = load double*, double** %coeff, align 8, !dbg !2869
  %arrayidx1396 = getelementptr inbounds double, double* %1048, i64 1, !dbg !2869
  %1049 = load double, double* %arrayidx1396, align 8, !dbg !2869
  %y1397 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %d1223, i32 0, i32 1, !dbg !2870
  %1050 = load double, double* %y1397, align 8, !dbg !2870
  %mul1398 = fmul double %1049, %1050, !dbg !2871
  %add1399 = fadd double %mul1395, %mul1398, !dbg !2872
  %1051 = load double*, double** %coeff, align 8, !dbg !2873
  %arrayidx1400 = getelementptr inbounds double, double* %1051, i64 2, !dbg !2873
  %1052 = load double, double* %arrayidx1400, align 8, !dbg !2873
  %x1401 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %d1223, i32 0, i32 0, !dbg !2874
  %1053 = load double, double* %x1401, align 8, !dbg !2874
  %mul1402 = fmul double %1052, %1053, !dbg !2875
  %y1403 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %d1223, i32 0, i32 1, !dbg !2876
  %1054 = load double, double* %y1403, align 8, !dbg !2876
  %mul1404 = fmul double %mul1402, %1054, !dbg !2877
  %add1405 = fadd double %add1399, %mul1404, !dbg !2878
  %1055 = load double*, double** %coeff, align 8, !dbg !2879
  %arrayidx1406 = getelementptr inbounds double, double* %1055, i64 3, !dbg !2879
  %1056 = load double, double* %arrayidx1406, align 8, !dbg !2879
  %add1407 = fadd double %add1405, %1056, !dbg !2880
  %x1408 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %s1224, i32 0, i32 0, !dbg !2881
  store double %add1407, double* %x1408, align 8, !dbg !2882
  %1057 = load double*, double** %coeff, align 8, !dbg !2883
  %arrayidx1409 = getelementptr inbounds double, double* %1057, i64 4, !dbg !2883
  %1058 = load double, double* %arrayidx1409, align 8, !dbg !2883
  %x1410 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %d1223, i32 0, i32 0, !dbg !2884
  %1059 = load double, double* %x1410, align 8, !dbg !2884
  %mul1411 = fmul double %1058, %1059, !dbg !2885
  %1060 = load double*, double** %coeff, align 8, !dbg !2886
  %arrayidx1412 = getelementptr inbounds double, double* %1060, i64 5, !dbg !2886
  %1061 = load double, double* %arrayidx1412, align 8, !dbg !2886
  %y1413 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %d1223, i32 0, i32 1, !dbg !2887
  %1062 = load double, double* %y1413, align 8, !dbg !2887
  %mul1414 = fmul double %1061, %1062, !dbg !2888
  %add1415 = fadd double %mul1411, %mul1414, !dbg !2889
  %1063 = load double*, double** %coeff, align 8, !dbg !2890
  %arrayidx1416 = getelementptr inbounds double, double* %1063, i64 6, !dbg !2890
  %1064 = load double, double* %arrayidx1416, align 8, !dbg !2890
  %x1417 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %d1223, i32 0, i32 0, !dbg !2891
  %1065 = load double, double* %x1417, align 8, !dbg !2891
  %mul1418 = fmul double %1064, %1065, !dbg !2892
  %y1419 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %d1223, i32 0, i32 1, !dbg !2893
  %1066 = load double, double* %y1419, align 8, !dbg !2893
  %mul1420 = fmul double %mul1418, %1066, !dbg !2894
  %add1421 = fadd double %add1415, %mul1420, !dbg !2895
  %1067 = load double*, double** %coeff, align 8, !dbg !2896
  %arrayidx1422 = getelementptr inbounds double, double* %1067, i64 7, !dbg !2896
  %1068 = load double, double* %arrayidx1422, align 8, !dbg !2896
  %add1423 = fadd double %add1421, %1068, !dbg !2897
  %y1424 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %s1224, i32 0, i32 1, !dbg !2898
  store double %add1423, double* %y1424, align 8, !dbg !2899
  %1069 = load %struct._ResampleFilter**, %struct._ResampleFilter*** %resample_filter, align 8, !dbg !2900
  %1070 = load i32, i32* %id, align 4, !dbg !2900
  %idxprom1425 = sext i32 %1070 to i64, !dbg !2900
  %arrayidx1426 = getelementptr inbounds %struct._ResampleFilter*, %struct._ResampleFilter** %1069, i64 %idxprom1425, !dbg !2900
  %1071 = load %struct._ResampleFilter*, %struct._ResampleFilter** %arrayidx1426, align 8, !dbg !2900
  %1072 = load double, double* %output_scaling, align 8, !dbg !2900
  %1073 = load double*, double** %coeff, align 8, !dbg !2900
  %arrayidx1427 = getelementptr inbounds double, double* %1073, i64 0, !dbg !2900
  %1074 = load double, double* %arrayidx1427, align 8, !dbg !2900
  %1075 = load double*, double** %coeff, align 8, !dbg !2900
  %arrayidx1428 = getelementptr inbounds double, double* %1075, i64 2, !dbg !2900
  %1076 = load double, double* %arrayidx1428, align 8, !dbg !2900
  %y1429 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %d1223, i32 0, i32 1, !dbg !2900
  %1077 = load double, double* %y1429, align 8, !dbg !2900
  %mul1430 = fmul double %1076, %1077, !dbg !2900
  %add1431 = fadd double %1074, %mul1430, !dbg !2900
  %mul1432 = fmul double %1072, %add1431, !dbg !2900
  %1078 = load double, double* %output_scaling, align 8, !dbg !2900
  %1079 = load double*, double** %coeff, align 8, !dbg !2900
  %arrayidx1433 = getelementptr inbounds double, double* %1079, i64 1, !dbg !2900
  %1080 = load double, double* %arrayidx1433, align 8, !dbg !2900
  %1081 = load double*, double** %coeff, align 8, !dbg !2900
  %arrayidx1434 = getelementptr inbounds double, double* %1081, i64 2, !dbg !2900
  %1082 = load double, double* %arrayidx1434, align 8, !dbg !2900
  %x1435 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %d1223, i32 0, i32 0, !dbg !2900
  %1083 = load double, double* %x1435, align 8, !dbg !2900
  %mul1436 = fmul double %1082, %1083, !dbg !2900
  %add1437 = fadd double %1080, %mul1436, !dbg !2900
  %mul1438 = fmul double %1078, %add1437, !dbg !2900
  %1084 = load double, double* %output_scaling, align 8, !dbg !2900
  %1085 = load double*, double** %coeff, align 8, !dbg !2900
  %arrayidx1439 = getelementptr inbounds double, double* %1085, i64 4, !dbg !2900
  %1086 = load double, double* %arrayidx1439, align 8, !dbg !2900
  %1087 = load double*, double** %coeff, align 8, !dbg !2900
  %arrayidx1440 = getelementptr inbounds double, double* %1087, i64 6, !dbg !2900
  %1088 = load double, double* %arrayidx1440, align 8, !dbg !2900
  %y1441 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %d1223, i32 0, i32 1, !dbg !2900
  %1089 = load double, double* %y1441, align 8, !dbg !2900
  %mul1442 = fmul double %1088, %1089, !dbg !2900
  %add1443 = fadd double %1086, %mul1442, !dbg !2900
  %mul1444 = fmul double %1084, %add1443, !dbg !2900
  %1090 = load double, double* %output_scaling, align 8, !dbg !2900
  %1091 = load double*, double** %coeff, align 8, !dbg !2900
  %arrayidx1445 = getelementptr inbounds double, double* %1091, i64 5, !dbg !2900
  %1092 = load double, double* %arrayidx1445, align 8, !dbg !2900
  %1093 = load double*, double** %coeff, align 8, !dbg !2900
  %arrayidx1446 = getelementptr inbounds double, double* %1093, i64 6, !dbg !2900
  %1094 = load double, double* %arrayidx1446, align 8, !dbg !2900
  %x1447 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %d1223, i32 0, i32 0, !dbg !2900
  %1095 = load double, double* %x1447, align 8, !dbg !2900
  %mul1448 = fmul double %1094, %1095, !dbg !2900
  %add1449 = fadd double %1092, %mul1448, !dbg !2900
  %mul1450 = fmul double %1090, %add1449, !dbg !2900
  call void @ScaleResampleFilter(%struct._ResampleFilter* %1071, double %mul1432, double %mul1438, double %mul1444, double %mul1450), !dbg !2900
  br label %sw.epilog2082, !dbg !2901

sw.bb1451:                                        ; preds = %for.body1254
  call void @llvm.dbg.declare(metadata double* %b, metadata !2902, metadata !DIExpression()), !dbg !2904
  call void @llvm.dbg.declare(metadata double* %c, metadata !2905, metadata !DIExpression()), !dbg !2906
  %1096 = load double*, double** %coeff, align 8, !dbg !2907
  %arrayidx1452 = getelementptr inbounds double, double* %1096, i64 3, !dbg !2907
  %1097 = load double, double* %arrayidx1452, align 8, !dbg !2907
  %x1453 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %d1223, i32 0, i32 0, !dbg !2908
  %1098 = load double, double* %x1453, align 8, !dbg !2909
  %sub1454 = fsub double %1098, %1097, !dbg !2909
  store double %sub1454, double* %x1453, align 8, !dbg !2909
  %1099 = load double*, double** %coeff, align 8, !dbg !2910
  %arrayidx1455 = getelementptr inbounds double, double* %1099, i64 7, !dbg !2910
  %1100 = load double, double* %arrayidx1455, align 8, !dbg !2910
  %y1456 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %d1223, i32 0, i32 1, !dbg !2911
  %1101 = load double, double* %y1456, align 8, !dbg !2912
  %sub1457 = fsub double %1101, %1100, !dbg !2912
  store double %sub1457, double* %y1456, align 8, !dbg !2912
  %1102 = load double*, double** %coeff, align 8, !dbg !2913
  %arrayidx1458 = getelementptr inbounds double, double* %1102, i64 6, !dbg !2913
  %1103 = load double, double* %arrayidx1458, align 8, !dbg !2913
  %x1459 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %d1223, i32 0, i32 0, !dbg !2914
  %1104 = load double, double* %x1459, align 8, !dbg !2914
  %mul1460 = fmul double %1103, %1104, !dbg !2915
  %1105 = load double*, double** %coeff, align 8, !dbg !2916
  %arrayidx1461 = getelementptr inbounds double, double* %1105, i64 2, !dbg !2916
  %1106 = load double, double* %arrayidx1461, align 8, !dbg !2916
  %y1462 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %d1223, i32 0, i32 1, !dbg !2917
  %1107 = load double, double* %y1462, align 8, !dbg !2917
  %mul1463 = fmul double %1106, %1107, !dbg !2918
  %sub1464 = fsub double %mul1460, %mul1463, !dbg !2919
  %1108 = load double*, double** %coeff, align 8, !dbg !2920
  %arrayidx1465 = getelementptr inbounds double, double* %1108, i64 8, !dbg !2920
  %1109 = load double, double* %arrayidx1465, align 8, !dbg !2920
  %add1466 = fadd double %sub1464, %1109, !dbg !2921
  store double %add1466, double* %b, align 8, !dbg !2922
  %1110 = load double*, double** %coeff, align 8, !dbg !2923
  %arrayidx1467 = getelementptr inbounds double, double* %1110, i64 4, !dbg !2923
  %1111 = load double, double* %arrayidx1467, align 8, !dbg !2923
  %x1468 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %d1223, i32 0, i32 0, !dbg !2924
  %1112 = load double, double* %x1468, align 8, !dbg !2924
  %mul1469 = fmul double %1111, %1112, !dbg !2925
  %1113 = load double*, double** %coeff, align 8, !dbg !2926
  %arrayidx1470 = getelementptr inbounds double, double* %1113, i64 0, !dbg !2926
  %1114 = load double, double* %arrayidx1470, align 8, !dbg !2926
  %y1471 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %d1223, i32 0, i32 1, !dbg !2927
  %1115 = load double, double* %y1471, align 8, !dbg !2927
  %mul1472 = fmul double %1114, %1115, !dbg !2928
  %sub1473 = fsub double %mul1469, %mul1472, !dbg !2929
  store double %sub1473, double* %c, align 8, !dbg !2930
  store double 1.000000e+00, double* %validity, align 8, !dbg !2931
  %1116 = load double*, double** %coeff, align 8, !dbg !2932
  %arrayidx1474 = getelementptr inbounds double, double* %1116, i64 9, !dbg !2932
  %1117 = load double, double* %arrayidx1474, align 8, !dbg !2932
  %1118 = call double @llvm.fabs.f64(double %1117), !dbg !2934
  %cmp1475 = fcmp olt double %1118, 1.000000e-15, !dbg !2935
  br i1 %cmp1475, label %if.then1477, label %if.else1481, !dbg !2936

if.then1477:                                      ; preds = %sw.bb1451
  %1119 = load double, double* %c, align 8, !dbg !2937
  %fneg1478 = fneg double %1119, !dbg !2938
  %1120 = load double, double* %b, align 8, !dbg !2939
  %div1479 = fdiv double %fneg1478, %1120, !dbg !2940
  %y1480 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %s1224, i32 0, i32 1, !dbg !2941
  store double %div1479, double* %y1480, align 8, !dbg !2942
  br label %if.end1498, !dbg !2943

if.else1481:                                      ; preds = %sw.bb1451
  %1121 = load double, double* %b, align 8, !dbg !2944
  %1122 = load double, double* %b, align 8, !dbg !2946
  %mul1482 = fmul double %1121, %1122, !dbg !2947
  %1123 = load double*, double** %coeff, align 8, !dbg !2948
  %arrayidx1483 = getelementptr inbounds double, double* %1123, i64 9, !dbg !2948
  %1124 = load double, double* %arrayidx1483, align 8, !dbg !2948
  %mul1484 = fmul double 2.000000e+00, %1124, !dbg !2949
  %1125 = load double, double* %c, align 8, !dbg !2950
  %mul1485 = fmul double %mul1484, %1125, !dbg !2951
  %sub1486 = fsub double %mul1482, %mul1485, !dbg !2952
  store double %sub1486, double* %c, align 8, !dbg !2953
  %1126 = load double, double* %c, align 8, !dbg !2954
  %cmp1487 = fcmp olt double %1126, 0.000000e+00, !dbg !2956
  br i1 %cmp1487, label %if.then1489, label %if.else1490, !dbg !2957

if.then1489:                                      ; preds = %if.else1481
  store double 0.000000e+00, double* %validity, align 8, !dbg !2958
  br label %if.end1497, !dbg !2959

if.else1490:                                      ; preds = %if.else1481
  %1127 = load double, double* %b, align 8, !dbg !2960
  %fneg1491 = fneg double %1127, !dbg !2961
  %1128 = load double, double* %c, align 8, !dbg !2962
  %call1492 = call double @sqrt(double %1128) #6, !dbg !2963
  %add1493 = fadd double %fneg1491, %call1492, !dbg !2964
  %1129 = load double*, double** %coeff, align 8, !dbg !2965
  %arrayidx1494 = getelementptr inbounds double, double* %1129, i64 9, !dbg !2965
  %1130 = load double, double* %arrayidx1494, align 8, !dbg !2965
  %div1495 = fdiv double %add1493, %1130, !dbg !2966
  %y1496 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %s1224, i32 0, i32 1, !dbg !2967
  store double %div1495, double* %y1496, align 8, !dbg !2968
  br label %if.end1497

if.end1497:                                       ; preds = %if.else1490, %if.then1489
  br label %if.end1498

if.end1498:                                       ; preds = %if.end1497, %if.then1477
  %1131 = load double, double* %validity, align 8, !dbg !2969
  %cmp1499 = fcmp ogt double %1131, 0.000000e+00, !dbg !2971
  br i1 %cmp1499, label %if.then1501, label %if.end1514, !dbg !2972

if.then1501:                                      ; preds = %if.end1498
  %x1502 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %d1223, i32 0, i32 0, !dbg !2973
  %1132 = load double, double* %x1502, align 8, !dbg !2973
  %1133 = load double*, double** %coeff, align 8, !dbg !2974
  %arrayidx1503 = getelementptr inbounds double, double* %1133, i64 1, !dbg !2974
  %1134 = load double, double* %arrayidx1503, align 8, !dbg !2974
  %y1504 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %s1224, i32 0, i32 1, !dbg !2975
  %1135 = load double, double* %y1504, align 8, !dbg !2975
  %mul1505 = fmul double %1134, %1135, !dbg !2976
  %sub1506 = fsub double %1132, %mul1505, !dbg !2977
  %1136 = load double*, double** %coeff, align 8, !dbg !2978
  %arrayidx1507 = getelementptr inbounds double, double* %1136, i64 0, !dbg !2978
  %1137 = load double, double* %arrayidx1507, align 8, !dbg !2978
  %1138 = load double*, double** %coeff, align 8, !dbg !2979
  %arrayidx1508 = getelementptr inbounds double, double* %1138, i64 2, !dbg !2979
  %1139 = load double, double* %arrayidx1508, align 8, !dbg !2979
  %y1509 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %s1224, i32 0, i32 1, !dbg !2980
  %1140 = load double, double* %y1509, align 8, !dbg !2980
  %mul1510 = fmul double %1139, %1140, !dbg !2981
  %add1511 = fadd double %1137, %mul1510, !dbg !2982
  %div1512 = fdiv double %sub1506, %add1511, !dbg !2983
  %x1513 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %s1224, i32 0, i32 0, !dbg !2984
  store double %div1512, double* %x1513, align 8, !dbg !2985
  br label %if.end1514, !dbg !2986

if.end1514:                                       ; preds = %if.then1501, %if.end1498
  br label %sw.epilog2082, !dbg !2987

sw.bb1515:                                        ; preds = %for.body1254
  call void @llvm.dbg.declare(metadata i64* %k, metadata !2988, metadata !DIExpression()), !dbg !2990
  call void @llvm.dbg.declare(metadata i64* %nterms1516, metadata !2991, metadata !DIExpression()), !dbg !2992
  %1141 = load double*, double** %coeff, align 8, !dbg !2993
  %arrayidx1517 = getelementptr inbounds double, double* %1141, i64 1, !dbg !2993
  %1142 = load double, double* %arrayidx1517, align 8, !dbg !2993
  %conv1518 = fptosi double %1142 to i64, !dbg !2994
  store i64 %conv1518, i64* %nterms1516, align 8, !dbg !2992
  call void @llvm.dbg.declare(metadata %struct._PointInfo* %du, metadata !2995, metadata !DIExpression()), !dbg !2996
  call void @llvm.dbg.declare(metadata %struct._PointInfo* %dv, metadata !2997, metadata !DIExpression()), !dbg !2998
  %y1519 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %dv, i32 0, i32 1, !dbg !2999
  store double 0.000000e+00, double* %y1519, align 8, !dbg !3000
  %x1520 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %dv, i32 0, i32 0, !dbg !3001
  store double 0.000000e+00, double* %x1520, align 8, !dbg !3002
  %y1521 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %du, i32 0, i32 1, !dbg !3003
  store double 0.000000e+00, double* %y1521, align 8, !dbg !3004
  %x1522 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %du, i32 0, i32 0, !dbg !3005
  store double 0.000000e+00, double* %x1522, align 8, !dbg !3006
  %y1523 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %s1224, i32 0, i32 1, !dbg !3007
  store double 0.000000e+00, double* %y1523, align 8, !dbg !3008
  %x1524 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %s1224, i32 0, i32 0, !dbg !3009
  store double 0.000000e+00, double* %x1524, align 8, !dbg !3010
  store i64 0, i64* %k, align 8, !dbg !3011
  br label %for.cond1525, !dbg !3013

for.cond1525:                                     ; preds = %for.inc1580, %sw.bb1515
  %1143 = load i64, i64* %k, align 8, !dbg !3014
  %1144 = load i64, i64* %nterms1516, align 8, !dbg !3016
  %cmp1526 = icmp slt i64 %1143, %1144, !dbg !3017
  br i1 %cmp1526, label %for.body1528, label %for.end1582, !dbg !3018

for.body1528:                                     ; preds = %for.cond1525
  %1145 = load i64, i64* %k, align 8, !dbg !3019
  %x1529 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %d1223, i32 0, i32 0, !dbg !3021
  %1146 = load double, double* %x1529, align 8, !dbg !3021
  %y1530 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %d1223, i32 0, i32 1, !dbg !3022
  %1147 = load double, double* %y1530, align 8, !dbg !3022
  %call1531 = call double @poly_basis_fn(i64 %1145, double %1146, double %1147), !dbg !3023
  %1148 = load double*, double** %coeff, align 8, !dbg !3024
  %1149 = load i64, i64* %k, align 8, !dbg !3025
  %add1532 = add nsw i64 2, %1149, !dbg !3026
  %arrayidx1533 = getelementptr inbounds double, double* %1148, i64 %add1532, !dbg !3024
  %1150 = load double, double* %arrayidx1533, align 8, !dbg !3024
  %mul1534 = fmul double %call1531, %1150, !dbg !3027
  %x1535 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %s1224, i32 0, i32 0, !dbg !3028
  %1151 = load double, double* %x1535, align 8, !dbg !3029
  %add1536 = fadd double %1151, %mul1534, !dbg !3029
  store double %add1536, double* %x1535, align 8, !dbg !3029
  %1152 = load i64, i64* %k, align 8, !dbg !3030
  %x1537 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %d1223, i32 0, i32 0, !dbg !3031
  %1153 = load double, double* %x1537, align 8, !dbg !3031
  %y1538 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %d1223, i32 0, i32 1, !dbg !3032
  %1154 = load double, double* %y1538, align 8, !dbg !3032
  %call1539 = call double @poly_basis_dx(i64 %1152, double %1153, double %1154), !dbg !3033
  %1155 = load double*, double** %coeff, align 8, !dbg !3034
  %1156 = load i64, i64* %k, align 8, !dbg !3035
  %add1540 = add nsw i64 2, %1156, !dbg !3036
  %arrayidx1541 = getelementptr inbounds double, double* %1155, i64 %add1540, !dbg !3034
  %1157 = load double, double* %arrayidx1541, align 8, !dbg !3034
  %mul1542 = fmul double %call1539, %1157, !dbg !3037
  %x1543 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %du, i32 0, i32 0, !dbg !3038
  %1158 = load double, double* %x1543, align 8, !dbg !3039
  %add1544 = fadd double %1158, %mul1542, !dbg !3039
  store double %add1544, double* %x1543, align 8, !dbg !3039
  %1159 = load i64, i64* %k, align 8, !dbg !3040
  %x1545 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %d1223, i32 0, i32 0, !dbg !3041
  %1160 = load double, double* %x1545, align 8, !dbg !3041
  %y1546 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %d1223, i32 0, i32 1, !dbg !3042
  %1161 = load double, double* %y1546, align 8, !dbg !3042
  %call1547 = call double @poly_basis_dy(i64 %1159, double %1160, double %1161), !dbg !3043
  %1162 = load double*, double** %coeff, align 8, !dbg !3044
  %1163 = load i64, i64* %k, align 8, !dbg !3045
  %add1548 = add nsw i64 2, %1163, !dbg !3046
  %arrayidx1549 = getelementptr inbounds double, double* %1162, i64 %add1548, !dbg !3044
  %1164 = load double, double* %arrayidx1549, align 8, !dbg !3044
  %mul1550 = fmul double %call1547, %1164, !dbg !3047
  %y1551 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %du, i32 0, i32 1, !dbg !3048
  %1165 = load double, double* %y1551, align 8, !dbg !3049
  %add1552 = fadd double %1165, %mul1550, !dbg !3049
  store double %add1552, double* %y1551, align 8, !dbg !3049
  %1166 = load i64, i64* %k, align 8, !dbg !3050
  %x1553 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %d1223, i32 0, i32 0, !dbg !3051
  %1167 = load double, double* %x1553, align 8, !dbg !3051
  %y1554 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %d1223, i32 0, i32 1, !dbg !3052
  %1168 = load double, double* %y1554, align 8, !dbg !3052
  %call1555 = call double @poly_basis_fn(i64 %1166, double %1167, double %1168), !dbg !3053
  %1169 = load double*, double** %coeff, align 8, !dbg !3054
  %1170 = load i64, i64* %k, align 8, !dbg !3055
  %add1556 = add nsw i64 2, %1170, !dbg !3056
  %1171 = load i64, i64* %nterms1516, align 8, !dbg !3057
  %add1557 = add nsw i64 %add1556, %1171, !dbg !3058
  %arrayidx1558 = getelementptr inbounds double, double* %1169, i64 %add1557, !dbg !3054
  %1172 = load double, double* %arrayidx1558, align 8, !dbg !3054
  %mul1559 = fmul double %call1555, %1172, !dbg !3059
  %y1560 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %s1224, i32 0, i32 1, !dbg !3060
  %1173 = load double, double* %y1560, align 8, !dbg !3061
  %add1561 = fadd double %1173, %mul1559, !dbg !3061
  store double %add1561, double* %y1560, align 8, !dbg !3061
  %1174 = load i64, i64* %k, align 8, !dbg !3062
  %x1562 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %d1223, i32 0, i32 0, !dbg !3063
  %1175 = load double, double* %x1562, align 8, !dbg !3063
  %y1563 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %d1223, i32 0, i32 1, !dbg !3064
  %1176 = load double, double* %y1563, align 8, !dbg !3064
  %call1564 = call double @poly_basis_dx(i64 %1174, double %1175, double %1176), !dbg !3065
  %1177 = load double*, double** %coeff, align 8, !dbg !3066
  %1178 = load i64, i64* %k, align 8, !dbg !3067
  %add1565 = add nsw i64 2, %1178, !dbg !3068
  %1179 = load i64, i64* %nterms1516, align 8, !dbg !3069
  %add1566 = add nsw i64 %add1565, %1179, !dbg !3070
  %arrayidx1567 = getelementptr inbounds double, double* %1177, i64 %add1566, !dbg !3066
  %1180 = load double, double* %arrayidx1567, align 8, !dbg !3066
  %mul1568 = fmul double %call1564, %1180, !dbg !3071
  %x1569 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %dv, i32 0, i32 0, !dbg !3072
  %1181 = load double, double* %x1569, align 8, !dbg !3073
  %add1570 = fadd double %1181, %mul1568, !dbg !3073
  store double %add1570, double* %x1569, align 8, !dbg !3073
  %1182 = load i64, i64* %k, align 8, !dbg !3074
  %x1571 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %d1223, i32 0, i32 0, !dbg !3075
  %1183 = load double, double* %x1571, align 8, !dbg !3075
  %y1572 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %d1223, i32 0, i32 1, !dbg !3076
  %1184 = load double, double* %y1572, align 8, !dbg !3076
  %call1573 = call double @poly_basis_dy(i64 %1182, double %1183, double %1184), !dbg !3077
  %1185 = load double*, double** %coeff, align 8, !dbg !3078
  %1186 = load i64, i64* %k, align 8, !dbg !3079
  %add1574 = add nsw i64 2, %1186, !dbg !3080
  %1187 = load i64, i64* %nterms1516, align 8, !dbg !3081
  %add1575 = add nsw i64 %add1574, %1187, !dbg !3082
  %arrayidx1576 = getelementptr inbounds double, double* %1185, i64 %add1575, !dbg !3078
  %1188 = load double, double* %arrayidx1576, align 8, !dbg !3078
  %mul1577 = fmul double %call1573, %1188, !dbg !3083
  %y1578 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %dv, i32 0, i32 1, !dbg !3084
  %1189 = load double, double* %y1578, align 8, !dbg !3085
  %add1579 = fadd double %1189, %mul1577, !dbg !3085
  store double %add1579, double* %y1578, align 8, !dbg !3085
  br label %for.inc1580, !dbg !3086

for.inc1580:                                      ; preds = %for.body1528
  %1190 = load i64, i64* %k, align 8, !dbg !3087
  %inc1581 = add nsw i64 %1190, 1, !dbg !3087
  store i64 %inc1581, i64* %k, align 8, !dbg !3087
  br label %for.cond1525, !dbg !3088, !llvm.loop !3089

for.end1582:                                      ; preds = %for.cond1525
  %1191 = load %struct._ResampleFilter**, %struct._ResampleFilter*** %resample_filter, align 8, !dbg !3091
  %1192 = load i32, i32* %id, align 4, !dbg !3091
  %idxprom1583 = sext i32 %1192 to i64, !dbg !3091
  %arrayidx1584 = getelementptr inbounds %struct._ResampleFilter*, %struct._ResampleFilter** %1191, i64 %idxprom1583, !dbg !3091
  %1193 = load %struct._ResampleFilter*, %struct._ResampleFilter** %arrayidx1584, align 8, !dbg !3091
  %1194 = load double, double* %output_scaling, align 8, !dbg !3091
  %x1585 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %du, i32 0, i32 0, !dbg !3091
  %1195 = load double, double* %x1585, align 8, !dbg !3091
  %mul1586 = fmul double %1194, %1195, !dbg !3091
  %1196 = load double, double* %output_scaling, align 8, !dbg !3091
  %y1587 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %du, i32 0, i32 1, !dbg !3091
  %1197 = load double, double* %y1587, align 8, !dbg !3091
  %mul1588 = fmul double %1196, %1197, !dbg !3091
  %1198 = load double, double* %output_scaling, align 8, !dbg !3091
  %x1589 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %dv, i32 0, i32 0, !dbg !3091
  %1199 = load double, double* %x1589, align 8, !dbg !3091
  %mul1590 = fmul double %1198, %1199, !dbg !3091
  %1200 = load double, double* %output_scaling, align 8, !dbg !3091
  %y1591 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %dv, i32 0, i32 1, !dbg !3091
  %1201 = load double, double* %y1591, align 8, !dbg !3091
  %mul1592 = fmul double %1200, %1201, !dbg !3091
  call void @ScaleResampleFilter(%struct._ResampleFilter* %1193, double %mul1586, double %mul1588, double %mul1590, double %mul1592), !dbg !3091
  br label %sw.epilog2082, !dbg !3092

sw.bb1593:                                        ; preds = %for.body1254
  %y1594 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %d1223, i32 0, i32 1, !dbg !3093
  %1202 = load double, double* %y1594, align 8, !dbg !3093
  %x1595 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %d1223, i32 0, i32 0, !dbg !3095
  %1203 = load double, double* %x1595, align 8, !dbg !3095
  %call1596 = call double @atan2(double %1202, double %1203) #6, !dbg !3096
  %1204 = load double*, double** %coeff, align 8, !dbg !3097
  %arrayidx1597 = getelementptr inbounds double, double* %1204, i64 0, !dbg !3097
  %1205 = load double, double* %arrayidx1597, align 8, !dbg !3097
  %sub1598 = fsub double %call1596, %1205, !dbg !3098
  %div1599 = fdiv double %sub1598, 0x401921FB54442D18, !dbg !3099
  %x1600 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %s1224, i32 0, i32 0, !dbg !3100
  store double %div1599, double* %x1600, align 8, !dbg !3101
  %x1601 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %s1224, i32 0, i32 0, !dbg !3102
  %1206 = load double, double* %x1601, align 8, !dbg !3102
  %call1602 = call double @MagickRound(double %1206), !dbg !3103
  %x1603 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %s1224, i32 0, i32 0, !dbg !3104
  %1207 = load double, double* %x1603, align 8, !dbg !3105
  %sub1604 = fsub double %1207, %call1602, !dbg !3105
  store double %sub1604, double* %x1603, align 8, !dbg !3105
  %x1605 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %d1223, i32 0, i32 0, !dbg !3106
  %1208 = load double, double* %x1605, align 8, !dbg !3106
  %y1606 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %d1223, i32 0, i32 1, !dbg !3107
  %1209 = load double, double* %y1606, align 8, !dbg !3107
  %call1607 = call double @hypot(double %1208, double %1209) #6, !dbg !3108
  %y1608 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %s1224, i32 0, i32 1, !dbg !3109
  store double %call1607, double* %y1608, align 8, !dbg !3110
  %y1609 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %s1224, i32 0, i32 1, !dbg !3111
  %1210 = load double, double* %y1609, align 8, !dbg !3111
  %cmp1610 = fcmp ogt double %1210, 1.000000e-15, !dbg !3113
  br i1 %cmp1610, label %if.then1612, label %if.else1624, !dbg !3114

if.then1612:                                      ; preds = %sw.bb1593
  %1211 = load %struct._ResampleFilter**, %struct._ResampleFilter*** %resample_filter, align 8, !dbg !3115
  %1212 = load i32, i32* %id, align 4, !dbg !3115
  %idxprom1613 = sext i32 %1212 to i64, !dbg !3115
  %arrayidx1614 = getelementptr inbounds %struct._ResampleFilter*, %struct._ResampleFilter** %1211, i64 %idxprom1613, !dbg !3115
  %1213 = load %struct._ResampleFilter*, %struct._ResampleFilter** %arrayidx1614, align 8, !dbg !3115
  %1214 = load double, double* %output_scaling, align 8, !dbg !3115
  %1215 = load double*, double** %coeff, align 8, !dbg !3115
  %arrayidx1615 = getelementptr inbounds double, double* %1215, i64 1, !dbg !3115
  %1216 = load double, double* %arrayidx1615, align 8, !dbg !3115
  %y1616 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %s1224, i32 0, i32 1, !dbg !3115
  %1217 = load double, double* %y1616, align 8, !dbg !3115
  %mul1617 = fmul double 0x401921FB54442D18, %1217, !dbg !3115
  %div1618 = fdiv double %1216, %mul1617, !dbg !3115
  %mul1619 = fmul double %1214, %div1618, !dbg !3115
  %1218 = load double, double* %output_scaling, align 8, !dbg !3115
  %mul1620 = fmul double %1218, 0.000000e+00, !dbg !3115
  %1219 = load double, double* %output_scaling, align 8, !dbg !3115
  %mul1621 = fmul double %1219, 0.000000e+00, !dbg !3115
  %1220 = load double, double* %output_scaling, align 8, !dbg !3115
  %1221 = load double*, double** %coeff, align 8, !dbg !3115
  %arrayidx1622 = getelementptr inbounds double, double* %1221, i64 3, !dbg !3115
  %1222 = load double, double* %arrayidx1622, align 8, !dbg !3115
  %mul1623 = fmul double %1220, %1222, !dbg !3115
  call void @ScaleResampleFilter(%struct._ResampleFilter* %1213, double %mul1619, double %mul1620, double %mul1621, double %mul1623), !dbg !3115
  br label %if.end1635, !dbg !3115

if.else1624:                                      ; preds = %sw.bb1593
  %1223 = load %struct._ResampleFilter**, %struct._ResampleFilter*** %resample_filter, align 8, !dbg !3116
  %1224 = load i32, i32* %id, align 4, !dbg !3116
  %idxprom1625 = sext i32 %1224 to i64, !dbg !3116
  %arrayidx1626 = getelementptr inbounds %struct._ResampleFilter*, %struct._ResampleFilter** %1223, i64 %idxprom1625, !dbg !3116
  %1225 = load %struct._ResampleFilter*, %struct._ResampleFilter** %arrayidx1626, align 8, !dbg !3116
  %1226 = load double, double* %output_scaling, align 8, !dbg !3116
  %1227 = load %struct._Image*, %struct._Image** %distort_image, align 8, !dbg !3116
  %columns1627 = getelementptr inbounds %struct._Image, %struct._Image* %1227, i32 0, i32 7, !dbg !3116
  %1228 = load i64, i64* %columns1627, align 8, !dbg !3116
  %mul1628 = mul i64 %1228, 2, !dbg !3116
  %conv1629 = uitofp i64 %mul1628 to double, !dbg !3116
  %mul1630 = fmul double %1226, %conv1629, !dbg !3116
  %1229 = load double, double* %output_scaling, align 8, !dbg !3116
  %mul1631 = fmul double %1229, 0.000000e+00, !dbg !3116
  %1230 = load double, double* %output_scaling, align 8, !dbg !3116
  %mul1632 = fmul double %1230, 0.000000e+00, !dbg !3116
  %1231 = load double, double* %output_scaling, align 8, !dbg !3116
  %1232 = load double*, double** %coeff, align 8, !dbg !3116
  %arrayidx1633 = getelementptr inbounds double, double* %1232, i64 3, !dbg !3116
  %1233 = load double, double* %arrayidx1633, align 8, !dbg !3116
  %mul1634 = fmul double %1231, %1233, !dbg !3116
  call void @ScaleResampleFilter(%struct._ResampleFilter* %1225, double %mul1630, double %mul1631, double %mul1632, double %mul1634), !dbg !3116
  br label %if.end1635

if.end1635:                                       ; preds = %if.else1624, %if.then1612
  %x1636 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %s1224, i32 0, i32 0, !dbg !3117
  %1234 = load double, double* %x1636, align 8, !dbg !3117
  %1235 = load double*, double** %coeff, align 8, !dbg !3118
  %arrayidx1637 = getelementptr inbounds double, double* %1235, i64 1, !dbg !3118
  %1236 = load double, double* %arrayidx1637, align 8, !dbg !3118
  %mul1638 = fmul double %1234, %1236, !dbg !3119
  %1237 = load double*, double** %coeff, align 8, !dbg !3120
  %arrayidx1639 = getelementptr inbounds double, double* %1237, i64 4, !dbg !3120
  %1238 = load double, double* %arrayidx1639, align 8, !dbg !3120
  %add1640 = fadd double %mul1638, %1238, !dbg !3121
  %1239 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3122
  %page1641 = getelementptr inbounds %struct._Image, %struct._Image* %1239, i32 0, i32 26, !dbg !3123
  %x1642 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %page1641, i32 0, i32 2, !dbg !3124
  %1240 = load i64, i64* %x1642, align 8, !dbg !3124
  %conv1643 = sitofp i64 %1240 to double, !dbg !3122
  %add1644 = fadd double %add1640, %conv1643, !dbg !3125
  %add1645 = fadd double %add1644, 5.000000e-01, !dbg !3126
  %x1646 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %s1224, i32 0, i32 0, !dbg !3127
  store double %add1645, double* %x1646, align 8, !dbg !3128
  %1241 = load double*, double** %coeff, align 8, !dbg !3129
  %arrayidx1647 = getelementptr inbounds double, double* %1241, i64 2, !dbg !3129
  %1242 = load double, double* %arrayidx1647, align 8, !dbg !3129
  %y1648 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %s1224, i32 0, i32 1, !dbg !3130
  %1243 = load double, double* %y1648, align 8, !dbg !3130
  %sub1649 = fsub double %1242, %1243, !dbg !3131
  %1244 = load double*, double** %coeff, align 8, !dbg !3132
  %arrayidx1650 = getelementptr inbounds double, double* %1244, i64 3, !dbg !3132
  %1245 = load double, double* %arrayidx1650, align 8, !dbg !3132
  %mul1651 = fmul double %sub1649, %1245, !dbg !3133
  %1246 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3134
  %page1652 = getelementptr inbounds %struct._Image, %struct._Image* %1246, i32 0, i32 26, !dbg !3135
  %y1653 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %page1652, i32 0, i32 3, !dbg !3136
  %1247 = load i64, i64* %y1653, align 8, !dbg !3136
  %conv1654 = sitofp i64 %1247 to double, !dbg !3134
  %add1655 = fadd double %mul1651, %conv1654, !dbg !3137
  %y1656 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %s1224, i32 0, i32 1, !dbg !3138
  store double %add1655, double* %y1656, align 8, !dbg !3139
  br label %sw.epilog2082, !dbg !3140

sw.bb1657:                                        ; preds = %for.body1254
  %1248 = load double*, double** %coeff, align 8, !dbg !3141
  %arrayidx1658 = getelementptr inbounds double, double* %1248, i64 2, !dbg !3141
  %1249 = load double, double* %arrayidx1658, align 8, !dbg !3141
  %x1659 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %d1223, i32 0, i32 0, !dbg !3143
  %1250 = load double, double* %x1659, align 8, !dbg !3144
  %sub1660 = fsub double %1250, %1249, !dbg !3144
  store double %sub1660, double* %x1659, align 8, !dbg !3144
  %1251 = load double*, double** %coeff, align 8, !dbg !3145
  %arrayidx1661 = getelementptr inbounds double, double* %1251, i64 3, !dbg !3145
  %1252 = load double, double* %arrayidx1661, align 8, !dbg !3145
  %y1662 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %d1223, i32 0, i32 1, !dbg !3146
  %1253 = load double, double* %y1662, align 8, !dbg !3147
  %sub1663 = fsub double %1253, %1252, !dbg !3147
  store double %sub1663, double* %y1662, align 8, !dbg !3147
  %x1664 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %d1223, i32 0, i32 0, !dbg !3148
  %1254 = load double, double* %x1664, align 8, !dbg !3148
  %y1665 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %d1223, i32 0, i32 1, !dbg !3149
  %1255 = load double, double* %y1665, align 8, !dbg !3149
  %call1666 = call double @atan2(double %1254, double %1255) #6, !dbg !3150
  %1256 = load double*, double** %coeff, align 8, !dbg !3151
  %arrayidx1667 = getelementptr inbounds double, double* %1256, i64 4, !dbg !3151
  %1257 = load double, double* %arrayidx1667, align 8, !dbg !3151
  %1258 = load double*, double** %coeff, align 8, !dbg !3152
  %arrayidx1668 = getelementptr inbounds double, double* %1258, i64 5, !dbg !3152
  %1259 = load double, double* %arrayidx1668, align 8, !dbg !3152
  %add1669 = fadd double %1257, %1259, !dbg !3153
  %div1670 = fdiv double %add1669, 2.000000e+00, !dbg !3154
  %sub1671 = fsub double %call1666, %div1670, !dbg !3155
  %x1672 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %s1224, i32 0, i32 0, !dbg !3156
  store double %sub1671, double* %x1672, align 8, !dbg !3157
  %x1673 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %s1224, i32 0, i32 0, !dbg !3158
  %1260 = load double, double* %x1673, align 8, !dbg !3159
  %div1674 = fdiv double %1260, 0x401921FB54442D18, !dbg !3159
  store double %div1674, double* %x1673, align 8, !dbg !3159
  %x1675 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %s1224, i32 0, i32 0, !dbg !3160
  %1261 = load double, double* %x1675, align 8, !dbg !3160
  %call1676 = call double @MagickRound(double %1261), !dbg !3161
  %x1677 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %s1224, i32 0, i32 0, !dbg !3162
  %1262 = load double, double* %x1677, align 8, !dbg !3163
  %sub1678 = fsub double %1262, %call1676, !dbg !3163
  store double %sub1678, double* %x1677, align 8, !dbg !3163
  %x1679 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %s1224, i32 0, i32 0, !dbg !3164
  %1263 = load double, double* %x1679, align 8, !dbg !3165
  %mul1680 = fmul double %1263, 0x401921FB54442D18, !dbg !3165
  store double %mul1680, double* %x1679, align 8, !dbg !3165
  %x1681 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %d1223, i32 0, i32 0, !dbg !3166
  %1264 = load double, double* %x1681, align 8, !dbg !3166
  %y1682 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %d1223, i32 0, i32 1, !dbg !3167
  %1265 = load double, double* %y1682, align 8, !dbg !3167
  %call1683 = call double @hypot(double %1264, double %1265) #6, !dbg !3168
  %y1684 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %s1224, i32 0, i32 1, !dbg !3169
  store double %call1683, double* %y1684, align 8, !dbg !3170
  %y1685 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %s1224, i32 0, i32 1, !dbg !3171
  %1266 = load double, double* %y1685, align 8, !dbg !3171
  %cmp1686 = fcmp ogt double %1266, 1.000000e-15, !dbg !3173
  br i1 %cmp1686, label %if.then1688, label %if.else1700, !dbg !3174

if.then1688:                                      ; preds = %sw.bb1657
  %1267 = load %struct._ResampleFilter**, %struct._ResampleFilter*** %resample_filter, align 8, !dbg !3175
  %1268 = load i32, i32* %id, align 4, !dbg !3175
  %idxprom1689 = sext i32 %1268 to i64, !dbg !3175
  %arrayidx1690 = getelementptr inbounds %struct._ResampleFilter*, %struct._ResampleFilter** %1267, i64 %idxprom1689, !dbg !3175
  %1269 = load %struct._ResampleFilter*, %struct._ResampleFilter** %arrayidx1690, align 8, !dbg !3175
  %1270 = load double, double* %output_scaling, align 8, !dbg !3175
  %1271 = load double*, double** %coeff, align 8, !dbg !3175
  %arrayidx1691 = getelementptr inbounds double, double* %1271, i64 6, !dbg !3175
  %1272 = load double, double* %arrayidx1691, align 8, !dbg !3175
  %y1692 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %s1224, i32 0, i32 1, !dbg !3175
  %1273 = load double, double* %y1692, align 8, !dbg !3175
  %mul1693 = fmul double 0x401921FB54442D18, %1273, !dbg !3175
  %div1694 = fdiv double %1272, %mul1693, !dbg !3175
  %mul1695 = fmul double %1270, %div1694, !dbg !3175
  %1274 = load double, double* %output_scaling, align 8, !dbg !3175
  %mul1696 = fmul double %1274, 0.000000e+00, !dbg !3175
  %1275 = load double, double* %output_scaling, align 8, !dbg !3175
  %mul1697 = fmul double %1275, 0.000000e+00, !dbg !3175
  %1276 = load double, double* %output_scaling, align 8, !dbg !3175
  %1277 = load double*, double** %coeff, align 8, !dbg !3175
  %arrayidx1698 = getelementptr inbounds double, double* %1277, i64 7, !dbg !3175
  %1278 = load double, double* %arrayidx1698, align 8, !dbg !3175
  %mul1699 = fmul double %1276, %1278, !dbg !3175
  call void @ScaleResampleFilter(%struct._ResampleFilter* %1269, double %mul1695, double %mul1696, double %mul1697, double %mul1699), !dbg !3175
  br label %if.end1711, !dbg !3175

if.else1700:                                      ; preds = %sw.bb1657
  %1279 = load %struct._ResampleFilter**, %struct._ResampleFilter*** %resample_filter, align 8, !dbg !3176
  %1280 = load i32, i32* %id, align 4, !dbg !3176
  %idxprom1701 = sext i32 %1280 to i64, !dbg !3176
  %arrayidx1702 = getelementptr inbounds %struct._ResampleFilter*, %struct._ResampleFilter** %1279, i64 %idxprom1701, !dbg !3176
  %1281 = load %struct._ResampleFilter*, %struct._ResampleFilter** %arrayidx1702, align 8, !dbg !3176
  %1282 = load double, double* %output_scaling, align 8, !dbg !3176
  %1283 = load %struct._Image*, %struct._Image** %distort_image, align 8, !dbg !3176
  %columns1703 = getelementptr inbounds %struct._Image, %struct._Image* %1283, i32 0, i32 7, !dbg !3176
  %1284 = load i64, i64* %columns1703, align 8, !dbg !3176
  %mul1704 = mul i64 %1284, 2, !dbg !3176
  %conv1705 = uitofp i64 %mul1704 to double, !dbg !3176
  %mul1706 = fmul double %1282, %conv1705, !dbg !3176
  %1285 = load double, double* %output_scaling, align 8, !dbg !3176
  %mul1707 = fmul double %1285, 0.000000e+00, !dbg !3176
  %1286 = load double, double* %output_scaling, align 8, !dbg !3176
  %mul1708 = fmul double %1286, 0.000000e+00, !dbg !3176
  %1287 = load double, double* %output_scaling, align 8, !dbg !3176
  %1288 = load double*, double** %coeff, align 8, !dbg !3176
  %arrayidx1709 = getelementptr inbounds double, double* %1288, i64 7, !dbg !3176
  %1289 = load double, double* %arrayidx1709, align 8, !dbg !3176
  %mul1710 = fmul double %1287, %1289, !dbg !3176
  call void @ScaleResampleFilter(%struct._ResampleFilter* %1281, double %mul1706, double %mul1707, double %mul1708, double %mul1710), !dbg !3176
  br label %if.end1711

if.end1711:                                       ; preds = %if.else1700, %if.then1688
  %x1712 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %s1224, i32 0, i32 0, !dbg !3177
  %1290 = load double, double* %x1712, align 8, !dbg !3177
  %1291 = load double*, double** %coeff, align 8, !dbg !3178
  %arrayidx1713 = getelementptr inbounds double, double* %1291, i64 6, !dbg !3178
  %1292 = load double, double* %arrayidx1713, align 8, !dbg !3178
  %mul1714 = fmul double %1290, %1292, !dbg !3179
  %1293 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3180
  %columns1715 = getelementptr inbounds %struct._Image, %struct._Image* %1293, i32 0, i32 7, !dbg !3181
  %1294 = load i64, i64* %columns1715, align 8, !dbg !3181
  %conv1716 = uitofp i64 %1294 to double, !dbg !3182
  %div1717 = fdiv double %conv1716, 2.000000e+00, !dbg !3183
  %add1718 = fadd double %mul1714, %div1717, !dbg !3184
  %1295 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3185
  %page1719 = getelementptr inbounds %struct._Image, %struct._Image* %1295, i32 0, i32 26, !dbg !3186
  %x1720 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %page1719, i32 0, i32 2, !dbg !3187
  %1296 = load i64, i64* %x1720, align 8, !dbg !3187
  %conv1721 = sitofp i64 %1296 to double, !dbg !3185
  %add1722 = fadd double %add1718, %conv1721, !dbg !3188
  %x1723 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %s1224, i32 0, i32 0, !dbg !3189
  store double %add1722, double* %x1723, align 8, !dbg !3190
  %y1724 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %s1224, i32 0, i32 1, !dbg !3191
  %1297 = load double, double* %y1724, align 8, !dbg !3191
  %1298 = load double*, double** %coeff, align 8, !dbg !3192
  %arrayidx1725 = getelementptr inbounds double, double* %1298, i64 1, !dbg !3192
  %1299 = load double, double* %arrayidx1725, align 8, !dbg !3192
  %sub1726 = fsub double %1297, %1299, !dbg !3193
  %1300 = load double*, double** %coeff, align 8, !dbg !3194
  %arrayidx1727 = getelementptr inbounds double, double* %1300, i64 7, !dbg !3194
  %1301 = load double, double* %arrayidx1727, align 8, !dbg !3194
  %mul1728 = fmul double %sub1726, %1301, !dbg !3195
  %1302 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3196
  %page1729 = getelementptr inbounds %struct._Image, %struct._Image* %1302, i32 0, i32 26, !dbg !3197
  %y1730 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %page1729, i32 0, i32 3, !dbg !3198
  %1303 = load i64, i64* %y1730, align 8, !dbg !3198
  %conv1731 = sitofp i64 %1303 to double, !dbg !3196
  %add1732 = fadd double %mul1728, %conv1731, !dbg !3199
  %y1733 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %s1224, i32 0, i32 1, !dbg !3200
  store double %add1732, double* %y1733, align 8, !dbg !3201
  br label %sw.epilog2082, !dbg !3202

sw.bb1734:                                        ; preds = %for.body1254
  %1304 = load i64, i64* %i1225, align 8, !dbg !3203
  %conv1735 = sitofp i64 %1304 to double, !dbg !3205
  %add1736 = fadd double %conv1735, 5.000000e-01, !dbg !3206
  %1305 = load double, double* %output_scaling, align 8, !dbg !3207
  %mul1737 = fmul double %add1736, %1305, !dbg !3208
  %1306 = load double*, double** %coeff, align 8, !dbg !3209
  %arrayidx1738 = getelementptr inbounds double, double* %1306, i64 6, !dbg !3209
  %1307 = load double, double* %arrayidx1738, align 8, !dbg !3209
  %mul1739 = fmul double %mul1737, %1307, !dbg !3210
  %1308 = load double*, double** %coeff, align 8, !dbg !3211
  %arrayidx1740 = getelementptr inbounds double, double* %1308, i64 4, !dbg !3211
  %1309 = load double, double* %arrayidx1740, align 8, !dbg !3211
  %add1741 = fadd double %mul1739, %1309, !dbg !3212
  %x1742 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %d1223, i32 0, i32 0, !dbg !3213
  store double %add1741, double* %x1742, align 8, !dbg !3214
  %1310 = load i64, i64* %j, align 8, !dbg !3215
  %conv1743 = sitofp i64 %1310 to double, !dbg !3216
  %add1744 = fadd double %conv1743, 5.000000e-01, !dbg !3217
  %1311 = load double, double* %output_scaling, align 8, !dbg !3218
  %mul1745 = fmul double %add1744, %1311, !dbg !3219
  %1312 = load double*, double** %coeff, align 8, !dbg !3220
  %arrayidx1746 = getelementptr inbounds double, double* %1312, i64 7, !dbg !3220
  %1313 = load double, double* %arrayidx1746, align 8, !dbg !3220
  %mul1747 = fmul double %mul1745, %1313, !dbg !3221
  %1314 = load double*, double** %coeff, align 8, !dbg !3222
  %arrayidx1748 = getelementptr inbounds double, double* %1314, i64 1, !dbg !3222
  %1315 = load double, double* %arrayidx1748, align 8, !dbg !3222
  %add1749 = fadd double %mul1747, %1315, !dbg !3223
  %y1750 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %d1223, i32 0, i32 1, !dbg !3224
  store double %add1749, double* %y1750, align 8, !dbg !3225
  %y1751 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %d1223, i32 0, i32 1, !dbg !3226
  %1316 = load double, double* %y1751, align 8, !dbg !3226
  %x1752 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %d1223, i32 0, i32 0, !dbg !3227
  %1317 = load double, double* %x1752, align 8, !dbg !3227
  %call1753 = call double @sin(double %1317) #6, !dbg !3228
  %mul1754 = fmul double %1316, %call1753, !dbg !3229
  %1318 = load double*, double** %coeff, align 8, !dbg !3230
  %arrayidx1755 = getelementptr inbounds double, double* %1318, i64 2, !dbg !3230
  %1319 = load double, double* %arrayidx1755, align 8, !dbg !3230
  %add1756 = fadd double %mul1754, %1319, !dbg !3231
  %x1757 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %s1224, i32 0, i32 0, !dbg !3232
  store double %add1756, double* %x1757, align 8, !dbg !3233
  %y1758 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %d1223, i32 0, i32 1, !dbg !3234
  %1320 = load double, double* %y1758, align 8, !dbg !3234
  %x1759 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %d1223, i32 0, i32 0, !dbg !3235
  %1321 = load double, double* %x1759, align 8, !dbg !3235
  %call1760 = call double @cos(double %1321) #6, !dbg !3236
  %mul1761 = fmul double %1320, %call1760, !dbg !3237
  %1322 = load double*, double** %coeff, align 8, !dbg !3238
  %arrayidx1762 = getelementptr inbounds double, double* %1322, i64 3, !dbg !3238
  %1323 = load double, double* %arrayidx1762, align 8, !dbg !3238
  %add1763 = fadd double %mul1761, %1323, !dbg !3239
  %y1764 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %s1224, i32 0, i32 1, !dbg !3240
  store double %add1763, double* %y1764, align 8, !dbg !3241
  br label %sw.epilog2082, !dbg !3242

sw.bb1765:                                        ; preds = %for.body1254
  call void @llvm.dbg.declare(metadata double* %ax, metadata !3243, metadata !DIExpression()), !dbg !3245
  call void @llvm.dbg.declare(metadata double* %cx, metadata !3246, metadata !DIExpression()), !dbg !3247
  %1324 = load double*, double** %coeff, align 8, !dbg !3248
  %arrayidx1766 = getelementptr inbounds double, double* %1324, i64 4, !dbg !3248
  %1325 = load double, double* %arrayidx1766, align 8, !dbg !3248
  %x1767 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %d1223, i32 0, i32 0, !dbg !3249
  %1326 = load double, double* %x1767, align 8, !dbg !3250
  %sub1768 = fsub double %1326, %1325, !dbg !3250
  store double %sub1768, double* %x1767, align 8, !dbg !3250
  %1327 = load double*, double** %coeff, align 8, !dbg !3251
  %arrayidx1769 = getelementptr inbounds double, double* %1327, i64 5, !dbg !3251
  %1328 = load double, double* %arrayidx1769, align 8, !dbg !3251
  %y1770 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %d1223, i32 0, i32 1, !dbg !3252
  %1329 = load double, double* %y1770, align 8, !dbg !3253
  %sub1771 = fsub double %1329, %1328, !dbg !3253
  store double %sub1771, double* %y1770, align 8, !dbg !3253
  %1330 = load double*, double** %coeff, align 8, !dbg !3254
  %arrayidx1772 = getelementptr inbounds double, double* %1330, i64 1, !dbg !3254
  %1331 = load double, double* %arrayidx1772, align 8, !dbg !3254
  %x1773 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %d1223, i32 0, i32 0, !dbg !3255
  %1332 = load double, double* %x1773, align 8, !dbg !3256
  %div1774 = fdiv double %1332, %1331, !dbg !3256
  store double %div1774, double* %x1773, align 8, !dbg !3256
  %x1775 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %d1223, i32 0, i32 0, !dbg !3257
  %1333 = load double, double* %x1775, align 8, !dbg !3257
  %call1776 = call double @atan(double %1333) #6, !dbg !3258
  store double %call1776, double* %ax, align 8, !dbg !3259
  %1334 = load double, double* %ax, align 8, !dbg !3260
  %call1777 = call double @cos(double %1334) #6, !dbg !3261
  store double %call1777, double* %cx, align 8, !dbg !3262
  %1335 = load double*, double** %coeff, align 8, !dbg !3263
  %arrayidx1778 = getelementptr inbounds double, double* %1335, i64 1, !dbg !3263
  %1336 = load double, double* %arrayidx1778, align 8, !dbg !3263
  %1337 = load double, double* %ax, align 8, !dbg !3264
  %mul1779 = fmul double %1336, %1337, !dbg !3265
  %x1780 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %s1224, i32 0, i32 0, !dbg !3266
  store double %mul1779, double* %x1780, align 8, !dbg !3267
  %y1781 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %d1223, i32 0, i32 1, !dbg !3268
  %1338 = load double, double* %y1781, align 8, !dbg !3268
  %1339 = load double, double* %cx, align 8, !dbg !3269
  %mul1782 = fmul double %1338, %1339, !dbg !3270
  %y1783 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %s1224, i32 0, i32 1, !dbg !3271
  store double %mul1782, double* %y1783, align 8, !dbg !3272
  %1340 = load %struct._ResampleFilter**, %struct._ResampleFilter*** %resample_filter, align 8, !dbg !3273
  %1341 = load i32, i32* %id, align 4, !dbg !3273
  %idxprom1784 = sext i32 %1341 to i64, !dbg !3273
  %arrayidx1785 = getelementptr inbounds %struct._ResampleFilter*, %struct._ResampleFilter** %1340, i64 %idxprom1784, !dbg !3273
  %1342 = load %struct._ResampleFilter*, %struct._ResampleFilter** %arrayidx1785, align 8, !dbg !3273
  %1343 = load double, double* %output_scaling, align 8, !dbg !3273
  %x1786 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %d1223, i32 0, i32 0, !dbg !3273
  %1344 = load double, double* %x1786, align 8, !dbg !3273
  %x1787 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %d1223, i32 0, i32 0, !dbg !3273
  %1345 = load double, double* %x1787, align 8, !dbg !3273
  %mul1788 = fmul double %1344, %1345, !dbg !3273
  %add1789 = fadd double 1.000000e+00, %mul1788, !dbg !3273
  %div1790 = fdiv double 1.000000e+00, %add1789, !dbg !3273
  %mul1791 = fmul double %1343, %div1790, !dbg !3273
  %1346 = load double, double* %output_scaling, align 8, !dbg !3273
  %mul1792 = fmul double %1346, 0.000000e+00, !dbg !3273
  %1347 = load double, double* %output_scaling, align 8, !dbg !3273
  %x1793 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %d1223, i32 0, i32 0, !dbg !3273
  %1348 = load double, double* %x1793, align 8, !dbg !3273
  %fneg1794 = fneg double %1348, !dbg !3273
  %y1795 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %s1224, i32 0, i32 1, !dbg !3273
  %1349 = load double, double* %y1795, align 8, !dbg !3273
  %mul1796 = fmul double %fneg1794, %1349, !dbg !3273
  %1350 = load double, double* %cx, align 8, !dbg !3273
  %mul1797 = fmul double %mul1796, %1350, !dbg !3273
  %1351 = load double, double* %cx, align 8, !dbg !3273
  %mul1798 = fmul double %mul1797, %1351, !dbg !3273
  %1352 = load double*, double** %coeff, align 8, !dbg !3273
  %arrayidx1799 = getelementptr inbounds double, double* %1352, i64 1, !dbg !3273
  %1353 = load double, double* %arrayidx1799, align 8, !dbg !3273
  %div1800 = fdiv double %mul1798, %1353, !dbg !3273
  %mul1801 = fmul double %1347, %div1800, !dbg !3273
  %1354 = load double, double* %output_scaling, align 8, !dbg !3273
  %y1802 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %s1224, i32 0, i32 1, !dbg !3273
  %1355 = load double, double* %y1802, align 8, !dbg !3273
  %y1803 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %d1223, i32 0, i32 1, !dbg !3273
  %1356 = load double, double* %y1803, align 8, !dbg !3273
  %div1804 = fdiv double %1355, %1356, !dbg !3273
  %mul1805 = fmul double %1354, %div1804, !dbg !3273
  call void @ScaleResampleFilter(%struct._ResampleFilter* %1342, double %mul1791, double %mul1792, double %mul1801, double %mul1805), !dbg !3273
  %1357 = load double*, double** %coeff, align 8, !dbg !3274
  %arrayidx1806 = getelementptr inbounds double, double* %1357, i64 2, !dbg !3274
  %1358 = load double, double* %arrayidx1806, align 8, !dbg !3274
  %x1807 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %s1224, i32 0, i32 0, !dbg !3275
  %1359 = load double, double* %x1807, align 8, !dbg !3276
  %add1808 = fadd double %1359, %1358, !dbg !3276
  store double %add1808, double* %x1807, align 8, !dbg !3276
  %1360 = load double*, double** %coeff, align 8, !dbg !3277
  %arrayidx1809 = getelementptr inbounds double, double* %1360, i64 3, !dbg !3277
  %1361 = load double, double* %arrayidx1809, align 8, !dbg !3277
  %y1810 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %s1224, i32 0, i32 1, !dbg !3278
  %1362 = load double, double* %y1810, align 8, !dbg !3279
  %add1811 = fadd double %1362, %1361, !dbg !3279
  store double %add1811, double* %y1810, align 8, !dbg !3279
  br label %sw.epilog2082, !dbg !3280

sw.bb1812:                                        ; preds = %for.body1254
  %1363 = load double*, double** %coeff, align 8, !dbg !3281
  %arrayidx1813 = getelementptr inbounds double, double* %1363, i64 4, !dbg !3281
  %1364 = load double, double* %arrayidx1813, align 8, !dbg !3281
  %x1814 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %d1223, i32 0, i32 0, !dbg !3283
  %1365 = load double, double* %x1814, align 8, !dbg !3284
  %sub1815 = fsub double %1365, %1364, !dbg !3284
  store double %sub1815, double* %x1814, align 8, !dbg !3284
  %1366 = load double*, double** %coeff, align 8, !dbg !3285
  %arrayidx1816 = getelementptr inbounds double, double* %1366, i64 5, !dbg !3285
  %1367 = load double, double* %arrayidx1816, align 8, !dbg !3285
  %y1817 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %d1223, i32 0, i32 1, !dbg !3286
  %1368 = load double, double* %y1817, align 8, !dbg !3287
  %sub1818 = fsub double %1368, %1367, !dbg !3287
  store double %sub1818, double* %y1817, align 8, !dbg !3287
  %1369 = load double*, double** %coeff, align 8, !dbg !3288
  %arrayidx1819 = getelementptr inbounds double, double* %1369, i64 1, !dbg !3288
  %1370 = load double, double* %arrayidx1819, align 8, !dbg !3288
  %mul1820 = fmul double %1370, 0x3FF921FB54442D18, !dbg !3289
  %x1821 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %d1223, i32 0, i32 0, !dbg !3290
  %1371 = load double, double* %x1821, align 8, !dbg !3290
  %1372 = call double @llvm.fabs.f64(double %1371), !dbg !3291
  %sub1822 = fsub double %mul1820, %1372, !dbg !3292
  %1373 = load double, double* %output_scaling, align 8, !dbg !3293
  %div1823 = fdiv double %sub1822, %1373, !dbg !3294
  %add1824 = fadd double %div1823, 5.000000e-01, !dbg !3295
  store double %add1824, double* %validity, align 8, !dbg !3296
  %1374 = load double, double* %validity, align 8, !dbg !3297
  %cmp1825 = fcmp ogt double %1374, 0.000000e+00, !dbg !3299
  br i1 %cmp1825, label %if.then1827, label %if.end1882, !dbg !3300

if.then1827:                                      ; preds = %sw.bb1812
  call void @llvm.dbg.declare(metadata double* %cx1828, metadata !3301, metadata !DIExpression()), !dbg !3303
  call void @llvm.dbg.declare(metadata double* %tx, metadata !3304, metadata !DIExpression()), !dbg !3305
  %1375 = load double*, double** %coeff, align 8, !dbg !3306
  %arrayidx1829 = getelementptr inbounds double, double* %1375, i64 1, !dbg !3306
  %1376 = load double, double* %arrayidx1829, align 8, !dbg !3306
  %x1830 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %d1223, i32 0, i32 0, !dbg !3307
  %1377 = load double, double* %x1830, align 8, !dbg !3308
  %div1831 = fdiv double %1377, %1376, !dbg !3308
  store double %div1831, double* %x1830, align 8, !dbg !3308
  %x1832 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %d1223, i32 0, i32 0, !dbg !3309
  %1378 = load double, double* %x1832, align 8, !dbg !3309
  %call1833 = call double @cos(double %1378) #6, !dbg !3310
  %div1834 = fdiv double 1.000000e+00, %call1833, !dbg !3311
  store double %div1834, double* %cx1828, align 8, !dbg !3312
  %x1835 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %d1223, i32 0, i32 0, !dbg !3313
  %1379 = load double, double* %x1835, align 8, !dbg !3313
  %call1836 = call double @tan(double %1379) #6, !dbg !3314
  store double %call1836, double* %tx, align 8, !dbg !3315
  %1380 = load double*, double** %coeff, align 8, !dbg !3316
  %arrayidx1837 = getelementptr inbounds double, double* %1380, i64 1, !dbg !3316
  %1381 = load double, double* %arrayidx1837, align 8, !dbg !3316
  %1382 = load double, double* %tx, align 8, !dbg !3317
  %mul1838 = fmul double %1381, %1382, !dbg !3318
  %x1839 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %s1224, i32 0, i32 0, !dbg !3319
  store double %mul1838, double* %x1839, align 8, !dbg !3320
  %y1840 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %d1223, i32 0, i32 1, !dbg !3321
  %1383 = load double, double* %y1840, align 8, !dbg !3321
  %1384 = load double, double* %cx1828, align 8, !dbg !3322
  %mul1841 = fmul double %1383, %1384, !dbg !3323
  %y1842 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %s1224, i32 0, i32 1, !dbg !3324
  store double %mul1841, double* %y1842, align 8, !dbg !3325
  %1385 = load %struct._ResampleFilter**, %struct._ResampleFilter*** %resample_filter, align 8, !dbg !3326
  %1386 = load i32, i32* %id, align 4, !dbg !3326
  %idxprom1843 = sext i32 %1386 to i64, !dbg !3326
  %arrayidx1844 = getelementptr inbounds %struct._ResampleFilter*, %struct._ResampleFilter** %1385, i64 %idxprom1843, !dbg !3326
  %1387 = load %struct._ResampleFilter*, %struct._ResampleFilter** %arrayidx1844, align 8, !dbg !3326
  %1388 = load double, double* %output_scaling, align 8, !dbg !3326
  %1389 = load double, double* %cx1828, align 8, !dbg !3326
  %1390 = load double, double* %cx1828, align 8, !dbg !3326
  %mul1845 = fmul double %1389, %1390, !dbg !3326
  %mul1846 = fmul double %1388, %mul1845, !dbg !3326
  %1391 = load double, double* %output_scaling, align 8, !dbg !3326
  %mul1847 = fmul double %1391, 0.000000e+00, !dbg !3326
  %1392 = load double, double* %output_scaling, align 8, !dbg !3326
  %y1848 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %s1224, i32 0, i32 1, !dbg !3326
  %1393 = load double, double* %y1848, align 8, !dbg !3326
  %1394 = load double, double* %cx1828, align 8, !dbg !3326
  %mul1849 = fmul double %1393, %1394, !dbg !3326
  %1395 = load double*, double** %coeff, align 8, !dbg !3326
  %arrayidx1850 = getelementptr inbounds double, double* %1395, i64 1, !dbg !3326
  %1396 = load double, double* %arrayidx1850, align 8, !dbg !3326
  %div1851 = fdiv double %mul1849, %1396, !dbg !3326
  %mul1852 = fmul double %1392, %div1851, !dbg !3326
  %1397 = load double, double* %output_scaling, align 8, !dbg !3326
  %1398 = load double, double* %cx1828, align 8, !dbg !3326
  %mul1853 = fmul double %1397, %1398, !dbg !3326
  call void @ScaleResampleFilter(%struct._ResampleFilter* %1387, double %mul1846, double %mul1847, double %mul1852, double %mul1853), !dbg !3326
  %x1854 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %d1223, i32 0, i32 0, !dbg !3327
  %1399 = load double, double* %x1854, align 8, !dbg !3327
  %cmp1855 = fcmp oeq double %1399, 5.000000e-01, !dbg !3329
  br i1 %cmp1855, label %land.lhs.true1857, label %if.end1881, !dbg !3330

land.lhs.true1857:                                ; preds = %if.then1827
  %y1858 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %d1223, i32 0, i32 1, !dbg !3331
  %1400 = load double, double* %y1858, align 8, !dbg !3331
  %cmp1859 = fcmp oeq double %1400, 5.000000e-01, !dbg !3332
  br i1 %cmp1859, label %if.then1861, label %if.end1881, !dbg !3333

if.then1861:                                      ; preds = %land.lhs.true1857
  %1401 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !3334
  %x1862 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %d1223, i32 0, i32 0, !dbg !3336
  %1402 = load double, double* %x1862, align 8, !dbg !3336
  %1403 = load double*, double** %coeff, align 8, !dbg !3337
  %arrayidx1863 = getelementptr inbounds double, double* %1403, i64 1, !dbg !3337
  %1404 = load double, double* %arrayidx1863, align 8, !dbg !3337
  %mul1864 = fmul double %1402, %1404, !dbg !3338
  %y1865 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %d1223, i32 0, i32 1, !dbg !3339
  %1405 = load double, double* %y1865, align 8, !dbg !3339
  %x1866 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %s1224, i32 0, i32 0, !dbg !3340
  %1406 = load double, double* %x1866, align 8, !dbg !3340
  %y1867 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %s1224, i32 0, i32 1, !dbg !3341
  %1407 = load double, double* %y1867, align 8, !dbg !3341
  %call1868 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1401, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.101, i64 0, i64 0), double %mul1864, double %1405, double %1406, double %1407), !dbg !3342
  %1408 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !3343
  %1409 = load double*, double** %coeff, align 8, !dbg !3344
  %arrayidx1869 = getelementptr inbounds double, double* %1409, i64 1, !dbg !3344
  %1410 = load double, double* %arrayidx1869, align 8, !dbg !3344
  %x1870 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %d1223, i32 0, i32 0, !dbg !3345
  %1411 = load double, double* %x1870, align 8, !dbg !3345
  %mul1871 = fmul double %1411, 1.800000e+02, !dbg !3346
  %div1872 = fdiv double %mul1871, 0x400921FB54442D18, !dbg !3347
  %1412 = load double, double* %validity, align 8, !dbg !3348
  %call1873 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1408, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.102, i64 0, i64 0), double %1410, double %div1872, double %1412), !dbg !3349
  %1413 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !3350
  %1414 = load double, double* %cx1828, align 8, !dbg !3351
  %1415 = load double, double* %cx1828, align 8, !dbg !3352
  %mul1874 = fmul double %1414, %1415, !dbg !3353
  %y1875 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %s1224, i32 0, i32 1, !dbg !3354
  %1416 = load double, double* %y1875, align 8, !dbg !3354
  %1417 = load double, double* %cx1828, align 8, !dbg !3355
  %mul1876 = fmul double %1416, %1417, !dbg !3356
  %1418 = load double*, double** %coeff, align 8, !dbg !3357
  %arrayidx1877 = getelementptr inbounds double, double* %1418, i64 1, !dbg !3357
  %1419 = load double, double* %arrayidx1877, align 8, !dbg !3357
  %div1878 = fdiv double %mul1876, %1419, !dbg !3358
  %1420 = load double, double* %cx1828, align 8, !dbg !3359
  %call1879 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1413, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.103, i64 0, i64 0), double %mul1874, double 0.000000e+00, double %div1878, double %1420), !dbg !3360
  %1421 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !3361
  %call1880 = call i32 @fflush(%struct._IO_FILE* %1421), !dbg !3362
  br label %if.end1881, !dbg !3363

if.end1881:                                       ; preds = %if.then1861, %land.lhs.true1857, %if.then1827
  br label %if.end1882, !dbg !3364

if.end1882:                                       ; preds = %if.end1881, %sw.bb1812
  %1422 = load double*, double** %coeff, align 8, !dbg !3365
  %arrayidx1883 = getelementptr inbounds double, double* %1422, i64 2, !dbg !3365
  %1423 = load double, double* %arrayidx1883, align 8, !dbg !3365
  %x1884 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %s1224, i32 0, i32 0, !dbg !3366
  %1424 = load double, double* %x1884, align 8, !dbg !3367
  %add1885 = fadd double %1424, %1423, !dbg !3367
  store double %add1885, double* %x1884, align 8, !dbg !3367
  %1425 = load double*, double** %coeff, align 8, !dbg !3368
  %arrayidx1886 = getelementptr inbounds double, double* %1425, i64 3, !dbg !3368
  %1426 = load double, double* %arrayidx1886, align 8, !dbg !3368
  %y1887 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %s1224, i32 0, i32 1, !dbg !3369
  %1427 = load double, double* %y1887, align 8, !dbg !3370
  %add1888 = fadd double %1427, %1426, !dbg !3370
  store double %add1888, double* %y1887, align 8, !dbg !3370
  br label %sw.epilog2082, !dbg !3371

sw.bb1889:                                        ; preds = %for.body1254, %for.body1254
  call void @llvm.dbg.declare(metadata double* %r1890, metadata !3372, metadata !DIExpression()), !dbg !3374
  call void @llvm.dbg.declare(metadata double* %fx, metadata !3375, metadata !DIExpression()), !dbg !3376
  call void @llvm.dbg.declare(metadata double* %fy, metadata !3377, metadata !DIExpression()), !dbg !3378
  call void @llvm.dbg.declare(metadata double* %gx, metadata !3379, metadata !DIExpression()), !dbg !3380
  call void @llvm.dbg.declare(metadata double* %gy, metadata !3381, metadata !DIExpression()), !dbg !3382
  %1428 = load double*, double** %coeff, align 8, !dbg !3383
  %arrayidx1891 = getelementptr inbounds double, double* %1428, i64 8, !dbg !3383
  %1429 = load double, double* %arrayidx1891, align 8, !dbg !3383
  %x1892 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %d1223, i32 0, i32 0, !dbg !3384
  %1430 = load double, double* %x1892, align 8, !dbg !3385
  %sub1893 = fsub double %1430, %1429, !dbg !3385
  store double %sub1893, double* %x1892, align 8, !dbg !3385
  %1431 = load double*, double** %coeff, align 8, !dbg !3386
  %arrayidx1894 = getelementptr inbounds double, double* %1431, i64 9, !dbg !3386
  %1432 = load double, double* %arrayidx1894, align 8, !dbg !3386
  %y1895 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %d1223, i32 0, i32 1, !dbg !3387
  %1433 = load double, double* %y1895, align 8, !dbg !3388
  %sub1896 = fsub double %1433, %1432, !dbg !3388
  store double %sub1896, double* %y1895, align 8, !dbg !3388
  %x1897 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %d1223, i32 0, i32 0, !dbg !3389
  %1434 = load double, double* %x1897, align 8, !dbg !3389
  %x1898 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %d1223, i32 0, i32 0, !dbg !3390
  %1435 = load double, double* %x1898, align 8, !dbg !3390
  %mul1899 = fmul double %1434, %1435, !dbg !3391
  %y1900 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %d1223, i32 0, i32 1, !dbg !3392
  %1436 = load double, double* %y1900, align 8, !dbg !3392
  %y1901 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %d1223, i32 0, i32 1, !dbg !3393
  %1437 = load double, double* %y1901, align 8, !dbg !3393
  %mul1902 = fmul double %1436, %1437, !dbg !3394
  %add1903 = fadd double %mul1899, %mul1902, !dbg !3395
  %call1904 = call double @sqrt(double %add1903) #6, !dbg !3396
  store double %call1904, double* %r1890, align 8, !dbg !3397
  %1438 = load double, double* %r1890, align 8, !dbg !3398
  %cmp1905 = fcmp ogt double %1438, 1.000000e-15, !dbg !3400
  br i1 %cmp1905, label %if.then1907, label %if.else1994, !dbg !3401

if.then1907:                                      ; preds = %sw.bb1889
  %1439 = load double*, double** %coeff, align 8, !dbg !3402
  %arrayidx1908 = getelementptr inbounds double, double* %1439, i64 0, !dbg !3402
  %1440 = load double, double* %arrayidx1908, align 8, !dbg !3402
  %1441 = load double, double* %r1890, align 8, !dbg !3404
  %mul1909 = fmul double %1440, %1441, !dbg !3405
  %1442 = load double*, double** %coeff, align 8, !dbg !3406
  %arrayidx1910 = getelementptr inbounds double, double* %1442, i64 1, !dbg !3406
  %1443 = load double, double* %arrayidx1910, align 8, !dbg !3406
  %add1911 = fadd double %mul1909, %1443, !dbg !3407
  %1444 = load double, double* %r1890, align 8, !dbg !3408
  %mul1912 = fmul double %add1911, %1444, !dbg !3409
  %1445 = load double*, double** %coeff, align 8, !dbg !3410
  %arrayidx1913 = getelementptr inbounds double, double* %1445, i64 2, !dbg !3410
  %1446 = load double, double* %arrayidx1913, align 8, !dbg !3410
  %add1914 = fadd double %mul1912, %1446, !dbg !3411
  %1447 = load double, double* %r1890, align 8, !dbg !3412
  %mul1915 = fmul double %add1914, %1447, !dbg !3413
  %1448 = load double*, double** %coeff, align 8, !dbg !3414
  %arrayidx1916 = getelementptr inbounds double, double* %1448, i64 3, !dbg !3414
  %1449 = load double, double* %arrayidx1916, align 8, !dbg !3414
  %add1917 = fadd double %mul1915, %1449, !dbg !3415
  store double %add1917, double* %fx, align 8, !dbg !3416
  %1450 = load double*, double** %coeff, align 8, !dbg !3417
  %arrayidx1918 = getelementptr inbounds double, double* %1450, i64 4, !dbg !3417
  %1451 = load double, double* %arrayidx1918, align 8, !dbg !3417
  %1452 = load double, double* %r1890, align 8, !dbg !3418
  %mul1919 = fmul double %1451, %1452, !dbg !3419
  %1453 = load double*, double** %coeff, align 8, !dbg !3420
  %arrayidx1920 = getelementptr inbounds double, double* %1453, i64 5, !dbg !3420
  %1454 = load double, double* %arrayidx1920, align 8, !dbg !3420
  %add1921 = fadd double %mul1919, %1454, !dbg !3421
  %1455 = load double, double* %r1890, align 8, !dbg !3422
  %mul1922 = fmul double %add1921, %1455, !dbg !3423
  %1456 = load double*, double** %coeff, align 8, !dbg !3424
  %arrayidx1923 = getelementptr inbounds double, double* %1456, i64 6, !dbg !3424
  %1457 = load double, double* %arrayidx1923, align 8, !dbg !3424
  %add1924 = fadd double %mul1922, %1457, !dbg !3425
  %1458 = load double, double* %r1890, align 8, !dbg !3426
  %mul1925 = fmul double %add1924, %1458, !dbg !3427
  %1459 = load double*, double** %coeff, align 8, !dbg !3428
  %arrayidx1926 = getelementptr inbounds double, double* %1459, i64 7, !dbg !3428
  %1460 = load double, double* %arrayidx1926, align 8, !dbg !3428
  %add1927 = fadd double %mul1925, %1460, !dbg !3429
  store double %add1927, double* %fy, align 8, !dbg !3430
  %1461 = load double*, double** %coeff, align 8, !dbg !3431
  %arrayidx1928 = getelementptr inbounds double, double* %1461, i64 0, !dbg !3431
  %1462 = load double, double* %arrayidx1928, align 8, !dbg !3431
  %mul1929 = fmul double 3.000000e+00, %1462, !dbg !3432
  %1463 = load double, double* %r1890, align 8, !dbg !3433
  %mul1930 = fmul double %mul1929, %1463, !dbg !3434
  %1464 = load double*, double** %coeff, align 8, !dbg !3435
  %arrayidx1931 = getelementptr inbounds double, double* %1464, i64 1, !dbg !3435
  %1465 = load double, double* %arrayidx1931, align 8, !dbg !3435
  %mul1932 = fmul double 2.000000e+00, %1465, !dbg !3436
  %add1933 = fadd double %mul1930, %mul1932, !dbg !3437
  %1466 = load double, double* %r1890, align 8, !dbg !3438
  %mul1934 = fmul double %add1933, %1466, !dbg !3439
  %1467 = load double*, double** %coeff, align 8, !dbg !3440
  %arrayidx1935 = getelementptr inbounds double, double* %1467, i64 2, !dbg !3440
  %1468 = load double, double* %arrayidx1935, align 8, !dbg !3440
  %add1936 = fadd double %mul1934, %1468, !dbg !3441
  %1469 = load double, double* %r1890, align 8, !dbg !3442
  %div1937 = fdiv double %add1936, %1469, !dbg !3443
  store double %div1937, double* %gx, align 8, !dbg !3444
  %1470 = load double*, double** %coeff, align 8, !dbg !3445
  %arrayidx1938 = getelementptr inbounds double, double* %1470, i64 4, !dbg !3445
  %1471 = load double, double* %arrayidx1938, align 8, !dbg !3445
  %mul1939 = fmul double 3.000000e+00, %1471, !dbg !3446
  %1472 = load double, double* %r1890, align 8, !dbg !3447
  %mul1940 = fmul double %mul1939, %1472, !dbg !3448
  %1473 = load double*, double** %coeff, align 8, !dbg !3449
  %arrayidx1941 = getelementptr inbounds double, double* %1473, i64 5, !dbg !3449
  %1474 = load double, double* %arrayidx1941, align 8, !dbg !3449
  %mul1942 = fmul double 2.000000e+00, %1474, !dbg !3450
  %add1943 = fadd double %mul1940, %mul1942, !dbg !3451
  %1475 = load double, double* %r1890, align 8, !dbg !3452
  %mul1944 = fmul double %add1943, %1475, !dbg !3453
  %1476 = load double*, double** %coeff, align 8, !dbg !3454
  %arrayidx1945 = getelementptr inbounds double, double* %1476, i64 6, !dbg !3454
  %1477 = load double, double* %arrayidx1945, align 8, !dbg !3454
  %add1946 = fadd double %mul1944, %1477, !dbg !3455
  %1478 = load double, double* %r1890, align 8, !dbg !3456
  %div1947 = fdiv double %add1946, %1478, !dbg !3457
  store double %div1947, double* %gy, align 8, !dbg !3458
  %1479 = load i32, i32* %method.addr, align 4, !dbg !3459
  %cmp1948 = icmp eq i32 %1479, 15, !dbg !3461
  br i1 %cmp1948, label %if.then1950, label %if.end1959, !dbg !3462

if.then1950:                                      ; preds = %if.then1907
  %1480 = load double, double* %fx, align 8, !dbg !3463
  %div1951 = fdiv double 1.000000e+00, %1480, !dbg !3465
  store double %div1951, double* %fx, align 8, !dbg !3466
  %1481 = load double, double* %fy, align 8, !dbg !3467
  %div1952 = fdiv double 1.000000e+00, %1481, !dbg !3468
  store double %div1952, double* %fy, align 8, !dbg !3469
  %1482 = load double, double* %fx, align 8, !dbg !3470
  %fneg1953 = fneg double %1482, !dbg !3471
  %1483 = load double, double* %fx, align 8, !dbg !3472
  %mul1954 = fmul double %fneg1953, %1483, !dbg !3473
  %1484 = load double, double* %gx, align 8, !dbg !3474
  %mul1955 = fmul double %1484, %mul1954, !dbg !3474
  store double %mul1955, double* %gx, align 8, !dbg !3474
  %1485 = load double, double* %fy, align 8, !dbg !3475
  %fneg1956 = fneg double %1485, !dbg !3476
  %1486 = load double, double* %fy, align 8, !dbg !3477
  %mul1957 = fmul double %fneg1956, %1486, !dbg !3478
  %1487 = load double, double* %gy, align 8, !dbg !3479
  %mul1958 = fmul double %1487, %mul1957, !dbg !3479
  store double %mul1958, double* %gy, align 8, !dbg !3479
  br label %if.end1959, !dbg !3480

if.end1959:                                       ; preds = %if.then1950, %if.then1907
  %x1960 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %d1223, i32 0, i32 0, !dbg !3481
  %1488 = load double, double* %x1960, align 8, !dbg !3481
  %1489 = load double, double* %fx, align 8, !dbg !3482
  %mul1961 = fmul double %1488, %1489, !dbg !3483
  %1490 = load double*, double** %coeff, align 8, !dbg !3484
  %arrayidx1962 = getelementptr inbounds double, double* %1490, i64 8, !dbg !3484
  %1491 = load double, double* %arrayidx1962, align 8, !dbg !3484
  %add1963 = fadd double %mul1961, %1491, !dbg !3485
  %x1964 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %s1224, i32 0, i32 0, !dbg !3486
  store double %add1963, double* %x1964, align 8, !dbg !3487
  %y1965 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %d1223, i32 0, i32 1, !dbg !3488
  %1492 = load double, double* %y1965, align 8, !dbg !3488
  %1493 = load double, double* %fy, align 8, !dbg !3489
  %mul1966 = fmul double %1492, %1493, !dbg !3490
  %1494 = load double*, double** %coeff, align 8, !dbg !3491
  %arrayidx1967 = getelementptr inbounds double, double* %1494, i64 9, !dbg !3491
  %1495 = load double, double* %arrayidx1967, align 8, !dbg !3491
  %add1968 = fadd double %mul1966, %1495, !dbg !3492
  %y1969 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %s1224, i32 0, i32 1, !dbg !3493
  store double %add1968, double* %y1969, align 8, !dbg !3494
  %1496 = load %struct._ResampleFilter**, %struct._ResampleFilter*** %resample_filter, align 8, !dbg !3495
  %1497 = load i32, i32* %id, align 4, !dbg !3495
  %idxprom1970 = sext i32 %1497 to i64, !dbg !3495
  %arrayidx1971 = getelementptr inbounds %struct._ResampleFilter*, %struct._ResampleFilter** %1496, i64 %idxprom1970, !dbg !3495
  %1498 = load %struct._ResampleFilter*, %struct._ResampleFilter** %arrayidx1971, align 8, !dbg !3495
  %1499 = load double, double* %output_scaling, align 8, !dbg !3495
  %1500 = load double, double* %gx, align 8, !dbg !3495
  %x1972 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %d1223, i32 0, i32 0, !dbg !3495
  %1501 = load double, double* %x1972, align 8, !dbg !3495
  %mul1973 = fmul double %1500, %1501, !dbg !3495
  %x1974 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %d1223, i32 0, i32 0, !dbg !3495
  %1502 = load double, double* %x1974, align 8, !dbg !3495
  %mul1975 = fmul double %mul1973, %1502, !dbg !3495
  %1503 = load double, double* %fx, align 8, !dbg !3495
  %add1976 = fadd double %mul1975, %1503, !dbg !3495
  %mul1977 = fmul double %1499, %add1976, !dbg !3495
  %1504 = load double, double* %output_scaling, align 8, !dbg !3495
  %1505 = load double, double* %gx, align 8, !dbg !3495
  %x1978 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %d1223, i32 0, i32 0, !dbg !3495
  %1506 = load double, double* %x1978, align 8, !dbg !3495
  %mul1979 = fmul double %1505, %1506, !dbg !3495
  %y1980 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %d1223, i32 0, i32 1, !dbg !3495
  %1507 = load double, double* %y1980, align 8, !dbg !3495
  %mul1981 = fmul double %mul1979, %1507, !dbg !3495
  %mul1982 = fmul double %1504, %mul1981, !dbg !3495
  %1508 = load double, double* %output_scaling, align 8, !dbg !3495
  %1509 = load double, double* %gy, align 8, !dbg !3495
  %x1983 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %d1223, i32 0, i32 0, !dbg !3495
  %1510 = load double, double* %x1983, align 8, !dbg !3495
  %mul1984 = fmul double %1509, %1510, !dbg !3495
  %y1985 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %d1223, i32 0, i32 1, !dbg !3495
  %1511 = load double, double* %y1985, align 8, !dbg !3495
  %mul1986 = fmul double %mul1984, %1511, !dbg !3495
  %mul1987 = fmul double %1508, %mul1986, !dbg !3495
  %1512 = load double, double* %output_scaling, align 8, !dbg !3495
  %1513 = load double, double* %gy, align 8, !dbg !3495
  %y1988 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %d1223, i32 0, i32 1, !dbg !3495
  %1514 = load double, double* %y1988, align 8, !dbg !3495
  %mul1989 = fmul double %1513, %1514, !dbg !3495
  %y1990 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %d1223, i32 0, i32 1, !dbg !3495
  %1515 = load double, double* %y1990, align 8, !dbg !3495
  %mul1991 = fmul double %mul1989, %1515, !dbg !3495
  %1516 = load double, double* %fy, align 8, !dbg !3495
  %add1992 = fadd double %mul1991, %1516, !dbg !3495
  %mul1993 = fmul double %1512, %add1992, !dbg !3495
  call void @ScaleResampleFilter(%struct._ResampleFilter* %1498, double %mul1977, double %mul1982, double %mul1987, double %mul1993), !dbg !3495
  br label %if.end2018, !dbg !3496

if.else1994:                                      ; preds = %sw.bb1889
  %1517 = load i32, i32* %method.addr, align 4, !dbg !3497
  %cmp1995 = icmp eq i32 %1517, 14, !dbg !3500
  br i1 %cmp1995, label %if.then1997, label %if.else2006, !dbg !3501

if.then1997:                                      ; preds = %if.else1994
  %1518 = load %struct._ResampleFilter**, %struct._ResampleFilter*** %resample_filter, align 8, !dbg !3502
  %1519 = load i32, i32* %id, align 4, !dbg !3502
  %idxprom1998 = sext i32 %1519 to i64, !dbg !3502
  %arrayidx1999 = getelementptr inbounds %struct._ResampleFilter*, %struct._ResampleFilter** %1518, i64 %idxprom1998, !dbg !3502
  %1520 = load %struct._ResampleFilter*, %struct._ResampleFilter** %arrayidx1999, align 8, !dbg !3502
  %1521 = load double, double* %output_scaling, align 8, !dbg !3502
  %1522 = load double*, double** %coeff, align 8, !dbg !3502
  %arrayidx2000 = getelementptr inbounds double, double* %1522, i64 3, !dbg !3502
  %1523 = load double, double* %arrayidx2000, align 8, !dbg !3502
  %mul2001 = fmul double %1521, %1523, !dbg !3502
  %1524 = load double, double* %output_scaling, align 8, !dbg !3502
  %mul2002 = fmul double %1524, 0.000000e+00, !dbg !3502
  %1525 = load double, double* %output_scaling, align 8, !dbg !3502
  %mul2003 = fmul double %1525, 0.000000e+00, !dbg !3502
  %1526 = load double, double* %output_scaling, align 8, !dbg !3502
  %1527 = load double*, double** %coeff, align 8, !dbg !3502
  %arrayidx2004 = getelementptr inbounds double, double* %1527, i64 7, !dbg !3502
  %1528 = load double, double* %arrayidx2004, align 8, !dbg !3502
  %mul2005 = fmul double %1526, %1528, !dbg !3502
  call void @ScaleResampleFilter(%struct._ResampleFilter* %1520, double %mul2001, double %mul2002, double %mul2003, double %mul2005), !dbg !3502
  br label %if.end2017, !dbg !3502

if.else2006:                                      ; preds = %if.else1994
  %1529 = load %struct._ResampleFilter**, %struct._ResampleFilter*** %resample_filter, align 8, !dbg !3503
  %1530 = load i32, i32* %id, align 4, !dbg !3503
  %idxprom2007 = sext i32 %1530 to i64, !dbg !3503
  %arrayidx2008 = getelementptr inbounds %struct._ResampleFilter*, %struct._ResampleFilter** %1529, i64 %idxprom2007, !dbg !3503
  %1531 = load %struct._ResampleFilter*, %struct._ResampleFilter** %arrayidx2008, align 8, !dbg !3503
  %1532 = load double, double* %output_scaling, align 8, !dbg !3503
  %1533 = load double*, double** %coeff, align 8, !dbg !3503
  %arrayidx2009 = getelementptr inbounds double, double* %1533, i64 3, !dbg !3503
  %1534 = load double, double* %arrayidx2009, align 8, !dbg !3503
  %div2010 = fdiv double 1.000000e+00, %1534, !dbg !3503
  %mul2011 = fmul double %1532, %div2010, !dbg !3503
  %1535 = load double, double* %output_scaling, align 8, !dbg !3503
  %mul2012 = fmul double %1535, 0.000000e+00, !dbg !3503
  %1536 = load double, double* %output_scaling, align 8, !dbg !3503
  %mul2013 = fmul double %1536, 0.000000e+00, !dbg !3503
  %1537 = load double, double* %output_scaling, align 8, !dbg !3503
  %1538 = load double*, double** %coeff, align 8, !dbg !3503
  %arrayidx2014 = getelementptr inbounds double, double* %1538, i64 7, !dbg !3503
  %1539 = load double, double* %arrayidx2014, align 8, !dbg !3503
  %div2015 = fdiv double 1.000000e+00, %1539, !dbg !3503
  %mul2016 = fmul double %1537, %div2015, !dbg !3503
  call void @ScaleResampleFilter(%struct._ResampleFilter* %1531, double %mul2011, double %mul2012, double %mul2013, double %mul2016), !dbg !3503
  br label %if.end2017

if.end2017:                                       ; preds = %if.else2006, %if.then1997
  br label %if.end2018

if.end2018:                                       ; preds = %if.end2017, %if.end1959
  br label %sw.epilog2082, !dbg !3504

sw.bb2019:                                        ; preds = %for.body1254
  call void @llvm.dbg.declare(metadata i64* %i2020, metadata !3505, metadata !DIExpression()), !dbg !3507
  call void @llvm.dbg.declare(metadata double* %denominator, metadata !3508, metadata !DIExpression()), !dbg !3509
  %y2021 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %s1224, i32 0, i32 1, !dbg !3510
  store double 0.000000e+00, double* %y2021, align 8, !dbg !3511
  %x2022 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %s1224, i32 0, i32 0, !dbg !3512
  store double 0.000000e+00, double* %x2022, align 8, !dbg !3513
  store double 0.000000e+00, double* %denominator, align 8, !dbg !3514
  store i64 0, i64* %i2020, align 8, !dbg !3515
  br label %for.cond2023, !dbg !3517

for.cond2023:                                     ; preds = %for.inc2068, %sw.bb2019
  %1540 = load i64, i64* %i2020, align 8, !dbg !3518
  %1541 = load i64, i64* %number_arguments.addr, align 8, !dbg !3520
  %cmp2024 = icmp ult i64 %1540, %1541, !dbg !3521
  br i1 %cmp2024, label %for.body2026, label %for.end2070, !dbg !3522

for.body2026:                                     ; preds = %for.cond2023
  call void @llvm.dbg.declare(metadata double* %weight, metadata !3523, metadata !DIExpression()), !dbg !3525
  %x2027 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %d1223, i32 0, i32 0, !dbg !3526
  %1542 = load double, double* %x2027, align 8, !dbg !3526
  %1543 = load double*, double** %arguments.addr, align 8, !dbg !3527
  %1544 = load i64, i64* %i2020, align 8, !dbg !3528
  %add2028 = add i64 %1544, 2, !dbg !3529
  %arrayidx2029 = getelementptr inbounds double, double* %1543, i64 %add2028, !dbg !3527
  %1545 = load double, double* %arrayidx2029, align 8, !dbg !3527
  %sub2030 = fsub double %1542, %1545, !dbg !3530
  %x2031 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %d1223, i32 0, i32 0, !dbg !3531
  %1546 = load double, double* %x2031, align 8, !dbg !3531
  %1547 = load double*, double** %arguments.addr, align 8, !dbg !3532
  %1548 = load i64, i64* %i2020, align 8, !dbg !3533
  %add2032 = add i64 %1548, 2, !dbg !3534
  %arrayidx2033 = getelementptr inbounds double, double* %1547, i64 %add2032, !dbg !3532
  %1549 = load double, double* %arrayidx2033, align 8, !dbg !3532
  %sub2034 = fsub double %1546, %1549, !dbg !3535
  %mul2035 = fmul double %sub2030, %sub2034, !dbg !3536
  %y2036 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %d1223, i32 0, i32 1, !dbg !3537
  %1550 = load double, double* %y2036, align 8, !dbg !3537
  %1551 = load double*, double** %arguments.addr, align 8, !dbg !3538
  %1552 = load i64, i64* %i2020, align 8, !dbg !3539
  %add2037 = add i64 %1552, 3, !dbg !3540
  %arrayidx2038 = getelementptr inbounds double, double* %1551, i64 %add2037, !dbg !3538
  %1553 = load double, double* %arrayidx2038, align 8, !dbg !3538
  %sub2039 = fsub double %1550, %1553, !dbg !3541
  %y2040 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %d1223, i32 0, i32 1, !dbg !3542
  %1554 = load double, double* %y2040, align 8, !dbg !3542
  %1555 = load double*, double** %arguments.addr, align 8, !dbg !3543
  %1556 = load i64, i64* %i2020, align 8, !dbg !3544
  %add2041 = add i64 %1556, 3, !dbg !3545
  %arrayidx2042 = getelementptr inbounds double, double* %1555, i64 %add2041, !dbg !3543
  %1557 = load double, double* %arrayidx2042, align 8, !dbg !3543
  %sub2043 = fsub double %1554, %1557, !dbg !3546
  %mul2044 = fmul double %sub2039, %sub2043, !dbg !3547
  %add2045 = fadd double %mul2035, %mul2044, !dbg !3548
  store double %add2045, double* %weight, align 8, !dbg !3525
  %1558 = load double, double* %weight, align 8, !dbg !3549
  %1559 = load double*, double** %coeff, align 8, !dbg !3550
  %arrayidx2046 = getelementptr inbounds double, double* %1559, i64 0, !dbg !3550
  %1560 = load double, double* %arrayidx2046, align 8, !dbg !3550
  %call2047 = call double @pow(double %1558, double %1560) #6, !dbg !3551
  store double %call2047, double* %weight, align 8, !dbg !3552
  %1561 = load double, double* %weight, align 8, !dbg !3553
  %cmp2048 = fcmp olt double %1561, 1.000000e+00, !dbg !3554
  br i1 %cmp2048, label %cond.true, label %cond.false, !dbg !3555

cond.true:                                        ; preds = %for.body2026
  br label %cond.end, !dbg !3555

cond.false:                                       ; preds = %for.body2026
  %1562 = load double, double* %weight, align 8, !dbg !3556
  %div2050 = fdiv double 1.000000e+00, %1562, !dbg !3557
  br label %cond.end, !dbg !3555

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond2051 = phi double [ 1.000000e+00, %cond.true ], [ %div2050, %cond.false ], !dbg !3555
  store double %cond2051, double* %weight, align 8, !dbg !3558
  %1563 = load double*, double** %arguments.addr, align 8, !dbg !3559
  %1564 = load i64, i64* %i2020, align 8, !dbg !3560
  %arrayidx2052 = getelementptr inbounds double, double* %1563, i64 %1564, !dbg !3559
  %1565 = load double, double* %arrayidx2052, align 8, !dbg !3559
  %1566 = load double*, double** %arguments.addr, align 8, !dbg !3561
  %1567 = load i64, i64* %i2020, align 8, !dbg !3562
  %add2053 = add i64 %1567, 2, !dbg !3563
  %arrayidx2054 = getelementptr inbounds double, double* %1566, i64 %add2053, !dbg !3561
  %1568 = load double, double* %arrayidx2054, align 8, !dbg !3561
  %sub2055 = fsub double %1565, %1568, !dbg !3564
  %1569 = load double, double* %weight, align 8, !dbg !3565
  %mul2056 = fmul double %sub2055, %1569, !dbg !3566
  %x2057 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %s1224, i32 0, i32 0, !dbg !3567
  %1570 = load double, double* %x2057, align 8, !dbg !3568
  %add2058 = fadd double %1570, %mul2056, !dbg !3568
  store double %add2058, double* %x2057, align 8, !dbg !3568
  %1571 = load double*, double** %arguments.addr, align 8, !dbg !3569
  %1572 = load i64, i64* %i2020, align 8, !dbg !3570
  %add2059 = add i64 %1572, 1, !dbg !3571
  %arrayidx2060 = getelementptr inbounds double, double* %1571, i64 %add2059, !dbg !3569
  %1573 = load double, double* %arrayidx2060, align 8, !dbg !3569
  %1574 = load double*, double** %arguments.addr, align 8, !dbg !3572
  %1575 = load i64, i64* %i2020, align 8, !dbg !3573
  %add2061 = add i64 %1575, 3, !dbg !3574
  %arrayidx2062 = getelementptr inbounds double, double* %1574, i64 %add2061, !dbg !3572
  %1576 = load double, double* %arrayidx2062, align 8, !dbg !3572
  %sub2063 = fsub double %1573, %1576, !dbg !3575
  %1577 = load double, double* %weight, align 8, !dbg !3576
  %mul2064 = fmul double %sub2063, %1577, !dbg !3577
  %y2065 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %s1224, i32 0, i32 1, !dbg !3578
  %1578 = load double, double* %y2065, align 8, !dbg !3579
  %add2066 = fadd double %1578, %mul2064, !dbg !3579
  store double %add2066, double* %y2065, align 8, !dbg !3579
  %1579 = load double, double* %weight, align 8, !dbg !3580
  %1580 = load double, double* %denominator, align 8, !dbg !3581
  %add2067 = fadd double %1580, %1579, !dbg !3581
  store double %add2067, double* %denominator, align 8, !dbg !3581
  br label %for.inc2068, !dbg !3582

for.inc2068:                                      ; preds = %cond.end
  %1581 = load i64, i64* %i2020, align 8, !dbg !3583
  %add2069 = add i64 %1581, 4, !dbg !3583
  store i64 %add2069, i64* %i2020, align 8, !dbg !3583
  br label %for.cond2023, !dbg !3584, !llvm.loop !3585

for.end2070:                                      ; preds = %for.cond2023
  %1582 = load double, double* %denominator, align 8, !dbg !3587
  %x2071 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %s1224, i32 0, i32 0, !dbg !3588
  %1583 = load double, double* %x2071, align 8, !dbg !3589
  %div2072 = fdiv double %1583, %1582, !dbg !3589
  store double %div2072, double* %x2071, align 8, !dbg !3589
  %1584 = load double, double* %denominator, align 8, !dbg !3590
  %y2073 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %s1224, i32 0, i32 1, !dbg !3591
  %1585 = load double, double* %y2073, align 8, !dbg !3592
  %div2074 = fdiv double %1585, %1584, !dbg !3592
  store double %div2074, double* %y2073, align 8, !dbg !3592
  %x2075 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %d1223, i32 0, i32 0, !dbg !3593
  %1586 = load double, double* %x2075, align 8, !dbg !3593
  %x2076 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %s1224, i32 0, i32 0, !dbg !3594
  %1587 = load double, double* %x2076, align 8, !dbg !3595
  %add2077 = fadd double %1587, %1586, !dbg !3595
  store double %add2077, double* %x2076, align 8, !dbg !3595
  %y2078 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %d1223, i32 0, i32 1, !dbg !3596
  %1588 = load double, double* %y2078, align 8, !dbg !3596
  %y2079 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %s1224, i32 0, i32 1, !dbg !3597
  %1589 = load double, double* %y2079, align 8, !dbg !3598
  %add2080 = fadd double %1589, %1588, !dbg !3598
  store double %add2080, double* %y2079, align 8, !dbg !3598
  br label %sw.epilog2082, !dbg !3599

sw.default2081:                                   ; preds = %for.body1254
  br label %sw.epilog2082, !dbg !3600

sw.epilog2082:                                    ; preds = %sw.default2081, %for.end2070, %if.end2018, %if.end1882, %sw.bb1765, %sw.bb1734, %if.end1711, %if.end1635, %for.end1582, %if.end1514, %sw.bb1392, %if.end1391, %sw.bb1267
  %1590 = load i32, i32* %bestfit.addr, align 4, !dbg !3601
  %tobool2083 = icmp ne i32 %1590, 0, !dbg !3601
  br i1 %tobool2083, label %land.lhs.true2084, label %if.end2098, !dbg !3603

land.lhs.true2084:                                ; preds = %sw.epilog2082
  %1591 = load i32, i32* %method.addr, align 4, !dbg !3604
  %cmp2085 = icmp ne i32 %1591, 9, !dbg !3605
  br i1 %cmp2085, label %if.then2087, label %if.end2098, !dbg !3606

if.then2087:                                      ; preds = %land.lhs.true2084
  %1592 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3607
  %page2088 = getelementptr inbounds %struct._Image, %struct._Image* %1592, i32 0, i32 26, !dbg !3609
  %x2089 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %page2088, i32 0, i32 2, !dbg !3610
  %1593 = load i64, i64* %x2089, align 8, !dbg !3610
  %conv2090 = sitofp i64 %1593 to double, !dbg !3607
  %x2091 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %s1224, i32 0, i32 0, !dbg !3611
  %1594 = load double, double* %x2091, align 8, !dbg !3612
  %sub2092 = fsub double %1594, %conv2090, !dbg !3612
  store double %sub2092, double* %x2091, align 8, !dbg !3612
  %1595 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3613
  %page2093 = getelementptr inbounds %struct._Image, %struct._Image* %1595, i32 0, i32 26, !dbg !3614
  %y2094 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %page2093, i32 0, i32 3, !dbg !3615
  %1596 = load i64, i64* %y2094, align 8, !dbg !3615
  %conv2095 = sitofp i64 %1596 to double, !dbg !3613
  %y2096 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %s1224, i32 0, i32 1, !dbg !3616
  %1597 = load double, double* %y2096, align 8, !dbg !3617
  %sub2097 = fsub double %1597, %conv2095, !dbg !3617
  store double %sub2097, double* %y2096, align 8, !dbg !3617
  br label %if.end2098, !dbg !3618

if.end2098:                                       ; preds = %if.then2087, %land.lhs.true2084, %sw.epilog2082
  %x2099 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %s1224, i32 0, i32 0, !dbg !3619
  %1598 = load double, double* %x2099, align 8, !dbg !3620
  %sub2100 = fsub double %1598, 5.000000e-01, !dbg !3620
  store double %sub2100, double* %x2099, align 8, !dbg !3620
  %y2101 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %s1224, i32 0, i32 1, !dbg !3621
  %1599 = load double, double* %y2101, align 8, !dbg !3622
  %sub2102 = fsub double %1599, 5.000000e-01, !dbg !3622
  store double %sub2102, double* %y2101, align 8, !dbg !3622
  %1600 = load double, double* %validity, align 8, !dbg !3623
  %cmp2103 = fcmp ole double %1600, 0.000000e+00, !dbg !3625
  br i1 %cmp2103, label %if.then2105, label %if.else2106, !dbg !3626

if.then2105:                                      ; preds = %if.end2098
  %1601 = load %struct._Image*, %struct._Image** %distort_image, align 8, !dbg !3627
  %1602 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !3629
  %1603 = load i16*, i16** %indexes, align 8, !dbg !3630
  call void @SetPixelPacket(%struct._Image* %1601, %struct._MagickPixelPacket* %invalid, %struct._PixelPacket* %1602, i16* %1603), !dbg !3631
  br label %if.end2119, !dbg !3632

if.else2106:                                      ; preds = %if.end2098
  %1604 = load %struct._ResampleFilter**, %struct._ResampleFilter*** %resample_filter, align 8, !dbg !3633
  %1605 = load i32, i32* %id, align 4, !dbg !3635
  %idxprom2107 = sext i32 %1605 to i64, !dbg !3633
  %arrayidx2108 = getelementptr inbounds %struct._ResampleFilter*, %struct._ResampleFilter** %1604, i64 %idxprom2107, !dbg !3633
  %1606 = load %struct._ResampleFilter*, %struct._ResampleFilter** %arrayidx2108, align 8, !dbg !3633
  %x2109 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %s1224, i32 0, i32 0, !dbg !3636
  %1607 = load double, double* %x2109, align 8, !dbg !3636
  %y2110 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %s1224, i32 0, i32 1, !dbg !3637
  %1608 = load double, double* %y2110, align 8, !dbg !3637
  %call2111 = call i32 @ResamplePixelColor(%struct._ResampleFilter* %1606, double %1607, double %1608, %struct._MagickPixelPacket* %pixel), !dbg !3638
  %1609 = load double, double* %validity, align 8, !dbg !3639
  %cmp2112 = fcmp olt double %1609, 1.000000e+00, !dbg !3641
  br i1 %cmp2112, label %if.then2114, label %if.end2118, !dbg !3642

if.then2114:                                      ; preds = %if.else2106
  %1610 = load double, double* %validity, align 8, !dbg !3643
  %conv2115 = fptrunc double %1610 to float, !dbg !3643
  %1611 = load double, double* %validity, align 8, !dbg !3645
  %sub2116 = fsub double 1.000000e+00, %1611, !dbg !3646
  %conv2117 = fptrunc double %sub2116 to float, !dbg !3647
  call void @MagickPixelCompositeBlend(%struct._MagickPixelPacket* %pixel, float %conv2115, %struct._MagickPixelPacket* %invalid, float %conv2117, %struct._MagickPixelPacket* %pixel), !dbg !3648
  br label %if.end2118, !dbg !3649

if.end2118:                                       ; preds = %if.then2114, %if.else2106
  %1612 = load %struct._Image*, %struct._Image** %distort_image, align 8, !dbg !3650
  %1613 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !3651
  %1614 = load i16*, i16** %indexes, align 8, !dbg !3652
  call void @SetPixelPacket(%struct._Image* %1612, %struct._MagickPixelPacket* %pixel, %struct._PixelPacket* %1613, i16* %1614), !dbg !3653
  br label %if.end2119

if.end2119:                                       ; preds = %if.end2118, %if.then2105
  %1615 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !3654
  %incdec.ptr = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %1615, i32 1, !dbg !3654
  store %struct._PixelPacket* %incdec.ptr, %struct._PixelPacket** %q, align 8, !dbg !3654
  %1616 = load i16*, i16** %indexes, align 8, !dbg !3655
  %incdec.ptr2120 = getelementptr inbounds i16, i16* %1616, i32 1, !dbg !3655
  store i16* %incdec.ptr2120, i16** %indexes, align 8, !dbg !3655
  br label %for.inc2121, !dbg !3656

for.inc2121:                                      ; preds = %if.end2119
  %1617 = load i64, i64* %i1225, align 8, !dbg !3657
  %inc2122 = add nsw i64 %1617, 1, !dbg !3657
  store i64 %inc2122, i64* %i1225, align 8, !dbg !3657
  br label %for.cond1250, !dbg !3658, !llvm.loop !3659

for.end2123:                                      ; preds = %for.cond1250
  %1618 = load %struct._CacheView*, %struct._CacheView** %distort_view, align 8, !dbg !3661
  %1619 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !3662
  %call2124 = call i32 @SyncCacheViewAuthenticPixels(%struct._CacheView* %1618, %struct._ExceptionInfo* %1619), !dbg !3663
  store i32 %call2124, i32* %sync, align 4, !dbg !3664
  %1620 = load i32, i32* %sync, align 4, !dbg !3665
  %cmp2125 = icmp eq i32 %1620, 0, !dbg !3667
  br i1 %cmp2125, label %if.then2127, label %if.end2128, !dbg !3668

if.then2127:                                      ; preds = %for.end2123
  store i32 0, i32* %status, align 4, !dbg !3669
  br label %if.end2128, !dbg !3670

if.end2128:                                       ; preds = %if.then2127, %for.end2123
  %1621 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3671
  %progress_monitor = getelementptr inbounds %struct._Image, %struct._Image* %1621, i32 0, i32 47, !dbg !3673
  %1622 = load i32 (i8*, i64, i64, i8*)*, i32 (i8*, i64, i64, i8*)** %progress_monitor, align 8, !dbg !3673
  %cmp2129 = icmp ne i32 (i8*, i64, i64, i8*)* %1622, null, !dbg !3674
  br i1 %cmp2129, label %if.then2131, label %if.end2139, !dbg !3675

if.then2131:                                      ; preds = %if.end2128
  call void @llvm.dbg.declare(metadata i32* %proceed, metadata !3676, metadata !DIExpression()), !dbg !3678
  %1623 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3679
  %1624 = load i64, i64* %progress, align 8, !dbg !3680
  %inc2132 = add nsw i64 %1624, 1, !dbg !3680
  store i64 %inc2132, i64* %progress, align 8, !dbg !3680
  %1625 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3681
  %rows2133 = getelementptr inbounds %struct._Image, %struct._Image* %1625, i32 0, i32 8, !dbg !3682
  %1626 = load i64, i64* %rows2133, align 8, !dbg !3682
  %call2134 = call i32 @SetImageProgress(%struct._Image* %1623, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.104, i64 0, i64 0), i64 %1624, i64 %1626), !dbg !3683
  store i32 %call2134, i32* %proceed, align 4, !dbg !3684
  %1627 = load i32, i32* %proceed, align 4, !dbg !3685
  %cmp2135 = icmp eq i32 %1627, 0, !dbg !3687
  br i1 %cmp2135, label %if.then2137, label %if.end2138, !dbg !3688

if.then2137:                                      ; preds = %if.then2131
  store i32 0, i32* %status, align 4, !dbg !3689
  br label %if.end2138, !dbg !3690

if.end2138:                                       ; preds = %if.then2137, %if.then2131
  br label %if.end2139, !dbg !3691

if.end2139:                                       ; preds = %if.end2138, %if.end2128
  br label %for.inc2140, !dbg !3692

for.inc2140:                                      ; preds = %if.end2139, %if.then1230
  %1628 = load i64, i64* %j, align 8, !dbg !3693
  %inc2141 = add nsw i64 %1628, 1, !dbg !3693
  store i64 %inc2141, i64* %j, align 8, !dbg !3693
  br label %for.cond1217, !dbg !3694, !llvm.loop !3695

for.end2142:                                      ; preds = %for.cond1217
  %1629 = load %struct._CacheView*, %struct._CacheView** %distort_view, align 8, !dbg !3697
  %call2143 = call %struct._CacheView* @DestroyCacheView(%struct._CacheView* %1629), !dbg !3698
  store %struct._CacheView* %call2143, %struct._CacheView** %distort_view, align 8, !dbg !3699
  %1630 = load %struct._ResampleFilter**, %struct._ResampleFilter*** %resample_filter, align 8, !dbg !3700
  %call2144 = call %struct._ResampleFilter** @DestroyResampleFilterThreadSet(%struct._ResampleFilter** %1630), !dbg !3701
  store %struct._ResampleFilter** %call2144, %struct._ResampleFilter*** %resample_filter, align 8, !dbg !3702
  %1631 = load i32, i32* %status, align 4, !dbg !3703
  %cmp2145 = icmp eq i32 %1631, 0, !dbg !3705
  br i1 %cmp2145, label %if.then2147, label %if.end2149, !dbg !3706

if.then2147:                                      ; preds = %for.end2142
  %1632 = load %struct._Image*, %struct._Image** %distort_image, align 8, !dbg !3707
  %call2148 = call %struct._Image* @DestroyImage(%struct._Image* %1632), !dbg !3708
  store %struct._Image* %call2148, %struct._Image** %distort_image, align 8, !dbg !3709
  br label %if.end2149, !dbg !3710

if.end2149:                                       ; preds = %if.then2147, %for.end2142
  %1633 = load i32, i32* %method.addr, align 4, !dbg !3711
  %cmp2150 = icmp eq i32 %1633, 9, !dbg !3713
  br i1 %cmp2150, label %land.lhs.true2152, label %if.end2161, !dbg !3714

land.lhs.true2152:                                ; preds = %if.end2149
  %1634 = load i32, i32* %bestfit.addr, align 4, !dbg !3715
  %tobool2153 = icmp ne i32 %1634, 0, !dbg !3715
  br i1 %tobool2153, label %if.end2161, label %land.lhs.true2154, !dbg !3716

land.lhs.true2154:                                ; preds = %land.lhs.true2152
  %1635 = load i32, i32* %viewport_given, align 4, !dbg !3717
  %tobool2155 = icmp ne i32 %1635, 0, !dbg !3717
  br i1 %tobool2155, label %if.end2161, label %if.then2156, !dbg !3718

if.then2156:                                      ; preds = %land.lhs.true2154
  %1636 = load %struct._Image*, %struct._Image** %distort_image, align 8, !dbg !3719
  %page2157 = getelementptr inbounds %struct._Image, %struct._Image* %1636, i32 0, i32 26, !dbg !3721
  %x2158 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %page2157, i32 0, i32 2, !dbg !3722
  store i64 0, i64* %x2158, align 8, !dbg !3723
  %1637 = load %struct._Image*, %struct._Image** %distort_image, align 8, !dbg !3724
  %page2159 = getelementptr inbounds %struct._Image, %struct._Image* %1637, i32 0, i32 26, !dbg !3725
  %y2160 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %page2159, i32 0, i32 3, !dbg !3726
  store i64 0, i64* %y2160, align 8, !dbg !3727
  br label %if.end2161, !dbg !3728

if.end2161:                                       ; preds = %if.then2156, %land.lhs.true2154, %land.lhs.true2152, %if.end2149
  %1638 = load double*, double** %coeff, align 8, !dbg !3729
  %1639 = bitcast double* %1638 to i8*, !dbg !3729
  %call2162 = call i8* @RelinquishMagickMemory(i8* %1639), !dbg !3730
  %1640 = bitcast i8* %call2162 to double*, !dbg !3731
  store double* %1640, double** %coeff, align 8, !dbg !3732
  %1641 = load %struct._Image*, %struct._Image** %distort_image, align 8, !dbg !3733
  store %struct._Image* %1641, %struct._Image** %retval, align 8, !dbg !3734
  br label %return, !dbg !3734

return:                                           ; preds = %if.end2161, %if.then1189, %if.then1184, %if.then1173, %if.then780, %if.then745, %if.then14, %if.end6, %if.then4
  %1642 = load %struct._Image*, %struct._Image** %retval, align 8, !dbg !3735
  ret %struct._Image* %1642, !dbg !3735
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct._Image* @DistortResizeImage(%struct._Image* %image, i64 %columns, i64 %rows, %struct._ExceptionInfo* %exception) #0 !dbg !3736 {
entry:
  %retval = alloca %struct._Image*, align 8
  %image.addr = alloca %struct._Image*, align 8
  %columns.addr = alloca i64, align 8
  %rows.addr = alloca i64, align 8
  %exception.addr = alloca %struct._ExceptionInfo*, align 8
  %resize_image = alloca %struct._Image*, align 8
  %tmp_image = alloca %struct._Image*, align 8
  %crop_area = alloca %struct._RectangleInfo, align 8
  %distort_args = alloca [12 x double], align 16
  %vp_save = alloca i32, align 4
  %resize_alpha = alloca %struct._Image*, align 8
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !3739, metadata !DIExpression()), !dbg !3740
  store i64 %columns, i64* %columns.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %columns.addr, metadata !3741, metadata !DIExpression()), !dbg !3742
  store i64 %rows, i64* %rows.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %rows.addr, metadata !3743, metadata !DIExpression()), !dbg !3744
  store %struct._ExceptionInfo* %exception, %struct._ExceptionInfo** %exception.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo** %exception.addr, metadata !3745, metadata !DIExpression()), !dbg !3746
  call void @llvm.dbg.declare(metadata %struct._Image** %resize_image, metadata !3747, metadata !DIExpression()), !dbg !3748
  call void @llvm.dbg.declare(metadata %struct._Image** %tmp_image, metadata !3749, metadata !DIExpression()), !dbg !3750
  call void @llvm.dbg.declare(metadata %struct._RectangleInfo* %crop_area, metadata !3751, metadata !DIExpression()), !dbg !3752
  call void @llvm.dbg.declare(metadata [12 x double]* %distort_args, metadata !3753, metadata !DIExpression()), !dbg !3757
  call void @llvm.dbg.declare(metadata i32* %vp_save, metadata !3758, metadata !DIExpression()), !dbg !3760
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3761
  %debug = getelementptr inbounds %struct._Image, %struct._Image* %0, i32 0, i32 59, !dbg !3763
  %1 = load i32, i32* %debug, align 8, !dbg !3763
  %cmp = icmp ne i32 %1, 0, !dbg !3764
  br i1 %cmp, label %if.then, label %if.end, !dbg !3765

if.then:                                          ; preds = %entry
  %2 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3766
  %filename = getelementptr inbounds %struct._Image, %struct._Image* %2, i32 0, i32 53, !dbg !3767
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename, i64 0, i64 0, !dbg !3766
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 1, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 1501, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !3768
  br label %if.end, !dbg !3769

if.end:                                           ; preds = %if.then, %entry
  %3 = load i64, i64* %columns.addr, align 8, !dbg !3770
  %cmp1 = icmp eq i64 %3, 0, !dbg !3772
  br i1 %cmp1, label %if.then3, label %lor.lhs.false, !dbg !3773

lor.lhs.false:                                    ; preds = %if.end
  %4 = load i64, i64* %rows.addr, align 8, !dbg !3774
  %cmp2 = icmp eq i64 %4, 0, !dbg !3775
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !3776

if.then3:                                         ; preds = %lor.lhs.false, %if.end
  store %struct._Image* null, %struct._Image** %retval, align 8, !dbg !3777
  br label %return, !dbg !3777

if.end4:                                          ; preds = %lor.lhs.false
  %arraydecay5 = getelementptr inbounds [12 x double], [12 x double]* %distort_args, i64 0, i64 0, !dbg !3778
  %5 = bitcast double* %arraydecay5 to i8*, !dbg !3778
  %call6 = call i8* @ResetMagickMemory(i8* %5, i32 0, i64 96), !dbg !3779
  %6 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3780
  %columns7 = getelementptr inbounds %struct._Image, %struct._Image* %6, i32 0, i32 7, !dbg !3781
  %7 = load i64, i64* %columns7, align 8, !dbg !3781
  %conv = uitofp i64 %7 to double, !dbg !3782
  %arrayidx = getelementptr inbounds [12 x double], [12 x double]* %distort_args, i64 0, i64 4, !dbg !3783
  store double %conv, double* %arrayidx, align 16, !dbg !3784
  %8 = load i64, i64* %columns.addr, align 8, !dbg !3785
  %conv8 = uitofp i64 %8 to double, !dbg !3786
  %arrayidx9 = getelementptr inbounds [12 x double], [12 x double]* %distort_args, i64 0, i64 6, !dbg !3787
  store double %conv8, double* %arrayidx9, align 16, !dbg !3788
  %9 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3789
  %rows10 = getelementptr inbounds %struct._Image, %struct._Image* %9, i32 0, i32 8, !dbg !3790
  %10 = load i64, i64* %rows10, align 8, !dbg !3790
  %conv11 = uitofp i64 %10 to double, !dbg !3791
  %arrayidx12 = getelementptr inbounds [12 x double], [12 x double]* %distort_args, i64 0, i64 9, !dbg !3792
  store double %conv11, double* %arrayidx12, align 8, !dbg !3793
  %11 = load i64, i64* %rows.addr, align 8, !dbg !3794
  %conv13 = uitofp i64 %11 to double, !dbg !3795
  %arrayidx14 = getelementptr inbounds [12 x double], [12 x double]* %distort_args, i64 0, i64 11, !dbg !3796
  store double %conv13, double* %arrayidx14, align 8, !dbg !3797
  %12 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3798
  %call15 = call i32 @GetImageVirtualPixelMethod(%struct._Image* %12), !dbg !3799
  store i32 %call15, i32* %vp_save, align 4, !dbg !3800
  %13 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3801
  %14 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !3802
  %call16 = call %struct._Image* @CloneImage(%struct._Image* %13, i64 0, i64 0, i32 1, %struct._ExceptionInfo* %14), !dbg !3803
  store %struct._Image* %call16, %struct._Image** %tmp_image, align 8, !dbg !3804
  %15 = load %struct._Image*, %struct._Image** %tmp_image, align 8, !dbg !3805
  %cmp17 = icmp eq %struct._Image* %15, null, !dbg !3807
  br i1 %cmp17, label %if.then19, label %if.end20, !dbg !3808

if.then19:                                        ; preds = %if.end4
  store %struct._Image* null, %struct._Image** %retval, align 8, !dbg !3809
  br label %return, !dbg !3809

if.end20:                                         ; preds = %if.end4
  %16 = load %struct._Image*, %struct._Image** %tmp_image, align 8, !dbg !3810
  %call21 = call i32 @SetImageVirtualPixelMethod(%struct._Image* %16, i32 8), !dbg !3811
  %17 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3812
  %matte = getelementptr inbounds %struct._Image, %struct._Image* %17, i32 0, i32 6, !dbg !3814
  %18 = load i32, i32* %matte, align 8, !dbg !3814
  %cmp22 = icmp eq i32 %18, 0, !dbg !3815
  br i1 %cmp22, label %if.then24, label %if.else, !dbg !3816

if.then24:                                        ; preds = %if.end20
  %19 = load %struct._Image*, %struct._Image** %tmp_image, align 8, !dbg !3817
  %call25 = call i32 @SetImageAlphaChannel(%struct._Image* %19, i32 8), !dbg !3819
  %20 = load %struct._Image*, %struct._Image** %tmp_image, align 8, !dbg !3820
  %arraydecay26 = getelementptr inbounds [12 x double], [12 x double]* %distort_args, i64 0, i64 0, !dbg !3821
  %21 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !3822
  %call27 = call %struct._Image* @DistortImage(%struct._Image* %20, i32 1, i64 12, double* %arraydecay26, i32 1, %struct._ExceptionInfo* %21), !dbg !3823
  store %struct._Image* %call27, %struct._Image** %resize_image, align 8, !dbg !3824
  %22 = load %struct._Image*, %struct._Image** %tmp_image, align 8, !dbg !3825
  %call28 = call %struct._Image* @DestroyImage(%struct._Image* %22), !dbg !3826
  store %struct._Image* %call28, %struct._Image** %tmp_image, align 8, !dbg !3827
  %23 = load %struct._Image*, %struct._Image** %resize_image, align 8, !dbg !3828
  %cmp29 = icmp eq %struct._Image* %23, null, !dbg !3830
  br i1 %cmp29, label %if.then31, label %if.end32, !dbg !3831

if.then31:                                        ; preds = %if.then24
  store %struct._Image* null, %struct._Image** %retval, align 8, !dbg !3832
  br label %return, !dbg !3832

if.end32:                                         ; preds = %if.then24
  %24 = load %struct._Image*, %struct._Image** %resize_image, align 8, !dbg !3833
  %call33 = call i32 @SetImageAlphaChannel(%struct._Image* %24, i32 4), !dbg !3834
  %25 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !3835
  %26 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3836
  %exception34 = getelementptr inbounds %struct._Image, %struct._Image* %26, i32 0, i32 58, !dbg !3837
  call void @InheritException(%struct._ExceptionInfo* %25, %struct._ExceptionInfo* %exception34), !dbg !3838
  br label %if.end64, !dbg !3839

if.else:                                          ; preds = %if.end20
  call void @llvm.dbg.declare(metadata %struct._Image** %resize_alpha, metadata !3840, metadata !DIExpression()), !dbg !3842
  %27 = load %struct._Image*, %struct._Image** %tmp_image, align 8, !dbg !3843
  %call35 = call i32 @SeparateImageChannel(%struct._Image* %27, i32 64), !dbg !3844
  %28 = load %struct._Image*, %struct._Image** %tmp_image, align 8, !dbg !3845
  %call36 = call i32 @SetImageAlphaChannel(%struct._Image* %28, i32 6), !dbg !3846
  %29 = load %struct._Image*, %struct._Image** %tmp_image, align 8, !dbg !3847
  %arraydecay37 = getelementptr inbounds [12 x double], [12 x double]* %distort_args, i64 0, i64 0, !dbg !3848
  %30 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !3849
  %call38 = call %struct._Image* @DistortImage(%struct._Image* %29, i32 1, i64 12, double* %arraydecay37, i32 1, %struct._ExceptionInfo* %30), !dbg !3850
  store %struct._Image* %call38, %struct._Image** %resize_alpha, align 8, !dbg !3851
  %31 = load %struct._Image*, %struct._Image** %tmp_image, align 8, !dbg !3852
  %call39 = call %struct._Image* @DestroyImage(%struct._Image* %31), !dbg !3853
  store %struct._Image* %call39, %struct._Image** %tmp_image, align 8, !dbg !3854
  %32 = load %struct._Image*, %struct._Image** %resize_alpha, align 8, !dbg !3855
  %cmp40 = icmp eq %struct._Image* %32, null, !dbg !3857
  br i1 %cmp40, label %if.then42, label %if.end43, !dbg !3858

if.then42:                                        ; preds = %if.else
  store %struct._Image* null, %struct._Image** %retval, align 8, !dbg !3859
  br label %return, !dbg !3859

if.end43:                                         ; preds = %if.else
  %33 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3860
  %34 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !3861
  %call44 = call %struct._Image* @CloneImage(%struct._Image* %33, i64 0, i64 0, i32 1, %struct._ExceptionInfo* %34), !dbg !3862
  store %struct._Image* %call44, %struct._Image** %tmp_image, align 8, !dbg !3863
  %35 = load %struct._Image*, %struct._Image** %tmp_image, align 8, !dbg !3864
  %cmp45 = icmp eq %struct._Image* %35, null, !dbg !3866
  br i1 %cmp45, label %if.then47, label %if.end48, !dbg !3867

if.then47:                                        ; preds = %if.end43
  store %struct._Image* null, %struct._Image** %retval, align 8, !dbg !3868
  br label %return, !dbg !3868

if.end48:                                         ; preds = %if.end43
  %36 = load %struct._Image*, %struct._Image** %tmp_image, align 8, !dbg !3869
  %call49 = call i32 @SetImageVirtualPixelMethod(%struct._Image* %36, i32 8), !dbg !3870
  %37 = load %struct._Image*, %struct._Image** %tmp_image, align 8, !dbg !3871
  %call50 = call i32 @SetImageVirtualPixelMethod(%struct._Image* %37, i32 8), !dbg !3872
  %38 = load %struct._Image*, %struct._Image** %tmp_image, align 8, !dbg !3873
  %arraydecay51 = getelementptr inbounds [12 x double], [12 x double]* %distort_args, i64 0, i64 0, !dbg !3874
  %39 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !3875
  %call52 = call %struct._Image* @DistortImage(%struct._Image* %38, i32 1, i64 12, double* %arraydecay51, i32 1, %struct._ExceptionInfo* %39), !dbg !3876
  store %struct._Image* %call52, %struct._Image** %resize_image, align 8, !dbg !3877
  %40 = load %struct._Image*, %struct._Image** %tmp_image, align 8, !dbg !3878
  %call53 = call %struct._Image* @DestroyImage(%struct._Image* %40), !dbg !3879
  store %struct._Image* %call53, %struct._Image** %tmp_image, align 8, !dbg !3880
  %41 = load %struct._Image*, %struct._Image** %resize_image, align 8, !dbg !3881
  %cmp54 = icmp eq %struct._Image* %41, null, !dbg !3883
  br i1 %cmp54, label %if.then56, label %if.end58, !dbg !3884

if.then56:                                        ; preds = %if.end48
  %42 = load %struct._Image*, %struct._Image** %resize_alpha, align 8, !dbg !3885
  %call57 = call %struct._Image* @DestroyImage(%struct._Image* %42), !dbg !3887
  store %struct._Image* %call57, %struct._Image** %resize_alpha, align 8, !dbg !3888
  store %struct._Image* null, %struct._Image** %retval, align 8, !dbg !3889
  br label %return, !dbg !3889

if.end58:                                         ; preds = %if.end48
  %43 = load %struct._Image*, %struct._Image** %resize_image, align 8, !dbg !3890
  %call59 = call i32 @SetImageAlphaChannel(%struct._Image* %43, i32 4), !dbg !3891
  %44 = load %struct._Image*, %struct._Image** %resize_alpha, align 8, !dbg !3892
  %call60 = call i32 @SetImageAlphaChannel(%struct._Image* %44, i32 4), !dbg !3893
  %45 = load %struct._Image*, %struct._Image** %resize_image, align 8, !dbg !3894
  %46 = load %struct._Image*, %struct._Image** %resize_alpha, align 8, !dbg !3895
  %call61 = call i32 @CompositeImage(%struct._Image* %45, i32 17, %struct._Image* %46, i64 0, i64 0), !dbg !3896
  %47 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !3897
  %48 = load %struct._Image*, %struct._Image** %resize_image, align 8, !dbg !3898
  %exception62 = getelementptr inbounds %struct._Image, %struct._Image* %48, i32 0, i32 58, !dbg !3899
  call void @InheritException(%struct._ExceptionInfo* %47, %struct._ExceptionInfo* %exception62), !dbg !3900
  %49 = load %struct._Image*, %struct._Image** %resize_alpha, align 8, !dbg !3901
  %call63 = call %struct._Image* @DestroyImage(%struct._Image* %49), !dbg !3902
  store %struct._Image* %call63, %struct._Image** %resize_alpha, align 8, !dbg !3903
  br label %if.end64

if.end64:                                         ; preds = %if.end58, %if.end32
  %50 = load %struct._Image*, %struct._Image** %resize_image, align 8, !dbg !3904
  %51 = load i32, i32* %vp_save, align 4, !dbg !3905
  %call65 = call i32 @SetImageVirtualPixelMethod(%struct._Image* %50, i32 %51), !dbg !3906
  %52 = load i64, i64* %columns.addr, align 8, !dbg !3907
  %width = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %crop_area, i32 0, i32 0, !dbg !3908
  store i64 %52, i64* %width, align 8, !dbg !3909
  %53 = load i64, i64* %rows.addr, align 8, !dbg !3910
  %height = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %crop_area, i32 0, i32 1, !dbg !3911
  store i64 %53, i64* %height, align 8, !dbg !3912
  %x = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %crop_area, i32 0, i32 2, !dbg !3913
  store i64 0, i64* %x, align 8, !dbg !3914
  %y = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %crop_area, i32 0, i32 3, !dbg !3915
  store i64 0, i64* %y, align 8, !dbg !3916
  %54 = load %struct._Image*, %struct._Image** %resize_image, align 8, !dbg !3917
  store %struct._Image* %54, %struct._Image** %tmp_image, align 8, !dbg !3918
  %55 = load %struct._Image*, %struct._Image** %tmp_image, align 8, !dbg !3919
  %56 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !3920
  %call66 = call %struct._Image* @CropImage(%struct._Image* %55, %struct._RectangleInfo* %crop_area, %struct._ExceptionInfo* %56), !dbg !3921
  store %struct._Image* %call66, %struct._Image** %resize_image, align 8, !dbg !3922
  %57 = load %struct._Image*, %struct._Image** %tmp_image, align 8, !dbg !3923
  %call67 = call %struct._Image* @DestroyImage(%struct._Image* %57), !dbg !3924
  store %struct._Image* %call67, %struct._Image** %tmp_image, align 8, !dbg !3925
  %58 = load %struct._Image*, %struct._Image** %resize_image, align 8, !dbg !3926
  store %struct._Image* %58, %struct._Image** %retval, align 8, !dbg !3927
  br label %return, !dbg !3927

return:                                           ; preds = %if.end64, %if.then56, %if.then47, %if.then42, %if.then31, %if.then19, %if.then3
  %59 = load %struct._Image*, %struct._Image** %retval, align 8, !dbg !3928
  ret %struct._Image* %59, !dbg !3928
}

declare dso_local i8* @ResetMagickMemory(i8*, i32, i64) #2

declare dso_local i32 @GetImageVirtualPixelMethod(%struct._Image*) #2

declare dso_local %struct._Image* @CloneImage(%struct._Image*, i64, i64, i32, %struct._ExceptionInfo*) #2

declare dso_local i32 @SetImageVirtualPixelMethod(%struct._Image*, i32) #2

declare dso_local i32 @SetImageAlphaChannel(%struct._Image*, i32) #2

declare dso_local %struct._Image* @DestroyImage(%struct._Image*) #2

declare dso_local void @InheritException(%struct._ExceptionInfo*, %struct._ExceptionInfo*) #2

declare dso_local i32 @SeparateImageChannel(%struct._Image*, i32) #2

declare dso_local i32 @CompositeImage(%struct._Image*, i32, %struct._Image*, i64, i64) #2

declare dso_local %struct._Image* @CropImage(%struct._Image*, %struct._RectangleInfo*, %struct._ExceptionInfo*) #2

declare dso_local i32 @ThrowMagickException(%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) #2

; Function Attrs: noinline nounwind uwtable
define internal double* @GenerateCoefficients(%struct._Image* %image, i32* %method, i64 %number_arguments, double* %arguments, i64 %number_values, %struct._ExceptionInfo* %exception) #0 !dbg !3929 {
entry:
  %retval = alloca double*, align 8
  %image.addr = alloca %struct._Image*, align 8
  %method.addr = alloca i32*, align 8
  %number_arguments.addr = alloca i64, align 8
  %arguments.addr = alloca double*, align 8
  %number_values.addr = alloca i64, align 8
  %exception.addr = alloca %struct._ExceptionInfo*, align 8
  %coeff = alloca double*, align 8
  %i = alloca i64, align 8
  %number_coeff = alloca i64, align 8
  %cp_size = alloca i64, align 8
  %cp_x = alloca i64, align 8
  %cp_y = alloca i64, align 8
  %cp_values = alloca i64, align 8
  %matrix = alloca double**, align 8
  %vectors = alloca double**, align 8
  %terms = alloca [3 x double], align 16
  %status = alloca i32, align 4
  %uv2 = alloca [2 x double], align 16
  %inverse = alloca [8 x double], align 16
  %cosine = alloca double, align 8
  %sine = alloca double, align 8
  %x = alloca double, align 8
  %y = alloca double, align 8
  %sx = alloca double, align 8
  %sy = alloca double, align 8
  %a = alloca double, align 8
  %nx = alloca double, align 8
  %ny = alloca double, align 8
  %matrix288 = alloca double**, align 8
  %vectors289 = alloca [1 x double*], align 8
  %terms290 = alloca [8 x double], align 16
  %cp_u = alloca i64, align 8
  %cp_v = alloca i64, align 8
  %status292 = alloca i32, align 4
  %matrix420 = alloca double**, align 8
  %vectors421 = alloca double**, align 8
  %terms422 = alloca [4 x double], align 16
  %status423 = alloca i32, align 4
  %matrix514 = alloca double**, align 8
  %vectors515 = alloca double**, align 8
  %terms516 = alloca double*, align 8
  %nterms = alloca i64, align 8
  %j = alloca i64, align 8
  %status517 = alloca i32, align 4
  %rx = alloca double, align 8
  %ry = alloca double, align 8
  %rscale = alloca double, align 8
  %artifact = alloca i8*, align 8
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !3933, metadata !DIExpression()), !dbg !3934
  store i32* %method, i32** %method.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %method.addr, metadata !3935, metadata !DIExpression()), !dbg !3936
  store i64 %number_arguments, i64* %number_arguments.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %number_arguments.addr, metadata !3937, metadata !DIExpression()), !dbg !3938
  store double* %arguments, double** %arguments.addr, align 8
  call void @llvm.dbg.declare(metadata double** %arguments.addr, metadata !3939, metadata !DIExpression()), !dbg !3940
  store i64 %number_values, i64* %number_values.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %number_values.addr, metadata !3941, metadata !DIExpression()), !dbg !3942
  store %struct._ExceptionInfo* %exception, %struct._ExceptionInfo** %exception.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo** %exception.addr, metadata !3943, metadata !DIExpression()), !dbg !3944
  call void @llvm.dbg.declare(metadata double** %coeff, metadata !3945, metadata !DIExpression()), !dbg !3946
  call void @llvm.dbg.declare(metadata i64* %i, metadata !3947, metadata !DIExpression()), !dbg !3948
  call void @llvm.dbg.declare(metadata i64* %number_coeff, metadata !3949, metadata !DIExpression()), !dbg !3950
  call void @llvm.dbg.declare(metadata i64* %cp_size, metadata !3951, metadata !DIExpression()), !dbg !3952
  call void @llvm.dbg.declare(metadata i64* %cp_x, metadata !3953, metadata !DIExpression()), !dbg !3954
  call void @llvm.dbg.declare(metadata i64* %cp_y, metadata !3955, metadata !DIExpression()), !dbg !3956
  call void @llvm.dbg.declare(metadata i64* %cp_values, metadata !3957, metadata !DIExpression()), !dbg !3958
  %0 = load i64, i64* %number_values.addr, align 8, !dbg !3959
  %cmp = icmp eq i64 %0, 0, !dbg !3961
  br i1 %cmp, label %if.then, label %if.else, !dbg !3962

if.then:                                          ; preds = %entry
  store i64 2, i64* %number_values.addr, align 8, !dbg !3963
  store i64 0, i64* %cp_values, align 8, !dbg !3965
  store i64 2, i64* %cp_x, align 8, !dbg !3966
  store i64 3, i64* %cp_y, align 8, !dbg !3967
  br label %if.end, !dbg !3968

if.else:                                          ; preds = %entry
  store i64 0, i64* %cp_x, align 8, !dbg !3969
  store i64 1, i64* %cp_y, align 8, !dbg !3971
  store i64 2, i64* %cp_values, align 8, !dbg !3972
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %1 = load i64, i64* %number_values.addr, align 8, !dbg !3973
  %add = add i64 %1, 2, !dbg !3974
  store i64 %add, i64* %cp_size, align 8, !dbg !3975
  %2 = load i64, i64* %number_arguments.addr, align 8, !dbg !3976
  %3 = load i64, i64* %cp_size, align 8, !dbg !3978
  %mul = mul i64 4, %3, !dbg !3979
  %cmp1 = icmp ult i64 %2, %mul, !dbg !3980
  br i1 %cmp1, label %land.lhs.true, label %if.end7, !dbg !3981

land.lhs.true:                                    ; preds = %if.end
  %4 = load i32*, i32** %method.addr, align 8, !dbg !3982
  %5 = load i32, i32* %4, align 4, !dbg !3983
  %cmp2 = icmp eq i32 %5, 6, !dbg !3984
  br i1 %cmp2, label %if.then6, label %lor.lhs.false, !dbg !3985

lor.lhs.false:                                    ; preds = %land.lhs.true
  %6 = load i32*, i32** %method.addr, align 8, !dbg !3986
  %7 = load i32, i32* %6, align 4, !dbg !3987
  %cmp3 = icmp eq i32 %7, 7, !dbg !3988
  br i1 %cmp3, label %if.then6, label %lor.lhs.false4, !dbg !3989

lor.lhs.false4:                                   ; preds = %lor.lhs.false
  %8 = load i32*, i32** %method.addr, align 8, !dbg !3990
  %9 = load i32, i32* %8, align 4, !dbg !3991
  %cmp5 = icmp eq i32 %9, 4, !dbg !3992
  br i1 %cmp5, label %if.then6, label %if.end7, !dbg !3993

if.then6:                                         ; preds = %lor.lhs.false4, %lor.lhs.false, %land.lhs.true
  %10 = load i32*, i32** %method.addr, align 8, !dbg !3994
  store i32 1, i32* %10, align 4, !dbg !3995
  br label %if.end7, !dbg !3996

if.end7:                                          ; preds = %if.then6, %lor.lhs.false4, %if.end
  store i64 0, i64* %number_coeff, align 8, !dbg !3997
  %11 = load i32*, i32** %method.addr, align 8, !dbg !3998
  %12 = load i32, i32* %11, align 4, !dbg !3999
  switch i32 %12, label %sw.default [
    i32 1, label %sw.bb
    i32 8, label %sw.bb9
    i32 7, label %sw.bb28
    i32 6, label %sw.bb30
    i32 16, label %sw.bb31
    i32 9, label %sw.bb32
    i32 3, label %sw.bb33
    i32 2, label %sw.bb33
    i32 13, label %sw.bb33
    i32 12, label %sw.bb33
    i32 10, label %sw.bb34
    i32 11, label %sw.bb34
    i32 4, label %sw.bb35
    i32 5, label %sw.bb35
    i32 14, label %sw.bb36
    i32 15, label %sw.bb36
  ], !dbg !4000

sw.bb:                                            ; preds = %if.end7
  %13 = load i64, i64* %number_values.addr, align 8, !dbg !4001
  %mul8 = mul i64 3, %13, !dbg !4003
  store i64 %mul8, i64* %number_coeff, align 8, !dbg !4004
  br label %sw.epilog, !dbg !4005

sw.bb9:                                           ; preds = %if.end7
  %14 = load i64, i64* %number_arguments.addr, align 8, !dbg !4006
  %cmp10 = icmp ule i64 %14, 1, !dbg !4008
  br i1 %cmp10, label %land.lhs.true11, label %if.end14, !dbg !4009

land.lhs.true11:                                  ; preds = %sw.bb9
  %15 = load i64, i64* %number_arguments.addr, align 8, !dbg !4010
  %sub = sub i64 %15, 1, !dbg !4011
  %16 = load i64, i64* %cp_size, align 8, !dbg !4012
  %rem = urem i64 %sub, %16, !dbg !4013
  %cmp12 = icmp ne i64 %rem, 0, !dbg !4014
  br i1 %cmp12, label %if.then13, label %if.end14, !dbg !4015

if.then13:                                        ; preds = %land.lhs.true11
  %17 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !4016
  %call = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %17, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 438, i32 410, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.118, i64 0, i64 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.119, i64 0, i64 0)), !dbg !4018
  store double* null, double** %retval, align 8, !dbg !4019
  br label %return, !dbg !4019

if.end14:                                         ; preds = %land.lhs.true11, %sw.bb9
  %18 = load double*, double** %arguments.addr, align 8, !dbg !4020
  %arrayidx = getelementptr inbounds double, double* %18, i64 0, !dbg !4020
  %19 = load double, double* %arrayidx, align 8, !dbg !4020
  %call15 = call i64 @poly_number_terms(double %19), !dbg !4021
  store i64 %call15, i64* %i, align 8, !dbg !4022
  %20 = load i64, i64* %i, align 8, !dbg !4023
  %21 = load i64, i64* %number_values.addr, align 8, !dbg !4024
  %mul16 = mul i64 %20, %21, !dbg !4025
  %add17 = add i64 2, %mul16, !dbg !4026
  store i64 %add17, i64* %number_coeff, align 8, !dbg !4027
  %22 = load i64, i64* %i, align 8, !dbg !4028
  %cmp18 = icmp eq i64 %22, 0, !dbg !4030
  br i1 %cmp18, label %if.then19, label %if.end21, !dbg !4031

if.then19:                                        ; preds = %if.end14
  %23 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !4032
  %call20 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %23, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 446, i32 410, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.118, i64 0, i64 0), i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.120, i64 0, i64 0)), !dbg !4034
  store double* null, double** %retval, align 8, !dbg !4035
  br label %return, !dbg !4035

if.end21:                                         ; preds = %if.end14
  %24 = load i64, i64* %number_arguments.addr, align 8, !dbg !4036
  %25 = load i64, i64* %i, align 8, !dbg !4038
  %26 = load i64, i64* %cp_size, align 8, !dbg !4039
  %mul22 = mul i64 %25, %26, !dbg !4040
  %add23 = add i64 1, %mul22, !dbg !4041
  %cmp24 = icmp ult i64 %24, %add23, !dbg !4042
  br i1 %cmp24, label %if.then25, label %if.end27, !dbg !4043

if.then25:                                        ; preds = %if.end21
  %27 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !4044
  %28 = load i64, i64* %i, align 8, !dbg !4046
  %conv = uitofp i64 %28 to double, !dbg !4047
  %call26 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %27, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 452, i32 410, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.121, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.118, i64 0, i64 0), double %conv), !dbg !4048
  store double* null, double** %retval, align 8, !dbg !4049
  br label %return, !dbg !4049

if.end27:                                         ; preds = %if.end21
  br label %sw.epilog, !dbg !4050

sw.bb28:                                          ; preds = %if.end7
  %29 = load i64, i64* %number_values.addr, align 8, !dbg !4051
  %mul29 = mul i64 4, %29, !dbg !4052
  store i64 %mul29, i64* %number_coeff, align 8, !dbg !4053
  br label %sw.epilog, !dbg !4054

sw.bb30:                                          ; preds = %if.end7
  store i64 10, i64* %number_coeff, align 8, !dbg !4055
  store i64 0, i64* %cp_x, align 8, !dbg !4056
  store i64 1, i64* %cp_y, align 8, !dbg !4057
  store i64 2, i64* %cp_values, align 8, !dbg !4058
  br label %sw.epilog, !dbg !4059

sw.bb31:                                          ; preds = %if.end7
  store i64 1, i64* %number_coeff, align 8, !dbg !4060
  br label %sw.epilog, !dbg !4061

sw.bb32:                                          ; preds = %if.end7
  store i64 5, i64* %number_coeff, align 8, !dbg !4062
  br label %sw.epilog, !dbg !4063

sw.bb33:                                          ; preds = %if.end7, %if.end7, %if.end7, %if.end7
  store i64 6, i64* %number_coeff, align 8, !dbg !4064
  br label %sw.epilog, !dbg !4065

sw.bb34:                                          ; preds = %if.end7, %if.end7
  store i64 8, i64* %number_coeff, align 8, !dbg !4066
  br label %sw.epilog, !dbg !4067

sw.bb35:                                          ; preds = %if.end7, %if.end7
  store i64 9, i64* %number_coeff, align 8, !dbg !4068
  br label %sw.epilog, !dbg !4069

sw.bb36:                                          ; preds = %if.end7, %if.end7
  store i64 10, i64* %number_coeff, align 8, !dbg !4070
  br label %sw.epilog, !dbg !4071

sw.default:                                       ; preds = %if.end7
  call void @perror(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.122, i64 0, i64 0)), !dbg !4072
  br label %sw.epilog, !dbg !4073

sw.epilog:                                        ; preds = %sw.default, %sw.bb36, %sw.bb35, %sw.bb34, %sw.bb33, %sw.bb32, %sw.bb31, %sw.bb30, %sw.bb28, %if.end27, %sw.bb
  %30 = load i64, i64* %number_coeff, align 8, !dbg !4074
  %call37 = call i8* @AcquireQuantumMemory(i64 %30, i64 8) #7, !dbg !4075
  %31 = bitcast i8* %call37 to double*, !dbg !4076
  store double* %31, double** %coeff, align 8, !dbg !4077
  %32 = load double*, double** %coeff, align 8, !dbg !4078
  %cmp38 = icmp eq double* %32, null, !dbg !4080
  br i1 %cmp38, label %if.then40, label %if.end42, !dbg !4081

if.then40:                                        ; preds = %sw.epilog
  %33 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !4082
  %call41 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %33, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 506, i32 400, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.123, i64 0, i64 0)), !dbg !4084
  store double* null, double** %retval, align 8, !dbg !4085
  br label %return, !dbg !4085

if.end42:                                         ; preds = %sw.epilog
  store i64 0, i64* %i, align 8, !dbg !4086
  br label %for.cond, !dbg !4088

for.cond:                                         ; preds = %for.inc, %if.end42
  %34 = load i64, i64* %i, align 8, !dbg !4089
  %35 = load i64, i64* %number_coeff, align 8, !dbg !4091
  %cmp43 = icmp ult i64 %34, %35, !dbg !4092
  br i1 %cmp43, label %for.body, label %for.end, !dbg !4093

for.body:                                         ; preds = %for.cond
  %36 = load double*, double** %coeff, align 8, !dbg !4094
  %37 = load i64, i64* %i, align 8, !dbg !4095
  %arrayidx45 = getelementptr inbounds double, double* %36, i64 %37, !dbg !4094
  store double 0.000000e+00, double* %arrayidx45, align 8, !dbg !4096
  br label %for.inc, !dbg !4094

for.inc:                                          ; preds = %for.body
  %38 = load i64, i64* %i, align 8, !dbg !4097
  %inc = add i64 %38, 1, !dbg !4097
  store i64 %inc, i64* %i, align 8, !dbg !4097
  br label %for.cond, !dbg !4098, !llvm.loop !4099

for.end:                                          ; preds = %for.cond
  %39 = load i32*, i32** %method.addr, align 8, !dbg !4101
  %40 = load i32, i32* %39, align 4, !dbg !4102
  switch i32 %40, label %sw.default1126 [
    i32 1, label %sw.bb46
    i32 2, label %sw.bb180
    i32 3, label %sw.bb200
    i32 4, label %sw.bb287
    i32 5, label %sw.bb397
    i32 6, label %sw.bb419
    i32 7, label %sw.bb419
    i32 8, label %sw.bb513
    i32 9, label %sw.bb589
    i32 10, label %sw.bb677
    i32 11, label %sw.bb677
    i32 12, label %sw.bb917
    i32 13, label %sw.bb917
    i32 14, label %sw.bb972
    i32 15, label %sw.bb972
    i32 16, label %sw.bb1096
  ], !dbg !4103

sw.bb46:                                          ; preds = %for.end
  %41 = load i64, i64* %number_arguments.addr, align 8, !dbg !4104
  %42 = load i64, i64* %cp_size, align 8, !dbg !4108
  %rem47 = urem i64 %41, %42, !dbg !4109
  %cmp48 = icmp ne i64 %rem47, 0, !dbg !4110
  br i1 %cmp48, label %if.then53, label %lor.lhs.false50, !dbg !4111

lor.lhs.false50:                                  ; preds = %sw.bb46
  %43 = load i64, i64* %number_arguments.addr, align 8, !dbg !4112
  %44 = load i64, i64* %cp_size, align 8, !dbg !4113
  %cmp51 = icmp ult i64 %43, %44, !dbg !4114
  br i1 %cmp51, label %if.then53, label %if.end56, !dbg !4115

if.then53:                                        ; preds = %lor.lhs.false50, %sw.bb46
  %45 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !4116
  %call54 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %45, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 530, i32 410, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.121, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.124, i64 0, i64 0), double 1.000000e+00), !dbg !4118
  %46 = load double*, double** %coeff, align 8, !dbg !4119
  %47 = bitcast double* %46 to i8*, !dbg !4119
  %call55 = call i8* @RelinquishMagickMemory(i8* %47), !dbg !4120
  %48 = bitcast i8* %call55 to double*, !dbg !4121
  store double* %48, double** %coeff, align 8, !dbg !4122
  store double* null, double** %retval, align 8, !dbg !4123
  br label %return, !dbg !4123

if.end56:                                         ; preds = %lor.lhs.false50
  %49 = load i64, i64* %number_arguments.addr, align 8, !dbg !4124
  %50 = load i64, i64* %cp_size, align 8, !dbg !4126
  %cmp57 = icmp eq i64 %49, %50, !dbg !4127
  br i1 %cmp57, label %if.then59, label %if.else87, !dbg !4128

if.then59:                                        ; preds = %if.end56
  %51 = load i64, i64* %cp_values, align 8, !dbg !4129
  %cmp60 = icmp eq i64 %51, 0, !dbg !4132
  br i1 %cmp60, label %if.then62, label %if.else73, !dbg !4133

if.then62:                                        ; preds = %if.then59
  %52 = load double*, double** %coeff, align 8, !dbg !4134
  %arrayidx63 = getelementptr inbounds double, double* %52, i64 0, !dbg !4134
  store double 1.000000e+00, double* %arrayidx63, align 8, !dbg !4136
  %53 = load double*, double** %arguments.addr, align 8, !dbg !4137
  %arrayidx64 = getelementptr inbounds double, double* %53, i64 0, !dbg !4137
  %54 = load double, double* %arrayidx64, align 8, !dbg !4137
  %55 = load double*, double** %arguments.addr, align 8, !dbg !4138
  %arrayidx65 = getelementptr inbounds double, double* %55, i64 2, !dbg !4138
  %56 = load double, double* %arrayidx65, align 8, !dbg !4138
  %sub66 = fsub double %54, %56, !dbg !4139
  %57 = load double*, double** %coeff, align 8, !dbg !4140
  %arrayidx67 = getelementptr inbounds double, double* %57, i64 2, !dbg !4140
  store double %sub66, double* %arrayidx67, align 8, !dbg !4141
  %58 = load double*, double** %coeff, align 8, !dbg !4142
  %arrayidx68 = getelementptr inbounds double, double* %58, i64 4, !dbg !4142
  store double 1.000000e+00, double* %arrayidx68, align 8, !dbg !4143
  %59 = load double*, double** %arguments.addr, align 8, !dbg !4144
  %arrayidx69 = getelementptr inbounds double, double* %59, i64 1, !dbg !4144
  %60 = load double, double* %arrayidx69, align 8, !dbg !4144
  %61 = load double*, double** %arguments.addr, align 8, !dbg !4145
  %arrayidx70 = getelementptr inbounds double, double* %61, i64 3, !dbg !4145
  %62 = load double, double* %arrayidx70, align 8, !dbg !4145
  %sub71 = fsub double %60, %62, !dbg !4146
  %63 = load double*, double** %coeff, align 8, !dbg !4147
  %arrayidx72 = getelementptr inbounds double, double* %63, i64 5, !dbg !4147
  store double %sub71, double* %arrayidx72, align 8, !dbg !4148
  br label %if.end86, !dbg !4149

if.else73:                                        ; preds = %if.then59
  store i64 0, i64* %i, align 8, !dbg !4150
  br label %for.cond74, !dbg !4153

for.cond74:                                       ; preds = %for.inc83, %if.else73
  %64 = load i64, i64* %i, align 8, !dbg !4154
  %65 = load i64, i64* %number_values.addr, align 8, !dbg !4156
  %cmp75 = icmp ult i64 %64, %65, !dbg !4157
  br i1 %cmp75, label %for.body77, label %for.end85, !dbg !4158

for.body77:                                       ; preds = %for.cond74
  %66 = load double*, double** %arguments.addr, align 8, !dbg !4159
  %67 = load i64, i64* %cp_values, align 8, !dbg !4160
  %68 = load i64, i64* %i, align 8, !dbg !4161
  %add78 = add i64 %67, %68, !dbg !4162
  %arrayidx79 = getelementptr inbounds double, double* %66, i64 %add78, !dbg !4159
  %69 = load double, double* %arrayidx79, align 8, !dbg !4159
  %70 = load double*, double** %coeff, align 8, !dbg !4163
  %71 = load i64, i64* %i, align 8, !dbg !4164
  %mul80 = mul i64 %71, 3, !dbg !4165
  %add81 = add i64 %mul80, 2, !dbg !4166
  %arrayidx82 = getelementptr inbounds double, double* %70, i64 %add81, !dbg !4163
  store double %69, double* %arrayidx82, align 8, !dbg !4167
  br label %for.inc83, !dbg !4163

for.inc83:                                        ; preds = %for.body77
  %72 = load i64, i64* %i, align 8, !dbg !4168
  %inc84 = add i64 %72, 1, !dbg !4168
  store i64 %inc84, i64* %i, align 8, !dbg !4168
  br label %for.cond74, !dbg !4169, !llvm.loop !4170

for.end85:                                        ; preds = %for.cond74
  br label %if.end86

if.end86:                                         ; preds = %for.end85, %if.then62
  br label %if.end179, !dbg !4172

if.else87:                                        ; preds = %if.end56
  call void @llvm.dbg.declare(metadata double*** %matrix, metadata !4173, metadata !DIExpression()), !dbg !4175
  call void @llvm.dbg.declare(metadata double*** %vectors, metadata !4176, metadata !DIExpression()), !dbg !4177
  call void @llvm.dbg.declare(metadata [3 x double]* %terms, metadata !4178, metadata !DIExpression()), !dbg !4182
  call void @llvm.dbg.declare(metadata i32* %status, metadata !4183, metadata !DIExpression()), !dbg !4184
  %call88 = call double** @AcquireMagickMatrix(i64 3, i64 3), !dbg !4185
  store double** %call88, double*** %matrix, align 8, !dbg !4186
  %73 = load i64, i64* %number_values.addr, align 8, !dbg !4187
  %call89 = call i8* @AcquireQuantumMemory(i64 %73, i64 8) #7, !dbg !4188
  %74 = bitcast i8* %call89 to double**, !dbg !4189
  store double** %74, double*** %vectors, align 8, !dbg !4190
  %75 = load double**, double*** %matrix, align 8, !dbg !4191
  %cmp90 = icmp eq double** %75, null, !dbg !4193
  br i1 %cmp90, label %if.then95, label %lor.lhs.false92, !dbg !4194

lor.lhs.false92:                                  ; preds = %if.else87
  %76 = load double**, double*** %vectors, align 8, !dbg !4195
  %cmp93 = icmp eq double** %76, null, !dbg !4196
  br i1 %cmp93, label %if.then95, label %if.end100, !dbg !4197

if.then95:                                        ; preds = %lor.lhs.false92, %if.else87
  %77 = load double**, double*** %matrix, align 8, !dbg !4198
  %call96 = call double** @RelinquishMagickMatrix(double** %77, i64 3), !dbg !4200
  store double** %call96, double*** %matrix, align 8, !dbg !4201
  %78 = load double**, double*** %vectors, align 8, !dbg !4202
  %79 = bitcast double** %78 to i8*, !dbg !4202
  %call97 = call i8* @RelinquishMagickMemory(i8* %79), !dbg !4203
  %80 = bitcast i8* %call97 to double**, !dbg !4204
  store double** %80, double*** %vectors, align 8, !dbg !4205
  %81 = load double*, double** %coeff, align 8, !dbg !4206
  %82 = bitcast double* %81 to i8*, !dbg !4206
  %call98 = call i8* @RelinquishMagickMemory(i8* %82), !dbg !4207
  %83 = bitcast i8* %call98 to double*, !dbg !4208
  store double* %83, double** %coeff, align 8, !dbg !4209
  %84 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !4210
  %call99 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %84, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 572, i32 400, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.25, i64 0, i64 0)), !dbg !4211
  store double* null, double** %retval, align 8, !dbg !4212
  br label %return, !dbg !4212

if.end100:                                        ; preds = %lor.lhs.false92
  store i64 0, i64* %i, align 8, !dbg !4213
  br label %for.cond101, !dbg !4215

for.cond101:                                      ; preds = %for.inc108, %if.end100
  %85 = load i64, i64* %i, align 8, !dbg !4216
  %86 = load i64, i64* %number_values.addr, align 8, !dbg !4218
  %cmp102 = icmp ult i64 %85, %86, !dbg !4219
  br i1 %cmp102, label %for.body104, label %for.end110, !dbg !4220

for.body104:                                      ; preds = %for.cond101
  %87 = load double*, double** %coeff, align 8, !dbg !4221
  %88 = load i64, i64* %i, align 8, !dbg !4222
  %mul105 = mul i64 %88, 3, !dbg !4223
  %arrayidx106 = getelementptr inbounds double, double* %87, i64 %mul105, !dbg !4221
  %89 = load double**, double*** %vectors, align 8, !dbg !4224
  %90 = load i64, i64* %i, align 8, !dbg !4225
  %arrayidx107 = getelementptr inbounds double*, double** %89, i64 %90, !dbg !4224
  store double* %arrayidx106, double** %arrayidx107, align 8, !dbg !4226
  br label %for.inc108, !dbg !4224

for.inc108:                                       ; preds = %for.body104
  %91 = load i64, i64* %i, align 8, !dbg !4227
  %inc109 = add i64 %91, 1, !dbg !4227
  store i64 %inc109, i64* %i, align 8, !dbg !4227
  br label %for.cond101, !dbg !4228, !llvm.loop !4229

for.end110:                                       ; preds = %for.cond101
  store i64 0, i64* %i, align 8, !dbg !4231
  br label %for.cond111, !dbg !4233

for.cond111:                                      ; preds = %for.inc124, %for.end110
  %92 = load i64, i64* %i, align 8, !dbg !4234
  %93 = load i64, i64* %number_arguments.addr, align 8, !dbg !4236
  %cmp112 = icmp ult i64 %92, %93, !dbg !4237
  br i1 %cmp112, label %for.body114, label %for.end126, !dbg !4238

for.body114:                                      ; preds = %for.cond111
  %94 = load double*, double** %arguments.addr, align 8, !dbg !4239
  %95 = load i64, i64* %i, align 8, !dbg !4241
  %96 = load i64, i64* %cp_x, align 8, !dbg !4242
  %add115 = add i64 %95, %96, !dbg !4243
  %arrayidx116 = getelementptr inbounds double, double* %94, i64 %add115, !dbg !4239
  %97 = load double, double* %arrayidx116, align 8, !dbg !4239
  %arrayidx117 = getelementptr inbounds [3 x double], [3 x double]* %terms, i64 0, i64 0, !dbg !4244
  store double %97, double* %arrayidx117, align 16, !dbg !4245
  %98 = load double*, double** %arguments.addr, align 8, !dbg !4246
  %99 = load i64, i64* %i, align 8, !dbg !4247
  %100 = load i64, i64* %cp_y, align 8, !dbg !4248
  %add118 = add i64 %99, %100, !dbg !4249
  %arrayidx119 = getelementptr inbounds double, double* %98, i64 %add118, !dbg !4246
  %101 = load double, double* %arrayidx119, align 8, !dbg !4246
  %arrayidx120 = getelementptr inbounds [3 x double], [3 x double]* %terms, i64 0, i64 1, !dbg !4250
  store double %101, double* %arrayidx120, align 8, !dbg !4251
  %arrayidx121 = getelementptr inbounds [3 x double], [3 x double]* %terms, i64 0, i64 2, !dbg !4252
  store double 1.000000e+00, double* %arrayidx121, align 16, !dbg !4253
  %102 = load double**, double*** %matrix, align 8, !dbg !4254
  %103 = load double**, double*** %vectors, align 8, !dbg !4255
  %arraydecay = getelementptr inbounds [3 x double], [3 x double]* %terms, i64 0, i64 0, !dbg !4256
  %104 = load double*, double** %arguments.addr, align 8, !dbg !4257
  %105 = load i64, i64* %i, align 8, !dbg !4258
  %106 = load i64, i64* %cp_values, align 8, !dbg !4259
  %add122 = add i64 %105, %106, !dbg !4260
  %arrayidx123 = getelementptr inbounds double, double* %104, i64 %add122, !dbg !4257
  %107 = load i64, i64* %number_values.addr, align 8, !dbg !4261
  call void @LeastSquaresAddTerms(double** %102, double** %103, double* %arraydecay, double* %arrayidx123, i64 3, i64 %107), !dbg !4262
  br label %for.inc124, !dbg !4263

for.inc124:                                       ; preds = %for.body114
  %108 = load i64, i64* %cp_size, align 8, !dbg !4264
  %109 = load i64, i64* %i, align 8, !dbg !4265
  %add125 = add i64 %109, %108, !dbg !4265
  store i64 %add125, i64* %i, align 8, !dbg !4265
  br label %for.cond111, !dbg !4266, !llvm.loop !4267

for.end126:                                       ; preds = %for.cond111
  %110 = load i64, i64* %number_arguments.addr, align 8, !dbg !4269
  %111 = load i64, i64* %cp_size, align 8, !dbg !4271
  %mul127 = mul i64 2, %111, !dbg !4272
  %cmp128 = icmp eq i64 %110, %mul127, !dbg !4273
  br i1 %cmp128, label %if.then130, label %if.end167, !dbg !4274

if.then130:                                       ; preds = %for.end126
  %112 = load double*, double** %arguments.addr, align 8, !dbg !4275
  %113 = load i64, i64* %cp_x, align 8, !dbg !4277
  %arrayidx131 = getelementptr inbounds double, double* %112, i64 %113, !dbg !4275
  %114 = load double, double* %arrayidx131, align 8, !dbg !4275
  %115 = load double*, double** %arguments.addr, align 8, !dbg !4278
  %116 = load i64, i64* %cp_size, align 8, !dbg !4279
  %117 = load i64, i64* %cp_y, align 8, !dbg !4280
  %add132 = add i64 %116, %117, !dbg !4281
  %arrayidx133 = getelementptr inbounds double, double* %115, i64 %add132, !dbg !4278
  %118 = load double, double* %arrayidx133, align 8, !dbg !4278
  %119 = load double*, double** %arguments.addr, align 8, !dbg !4282
  %120 = load i64, i64* %cp_y, align 8, !dbg !4283
  %arrayidx134 = getelementptr inbounds double, double* %119, i64 %120, !dbg !4282
  %121 = load double, double* %arrayidx134, align 8, !dbg !4282
  %sub135 = fsub double %118, %121, !dbg !4284
  %sub136 = fsub double %114, %sub135, !dbg !4285
  %arrayidx137 = getelementptr inbounds [3 x double], [3 x double]* %terms, i64 0, i64 0, !dbg !4286
  store double %sub136, double* %arrayidx137, align 16, !dbg !4287
  %122 = load double*, double** %arguments.addr, align 8, !dbg !4288
  %123 = load i64, i64* %cp_y, align 8, !dbg !4289
  %arrayidx138 = getelementptr inbounds double, double* %122, i64 %123, !dbg !4288
  %124 = load double, double* %arrayidx138, align 8, !dbg !4288
  %125 = load double*, double** %arguments.addr, align 8, !dbg !4290
  %126 = load i64, i64* %cp_size, align 8, !dbg !4291
  %127 = load i64, i64* %cp_x, align 8, !dbg !4292
  %add139 = add i64 %126, %127, !dbg !4293
  %arrayidx140 = getelementptr inbounds double, double* %125, i64 %add139, !dbg !4290
  %128 = load double, double* %arrayidx140, align 8, !dbg !4290
  %129 = load double*, double** %arguments.addr, align 8, !dbg !4294
  %130 = load i64, i64* %cp_x, align 8, !dbg !4295
  %arrayidx141 = getelementptr inbounds double, double* %129, i64 %130, !dbg !4294
  %131 = load double, double* %arrayidx141, align 8, !dbg !4294
  %sub142 = fsub double %128, %131, !dbg !4296
  %add143 = fadd double %124, %sub142, !dbg !4297
  %arrayidx144 = getelementptr inbounds [3 x double], [3 x double]* %terms, i64 0, i64 1, !dbg !4298
  store double %add143, double* %arrayidx144, align 8, !dbg !4299
  %arrayidx145 = getelementptr inbounds [3 x double], [3 x double]* %terms, i64 0, i64 2, !dbg !4300
  store double 1.000000e+00, double* %arrayidx145, align 16, !dbg !4301
  %132 = load i64, i64* %cp_values, align 8, !dbg !4302
  %cmp146 = icmp eq i64 %132, 0, !dbg !4304
  br i1 %cmp146, label %if.then148, label %if.else163, !dbg !4305

if.then148:                                       ; preds = %if.then130
  call void @llvm.dbg.declare(metadata [2 x double]* %uv2, metadata !4306, metadata !DIExpression()), !dbg !4311
  %133 = load double*, double** %arguments.addr, align 8, !dbg !4312
  %arrayidx149 = getelementptr inbounds double, double* %133, i64 0, !dbg !4312
  %134 = load double, double* %arrayidx149, align 8, !dbg !4312
  %135 = load double*, double** %arguments.addr, align 8, !dbg !4313
  %arrayidx150 = getelementptr inbounds double, double* %135, i64 5, !dbg !4313
  %136 = load double, double* %arrayidx150, align 8, !dbg !4313
  %sub151 = fsub double %134, %136, !dbg !4314
  %137 = load double*, double** %arguments.addr, align 8, !dbg !4315
  %arrayidx152 = getelementptr inbounds double, double* %137, i64 1, !dbg !4315
  %138 = load double, double* %arrayidx152, align 8, !dbg !4315
  %add153 = fadd double %sub151, %138, !dbg !4316
  %arrayidx154 = getelementptr inbounds [2 x double], [2 x double]* %uv2, i64 0, i64 0, !dbg !4317
  store double %add153, double* %arrayidx154, align 16, !dbg !4318
  %139 = load double*, double** %arguments.addr, align 8, !dbg !4319
  %arrayidx155 = getelementptr inbounds double, double* %139, i64 1, !dbg !4319
  %140 = load double, double* %arrayidx155, align 8, !dbg !4319
  %141 = load double*, double** %arguments.addr, align 8, !dbg !4320
  %arrayidx156 = getelementptr inbounds double, double* %141, i64 4, !dbg !4320
  %142 = load double, double* %arrayidx156, align 8, !dbg !4320
  %add157 = fadd double %140, %142, !dbg !4321
  %143 = load double*, double** %arguments.addr, align 8, !dbg !4322
  %arrayidx158 = getelementptr inbounds double, double* %143, i64 0, !dbg !4322
  %144 = load double, double* %arrayidx158, align 8, !dbg !4322
  %sub159 = fsub double %add157, %144, !dbg !4323
  %arrayidx160 = getelementptr inbounds [2 x double], [2 x double]* %uv2, i64 0, i64 1, !dbg !4324
  store double %sub159, double* %arrayidx160, align 8, !dbg !4325
  %145 = load double**, double*** %matrix, align 8, !dbg !4326
  %146 = load double**, double*** %vectors, align 8, !dbg !4327
  %arraydecay161 = getelementptr inbounds [3 x double], [3 x double]* %terms, i64 0, i64 0, !dbg !4328
  %arraydecay162 = getelementptr inbounds [2 x double], [2 x double]* %uv2, i64 0, i64 0, !dbg !4329
  call void @LeastSquaresAddTerms(double** %145, double** %146, double* %arraydecay161, double* %arraydecay162, i64 3, i64 2), !dbg !4330
  br label %if.end166, !dbg !4331

if.else163:                                       ; preds = %if.then130
  %147 = load double**, double*** %matrix, align 8, !dbg !4332
  %148 = load double**, double*** %vectors, align 8, !dbg !4334
  %arraydecay164 = getelementptr inbounds [3 x double], [3 x double]* %terms, i64 0, i64 0, !dbg !4335
  %149 = load double*, double** %arguments.addr, align 8, !dbg !4336
  %150 = load i64, i64* %cp_values, align 8, !dbg !4337
  %arrayidx165 = getelementptr inbounds double, double* %149, i64 %150, !dbg !4336
  %151 = load i64, i64* %number_values.addr, align 8, !dbg !4338
  call void @LeastSquaresAddTerms(double** %147, double** %148, double* %arraydecay164, double* %arrayidx165, i64 3, i64 %151), !dbg !4339
  br label %if.end166

if.end166:                                        ; preds = %if.else163, %if.then148
  br label %if.end167, !dbg !4340

if.end167:                                        ; preds = %if.end166, %for.end126
  %152 = load double**, double*** %matrix, align 8, !dbg !4341
  %153 = load double**, double*** %vectors, align 8, !dbg !4342
  %154 = load i64, i64* %number_values.addr, align 8, !dbg !4343
  %call168 = call i32 @GaussJordanElimination(double** %152, double** %153, i64 3, i64 %154), !dbg !4344
  store i32 %call168, i32* %status, align 4, !dbg !4345
  %155 = load double**, double*** %matrix, align 8, !dbg !4346
  %call169 = call double** @RelinquishMagickMatrix(double** %155, i64 3), !dbg !4347
  store double** %call169, double*** %matrix, align 8, !dbg !4348
  %156 = load double**, double*** %vectors, align 8, !dbg !4349
  %157 = bitcast double** %156 to i8*, !dbg !4349
  %call170 = call i8* @RelinquishMagickMemory(i8* %157), !dbg !4350
  %158 = bitcast i8* %call170 to double**, !dbg !4351
  store double** %158, double*** %vectors, align 8, !dbg !4352
  %159 = load i32, i32* %status, align 4, !dbg !4353
  %cmp171 = icmp eq i32 %159, 0, !dbg !4355
  br i1 %cmp171, label %if.then173, label %if.end178, !dbg !4356

if.then173:                                       ; preds = %if.end167
  %160 = load double*, double** %coeff, align 8, !dbg !4357
  %161 = bitcast double* %160 to i8*, !dbg !4357
  %call174 = call i8* @RelinquishMagickMemory(i8* %161), !dbg !4359
  %162 = bitcast i8* %call174 to double*, !dbg !4360
  store double* %162, double** %coeff, align 8, !dbg !4361
  %163 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !4362
  %164 = load i32*, i32** %method.addr, align 8, !dbg !4363
  %165 = load i32, i32* %164, align 4, !dbg !4364
  %conv175 = zext i32 %165 to i64, !dbg !4364
  %call176 = call i8* @CommandOptionToMnemonic(i32 20, i64 %conv175), !dbg !4365
  %call177 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %163, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 618, i32 410, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.125, i64 0, i64 0), i8* %call176), !dbg !4366
  store double* null, double** %retval, align 8, !dbg !4367
  br label %return, !dbg !4367

if.end178:                                        ; preds = %if.end167
  br label %if.end179

if.end179:                                        ; preds = %if.end178, %if.end86
  %166 = load double*, double** %coeff, align 8, !dbg !4368
  store double* %166, double** %retval, align 8, !dbg !4369
  br label %return, !dbg !4369

sw.bb180:                                         ; preds = %for.end
  call void @llvm.dbg.declare(metadata [8 x double]* %inverse, metadata !4370, metadata !DIExpression()), !dbg !4372
  %167 = load i64, i64* %number_arguments.addr, align 8, !dbg !4373
  %cmp181 = icmp ne i64 %167, 6, !dbg !4375
  br i1 %cmp181, label %if.then183, label %if.end188, !dbg !4376

if.then183:                                       ; preds = %sw.bb180
  %168 = load double*, double** %coeff, align 8, !dbg !4377
  %169 = bitcast double* %168 to i8*, !dbg !4377
  %call184 = call i8* @RelinquishMagickMemory(i8* %169), !dbg !4379
  %170 = bitcast i8* %call184 to double*, !dbg !4380
  store double* %170, double** %coeff, align 8, !dbg !4381
  %171 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !4382
  %172 = load i32*, i32** %method.addr, align 8, !dbg !4383
  %173 = load i32, i32* %172, align 4, !dbg !4384
  %conv185 = zext i32 %173 to i64, !dbg !4384
  %call186 = call i8* @CommandOptionToMnemonic(i32 20, i64 %conv185), !dbg !4385
  %call187 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %171, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 644, i32 410, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.126, i64 0, i64 0), i8* %call186), !dbg !4386
  store double* null, double** %retval, align 8, !dbg !4387
  br label %return, !dbg !4387

if.end188:                                        ; preds = %sw.bb180
  store i64 0, i64* %i, align 8, !dbg !4388
  br label %for.cond189, !dbg !4390

for.cond189:                                      ; preds = %for.inc195, %if.end188
  %174 = load i64, i64* %i, align 8, !dbg !4391
  %cmp190 = icmp ult i64 %174, 6, !dbg !4393
  br i1 %cmp190, label %for.body192, label %for.end197, !dbg !4394

for.body192:                                      ; preds = %for.cond189
  %175 = load double*, double** %arguments.addr, align 8, !dbg !4395
  %176 = load i64, i64* %i, align 8, !dbg !4396
  %arrayidx193 = getelementptr inbounds double, double* %175, i64 %176, !dbg !4395
  %177 = load double, double* %arrayidx193, align 8, !dbg !4395
  %178 = load i64, i64* %i, align 8, !dbg !4397
  %arrayidx194 = getelementptr inbounds [8 x double], [8 x double]* %inverse, i64 0, i64 %178, !dbg !4398
  store double %177, double* %arrayidx194, align 8, !dbg !4399
  br label %for.inc195, !dbg !4398

for.inc195:                                       ; preds = %for.body192
  %179 = load i64, i64* %i, align 8, !dbg !4400
  %inc196 = add i64 %179, 1, !dbg !4400
  store i64 %inc196, i64* %i, align 8, !dbg !4400
  br label %for.cond189, !dbg !4401, !llvm.loop !4402

for.end197:                                       ; preds = %for.cond189
  %arraydecay198 = getelementptr inbounds [8 x double], [8 x double]* %inverse, i64 0, i64 0, !dbg !4404
  call void @AffineArgsToCoefficients(double* %arraydecay198), !dbg !4405
  %arraydecay199 = getelementptr inbounds [8 x double], [8 x double]* %inverse, i64 0, i64 0, !dbg !4406
  %180 = load double*, double** %coeff, align 8, !dbg !4407
  call void @InvertAffineCoefficients(double* %arraydecay199, double* %180), !dbg !4408
  %181 = load i32*, i32** %method.addr, align 8, !dbg !4409
  store i32 1, i32* %181, align 4, !dbg !4410
  %182 = load double*, double** %coeff, align 8, !dbg !4411
  store double* %182, double** %retval, align 8, !dbg !4412
  br label %return, !dbg !4412

sw.bb200:                                         ; preds = %for.end
  call void @llvm.dbg.declare(metadata double* %cosine, metadata !4413, metadata !DIExpression()), !dbg !4415
  call void @llvm.dbg.declare(metadata double* %sine, metadata !4416, metadata !DIExpression()), !dbg !4417
  call void @llvm.dbg.declare(metadata double* %x, metadata !4418, metadata !DIExpression()), !dbg !4419
  call void @llvm.dbg.declare(metadata double* %y, metadata !4420, metadata !DIExpression()), !dbg !4421
  call void @llvm.dbg.declare(metadata double* %sx, metadata !4422, metadata !DIExpression()), !dbg !4423
  call void @llvm.dbg.declare(metadata double* %sy, metadata !4424, metadata !DIExpression()), !dbg !4425
  call void @llvm.dbg.declare(metadata double* %a, metadata !4426, metadata !DIExpression()), !dbg !4427
  call void @llvm.dbg.declare(metadata double* %nx, metadata !4428, metadata !DIExpression()), !dbg !4429
  call void @llvm.dbg.declare(metadata double* %ny, metadata !4430, metadata !DIExpression()), !dbg !4431
  %183 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4432
  %columns = getelementptr inbounds %struct._Image, %struct._Image* %183, i32 0, i32 7, !dbg !4433
  %184 = load i64, i64* %columns, align 8, !dbg !4433
  %conv201 = uitofp i64 %184 to double, !dbg !4434
  %div = fdiv double %conv201, 2.000000e+00, !dbg !4435
  %185 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4436
  %page = getelementptr inbounds %struct._Image, %struct._Image* %185, i32 0, i32 26, !dbg !4437
  %x202 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %page, i32 0, i32 2, !dbg !4438
  %186 = load i64, i64* %x202, align 8, !dbg !4438
  %conv203 = sitofp i64 %186 to double, !dbg !4439
  %add204 = fadd double %div, %conv203, !dbg !4440
  store double %add204, double* %nx, align 8, !dbg !4441
  store double %add204, double* %x, align 8, !dbg !4442
  %187 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4443
  %rows = getelementptr inbounds %struct._Image, %struct._Image* %187, i32 0, i32 8, !dbg !4444
  %188 = load i64, i64* %rows, align 8, !dbg !4444
  %conv205 = uitofp i64 %188 to double, !dbg !4445
  %div206 = fdiv double %conv205, 2.000000e+00, !dbg !4446
  %189 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4447
  %page207 = getelementptr inbounds %struct._Image, %struct._Image* %189, i32 0, i32 26, !dbg !4448
  %y208 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %page207, i32 0, i32 3, !dbg !4449
  %190 = load i64, i64* %y208, align 8, !dbg !4449
  %conv209 = sitofp i64 %190 to double, !dbg !4450
  %add210 = fadd double %div206, %conv209, !dbg !4451
  store double %add210, double* %ny, align 8, !dbg !4452
  store double %add210, double* %y, align 8, !dbg !4453
  store double 1.000000e+00, double* %sy, align 8, !dbg !4454
  store double 1.000000e+00, double* %sx, align 8, !dbg !4455
  %191 = load i64, i64* %number_arguments.addr, align 8, !dbg !4456
  switch i64 %191, label %sw.default221 [
    i64 0, label %sw.bb211
    i64 1, label %sw.bb216
    i64 2, label %sw.bb218
  ], !dbg !4457

sw.bb211:                                         ; preds = %sw.bb200
  %192 = load double*, double** %coeff, align 8, !dbg !4458
  %193 = bitcast double* %192 to i8*, !dbg !4458
  %call212 = call i8* @RelinquishMagickMemory(i8* %193), !dbg !4460
  %194 = bitcast i8* %call212 to double*, !dbg !4461
  store double* %194, double** %coeff, align 8, !dbg !4462
  %195 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !4463
  %196 = load i32*, i32** %method.addr, align 8, !dbg !4464
  %197 = load i32, i32* %196, align 4, !dbg !4465
  %conv213 = zext i32 %197 to i64, !dbg !4465
  %call214 = call i8* @CommandOptionToMnemonic(i32 20, i64 %conv213), !dbg !4466
  %call215 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %195, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 693, i32 410, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.127, i64 0, i64 0), i8* %call214), !dbg !4467
  store double* null, double** %retval, align 8, !dbg !4468
  br label %return, !dbg !4468

sw.bb216:                                         ; preds = %sw.bb200
  %198 = load double*, double** %arguments.addr, align 8, !dbg !4469
  %arrayidx217 = getelementptr inbounds double, double* %198, i64 0, !dbg !4469
  %199 = load double, double* %arrayidx217, align 8, !dbg !4469
  store double %199, double* %a, align 8, !dbg !4470
  br label %sw.epilog250, !dbg !4471

sw.bb218:                                         ; preds = %sw.bb200
  %200 = load double*, double** %arguments.addr, align 8, !dbg !4472
  %arrayidx219 = getelementptr inbounds double, double* %200, i64 0, !dbg !4472
  %201 = load double, double* %arrayidx219, align 8, !dbg !4472
  store double %201, double* %sy, align 8, !dbg !4473
  store double %201, double* %sx, align 8, !dbg !4474
  %202 = load double*, double** %arguments.addr, align 8, !dbg !4475
  %arrayidx220 = getelementptr inbounds double, double* %202, i64 1, !dbg !4475
  %203 = load double, double* %arrayidx220, align 8, !dbg !4475
  store double %203, double* %a, align 8, !dbg !4476
  br label %sw.epilog250, !dbg !4477

sw.default221:                                    ; preds = %sw.bb200
  %204 = load double*, double** %arguments.addr, align 8, !dbg !4478
  %arrayidx222 = getelementptr inbounds double, double* %204, i64 0, !dbg !4478
  %205 = load double, double* %arrayidx222, align 8, !dbg !4478
  store double %205, double* %nx, align 8, !dbg !4479
  store double %205, double* %x, align 8, !dbg !4480
  %206 = load double*, double** %arguments.addr, align 8, !dbg !4481
  %arrayidx223 = getelementptr inbounds double, double* %206, i64 1, !dbg !4481
  %207 = load double, double* %arrayidx223, align 8, !dbg !4481
  store double %207, double* %ny, align 8, !dbg !4482
  store double %207, double* %y, align 8, !dbg !4483
  %208 = load i64, i64* %number_arguments.addr, align 8, !dbg !4484
  switch i64 %208, label %sw.default244 [
    i64 3, label %sw.bb224
    i64 4, label %sw.bb226
    i64 5, label %sw.bb229
    i64 6, label %sw.bb233
    i64 7, label %sw.bb238
  ], !dbg !4485

sw.bb224:                                         ; preds = %sw.default221
  %209 = load double*, double** %arguments.addr, align 8, !dbg !4486
  %arrayidx225 = getelementptr inbounds double, double* %209, i64 2, !dbg !4486
  %210 = load double, double* %arrayidx225, align 8, !dbg !4486
  store double %210, double* %a, align 8, !dbg !4488
  br label %sw.epilog249, !dbg !4489

sw.bb226:                                         ; preds = %sw.default221
  %211 = load double*, double** %arguments.addr, align 8, !dbg !4490
  %arrayidx227 = getelementptr inbounds double, double* %211, i64 2, !dbg !4490
  %212 = load double, double* %arrayidx227, align 8, !dbg !4490
  store double %212, double* %sy, align 8, !dbg !4491
  store double %212, double* %sx, align 8, !dbg !4492
  %213 = load double*, double** %arguments.addr, align 8, !dbg !4493
  %arrayidx228 = getelementptr inbounds double, double* %213, i64 3, !dbg !4493
  %214 = load double, double* %arrayidx228, align 8, !dbg !4493
  store double %214, double* %a, align 8, !dbg !4494
  br label %sw.epilog249, !dbg !4495

sw.bb229:                                         ; preds = %sw.default221
  %215 = load double*, double** %arguments.addr, align 8, !dbg !4496
  %arrayidx230 = getelementptr inbounds double, double* %215, i64 2, !dbg !4496
  %216 = load double, double* %arrayidx230, align 8, !dbg !4496
  store double %216, double* %sx, align 8, !dbg !4497
  %217 = load double*, double** %arguments.addr, align 8, !dbg !4498
  %arrayidx231 = getelementptr inbounds double, double* %217, i64 3, !dbg !4498
  %218 = load double, double* %arrayidx231, align 8, !dbg !4498
  store double %218, double* %sy, align 8, !dbg !4499
  %219 = load double*, double** %arguments.addr, align 8, !dbg !4500
  %arrayidx232 = getelementptr inbounds double, double* %219, i64 4, !dbg !4500
  %220 = load double, double* %arrayidx232, align 8, !dbg !4500
  store double %220, double* %a, align 8, !dbg !4501
  br label %sw.epilog249, !dbg !4502

sw.bb233:                                         ; preds = %sw.default221
  %221 = load double*, double** %arguments.addr, align 8, !dbg !4503
  %arrayidx234 = getelementptr inbounds double, double* %221, i64 2, !dbg !4503
  %222 = load double, double* %arrayidx234, align 8, !dbg !4503
  store double %222, double* %sy, align 8, !dbg !4504
  store double %222, double* %sx, align 8, !dbg !4505
  %223 = load double*, double** %arguments.addr, align 8, !dbg !4506
  %arrayidx235 = getelementptr inbounds double, double* %223, i64 3, !dbg !4506
  %224 = load double, double* %arrayidx235, align 8, !dbg !4506
  store double %224, double* %a, align 8, !dbg !4507
  %225 = load double*, double** %arguments.addr, align 8, !dbg !4508
  %arrayidx236 = getelementptr inbounds double, double* %225, i64 4, !dbg !4508
  %226 = load double, double* %arrayidx236, align 8, !dbg !4508
  store double %226, double* %nx, align 8, !dbg !4509
  %227 = load double*, double** %arguments.addr, align 8, !dbg !4510
  %arrayidx237 = getelementptr inbounds double, double* %227, i64 5, !dbg !4510
  %228 = load double, double* %arrayidx237, align 8, !dbg !4510
  store double %228, double* %ny, align 8, !dbg !4511
  br label %sw.epilog249, !dbg !4512

sw.bb238:                                         ; preds = %sw.default221
  %229 = load double*, double** %arguments.addr, align 8, !dbg !4513
  %arrayidx239 = getelementptr inbounds double, double* %229, i64 2, !dbg !4513
  %230 = load double, double* %arrayidx239, align 8, !dbg !4513
  store double %230, double* %sx, align 8, !dbg !4514
  %231 = load double*, double** %arguments.addr, align 8, !dbg !4515
  %arrayidx240 = getelementptr inbounds double, double* %231, i64 3, !dbg !4515
  %232 = load double, double* %arrayidx240, align 8, !dbg !4515
  store double %232, double* %sy, align 8, !dbg !4516
  %233 = load double*, double** %arguments.addr, align 8, !dbg !4517
  %arrayidx241 = getelementptr inbounds double, double* %233, i64 4, !dbg !4517
  %234 = load double, double* %arrayidx241, align 8, !dbg !4517
  store double %234, double* %a, align 8, !dbg !4518
  %235 = load double*, double** %arguments.addr, align 8, !dbg !4519
  %arrayidx242 = getelementptr inbounds double, double* %235, i64 5, !dbg !4519
  %236 = load double, double* %arrayidx242, align 8, !dbg !4519
  store double %236, double* %nx, align 8, !dbg !4520
  %237 = load double*, double** %arguments.addr, align 8, !dbg !4521
  %arrayidx243 = getelementptr inbounds double, double* %237, i64 6, !dbg !4521
  %238 = load double, double* %arrayidx243, align 8, !dbg !4521
  store double %238, double* %ny, align 8, !dbg !4522
  br label %sw.epilog249, !dbg !4523

sw.default244:                                    ; preds = %sw.default221
  %239 = load double*, double** %coeff, align 8, !dbg !4524
  %240 = bitcast double* %239 to i8*, !dbg !4524
  %call245 = call i8* @RelinquishMagickMemory(i8* %240), !dbg !4525
  %241 = bitcast i8* %call245 to double*, !dbg !4526
  store double* %241, double** %coeff, align 8, !dbg !4527
  %242 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !4528
  %243 = load i32*, i32** %method.addr, align 8, !dbg !4529
  %244 = load i32, i32* %243, align 4, !dbg !4530
  %conv246 = zext i32 %244 to i64, !dbg !4530
  %call247 = call i8* @CommandOptionToMnemonic(i32 20, i64 %conv246), !dbg !4531
  %call248 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %242, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 735, i32 410, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.128, i64 0, i64 0), i8* %call247), !dbg !4532
  store double* null, double** %retval, align 8, !dbg !4533
  br label %return, !dbg !4533

sw.epilog249:                                     ; preds = %sw.bb238, %sw.bb233, %sw.bb229, %sw.bb226, %sw.bb224
  br label %sw.epilog250, !dbg !4534

sw.epilog250:                                     ; preds = %sw.epilog249, %sw.bb218, %sw.bb216
  %245 = load double, double* %sx, align 8, !dbg !4535
  %246 = call double @llvm.fabs.f64(double %245), !dbg !4537
  %cmp251 = fcmp olt double %246, 1.000000e-15, !dbg !4538
  br i1 %cmp251, label %if.then256, label %lor.lhs.false253, !dbg !4539

lor.lhs.false253:                                 ; preds = %sw.epilog250
  %247 = load double, double* %sy, align 8, !dbg !4540
  %248 = call double @llvm.fabs.f64(double %247), !dbg !4541
  %cmp254 = fcmp olt double %248, 1.000000e-15, !dbg !4542
  br i1 %cmp254, label %if.then256, label %if.end261, !dbg !4543

if.then256:                                       ; preds = %lor.lhs.false253, %sw.epilog250
  %249 = load double*, double** %coeff, align 8, !dbg !4544
  %250 = bitcast double* %249 to i8*, !dbg !4544
  %call257 = call i8* @RelinquishMagickMemory(i8* %250), !dbg !4546
  %251 = bitcast i8* %call257 to double*, !dbg !4547
  store double* %251, double** %coeff, align 8, !dbg !4548
  %252 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !4549
  %253 = load i32*, i32** %method.addr, align 8, !dbg !4550
  %254 = load i32, i32* %253, align 4, !dbg !4551
  %conv258 = zext i32 %254 to i64, !dbg !4551
  %call259 = call i8* @CommandOptionToMnemonic(i32 20, i64 %conv258), !dbg !4552
  %call260 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %252, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 745, i32 410, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.129, i64 0, i64 0), i8* %call259), !dbg !4553
  store double* null, double** %retval, align 8, !dbg !4554
  br label %return, !dbg !4554

if.end261:                                        ; preds = %lor.lhs.false253
  %255 = load double, double* %a, align 8, !dbg !4555
  %call262 = call double @DegreesToRadians(double %255), !dbg !4556
  store double %call262, double* %a, align 8, !dbg !4557
  %256 = load double, double* %a, align 8, !dbg !4558
  %call263 = call double @cos(double %256) #6, !dbg !4559
  store double %call263, double* %cosine, align 8, !dbg !4560
  %257 = load double, double* %a, align 8, !dbg !4561
  %call264 = call double @sin(double %257) #6, !dbg !4562
  store double %call264, double* %sine, align 8, !dbg !4563
  %258 = load i32*, i32** %method.addr, align 8, !dbg !4564
  store i32 1, i32* %258, align 4, !dbg !4565
  %259 = load double, double* %cosine, align 8, !dbg !4566
  %260 = load double, double* %sx, align 8, !dbg !4567
  %div265 = fdiv double %259, %260, !dbg !4568
  %261 = load double*, double** %coeff, align 8, !dbg !4569
  %arrayidx266 = getelementptr inbounds double, double* %261, i64 0, !dbg !4569
  store double %div265, double* %arrayidx266, align 8, !dbg !4570
  %262 = load double, double* %sine, align 8, !dbg !4571
  %263 = load double, double* %sx, align 8, !dbg !4572
  %div267 = fdiv double %262, %263, !dbg !4573
  %264 = load double*, double** %coeff, align 8, !dbg !4574
  %arrayidx268 = getelementptr inbounds double, double* %264, i64 1, !dbg !4574
  store double %div267, double* %arrayidx268, align 8, !dbg !4575
  %265 = load double, double* %x, align 8, !dbg !4576
  %266 = load double, double* %nx, align 8, !dbg !4577
  %267 = load double*, double** %coeff, align 8, !dbg !4578
  %arrayidx269 = getelementptr inbounds double, double* %267, i64 0, !dbg !4578
  %268 = load double, double* %arrayidx269, align 8, !dbg !4578
  %mul270 = fmul double %266, %268, !dbg !4579
  %sub271 = fsub double %265, %mul270, !dbg !4580
  %269 = load double, double* %ny, align 8, !dbg !4581
  %270 = load double*, double** %coeff, align 8, !dbg !4582
  %arrayidx272 = getelementptr inbounds double, double* %270, i64 1, !dbg !4582
  %271 = load double, double* %arrayidx272, align 8, !dbg !4582
  %mul273 = fmul double %269, %271, !dbg !4583
  %sub274 = fsub double %sub271, %mul273, !dbg !4584
  %272 = load double*, double** %coeff, align 8, !dbg !4585
  %arrayidx275 = getelementptr inbounds double, double* %272, i64 2, !dbg !4585
  store double %sub274, double* %arrayidx275, align 8, !dbg !4586
  %273 = load double, double* %sine, align 8, !dbg !4587
  %fneg = fneg double %273, !dbg !4588
  %274 = load double, double* %sy, align 8, !dbg !4589
  %div276 = fdiv double %fneg, %274, !dbg !4590
  %275 = load double*, double** %coeff, align 8, !dbg !4591
  %arrayidx277 = getelementptr inbounds double, double* %275, i64 3, !dbg !4591
  store double %div276, double* %arrayidx277, align 8, !dbg !4592
  %276 = load double, double* %cosine, align 8, !dbg !4593
  %277 = load double, double* %sy, align 8, !dbg !4594
  %div278 = fdiv double %276, %277, !dbg !4595
  %278 = load double*, double** %coeff, align 8, !dbg !4596
  %arrayidx279 = getelementptr inbounds double, double* %278, i64 4, !dbg !4596
  store double %div278, double* %arrayidx279, align 8, !dbg !4597
  %279 = load double, double* %y, align 8, !dbg !4598
  %280 = load double, double* %nx, align 8, !dbg !4599
  %281 = load double*, double** %coeff, align 8, !dbg !4600
  %arrayidx280 = getelementptr inbounds double, double* %281, i64 3, !dbg !4600
  %282 = load double, double* %arrayidx280, align 8, !dbg !4600
  %mul281 = fmul double %280, %282, !dbg !4601
  %sub282 = fsub double %279, %mul281, !dbg !4602
  %283 = load double, double* %ny, align 8, !dbg !4603
  %284 = load double*, double** %coeff, align 8, !dbg !4604
  %arrayidx283 = getelementptr inbounds double, double* %284, i64 4, !dbg !4604
  %285 = load double, double* %arrayidx283, align 8, !dbg !4604
  %mul284 = fmul double %283, %285, !dbg !4605
  %sub285 = fsub double %sub282, %mul284, !dbg !4606
  %286 = load double*, double** %coeff, align 8, !dbg !4607
  %arrayidx286 = getelementptr inbounds double, double* %286, i64 5, !dbg !4607
  store double %sub285, double* %arrayidx286, align 8, !dbg !4608
  %287 = load double*, double** %coeff, align 8, !dbg !4609
  store double* %287, double** %retval, align 8, !dbg !4610
  br label %return, !dbg !4610

sw.bb287:                                         ; preds = %for.end
  call void @llvm.dbg.declare(metadata double*** %matrix288, metadata !4611, metadata !DIExpression()), !dbg !4613
  call void @llvm.dbg.declare(metadata [1 x double*]* %vectors289, metadata !4614, metadata !DIExpression()), !dbg !4618
  call void @llvm.dbg.declare(metadata [8 x double]* %terms290, metadata !4619, metadata !DIExpression()), !dbg !4620
  call void @llvm.dbg.declare(metadata i64* %cp_u, metadata !4621, metadata !DIExpression()), !dbg !4622
  %288 = load i64, i64* %cp_values, align 8, !dbg !4623
  store i64 %288, i64* %cp_u, align 8, !dbg !4622
  call void @llvm.dbg.declare(metadata i64* %cp_v, metadata !4624, metadata !DIExpression()), !dbg !4625
  %289 = load i64, i64* %cp_values, align 8, !dbg !4626
  %add291 = add i64 %289, 1, !dbg !4627
  store i64 %add291, i64* %cp_v, align 8, !dbg !4625
  call void @llvm.dbg.declare(metadata i32* %status292, metadata !4628, metadata !DIExpression()), !dbg !4629
  %290 = load i64, i64* %number_arguments.addr, align 8, !dbg !4630
  %291 = load i64, i64* %cp_size, align 8, !dbg !4632
  %rem293 = urem i64 %290, %291, !dbg !4633
  %cmp294 = icmp ne i64 %rem293, 0, !dbg !4634
  br i1 %cmp294, label %if.then300, label %lor.lhs.false296, !dbg !4635

lor.lhs.false296:                                 ; preds = %sw.bb287
  %292 = load i64, i64* %number_arguments.addr, align 8, !dbg !4636
  %293 = load i64, i64* %cp_size, align 8, !dbg !4637
  %mul297 = mul i64 %293, 4, !dbg !4638
  %cmp298 = icmp ult i64 %292, %mul297, !dbg !4639
  br i1 %cmp298, label %if.then300, label %if.end305, !dbg !4640

if.then300:                                       ; preds = %lor.lhs.false296, %sw.bb287
  %294 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !4641
  %295 = load i32*, i32** %method.addr, align 8, !dbg !4643
  %296 = load i32, i32* %295, align 4, !dbg !4644
  %conv301 = zext i32 %296 to i64, !dbg !4644
  %call302 = call i8* @CommandOptionToMnemonic(i32 20, i64 %conv301), !dbg !4645
  %call303 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %294, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 807, i32 410, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.121, i64 0, i64 0), i8* %call302, double 4.000000e+00), !dbg !4646
  %297 = load double*, double** %coeff, align 8, !dbg !4647
  %298 = bitcast double* %297 to i8*, !dbg !4647
  %call304 = call i8* @RelinquishMagickMemory(i8* %298), !dbg !4648
  %299 = bitcast i8* %call304 to double*, !dbg !4649
  store double* %299, double** %coeff, align 8, !dbg !4650
  store double* null, double** %retval, align 8, !dbg !4651
  br label %return, !dbg !4651

if.end305:                                        ; preds = %lor.lhs.false296
  %300 = load double*, double** %coeff, align 8, !dbg !4652
  %arrayidx306 = getelementptr inbounds double, double* %300, i64 0, !dbg !4652
  %arrayidx307 = getelementptr inbounds [1 x double*], [1 x double*]* %vectors289, i64 0, i64 0, !dbg !4653
  store double* %arrayidx306, double** %arrayidx307, align 8, !dbg !4654
  %call308 = call double** @AcquireMagickMatrix(i64 8, i64 8), !dbg !4655
  store double** %call308, double*** %matrix288, align 8, !dbg !4656
  %301 = load double**, double*** %matrix288, align 8, !dbg !4657
  %cmp309 = icmp eq double** %301, null, !dbg !4659
  br i1 %cmp309, label %if.then311, label %if.end313, !dbg !4660

if.then311:                                       ; preds = %if.end305
  %302 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !4661
  %call312 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %302, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 818, i32 400, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.25, i64 0, i64 0)), !dbg !4663
  store double* null, double** %retval, align 8, !dbg !4664
  br label %return, !dbg !4664

if.end313:                                        ; preds = %if.end305
  store i64 0, i64* %i, align 8, !dbg !4665
  br label %for.cond314, !dbg !4667

for.cond314:                                      ; preds = %for.inc370, %if.end313
  %303 = load i64, i64* %i, align 8, !dbg !4668
  %304 = load i64, i64* %number_arguments.addr, align 8, !dbg !4670
  %cmp315 = icmp ult i64 %303, %304, !dbg !4671
  br i1 %cmp315, label %for.body317, label %for.end372, !dbg !4672

for.body317:                                      ; preds = %for.cond314
  %305 = load double*, double** %arguments.addr, align 8, !dbg !4673
  %306 = load i64, i64* %i, align 8, !dbg !4675
  %307 = load i64, i64* %cp_x, align 8, !dbg !4676
  %add318 = add i64 %306, %307, !dbg !4677
  %arrayidx319 = getelementptr inbounds double, double* %305, i64 %add318, !dbg !4673
  %308 = load double, double* %arrayidx319, align 8, !dbg !4673
  %arrayidx320 = getelementptr inbounds [8 x double], [8 x double]* %terms290, i64 0, i64 0, !dbg !4678
  store double %308, double* %arrayidx320, align 16, !dbg !4679
  %309 = load double*, double** %arguments.addr, align 8, !dbg !4680
  %310 = load i64, i64* %i, align 8, !dbg !4681
  %311 = load i64, i64* %cp_y, align 8, !dbg !4682
  %add321 = add i64 %310, %311, !dbg !4683
  %arrayidx322 = getelementptr inbounds double, double* %309, i64 %add321, !dbg !4680
  %312 = load double, double* %arrayidx322, align 8, !dbg !4680
  %arrayidx323 = getelementptr inbounds [8 x double], [8 x double]* %terms290, i64 0, i64 1, !dbg !4684
  store double %312, double* %arrayidx323, align 8, !dbg !4685
  %arrayidx324 = getelementptr inbounds [8 x double], [8 x double]* %terms290, i64 0, i64 2, !dbg !4686
  store double 1.000000e+00, double* %arrayidx324, align 16, !dbg !4687
  %arrayidx325 = getelementptr inbounds [8 x double], [8 x double]* %terms290, i64 0, i64 3, !dbg !4688
  store double 0.000000e+00, double* %arrayidx325, align 8, !dbg !4689
  %arrayidx326 = getelementptr inbounds [8 x double], [8 x double]* %terms290, i64 0, i64 4, !dbg !4690
  store double 0.000000e+00, double* %arrayidx326, align 16, !dbg !4691
  %arrayidx327 = getelementptr inbounds [8 x double], [8 x double]* %terms290, i64 0, i64 5, !dbg !4692
  store double 0.000000e+00, double* %arrayidx327, align 8, !dbg !4693
  %arrayidx328 = getelementptr inbounds [8 x double], [8 x double]* %terms290, i64 0, i64 0, !dbg !4694
  %313 = load double, double* %arrayidx328, align 16, !dbg !4694
  %fneg329 = fneg double %313, !dbg !4695
  %314 = load double*, double** %arguments.addr, align 8, !dbg !4696
  %315 = load i64, i64* %i, align 8, !dbg !4697
  %316 = load i64, i64* %cp_u, align 8, !dbg !4698
  %add330 = add i64 %315, %316, !dbg !4699
  %arrayidx331 = getelementptr inbounds double, double* %314, i64 %add330, !dbg !4696
  %317 = load double, double* %arrayidx331, align 8, !dbg !4696
  %mul332 = fmul double %fneg329, %317, !dbg !4700
  %arrayidx333 = getelementptr inbounds [8 x double], [8 x double]* %terms290, i64 0, i64 6, !dbg !4701
  store double %mul332, double* %arrayidx333, align 16, !dbg !4702
  %arrayidx334 = getelementptr inbounds [8 x double], [8 x double]* %terms290, i64 0, i64 1, !dbg !4703
  %318 = load double, double* %arrayidx334, align 8, !dbg !4703
  %fneg335 = fneg double %318, !dbg !4704
  %319 = load double*, double** %arguments.addr, align 8, !dbg !4705
  %320 = load i64, i64* %i, align 8, !dbg !4706
  %321 = load i64, i64* %cp_u, align 8, !dbg !4707
  %add336 = add i64 %320, %321, !dbg !4708
  %arrayidx337 = getelementptr inbounds double, double* %319, i64 %add336, !dbg !4705
  %322 = load double, double* %arrayidx337, align 8, !dbg !4705
  %mul338 = fmul double %fneg335, %322, !dbg !4709
  %arrayidx339 = getelementptr inbounds [8 x double], [8 x double]* %terms290, i64 0, i64 7, !dbg !4710
  store double %mul338, double* %arrayidx339, align 8, !dbg !4711
  %323 = load double**, double*** %matrix288, align 8, !dbg !4712
  %arraydecay340 = getelementptr inbounds [1 x double*], [1 x double*]* %vectors289, i64 0, i64 0, !dbg !4713
  %arraydecay341 = getelementptr inbounds [8 x double], [8 x double]* %terms290, i64 0, i64 0, !dbg !4714
  %324 = load double*, double** %arguments.addr, align 8, !dbg !4715
  %325 = load i64, i64* %i, align 8, !dbg !4716
  %326 = load i64, i64* %cp_u, align 8, !dbg !4717
  %add342 = add i64 %325, %326, !dbg !4718
  %arrayidx343 = getelementptr inbounds double, double* %324, i64 %add342, !dbg !4715
  call void @LeastSquaresAddTerms(double** %323, double** %arraydecay340, double* %arraydecay341, double* %arrayidx343, i64 8, i64 1), !dbg !4719
  %arrayidx344 = getelementptr inbounds [8 x double], [8 x double]* %terms290, i64 0, i64 0, !dbg !4720
  store double 0.000000e+00, double* %arrayidx344, align 16, !dbg !4721
  %arrayidx345 = getelementptr inbounds [8 x double], [8 x double]* %terms290, i64 0, i64 1, !dbg !4722
  store double 0.000000e+00, double* %arrayidx345, align 8, !dbg !4723
  %arrayidx346 = getelementptr inbounds [8 x double], [8 x double]* %terms290, i64 0, i64 2, !dbg !4724
  store double 0.000000e+00, double* %arrayidx346, align 16, !dbg !4725
  %327 = load double*, double** %arguments.addr, align 8, !dbg !4726
  %328 = load i64, i64* %i, align 8, !dbg !4727
  %329 = load i64, i64* %cp_x, align 8, !dbg !4728
  %add347 = add i64 %328, %329, !dbg !4729
  %arrayidx348 = getelementptr inbounds double, double* %327, i64 %add347, !dbg !4726
  %330 = load double, double* %arrayidx348, align 8, !dbg !4726
  %arrayidx349 = getelementptr inbounds [8 x double], [8 x double]* %terms290, i64 0, i64 3, !dbg !4730
  store double %330, double* %arrayidx349, align 8, !dbg !4731
  %331 = load double*, double** %arguments.addr, align 8, !dbg !4732
  %332 = load i64, i64* %i, align 8, !dbg !4733
  %333 = load i64, i64* %cp_y, align 8, !dbg !4734
  %add350 = add i64 %332, %333, !dbg !4735
  %arrayidx351 = getelementptr inbounds double, double* %331, i64 %add350, !dbg !4732
  %334 = load double, double* %arrayidx351, align 8, !dbg !4732
  %arrayidx352 = getelementptr inbounds [8 x double], [8 x double]* %terms290, i64 0, i64 4, !dbg !4736
  store double %334, double* %arrayidx352, align 16, !dbg !4737
  %arrayidx353 = getelementptr inbounds [8 x double], [8 x double]* %terms290, i64 0, i64 5, !dbg !4738
  store double 1.000000e+00, double* %arrayidx353, align 8, !dbg !4739
  %arrayidx354 = getelementptr inbounds [8 x double], [8 x double]* %terms290, i64 0, i64 3, !dbg !4740
  %335 = load double, double* %arrayidx354, align 8, !dbg !4740
  %fneg355 = fneg double %335, !dbg !4741
  %336 = load double*, double** %arguments.addr, align 8, !dbg !4742
  %337 = load i64, i64* %i, align 8, !dbg !4743
  %338 = load i64, i64* %cp_v, align 8, !dbg !4744
  %add356 = add i64 %337, %338, !dbg !4745
  %arrayidx357 = getelementptr inbounds double, double* %336, i64 %add356, !dbg !4742
  %339 = load double, double* %arrayidx357, align 8, !dbg !4742
  %mul358 = fmul double %fneg355, %339, !dbg !4746
  %arrayidx359 = getelementptr inbounds [8 x double], [8 x double]* %terms290, i64 0, i64 6, !dbg !4747
  store double %mul358, double* %arrayidx359, align 16, !dbg !4748
  %arrayidx360 = getelementptr inbounds [8 x double], [8 x double]* %terms290, i64 0, i64 4, !dbg !4749
  %340 = load double, double* %arrayidx360, align 16, !dbg !4749
  %fneg361 = fneg double %340, !dbg !4750
  %341 = load double*, double** %arguments.addr, align 8, !dbg !4751
  %342 = load i64, i64* %i, align 8, !dbg !4752
  %343 = load i64, i64* %cp_v, align 8, !dbg !4753
  %add362 = add i64 %342, %343, !dbg !4754
  %arrayidx363 = getelementptr inbounds double, double* %341, i64 %add362, !dbg !4751
  %344 = load double, double* %arrayidx363, align 8, !dbg !4751
  %mul364 = fmul double %fneg361, %344, !dbg !4755
  %arrayidx365 = getelementptr inbounds [8 x double], [8 x double]* %terms290, i64 0, i64 7, !dbg !4756
  store double %mul364, double* %arrayidx365, align 8, !dbg !4757
  %345 = load double**, double*** %matrix288, align 8, !dbg !4758
  %arraydecay366 = getelementptr inbounds [1 x double*], [1 x double*]* %vectors289, i64 0, i64 0, !dbg !4759
  %arraydecay367 = getelementptr inbounds [8 x double], [8 x double]* %terms290, i64 0, i64 0, !dbg !4760
  %346 = load double*, double** %arguments.addr, align 8, !dbg !4761
  %347 = load i64, i64* %i, align 8, !dbg !4762
  %348 = load i64, i64* %cp_v, align 8, !dbg !4763
  %add368 = add i64 %347, %348, !dbg !4764
  %arrayidx369 = getelementptr inbounds double, double* %346, i64 %add368, !dbg !4761
  call void @LeastSquaresAddTerms(double** %345, double** %arraydecay366, double* %arraydecay367, double* %arrayidx369, i64 8, i64 1), !dbg !4765
  br label %for.inc370, !dbg !4766

for.inc370:                                       ; preds = %for.body317
  %349 = load i64, i64* %i, align 8, !dbg !4767
  %add371 = add i64 %349, 4, !dbg !4767
  store i64 %add371, i64* %i, align 8, !dbg !4767
  br label %for.cond314, !dbg !4768, !llvm.loop !4769

for.end372:                                       ; preds = %for.cond314
  %350 = load double**, double*** %matrix288, align 8, !dbg !4771
  %arraydecay373 = getelementptr inbounds [1 x double*], [1 x double*]* %vectors289, i64 0, i64 0, !dbg !4772
  %call374 = call i32 @GaussJordanElimination(double** %350, double** %arraydecay373, i64 8, i64 1), !dbg !4773
  store i32 %call374, i32* %status292, align 4, !dbg !4774
  %351 = load double**, double*** %matrix288, align 8, !dbg !4775
  %call375 = call double** @RelinquishMagickMatrix(double** %351, i64 8), !dbg !4776
  store double** %call375, double*** %matrix288, align 8, !dbg !4777
  %352 = load i32, i32* %status292, align 4, !dbg !4778
  %cmp376 = icmp eq i32 %352, 0, !dbg !4780
  br i1 %cmp376, label %if.then378, label %if.end383, !dbg !4781

if.then378:                                       ; preds = %for.end372
  %353 = load double*, double** %coeff, align 8, !dbg !4782
  %354 = bitcast double* %353 to i8*, !dbg !4782
  %call379 = call i8* @RelinquishMagickMemory(i8* %354), !dbg !4784
  %355 = bitcast i8* %call379 to double*, !dbg !4785
  store double* %355, double** %coeff, align 8, !dbg !4786
  %356 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !4787
  %357 = load i32*, i32** %method.addr, align 8, !dbg !4788
  %358 = load i32, i32* %357, align 4, !dbg !4789
  %conv380 = zext i32 %358 to i64, !dbg !4789
  %call381 = call i8* @CommandOptionToMnemonic(i32 20, i64 %conv380), !dbg !4790
  %call382 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %356, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 852, i32 410, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.125, i64 0, i64 0), i8* %call381), !dbg !4791
  store double* null, double** %retval, align 8, !dbg !4792
  br label %return, !dbg !4792

if.end383:                                        ; preds = %for.end372
  %359 = load double*, double** %coeff, align 8, !dbg !4793
  %arrayidx384 = getelementptr inbounds double, double* %359, i64 6, !dbg !4793
  %360 = load double, double* %arrayidx384, align 8, !dbg !4793
  %361 = load double*, double** %arguments.addr, align 8, !dbg !4794
  %362 = load i64, i64* %cp_x, align 8, !dbg !4795
  %arrayidx385 = getelementptr inbounds double, double* %361, i64 %362, !dbg !4794
  %363 = load double, double* %arrayidx385, align 8, !dbg !4794
  %mul386 = fmul double %360, %363, !dbg !4796
  %364 = load double*, double** %coeff, align 8, !dbg !4797
  %arrayidx387 = getelementptr inbounds double, double* %364, i64 7, !dbg !4797
  %365 = load double, double* %arrayidx387, align 8, !dbg !4797
  %366 = load double*, double** %arguments.addr, align 8, !dbg !4798
  %367 = load i64, i64* %cp_y, align 8, !dbg !4799
  %arrayidx388 = getelementptr inbounds double, double* %366, i64 %367, !dbg !4798
  %368 = load double, double* %arrayidx388, align 8, !dbg !4798
  %mul389 = fmul double %365, %368, !dbg !4800
  %add390 = fadd double %mul386, %mul389, !dbg !4801
  %add391 = fadd double %add390, 1.000000e+00, !dbg !4802
  %369 = load double*, double** %coeff, align 8, !dbg !4803
  %arrayidx392 = getelementptr inbounds double, double* %369, i64 8, !dbg !4803
  store double %add391, double* %arrayidx392, align 8, !dbg !4804
  %370 = load double*, double** %coeff, align 8, !dbg !4805
  %arrayidx393 = getelementptr inbounds double, double* %370, i64 8, !dbg !4805
  %371 = load double, double* %arrayidx393, align 8, !dbg !4805
  %cmp394 = fcmp olt double %371, 0.000000e+00, !dbg !4806
  %372 = zext i1 %cmp394 to i64, !dbg !4807
  %cond = select i1 %cmp394, double -1.000000e+00, double 1.000000e+00, !dbg !4807
  %373 = load double*, double** %coeff, align 8, !dbg !4808
  %arrayidx396 = getelementptr inbounds double, double* %373, i64 8, !dbg !4808
  store double %cond, double* %arrayidx396, align 8, !dbg !4809
  %374 = load double*, double** %coeff, align 8, !dbg !4810
  store double* %374, double** %retval, align 8, !dbg !4811
  br label %return, !dbg !4811

sw.bb397:                                         ; preds = %for.end
  %375 = load i64, i64* %number_arguments.addr, align 8, !dbg !4812
  %cmp398 = icmp ne i64 %375, 8, !dbg !4815
  br i1 %cmp398, label %if.then400, label %if.end404, !dbg !4816

if.then400:                                       ; preds = %sw.bb397
  %376 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !4817
  %377 = load i32*, i32** %method.addr, align 8, !dbg !4819
  %378 = load i32, i32* %377, align 4, !dbg !4820
  %conv401 = zext i32 %378 to i64, !dbg !4820
  %call402 = call i8* @CommandOptionToMnemonic(i32 20, i64 %conv401), !dbg !4821
  %call403 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %376, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 875, i32 410, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.130, i64 0, i64 0), i8* %call402), !dbg !4822
  store double* null, double** %retval, align 8, !dbg !4823
  br label %return, !dbg !4823

if.end404:                                        ; preds = %sw.bb397
  %379 = load double*, double** %arguments.addr, align 8, !dbg !4824
  %380 = load double*, double** %coeff, align 8, !dbg !4825
  call void @InvertPerspectiveCoefficients(double* %379, double* %380), !dbg !4826
  %381 = load double*, double** %coeff, align 8, !dbg !4827
  %arrayidx405 = getelementptr inbounds double, double* %381, i64 6, !dbg !4827
  %382 = load double, double* %arrayidx405, align 8, !dbg !4827
  %383 = load double*, double** %arguments.addr, align 8, !dbg !4828
  %arrayidx406 = getelementptr inbounds double, double* %383, i64 2, !dbg !4828
  %384 = load double, double* %arrayidx406, align 8, !dbg !4828
  %mul407 = fmul double %382, %384, !dbg !4829
  %385 = load double*, double** %coeff, align 8, !dbg !4830
  %arrayidx408 = getelementptr inbounds double, double* %385, i64 7, !dbg !4830
  %386 = load double, double* %arrayidx408, align 8, !dbg !4830
  %387 = load double*, double** %arguments.addr, align 8, !dbg !4831
  %arrayidx409 = getelementptr inbounds double, double* %387, i64 5, !dbg !4831
  %388 = load double, double* %arrayidx409, align 8, !dbg !4831
  %mul410 = fmul double %386, %388, !dbg !4832
  %add411 = fadd double %mul407, %mul410, !dbg !4833
  %add412 = fadd double %add411, 1.000000e+00, !dbg !4834
  %389 = load double*, double** %coeff, align 8, !dbg !4835
  %arrayidx413 = getelementptr inbounds double, double* %389, i64 8, !dbg !4835
  store double %add412, double* %arrayidx413, align 8, !dbg !4836
  %390 = load double*, double** %coeff, align 8, !dbg !4837
  %arrayidx414 = getelementptr inbounds double, double* %390, i64 8, !dbg !4837
  %391 = load double, double* %arrayidx414, align 8, !dbg !4837
  %cmp415 = fcmp olt double %391, 0.000000e+00, !dbg !4838
  %392 = zext i1 %cmp415 to i64, !dbg !4839
  %cond417 = select i1 %cmp415, double -1.000000e+00, double 1.000000e+00, !dbg !4839
  %393 = load double*, double** %coeff, align 8, !dbg !4840
  %arrayidx418 = getelementptr inbounds double, double* %393, i64 8, !dbg !4840
  store double %cond417, double* %arrayidx418, align 8, !dbg !4841
  %394 = load i32*, i32** %method.addr, align 8, !dbg !4842
  store i32 4, i32* %394, align 4, !dbg !4843
  %395 = load double*, double** %coeff, align 8, !dbg !4844
  store double* %395, double** %retval, align 8, !dbg !4845
  br label %return, !dbg !4845

sw.bb419:                                         ; preds = %for.end, %for.end
  call void @llvm.dbg.declare(metadata double*** %matrix420, metadata !4846, metadata !DIExpression()), !dbg !4848
  call void @llvm.dbg.declare(metadata double*** %vectors421, metadata !4849, metadata !DIExpression()), !dbg !4850
  call void @llvm.dbg.declare(metadata [4 x double]* %terms422, metadata !4851, metadata !DIExpression()), !dbg !4855
  call void @llvm.dbg.declare(metadata i32* %status423, metadata !4856, metadata !DIExpression()), !dbg !4857
  %396 = load i64, i64* %number_arguments.addr, align 8, !dbg !4858
  %397 = load i64, i64* %cp_size, align 8, !dbg !4860
  %rem424 = urem i64 %396, %397, !dbg !4861
  %cmp425 = icmp ne i64 %rem424, 0, !dbg !4862
  br i1 %cmp425, label %if.then431, label %lor.lhs.false427, !dbg !4863

lor.lhs.false427:                                 ; preds = %sw.bb419
  %398 = load i64, i64* %number_arguments.addr, align 8, !dbg !4864
  %399 = load i64, i64* %cp_size, align 8, !dbg !4865
  %mul428 = mul i64 %399, 4, !dbg !4866
  %cmp429 = icmp ult i64 %398, %mul428, !dbg !4867
  br i1 %cmp429, label %if.then431, label %if.end436, !dbg !4868

if.then431:                                       ; preds = %lor.lhs.false427, %sw.bb419
  %400 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !4869
  %401 = load i32*, i32** %method.addr, align 8, !dbg !4871
  %402 = load i32, i32* %401, align 4, !dbg !4872
  %conv432 = zext i32 %402 to i64, !dbg !4872
  %call433 = call i8* @CommandOptionToMnemonic(i32 20, i64 %conv432), !dbg !4873
  %call434 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %400, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 923, i32 410, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.121, i64 0, i64 0), i8* %call433, double 4.000000e+00), !dbg !4874
  %403 = load double*, double** %coeff, align 8, !dbg !4875
  %404 = bitcast double* %403 to i8*, !dbg !4875
  %call435 = call i8* @RelinquishMagickMemory(i8* %404), !dbg !4876
  %405 = bitcast i8* %call435 to double*, !dbg !4877
  store double* %405, double** %coeff, align 8, !dbg !4878
  store double* null, double** %retval, align 8, !dbg !4879
  br label %return, !dbg !4879

if.end436:                                        ; preds = %lor.lhs.false427
  %call437 = call double** @AcquireMagickMatrix(i64 4, i64 4), !dbg !4880
  store double** %call437, double*** %matrix420, align 8, !dbg !4881
  %406 = load i64, i64* %number_values.addr, align 8, !dbg !4882
  %call438 = call i8* @AcquireQuantumMemory(i64 %406, i64 8) #7, !dbg !4883
  %407 = bitcast i8* %call438 to double**, !dbg !4884
  store double** %407, double*** %vectors421, align 8, !dbg !4885
  %408 = load double**, double*** %matrix420, align 8, !dbg !4886
  %cmp439 = icmp eq double** %408, null, !dbg !4888
  br i1 %cmp439, label %if.then444, label %lor.lhs.false441, !dbg !4889

lor.lhs.false441:                                 ; preds = %if.end436
  %409 = load double**, double*** %vectors421, align 8, !dbg !4890
  %cmp442 = icmp eq double** %409, null, !dbg !4891
  br i1 %cmp442, label %if.then444, label %if.end449, !dbg !4892

if.then444:                                       ; preds = %lor.lhs.false441, %if.end436
  %410 = load double**, double*** %matrix420, align 8, !dbg !4893
  %call445 = call double** @RelinquishMagickMatrix(double** %410, i64 4), !dbg !4895
  store double** %call445, double*** %matrix420, align 8, !dbg !4896
  %411 = load double**, double*** %vectors421, align 8, !dbg !4897
  %412 = bitcast double** %411 to i8*, !dbg !4897
  %call446 = call i8* @RelinquishMagickMemory(i8* %412), !dbg !4898
  %413 = bitcast i8* %call446 to double**, !dbg !4899
  store double** %413, double*** %vectors421, align 8, !dbg !4900
  %414 = load double*, double** %coeff, align 8, !dbg !4901
  %415 = bitcast double* %414 to i8*, !dbg !4901
  %call447 = call i8* @RelinquishMagickMemory(i8* %415), !dbg !4902
  %416 = bitcast i8* %call447 to double*, !dbg !4903
  store double* %416, double** %coeff, align 8, !dbg !4904
  %417 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !4905
  %call448 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %417, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 937, i32 400, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.25, i64 0, i64 0)), !dbg !4906
  store double* null, double** %retval, align 8, !dbg !4907
  br label %return, !dbg !4907

if.end449:                                        ; preds = %lor.lhs.false441
  store i64 0, i64* %i, align 8, !dbg !4908
  br label %for.cond450, !dbg !4910

for.cond450:                                      ; preds = %for.inc457, %if.end449
  %418 = load i64, i64* %i, align 8, !dbg !4911
  %419 = load i64, i64* %number_values.addr, align 8, !dbg !4913
  %cmp451 = icmp ult i64 %418, %419, !dbg !4914
  br i1 %cmp451, label %for.body453, label %for.end459, !dbg !4915

for.body453:                                      ; preds = %for.cond450
  %420 = load double*, double** %coeff, align 8, !dbg !4916
  %421 = load i64, i64* %i, align 8, !dbg !4917
  %mul454 = mul i64 %421, 4, !dbg !4918
  %arrayidx455 = getelementptr inbounds double, double* %420, i64 %mul454, !dbg !4916
  %422 = load double**, double*** %vectors421, align 8, !dbg !4919
  %423 = load i64, i64* %i, align 8, !dbg !4920
  %arrayidx456 = getelementptr inbounds double*, double** %422, i64 %423, !dbg !4919
  store double* %arrayidx455, double** %arrayidx456, align 8, !dbg !4921
  br label %for.inc457, !dbg !4919

for.inc457:                                       ; preds = %for.body453
  %424 = load i64, i64* %i, align 8, !dbg !4922
  %inc458 = add i64 %424, 1, !dbg !4922
  store i64 %inc458, i64* %i, align 8, !dbg !4922
  br label %for.cond450, !dbg !4923, !llvm.loop !4924

for.end459:                                       ; preds = %for.cond450
  store i64 0, i64* %i, align 8, !dbg !4926
  br label %for.cond460, !dbg !4928

for.cond460:                                      ; preds = %for.inc478, %for.end459
  %425 = load i64, i64* %i, align 8, !dbg !4929
  %426 = load i64, i64* %number_arguments.addr, align 8, !dbg !4931
  %cmp461 = icmp ult i64 %425, %426, !dbg !4932
  br i1 %cmp461, label %for.body463, label %for.end480, !dbg !4933

for.body463:                                      ; preds = %for.cond460
  %427 = load double*, double** %arguments.addr, align 8, !dbg !4934
  %428 = load i64, i64* %i, align 8, !dbg !4936
  %429 = load i64, i64* %cp_x, align 8, !dbg !4937
  %add464 = add i64 %428, %429, !dbg !4938
  %arrayidx465 = getelementptr inbounds double, double* %427, i64 %add464, !dbg !4934
  %430 = load double, double* %arrayidx465, align 8, !dbg !4934
  %arrayidx466 = getelementptr inbounds [4 x double], [4 x double]* %terms422, i64 0, i64 0, !dbg !4939
  store double %430, double* %arrayidx466, align 16, !dbg !4940
  %431 = load double*, double** %arguments.addr, align 8, !dbg !4941
  %432 = load i64, i64* %i, align 8, !dbg !4942
  %433 = load i64, i64* %cp_y, align 8, !dbg !4943
  %add467 = add i64 %432, %433, !dbg !4944
  %arrayidx468 = getelementptr inbounds double, double* %431, i64 %add467, !dbg !4941
  %434 = load double, double* %arrayidx468, align 8, !dbg !4941
  %arrayidx469 = getelementptr inbounds [4 x double], [4 x double]* %terms422, i64 0, i64 1, !dbg !4945
  store double %434, double* %arrayidx469, align 8, !dbg !4946
  %arrayidx470 = getelementptr inbounds [4 x double], [4 x double]* %terms422, i64 0, i64 0, !dbg !4947
  %435 = load double, double* %arrayidx470, align 16, !dbg !4947
  %arrayidx471 = getelementptr inbounds [4 x double], [4 x double]* %terms422, i64 0, i64 1, !dbg !4948
  %436 = load double, double* %arrayidx471, align 8, !dbg !4948
  %mul472 = fmul double %435, %436, !dbg !4949
  %arrayidx473 = getelementptr inbounds [4 x double], [4 x double]* %terms422, i64 0, i64 2, !dbg !4950
  store double %mul472, double* %arrayidx473, align 16, !dbg !4951
  %arrayidx474 = getelementptr inbounds [4 x double], [4 x double]* %terms422, i64 0, i64 3, !dbg !4952
  store double 1.000000e+00, double* %arrayidx474, align 8, !dbg !4953
  %437 = load double**, double*** %matrix420, align 8, !dbg !4954
  %438 = load double**, double*** %vectors421, align 8, !dbg !4955
  %arraydecay475 = getelementptr inbounds [4 x double], [4 x double]* %terms422, i64 0, i64 0, !dbg !4956
  %439 = load double*, double** %arguments.addr, align 8, !dbg !4957
  %440 = load i64, i64* %i, align 8, !dbg !4958
  %441 = load i64, i64* %cp_values, align 8, !dbg !4959
  %add476 = add i64 %440, %441, !dbg !4960
  %arrayidx477 = getelementptr inbounds double, double* %439, i64 %add476, !dbg !4957
  %442 = load i64, i64* %number_values.addr, align 8, !dbg !4961
  call void @LeastSquaresAddTerms(double** %437, double** %438, double* %arraydecay475, double* %arrayidx477, i64 4, i64 %442), !dbg !4962
  br label %for.inc478, !dbg !4963

for.inc478:                                       ; preds = %for.body463
  %443 = load i64, i64* %cp_size, align 8, !dbg !4964
  %444 = load i64, i64* %i, align 8, !dbg !4965
  %add479 = add i64 %444, %443, !dbg !4965
  store i64 %add479, i64* %i, align 8, !dbg !4965
  br label %for.cond460, !dbg !4966, !llvm.loop !4967

for.end480:                                       ; preds = %for.cond460
  %445 = load double**, double*** %matrix420, align 8, !dbg !4969
  %446 = load double**, double*** %vectors421, align 8, !dbg !4970
  %447 = load i64, i64* %number_values.addr, align 8, !dbg !4971
  %call481 = call i32 @GaussJordanElimination(double** %445, double** %446, i64 4, i64 %447), !dbg !4972
  store i32 %call481, i32* %status423, align 4, !dbg !4973
  %448 = load double**, double*** %matrix420, align 8, !dbg !4974
  %call482 = call double** @RelinquishMagickMatrix(double** %448, i64 4), !dbg !4975
  store double** %call482, double*** %matrix420, align 8, !dbg !4976
  %449 = load double**, double*** %vectors421, align 8, !dbg !4977
  %450 = bitcast double** %449 to i8*, !dbg !4977
  %call483 = call i8* @RelinquishMagickMemory(i8* %450), !dbg !4978
  %451 = bitcast i8* %call483 to double**, !dbg !4979
  store double** %451, double*** %vectors421, align 8, !dbg !4980
  %452 = load i32, i32* %status423, align 4, !dbg !4981
  %cmp484 = icmp eq i32 %452, 0, !dbg !4983
  br i1 %cmp484, label %if.then486, label %if.end491, !dbg !4984

if.then486:                                       ; preds = %for.end480
  %453 = load double*, double** %coeff, align 8, !dbg !4985
  %454 = bitcast double* %453 to i8*, !dbg !4985
  %call487 = call i8* @RelinquishMagickMemory(i8* %454), !dbg !4987
  %455 = bitcast i8* %call487 to double*, !dbg !4988
  store double* %455, double** %coeff, align 8, !dbg !4989
  %456 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !4990
  %457 = load i32*, i32** %method.addr, align 8, !dbg !4991
  %458 = load i32, i32* %457, align 4, !dbg !4992
  %conv488 = zext i32 %458 to i64, !dbg !4992
  %call489 = call i8* @CommandOptionToMnemonic(i32 20, i64 %conv488), !dbg !4993
  %call490 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %456, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 960, i32 410, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.125, i64 0, i64 0), i8* %call489), !dbg !4994
  store double* null, double** %retval, align 8, !dbg !4995
  br label %return, !dbg !4995

if.end491:                                        ; preds = %for.end480
  %459 = load i32*, i32** %method.addr, align 8, !dbg !4996
  %460 = load i32, i32* %459, align 4, !dbg !4998
  %cmp492 = icmp eq i32 %460, 6, !dbg !4999
  br i1 %cmp492, label %if.then494, label %if.end512, !dbg !5000

if.then494:                                       ; preds = %if.end491
  %461 = load double*, double** %coeff, align 8, !dbg !5001
  %arrayidx495 = getelementptr inbounds double, double* %461, i64 0, !dbg !5001
  %462 = load double, double* %arrayidx495, align 8, !dbg !5001
  %463 = load double*, double** %coeff, align 8, !dbg !5003
  %arrayidx496 = getelementptr inbounds double, double* %463, i64 5, !dbg !5003
  %464 = load double, double* %arrayidx496, align 8, !dbg !5003
  %mul497 = fmul double %462, %464, !dbg !5004
  %465 = load double*, double** %coeff, align 8, !dbg !5005
  %arrayidx498 = getelementptr inbounds double, double* %465, i64 1, !dbg !5005
  %466 = load double, double* %arrayidx498, align 8, !dbg !5005
  %467 = load double*, double** %coeff, align 8, !dbg !5006
  %arrayidx499 = getelementptr inbounds double, double* %467, i64 4, !dbg !5006
  %468 = load double, double* %arrayidx499, align 8, !dbg !5006
  %mul500 = fmul double %466, %468, !dbg !5007
  %sub501 = fsub double %mul497, %mul500, !dbg !5008
  %469 = load double*, double** %coeff, align 8, !dbg !5009
  %arrayidx502 = getelementptr inbounds double, double* %469, i64 8, !dbg !5009
  store double %sub501, double* %arrayidx502, align 8, !dbg !5010
  %470 = load double*, double** %coeff, align 8, !dbg !5011
  %arrayidx503 = getelementptr inbounds double, double* %470, i64 2, !dbg !5011
  %471 = load double, double* %arrayidx503, align 8, !dbg !5011
  %472 = load double*, double** %coeff, align 8, !dbg !5012
  %arrayidx504 = getelementptr inbounds double, double* %472, i64 5, !dbg !5012
  %473 = load double, double* %arrayidx504, align 8, !dbg !5012
  %mul505 = fmul double %471, %473, !dbg !5013
  %474 = load double*, double** %coeff, align 8, !dbg !5014
  %arrayidx506 = getelementptr inbounds double, double* %474, i64 1, !dbg !5014
  %475 = load double, double* %arrayidx506, align 8, !dbg !5014
  %476 = load double*, double** %coeff, align 8, !dbg !5015
  %arrayidx507 = getelementptr inbounds double, double* %476, i64 6, !dbg !5015
  %477 = load double, double* %arrayidx507, align 8, !dbg !5015
  %mul508 = fmul double %475, %477, !dbg !5016
  %sub509 = fsub double %mul505, %mul508, !dbg !5017
  %mul510 = fmul double 2.000000e+00, %sub509, !dbg !5018
  %478 = load double*, double** %coeff, align 8, !dbg !5019
  %arrayidx511 = getelementptr inbounds double, double* %478, i64 9, !dbg !5019
  store double %mul510, double* %arrayidx511, align 8, !dbg !5020
  br label %if.end512, !dbg !5021

if.end512:                                        ; preds = %if.then494, %if.end491
  %479 = load double*, double** %coeff, align 8, !dbg !5022
  store double* %479, double** %retval, align 8, !dbg !5023
  br label %return, !dbg !5023

sw.bb513:                                         ; preds = %for.end
  call void @llvm.dbg.declare(metadata double*** %matrix514, metadata !5024, metadata !DIExpression()), !dbg !5026
  call void @llvm.dbg.declare(metadata double*** %vectors515, metadata !5027, metadata !DIExpression()), !dbg !5028
  call void @llvm.dbg.declare(metadata double** %terms516, metadata !5029, metadata !DIExpression()), !dbg !5030
  call void @llvm.dbg.declare(metadata i64* %nterms, metadata !5031, metadata !DIExpression()), !dbg !5032
  call void @llvm.dbg.declare(metadata i64* %j, metadata !5033, metadata !DIExpression()), !dbg !5034
  call void @llvm.dbg.declare(metadata i32* %status517, metadata !5035, metadata !DIExpression()), !dbg !5036
  %480 = load double*, double** %arguments.addr, align 8, !dbg !5037
  %arrayidx518 = getelementptr inbounds double, double* %480, i64 0, !dbg !5037
  %481 = load double, double* %arrayidx518, align 8, !dbg !5037
  %482 = load double*, double** %coeff, align 8, !dbg !5038
  %arrayidx519 = getelementptr inbounds double, double* %482, i64 0, !dbg !5038
  store double %481, double* %arrayidx519, align 8, !dbg !5039
  %483 = load double*, double** %arguments.addr, align 8, !dbg !5040
  %arrayidx520 = getelementptr inbounds double, double* %483, i64 0, !dbg !5040
  %484 = load double, double* %arrayidx520, align 8, !dbg !5040
  %call521 = call i64 @poly_number_terms(double %484), !dbg !5041
  %conv522 = uitofp i64 %call521 to double, !dbg !5042
  %485 = load double*, double** %coeff, align 8, !dbg !5043
  %arrayidx523 = getelementptr inbounds double, double* %485, i64 1, !dbg !5043
  store double %conv522, double* %arrayidx523, align 8, !dbg !5044
  %486 = load double*, double** %coeff, align 8, !dbg !5045
  %arrayidx524 = getelementptr inbounds double, double* %486, i64 1, !dbg !5045
  %487 = load double, double* %arrayidx524, align 8, !dbg !5045
  %conv525 = fptoui double %487 to i64, !dbg !5046
  store i64 %conv525, i64* %nterms, align 8, !dbg !5047
  %488 = load i64, i64* %nterms, align 8, !dbg !5048
  %489 = load i64, i64* %nterms, align 8, !dbg !5049
  %call526 = call double** @AcquireMagickMatrix(i64 %488, i64 %489), !dbg !5050
  store double** %call526, double*** %matrix514, align 8, !dbg !5051
  %490 = load i64, i64* %number_values.addr, align 8, !dbg !5052
  %call527 = call i8* @AcquireQuantumMemory(i64 %490, i64 8) #7, !dbg !5053
  %491 = bitcast i8* %call527 to double**, !dbg !5054
  store double** %491, double*** %vectors515, align 8, !dbg !5055
  %492 = load i64, i64* %nterms, align 8, !dbg !5056
  %call528 = call i8* @AcquireQuantumMemory(i64 %492, i64 8) #7, !dbg !5057
  %493 = bitcast i8* %call528 to double*, !dbg !5058
  store double* %493, double** %terms516, align 8, !dbg !5059
  %494 = load double**, double*** %matrix514, align 8, !dbg !5060
  %cmp529 = icmp eq double** %494, null, !dbg !5062
  br i1 %cmp529, label %if.then537, label %lor.lhs.false531, !dbg !5063

lor.lhs.false531:                                 ; preds = %sw.bb513
  %495 = load double**, double*** %vectors515, align 8, !dbg !5064
  %cmp532 = icmp eq double** %495, null, !dbg !5065
  br i1 %cmp532, label %if.then537, label %lor.lhs.false534, !dbg !5066

lor.lhs.false534:                                 ; preds = %lor.lhs.false531
  %496 = load double*, double** %terms516, align 8, !dbg !5067
  %cmp535 = icmp eq double* %496, null, !dbg !5068
  br i1 %cmp535, label %if.then537, label %if.end543, !dbg !5069

if.then537:                                       ; preds = %lor.lhs.false534, %lor.lhs.false531, %sw.bb513
  %497 = load double**, double*** %matrix514, align 8, !dbg !5070
  %498 = load i64, i64* %nterms, align 8, !dbg !5072
  %call538 = call double** @RelinquishMagickMatrix(double** %497, i64 %498), !dbg !5073
  store double** %call538, double*** %matrix514, align 8, !dbg !5074
  %499 = load double**, double*** %vectors515, align 8, !dbg !5075
  %500 = bitcast double** %499 to i8*, !dbg !5075
  %call539 = call i8* @RelinquishMagickMemory(i8* %500), !dbg !5076
  %501 = bitcast i8* %call539 to double**, !dbg !5077
  store double** %501, double*** %vectors515, align 8, !dbg !5078
  %502 = load double*, double** %terms516, align 8, !dbg !5079
  %503 = bitcast double* %502 to i8*, !dbg !5079
  %call540 = call i8* @RelinquishMagickMemory(i8* %503), !dbg !5080
  %504 = bitcast i8* %call540 to double*, !dbg !5081
  store double* %504, double** %terms516, align 8, !dbg !5082
  %505 = load double*, double** %coeff, align 8, !dbg !5083
  %506 = bitcast double* %505 to i8*, !dbg !5083
  %call541 = call i8* @RelinquishMagickMemory(i8* %506), !dbg !5084
  %507 = bitcast i8* %call541 to double*, !dbg !5085
  store double* %507, double** %coeff, align 8, !dbg !5086
  %508 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !5087
  %call542 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %508, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 1081, i32 400, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.25, i64 0, i64 0)), !dbg !5088
  store double* null, double** %retval, align 8, !dbg !5089
  br label %return, !dbg !5089

if.end543:                                        ; preds = %lor.lhs.false534
  store i64 0, i64* %i, align 8, !dbg !5090
  br label %for.cond544, !dbg !5092

for.cond544:                                      ; preds = %for.inc552, %if.end543
  %509 = load i64, i64* %i, align 8, !dbg !5093
  %510 = load i64, i64* %number_values.addr, align 8, !dbg !5095
  %cmp545 = icmp ult i64 %509, %510, !dbg !5096
  br i1 %cmp545, label %for.body547, label %for.end554, !dbg !5097

for.body547:                                      ; preds = %for.cond544
  %511 = load double*, double** %coeff, align 8, !dbg !5098
  %512 = load i64, i64* %i, align 8, !dbg !5099
  %513 = load i64, i64* %nterms, align 8, !dbg !5100
  %mul548 = mul i64 %512, %513, !dbg !5101
  %add549 = add i64 2, %mul548, !dbg !5102
  %arrayidx550 = getelementptr inbounds double, double* %511, i64 %add549, !dbg !5098
  %514 = load double**, double*** %vectors515, align 8, !dbg !5103
  %515 = load i64, i64* %i, align 8, !dbg !5104
  %arrayidx551 = getelementptr inbounds double*, double** %514, i64 %515, !dbg !5103
  store double* %arrayidx550, double** %arrayidx551, align 8, !dbg !5105
  br label %for.inc552, !dbg !5103

for.inc552:                                       ; preds = %for.body547
  %516 = load i64, i64* %i, align 8, !dbg !5106
  %inc553 = add i64 %516, 1, !dbg !5106
  store i64 %inc553, i64* %i, align 8, !dbg !5106
  br label %for.cond544, !dbg !5107, !llvm.loop !5108

for.end554:                                       ; preds = %for.cond544
  store i64 1, i64* %i, align 8, !dbg !5110
  br label %for.cond555, !dbg !5112

for.cond555:                                      ; preds = %for.inc574, %for.end554
  %517 = load i64, i64* %i, align 8, !dbg !5113
  %518 = load i64, i64* %number_arguments.addr, align 8, !dbg !5115
  %cmp556 = icmp ult i64 %517, %518, !dbg !5116
  br i1 %cmp556, label %for.body558, label %for.end576, !dbg !5117

for.body558:                                      ; preds = %for.cond555
  store i64 0, i64* %j, align 8, !dbg !5118
  br label %for.cond559, !dbg !5121

for.cond559:                                      ; preds = %for.inc569, %for.body558
  %519 = load i64, i64* %j, align 8, !dbg !5122
  %520 = load i64, i64* %nterms, align 8, !dbg !5124
  %cmp560 = icmp slt i64 %519, %520, !dbg !5125
  br i1 %cmp560, label %for.body562, label %for.end571, !dbg !5126

for.body562:                                      ; preds = %for.cond559
  %521 = load i64, i64* %j, align 8, !dbg !5127
  %522 = load double*, double** %arguments.addr, align 8, !dbg !5128
  %523 = load i64, i64* %i, align 8, !dbg !5129
  %524 = load i64, i64* %cp_x, align 8, !dbg !5130
  %add563 = add i64 %523, %524, !dbg !5131
  %arrayidx564 = getelementptr inbounds double, double* %522, i64 %add563, !dbg !5128
  %525 = load double, double* %arrayidx564, align 8, !dbg !5128
  %526 = load double*, double** %arguments.addr, align 8, !dbg !5132
  %527 = load i64, i64* %i, align 8, !dbg !5133
  %528 = load i64, i64* %cp_y, align 8, !dbg !5134
  %add565 = add i64 %527, %528, !dbg !5135
  %arrayidx566 = getelementptr inbounds double, double* %526, i64 %add565, !dbg !5132
  %529 = load double, double* %arrayidx566, align 8, !dbg !5132
  %call567 = call double @poly_basis_fn(i64 %521, double %525, double %529), !dbg !5136
  %530 = load double*, double** %terms516, align 8, !dbg !5137
  %531 = load i64, i64* %j, align 8, !dbg !5138
  %arrayidx568 = getelementptr inbounds double, double* %530, i64 %531, !dbg !5137
  store double %call567, double* %arrayidx568, align 8, !dbg !5139
  br label %for.inc569, !dbg !5137

for.inc569:                                       ; preds = %for.body562
  %532 = load i64, i64* %j, align 8, !dbg !5140
  %inc570 = add nsw i64 %532, 1, !dbg !5140
  store i64 %inc570, i64* %j, align 8, !dbg !5140
  br label %for.cond559, !dbg !5141, !llvm.loop !5142

for.end571:                                       ; preds = %for.cond559
  %533 = load double**, double*** %matrix514, align 8, !dbg !5144
  %534 = load double**, double*** %vectors515, align 8, !dbg !5145
  %535 = load double*, double** %terms516, align 8, !dbg !5146
  %536 = load double*, double** %arguments.addr, align 8, !dbg !5147
  %537 = load i64, i64* %i, align 8, !dbg !5148
  %538 = load i64, i64* %cp_values, align 8, !dbg !5149
  %add572 = add i64 %537, %538, !dbg !5150
  %arrayidx573 = getelementptr inbounds double, double* %536, i64 %add572, !dbg !5147
  %539 = load i64, i64* %nterms, align 8, !dbg !5151
  %540 = load i64, i64* %number_values.addr, align 8, !dbg !5152
  call void @LeastSquaresAddTerms(double** %533, double** %534, double* %535, double* %arrayidx573, i64 %539, i64 %540), !dbg !5153
  br label %for.inc574, !dbg !5154

for.inc574:                                       ; preds = %for.end571
  %541 = load i64, i64* %cp_size, align 8, !dbg !5155
  %542 = load i64, i64* %i, align 8, !dbg !5156
  %add575 = add i64 %542, %541, !dbg !5156
  store i64 %add575, i64* %i, align 8, !dbg !5156
  br label %for.cond555, !dbg !5157, !llvm.loop !5158

for.end576:                                       ; preds = %for.cond555
  %543 = load double*, double** %terms516, align 8, !dbg !5160
  %544 = bitcast double* %543 to i8*, !dbg !5160
  %call577 = call i8* @RelinquishMagickMemory(i8* %544), !dbg !5161
  %545 = bitcast i8* %call577 to double*, !dbg !5162
  store double* %545, double** %terms516, align 8, !dbg !5163
  %546 = load double**, double*** %matrix514, align 8, !dbg !5164
  %547 = load double**, double*** %vectors515, align 8, !dbg !5165
  %548 = load i64, i64* %nterms, align 8, !dbg !5166
  %549 = load i64, i64* %number_values.addr, align 8, !dbg !5167
  %call578 = call i32 @GaussJordanElimination(double** %546, double** %547, i64 %548, i64 %549), !dbg !5168
  store i32 %call578, i32* %status517, align 4, !dbg !5169
  %550 = load double**, double*** %matrix514, align 8, !dbg !5170
  %551 = load i64, i64* %nterms, align 8, !dbg !5171
  %call579 = call double** @RelinquishMagickMatrix(double** %550, i64 %551), !dbg !5172
  store double** %call579, double*** %matrix514, align 8, !dbg !5173
  %552 = load double**, double*** %vectors515, align 8, !dbg !5174
  %553 = bitcast double** %552 to i8*, !dbg !5174
  %call580 = call i8* @RelinquishMagickMemory(i8* %553), !dbg !5175
  %554 = bitcast i8* %call580 to double**, !dbg !5176
  store double** %554, double*** %vectors515, align 8, !dbg !5177
  %555 = load i32, i32* %status517, align 4, !dbg !5178
  %cmp581 = icmp eq i32 %555, 0, !dbg !5180
  br i1 %cmp581, label %if.then583, label %if.end588, !dbg !5181

if.then583:                                       ; preds = %for.end576
  %556 = load double*, double** %coeff, align 8, !dbg !5182
  %557 = bitcast double* %556 to i8*, !dbg !5182
  %call584 = call i8* @RelinquishMagickMemory(i8* %557), !dbg !5184
  %558 = bitcast i8* %call584 to double*, !dbg !5185
  store double* %558, double** %coeff, align 8, !dbg !5186
  %559 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !5187
  %560 = load i32*, i32** %method.addr, align 8, !dbg !5188
  %561 = load i32, i32* %560, align 4, !dbg !5189
  %conv585 = zext i32 %561 to i64, !dbg !5189
  %call586 = call i8* @CommandOptionToMnemonic(i32 20, i64 %conv585), !dbg !5190
  %call587 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %559, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 1103, i32 410, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.125, i64 0, i64 0), i8* %call586), !dbg !5191
  store double* null, double** %retval, align 8, !dbg !5192
  br label %return, !dbg !5192

if.end588:                                        ; preds = %for.end576
  %562 = load double*, double** %coeff, align 8, !dbg !5193
  store double* %562, double** %retval, align 8, !dbg !5194
  br label %return, !dbg !5194

sw.bb589:                                         ; preds = %for.end
  %563 = load i64, i64* %number_arguments.addr, align 8, !dbg !5195
  %cmp590 = icmp uge i64 %563, 1, !dbg !5198
  br i1 %cmp590, label %land.lhs.true592, label %if.end601, !dbg !5199

land.lhs.true592:                                 ; preds = %sw.bb589
  %564 = load double*, double** %arguments.addr, align 8, !dbg !5200
  %arrayidx593 = getelementptr inbounds double, double* %564, i64 0, !dbg !5200
  %565 = load double, double* %arrayidx593, align 8, !dbg !5200
  %cmp594 = fcmp olt double %565, 1.000000e-15, !dbg !5201
  br i1 %cmp594, label %if.then596, label %if.end601, !dbg !5202

if.then596:                                       ; preds = %land.lhs.true592
  %566 = load double*, double** %coeff, align 8, !dbg !5203
  %567 = bitcast double* %566 to i8*, !dbg !5203
  %call597 = call i8* @RelinquishMagickMemory(i8* %567), !dbg !5205
  %568 = bitcast i8* %call597 to double*, !dbg !5206
  store double* %568, double** %coeff, align 8, !dbg !5207
  %569 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !5208
  %570 = load i32*, i32** %method.addr, align 8, !dbg !5209
  %571 = load i32, i32* %570, align 4, !dbg !5210
  %conv598 = zext i32 %571 to i64, !dbg !5210
  %call599 = call i8* @CommandOptionToMnemonic(i32 20, i64 %conv598), !dbg !5211
  %call600 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %569, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 1148, i32 410, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.131, i64 0, i64 0), i8* %call599), !dbg !5212
  store double* null, double** %retval, align 8, !dbg !5213
  br label %return, !dbg !5213

if.end601:                                        ; preds = %land.lhs.true592, %sw.bb589
  %572 = load i64, i64* %number_arguments.addr, align 8, !dbg !5214
  %cmp602 = icmp uge i64 %572, 3, !dbg !5216
  br i1 %cmp602, label %land.lhs.true604, label %if.end613, !dbg !5217

land.lhs.true604:                                 ; preds = %if.end601
  %573 = load double*, double** %arguments.addr, align 8, !dbg !5218
  %arrayidx605 = getelementptr inbounds double, double* %573, i64 2, !dbg !5218
  %574 = load double, double* %arrayidx605, align 8, !dbg !5218
  %cmp606 = fcmp olt double %574, 1.000000e-15, !dbg !5219
  br i1 %cmp606, label %if.then608, label %if.end613, !dbg !5220

if.then608:                                       ; preds = %land.lhs.true604
  %575 = load double*, double** %coeff, align 8, !dbg !5221
  %576 = bitcast double* %575 to i8*, !dbg !5221
  %call609 = call i8* @RelinquishMagickMemory(i8* %576), !dbg !5223
  %577 = bitcast i8* %call609 to double*, !dbg !5224
  store double* %577, double** %coeff, align 8, !dbg !5225
  %578 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !5226
  %579 = load i32*, i32** %method.addr, align 8, !dbg !5227
  %580 = load i32, i32* %579, align 4, !dbg !5228
  %conv610 = zext i32 %580 to i64, !dbg !5228
  %call611 = call i8* @CommandOptionToMnemonic(i32 20, i64 %conv610), !dbg !5229
  %call612 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %578, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 1155, i32 410, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.132, i64 0, i64 0), i8* %call611), !dbg !5230
  store double* null, double** %retval, align 8, !dbg !5231
  br label %return, !dbg !5231

if.end613:                                        ; preds = %land.lhs.true604, %if.end601
  %581 = load double*, double** %coeff, align 8, !dbg !5232
  %arrayidx614 = getelementptr inbounds double, double* %581, i64 0, !dbg !5232
  store double 0xBFF921FB54442D18, double* %arrayidx614, align 8, !dbg !5233
  %582 = load i64, i64* %number_arguments.addr, align 8, !dbg !5234
  %cmp615 = icmp uge i64 %582, 1, !dbg !5236
  br i1 %cmp615, label %if.then617, label %if.else621, !dbg !5237

if.then617:                                       ; preds = %if.end613
  %583 = load double*, double** %arguments.addr, align 8, !dbg !5238
  %arrayidx618 = getelementptr inbounds double, double* %583, i64 0, !dbg !5238
  %584 = load double, double* %arrayidx618, align 8, !dbg !5238
  %call619 = call double @DegreesToRadians(double %584), !dbg !5239
  %585 = load double*, double** %coeff, align 8, !dbg !5240
  %arrayidx620 = getelementptr inbounds double, double* %585, i64 1, !dbg !5240
  store double %call619, double* %arrayidx620, align 8, !dbg !5241
  br label %if.end623, !dbg !5240

if.else621:                                       ; preds = %if.end613
  %586 = load double*, double** %coeff, align 8, !dbg !5242
  %arrayidx622 = getelementptr inbounds double, double* %586, i64 1, !dbg !5242
  store double 0x3FF921FB54442D18, double* %arrayidx622, align 8, !dbg !5243
  br label %if.end623

if.end623:                                        ; preds = %if.else621, %if.then617
  %587 = load i64, i64* %number_arguments.addr, align 8, !dbg !5244
  %cmp624 = icmp uge i64 %587, 2, !dbg !5246
  br i1 %cmp624, label %if.then626, label %if.end631, !dbg !5247

if.then626:                                       ; preds = %if.end623
  %588 = load double*, double** %arguments.addr, align 8, !dbg !5248
  %arrayidx627 = getelementptr inbounds double, double* %588, i64 1, !dbg !5248
  %589 = load double, double* %arrayidx627, align 8, !dbg !5248
  %call628 = call double @DegreesToRadians(double %589), !dbg !5249
  %590 = load double*, double** %coeff, align 8, !dbg !5250
  %arrayidx629 = getelementptr inbounds double, double* %590, i64 0, !dbg !5250
  %591 = load double, double* %arrayidx629, align 8, !dbg !5251
  %add630 = fadd double %591, %call628, !dbg !5251
  store double %add630, double* %arrayidx629, align 8, !dbg !5251
  br label %if.end631, !dbg !5250

if.end631:                                        ; preds = %if.then626, %if.end623
  %592 = load double*, double** %coeff, align 8, !dbg !5252
  %arrayidx632 = getelementptr inbounds double, double* %592, i64 0, !dbg !5252
  %593 = load double, double* %arrayidx632, align 8, !dbg !5253
  %div633 = fdiv double %593, 0x401921FB54442D18, !dbg !5253
  store double %div633, double* %arrayidx632, align 8, !dbg !5253
  %594 = load double*, double** %coeff, align 8, !dbg !5254
  %arrayidx634 = getelementptr inbounds double, double* %594, i64 0, !dbg !5254
  %595 = load double, double* %arrayidx634, align 8, !dbg !5254
  %call635 = call double @MagickRound(double %595), !dbg !5255
  %596 = load double*, double** %coeff, align 8, !dbg !5256
  %arrayidx636 = getelementptr inbounds double, double* %596, i64 0, !dbg !5256
  %597 = load double, double* %arrayidx636, align 8, !dbg !5257
  %sub637 = fsub double %597, %call635, !dbg !5257
  store double %sub637, double* %arrayidx636, align 8, !dbg !5257
  %598 = load double*, double** %coeff, align 8, !dbg !5258
  %arrayidx638 = getelementptr inbounds double, double* %598, i64 0, !dbg !5258
  %599 = load double, double* %arrayidx638, align 8, !dbg !5259
  %mul639 = fmul double %599, 0x401921FB54442D18, !dbg !5259
  store double %mul639, double* %arrayidx638, align 8, !dbg !5259
  %600 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5260
  %rows640 = getelementptr inbounds %struct._Image, %struct._Image* %600, i32 0, i32 8, !dbg !5261
  %601 = load i64, i64* %rows640, align 8, !dbg !5261
  %conv641 = uitofp i64 %601 to double, !dbg !5262
  %sub642 = fsub double %conv641, 1.000000e+00, !dbg !5263
  %602 = load double*, double** %coeff, align 8, !dbg !5264
  %arrayidx643 = getelementptr inbounds double, double* %602, i64 3, !dbg !5264
  store double %sub642, double* %arrayidx643, align 8, !dbg !5265
  %603 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5266
  %columns644 = getelementptr inbounds %struct._Image, %struct._Image* %603, i32 0, i32 7, !dbg !5267
  %604 = load i64, i64* %columns644, align 8, !dbg !5267
  %conv645 = uitofp i64 %604 to double, !dbg !5268
  %605 = load double*, double** %coeff, align 8, !dbg !5269
  %arrayidx646 = getelementptr inbounds double, double* %605, i64 1, !dbg !5269
  %606 = load double, double* %arrayidx646, align 8, !dbg !5269
  %div647 = fdiv double %conv645, %606, !dbg !5270
  %607 = load double*, double** %coeff, align 8, !dbg !5271
  %arrayidx648 = getelementptr inbounds double, double* %607, i64 3, !dbg !5271
  %608 = load double, double* %arrayidx648, align 8, !dbg !5271
  %div649 = fdiv double %608, 2.000000e+00, !dbg !5272
  %add650 = fadd double %div647, %div649, !dbg !5273
  %609 = load double*, double** %coeff, align 8, !dbg !5274
  %arrayidx651 = getelementptr inbounds double, double* %609, i64 2, !dbg !5274
  store double %add650, double* %arrayidx651, align 8, !dbg !5275
  %610 = load i64, i64* %number_arguments.addr, align 8, !dbg !5276
  %cmp652 = icmp uge i64 %610, 3, !dbg !5278
  br i1 %cmp652, label %if.then654, label %if.end671, !dbg !5279

if.then654:                                       ; preds = %if.end631
  %611 = load i64, i64* %number_arguments.addr, align 8, !dbg !5280
  %cmp655 = icmp uge i64 %611, 4, !dbg !5283
  br i1 %cmp655, label %if.then657, label %if.else662, !dbg !5284

if.then657:                                       ; preds = %if.then654
  %612 = load double*, double** %arguments.addr, align 8, !dbg !5285
  %arrayidx658 = getelementptr inbounds double, double* %612, i64 2, !dbg !5285
  %613 = load double, double* %arrayidx658, align 8, !dbg !5285
  %614 = load double*, double** %arguments.addr, align 8, !dbg !5286
  %arrayidx659 = getelementptr inbounds double, double* %614, i64 3, !dbg !5286
  %615 = load double, double* %arrayidx659, align 8, !dbg !5286
  %sub660 = fsub double %613, %615, !dbg !5287
  %616 = load double*, double** %coeff, align 8, !dbg !5288
  %arrayidx661 = getelementptr inbounds double, double* %616, i64 3, !dbg !5288
  store double %sub660, double* %arrayidx661, align 8, !dbg !5289
  br label %if.end668, !dbg !5288

if.else662:                                       ; preds = %if.then654
  %617 = load double*, double** %arguments.addr, align 8, !dbg !5290
  %arrayidx663 = getelementptr inbounds double, double* %617, i64 2, !dbg !5290
  %618 = load double, double* %arrayidx663, align 8, !dbg !5290
  %619 = load double*, double** %coeff, align 8, !dbg !5291
  %arrayidx664 = getelementptr inbounds double, double* %619, i64 2, !dbg !5291
  %620 = load double, double* %arrayidx664, align 8, !dbg !5291
  %div665 = fdiv double %618, %620, !dbg !5292
  %621 = load double*, double** %coeff, align 8, !dbg !5293
  %arrayidx666 = getelementptr inbounds double, double* %621, i64 3, !dbg !5293
  %622 = load double, double* %arrayidx666, align 8, !dbg !5294
  %mul667 = fmul double %622, %div665, !dbg !5294
  store double %mul667, double* %arrayidx666, align 8, !dbg !5294
  br label %if.end668

if.end668:                                        ; preds = %if.else662, %if.then657
  %623 = load double*, double** %arguments.addr, align 8, !dbg !5295
  %arrayidx669 = getelementptr inbounds double, double* %623, i64 2, !dbg !5295
  %624 = load double, double* %arrayidx669, align 8, !dbg !5295
  %625 = load double*, double** %coeff, align 8, !dbg !5296
  %arrayidx670 = getelementptr inbounds double, double* %625, i64 2, !dbg !5296
  store double %624, double* %arrayidx670, align 8, !dbg !5297
  br label %if.end671, !dbg !5298

if.end671:                                        ; preds = %if.end668, %if.end631
  %626 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5299
  %columns672 = getelementptr inbounds %struct._Image, %struct._Image* %626, i32 0, i32 7, !dbg !5300
  %627 = load i64, i64* %columns672, align 8, !dbg !5300
  %conv673 = uitofp i64 %627 to double, !dbg !5301
  %sub674 = fsub double %conv673, 1.000000e+00, !dbg !5302
  %div675 = fdiv double %sub674, 2.000000e+00, !dbg !5303
  %628 = load double*, double** %coeff, align 8, !dbg !5304
  %arrayidx676 = getelementptr inbounds double, double* %628, i64 4, !dbg !5304
  store double %div675, double* %arrayidx676, align 8, !dbg !5305
  %629 = load double*, double** %coeff, align 8, !dbg !5306
  store double* %629, double** %retval, align 8, !dbg !5307
  br label %return, !dbg !5307

sw.bb677:                                         ; preds = %for.end, %for.end
  %630 = load i64, i64* %number_arguments.addr, align 8, !dbg !5308
  %cmp678 = icmp eq i64 %630, 3, !dbg !5311
  br i1 %cmp678, label %if.then689, label %lor.lhs.false680, !dbg !5312

lor.lhs.false680:                                 ; preds = %sw.bb677
  %631 = load i64, i64* %number_arguments.addr, align 8, !dbg !5313
  %cmp681 = icmp ugt i64 %631, 6, !dbg !5314
  br i1 %cmp681, label %land.lhs.true683, label %lor.lhs.false686, !dbg !5315

land.lhs.true683:                                 ; preds = %lor.lhs.false680
  %632 = load i32*, i32** %method.addr, align 8, !dbg !5316
  %633 = load i32, i32* %632, align 4, !dbg !5317
  %cmp684 = icmp eq i32 %633, 10, !dbg !5318
  br i1 %cmp684, label %if.then689, label %lor.lhs.false686, !dbg !5319

lor.lhs.false686:                                 ; preds = %land.lhs.true683, %lor.lhs.false680
  %634 = load i64, i64* %number_arguments.addr, align 8, !dbg !5320
  %cmp687 = icmp ugt i64 %634, 8, !dbg !5321
  br i1 %cmp687, label %if.then689, label %if.end694, !dbg !5322

if.then689:                                       ; preds = %lor.lhs.false686, %land.lhs.true683, %sw.bb677
  %635 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !5323
  %636 = load i32*, i32** %method.addr, align 8, !dbg !5325
  %637 = load i32, i32* %636, align 4, !dbg !5326
  %conv690 = zext i32 %637 to i64, !dbg !5326
  %call691 = call i8* @CommandOptionToMnemonic(i32 20, i64 %conv690), !dbg !5327
  %call692 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %635, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 1199, i32 410, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.133, i64 0, i64 0), i8* %call691), !dbg !5328
  %638 = load double*, double** %coeff, align 8, !dbg !5329
  %639 = bitcast double* %638 to i8*, !dbg !5329
  %call693 = call i8* @RelinquishMagickMemory(i8* %639), !dbg !5330
  %640 = bitcast i8* %call693 to double*, !dbg !5331
  store double* %640, double** %coeff, align 8, !dbg !5332
  store double* null, double** %retval, align 8, !dbg !5333
  br label %return, !dbg !5333

if.end694:                                        ; preds = %lor.lhs.false686
  %641 = load i64, i64* %number_arguments.addr, align 8, !dbg !5334
  %cmp695 = icmp uge i64 %641, 1, !dbg !5336
  br i1 %cmp695, label %if.then697, label %if.else700, !dbg !5337

if.then697:                                       ; preds = %if.end694
  %642 = load double*, double** %arguments.addr, align 8, !dbg !5338
  %arrayidx698 = getelementptr inbounds double, double* %642, i64 0, !dbg !5338
  %643 = load double, double* %arrayidx698, align 8, !dbg !5338
  %644 = load double*, double** %coeff, align 8, !dbg !5339
  %arrayidx699 = getelementptr inbounds double, double* %644, i64 0, !dbg !5339
  store double %643, double* %arrayidx699, align 8, !dbg !5340
  br label %if.end702, !dbg !5339

if.else700:                                       ; preds = %if.end694
  %645 = load double*, double** %coeff, align 8, !dbg !5341
  %arrayidx701 = getelementptr inbounds double, double* %645, i64 0, !dbg !5341
  store double 0.000000e+00, double* %arrayidx701, align 8, !dbg !5342
  br label %if.end702

if.end702:                                        ; preds = %if.else700, %if.then697
  %646 = load i64, i64* %number_arguments.addr, align 8, !dbg !5343
  %cmp703 = icmp uge i64 %646, 2, !dbg !5344
  br i1 %cmp703, label %cond.true, label %cond.false, !dbg !5343

cond.true:                                        ; preds = %if.end702
  %647 = load double*, double** %arguments.addr, align 8, !dbg !5345
  %arrayidx705 = getelementptr inbounds double, double* %647, i64 1, !dbg !5345
  %648 = load double, double* %arrayidx705, align 8, !dbg !5345
  br label %cond.end, !dbg !5343

cond.false:                                       ; preds = %if.end702
  br label %cond.end, !dbg !5343

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond706 = phi double [ %648, %cond.true ], [ 0.000000e+00, %cond.false ], !dbg !5343
  %649 = load double*, double** %coeff, align 8, !dbg !5346
  %arrayidx707 = getelementptr inbounds double, double* %649, i64 1, !dbg !5346
  store double %cond706, double* %arrayidx707, align 8, !dbg !5347
  %650 = load i64, i64* %number_arguments.addr, align 8, !dbg !5348
  %cmp708 = icmp uge i64 %650, 4, !dbg !5350
  br i1 %cmp708, label %if.then710, label %if.else715, !dbg !5351

if.then710:                                       ; preds = %cond.end
  %651 = load double*, double** %arguments.addr, align 8, !dbg !5352
  %arrayidx711 = getelementptr inbounds double, double* %651, i64 2, !dbg !5352
  %652 = load double, double* %arrayidx711, align 8, !dbg !5352
  %653 = load double*, double** %coeff, align 8, !dbg !5354
  %arrayidx712 = getelementptr inbounds double, double* %653, i64 2, !dbg !5354
  store double %652, double* %arrayidx712, align 8, !dbg !5355
  %654 = load double*, double** %arguments.addr, align 8, !dbg !5356
  %arrayidx713 = getelementptr inbounds double, double* %654, i64 3, !dbg !5356
  %655 = load double, double* %arrayidx713, align 8, !dbg !5356
  %656 = load double*, double** %coeff, align 8, !dbg !5357
  %arrayidx714 = getelementptr inbounds double, double* %656, i64 3, !dbg !5357
  store double %655, double* %arrayidx714, align 8, !dbg !5358
  br label %if.end732, !dbg !5359

if.else715:                                       ; preds = %cond.end
  %657 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5360
  %columns716 = getelementptr inbounds %struct._Image, %struct._Image* %657, i32 0, i32 7, !dbg !5362
  %658 = load i64, i64* %columns716, align 8, !dbg !5362
  %conv717 = uitofp i64 %658 to double, !dbg !5363
  %div718 = fdiv double %conv717, 2.000000e+00, !dbg !5364
  %659 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5365
  %page719 = getelementptr inbounds %struct._Image, %struct._Image* %659, i32 0, i32 26, !dbg !5366
  %x720 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %page719, i32 0, i32 2, !dbg !5367
  %660 = load i64, i64* %x720, align 8, !dbg !5367
  %conv721 = sitofp i64 %660 to double, !dbg !5365
  %add722 = fadd double %div718, %conv721, !dbg !5368
  %661 = load double*, double** %coeff, align 8, !dbg !5369
  %arrayidx723 = getelementptr inbounds double, double* %661, i64 2, !dbg !5369
  store double %add722, double* %arrayidx723, align 8, !dbg !5370
  %662 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5371
  %rows724 = getelementptr inbounds %struct._Image, %struct._Image* %662, i32 0, i32 8, !dbg !5372
  %663 = load i64, i64* %rows724, align 8, !dbg !5372
  %conv725 = uitofp i64 %663 to double, !dbg !5373
  %div726 = fdiv double %conv725, 2.000000e+00, !dbg !5374
  %664 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5375
  %page727 = getelementptr inbounds %struct._Image, %struct._Image* %664, i32 0, i32 26, !dbg !5376
  %y728 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %page727, i32 0, i32 3, !dbg !5377
  %665 = load i64, i64* %y728, align 8, !dbg !5377
  %conv729 = sitofp i64 %665 to double, !dbg !5375
  %add730 = fadd double %div726, %conv729, !dbg !5378
  %666 = load double*, double** %coeff, align 8, !dbg !5379
  %arrayidx731 = getelementptr inbounds double, double* %666, i64 3, !dbg !5379
  store double %add730, double* %arrayidx731, align 8, !dbg !5380
  br label %if.end732

if.end732:                                        ; preds = %if.else715, %if.then710
  %667 = load double*, double** %coeff, align 8, !dbg !5381
  %arrayidx733 = getelementptr inbounds double, double* %667, i64 4, !dbg !5381
  store double 0xC00921FB54442D18, double* %arrayidx733, align 8, !dbg !5382
  %668 = load i64, i64* %number_arguments.addr, align 8, !dbg !5383
  %cmp734 = icmp uge i64 %668, 5, !dbg !5385
  br i1 %cmp734, label %if.then736, label %if.end740, !dbg !5386

if.then736:                                       ; preds = %if.end732
  %669 = load double*, double** %arguments.addr, align 8, !dbg !5387
  %arrayidx737 = getelementptr inbounds double, double* %669, i64 4, !dbg !5387
  %670 = load double, double* %arrayidx737, align 8, !dbg !5387
  %call738 = call double @DegreesToRadians(double %670), !dbg !5388
  %671 = load double*, double** %coeff, align 8, !dbg !5389
  %arrayidx739 = getelementptr inbounds double, double* %671, i64 4, !dbg !5389
  store double %call738, double* %arrayidx739, align 8, !dbg !5390
  br label %if.end740, !dbg !5389

if.end740:                                        ; preds = %if.then736, %if.end732
  %672 = load double*, double** %coeff, align 8, !dbg !5391
  %arrayidx741 = getelementptr inbounds double, double* %672, i64 4, !dbg !5391
  %673 = load double, double* %arrayidx741, align 8, !dbg !5391
  %674 = load double*, double** %coeff, align 8, !dbg !5392
  %arrayidx742 = getelementptr inbounds double, double* %674, i64 5, !dbg !5392
  store double %673, double* %arrayidx742, align 8, !dbg !5393
  %675 = load i64, i64* %number_arguments.addr, align 8, !dbg !5394
  %cmp743 = icmp uge i64 %675, 6, !dbg !5396
  br i1 %cmp743, label %if.then745, label %if.end749, !dbg !5397

if.then745:                                       ; preds = %if.end740
  %676 = load double*, double** %arguments.addr, align 8, !dbg !5398
  %arrayidx746 = getelementptr inbounds double, double* %676, i64 5, !dbg !5398
  %677 = load double, double* %arrayidx746, align 8, !dbg !5398
  %call747 = call double @DegreesToRadians(double %677), !dbg !5399
  %678 = load double*, double** %coeff, align 8, !dbg !5400
  %arrayidx748 = getelementptr inbounds double, double* %678, i64 5, !dbg !5400
  store double %call747, double* %arrayidx748, align 8, !dbg !5401
  br label %if.end749, !dbg !5400

if.end749:                                        ; preds = %if.then745, %if.end740
  %679 = load double*, double** %coeff, align 8, !dbg !5402
  %arrayidx750 = getelementptr inbounds double, double* %679, i64 4, !dbg !5402
  %680 = load double, double* %arrayidx750, align 8, !dbg !5402
  %681 = load double*, double** %coeff, align 8, !dbg !5404
  %arrayidx751 = getelementptr inbounds double, double* %681, i64 5, !dbg !5404
  %682 = load double, double* %arrayidx751, align 8, !dbg !5404
  %sub752 = fsub double %680, %682, !dbg !5405
  %683 = call double @llvm.fabs.f64(double %sub752), !dbg !5406
  %cmp753 = fcmp olt double %683, 1.000000e-15, !dbg !5407
  br i1 %cmp753, label %if.then755, label %if.end758, !dbg !5408

if.then755:                                       ; preds = %if.end749
  %684 = load double*, double** %coeff, align 8, !dbg !5409
  %arrayidx756 = getelementptr inbounds double, double* %684, i64 5, !dbg !5409
  %685 = load double, double* %arrayidx756, align 8, !dbg !5410
  %add757 = fadd double %685, 0x401921FB54442D18, !dbg !5410
  store double %add757, double* %arrayidx756, align 8, !dbg !5410
  br label %if.end758, !dbg !5409

if.end758:                                        ; preds = %if.then755, %if.end749
  %686 = load double*, double** %coeff, align 8, !dbg !5411
  %arrayidx759 = getelementptr inbounds double, double* %686, i64 0, !dbg !5411
  %687 = load double, double* %arrayidx759, align 8, !dbg !5411
  %cmp760 = fcmp olt double %687, 1.000000e-15, !dbg !5413
  br i1 %cmp760, label %if.then762, label %if.end864, !dbg !5414

if.then762:                                       ; preds = %if.end758
  %688 = load double*, double** %coeff, align 8, !dbg !5415
  %arrayidx763 = getelementptr inbounds double, double* %688, i64 0, !dbg !5415
  %689 = load double, double* %arrayidx763, align 8, !dbg !5415
  %690 = call double @llvm.fabs.f64(double %689), !dbg !5418
  %cmp764 = fcmp olt double %690, 1.000000e-15, !dbg !5419
  br i1 %cmp764, label %if.then766, label %if.end801, !dbg !5420

if.then766:                                       ; preds = %if.then762
  %691 = load double*, double** %coeff, align 8, !dbg !5421
  %arrayidx767 = getelementptr inbounds double, double* %691, i64 2, !dbg !5421
  %692 = load double, double* %arrayidx767, align 8, !dbg !5421
  %693 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5423
  %page768 = getelementptr inbounds %struct._Image, %struct._Image* %693, i32 0, i32 26, !dbg !5424
  %x769 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %page768, i32 0, i32 2, !dbg !5425
  %694 = load i64, i64* %x769, align 8, !dbg !5425
  %conv770 = sitofp i64 %694 to double, !dbg !5423
  %sub771 = fsub double %692, %conv770, !dbg !5426
  %695 = call double @llvm.fabs.f64(double %sub771), !dbg !5427
  %696 = load double*, double** %coeff, align 8, !dbg !5428
  %arrayidx772 = getelementptr inbounds double, double* %696, i64 3, !dbg !5428
  %697 = load double, double* %arrayidx772, align 8, !dbg !5428
  %698 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5429
  %page773 = getelementptr inbounds %struct._Image, %struct._Image* %698, i32 0, i32 26, !dbg !5430
  %y774 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %page773, i32 0, i32 3, !dbg !5431
  %699 = load i64, i64* %y774, align 8, !dbg !5431
  %conv775 = sitofp i64 %699 to double, !dbg !5429
  %sub776 = fsub double %697, %conv775, !dbg !5432
  %700 = call double @llvm.fabs.f64(double %sub776), !dbg !5433
  %call777 = call double @MagickMin(double %695, double %700), !dbg !5434
  %701 = load double*, double** %coeff, align 8, !dbg !5435
  %arrayidx778 = getelementptr inbounds double, double* %701, i64 0, !dbg !5435
  store double %call777, double* %arrayidx778, align 8, !dbg !5436
  %702 = load double*, double** %coeff, align 8, !dbg !5437
  %arrayidx779 = getelementptr inbounds double, double* %702, i64 0, !dbg !5437
  %703 = load double, double* %arrayidx779, align 8, !dbg !5437
  %704 = load double*, double** %coeff, align 8, !dbg !5438
  %arrayidx780 = getelementptr inbounds double, double* %704, i64 2, !dbg !5438
  %705 = load double, double* %arrayidx780, align 8, !dbg !5438
  %706 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5439
  %page781 = getelementptr inbounds %struct._Image, %struct._Image* %706, i32 0, i32 26, !dbg !5440
  %x782 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %page781, i32 0, i32 2, !dbg !5441
  %707 = load i64, i64* %x782, align 8, !dbg !5441
  %conv783 = sitofp i64 %707 to double, !dbg !5439
  %sub784 = fsub double %705, %conv783, !dbg !5442
  %708 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5443
  %columns785 = getelementptr inbounds %struct._Image, %struct._Image* %708, i32 0, i32 7, !dbg !5444
  %709 = load i64, i64* %columns785, align 8, !dbg !5444
  %conv786 = uitofp i64 %709 to double, !dbg !5443
  %sub787 = fsub double %sub784, %conv786, !dbg !5445
  %710 = call double @llvm.fabs.f64(double %sub787), !dbg !5446
  %call788 = call double @MagickMin(double %703, double %710), !dbg !5447
  %711 = load double*, double** %coeff, align 8, !dbg !5448
  %arrayidx789 = getelementptr inbounds double, double* %711, i64 0, !dbg !5448
  store double %call788, double* %arrayidx789, align 8, !dbg !5449
  %712 = load double*, double** %coeff, align 8, !dbg !5450
  %arrayidx790 = getelementptr inbounds double, double* %712, i64 0, !dbg !5450
  %713 = load double, double* %arrayidx790, align 8, !dbg !5450
  %714 = load double*, double** %coeff, align 8, !dbg !5451
  %arrayidx791 = getelementptr inbounds double, double* %714, i64 3, !dbg !5451
  %715 = load double, double* %arrayidx791, align 8, !dbg !5451
  %716 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5452
  %page792 = getelementptr inbounds %struct._Image, %struct._Image* %716, i32 0, i32 26, !dbg !5453
  %y793 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %page792, i32 0, i32 3, !dbg !5454
  %717 = load i64, i64* %y793, align 8, !dbg !5454
  %conv794 = sitofp i64 %717 to double, !dbg !5452
  %sub795 = fsub double %715, %conv794, !dbg !5455
  %718 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5456
  %rows796 = getelementptr inbounds %struct._Image, %struct._Image* %718, i32 0, i32 8, !dbg !5457
  %719 = load i64, i64* %rows796, align 8, !dbg !5457
  %conv797 = uitofp i64 %719 to double, !dbg !5456
  %sub798 = fsub double %sub795, %conv797, !dbg !5458
  %720 = call double @llvm.fabs.f64(double %sub798), !dbg !5459
  %call799 = call double @MagickMin(double %713, double %720), !dbg !5460
  %721 = load double*, double** %coeff, align 8, !dbg !5461
  %arrayidx800 = getelementptr inbounds double, double* %721, i64 0, !dbg !5461
  store double %call799, double* %arrayidx800, align 8, !dbg !5462
  br label %if.end801, !dbg !5463

if.end801:                                        ; preds = %if.then766, %if.then762
  %722 = load double*, double** %coeff, align 8, !dbg !5464
  %arrayidx802 = getelementptr inbounds double, double* %722, i64 0, !dbg !5464
  %723 = load double, double* %arrayidx802, align 8, !dbg !5464
  %sub803 = fsub double -1.000000e+00, %723, !dbg !5466
  %724 = call double @llvm.fabs.f64(double %sub803), !dbg !5467
  %cmp804 = fcmp olt double %724, 1.000000e-15, !dbg !5468
  br i1 %cmp804, label %if.then806, label %if.end863, !dbg !5469

if.then806:                                       ; preds = %if.end801
  call void @llvm.dbg.declare(metadata double* %rx, metadata !5470, metadata !DIExpression()), !dbg !5472
  call void @llvm.dbg.declare(metadata double* %ry, metadata !5473, metadata !DIExpression()), !dbg !5474
  %725 = load double*, double** %coeff, align 8, !dbg !5475
  %arrayidx807 = getelementptr inbounds double, double* %725, i64 2, !dbg !5475
  %726 = load double, double* %arrayidx807, align 8, !dbg !5475
  %727 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5476
  %page808 = getelementptr inbounds %struct._Image, %struct._Image* %727, i32 0, i32 26, !dbg !5477
  %x809 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %page808, i32 0, i32 2, !dbg !5478
  %728 = load i64, i64* %x809, align 8, !dbg !5478
  %conv810 = sitofp i64 %728 to double, !dbg !5476
  %sub811 = fsub double %726, %conv810, !dbg !5479
  store double %sub811, double* %rx, align 8, !dbg !5480
  %729 = load double*, double** %coeff, align 8, !dbg !5481
  %arrayidx812 = getelementptr inbounds double, double* %729, i64 3, !dbg !5481
  %730 = load double, double* %arrayidx812, align 8, !dbg !5481
  %731 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5482
  %page813 = getelementptr inbounds %struct._Image, %struct._Image* %731, i32 0, i32 26, !dbg !5483
  %y814 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %page813, i32 0, i32 3, !dbg !5484
  %732 = load i64, i64* %y814, align 8, !dbg !5484
  %conv815 = sitofp i64 %732 to double, !dbg !5482
  %sub816 = fsub double %730, %conv815, !dbg !5485
  store double %sub816, double* %ry, align 8, !dbg !5486
  %733 = load double, double* %rx, align 8, !dbg !5487
  %734 = load double, double* %rx, align 8, !dbg !5488
  %mul817 = fmul double %733, %734, !dbg !5489
  %735 = load double, double* %ry, align 8, !dbg !5490
  %736 = load double, double* %ry, align 8, !dbg !5491
  %mul818 = fmul double %735, %736, !dbg !5492
  %add819 = fadd double %mul817, %mul818, !dbg !5493
  %737 = load double*, double** %coeff, align 8, !dbg !5494
  %arrayidx820 = getelementptr inbounds double, double* %737, i64 0, !dbg !5494
  store double %add819, double* %arrayidx820, align 8, !dbg !5495
  %738 = load double*, double** %coeff, align 8, !dbg !5496
  %arrayidx821 = getelementptr inbounds double, double* %738, i64 3, !dbg !5496
  %739 = load double, double* %arrayidx821, align 8, !dbg !5496
  %740 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5497
  %page822 = getelementptr inbounds %struct._Image, %struct._Image* %740, i32 0, i32 26, !dbg !5498
  %y823 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %page822, i32 0, i32 3, !dbg !5499
  %741 = load i64, i64* %y823, align 8, !dbg !5499
  %conv824 = sitofp i64 %741 to double, !dbg !5497
  %sub825 = fsub double %739, %conv824, !dbg !5500
  %742 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5501
  %rows826 = getelementptr inbounds %struct._Image, %struct._Image* %742, i32 0, i32 8, !dbg !5502
  %743 = load i64, i64* %rows826, align 8, !dbg !5502
  %conv827 = uitofp i64 %743 to double, !dbg !5501
  %sub828 = fsub double %sub825, %conv827, !dbg !5503
  store double %sub828, double* %ry, align 8, !dbg !5504
  %744 = load double*, double** %coeff, align 8, !dbg !5505
  %arrayidx829 = getelementptr inbounds double, double* %744, i64 0, !dbg !5505
  %745 = load double, double* %arrayidx829, align 8, !dbg !5505
  %746 = load double, double* %rx, align 8, !dbg !5506
  %747 = load double, double* %rx, align 8, !dbg !5507
  %mul830 = fmul double %746, %747, !dbg !5508
  %748 = load double, double* %ry, align 8, !dbg !5509
  %749 = load double, double* %ry, align 8, !dbg !5510
  %mul831 = fmul double %748, %749, !dbg !5511
  %add832 = fadd double %mul830, %mul831, !dbg !5512
  %call833 = call double @MagickMax(double %745, double %add832), !dbg !5513
  %750 = load double*, double** %coeff, align 8, !dbg !5514
  %arrayidx834 = getelementptr inbounds double, double* %750, i64 0, !dbg !5514
  store double %call833, double* %arrayidx834, align 8, !dbg !5515
  %751 = load double*, double** %coeff, align 8, !dbg !5516
  %arrayidx835 = getelementptr inbounds double, double* %751, i64 2, !dbg !5516
  %752 = load double, double* %arrayidx835, align 8, !dbg !5516
  %753 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5517
  %page836 = getelementptr inbounds %struct._Image, %struct._Image* %753, i32 0, i32 26, !dbg !5518
  %x837 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %page836, i32 0, i32 2, !dbg !5519
  %754 = load i64, i64* %x837, align 8, !dbg !5519
  %conv838 = sitofp i64 %754 to double, !dbg !5517
  %sub839 = fsub double %752, %conv838, !dbg !5520
  %755 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5521
  %columns840 = getelementptr inbounds %struct._Image, %struct._Image* %755, i32 0, i32 7, !dbg !5522
  %756 = load i64, i64* %columns840, align 8, !dbg !5522
  %conv841 = uitofp i64 %756 to double, !dbg !5521
  %sub842 = fsub double %sub839, %conv841, !dbg !5523
  store double %sub842, double* %rx, align 8, !dbg !5524
  %757 = load double*, double** %coeff, align 8, !dbg !5525
  %arrayidx843 = getelementptr inbounds double, double* %757, i64 0, !dbg !5525
  %758 = load double, double* %arrayidx843, align 8, !dbg !5525
  %759 = load double, double* %rx, align 8, !dbg !5526
  %760 = load double, double* %rx, align 8, !dbg !5527
  %mul844 = fmul double %759, %760, !dbg !5528
  %761 = load double, double* %ry, align 8, !dbg !5529
  %762 = load double, double* %ry, align 8, !dbg !5530
  %mul845 = fmul double %761, %762, !dbg !5531
  %add846 = fadd double %mul844, %mul845, !dbg !5532
  %call847 = call double @MagickMax(double %758, double %add846), !dbg !5533
  %763 = load double*, double** %coeff, align 8, !dbg !5534
  %arrayidx848 = getelementptr inbounds double, double* %763, i64 0, !dbg !5534
  store double %call847, double* %arrayidx848, align 8, !dbg !5535
  %764 = load double*, double** %coeff, align 8, !dbg !5536
  %arrayidx849 = getelementptr inbounds double, double* %764, i64 3, !dbg !5536
  %765 = load double, double* %arrayidx849, align 8, !dbg !5536
  %766 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5537
  %page850 = getelementptr inbounds %struct._Image, %struct._Image* %766, i32 0, i32 26, !dbg !5538
  %y851 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %page850, i32 0, i32 3, !dbg !5539
  %767 = load i64, i64* %y851, align 8, !dbg !5539
  %conv852 = sitofp i64 %767 to double, !dbg !5537
  %sub853 = fsub double %765, %conv852, !dbg !5540
  store double %sub853, double* %ry, align 8, !dbg !5541
  %768 = load double*, double** %coeff, align 8, !dbg !5542
  %arrayidx854 = getelementptr inbounds double, double* %768, i64 0, !dbg !5542
  %769 = load double, double* %arrayidx854, align 8, !dbg !5542
  %770 = load double, double* %rx, align 8, !dbg !5543
  %771 = load double, double* %rx, align 8, !dbg !5544
  %mul855 = fmul double %770, %771, !dbg !5545
  %772 = load double, double* %ry, align 8, !dbg !5546
  %773 = load double, double* %ry, align 8, !dbg !5547
  %mul856 = fmul double %772, %773, !dbg !5548
  %add857 = fadd double %mul855, %mul856, !dbg !5549
  %call858 = call double @MagickMax(double %769, double %add857), !dbg !5550
  %774 = load double*, double** %coeff, align 8, !dbg !5551
  %arrayidx859 = getelementptr inbounds double, double* %774, i64 0, !dbg !5551
  store double %call858, double* %arrayidx859, align 8, !dbg !5552
  %775 = load double*, double** %coeff, align 8, !dbg !5553
  %arrayidx860 = getelementptr inbounds double, double* %775, i64 0, !dbg !5553
  %776 = load double, double* %arrayidx860, align 8, !dbg !5553
  %call861 = call double @sqrt(double %776) #6, !dbg !5554
  %777 = load double*, double** %coeff, align 8, !dbg !5555
  %arrayidx862 = getelementptr inbounds double, double* %777, i64 0, !dbg !5555
  store double %call861, double* %arrayidx862, align 8, !dbg !5556
  br label %if.end863, !dbg !5557

if.end863:                                        ; preds = %if.then806, %if.end801
  br label %if.end864, !dbg !5558

if.end864:                                        ; preds = %if.end863, %if.end758
  %778 = load double*, double** %coeff, align 8, !dbg !5559
  %arrayidx865 = getelementptr inbounds double, double* %778, i64 0, !dbg !5559
  %779 = load double, double* %arrayidx865, align 8, !dbg !5559
  %cmp866 = fcmp olt double %779, 1.000000e-15, !dbg !5561
  br i1 %cmp866, label %if.then878, label %lor.lhs.false868, !dbg !5562

lor.lhs.false868:                                 ; preds = %if.end864
  %780 = load double*, double** %coeff, align 8, !dbg !5563
  %arrayidx869 = getelementptr inbounds double, double* %780, i64 1, !dbg !5563
  %781 = load double, double* %arrayidx869, align 8, !dbg !5563
  %cmp870 = fcmp olt double %781, -1.000000e-15, !dbg !5564
  br i1 %cmp870, label %if.then878, label %lor.lhs.false872, !dbg !5565

lor.lhs.false872:                                 ; preds = %lor.lhs.false868
  %782 = load double*, double** %coeff, align 8, !dbg !5566
  %arrayidx873 = getelementptr inbounds double, double* %782, i64 0, !dbg !5566
  %783 = load double, double* %arrayidx873, align 8, !dbg !5566
  %784 = load double*, double** %coeff, align 8, !dbg !5567
  %arrayidx874 = getelementptr inbounds double, double* %784, i64 1, !dbg !5567
  %785 = load double, double* %arrayidx874, align 8, !dbg !5567
  %sub875 = fsub double %783, %785, !dbg !5568
  %cmp876 = fcmp olt double %sub875, 1.000000e-15, !dbg !5569
  br i1 %cmp876, label %if.then878, label %if.end883, !dbg !5570

if.then878:                                       ; preds = %lor.lhs.false872, %lor.lhs.false868, %if.end864
  %786 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !5571
  %787 = load i32*, i32** %method.addr, align 8, !dbg !5573
  %788 = load i32, i32* %787, align 4, !dbg !5574
  %conv879 = zext i32 %788 to i64, !dbg !5574
  %call880 = call i8* @CommandOptionToMnemonic(i32 20, i64 %conv879), !dbg !5575
  %call881 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %786, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 1259, i32 410, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.134, i64 0, i64 0), i8* %call880), !dbg !5576
  %789 = load double*, double** %coeff, align 8, !dbg !5577
  %790 = bitcast double* %789 to i8*, !dbg !5577
  %call882 = call i8* @RelinquishMagickMemory(i8* %790), !dbg !5578
  %791 = bitcast i8* %call882 to double*, !dbg !5579
  store double* %791, double** %coeff, align 8, !dbg !5580
  store double* null, double** %retval, align 8, !dbg !5581
  br label %return, !dbg !5581

if.end883:                                        ; preds = %lor.lhs.false872
  %792 = load i32*, i32** %method.addr, align 8, !dbg !5582
  %793 = load i32, i32* %792, align 4, !dbg !5584
  %cmp884 = icmp eq i32 %793, 10, !dbg !5585
  br i1 %cmp884, label %if.then886, label %if.else901, !dbg !5586

if.then886:                                       ; preds = %if.end883
  %794 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5587
  %columns887 = getelementptr inbounds %struct._Image, %struct._Image* %794, i32 0, i32 7, !dbg !5589
  %795 = load i64, i64* %columns887, align 8, !dbg !5589
  %conv888 = uitofp i64 %795 to double, !dbg !5590
  %796 = load double*, double** %coeff, align 8, !dbg !5591
  %arrayidx889 = getelementptr inbounds double, double* %796, i64 5, !dbg !5591
  %797 = load double, double* %arrayidx889, align 8, !dbg !5591
  %798 = load double*, double** %coeff, align 8, !dbg !5592
  %arrayidx890 = getelementptr inbounds double, double* %798, i64 4, !dbg !5592
  %799 = load double, double* %arrayidx890, align 8, !dbg !5592
  %sub891 = fsub double %797, %799, !dbg !5593
  %div892 = fdiv double %conv888, %sub891, !dbg !5594
  %800 = load double*, double** %coeff, align 8, !dbg !5595
  %arrayidx893 = getelementptr inbounds double, double* %800, i64 6, !dbg !5595
  store double %div892, double* %arrayidx893, align 8, !dbg !5596
  %801 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5597
  %rows894 = getelementptr inbounds %struct._Image, %struct._Image* %801, i32 0, i32 8, !dbg !5598
  %802 = load i64, i64* %rows894, align 8, !dbg !5598
  %conv895 = uitofp i64 %802 to double, !dbg !5599
  %803 = load double*, double** %coeff, align 8, !dbg !5600
  %arrayidx896 = getelementptr inbounds double, double* %803, i64 0, !dbg !5600
  %804 = load double, double* %arrayidx896, align 8, !dbg !5600
  %805 = load double*, double** %coeff, align 8, !dbg !5601
  %arrayidx897 = getelementptr inbounds double, double* %805, i64 1, !dbg !5601
  %806 = load double, double* %arrayidx897, align 8, !dbg !5601
  %sub898 = fsub double %804, %806, !dbg !5602
  %div899 = fdiv double %conv895, %sub898, !dbg !5603
  %807 = load double*, double** %coeff, align 8, !dbg !5604
  %arrayidx900 = getelementptr inbounds double, double* %807, i64 7, !dbg !5604
  store double %div899, double* %arrayidx900, align 8, !dbg !5605
  br label %if.end916, !dbg !5606

if.else901:                                       ; preds = %if.end883
  %808 = load double*, double** %coeff, align 8, !dbg !5607
  %arrayidx902 = getelementptr inbounds double, double* %808, i64 5, !dbg !5607
  %809 = load double, double* %arrayidx902, align 8, !dbg !5607
  %810 = load double*, double** %coeff, align 8, !dbg !5609
  %arrayidx903 = getelementptr inbounds double, double* %810, i64 4, !dbg !5609
  %811 = load double, double* %arrayidx903, align 8, !dbg !5609
  %sub904 = fsub double %809, %811, !dbg !5610
  %812 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5611
  %columns905 = getelementptr inbounds %struct._Image, %struct._Image* %812, i32 0, i32 7, !dbg !5612
  %813 = load i64, i64* %columns905, align 8, !dbg !5612
  %conv906 = uitofp i64 %813 to double, !dbg !5611
  %div907 = fdiv double %sub904, %conv906, !dbg !5613
  %814 = load double*, double** %coeff, align 8, !dbg !5614
  %arrayidx908 = getelementptr inbounds double, double* %814, i64 6, !dbg !5614
  store double %div907, double* %arrayidx908, align 8, !dbg !5615
  %815 = load double*, double** %coeff, align 8, !dbg !5616
  %arrayidx909 = getelementptr inbounds double, double* %815, i64 0, !dbg !5616
  %816 = load double, double* %arrayidx909, align 8, !dbg !5616
  %817 = load double*, double** %coeff, align 8, !dbg !5617
  %arrayidx910 = getelementptr inbounds double, double* %817, i64 1, !dbg !5617
  %818 = load double, double* %arrayidx910, align 8, !dbg !5617
  %sub911 = fsub double %816, %818, !dbg !5618
  %819 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5619
  %rows912 = getelementptr inbounds %struct._Image, %struct._Image* %819, i32 0, i32 8, !dbg !5620
  %820 = load i64, i64* %rows912, align 8, !dbg !5620
  %conv913 = uitofp i64 %820 to double, !dbg !5619
  %div914 = fdiv double %sub911, %conv913, !dbg !5621
  %821 = load double*, double** %coeff, align 8, !dbg !5622
  %arrayidx915 = getelementptr inbounds double, double* %821, i64 7, !dbg !5622
  store double %div914, double* %arrayidx915, align 8, !dbg !5623
  br label %if.end916

if.end916:                                        ; preds = %if.else901, %if.then886
  %822 = load double*, double** %coeff, align 8, !dbg !5624
  store double* %822, double** %retval, align 8, !dbg !5625
  br label %return, !dbg !5625

sw.bb917:                                         ; preds = %for.end, %for.end
  %823 = load double*, double** %arguments.addr, align 8, !dbg !5626
  %arrayidx918 = getelementptr inbounds double, double* %823, i64 0, !dbg !5626
  %824 = load double, double* %arrayidx918, align 8, !dbg !5626
  %cmp919 = fcmp olt double %824, 1.000000e-15, !dbg !5629
  br i1 %cmp919, label %if.then925, label %lor.lhs.false921, !dbg !5630

lor.lhs.false921:                                 ; preds = %sw.bb917
  %825 = load double*, double** %arguments.addr, align 8, !dbg !5631
  %arrayidx922 = getelementptr inbounds double, double* %825, i64 0, !dbg !5631
  %826 = load double, double* %arrayidx922, align 8, !dbg !5631
  %cmp923 = fcmp ogt double %826, 1.600000e+02, !dbg !5632
  br i1 %cmp923, label %if.then925, label %if.end930, !dbg !5633

if.then925:                                       ; preds = %lor.lhs.false921, %sw.bb917
  %827 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !5634
  %828 = load i32*, i32** %method.addr, align 8, !dbg !5636
  %829 = load i32, i32* %828, align 4, !dbg !5637
  %conv926 = zext i32 %829 to i64, !dbg !5637
  %call927 = call i8* @CommandOptionToMnemonic(i32 20, i64 %conv926), !dbg !5638
  %call928 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %827, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 1302, i32 410, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.135, i64 0, i64 0), i8* %call927), !dbg !5639
  %830 = load double*, double** %coeff, align 8, !dbg !5640
  %831 = bitcast double* %830 to i8*, !dbg !5640
  %call929 = call i8* @RelinquishMagickMemory(i8* %831), !dbg !5641
  %832 = bitcast i8* %call929 to double*, !dbg !5642
  store double* %832, double** %coeff, align 8, !dbg !5643
  store double* null, double** %retval, align 8, !dbg !5644
  br label %return, !dbg !5644

if.end930:                                        ; preds = %lor.lhs.false921
  %833 = load double*, double** %arguments.addr, align 8, !dbg !5645
  %arrayidx931 = getelementptr inbounds double, double* %833, i64 0, !dbg !5645
  %834 = load double, double* %arrayidx931, align 8, !dbg !5645
  %call932 = call double @DegreesToRadians(double %834), !dbg !5646
  %835 = load double*, double** %coeff, align 8, !dbg !5647
  %arrayidx933 = getelementptr inbounds double, double* %835, i64 0, !dbg !5647
  store double %call932, double* %arrayidx933, align 8, !dbg !5648
  %836 = load i32*, i32** %method.addr, align 8, !dbg !5649
  %837 = load i32, i32* %836, align 4, !dbg !5651
  %cmp934 = icmp eq i32 %837, 12, !dbg !5652
  br i1 %cmp934, label %if.then936, label %if.else942, !dbg !5653

if.then936:                                       ; preds = %if.end930
  %838 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5654
  %columns937 = getelementptr inbounds %struct._Image, %struct._Image* %838, i32 0, i32 7, !dbg !5655
  %839 = load i64, i64* %columns937, align 8, !dbg !5655
  %conv938 = uitofp i64 %839 to double, !dbg !5656
  %840 = load double*, double** %coeff, align 8, !dbg !5657
  %arrayidx939 = getelementptr inbounds double, double* %840, i64 0, !dbg !5657
  %841 = load double, double* %arrayidx939, align 8, !dbg !5657
  %div940 = fdiv double %conv938, %841, !dbg !5658
  %842 = load double*, double** %coeff, align 8, !dbg !5659
  %arrayidx941 = getelementptr inbounds double, double* %842, i64 1, !dbg !5659
  store double %div940, double* %arrayidx941, align 8, !dbg !5660
  br label %if.end951, !dbg !5659

if.else942:                                       ; preds = %if.end930
  %843 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5661
  %columns943 = getelementptr inbounds %struct._Image, %struct._Image* %843, i32 0, i32 7, !dbg !5662
  %844 = load i64, i64* %columns943, align 8, !dbg !5662
  %conv944 = uitofp i64 %844 to double, !dbg !5663
  %845 = load double*, double** %coeff, align 8, !dbg !5664
  %arrayidx945 = getelementptr inbounds double, double* %845, i64 0, !dbg !5664
  %846 = load double, double* %arrayidx945, align 8, !dbg !5664
  %div946 = fdiv double %846, 2.000000e+00, !dbg !5665
  %call947 = call double @tan(double %div946) #6, !dbg !5666
  %mul948 = fmul double 2.000000e+00, %call947, !dbg !5667
  %div949 = fdiv double %conv944, %mul948, !dbg !5668
  %847 = load double*, double** %coeff, align 8, !dbg !5669
  %arrayidx950 = getelementptr inbounds double, double* %847, i64 1, !dbg !5669
  store double %div949, double* %arrayidx950, align 8, !dbg !5670
  br label %if.end951

if.end951:                                        ; preds = %if.else942, %if.then936
  %848 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5671
  %columns952 = getelementptr inbounds %struct._Image, %struct._Image* %848, i32 0, i32 7, !dbg !5672
  %849 = load i64, i64* %columns952, align 8, !dbg !5672
  %conv953 = uitofp i64 %849 to double, !dbg !5673
  %div954 = fdiv double %conv953, 2.000000e+00, !dbg !5674
  %850 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5675
  %page955 = getelementptr inbounds %struct._Image, %struct._Image* %850, i32 0, i32 26, !dbg !5676
  %x956 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %page955, i32 0, i32 2, !dbg !5677
  %851 = load i64, i64* %x956, align 8, !dbg !5677
  %conv957 = sitofp i64 %851 to double, !dbg !5675
  %add958 = fadd double %div954, %conv957, !dbg !5678
  %852 = load double*, double** %coeff, align 8, !dbg !5679
  %arrayidx959 = getelementptr inbounds double, double* %852, i64 2, !dbg !5679
  store double %add958, double* %arrayidx959, align 8, !dbg !5680
  %853 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5681
  %rows960 = getelementptr inbounds %struct._Image, %struct._Image* %853, i32 0, i32 8, !dbg !5682
  %854 = load i64, i64* %rows960, align 8, !dbg !5682
  %conv961 = uitofp i64 %854 to double, !dbg !5683
  %div962 = fdiv double %conv961, 2.000000e+00, !dbg !5684
  %855 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5685
  %page963 = getelementptr inbounds %struct._Image, %struct._Image* %855, i32 0, i32 26, !dbg !5686
  %y964 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %page963, i32 0, i32 3, !dbg !5687
  %856 = load i64, i64* %y964, align 8, !dbg !5687
  %conv965 = sitofp i64 %856 to double, !dbg !5685
  %add966 = fadd double %div962, %conv965, !dbg !5688
  %857 = load double*, double** %coeff, align 8, !dbg !5689
  %arrayidx967 = getelementptr inbounds double, double* %857, i64 3, !dbg !5689
  store double %add966, double* %arrayidx967, align 8, !dbg !5690
  %858 = load double*, double** %coeff, align 8, !dbg !5691
  %arrayidx968 = getelementptr inbounds double, double* %858, i64 2, !dbg !5691
  %859 = load double, double* %arrayidx968, align 8, !dbg !5691
  %860 = load double*, double** %coeff, align 8, !dbg !5692
  %arrayidx969 = getelementptr inbounds double, double* %860, i64 4, !dbg !5692
  store double %859, double* %arrayidx969, align 8, !dbg !5693
  %861 = load double*, double** %coeff, align 8, !dbg !5694
  %arrayidx970 = getelementptr inbounds double, double* %861, i64 3, !dbg !5694
  %862 = load double, double* %arrayidx970, align 8, !dbg !5694
  %863 = load double*, double** %coeff, align 8, !dbg !5695
  %arrayidx971 = getelementptr inbounds double, double* %863, i64 5, !dbg !5695
  store double %862, double* %arrayidx971, align 8, !dbg !5696
  %864 = load double*, double** %coeff, align 8, !dbg !5697
  store double* %864, double** %retval, align 8, !dbg !5698
  br label %return, !dbg !5698

sw.bb972:                                         ; preds = %for.end, %for.end
  call void @llvm.dbg.declare(metadata double* %rscale, metadata !5699, metadata !DIExpression()), !dbg !5701
  %865 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5702
  %columns973 = getelementptr inbounds %struct._Image, %struct._Image* %865, i32 0, i32 7, !dbg !5703
  %866 = load i64, i64* %columns973, align 8, !dbg !5703
  %conv974 = uitofp i64 %866 to double, !dbg !5704
  %867 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5705
  %rows975 = getelementptr inbounds %struct._Image, %struct._Image* %867, i32 0, i32 8, !dbg !5706
  %868 = load i64, i64* %rows975, align 8, !dbg !5706
  %conv976 = uitofp i64 %868 to double, !dbg !5707
  %call977 = call double @MagickMin(double %conv974, double %conv976), !dbg !5708
  %div978 = fdiv double 2.000000e+00, %call977, !dbg !5709
  store double %div978, double* %rscale, align 8, !dbg !5701
  %869 = load i64, i64* %number_arguments.addr, align 8, !dbg !5710
  %cmp979 = icmp ult i64 %869, 3, !dbg !5712
  br i1 %cmp979, label %if.then990, label %lor.lhs.false981, !dbg !5713

lor.lhs.false981:                                 ; preds = %sw.bb972
  %870 = load i64, i64* %number_arguments.addr, align 8, !dbg !5714
  %cmp982 = icmp eq i64 %870, 7, !dbg !5715
  br i1 %cmp982, label %if.then990, label %lor.lhs.false984, !dbg !5716

lor.lhs.false984:                                 ; preds = %lor.lhs.false981
  %871 = load i64, i64* %number_arguments.addr, align 8, !dbg !5717
  %cmp985 = icmp eq i64 %871, 9, !dbg !5718
  br i1 %cmp985, label %if.then990, label %lor.lhs.false987, !dbg !5719

lor.lhs.false987:                                 ; preds = %lor.lhs.false984
  %872 = load i64, i64* %number_arguments.addr, align 8, !dbg !5720
  %cmp988 = icmp ugt i64 %872, 10, !dbg !5721
  br i1 %cmp988, label %if.then990, label %if.end995, !dbg !5722

if.then990:                                       ; preds = %lor.lhs.false987, %lor.lhs.false984, %lor.lhs.false981, %sw.bb972
  %873 = load double*, double** %coeff, align 8, !dbg !5723
  %874 = bitcast double* %873 to i8*, !dbg !5723
  %call991 = call i8* @RelinquishMagickMemory(i8* %874), !dbg !5725
  %875 = bitcast i8* %call991 to double*, !dbg !5726
  store double* %875, double** %coeff, align 8, !dbg !5727
  %876 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !5728
  %877 = load i32*, i32** %method.addr, align 8, !dbg !5729
  %878 = load i32, i32* %877, align 4, !dbg !5730
  %conv992 = zext i32 %878 to i64, !dbg !5730
  %call993 = call i8* @CommandOptionToMnemonic(i32 20, i64 %conv992), !dbg !5731
  %call994 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %876, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 1353, i32 410, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.133, i64 0, i64 0), i8* %call993), !dbg !5732
  store double* null, double** %retval, align 8, !dbg !5733
  br label %return, !dbg !5733

if.end995:                                        ; preds = %lor.lhs.false987
  %879 = load double*, double** %arguments.addr, align 8, !dbg !5734
  %arrayidx996 = getelementptr inbounds double, double* %879, i64 0, !dbg !5734
  %880 = load double, double* %arrayidx996, align 8, !dbg !5734
  %881 = load double*, double** %coeff, align 8, !dbg !5735
  %arrayidx997 = getelementptr inbounds double, double* %881, i64 0, !dbg !5735
  store double %880, double* %arrayidx997, align 8, !dbg !5736
  %882 = load double*, double** %arguments.addr, align 8, !dbg !5737
  %arrayidx998 = getelementptr inbounds double, double* %882, i64 1, !dbg !5737
  %883 = load double, double* %arrayidx998, align 8, !dbg !5737
  %884 = load double*, double** %coeff, align 8, !dbg !5738
  %arrayidx999 = getelementptr inbounds double, double* %884, i64 1, !dbg !5738
  store double %883, double* %arrayidx999, align 8, !dbg !5739
  %885 = load double*, double** %arguments.addr, align 8, !dbg !5740
  %arrayidx1000 = getelementptr inbounds double, double* %885, i64 2, !dbg !5740
  %886 = load double, double* %arrayidx1000, align 8, !dbg !5740
  %887 = load double*, double** %coeff, align 8, !dbg !5741
  %arrayidx1001 = getelementptr inbounds double, double* %887, i64 2, !dbg !5741
  store double %886, double* %arrayidx1001, align 8, !dbg !5742
  %888 = load i64, i64* %number_arguments.addr, align 8, !dbg !5743
  %cmp1002 = icmp eq i64 %888, 3, !dbg !5745
  br i1 %cmp1002, label %if.then1007, label %lor.lhs.false1004, !dbg !5746

lor.lhs.false1004:                                ; preds = %if.end995
  %889 = load i64, i64* %number_arguments.addr, align 8, !dbg !5747
  %cmp1005 = icmp eq i64 %889, 5, !dbg !5748
  br i1 %cmp1005, label %if.then1007, label %if.else1015, !dbg !5749

if.then1007:                                      ; preds = %lor.lhs.false1004, %if.end995
  %890 = load double*, double** %coeff, align 8, !dbg !5750
  %arrayidx1008 = getelementptr inbounds double, double* %890, i64 0, !dbg !5750
  %891 = load double, double* %arrayidx1008, align 8, !dbg !5750
  %sub1009 = fsub double 1.000000e+00, %891, !dbg !5751
  %892 = load double*, double** %coeff, align 8, !dbg !5752
  %arrayidx1010 = getelementptr inbounds double, double* %892, i64 1, !dbg !5752
  %893 = load double, double* %arrayidx1010, align 8, !dbg !5752
  %sub1011 = fsub double %sub1009, %893, !dbg !5753
  %894 = load double*, double** %coeff, align 8, !dbg !5754
  %arrayidx1012 = getelementptr inbounds double, double* %894, i64 2, !dbg !5754
  %895 = load double, double* %arrayidx1012, align 8, !dbg !5754
  %sub1013 = fsub double %sub1011, %895, !dbg !5755
  %896 = load double*, double** %coeff, align 8, !dbg !5756
  %arrayidx1014 = getelementptr inbounds double, double* %896, i64 3, !dbg !5756
  store double %sub1013, double* %arrayidx1014, align 8, !dbg !5757
  br label %if.end1018, !dbg !5756

if.else1015:                                      ; preds = %lor.lhs.false1004
  %897 = load double*, double** %arguments.addr, align 8, !dbg !5758
  %arrayidx1016 = getelementptr inbounds double, double* %897, i64 3, !dbg !5758
  %898 = load double, double* %arrayidx1016, align 8, !dbg !5758
  %899 = load double*, double** %coeff, align 8, !dbg !5759
  %arrayidx1017 = getelementptr inbounds double, double* %899, i64 3, !dbg !5759
  store double %898, double* %arrayidx1017, align 8, !dbg !5760
  br label %if.end1018

if.end1018:                                       ; preds = %if.else1015, %if.then1007
  %900 = load double, double* %rscale, align 8, !dbg !5761
  %call1019 = call double @pow(double %900, double 3.000000e+00) #6, !dbg !5762
  %901 = load double*, double** %coeff, align 8, !dbg !5763
  %arrayidx1020 = getelementptr inbounds double, double* %901, i64 0, !dbg !5763
  %902 = load double, double* %arrayidx1020, align 8, !dbg !5764
  %mul1021 = fmul double %902, %call1019, !dbg !5764
  store double %mul1021, double* %arrayidx1020, align 8, !dbg !5764
  %903 = load double, double* %rscale, align 8, !dbg !5765
  %904 = load double, double* %rscale, align 8, !dbg !5766
  %mul1022 = fmul double %903, %904, !dbg !5767
  %905 = load double*, double** %coeff, align 8, !dbg !5768
  %arrayidx1023 = getelementptr inbounds double, double* %905, i64 1, !dbg !5768
  %906 = load double, double* %arrayidx1023, align 8, !dbg !5769
  %mul1024 = fmul double %906, %mul1022, !dbg !5769
  store double %mul1024, double* %arrayidx1023, align 8, !dbg !5769
  %907 = load double, double* %rscale, align 8, !dbg !5770
  %908 = load double*, double** %coeff, align 8, !dbg !5771
  %arrayidx1025 = getelementptr inbounds double, double* %908, i64 2, !dbg !5771
  %909 = load double, double* %arrayidx1025, align 8, !dbg !5772
  %mul1026 = fmul double %909, %907, !dbg !5772
  store double %mul1026, double* %arrayidx1025, align 8, !dbg !5772
  %910 = load i64, i64* %number_arguments.addr, align 8, !dbg !5773
  %cmp1027 = icmp uge i64 %910, 8, !dbg !5775
  br i1 %cmp1027, label %if.then1029, label %if.else1043, !dbg !5776

if.then1029:                                      ; preds = %if.end1018
  %911 = load double*, double** %arguments.addr, align 8, !dbg !5777
  %arrayidx1030 = getelementptr inbounds double, double* %911, i64 4, !dbg !5777
  %912 = load double, double* %arrayidx1030, align 8, !dbg !5777
  %913 = load double, double* %rscale, align 8, !dbg !5779
  %call1031 = call double @pow(double %913, double 3.000000e+00) #6, !dbg !5780
  %mul1032 = fmul double %912, %call1031, !dbg !5781
  %914 = load double*, double** %coeff, align 8, !dbg !5782
  %arrayidx1033 = getelementptr inbounds double, double* %914, i64 4, !dbg !5782
  store double %mul1032, double* %arrayidx1033, align 8, !dbg !5783
  %915 = load double*, double** %arguments.addr, align 8, !dbg !5784
  %arrayidx1034 = getelementptr inbounds double, double* %915, i64 5, !dbg !5784
  %916 = load double, double* %arrayidx1034, align 8, !dbg !5784
  %917 = load double, double* %rscale, align 8, !dbg !5785
  %mul1035 = fmul double %916, %917, !dbg !5786
  %918 = load double, double* %rscale, align 8, !dbg !5787
  %mul1036 = fmul double %mul1035, %918, !dbg !5788
  %919 = load double*, double** %coeff, align 8, !dbg !5789
  %arrayidx1037 = getelementptr inbounds double, double* %919, i64 5, !dbg !5789
  store double %mul1036, double* %arrayidx1037, align 8, !dbg !5790
  %920 = load double*, double** %arguments.addr, align 8, !dbg !5791
  %arrayidx1038 = getelementptr inbounds double, double* %920, i64 6, !dbg !5791
  %921 = load double, double* %arrayidx1038, align 8, !dbg !5791
  %922 = load double, double* %rscale, align 8, !dbg !5792
  %mul1039 = fmul double %921, %922, !dbg !5793
  %923 = load double*, double** %coeff, align 8, !dbg !5794
  %arrayidx1040 = getelementptr inbounds double, double* %923, i64 6, !dbg !5794
  store double %mul1039, double* %arrayidx1040, align 8, !dbg !5795
  %924 = load double*, double** %arguments.addr, align 8, !dbg !5796
  %arrayidx1041 = getelementptr inbounds double, double* %924, i64 7, !dbg !5796
  %925 = load double, double* %arrayidx1041, align 8, !dbg !5796
  %926 = load double*, double** %coeff, align 8, !dbg !5797
  %arrayidx1042 = getelementptr inbounds double, double* %926, i64 7, !dbg !5797
  store double %925, double* %arrayidx1042, align 8, !dbg !5798
  br label %if.end1052, !dbg !5799

if.else1043:                                      ; preds = %if.end1018
  %927 = load double*, double** %coeff, align 8, !dbg !5800
  %arrayidx1044 = getelementptr inbounds double, double* %927, i64 0, !dbg !5800
  %928 = load double, double* %arrayidx1044, align 8, !dbg !5800
  %929 = load double*, double** %coeff, align 8, !dbg !5802
  %arrayidx1045 = getelementptr inbounds double, double* %929, i64 4, !dbg !5802
  store double %928, double* %arrayidx1045, align 8, !dbg !5803
  %930 = load double*, double** %coeff, align 8, !dbg !5804
  %arrayidx1046 = getelementptr inbounds double, double* %930, i64 1, !dbg !5804
  %931 = load double, double* %arrayidx1046, align 8, !dbg !5804
  %932 = load double*, double** %coeff, align 8, !dbg !5805
  %arrayidx1047 = getelementptr inbounds double, double* %932, i64 5, !dbg !5805
  store double %931, double* %arrayidx1047, align 8, !dbg !5806
  %933 = load double*, double** %coeff, align 8, !dbg !5807
  %arrayidx1048 = getelementptr inbounds double, double* %933, i64 2, !dbg !5807
  %934 = load double, double* %arrayidx1048, align 8, !dbg !5807
  %935 = load double*, double** %coeff, align 8, !dbg !5808
  %arrayidx1049 = getelementptr inbounds double, double* %935, i64 6, !dbg !5808
  store double %934, double* %arrayidx1049, align 8, !dbg !5809
  %936 = load double*, double** %coeff, align 8, !dbg !5810
  %arrayidx1050 = getelementptr inbounds double, double* %936, i64 3, !dbg !5810
  %937 = load double, double* %arrayidx1050, align 8, !dbg !5810
  %938 = load double*, double** %coeff, align 8, !dbg !5811
  %arrayidx1051 = getelementptr inbounds double, double* %938, i64 7, !dbg !5811
  store double %937, double* %arrayidx1051, align 8, !dbg !5812
  br label %if.end1052

if.end1052:                                       ; preds = %if.else1043, %if.then1029
  %939 = load i64, i64* %number_arguments.addr, align 8, !dbg !5813
  %cmp1053 = icmp eq i64 %939, 5, !dbg !5815
  br i1 %cmp1053, label %if.then1055, label %if.else1060, !dbg !5816

if.then1055:                                      ; preds = %if.end1052
  %940 = load double*, double** %arguments.addr, align 8, !dbg !5817
  %arrayidx1056 = getelementptr inbounds double, double* %940, i64 3, !dbg !5817
  %941 = load double, double* %arrayidx1056, align 8, !dbg !5817
  %942 = load double*, double** %coeff, align 8, !dbg !5819
  %arrayidx1057 = getelementptr inbounds double, double* %942, i64 8, !dbg !5819
  store double %941, double* %arrayidx1057, align 8, !dbg !5820
  %943 = load double*, double** %arguments.addr, align 8, !dbg !5821
  %arrayidx1058 = getelementptr inbounds double, double* %943, i64 4, !dbg !5821
  %944 = load double, double* %arrayidx1058, align 8, !dbg !5821
  %945 = load double*, double** %coeff, align 8, !dbg !5822
  %arrayidx1059 = getelementptr inbounds double, double* %945, i64 9, !dbg !5822
  store double %944, double* %arrayidx1059, align 8, !dbg !5823
  br label %if.end1095, !dbg !5824

if.else1060:                                      ; preds = %if.end1052
  %946 = load i64, i64* %number_arguments.addr, align 8, !dbg !5825
  %cmp1061 = icmp eq i64 %946, 6, !dbg !5827
  br i1 %cmp1061, label %if.then1063, label %if.else1068, !dbg !5828

if.then1063:                                      ; preds = %if.else1060
  %947 = load double*, double** %arguments.addr, align 8, !dbg !5829
  %arrayidx1064 = getelementptr inbounds double, double* %947, i64 4, !dbg !5829
  %948 = load double, double* %arrayidx1064, align 8, !dbg !5829
  %949 = load double*, double** %coeff, align 8, !dbg !5831
  %arrayidx1065 = getelementptr inbounds double, double* %949, i64 8, !dbg !5831
  store double %948, double* %arrayidx1065, align 8, !dbg !5832
  %950 = load double*, double** %arguments.addr, align 8, !dbg !5833
  %arrayidx1066 = getelementptr inbounds double, double* %950, i64 5, !dbg !5833
  %951 = load double, double* %arrayidx1066, align 8, !dbg !5833
  %952 = load double*, double** %coeff, align 8, !dbg !5834
  %arrayidx1067 = getelementptr inbounds double, double* %952, i64 9, !dbg !5834
  store double %951, double* %arrayidx1067, align 8, !dbg !5835
  br label %if.end1094, !dbg !5836

if.else1068:                                      ; preds = %if.else1060
  %953 = load i64, i64* %number_arguments.addr, align 8, !dbg !5837
  %cmp1069 = icmp eq i64 %953, 10, !dbg !5839
  br i1 %cmp1069, label %if.then1071, label %if.else1076, !dbg !5840

if.then1071:                                      ; preds = %if.else1068
  %954 = load double*, double** %arguments.addr, align 8, !dbg !5841
  %arrayidx1072 = getelementptr inbounds double, double* %954, i64 8, !dbg !5841
  %955 = load double, double* %arrayidx1072, align 8, !dbg !5841
  %956 = load double*, double** %coeff, align 8, !dbg !5843
  %arrayidx1073 = getelementptr inbounds double, double* %956, i64 8, !dbg !5843
  store double %955, double* %arrayidx1073, align 8, !dbg !5844
  %957 = load double*, double** %arguments.addr, align 8, !dbg !5845
  %arrayidx1074 = getelementptr inbounds double, double* %957, i64 9, !dbg !5845
  %958 = load double, double* %arrayidx1074, align 8, !dbg !5845
  %959 = load double*, double** %coeff, align 8, !dbg !5846
  %arrayidx1075 = getelementptr inbounds double, double* %959, i64 9, !dbg !5846
  store double %958, double* %arrayidx1075, align 8, !dbg !5847
  br label %if.end1093, !dbg !5848

if.else1076:                                      ; preds = %if.else1068
  %960 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5849
  %columns1077 = getelementptr inbounds %struct._Image, %struct._Image* %960, i32 0, i32 7, !dbg !5851
  %961 = load i64, i64* %columns1077, align 8, !dbg !5851
  %conv1078 = uitofp i64 %961 to double, !dbg !5852
  %div1079 = fdiv double %conv1078, 2.000000e+00, !dbg !5853
  %962 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5854
  %page1080 = getelementptr inbounds %struct._Image, %struct._Image* %962, i32 0, i32 26, !dbg !5855
  %x1081 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %page1080, i32 0, i32 2, !dbg !5856
  %963 = load i64, i64* %x1081, align 8, !dbg !5856
  %conv1082 = sitofp i64 %963 to double, !dbg !5854
  %add1083 = fadd double %div1079, %conv1082, !dbg !5857
  %964 = load double*, double** %coeff, align 8, !dbg !5858
  %arrayidx1084 = getelementptr inbounds double, double* %964, i64 8, !dbg !5858
  store double %add1083, double* %arrayidx1084, align 8, !dbg !5859
  %965 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5860
  %rows1085 = getelementptr inbounds %struct._Image, %struct._Image* %965, i32 0, i32 8, !dbg !5861
  %966 = load i64, i64* %rows1085, align 8, !dbg !5861
  %conv1086 = uitofp i64 %966 to double, !dbg !5862
  %div1087 = fdiv double %conv1086, 2.000000e+00, !dbg !5863
  %967 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5864
  %page1088 = getelementptr inbounds %struct._Image, %struct._Image* %967, i32 0, i32 26, !dbg !5865
  %y1089 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %page1088, i32 0, i32 3, !dbg !5866
  %968 = load i64, i64* %y1089, align 8, !dbg !5866
  %conv1090 = sitofp i64 %968 to double, !dbg !5864
  %add1091 = fadd double %div1087, %conv1090, !dbg !5867
  %969 = load double*, double** %coeff, align 8, !dbg !5868
  %arrayidx1092 = getelementptr inbounds double, double* %969, i64 9, !dbg !5868
  store double %add1091, double* %arrayidx1092, align 8, !dbg !5869
  br label %if.end1093

if.end1093:                                       ; preds = %if.else1076, %if.then1071
  br label %if.end1094

if.end1094:                                       ; preds = %if.end1093, %if.then1063
  br label %if.end1095

if.end1095:                                       ; preds = %if.end1094, %if.then1055
  %970 = load double*, double** %coeff, align 8, !dbg !5870
  store double* %970, double** %retval, align 8, !dbg !5871
  br label %return, !dbg !5871

sw.bb1096:                                        ; preds = %for.end
  %971 = load i64, i64* %number_arguments.addr, align 8, !dbg !5872
  %972 = load i64, i64* %cp_size, align 8, !dbg !5875
  %rem1097 = urem i64 %971, %972, !dbg !5876
  %cmp1098 = icmp ne i64 %rem1097, 0, !dbg !5877
  br i1 %cmp1098, label %if.then1103, label %lor.lhs.false1100, !dbg !5878

lor.lhs.false1100:                                ; preds = %sw.bb1096
  %973 = load i64, i64* %number_arguments.addr, align 8, !dbg !5879
  %974 = load i64, i64* %cp_size, align 8, !dbg !5880
  %cmp1101 = icmp ult i64 %973, %974, !dbg !5881
  br i1 %cmp1101, label %if.then1103, label %if.end1108, !dbg !5882

if.then1103:                                      ; preds = %lor.lhs.false1100, %sw.bb1096
  %975 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !5883
  %976 = load i32*, i32** %method.addr, align 8, !dbg !5885
  %977 = load i32, i32* %976, align 4, !dbg !5886
  %conv1104 = zext i32 %977 to i64, !dbg !5886
  %call1105 = call i8* @CommandOptionToMnemonic(i32 20, i64 %conv1104), !dbg !5887
  %call1106 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %975, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 1412, i32 410, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.136, i64 0, i64 0), i8* %call1105), !dbg !5888
  %978 = load double*, double** %coeff, align 8, !dbg !5889
  %979 = bitcast double* %978 to i8*, !dbg !5889
  %call1107 = call i8* @RelinquishMagickMemory(i8* %979), !dbg !5890
  %980 = bitcast i8* %call1107 to double*, !dbg !5891
  store double* %980, double** %coeff, align 8, !dbg !5892
  store double* null, double** %retval, align 8, !dbg !5893
  br label %return, !dbg !5893

if.end1108:                                       ; preds = %lor.lhs.false1100
  call void @llvm.dbg.declare(metadata i8** %artifact, metadata !5894, metadata !DIExpression()), !dbg !5896
  %981 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5897
  %call1109 = call i8* @GetImageArtifact(%struct._Image* %981, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.137, i64 0, i64 0)), !dbg !5898
  store i8* %call1109, i8** %artifact, align 8, !dbg !5896
  %982 = load i8*, i8** %artifact, align 8, !dbg !5899
  %cmp1110 = icmp ne i8* %982, null, !dbg !5901
  br i1 %cmp1110, label %if.then1112, label %if.else1123, !dbg !5902

if.then1112:                                      ; preds = %if.end1108
  %983 = load i8*, i8** %artifact, align 8, !dbg !5903
  %call1113 = call double @StringToDouble(i8* %983, i8** null), !dbg !5905
  %div1114 = fdiv double %call1113, 2.000000e+00, !dbg !5906
  %984 = load double*, double** %coeff, align 8, !dbg !5907
  %arrayidx1115 = getelementptr inbounds double, double* %984, i64 0, !dbg !5907
  store double %div1114, double* %arrayidx1115, align 8, !dbg !5908
  %985 = load double*, double** %coeff, align 8, !dbg !5909
  %arrayidx1116 = getelementptr inbounds double, double* %985, i64 0, !dbg !5909
  %986 = load double, double* %arrayidx1116, align 8, !dbg !5909
  %cmp1117 = fcmp olt double %986, 1.000000e-15, !dbg !5911
  br i1 %cmp1117, label %if.then1119, label %if.end1122, !dbg !5912

if.then1119:                                      ; preds = %if.then1112
  %987 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !5913
  %call1120 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %987, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 1423, i32 410, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.138, i64 0, i64 0)), !dbg !5915
  %988 = load double*, double** %coeff, align 8, !dbg !5916
  %989 = bitcast double* %988 to i8*, !dbg !5916
  %call1121 = call i8* @RelinquishMagickMemory(i8* %989), !dbg !5917
  %990 = bitcast i8* %call1121 to double*, !dbg !5918
  store double* %990, double** %coeff, align 8, !dbg !5919
  store double* null, double** %retval, align 8, !dbg !5920
  br label %return, !dbg !5920

if.end1122:                                       ; preds = %if.then1112
  br label %if.end1125, !dbg !5921

if.else1123:                                      ; preds = %if.end1108
  %991 = load double*, double** %coeff, align 8, !dbg !5922
  %arrayidx1124 = getelementptr inbounds double, double* %991, i64 0, !dbg !5922
  store double 1.000000e+00, double* %arrayidx1124, align 8, !dbg !5923
  br label %if.end1125

if.end1125:                                       ; preds = %if.else1123, %if.end1122
  %992 = load double*, double** %coeff, align 8, !dbg !5924
  store double* %992, double** %retval, align 8, !dbg !5925
  br label %return, !dbg !5925

sw.default1126:                                   ; preds = %for.end
  br label %sw.epilog1127, !dbg !5926

sw.epilog1127:                                    ; preds = %sw.default1126
  call void @perror(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.139, i64 0, i64 0)), !dbg !5927
  store double* null, double** %retval, align 8, !dbg !5928
  br label %return, !dbg !5928

return:                                           ; preds = %sw.epilog1127, %if.end1125, %if.then1119, %if.then1103, %if.end1095, %if.then990, %if.end951, %if.then925, %if.end916, %if.then878, %if.then689, %if.end671, %if.then608, %if.then596, %if.end588, %if.then583, %if.then537, %if.end512, %if.then486, %if.then444, %if.then431, %if.end404, %if.then400, %if.end383, %if.then378, %if.then311, %if.then300, %if.end261, %if.then256, %sw.default244, %sw.bb211, %for.end197, %if.then183, %if.end179, %if.then173, %if.then95, %if.then53, %if.then40, %if.then25, %if.then19, %if.then13
  %993 = load double*, double** %retval, align 8, !dbg !5929
  ret double* %993, !dbg !5929
}

; Function Attrs: noinline nounwind uwtable
define internal void @InvertAffineCoefficients(double* %coeff, double* %inverse) #0 !dbg !5930 {
entry:
  %coeff.addr = alloca double*, align 8
  %inverse.addr = alloca double*, align 8
  %determinant = alloca double, align 8
  store double* %coeff, double** %coeff.addr, align 8
  call void @llvm.dbg.declare(metadata double** %coeff.addr, metadata !5933, metadata !DIExpression()), !dbg !5934
  store double* %inverse, double** %inverse.addr, align 8
  call void @llvm.dbg.declare(metadata double** %inverse.addr, metadata !5935, metadata !DIExpression()), !dbg !5936
  call void @llvm.dbg.declare(metadata double* %determinant, metadata !5937, metadata !DIExpression()), !dbg !5938
  %0 = load double*, double** %coeff.addr, align 8, !dbg !5939
  %arrayidx = getelementptr inbounds double, double* %0, i64 0, !dbg !5939
  %1 = load double, double* %arrayidx, align 8, !dbg !5939
  %2 = load double*, double** %coeff.addr, align 8, !dbg !5940
  %arrayidx1 = getelementptr inbounds double, double* %2, i64 4, !dbg !5940
  %3 = load double, double* %arrayidx1, align 8, !dbg !5940
  %mul = fmul double %1, %3, !dbg !5941
  %4 = load double*, double** %coeff.addr, align 8, !dbg !5942
  %arrayidx2 = getelementptr inbounds double, double* %4, i64 1, !dbg !5942
  %5 = load double, double* %arrayidx2, align 8, !dbg !5942
  %6 = load double*, double** %coeff.addr, align 8, !dbg !5943
  %arrayidx3 = getelementptr inbounds double, double* %6, i64 3, !dbg !5943
  %7 = load double, double* %arrayidx3, align 8, !dbg !5943
  %mul4 = fmul double %5, %7, !dbg !5944
  %sub = fsub double %mul, %mul4, !dbg !5945
  %call = call double @PerceptibleReciprocal(double %sub), !dbg !5946
  store double %call, double* %determinant, align 8, !dbg !5947
  %8 = load double, double* %determinant, align 8, !dbg !5948
  %9 = load double*, double** %coeff.addr, align 8, !dbg !5949
  %arrayidx5 = getelementptr inbounds double, double* %9, i64 4, !dbg !5949
  %10 = load double, double* %arrayidx5, align 8, !dbg !5949
  %mul6 = fmul double %8, %10, !dbg !5950
  %11 = load double*, double** %inverse.addr, align 8, !dbg !5951
  %arrayidx7 = getelementptr inbounds double, double* %11, i64 0, !dbg !5951
  store double %mul6, double* %arrayidx7, align 8, !dbg !5952
  %12 = load double, double* %determinant, align 8, !dbg !5953
  %13 = load double*, double** %coeff.addr, align 8, !dbg !5954
  %arrayidx8 = getelementptr inbounds double, double* %13, i64 1, !dbg !5954
  %14 = load double, double* %arrayidx8, align 8, !dbg !5954
  %fneg = fneg double %14, !dbg !5955
  %mul9 = fmul double %12, %fneg, !dbg !5956
  %15 = load double*, double** %inverse.addr, align 8, !dbg !5957
  %arrayidx10 = getelementptr inbounds double, double* %15, i64 1, !dbg !5957
  store double %mul9, double* %arrayidx10, align 8, !dbg !5958
  %16 = load double, double* %determinant, align 8, !dbg !5959
  %17 = load double*, double** %coeff.addr, align 8, !dbg !5960
  %arrayidx11 = getelementptr inbounds double, double* %17, i64 1, !dbg !5960
  %18 = load double, double* %arrayidx11, align 8, !dbg !5960
  %19 = load double*, double** %coeff.addr, align 8, !dbg !5961
  %arrayidx12 = getelementptr inbounds double, double* %19, i64 5, !dbg !5961
  %20 = load double, double* %arrayidx12, align 8, !dbg !5961
  %mul13 = fmul double %18, %20, !dbg !5962
  %21 = load double*, double** %coeff.addr, align 8, !dbg !5963
  %arrayidx14 = getelementptr inbounds double, double* %21, i64 2, !dbg !5963
  %22 = load double, double* %arrayidx14, align 8, !dbg !5963
  %23 = load double*, double** %coeff.addr, align 8, !dbg !5964
  %arrayidx15 = getelementptr inbounds double, double* %23, i64 4, !dbg !5964
  %24 = load double, double* %arrayidx15, align 8, !dbg !5964
  %mul16 = fmul double %22, %24, !dbg !5965
  %sub17 = fsub double %mul13, %mul16, !dbg !5966
  %mul18 = fmul double %16, %sub17, !dbg !5967
  %25 = load double*, double** %inverse.addr, align 8, !dbg !5968
  %arrayidx19 = getelementptr inbounds double, double* %25, i64 2, !dbg !5968
  store double %mul18, double* %arrayidx19, align 8, !dbg !5969
  %26 = load double, double* %determinant, align 8, !dbg !5970
  %27 = load double*, double** %coeff.addr, align 8, !dbg !5971
  %arrayidx20 = getelementptr inbounds double, double* %27, i64 3, !dbg !5971
  %28 = load double, double* %arrayidx20, align 8, !dbg !5971
  %fneg21 = fneg double %28, !dbg !5972
  %mul22 = fmul double %26, %fneg21, !dbg !5973
  %29 = load double*, double** %inverse.addr, align 8, !dbg !5974
  %arrayidx23 = getelementptr inbounds double, double* %29, i64 3, !dbg !5974
  store double %mul22, double* %arrayidx23, align 8, !dbg !5975
  %30 = load double, double* %determinant, align 8, !dbg !5976
  %31 = load double*, double** %coeff.addr, align 8, !dbg !5977
  %arrayidx24 = getelementptr inbounds double, double* %31, i64 0, !dbg !5977
  %32 = load double, double* %arrayidx24, align 8, !dbg !5977
  %mul25 = fmul double %30, %32, !dbg !5978
  %33 = load double*, double** %inverse.addr, align 8, !dbg !5979
  %arrayidx26 = getelementptr inbounds double, double* %33, i64 4, !dbg !5979
  store double %mul25, double* %arrayidx26, align 8, !dbg !5980
  %34 = load double, double* %determinant, align 8, !dbg !5981
  %35 = load double*, double** %coeff.addr, align 8, !dbg !5982
  %arrayidx27 = getelementptr inbounds double, double* %35, i64 2, !dbg !5982
  %36 = load double, double* %arrayidx27, align 8, !dbg !5982
  %37 = load double*, double** %coeff.addr, align 8, !dbg !5983
  %arrayidx28 = getelementptr inbounds double, double* %37, i64 3, !dbg !5983
  %38 = load double, double* %arrayidx28, align 8, !dbg !5983
  %mul29 = fmul double %36, %38, !dbg !5984
  %39 = load double*, double** %coeff.addr, align 8, !dbg !5985
  %arrayidx30 = getelementptr inbounds double, double* %39, i64 0, !dbg !5985
  %40 = load double, double* %arrayidx30, align 8, !dbg !5985
  %41 = load double*, double** %coeff.addr, align 8, !dbg !5986
  %arrayidx31 = getelementptr inbounds double, double* %41, i64 5, !dbg !5986
  %42 = load double, double* %arrayidx31, align 8, !dbg !5986
  %mul32 = fmul double %40, %42, !dbg !5987
  %sub33 = fsub double %mul29, %mul32, !dbg !5988
  %mul34 = fmul double %34, %sub33, !dbg !5989
  %43 = load double*, double** %inverse.addr, align 8, !dbg !5990
  %arrayidx35 = getelementptr inbounds double, double* %43, i64 5, !dbg !5990
  store double %mul34, double* %arrayidx35, align 8, !dbg !5991
  ret void, !dbg !5992
}

; Function Attrs: noinline nounwind uwtable
define internal double @MagickMin(double %x, double %y) #0 !dbg !5993 {
entry:
  %x.addr = alloca double, align 8
  %y.addr = alloca double, align 8
  store double %x, double* %x.addr, align 8
  call void @llvm.dbg.declare(metadata double* %x.addr, metadata !5996, metadata !DIExpression()), !dbg !5997
  store double %y, double* %y.addr, align 8
  call void @llvm.dbg.declare(metadata double* %y.addr, metadata !5998, metadata !DIExpression()), !dbg !5999
  %0 = load double, double* %x.addr, align 8, !dbg !6000
  %1 = load double, double* %y.addr, align 8, !dbg !6001
  %cmp = fcmp olt double %0, %1, !dbg !6002
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !6000

cond.true:                                        ; preds = %entry
  %2 = load double, double* %x.addr, align 8, !dbg !6003
  br label %cond.end, !dbg !6000

cond.false:                                       ; preds = %entry
  %3 = load double, double* %y.addr, align 8, !dbg !6004
  br label %cond.end, !dbg !6000

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi double [ %2, %cond.true ], [ %3, %cond.false ], !dbg !6000
  ret double %cond, !dbg !6005
}

; Function Attrs: noinline nounwind uwtable
define internal double @MagickMax(double %x, double %y) #0 !dbg !6006 {
entry:
  %x.addr = alloca double, align 8
  %y.addr = alloca double, align 8
  store double %x, double* %x.addr, align 8
  call void @llvm.dbg.declare(metadata double* %x.addr, metadata !6007, metadata !DIExpression()), !dbg !6008
  store double %y, double* %y.addr, align 8
  call void @llvm.dbg.declare(metadata double* %y.addr, metadata !6009, metadata !DIExpression()), !dbg !6010
  %0 = load double, double* %x.addr, align 8, !dbg !6011
  %1 = load double, double* %y.addr, align 8, !dbg !6012
  %cmp = fcmp ogt double %0, %1, !dbg !6013
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !6011

cond.true:                                        ; preds = %entry
  %2 = load double, double* %x.addr, align 8, !dbg !6014
  br label %cond.end, !dbg !6011

cond.false:                                       ; preds = %entry
  %3 = load double, double* %y.addr, align 8, !dbg !6015
  br label %cond.end, !dbg !6011

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi double [ %2, %cond.true ], [ %3, %cond.false ], !dbg !6011
  ret double %cond, !dbg !6016
}

; Function Attrs: noinline nounwind uwtable
define internal void @InvertPerspectiveCoefficients(double* %coeff, double* %inverse) #0 !dbg !6017 {
entry:
  %coeff.addr = alloca double*, align 8
  %inverse.addr = alloca double*, align 8
  %determinant = alloca double, align 8
  store double* %coeff, double** %coeff.addr, align 8
  call void @llvm.dbg.declare(metadata double** %coeff.addr, metadata !6018, metadata !DIExpression()), !dbg !6019
  store double* %inverse, double** %inverse.addr, align 8
  call void @llvm.dbg.declare(metadata double** %inverse.addr, metadata !6020, metadata !DIExpression()), !dbg !6021
  call void @llvm.dbg.declare(metadata double* %determinant, metadata !6022, metadata !DIExpression()), !dbg !6023
  %0 = load double*, double** %coeff.addr, align 8, !dbg !6024
  %arrayidx = getelementptr inbounds double, double* %0, i64 0, !dbg !6024
  %1 = load double, double* %arrayidx, align 8, !dbg !6024
  %2 = load double*, double** %coeff.addr, align 8, !dbg !6025
  %arrayidx1 = getelementptr inbounds double, double* %2, i64 4, !dbg !6025
  %3 = load double, double* %arrayidx1, align 8, !dbg !6025
  %mul = fmul double %1, %3, !dbg !6026
  %4 = load double*, double** %coeff.addr, align 8, !dbg !6027
  %arrayidx2 = getelementptr inbounds double, double* %4, i64 3, !dbg !6027
  %5 = load double, double* %arrayidx2, align 8, !dbg !6027
  %6 = load double*, double** %coeff.addr, align 8, !dbg !6028
  %arrayidx3 = getelementptr inbounds double, double* %6, i64 1, !dbg !6028
  %7 = load double, double* %arrayidx3, align 8, !dbg !6028
  %mul4 = fmul double %5, %7, !dbg !6029
  %sub = fsub double %mul, %mul4, !dbg !6030
  %call = call double @PerceptibleReciprocal(double %sub), !dbg !6031
  store double %call, double* %determinant, align 8, !dbg !6032
  %8 = load double, double* %determinant, align 8, !dbg !6033
  %9 = load double*, double** %coeff.addr, align 8, !dbg !6034
  %arrayidx5 = getelementptr inbounds double, double* %9, i64 4, !dbg !6034
  %10 = load double, double* %arrayidx5, align 8, !dbg !6034
  %11 = load double*, double** %coeff.addr, align 8, !dbg !6035
  %arrayidx6 = getelementptr inbounds double, double* %11, i64 7, !dbg !6035
  %12 = load double, double* %arrayidx6, align 8, !dbg !6035
  %13 = load double*, double** %coeff.addr, align 8, !dbg !6036
  %arrayidx7 = getelementptr inbounds double, double* %13, i64 5, !dbg !6036
  %14 = load double, double* %arrayidx7, align 8, !dbg !6036
  %mul8 = fmul double %12, %14, !dbg !6037
  %sub9 = fsub double %10, %mul8, !dbg !6038
  %mul10 = fmul double %8, %sub9, !dbg !6039
  %15 = load double*, double** %inverse.addr, align 8, !dbg !6040
  %arrayidx11 = getelementptr inbounds double, double* %15, i64 0, !dbg !6040
  store double %mul10, double* %arrayidx11, align 8, !dbg !6041
  %16 = load double, double* %determinant, align 8, !dbg !6042
  %17 = load double*, double** %coeff.addr, align 8, !dbg !6043
  %arrayidx12 = getelementptr inbounds double, double* %17, i64 7, !dbg !6043
  %18 = load double, double* %arrayidx12, align 8, !dbg !6043
  %19 = load double*, double** %coeff.addr, align 8, !dbg !6044
  %arrayidx13 = getelementptr inbounds double, double* %19, i64 2, !dbg !6044
  %20 = load double, double* %arrayidx13, align 8, !dbg !6044
  %mul14 = fmul double %18, %20, !dbg !6045
  %21 = load double*, double** %coeff.addr, align 8, !dbg !6046
  %arrayidx15 = getelementptr inbounds double, double* %21, i64 1, !dbg !6046
  %22 = load double, double* %arrayidx15, align 8, !dbg !6046
  %sub16 = fsub double %mul14, %22, !dbg !6047
  %mul17 = fmul double %16, %sub16, !dbg !6048
  %23 = load double*, double** %inverse.addr, align 8, !dbg !6049
  %arrayidx18 = getelementptr inbounds double, double* %23, i64 1, !dbg !6049
  store double %mul17, double* %arrayidx18, align 8, !dbg !6050
  %24 = load double, double* %determinant, align 8, !dbg !6051
  %25 = load double*, double** %coeff.addr, align 8, !dbg !6052
  %arrayidx19 = getelementptr inbounds double, double* %25, i64 1, !dbg !6052
  %26 = load double, double* %arrayidx19, align 8, !dbg !6052
  %27 = load double*, double** %coeff.addr, align 8, !dbg !6053
  %arrayidx20 = getelementptr inbounds double, double* %27, i64 5, !dbg !6053
  %28 = load double, double* %arrayidx20, align 8, !dbg !6053
  %mul21 = fmul double %26, %28, !dbg !6054
  %29 = load double*, double** %coeff.addr, align 8, !dbg !6055
  %arrayidx22 = getelementptr inbounds double, double* %29, i64 4, !dbg !6055
  %30 = load double, double* %arrayidx22, align 8, !dbg !6055
  %31 = load double*, double** %coeff.addr, align 8, !dbg !6056
  %arrayidx23 = getelementptr inbounds double, double* %31, i64 2, !dbg !6056
  %32 = load double, double* %arrayidx23, align 8, !dbg !6056
  %mul24 = fmul double %30, %32, !dbg !6057
  %sub25 = fsub double %mul21, %mul24, !dbg !6058
  %mul26 = fmul double %24, %sub25, !dbg !6059
  %33 = load double*, double** %inverse.addr, align 8, !dbg !6060
  %arrayidx27 = getelementptr inbounds double, double* %33, i64 2, !dbg !6060
  store double %mul26, double* %arrayidx27, align 8, !dbg !6061
  %34 = load double, double* %determinant, align 8, !dbg !6062
  %35 = load double*, double** %coeff.addr, align 8, !dbg !6063
  %arrayidx28 = getelementptr inbounds double, double* %35, i64 6, !dbg !6063
  %36 = load double, double* %arrayidx28, align 8, !dbg !6063
  %37 = load double*, double** %coeff.addr, align 8, !dbg !6064
  %arrayidx29 = getelementptr inbounds double, double* %37, i64 5, !dbg !6064
  %38 = load double, double* %arrayidx29, align 8, !dbg !6064
  %mul30 = fmul double %36, %38, !dbg !6065
  %39 = load double*, double** %coeff.addr, align 8, !dbg !6066
  %arrayidx31 = getelementptr inbounds double, double* %39, i64 3, !dbg !6066
  %40 = load double, double* %arrayidx31, align 8, !dbg !6066
  %sub32 = fsub double %mul30, %40, !dbg !6067
  %mul33 = fmul double %34, %sub32, !dbg !6068
  %41 = load double*, double** %inverse.addr, align 8, !dbg !6069
  %arrayidx34 = getelementptr inbounds double, double* %41, i64 3, !dbg !6069
  store double %mul33, double* %arrayidx34, align 8, !dbg !6070
  %42 = load double, double* %determinant, align 8, !dbg !6071
  %43 = load double*, double** %coeff.addr, align 8, !dbg !6072
  %arrayidx35 = getelementptr inbounds double, double* %43, i64 0, !dbg !6072
  %44 = load double, double* %arrayidx35, align 8, !dbg !6072
  %45 = load double*, double** %coeff.addr, align 8, !dbg !6073
  %arrayidx36 = getelementptr inbounds double, double* %45, i64 6, !dbg !6073
  %46 = load double, double* %arrayidx36, align 8, !dbg !6073
  %47 = load double*, double** %coeff.addr, align 8, !dbg !6074
  %arrayidx37 = getelementptr inbounds double, double* %47, i64 2, !dbg !6074
  %48 = load double, double* %arrayidx37, align 8, !dbg !6074
  %mul38 = fmul double %46, %48, !dbg !6075
  %sub39 = fsub double %44, %mul38, !dbg !6076
  %mul40 = fmul double %42, %sub39, !dbg !6077
  %49 = load double*, double** %inverse.addr, align 8, !dbg !6078
  %arrayidx41 = getelementptr inbounds double, double* %49, i64 4, !dbg !6078
  store double %mul40, double* %arrayidx41, align 8, !dbg !6079
  %50 = load double, double* %determinant, align 8, !dbg !6080
  %51 = load double*, double** %coeff.addr, align 8, !dbg !6081
  %arrayidx42 = getelementptr inbounds double, double* %51, i64 3, !dbg !6081
  %52 = load double, double* %arrayidx42, align 8, !dbg !6081
  %53 = load double*, double** %coeff.addr, align 8, !dbg !6082
  %arrayidx43 = getelementptr inbounds double, double* %53, i64 2, !dbg !6082
  %54 = load double, double* %arrayidx43, align 8, !dbg !6082
  %mul44 = fmul double %52, %54, !dbg !6083
  %55 = load double*, double** %coeff.addr, align 8, !dbg !6084
  %arrayidx45 = getelementptr inbounds double, double* %55, i64 0, !dbg !6084
  %56 = load double, double* %arrayidx45, align 8, !dbg !6084
  %57 = load double*, double** %coeff.addr, align 8, !dbg !6085
  %arrayidx46 = getelementptr inbounds double, double* %57, i64 5, !dbg !6085
  %58 = load double, double* %arrayidx46, align 8, !dbg !6085
  %mul47 = fmul double %56, %58, !dbg !6086
  %sub48 = fsub double %mul44, %mul47, !dbg !6087
  %mul49 = fmul double %50, %sub48, !dbg !6088
  %59 = load double*, double** %inverse.addr, align 8, !dbg !6089
  %arrayidx50 = getelementptr inbounds double, double* %59, i64 5, !dbg !6089
  store double %mul49, double* %arrayidx50, align 8, !dbg !6090
  %60 = load double, double* %determinant, align 8, !dbg !6091
  %61 = load double*, double** %coeff.addr, align 8, !dbg !6092
  %arrayidx51 = getelementptr inbounds double, double* %61, i64 3, !dbg !6092
  %62 = load double, double* %arrayidx51, align 8, !dbg !6092
  %63 = load double*, double** %coeff.addr, align 8, !dbg !6093
  %arrayidx52 = getelementptr inbounds double, double* %63, i64 7, !dbg !6093
  %64 = load double, double* %arrayidx52, align 8, !dbg !6093
  %mul53 = fmul double %62, %64, !dbg !6094
  %65 = load double*, double** %coeff.addr, align 8, !dbg !6095
  %arrayidx54 = getelementptr inbounds double, double* %65, i64 6, !dbg !6095
  %66 = load double, double* %arrayidx54, align 8, !dbg !6095
  %67 = load double*, double** %coeff.addr, align 8, !dbg !6096
  %arrayidx55 = getelementptr inbounds double, double* %67, i64 4, !dbg !6096
  %68 = load double, double* %arrayidx55, align 8, !dbg !6096
  %mul56 = fmul double %66, %68, !dbg !6097
  %sub57 = fsub double %mul53, %mul56, !dbg !6098
  %mul58 = fmul double %60, %sub57, !dbg !6099
  %69 = load double*, double** %inverse.addr, align 8, !dbg !6100
  %arrayidx59 = getelementptr inbounds double, double* %69, i64 6, !dbg !6100
  store double %mul58, double* %arrayidx59, align 8, !dbg !6101
  %70 = load double, double* %determinant, align 8, !dbg !6102
  %71 = load double*, double** %coeff.addr, align 8, !dbg !6103
  %arrayidx60 = getelementptr inbounds double, double* %71, i64 6, !dbg !6103
  %72 = load double, double* %arrayidx60, align 8, !dbg !6103
  %73 = load double*, double** %coeff.addr, align 8, !dbg !6104
  %arrayidx61 = getelementptr inbounds double, double* %73, i64 1, !dbg !6104
  %74 = load double, double* %arrayidx61, align 8, !dbg !6104
  %mul62 = fmul double %72, %74, !dbg !6105
  %75 = load double*, double** %coeff.addr, align 8, !dbg !6106
  %arrayidx63 = getelementptr inbounds double, double* %75, i64 0, !dbg !6106
  %76 = load double, double* %arrayidx63, align 8, !dbg !6106
  %77 = load double*, double** %coeff.addr, align 8, !dbg !6107
  %arrayidx64 = getelementptr inbounds double, double* %77, i64 7, !dbg !6107
  %78 = load double, double* %arrayidx64, align 8, !dbg !6107
  %mul65 = fmul double %76, %78, !dbg !6108
  %sub66 = fsub double %mul62, %mul65, !dbg !6109
  %mul67 = fmul double %70, %sub66, !dbg !6110
  %79 = load double*, double** %inverse.addr, align 8, !dbg !6111
  %arrayidx68 = getelementptr inbounds double, double* %79, i64 7, !dbg !6111
  store double %mul67, double* %arrayidx68, align 8, !dbg !6112
  ret void, !dbg !6113
}

; Function Attrs: noinline nounwind uwtable
define internal double @PerceptibleReciprocal(double %x) #0 !dbg !6114 {
entry:
  %retval = alloca double, align 8
  %x.addr = alloca double, align 8
  %sign = alloca double, align 8
  store double %x, double* %x.addr, align 8
  call void @llvm.dbg.declare(metadata double* %x.addr, metadata !6118, metadata !DIExpression()), !dbg !6119
  call void @llvm.dbg.declare(metadata double* %sign, metadata !6120, metadata !DIExpression()), !dbg !6121
  %0 = load double, double* %x.addr, align 8, !dbg !6122
  %cmp = fcmp olt double %0, 0.000000e+00, !dbg !6123
  %1 = zext i1 %cmp to i64, !dbg !6122
  %cond = select i1 %cmp, double -1.000000e+00, double 1.000000e+00, !dbg !6122
  store double %cond, double* %sign, align 8, !dbg !6124
  %2 = load double, double* %sign, align 8, !dbg !6125
  %3 = load double, double* %x.addr, align 8, !dbg !6127
  %mul = fmul double %2, %3, !dbg !6128
  %cmp1 = fcmp oge double %mul, 1.000000e-15, !dbg !6129
  br i1 %cmp1, label %if.then, label %if.end, !dbg !6130

if.then:                                          ; preds = %entry
  %4 = load double, double* %x.addr, align 8, !dbg !6131
  %div = fdiv double 1.000000e+00, %4, !dbg !6132
  store double %div, double* %retval, align 8, !dbg !6133
  br label %return, !dbg !6133

if.end:                                           ; preds = %entry
  %5 = load double, double* %sign, align 8, !dbg !6134
  %div2 = fdiv double %5, 1.000000e-15, !dbg !6135
  store double %div2, double* %retval, align 8, !dbg !6136
  br label %return, !dbg !6136

return:                                           ; preds = %if.end, %if.then
  %6 = load double, double* %retval, align 8, !dbg !6137
  ret double %6, !dbg !6137
}

; Function Attrs: nounwind
declare dso_local double @cos(double) #3

; Function Attrs: nounwind
declare dso_local double @sin(double) #3

; Function Attrs: nounwind readnone speculatable willreturn
declare double @llvm.ceil.f64(double) #1

; Function Attrs: nounwind
declare dso_local double @tan(double) #3

; Function Attrs: nounwind readnone speculatable willreturn
declare double @llvm.floor.f64(double) #1

declare dso_local i8* @GetImageArtifact(%struct._Image*, i8*) #2

declare dso_local i32 @ParseAbsoluteGeometry(i8*, %struct._RectangleInfo*) #2

declare dso_local i64 @FormatLocaleString(i8*, i64, i8*, ...) #2

; Function Attrs: allocsize(0,1)
declare dso_local i8* @AcquireQuantumMemory(i64, i64) #4

declare dso_local i8* @RelinquishMagickMemory(i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @CoefficientsToAffineArgs(double* %coeff) #0 !dbg !6138 {
entry:
  %coeff.addr = alloca double*, align 8
  %tmp = alloca [4 x double], align 16
  store double* %coeff, double** %coeff.addr, align 8
  call void @llvm.dbg.declare(metadata double** %coeff.addr, metadata !6141, metadata !DIExpression()), !dbg !6142
  call void @llvm.dbg.declare(metadata [4 x double]* %tmp, metadata !6143, metadata !DIExpression()), !dbg !6144
  %0 = load double*, double** %coeff.addr, align 8, !dbg !6145
  %arrayidx = getelementptr inbounds double, double* %0, i64 3, !dbg !6145
  %1 = load double, double* %arrayidx, align 8, !dbg !6145
  %arrayidx1 = getelementptr inbounds [4 x double], [4 x double]* %tmp, i64 0, i64 0, !dbg !6146
  store double %1, double* %arrayidx1, align 16, !dbg !6147
  %2 = load double*, double** %coeff.addr, align 8, !dbg !6148
  %arrayidx2 = getelementptr inbounds double, double* %2, i64 1, !dbg !6148
  %3 = load double, double* %arrayidx2, align 8, !dbg !6148
  %arrayidx3 = getelementptr inbounds [4 x double], [4 x double]* %tmp, i64 0, i64 1, !dbg !6149
  store double %3, double* %arrayidx3, align 8, !dbg !6150
  %4 = load double*, double** %coeff.addr, align 8, !dbg !6151
  %arrayidx4 = getelementptr inbounds double, double* %4, i64 4, !dbg !6151
  %5 = load double, double* %arrayidx4, align 8, !dbg !6151
  %arrayidx5 = getelementptr inbounds [4 x double], [4 x double]* %tmp, i64 0, i64 2, !dbg !6152
  store double %5, double* %arrayidx5, align 16, !dbg !6153
  %6 = load double*, double** %coeff.addr, align 8, !dbg !6154
  %arrayidx6 = getelementptr inbounds double, double* %6, i64 2, !dbg !6154
  %7 = load double, double* %arrayidx6, align 8, !dbg !6154
  %arrayidx7 = getelementptr inbounds [4 x double], [4 x double]* %tmp, i64 0, i64 3, !dbg !6155
  store double %7, double* %arrayidx7, align 8, !dbg !6156
  %arrayidx8 = getelementptr inbounds [4 x double], [4 x double]* %tmp, i64 0, i64 0, !dbg !6157
  %8 = load double, double* %arrayidx8, align 16, !dbg !6157
  %9 = load double*, double** %coeff.addr, align 8, !dbg !6158
  %arrayidx9 = getelementptr inbounds double, double* %9, i64 1, !dbg !6158
  store double %8, double* %arrayidx9, align 8, !dbg !6159
  %arrayidx10 = getelementptr inbounds [4 x double], [4 x double]* %tmp, i64 0, i64 1, !dbg !6160
  %10 = load double, double* %arrayidx10, align 8, !dbg !6160
  %11 = load double*, double** %coeff.addr, align 8, !dbg !6161
  %arrayidx11 = getelementptr inbounds double, double* %11, i64 2, !dbg !6161
  store double %10, double* %arrayidx11, align 8, !dbg !6162
  %arrayidx12 = getelementptr inbounds [4 x double], [4 x double]* %tmp, i64 0, i64 2, !dbg !6163
  %12 = load double, double* %arrayidx12, align 16, !dbg !6163
  %13 = load double*, double** %coeff.addr, align 8, !dbg !6164
  %arrayidx13 = getelementptr inbounds double, double* %13, i64 3, !dbg !6164
  store double %12, double* %arrayidx13, align 8, !dbg !6165
  %arrayidx14 = getelementptr inbounds [4 x double], [4 x double]* %tmp, i64 0, i64 3, !dbg !6166
  %14 = load double, double* %arrayidx14, align 8, !dbg !6166
  %15 = load double*, double** %coeff.addr, align 8, !dbg !6167
  %arrayidx15 = getelementptr inbounds double, double* %15, i64 4, !dbg !6167
  store double %14, double* %arrayidx15, align 8, !dbg !6168
  ret void, !dbg !6169
}

declare dso_local i64 @FormatLocaleFile(%struct._IO_FILE*, i8*, ...) #2

; Function Attrs: noinline nounwind uwtable
define internal i8* @poly_basis_str(i64 %n) #0 !dbg !6170 {
entry:
  %retval = alloca i8*, align 8
  %n.addr = alloca i64, align 8
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !6173, metadata !DIExpression()), !dbg !6174
  %0 = load i64, i64* %n.addr, align 8, !dbg !6175
  switch i64 %0, label %sw.epilog [
    i64 0, label %sw.bb
    i64 1, label %sw.bb1
    i64 2, label %sw.bb2
    i64 3, label %sw.bb3
    i64 4, label %sw.bb4
    i64 5, label %sw.bb5
    i64 6, label %sw.bb6
    i64 7, label %sw.bb7
    i64 8, label %sw.bb8
    i64 9, label %sw.bb9
    i64 10, label %sw.bb10
    i64 11, label %sw.bb11
    i64 12, label %sw.bb12
    i64 13, label %sw.bb13
    i64 14, label %sw.bb14
    i64 15, label %sw.bb15
    i64 16, label %sw.bb16
    i64 17, label %sw.bb17
    i64 18, label %sw.bb18
    i64 19, label %sw.bb19
    i64 20, label %sw.bb20
  ], !dbg !6176

sw.bb:                                            ; preds = %entry
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i8** %retval, align 8, !dbg !6177
  br label %return, !dbg !6177

sw.bb1:                                           ; preds = %entry
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.140, i64 0, i64 0), i8** %retval, align 8, !dbg !6179
  br label %return, !dbg !6179

sw.bb2:                                           ; preds = %entry
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.141, i64 0, i64 0), i8** %retval, align 8, !dbg !6180
  br label %return, !dbg !6180

sw.bb3:                                           ; preds = %entry
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.142, i64 0, i64 0), i8** %retval, align 8, !dbg !6181
  br label %return, !dbg !6181

sw.bb4:                                           ; preds = %entry
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.143, i64 0, i64 0), i8** %retval, align 8, !dbg !6182
  br label %return, !dbg !6182

sw.bb5:                                           ; preds = %entry
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.144, i64 0, i64 0), i8** %retval, align 8, !dbg !6183
  br label %return, !dbg !6183

sw.bb6:                                           ; preds = %entry
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.145, i64 0, i64 0), i8** %retval, align 8, !dbg !6184
  br label %return, !dbg !6184

sw.bb7:                                           ; preds = %entry
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.146, i64 0, i64 0), i8** %retval, align 8, !dbg !6185
  br label %return, !dbg !6185

sw.bb8:                                           ; preds = %entry
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.147, i64 0, i64 0), i8** %retval, align 8, !dbg !6186
  br label %return, !dbg !6186

sw.bb9:                                           ; preds = %entry
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.148, i64 0, i64 0), i8** %retval, align 8, !dbg !6187
  br label %return, !dbg !6187

sw.bb10:                                          ; preds = %entry
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.149, i64 0, i64 0), i8** %retval, align 8, !dbg !6188
  br label %return, !dbg !6188

sw.bb11:                                          ; preds = %entry
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.150, i64 0, i64 0), i8** %retval, align 8, !dbg !6189
  br label %return, !dbg !6189

sw.bb12:                                          ; preds = %entry
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.151, i64 0, i64 0), i8** %retval, align 8, !dbg !6190
  br label %return, !dbg !6190

sw.bb13:                                          ; preds = %entry
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.152, i64 0, i64 0), i8** %retval, align 8, !dbg !6191
  br label %return, !dbg !6191

sw.bb14:                                          ; preds = %entry
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.153, i64 0, i64 0), i8** %retval, align 8, !dbg !6192
  br label %return, !dbg !6192

sw.bb15:                                          ; preds = %entry
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.154, i64 0, i64 0), i8** %retval, align 8, !dbg !6193
  br label %return, !dbg !6193

sw.bb16:                                          ; preds = %entry
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.155, i64 0, i64 0), i8** %retval, align 8, !dbg !6194
  br label %return, !dbg !6194

sw.bb17:                                          ; preds = %entry
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.156, i64 0, i64 0), i8** %retval, align 8, !dbg !6195
  br label %return, !dbg !6195

sw.bb18:                                          ; preds = %entry
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.157, i64 0, i64 0), i8** %retval, align 8, !dbg !6196
  br label %return, !dbg !6196

sw.bb19:                                          ; preds = %entry
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.158, i64 0, i64 0), i8** %retval, align 8, !dbg !6197
  br label %return, !dbg !6197

sw.bb20:                                          ; preds = %entry
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.159, i64 0, i64 0), i8** %retval, align 8, !dbg !6198
  br label %return, !dbg !6198

sw.epilog:                                        ; preds = %entry
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.160, i64 0, i64 0), i8** %retval, align 8, !dbg !6199
  br label %return, !dbg !6199

return:                                           ; preds = %sw.epilog, %sw.bb20, %sw.bb19, %sw.bb18, %sw.bb17, %sw.bb16, %sw.bb15, %sw.bb14, %sw.bb13, %sw.bb12, %sw.bb11, %sw.bb10, %sw.bb9, %sw.bb8, %sw.bb7, %sw.bb6, %sw.bb5, %sw.bb4, %sw.bb3, %sw.bb2, %sw.bb1, %sw.bb
  %1 = load i8*, i8** %retval, align 8, !dbg !6200
  ret i8* %1, !dbg !6200
}

; Function Attrs: nounwind readnone speculatable willreturn
declare double @llvm.fabs.f64(double) #1

; Function Attrs: noinline nounwind uwtable
define internal double @StringToDouble(i8* noalias %string, i8** noalias %sentinal) #0 !dbg !6201 {
entry:
  %string.addr = alloca i8*, align 8
  %sentinal.addr = alloca i8**, align 8
  store i8* %string, i8** %string.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %string.addr, metadata !6207, metadata !DIExpression()), !dbg !6208
  store i8** %sentinal, i8*** %sentinal.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %sentinal.addr, metadata !6209, metadata !DIExpression()), !dbg !6210
  %0 = load i8*, i8** %string.addr, align 8, !dbg !6211
  %1 = load i8**, i8*** %sentinal.addr, align 8, !dbg !6212
  %call = call double @InterpretLocaleValue(i8* %0, i8** %1), !dbg !6213
  ret double %call, !dbg !6214
}

declare dso_local i32 @SetImageStorageClass(%struct._Image*, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @IsPixelGray(%struct._PixelPacket* %pixel) #0 !dbg !6215 {
entry:
  %retval = alloca i32, align 4
  %pixel.addr = alloca %struct._PixelPacket*, align 8
  %blue = alloca float, align 4
  %green = alloca float, align 4
  %red = alloca float, align 4
  store %struct._PixelPacket* %pixel, %struct._PixelPacket** %pixel.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %pixel.addr, metadata !6221, metadata !DIExpression()), !dbg !6222
  call void @llvm.dbg.declare(metadata float* %blue, metadata !6223, metadata !DIExpression()), !dbg !6224
  call void @llvm.dbg.declare(metadata float* %green, metadata !6225, metadata !DIExpression()), !dbg !6226
  call void @llvm.dbg.declare(metadata float* %red, metadata !6227, metadata !DIExpression()), !dbg !6228
  %0 = load %struct._PixelPacket*, %struct._PixelPacket** %pixel.addr, align 8, !dbg !6229
  %red1 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %0, i32 0, i32 2, !dbg !6230
  %1 = load i16, i16* %red1, align 2, !dbg !6230
  %conv = uitofp i16 %1 to float, !dbg !6231
  store float %conv, float* %red, align 4, !dbg !6232
  %2 = load %struct._PixelPacket*, %struct._PixelPacket** %pixel.addr, align 8, !dbg !6233
  %green2 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %2, i32 0, i32 1, !dbg !6234
  %3 = load i16, i16* %green2, align 2, !dbg !6234
  %conv3 = uitofp i16 %3 to float, !dbg !6235
  store float %conv3, float* %green, align 4, !dbg !6236
  %4 = load %struct._PixelPacket*, %struct._PixelPacket** %pixel.addr, align 8, !dbg !6237
  %blue4 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %4, i32 0, i32 0, !dbg !6238
  %5 = load i16, i16* %blue4, align 2, !dbg !6238
  %conv5 = uitofp i16 %5 to float, !dbg !6239
  store float %conv5, float* %blue, align 4, !dbg !6240
  %6 = load float, float* %red, align 4, !dbg !6241
  %7 = load float, float* %green, align 4, !dbg !6243
  %sub = fsub float %6, %7, !dbg !6244
  %call = call float @AbsolutePixelValue(float %sub), !dbg !6245
  %conv6 = fpext float %call to double, !dbg !6245
  %cmp = fcmp olt double %conv6, 1.000000e-15, !dbg !6246
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !6247

land.lhs.true:                                    ; preds = %entry
  %8 = load float, float* %green, align 4, !dbg !6248
  %9 = load float, float* %blue, align 4, !dbg !6249
  %sub8 = fsub float %8, %9, !dbg !6250
  %call9 = call float @AbsolutePixelValue(float %sub8), !dbg !6251
  %conv10 = fpext float %call9 to double, !dbg !6251
  %cmp11 = fcmp olt double %conv10, 1.000000e-15, !dbg !6252
  br i1 %cmp11, label %if.then, label %if.end, !dbg !6253

if.then:                                          ; preds = %land.lhs.true
  store i32 1, i32* %retval, align 4, !dbg !6254
  br label %return, !dbg !6254

if.end:                                           ; preds = %land.lhs.true, %entry
  store i32 0, i32* %retval, align 4, !dbg !6255
  br label %return, !dbg !6255

return:                                           ; preds = %if.end, %if.then
  %10 = load i32, i32* %retval, align 4, !dbg !6256
  ret i32 %10, !dbg !6256
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @IsGrayColorspace(i32 %colorspace) #0 !dbg !6257 {
entry:
  %retval = alloca i32, align 4
  %colorspace.addr = alloca i32, align 4
  store i32 %colorspace, i32* %colorspace.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %colorspace.addr, metadata !6262, metadata !DIExpression()), !dbg !6263
  %0 = load i32, i32* %colorspace.addr, align 4, !dbg !6264
  %cmp = icmp eq i32 %0, 2, !dbg !6266
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !6267

lor.lhs.false:                                    ; preds = %entry
  %1 = load i32, i32* %colorspace.addr, align 4, !dbg !6268
  %cmp1 = icmp eq i32 %1, 17, !dbg !6269
  br i1 %cmp1, label %if.then, label %lor.lhs.false2, !dbg !6270

lor.lhs.false2:                                   ; preds = %lor.lhs.false
  %2 = load i32, i32* %colorspace.addr, align 4, !dbg !6271
  %cmp3 = icmp eq i32 %2, 19, !dbg !6272
  br i1 %cmp3, label %if.then, label %if.end, !dbg !6273

if.then:                                          ; preds = %lor.lhs.false2, %lor.lhs.false, %entry
  store i32 1, i32* %retval, align 4, !dbg !6274
  br label %return, !dbg !6274

if.end:                                           ; preds = %lor.lhs.false2
  store i32 0, i32* %retval, align 4, !dbg !6275
  br label %return, !dbg !6275

return:                                           ; preds = %if.end, %if.then
  %3 = load i32, i32* %retval, align 4, !dbg !6276
  ret i32 %3, !dbg !6276
}

declare dso_local i32 @SetImageColorspace(%struct._Image*, i32) #2

declare dso_local void @GetMagickPixelPacket(%struct._Image*, %struct._MagickPixelPacket*) #2

; Function Attrs: noinline nounwind uwtable
define internal %struct._ResampleFilter** @AcquireResampleFilterThreadSet(%struct._Image* %image, i32 %method, i32 %interpolate, %struct._ExceptionInfo* %exception) #0 !dbg !6277 {
entry:
  %retval = alloca %struct._ResampleFilter**, align 8
  %image.addr = alloca %struct._Image*, align 8
  %method.addr = alloca i32, align 4
  %interpolate.addr = alloca i32, align 4
  %exception.addr = alloca %struct._ExceptionInfo*, align 8
  %i = alloca i64, align 8
  %filter = alloca %struct._ResampleFilter**, align 8
  %number_threads = alloca i64, align 8
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !6283, metadata !DIExpression()), !dbg !6284
  store i32 %method, i32* %method.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %method.addr, metadata !6285, metadata !DIExpression()), !dbg !6286
  store i32 %interpolate, i32* %interpolate.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %interpolate.addr, metadata !6287, metadata !DIExpression()), !dbg !6288
  store %struct._ExceptionInfo* %exception, %struct._ExceptionInfo** %exception.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo** %exception.addr, metadata !6289, metadata !DIExpression()), !dbg !6290
  call void @llvm.dbg.declare(metadata i64* %i, metadata !6291, metadata !DIExpression()), !dbg !6292
  call void @llvm.dbg.declare(metadata %struct._ResampleFilter*** %filter, metadata !6293, metadata !DIExpression()), !dbg !6294
  call void @llvm.dbg.declare(metadata i64* %number_threads, metadata !6295, metadata !DIExpression()), !dbg !6296
  %call = call i64 @GetMagickResourceLimit(i32 6), !dbg !6297
  store i64 %call, i64* %number_threads, align 8, !dbg !6298
  %0 = load i64, i64* %number_threads, align 8, !dbg !6299
  %call1 = call i8* @AcquireAlignedMemory(i64 %0, i64 8) #7, !dbg !6300
  %1 = bitcast i8* %call1 to %struct._ResampleFilter**, !dbg !6301
  store %struct._ResampleFilter** %1, %struct._ResampleFilter*** %filter, align 8, !dbg !6302
  %2 = load %struct._ResampleFilter**, %struct._ResampleFilter*** %filter, align 8, !dbg !6303
  %cmp = icmp eq %struct._ResampleFilter** %2, null, !dbg !6305
  br i1 %cmp, label %if.then, label %if.end, !dbg !6306

if.then:                                          ; preds = %entry
  store %struct._ResampleFilter** null, %struct._ResampleFilter*** %retval, align 8, !dbg !6307
  br label %return, !dbg !6307

if.end:                                           ; preds = %entry
  %3 = load %struct._ResampleFilter**, %struct._ResampleFilter*** %filter, align 8, !dbg !6308
  %4 = bitcast %struct._ResampleFilter** %3 to i8*, !dbg !6308
  %5 = load i64, i64* %number_threads, align 8, !dbg !6309
  %mul = mul i64 %5, 8, !dbg !6310
  %call2 = call i8* @ResetMagickMemory(i8* %4, i32 0, i64 %mul), !dbg !6311
  store i64 0, i64* %i, align 8, !dbg !6312
  br label %for.cond, !dbg !6314

for.cond:                                         ; preds = %for.inc, %if.end
  %6 = load i64, i64* %i, align 8, !dbg !6315
  %7 = load i64, i64* %number_threads, align 8, !dbg !6317
  %cmp3 = icmp slt i64 %6, %7, !dbg !6318
  br i1 %cmp3, label %for.body, label %for.end, !dbg !6319

for.body:                                         ; preds = %for.cond
  %8 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6320
  %9 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !6322
  %call4 = call %struct._ResampleFilter* @AcquireResampleFilter(%struct._Image* %8, %struct._ExceptionInfo* %9), !dbg !6323
  %10 = load %struct._ResampleFilter**, %struct._ResampleFilter*** %filter, align 8, !dbg !6324
  %11 = load i64, i64* %i, align 8, !dbg !6325
  %arrayidx = getelementptr inbounds %struct._ResampleFilter*, %struct._ResampleFilter** %10, i64 %11, !dbg !6324
  store %struct._ResampleFilter* %call4, %struct._ResampleFilter** %arrayidx, align 8, !dbg !6326
  %12 = load %struct._ResampleFilter**, %struct._ResampleFilter*** %filter, align 8, !dbg !6327
  %13 = load i64, i64* %i, align 8, !dbg !6329
  %arrayidx5 = getelementptr inbounds %struct._ResampleFilter*, %struct._ResampleFilter** %12, i64 %13, !dbg !6327
  %14 = load %struct._ResampleFilter*, %struct._ResampleFilter** %arrayidx5, align 8, !dbg !6327
  %cmp6 = icmp eq %struct._ResampleFilter* %14, null, !dbg !6330
  br i1 %cmp6, label %if.then7, label %if.end9, !dbg !6331

if.then7:                                         ; preds = %for.body
  %15 = load %struct._ResampleFilter**, %struct._ResampleFilter*** %filter, align 8, !dbg !6332
  %call8 = call %struct._ResampleFilter** @DestroyResampleFilterThreadSet(%struct._ResampleFilter** %15), !dbg !6333
  store %struct._ResampleFilter** %call8, %struct._ResampleFilter*** %retval, align 8, !dbg !6334
  br label %return, !dbg !6334

if.end9:                                          ; preds = %for.body
  %16 = load i32, i32* %method.addr, align 4, !dbg !6335
  %cmp10 = icmp ne i32 %16, 0, !dbg !6337
  br i1 %cmp10, label %if.then11, label %if.end14, !dbg !6338

if.then11:                                        ; preds = %if.end9
  %17 = load %struct._ResampleFilter**, %struct._ResampleFilter*** %filter, align 8, !dbg !6339
  %18 = load i64, i64* %i, align 8, !dbg !6340
  %arrayidx12 = getelementptr inbounds %struct._ResampleFilter*, %struct._ResampleFilter** %17, i64 %18, !dbg !6339
  %19 = load %struct._ResampleFilter*, %struct._ResampleFilter** %arrayidx12, align 8, !dbg !6339
  %20 = load i32, i32* %method.addr, align 4, !dbg !6341
  %call13 = call i32 @SetResampleFilterVirtualPixelMethod(%struct._ResampleFilter* %19, i32 %20), !dbg !6342
  br label %if.end14, !dbg !6343

if.end14:                                         ; preds = %if.then11, %if.end9
  %21 = load i32, i32* %interpolate.addr, align 4, !dbg !6344
  %cmp15 = icmp ne i32 %21, 0, !dbg !6346
  br i1 %cmp15, label %if.then16, label %if.end18, !dbg !6347

if.then16:                                        ; preds = %if.end14
  %22 = load %struct._ResampleFilter**, %struct._ResampleFilter*** %filter, align 8, !dbg !6348
  %23 = load i64, i64* %i, align 8, !dbg !6349
  %arrayidx17 = getelementptr inbounds %struct._ResampleFilter*, %struct._ResampleFilter** %22, i64 %23, !dbg !6348
  %24 = load %struct._ResampleFilter*, %struct._ResampleFilter** %arrayidx17, align 8, !dbg !6348
  call void @SetResampleFilter(%struct._ResampleFilter* %24, i32 1, double 1.000000e+00), !dbg !6350
  br label %if.end18, !dbg !6350

if.end18:                                         ; preds = %if.then16, %if.end14
  br label %for.inc, !dbg !6351

for.inc:                                          ; preds = %if.end18
  %25 = load i64, i64* %i, align 8, !dbg !6352
  %inc = add nsw i64 %25, 1, !dbg !6352
  store i64 %inc, i64* %i, align 8, !dbg !6352
  br label %for.cond, !dbg !6353, !llvm.loop !6354

for.end:                                          ; preds = %for.cond
  %26 = load %struct._ResampleFilter**, %struct._ResampleFilter*** %filter, align 8, !dbg !6356
  store %struct._ResampleFilter** %26, %struct._ResampleFilter*** %retval, align 8, !dbg !6357
  br label %return, !dbg !6357

return:                                           ; preds = %for.end, %if.then7, %if.then
  %27 = load %struct._ResampleFilter**, %struct._ResampleFilter*** %retval, align 8, !dbg !6358
  ret %struct._ResampleFilter** %27, !dbg !6358
}

declare dso_local %struct._CacheView* @AcquireAuthenticCacheView(%struct._Image*, %struct._ExceptionInfo*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @GetOpenMPThreadId() #0 !dbg !6359 {
entry:
  ret i32 0, !dbg !6363
}

declare dso_local %struct._PixelPacket* @QueueCacheViewAuthenticPixels(%struct._CacheView*, i64, i64, i64, i64, %struct._ExceptionInfo*) #2

declare dso_local i16* @GetCacheViewAuthenticIndexQueue(%struct._CacheView*) #2

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #5

declare dso_local void @ScaleResampleFilter(%struct._ResampleFilter*, double, double, double, double) #2

; Function Attrs: noinline nounwind uwtable
define internal void @SetMagickPixelPacket(%struct._Image* %image, %struct._PixelPacket* %color, i16* %index, %struct._MagickPixelPacket* %pixel) #0 !dbg !6364 {
entry:
  %image.addr = alloca %struct._Image*, align 8
  %color.addr = alloca %struct._PixelPacket*, align 8
  %index.addr = alloca i16*, align 8
  %pixel.addr = alloca %struct._MagickPixelPacket*, align 8
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !6368, metadata !DIExpression()), !dbg !6369
  store %struct._PixelPacket* %color, %struct._PixelPacket** %color.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %color.addr, metadata !6370, metadata !DIExpression()), !dbg !6371
  store i16* %index, i16** %index.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %index.addr, metadata !6372, metadata !DIExpression()), !dbg !6373
  store %struct._MagickPixelPacket* %pixel, %struct._MagickPixelPacket** %pixel.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %pixel.addr, metadata !6374, metadata !DIExpression()), !dbg !6375
  %0 = load %struct._PixelPacket*, %struct._PixelPacket** %color.addr, align 8, !dbg !6376
  %red = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %0, i32 0, i32 2, !dbg !6376
  %1 = load i16, i16* %red, align 2, !dbg !6376
  %conv = uitofp i16 %1 to float, !dbg !6377
  %2 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !6378
  %red1 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %2, i32 0, i32 5, !dbg !6379
  store float %conv, float* %red1, align 8, !dbg !6380
  %3 = load %struct._PixelPacket*, %struct._PixelPacket** %color.addr, align 8, !dbg !6381
  %green = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %3, i32 0, i32 1, !dbg !6381
  %4 = load i16, i16* %green, align 2, !dbg !6381
  %conv2 = uitofp i16 %4 to float, !dbg !6382
  %5 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !6383
  %green3 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %5, i32 0, i32 6, !dbg !6384
  store float %conv2, float* %green3, align 4, !dbg !6385
  %6 = load %struct._PixelPacket*, %struct._PixelPacket** %color.addr, align 8, !dbg !6386
  %blue = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %6, i32 0, i32 0, !dbg !6386
  %7 = load i16, i16* %blue, align 2, !dbg !6386
  %conv4 = uitofp i16 %7 to float, !dbg !6387
  %8 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !6388
  %blue5 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %8, i32 0, i32 7, !dbg !6389
  store float %conv4, float* %blue5, align 8, !dbg !6390
  %9 = load %struct._PixelPacket*, %struct._PixelPacket** %color.addr, align 8, !dbg !6391
  %opacity = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %9, i32 0, i32 3, !dbg !6391
  %10 = load i16, i16* %opacity, align 2, !dbg !6391
  %conv6 = uitofp i16 %10 to float, !dbg !6392
  %11 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !6393
  %opacity7 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %11, i32 0, i32 8, !dbg !6394
  store float %conv6, float* %opacity7, align 4, !dbg !6395
  %12 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6396
  %colorspace = getelementptr inbounds %struct._Image, %struct._Image* %12, i32 0, i32 1, !dbg !6398
  %13 = load i32, i32* %colorspace, align 4, !dbg !6398
  %cmp = icmp eq i32 %13, 12, !dbg !6399
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !6400

land.lhs.true:                                    ; preds = %entry
  %14 = load i16*, i16** %index.addr, align 8, !dbg !6401
  %cmp9 = icmp ne i16* %14, null, !dbg !6402
  br i1 %cmp9, label %if.then, label %if.end, !dbg !6403

if.then:                                          ; preds = %land.lhs.true
  %15 = load i16*, i16** %index.addr, align 8, !dbg !6404
  %cmp11 = icmp eq i16* %15, null, !dbg !6404
  br i1 %cmp11, label %cond.true, label %cond.false, !dbg !6404

cond.true:                                        ; preds = %if.then
  br label %cond.end, !dbg !6404

cond.false:                                       ; preds = %if.then
  %16 = load i16*, i16** %index.addr, align 8, !dbg !6404
  %17 = load i16, i16* %16, align 2, !dbg !6404
  %conv13 = zext i16 %17 to i32, !dbg !6404
  br label %cond.end, !dbg !6404

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %conv13, %cond.false ], !dbg !6404
  %conv14 = sitofp i32 %cond to float, !dbg !6405
  %18 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !6406
  %index15 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %18, i32 0, i32 9, !dbg !6407
  store float %conv14, float* %index15, align 8, !dbg !6408
  br label %if.end, !dbg !6406

if.end:                                           ; preds = %cond.end, %land.lhs.true, %entry
  ret void, !dbg !6409
}

; Function Attrs: noinline nounwind uwtable
define internal void @ConvertRGBToCMYK(%struct._MagickPixelPacket* %pixel) #0 !dbg !6410 {
entry:
  %pixel.addr = alloca %struct._MagickPixelPacket*, align 8
  %black = alloca float, align 4
  %blue = alloca float, align 4
  %cyan = alloca float, align 4
  %green = alloca float, align 4
  %magenta = alloca float, align 4
  %red = alloca float, align 4
  %yellow = alloca float, align 4
  store %struct._MagickPixelPacket* %pixel, %struct._MagickPixelPacket** %pixel.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %pixel.addr, metadata !6413, metadata !DIExpression()), !dbg !6414
  call void @llvm.dbg.declare(metadata float* %black, metadata !6415, metadata !DIExpression()), !dbg !6416
  call void @llvm.dbg.declare(metadata float* %blue, metadata !6417, metadata !DIExpression()), !dbg !6418
  call void @llvm.dbg.declare(metadata float* %cyan, metadata !6419, metadata !DIExpression()), !dbg !6420
  call void @llvm.dbg.declare(metadata float* %green, metadata !6421, metadata !DIExpression()), !dbg !6422
  call void @llvm.dbg.declare(metadata float* %magenta, metadata !6423, metadata !DIExpression()), !dbg !6424
  call void @llvm.dbg.declare(metadata float* %red, metadata !6425, metadata !DIExpression()), !dbg !6426
  call void @llvm.dbg.declare(metadata float* %yellow, metadata !6427, metadata !DIExpression()), !dbg !6428
  %0 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !6429
  %colorspace = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %0, i32 0, i32 1, !dbg !6431
  %1 = load i32, i32* %colorspace, align 4, !dbg !6431
  %cmp = icmp ne i32 %1, 13, !dbg !6432
  br i1 %cmp, label %if.then, label %if.else, !dbg !6433

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !6434
  %red1 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %2, i32 0, i32 5, !dbg !6436
  %3 = load float, float* %red1, align 8, !dbg !6436
  %conv = fpext float %3 to double, !dbg !6434
  %mul = fmul double 0x3EF0001000100010, %conv, !dbg !6437
  %conv2 = fptrunc double %mul to float, !dbg !6438
  store float %conv2, float* %red, align 4, !dbg !6439
  %4 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !6440
  %green3 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %4, i32 0, i32 6, !dbg !6441
  %5 = load float, float* %green3, align 4, !dbg !6441
  %conv4 = fpext float %5 to double, !dbg !6440
  %mul5 = fmul double 0x3EF0001000100010, %conv4, !dbg !6442
  %conv6 = fptrunc double %mul5 to float, !dbg !6443
  store float %conv6, float* %green, align 4, !dbg !6444
  %6 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !6445
  %blue7 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %6, i32 0, i32 7, !dbg !6446
  %7 = load float, float* %blue7, align 8, !dbg !6446
  %conv8 = fpext float %7 to double, !dbg !6445
  %mul9 = fmul double 0x3EF0001000100010, %conv8, !dbg !6447
  %conv10 = fptrunc double %mul9 to float, !dbg !6448
  store float %conv10, float* %blue, align 4, !dbg !6449
  br label %if.end, !dbg !6450

if.else:                                          ; preds = %entry
  %8 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !6451
  %red11 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %8, i32 0, i32 5, !dbg !6453
  %9 = load float, float* %red11, align 8, !dbg !6453
  %call = call float @DecodePixelGamma(float %9), !dbg !6454
  store float %call, float* %red, align 4, !dbg !6455
  %10 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !6456
  %green12 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %10, i32 0, i32 6, !dbg !6457
  %11 = load float, float* %green12, align 4, !dbg !6457
  %call13 = call float @DecodePixelGamma(float %11), !dbg !6458
  store float %call13, float* %green, align 4, !dbg !6459
  %12 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !6460
  %blue14 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %12, i32 0, i32 7, !dbg !6461
  %13 = load float, float* %blue14, align 8, !dbg !6461
  %call15 = call float @DecodePixelGamma(float %13), !dbg !6462
  store float %call15, float* %blue, align 4, !dbg !6463
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %14 = load float, float* %red, align 4, !dbg !6464
  %conv16 = fpext float %14 to double, !dbg !6464
  %15 = call double @llvm.fabs.f64(double %conv16), !dbg !6466
  %cmp17 = fcmp olt double %15, 1.000000e-15, !dbg !6467
  br i1 %cmp17, label %land.lhs.true, label %if.end27, !dbg !6468

land.lhs.true:                                    ; preds = %if.end
  %16 = load float, float* %green, align 4, !dbg !6469
  %conv19 = fpext float %16 to double, !dbg !6469
  %17 = call double @llvm.fabs.f64(double %conv19), !dbg !6470
  %cmp20 = fcmp olt double %17, 1.000000e-15, !dbg !6471
  br i1 %cmp20, label %land.lhs.true22, label %if.end27, !dbg !6472

land.lhs.true22:                                  ; preds = %land.lhs.true
  %18 = load float, float* %blue, align 4, !dbg !6473
  %conv23 = fpext float %18 to double, !dbg !6473
  %19 = call double @llvm.fabs.f64(double %conv23), !dbg !6474
  %cmp24 = fcmp olt double %19, 1.000000e-15, !dbg !6475
  br i1 %cmp24, label %if.then26, label %if.end27, !dbg !6476

if.then26:                                        ; preds = %land.lhs.true22
  %20 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !6477
  %index = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %20, i32 0, i32 9, !dbg !6479
  store float 6.553500e+04, float* %index, align 8, !dbg !6480
  br label %return, !dbg !6481

if.end27:                                         ; preds = %land.lhs.true22, %land.lhs.true, %if.end
  %21 = load float, float* %red, align 4, !dbg !6482
  %conv28 = fpext float %21 to double, !dbg !6482
  %sub = fsub double 1.000000e+00, %conv28, !dbg !6483
  %conv29 = fptrunc double %sub to float, !dbg !6484
  store float %conv29, float* %cyan, align 4, !dbg !6485
  %22 = load float, float* %green, align 4, !dbg !6486
  %conv30 = fpext float %22 to double, !dbg !6486
  %sub31 = fsub double 1.000000e+00, %conv30, !dbg !6487
  %conv32 = fptrunc double %sub31 to float, !dbg !6488
  store float %conv32, float* %magenta, align 4, !dbg !6489
  %23 = load float, float* %blue, align 4, !dbg !6490
  %conv33 = fpext float %23 to double, !dbg !6490
  %sub34 = fsub double 1.000000e+00, %conv33, !dbg !6491
  %conv35 = fptrunc double %sub34 to float, !dbg !6492
  store float %conv35, float* %yellow, align 4, !dbg !6493
  %24 = load float, float* %cyan, align 4, !dbg !6494
  store float %24, float* %black, align 4, !dbg !6495
  %25 = load float, float* %magenta, align 4, !dbg !6496
  %26 = load float, float* %black, align 4, !dbg !6498
  %cmp36 = fcmp olt float %25, %26, !dbg !6499
  br i1 %cmp36, label %if.then38, label %if.end39, !dbg !6500

if.then38:                                        ; preds = %if.end27
  %27 = load float, float* %magenta, align 4, !dbg !6501
  store float %27, float* %black, align 4, !dbg !6502
  br label %if.end39, !dbg !6503

if.end39:                                         ; preds = %if.then38, %if.end27
  %28 = load float, float* %yellow, align 4, !dbg !6504
  %29 = load float, float* %black, align 4, !dbg !6506
  %cmp40 = fcmp olt float %28, %29, !dbg !6507
  br i1 %cmp40, label %if.then42, label %if.end43, !dbg !6508

if.then42:                                        ; preds = %if.end39
  %30 = load float, float* %yellow, align 4, !dbg !6509
  store float %30, float* %black, align 4, !dbg !6510
  br label %if.end43, !dbg !6511

if.end43:                                         ; preds = %if.then42, %if.end39
  %31 = load float, float* %cyan, align 4, !dbg !6512
  %32 = load float, float* %black, align 4, !dbg !6513
  %sub44 = fsub float %31, %32, !dbg !6514
  %conv45 = fpext float %sub44 to double, !dbg !6515
  %33 = load float, float* %black, align 4, !dbg !6516
  %conv46 = fpext float %33 to double, !dbg !6516
  %sub47 = fsub double 1.000000e+00, %conv46, !dbg !6517
  %div = fdiv double %conv45, %sub47, !dbg !6518
  %conv48 = fptrunc double %div to float, !dbg !6519
  store float %conv48, float* %cyan, align 4, !dbg !6520
  %34 = load float, float* %magenta, align 4, !dbg !6521
  %35 = load float, float* %black, align 4, !dbg !6522
  %sub49 = fsub float %34, %35, !dbg !6523
  %conv50 = fpext float %sub49 to double, !dbg !6524
  %36 = load float, float* %black, align 4, !dbg !6525
  %conv51 = fpext float %36 to double, !dbg !6525
  %sub52 = fsub double 1.000000e+00, %conv51, !dbg !6526
  %div53 = fdiv double %conv50, %sub52, !dbg !6527
  %conv54 = fptrunc double %div53 to float, !dbg !6528
  store float %conv54, float* %magenta, align 4, !dbg !6529
  %37 = load float, float* %yellow, align 4, !dbg !6530
  %38 = load float, float* %black, align 4, !dbg !6531
  %sub55 = fsub float %37, %38, !dbg !6532
  %conv56 = fpext float %sub55 to double, !dbg !6533
  %39 = load float, float* %black, align 4, !dbg !6534
  %conv57 = fpext float %39 to double, !dbg !6534
  %sub58 = fsub double 1.000000e+00, %conv57, !dbg !6535
  %div59 = fdiv double %conv56, %sub58, !dbg !6536
  %conv60 = fptrunc double %div59 to float, !dbg !6537
  store float %conv60, float* %yellow, align 4, !dbg !6538
  %40 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !6539
  %colorspace61 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %40, i32 0, i32 1, !dbg !6540
  store i32 12, i32* %colorspace61, align 4, !dbg !6541
  %41 = load float, float* %cyan, align 4, !dbg !6542
  %mul62 = fmul float 6.553500e+04, %41, !dbg !6543
  %42 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !6544
  %red63 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %42, i32 0, i32 5, !dbg !6545
  store float %mul62, float* %red63, align 8, !dbg !6546
  %43 = load float, float* %magenta, align 4, !dbg !6547
  %mul64 = fmul float 6.553500e+04, %43, !dbg !6548
  %44 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !6549
  %green65 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %44, i32 0, i32 6, !dbg !6550
  store float %mul64, float* %green65, align 4, !dbg !6551
  %45 = load float, float* %yellow, align 4, !dbg !6552
  %mul66 = fmul float 6.553500e+04, %45, !dbg !6553
  %46 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !6554
  %blue67 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %46, i32 0, i32 7, !dbg !6555
  store float %mul66, float* %blue67, align 8, !dbg !6556
  %47 = load float, float* %black, align 4, !dbg !6557
  %mul68 = fmul float 6.553500e+04, %47, !dbg !6558
  %48 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !6559
  %index69 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %48, i32 0, i32 9, !dbg !6560
  store float %mul68, float* %index69, align 8, !dbg !6561
  br label %return, !dbg !6562

return:                                           ; preds = %if.end43, %if.then26
  ret void, !dbg !6562
}

; Function Attrs: nounwind
declare dso_local double @sqrt(double) #3

; Function Attrs: noinline nounwind uwtable
define internal double @poly_basis_fn(i64 %n, double %x, double %y) #0 !dbg !6563 {
entry:
  %retval = alloca double, align 8
  %n.addr = alloca i64, align 8
  %x.addr = alloca double, align 8
  %y.addr = alloca double, align 8
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !6566, metadata !DIExpression()), !dbg !6567
  store double %x, double* %x.addr, align 8
  call void @llvm.dbg.declare(metadata double* %x.addr, metadata !6568, metadata !DIExpression()), !dbg !6569
  store double %y, double* %y.addr, align 8
  call void @llvm.dbg.declare(metadata double* %y.addr, metadata !6570, metadata !DIExpression()), !dbg !6571
  %0 = load i64, i64* %n.addr, align 8, !dbg !6572
  switch i64 %0, label %sw.epilog [
    i64 0, label %sw.bb
    i64 1, label %sw.bb1
    i64 2, label %sw.bb2
    i64 3, label %sw.bb3
    i64 4, label %sw.bb4
    i64 5, label %sw.bb6
    i64 6, label %sw.bb8
    i64 7, label %sw.bb11
    i64 8, label %sw.bb14
    i64 9, label %sw.bb17
    i64 10, label %sw.bb20
    i64 11, label %sw.bb24
    i64 12, label %sw.bb28
    i64 13, label %sw.bb32
    i64 14, label %sw.bb36
    i64 15, label %sw.bb40
    i64 16, label %sw.bb45
    i64 17, label %sw.bb50
    i64 18, label %sw.bb55
    i64 19, label %sw.bb60
    i64 20, label %sw.bb65
  ], !dbg !6573

sw.bb:                                            ; preds = %entry
  store double 1.000000e+00, double* %retval, align 8, !dbg !6574
  br label %return, !dbg !6574

sw.bb1:                                           ; preds = %entry
  %1 = load double, double* %x.addr, align 8, !dbg !6576
  store double %1, double* %retval, align 8, !dbg !6577
  br label %return, !dbg !6577

sw.bb2:                                           ; preds = %entry
  %2 = load double, double* %y.addr, align 8, !dbg !6578
  store double %2, double* %retval, align 8, !dbg !6579
  br label %return, !dbg !6579

sw.bb3:                                           ; preds = %entry
  %3 = load double, double* %x.addr, align 8, !dbg !6580
  %4 = load double, double* %y.addr, align 8, !dbg !6581
  %mul = fmul double %3, %4, !dbg !6582
  store double %mul, double* %retval, align 8, !dbg !6583
  br label %return, !dbg !6583

sw.bb4:                                           ; preds = %entry
  %5 = load double, double* %x.addr, align 8, !dbg !6584
  %6 = load double, double* %x.addr, align 8, !dbg !6585
  %mul5 = fmul double %5, %6, !dbg !6586
  store double %mul5, double* %retval, align 8, !dbg !6587
  br label %return, !dbg !6587

sw.bb6:                                           ; preds = %entry
  %7 = load double, double* %y.addr, align 8, !dbg !6588
  %8 = load double, double* %y.addr, align 8, !dbg !6589
  %mul7 = fmul double %7, %8, !dbg !6590
  store double %mul7, double* %retval, align 8, !dbg !6591
  br label %return, !dbg !6591

sw.bb8:                                           ; preds = %entry
  %9 = load double, double* %x.addr, align 8, !dbg !6592
  %10 = load double, double* %x.addr, align 8, !dbg !6593
  %mul9 = fmul double %9, %10, !dbg !6594
  %11 = load double, double* %x.addr, align 8, !dbg !6595
  %mul10 = fmul double %mul9, %11, !dbg !6596
  store double %mul10, double* %retval, align 8, !dbg !6597
  br label %return, !dbg !6597

sw.bb11:                                          ; preds = %entry
  %12 = load double, double* %x.addr, align 8, !dbg !6598
  %13 = load double, double* %x.addr, align 8, !dbg !6599
  %mul12 = fmul double %12, %13, !dbg !6600
  %14 = load double, double* %y.addr, align 8, !dbg !6601
  %mul13 = fmul double %mul12, %14, !dbg !6602
  store double %mul13, double* %retval, align 8, !dbg !6603
  br label %return, !dbg !6603

sw.bb14:                                          ; preds = %entry
  %15 = load double, double* %x.addr, align 8, !dbg !6604
  %16 = load double, double* %y.addr, align 8, !dbg !6605
  %mul15 = fmul double %15, %16, !dbg !6606
  %17 = load double, double* %y.addr, align 8, !dbg !6607
  %mul16 = fmul double %mul15, %17, !dbg !6608
  store double %mul16, double* %retval, align 8, !dbg !6609
  br label %return, !dbg !6609

sw.bb17:                                          ; preds = %entry
  %18 = load double, double* %y.addr, align 8, !dbg !6610
  %19 = load double, double* %y.addr, align 8, !dbg !6611
  %mul18 = fmul double %18, %19, !dbg !6612
  %20 = load double, double* %y.addr, align 8, !dbg !6613
  %mul19 = fmul double %mul18, %20, !dbg !6614
  store double %mul19, double* %retval, align 8, !dbg !6615
  br label %return, !dbg !6615

sw.bb20:                                          ; preds = %entry
  %21 = load double, double* %x.addr, align 8, !dbg !6616
  %22 = load double, double* %x.addr, align 8, !dbg !6617
  %mul21 = fmul double %21, %22, !dbg !6618
  %23 = load double, double* %x.addr, align 8, !dbg !6619
  %mul22 = fmul double %mul21, %23, !dbg !6620
  %24 = load double, double* %x.addr, align 8, !dbg !6621
  %mul23 = fmul double %mul22, %24, !dbg !6622
  store double %mul23, double* %retval, align 8, !dbg !6623
  br label %return, !dbg !6623

sw.bb24:                                          ; preds = %entry
  %25 = load double, double* %x.addr, align 8, !dbg !6624
  %26 = load double, double* %x.addr, align 8, !dbg !6625
  %mul25 = fmul double %25, %26, !dbg !6626
  %27 = load double, double* %x.addr, align 8, !dbg !6627
  %mul26 = fmul double %mul25, %27, !dbg !6628
  %28 = load double, double* %y.addr, align 8, !dbg !6629
  %mul27 = fmul double %mul26, %28, !dbg !6630
  store double %mul27, double* %retval, align 8, !dbg !6631
  br label %return, !dbg !6631

sw.bb28:                                          ; preds = %entry
  %29 = load double, double* %x.addr, align 8, !dbg !6632
  %30 = load double, double* %x.addr, align 8, !dbg !6633
  %mul29 = fmul double %29, %30, !dbg !6634
  %31 = load double, double* %y.addr, align 8, !dbg !6635
  %mul30 = fmul double %mul29, %31, !dbg !6636
  %32 = load double, double* %y.addr, align 8, !dbg !6637
  %mul31 = fmul double %mul30, %32, !dbg !6638
  store double %mul31, double* %retval, align 8, !dbg !6639
  br label %return, !dbg !6639

sw.bb32:                                          ; preds = %entry
  %33 = load double, double* %x.addr, align 8, !dbg !6640
  %34 = load double, double* %y.addr, align 8, !dbg !6641
  %mul33 = fmul double %33, %34, !dbg !6642
  %35 = load double, double* %y.addr, align 8, !dbg !6643
  %mul34 = fmul double %mul33, %35, !dbg !6644
  %36 = load double, double* %y.addr, align 8, !dbg !6645
  %mul35 = fmul double %mul34, %36, !dbg !6646
  store double %mul35, double* %retval, align 8, !dbg !6647
  br label %return, !dbg !6647

sw.bb36:                                          ; preds = %entry
  %37 = load double, double* %y.addr, align 8, !dbg !6648
  %38 = load double, double* %y.addr, align 8, !dbg !6649
  %mul37 = fmul double %37, %38, !dbg !6650
  %39 = load double, double* %y.addr, align 8, !dbg !6651
  %mul38 = fmul double %mul37, %39, !dbg !6652
  %40 = load double, double* %y.addr, align 8, !dbg !6653
  %mul39 = fmul double %mul38, %40, !dbg !6654
  store double %mul39, double* %retval, align 8, !dbg !6655
  br label %return, !dbg !6655

sw.bb40:                                          ; preds = %entry
  %41 = load double, double* %x.addr, align 8, !dbg !6656
  %42 = load double, double* %x.addr, align 8, !dbg !6657
  %mul41 = fmul double %41, %42, !dbg !6658
  %43 = load double, double* %x.addr, align 8, !dbg !6659
  %mul42 = fmul double %mul41, %43, !dbg !6660
  %44 = load double, double* %x.addr, align 8, !dbg !6661
  %mul43 = fmul double %mul42, %44, !dbg !6662
  %45 = load double, double* %x.addr, align 8, !dbg !6663
  %mul44 = fmul double %mul43, %45, !dbg !6664
  store double %mul44, double* %retval, align 8, !dbg !6665
  br label %return, !dbg !6665

sw.bb45:                                          ; preds = %entry
  %46 = load double, double* %x.addr, align 8, !dbg !6666
  %47 = load double, double* %x.addr, align 8, !dbg !6667
  %mul46 = fmul double %46, %47, !dbg !6668
  %48 = load double, double* %x.addr, align 8, !dbg !6669
  %mul47 = fmul double %mul46, %48, !dbg !6670
  %49 = load double, double* %x.addr, align 8, !dbg !6671
  %mul48 = fmul double %mul47, %49, !dbg !6672
  %50 = load double, double* %y.addr, align 8, !dbg !6673
  %mul49 = fmul double %mul48, %50, !dbg !6674
  store double %mul49, double* %retval, align 8, !dbg !6675
  br label %return, !dbg !6675

sw.bb50:                                          ; preds = %entry
  %51 = load double, double* %x.addr, align 8, !dbg !6676
  %52 = load double, double* %x.addr, align 8, !dbg !6677
  %mul51 = fmul double %51, %52, !dbg !6678
  %53 = load double, double* %x.addr, align 8, !dbg !6679
  %mul52 = fmul double %mul51, %53, !dbg !6680
  %54 = load double, double* %y.addr, align 8, !dbg !6681
  %mul53 = fmul double %mul52, %54, !dbg !6682
  %55 = load double, double* %y.addr, align 8, !dbg !6683
  %mul54 = fmul double %mul53, %55, !dbg !6684
  store double %mul54, double* %retval, align 8, !dbg !6685
  br label %return, !dbg !6685

sw.bb55:                                          ; preds = %entry
  %56 = load double, double* %x.addr, align 8, !dbg !6686
  %57 = load double, double* %x.addr, align 8, !dbg !6687
  %mul56 = fmul double %56, %57, !dbg !6688
  %58 = load double, double* %y.addr, align 8, !dbg !6689
  %mul57 = fmul double %mul56, %58, !dbg !6690
  %59 = load double, double* %y.addr, align 8, !dbg !6691
  %mul58 = fmul double %mul57, %59, !dbg !6692
  %60 = load double, double* %y.addr, align 8, !dbg !6693
  %mul59 = fmul double %mul58, %60, !dbg !6694
  store double %mul59, double* %retval, align 8, !dbg !6695
  br label %return, !dbg !6695

sw.bb60:                                          ; preds = %entry
  %61 = load double, double* %x.addr, align 8, !dbg !6696
  %62 = load double, double* %y.addr, align 8, !dbg !6697
  %mul61 = fmul double %61, %62, !dbg !6698
  %63 = load double, double* %y.addr, align 8, !dbg !6699
  %mul62 = fmul double %mul61, %63, !dbg !6700
  %64 = load double, double* %y.addr, align 8, !dbg !6701
  %mul63 = fmul double %mul62, %64, !dbg !6702
  %65 = load double, double* %y.addr, align 8, !dbg !6703
  %mul64 = fmul double %mul63, %65, !dbg !6704
  store double %mul64, double* %retval, align 8, !dbg !6705
  br label %return, !dbg !6705

sw.bb65:                                          ; preds = %entry
  %66 = load double, double* %y.addr, align 8, !dbg !6706
  %67 = load double, double* %y.addr, align 8, !dbg !6707
  %mul66 = fmul double %66, %67, !dbg !6708
  %68 = load double, double* %y.addr, align 8, !dbg !6709
  %mul67 = fmul double %mul66, %68, !dbg !6710
  %69 = load double, double* %y.addr, align 8, !dbg !6711
  %mul68 = fmul double %mul67, %69, !dbg !6712
  %70 = load double, double* %y.addr, align 8, !dbg !6713
  %mul69 = fmul double %mul68, %70, !dbg !6714
  store double %mul69, double* %retval, align 8, !dbg !6715
  br label %return, !dbg !6715

sw.epilog:                                        ; preds = %entry
  store double 0.000000e+00, double* %retval, align 8, !dbg !6716
  br label %return, !dbg !6716

return:                                           ; preds = %sw.epilog, %sw.bb65, %sw.bb60, %sw.bb55, %sw.bb50, %sw.bb45, %sw.bb40, %sw.bb36, %sw.bb32, %sw.bb28, %sw.bb24, %sw.bb20, %sw.bb17, %sw.bb14, %sw.bb11, %sw.bb8, %sw.bb6, %sw.bb4, %sw.bb3, %sw.bb2, %sw.bb1, %sw.bb
  %71 = load double, double* %retval, align 8, !dbg !6717
  ret double %71, !dbg !6717
}

; Function Attrs: noinline nounwind uwtable
define internal double @poly_basis_dx(i64 %n, double %x, double %y) #0 !dbg !6718 {
entry:
  %retval = alloca double, align 8
  %n.addr = alloca i64, align 8
  %x.addr = alloca double, align 8
  %y.addr = alloca double, align 8
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !6719, metadata !DIExpression()), !dbg !6720
  store double %x, double* %x.addr, align 8
  call void @llvm.dbg.declare(metadata double* %x.addr, metadata !6721, metadata !DIExpression()), !dbg !6722
  store double %y, double* %y.addr, align 8
  call void @llvm.dbg.declare(metadata double* %y.addr, metadata !6723, metadata !DIExpression()), !dbg !6724
  %0 = load i64, i64* %n.addr, align 8, !dbg !6725
  switch i64 %0, label %sw.epilog [
    i64 0, label %sw.bb
    i64 1, label %sw.bb1
    i64 2, label %sw.bb2
    i64 3, label %sw.bb3
    i64 4, label %sw.bb4
    i64 5, label %sw.bb5
    i64 6, label %sw.bb6
    i64 7, label %sw.bb7
    i64 8, label %sw.bb9
    i64 9, label %sw.bb11
    i64 10, label %sw.bb12
    i64 11, label %sw.bb15
    i64 12, label %sw.bb18
    i64 13, label %sw.bb21
    i64 14, label %sw.bb24
    i64 15, label %sw.bb25
    i64 16, label %sw.bb29
    i64 17, label %sw.bb33
    i64 18, label %sw.bb37
    i64 19, label %sw.bb41
    i64 20, label %sw.bb45
  ], !dbg !6726

sw.bb:                                            ; preds = %entry
  store double 0.000000e+00, double* %retval, align 8, !dbg !6727
  br label %return, !dbg !6727

sw.bb1:                                           ; preds = %entry
  store double 1.000000e+00, double* %retval, align 8, !dbg !6729
  br label %return, !dbg !6729

sw.bb2:                                           ; preds = %entry
  store double 0.000000e+00, double* %retval, align 8, !dbg !6730
  br label %return, !dbg !6730

sw.bb3:                                           ; preds = %entry
  %1 = load double, double* %y.addr, align 8, !dbg !6731
  store double %1, double* %retval, align 8, !dbg !6732
  br label %return, !dbg !6732

sw.bb4:                                           ; preds = %entry
  %2 = load double, double* %x.addr, align 8, !dbg !6733
  store double %2, double* %retval, align 8, !dbg !6734
  br label %return, !dbg !6734

sw.bb5:                                           ; preds = %entry
  store double 0.000000e+00, double* %retval, align 8, !dbg !6735
  br label %return, !dbg !6735

sw.bb6:                                           ; preds = %entry
  %3 = load double, double* %x.addr, align 8, !dbg !6736
  %4 = load double, double* %x.addr, align 8, !dbg !6737
  %mul = fmul double %3, %4, !dbg !6738
  store double %mul, double* %retval, align 8, !dbg !6739
  br label %return, !dbg !6739

sw.bb7:                                           ; preds = %entry
  %5 = load double, double* %x.addr, align 8, !dbg !6740
  %6 = load double, double* %y.addr, align 8, !dbg !6741
  %mul8 = fmul double %5, %6, !dbg !6742
  store double %mul8, double* %retval, align 8, !dbg !6743
  br label %return, !dbg !6743

sw.bb9:                                           ; preds = %entry
  %7 = load double, double* %y.addr, align 8, !dbg !6744
  %8 = load double, double* %y.addr, align 8, !dbg !6745
  %mul10 = fmul double %7, %8, !dbg !6746
  store double %mul10, double* %retval, align 8, !dbg !6747
  br label %return, !dbg !6747

sw.bb11:                                          ; preds = %entry
  store double 0.000000e+00, double* %retval, align 8, !dbg !6748
  br label %return, !dbg !6748

sw.bb12:                                          ; preds = %entry
  %9 = load double, double* %x.addr, align 8, !dbg !6749
  %10 = load double, double* %x.addr, align 8, !dbg !6750
  %mul13 = fmul double %9, %10, !dbg !6751
  %11 = load double, double* %x.addr, align 8, !dbg !6752
  %mul14 = fmul double %mul13, %11, !dbg !6753
  store double %mul14, double* %retval, align 8, !dbg !6754
  br label %return, !dbg !6754

sw.bb15:                                          ; preds = %entry
  %12 = load double, double* %x.addr, align 8, !dbg !6755
  %13 = load double, double* %x.addr, align 8, !dbg !6756
  %mul16 = fmul double %12, %13, !dbg !6757
  %14 = load double, double* %y.addr, align 8, !dbg !6758
  %mul17 = fmul double %mul16, %14, !dbg !6759
  store double %mul17, double* %retval, align 8, !dbg !6760
  br label %return, !dbg !6760

sw.bb18:                                          ; preds = %entry
  %15 = load double, double* %x.addr, align 8, !dbg !6761
  %16 = load double, double* %y.addr, align 8, !dbg !6762
  %mul19 = fmul double %15, %16, !dbg !6763
  %17 = load double, double* %y.addr, align 8, !dbg !6764
  %mul20 = fmul double %mul19, %17, !dbg !6765
  store double %mul20, double* %retval, align 8, !dbg !6766
  br label %return, !dbg !6766

sw.bb21:                                          ; preds = %entry
  %18 = load double, double* %y.addr, align 8, !dbg !6767
  %19 = load double, double* %y.addr, align 8, !dbg !6768
  %mul22 = fmul double %18, %19, !dbg !6769
  %20 = load double, double* %y.addr, align 8, !dbg !6770
  %mul23 = fmul double %mul22, %20, !dbg !6771
  store double %mul23, double* %retval, align 8, !dbg !6772
  br label %return, !dbg !6772

sw.bb24:                                          ; preds = %entry
  store double 0.000000e+00, double* %retval, align 8, !dbg !6773
  br label %return, !dbg !6773

sw.bb25:                                          ; preds = %entry
  %21 = load double, double* %x.addr, align 8, !dbg !6774
  %22 = load double, double* %x.addr, align 8, !dbg !6775
  %mul26 = fmul double %21, %22, !dbg !6776
  %23 = load double, double* %x.addr, align 8, !dbg !6777
  %mul27 = fmul double %mul26, %23, !dbg !6778
  %24 = load double, double* %x.addr, align 8, !dbg !6779
  %mul28 = fmul double %mul27, %24, !dbg !6780
  store double %mul28, double* %retval, align 8, !dbg !6781
  br label %return, !dbg !6781

sw.bb29:                                          ; preds = %entry
  %25 = load double, double* %x.addr, align 8, !dbg !6782
  %26 = load double, double* %x.addr, align 8, !dbg !6783
  %mul30 = fmul double %25, %26, !dbg !6784
  %27 = load double, double* %x.addr, align 8, !dbg !6785
  %mul31 = fmul double %mul30, %27, !dbg !6786
  %28 = load double, double* %y.addr, align 8, !dbg !6787
  %mul32 = fmul double %mul31, %28, !dbg !6788
  store double %mul32, double* %retval, align 8, !dbg !6789
  br label %return, !dbg !6789

sw.bb33:                                          ; preds = %entry
  %29 = load double, double* %x.addr, align 8, !dbg !6790
  %30 = load double, double* %x.addr, align 8, !dbg !6791
  %mul34 = fmul double %29, %30, !dbg !6792
  %31 = load double, double* %y.addr, align 8, !dbg !6793
  %mul35 = fmul double %mul34, %31, !dbg !6794
  %32 = load double, double* %y.addr, align 8, !dbg !6795
  %mul36 = fmul double %mul35, %32, !dbg !6796
  store double %mul36, double* %retval, align 8, !dbg !6797
  br label %return, !dbg !6797

sw.bb37:                                          ; preds = %entry
  %33 = load double, double* %x.addr, align 8, !dbg !6798
  %34 = load double, double* %y.addr, align 8, !dbg !6799
  %mul38 = fmul double %33, %34, !dbg !6800
  %35 = load double, double* %y.addr, align 8, !dbg !6801
  %mul39 = fmul double %mul38, %35, !dbg !6802
  %36 = load double, double* %y.addr, align 8, !dbg !6803
  %mul40 = fmul double %mul39, %36, !dbg !6804
  store double %mul40, double* %retval, align 8, !dbg !6805
  br label %return, !dbg !6805

sw.bb41:                                          ; preds = %entry
  %37 = load double, double* %y.addr, align 8, !dbg !6806
  %38 = load double, double* %y.addr, align 8, !dbg !6807
  %mul42 = fmul double %37, %38, !dbg !6808
  %39 = load double, double* %y.addr, align 8, !dbg !6809
  %mul43 = fmul double %mul42, %39, !dbg !6810
  %40 = load double, double* %y.addr, align 8, !dbg !6811
  %mul44 = fmul double %mul43, %40, !dbg !6812
  store double %mul44, double* %retval, align 8, !dbg !6813
  br label %return, !dbg !6813

sw.bb45:                                          ; preds = %entry
  store double 0.000000e+00, double* %retval, align 8, !dbg !6814
  br label %return, !dbg !6814

sw.epilog:                                        ; preds = %entry
  store double 0.000000e+00, double* %retval, align 8, !dbg !6815
  br label %return, !dbg !6815

return:                                           ; preds = %sw.epilog, %sw.bb45, %sw.bb41, %sw.bb37, %sw.bb33, %sw.bb29, %sw.bb25, %sw.bb24, %sw.bb21, %sw.bb18, %sw.bb15, %sw.bb12, %sw.bb11, %sw.bb9, %sw.bb7, %sw.bb6, %sw.bb5, %sw.bb4, %sw.bb3, %sw.bb2, %sw.bb1, %sw.bb
  %41 = load double, double* %retval, align 8, !dbg !6816
  ret double %41, !dbg !6816
}

; Function Attrs: noinline nounwind uwtable
define internal double @poly_basis_dy(i64 %n, double %x, double %y) #0 !dbg !6817 {
entry:
  %retval = alloca double, align 8
  %n.addr = alloca i64, align 8
  %x.addr = alloca double, align 8
  %y.addr = alloca double, align 8
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !6818, metadata !DIExpression()), !dbg !6819
  store double %x, double* %x.addr, align 8
  call void @llvm.dbg.declare(metadata double* %x.addr, metadata !6820, metadata !DIExpression()), !dbg !6821
  store double %y, double* %y.addr, align 8
  call void @llvm.dbg.declare(metadata double* %y.addr, metadata !6822, metadata !DIExpression()), !dbg !6823
  %0 = load i64, i64* %n.addr, align 8, !dbg !6824
  switch i64 %0, label %sw.default [
    i64 0, label %sw.bb
    i64 1, label %sw.bb1
    i64 2, label %sw.bb2
    i64 3, label %sw.bb3
    i64 4, label %sw.bb4
    i64 5, label %sw.bb5
  ], !dbg !6825

sw.bb:                                            ; preds = %entry
  store double 0.000000e+00, double* %retval, align 8, !dbg !6826
  br label %return, !dbg !6826

sw.bb1:                                           ; preds = %entry
  store double 0.000000e+00, double* %retval, align 8, !dbg !6828
  br label %return, !dbg !6828

sw.bb2:                                           ; preds = %entry
  store double 1.000000e+00, double* %retval, align 8, !dbg !6829
  br label %return, !dbg !6829

sw.bb3:                                           ; preds = %entry
  %1 = load double, double* %x.addr, align 8, !dbg !6830
  store double %1, double* %retval, align 8, !dbg !6831
  br label %return, !dbg !6831

sw.bb4:                                           ; preds = %entry
  store double 0.000000e+00, double* %retval, align 8, !dbg !6832
  br label %return, !dbg !6832

sw.bb5:                                           ; preds = %entry
  %2 = load double, double* %y.addr, align 8, !dbg !6833
  store double %2, double* %retval, align 8, !dbg !6834
  br label %return, !dbg !6834

sw.default:                                       ; preds = %entry
  %3 = load i64, i64* %n.addr, align 8, !dbg !6835
  %sub = sub nsw i64 %3, 1, !dbg !6836
  %4 = load double, double* %x.addr, align 8, !dbg !6837
  %5 = load double, double* %y.addr, align 8, !dbg !6838
  %call = call double @poly_basis_dx(i64 %sub, double %4, double %5), !dbg !6839
  store double %call, double* %retval, align 8, !dbg !6840
  br label %return, !dbg !6840

return:                                           ; preds = %sw.default, %sw.bb5, %sw.bb4, %sw.bb3, %sw.bb2, %sw.bb1, %sw.bb
  %6 = load double, double* %retval, align 8, !dbg !6841
  ret double %6, !dbg !6841
}

; Function Attrs: nounwind
declare dso_local double @atan2(double, double) #3

; Function Attrs: noinline nounwind uwtable
define internal double @MagickRound(double %x) #0 !dbg !6842 {
entry:
  %retval = alloca double, align 8
  %x.addr = alloca double, align 8
  store double %x, double* %x.addr, align 8
  call void @llvm.dbg.declare(metadata double* %x.addr, metadata !6845, metadata !DIExpression()), !dbg !6846
  %0 = load double, double* %x.addr, align 8, !dbg !6847
  %1 = load double, double* %x.addr, align 8, !dbg !6849
  %2 = call double @llvm.floor.f64(double %1), !dbg !6850
  %sub = fsub double %0, %2, !dbg !6851
  %3 = load double, double* %x.addr, align 8, !dbg !6852
  %4 = call double @llvm.ceil.f64(double %3), !dbg !6853
  %5 = load double, double* %x.addr, align 8, !dbg !6854
  %sub1 = fsub double %4, %5, !dbg !6855
  %cmp = fcmp olt double %sub, %sub1, !dbg !6856
  br i1 %cmp, label %if.then, label %if.end, !dbg !6857

if.then:                                          ; preds = %entry
  %6 = load double, double* %x.addr, align 8, !dbg !6858
  %7 = call double @llvm.floor.f64(double %6), !dbg !6859
  store double %7, double* %retval, align 8, !dbg !6860
  br label %return, !dbg !6860

if.end:                                           ; preds = %entry
  %8 = load double, double* %x.addr, align 8, !dbg !6861
  %9 = call double @llvm.ceil.f64(double %8), !dbg !6862
  store double %9, double* %retval, align 8, !dbg !6863
  br label %return, !dbg !6863

return:                                           ; preds = %if.end, %if.then
  %10 = load double, double* %retval, align 8, !dbg !6864
  ret double %10, !dbg !6864
}

; Function Attrs: nounwind
declare dso_local double @hypot(double, double) #3

; Function Attrs: nounwind
declare dso_local double @atan(double) #3

declare dso_local i32 @fprintf(%struct._IO_FILE*, i8*, ...) #2

declare dso_local i32 @fflush(%struct._IO_FILE*) #2

; Function Attrs: nounwind
declare dso_local double @pow(double, double) #3

; Function Attrs: noinline nounwind uwtable
define internal void @SetPixelPacket(%struct._Image* %image, %struct._MagickPixelPacket* %pixel, %struct._PixelPacket* %color, i16* %index) #0 !dbg !6865 {
entry:
  %image.addr = alloca %struct._Image*, align 8
  %pixel.addr = alloca %struct._MagickPixelPacket*, align 8
  %color.addr = alloca %struct._PixelPacket*, align 8
  %index.addr = alloca i16*, align 8
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !6870, metadata !DIExpression()), !dbg !6871
  store %struct._MagickPixelPacket* %pixel, %struct._MagickPixelPacket** %pixel.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %pixel.addr, metadata !6872, metadata !DIExpression()), !dbg !6873
  store %struct._PixelPacket* %color, %struct._PixelPacket** %color.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %color.addr, metadata !6874, metadata !DIExpression()), !dbg !6875
  store i16* %index, i16** %index.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %index.addr, metadata !6876, metadata !DIExpression()), !dbg !6877
  %0 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !6878
  %red = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %0, i32 0, i32 5, !dbg !6878
  %1 = load float, float* %red, align 8, !dbg !6878
  %call = call zeroext i16 @ClampToQuantum(float %1), !dbg !6878
  %2 = load %struct._PixelPacket*, %struct._PixelPacket** %color.addr, align 8, !dbg !6878
  %red1 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %2, i32 0, i32 2, !dbg !6878
  store i16 %call, i16* %red1, align 2, !dbg !6878
  %3 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !6879
  %green = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %3, i32 0, i32 6, !dbg !6879
  %4 = load float, float* %green, align 4, !dbg !6879
  %call2 = call zeroext i16 @ClampToQuantum(float %4), !dbg !6879
  %5 = load %struct._PixelPacket*, %struct._PixelPacket** %color.addr, align 8, !dbg !6879
  %green3 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %5, i32 0, i32 1, !dbg !6879
  store i16 %call2, i16* %green3, align 2, !dbg !6879
  %6 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !6880
  %blue = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %6, i32 0, i32 7, !dbg !6880
  %7 = load float, float* %blue, align 8, !dbg !6880
  %call4 = call zeroext i16 @ClampToQuantum(float %7), !dbg !6880
  %8 = load %struct._PixelPacket*, %struct._PixelPacket** %color.addr, align 8, !dbg !6880
  %blue5 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %8, i32 0, i32 0, !dbg !6880
  store i16 %call4, i16* %blue5, align 2, !dbg !6880
  %9 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !6881
  %opacity = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %9, i32 0, i32 8, !dbg !6881
  %10 = load float, float* %opacity, align 4, !dbg !6881
  %call6 = call zeroext i16 @ClampToQuantum(float %10), !dbg !6881
  %11 = load %struct._PixelPacket*, %struct._PixelPacket** %color.addr, align 8, !dbg !6881
  %opacity7 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %11, i32 0, i32 3, !dbg !6881
  store i16 %call6, i16* %opacity7, align 2, !dbg !6881
  %12 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6882
  %colorspace = getelementptr inbounds %struct._Image, %struct._Image* %12, i32 0, i32 1, !dbg !6884
  %13 = load i32, i32* %colorspace, align 4, !dbg !6884
  %cmp = icmp eq i32 %13, 12, !dbg !6885
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !6886

lor.lhs.false:                                    ; preds = %entry
  %14 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6887
  %storage_class = getelementptr inbounds %struct._Image, %struct._Image* %14, i32 0, i32 0, !dbg !6888
  %15 = load i32, i32* %storage_class, align 8, !dbg !6888
  %cmp8 = icmp eq i32 %15, 2, !dbg !6889
  br i1 %cmp8, label %if.then, label %if.end13, !dbg !6890

if.then:                                          ; preds = %lor.lhs.false, %entry
  %16 = load i16*, i16** %index.addr, align 8, !dbg !6891
  %cmp9 = icmp ne i16* %16, null, !dbg !6891
  br i1 %cmp9, label %if.then10, label %if.end, !dbg !6894

if.then10:                                        ; preds = %if.then
  %17 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !6891
  %index11 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %17, i32 0, i32 9, !dbg !6891
  %18 = load float, float* %index11, align 8, !dbg !6891
  %call12 = call zeroext i16 @ClampToQuantum(float %18), !dbg !6891
  %19 = load i16*, i16** %index.addr, align 8, !dbg !6891
  store i16 %call12, i16* %19, align 2, !dbg !6891
  br label %if.end, !dbg !6891

if.end:                                           ; preds = %if.then10, %if.then
  br label %if.end13, !dbg !6894

if.end13:                                         ; preds = %if.end, %lor.lhs.false
  ret void, !dbg !6895
}

declare dso_local i32 @ResamplePixelColor(%struct._ResampleFilter*, double, double, %struct._MagickPixelPacket*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @MagickPixelCompositeBlend(%struct._MagickPixelPacket* %p, float %alpha, %struct._MagickPixelPacket* %q, float %beta, %struct._MagickPixelPacket* %composite) #0 !dbg !6896 {
entry:
  %p.addr = alloca %struct._MagickPixelPacket*, align 8
  %alpha.addr = alloca float, align 4
  %q.addr = alloca %struct._MagickPixelPacket*, align 8
  %beta.addr = alloca float, align 4
  %composite.addr = alloca %struct._MagickPixelPacket*, align 8
  store %struct._MagickPixelPacket* %p, %struct._MagickPixelPacket** %p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %p.addr, metadata !6901, metadata !DIExpression()), !dbg !6902
  store float %alpha, float* %alpha.addr, align 4
  call void @llvm.dbg.declare(metadata float* %alpha.addr, metadata !6903, metadata !DIExpression()), !dbg !6904
  store %struct._MagickPixelPacket* %q, %struct._MagickPixelPacket** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %q.addr, metadata !6905, metadata !DIExpression()), !dbg !6906
  store float %beta, float* %beta.addr, align 4
  call void @llvm.dbg.declare(metadata float* %beta.addr, metadata !6907, metadata !DIExpression()), !dbg !6908
  store %struct._MagickPixelPacket* %composite, %struct._MagickPixelPacket** %composite.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %composite.addr, metadata !6909, metadata !DIExpression()), !dbg !6910
  %0 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !6911
  %1 = load float, float* %alpha.addr, align 4, !dbg !6912
  %2 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !6913
  %opacity = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %2, i32 0, i32 8, !dbg !6914
  %3 = load float, float* %opacity, align 4, !dbg !6914
  %sub = fsub float 6.553500e+04, %3, !dbg !6915
  %mul = fmul float %1, %sub, !dbg !6916
  %sub1 = fsub float 6.553500e+04, %mul, !dbg !6917
  %4 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !6918
  %5 = load float, float* %beta.addr, align 4, !dbg !6919
  %6 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !6920
  %opacity2 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %6, i32 0, i32 8, !dbg !6921
  %7 = load float, float* %opacity2, align 4, !dbg !6921
  %sub3 = fsub float 6.553500e+04, %7, !dbg !6922
  %mul4 = fmul float %5, %sub3, !dbg !6923
  %sub5 = fsub float 6.553500e+04, %mul4, !dbg !6924
  %8 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !6925
  call void @MagickPixelCompositePlus(%struct._MagickPixelPacket* %0, float %sub1, %struct._MagickPixelPacket* %4, float %sub5, %struct._MagickPixelPacket* %8), !dbg !6926
  ret void, !dbg !6927
}

declare dso_local i32 @SyncCacheViewAuthenticPixels(%struct._CacheView*, %struct._ExceptionInfo*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @SetImageProgress(%struct._Image* %image, i8* %tag, i64 %offset, i64 %extent) #0 !dbg !6928 {
entry:
  %retval = alloca i32, align 4
  %image.addr = alloca %struct._Image*, align 8
  %tag.addr = alloca i8*, align 8
  %offset.addr = alloca i64, align 8
  %extent.addr = alloca i64, align 8
  %message = alloca [4096 x i8], align 16
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !6932, metadata !DIExpression()), !dbg !6933
  store i8* %tag, i8** %tag.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %tag.addr, metadata !6934, metadata !DIExpression()), !dbg !6935
  store i64 %offset, i64* %offset.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %offset.addr, metadata !6936, metadata !DIExpression()), !dbg !6937
  store i64 %extent, i64* %extent.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %extent.addr, metadata !6938, metadata !DIExpression()), !dbg !6939
  call void @llvm.dbg.declare(metadata [4096 x i8]* %message, metadata !6940, metadata !DIExpression()), !dbg !6941
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6942
  %progress_monitor = getelementptr inbounds %struct._Image, %struct._Image* %0, i32 0, i32 47, !dbg !6944
  %1 = load i32 (i8*, i64, i64, i8*)*, i32 (i8*, i64, i64, i8*)** %progress_monitor, align 8, !dbg !6944
  %cmp = icmp eq i32 (i8*, i64, i64, i8*)* %1, null, !dbg !6945
  br i1 %cmp, label %if.then, label %if.end, !dbg !6946

if.then:                                          ; preds = %entry
  store i32 1, i32* %retval, align 4, !dbg !6947
  br label %return, !dbg !6947

if.end:                                           ; preds = %entry
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %message, i64 0, i64 0, !dbg !6948
  %2 = load i8*, i8** %tag.addr, align 8, !dbg !6949
  %3 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6950
  %filename = getelementptr inbounds %struct._Image, %struct._Image* %3, i32 0, i32 53, !dbg !6951
  %arraydecay1 = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename, i64 0, i64 0, !dbg !6950
  %call = call i64 (i8*, i64, i8*, ...) @FormatLocaleString(i8* %arraydecay, i64 4096, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.161, i64 0, i64 0), i8* %2, i8* %arraydecay1), !dbg !6952
  %4 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6953
  %progress_monitor2 = getelementptr inbounds %struct._Image, %struct._Image* %4, i32 0, i32 47, !dbg !6954
  %5 = load i32 (i8*, i64, i64, i8*)*, i32 (i8*, i64, i64, i8*)** %progress_monitor2, align 8, !dbg !6954
  %arraydecay3 = getelementptr inbounds [4096 x i8], [4096 x i8]* %message, i64 0, i64 0, !dbg !6955
  %6 = load i64, i64* %offset.addr, align 8, !dbg !6956
  %7 = load i64, i64* %extent.addr, align 8, !dbg !6957
  %8 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6958
  %client_data = getelementptr inbounds %struct._Image, %struct._Image* %8, i32 0, i32 48, !dbg !6959
  %9 = load i8*, i8** %client_data, align 8, !dbg !6959
  %call4 = call i32 %5(i8* %arraydecay3, i64 %6, i64 %7, i8* %9), !dbg !6953
  store i32 %call4, i32* %retval, align 4, !dbg !6960
  br label %return, !dbg !6960

return:                                           ; preds = %if.end, %if.then
  %10 = load i32, i32* %retval, align 4, !dbg !6961
  ret i32 %10, !dbg !6961
}

declare dso_local %struct._CacheView* @DestroyCacheView(%struct._CacheView*) #2

; Function Attrs: noinline nounwind uwtable
define internal %struct._ResampleFilter** @DestroyResampleFilterThreadSet(%struct._ResampleFilter** %filter) #0 !dbg !6962 {
entry:
  %filter.addr = alloca %struct._ResampleFilter**, align 8
  %i = alloca i64, align 8
  store %struct._ResampleFilter** %filter, %struct._ResampleFilter*** %filter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ResampleFilter*** %filter.addr, metadata !6965, metadata !DIExpression()), !dbg !6966
  call void @llvm.dbg.declare(metadata i64* %i, metadata !6967, metadata !DIExpression()), !dbg !6968
  store i64 0, i64* %i, align 8, !dbg !6969
  br label %for.cond, !dbg !6971

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i64, i64* %i, align 8, !dbg !6972
  %call = call i64 @GetMagickResourceLimit(i32 6), !dbg !6974
  %cmp = icmp slt i64 %0, %call, !dbg !6975
  br i1 %cmp, label %for.body, label %for.end, !dbg !6976

for.body:                                         ; preds = %for.cond
  %1 = load %struct._ResampleFilter**, %struct._ResampleFilter*** %filter.addr, align 8, !dbg !6977
  %2 = load i64, i64* %i, align 8, !dbg !6979
  %arrayidx = getelementptr inbounds %struct._ResampleFilter*, %struct._ResampleFilter** %1, i64 %2, !dbg !6977
  %3 = load %struct._ResampleFilter*, %struct._ResampleFilter** %arrayidx, align 8, !dbg !6977
  %cmp1 = icmp ne %struct._ResampleFilter* %3, null, !dbg !6980
  br i1 %cmp1, label %if.then, label %if.end, !dbg !6981

if.then:                                          ; preds = %for.body
  %4 = load %struct._ResampleFilter**, %struct._ResampleFilter*** %filter.addr, align 8, !dbg !6982
  %5 = load i64, i64* %i, align 8, !dbg !6983
  %arrayidx2 = getelementptr inbounds %struct._ResampleFilter*, %struct._ResampleFilter** %4, i64 %5, !dbg !6982
  %6 = load %struct._ResampleFilter*, %struct._ResampleFilter** %arrayidx2, align 8, !dbg !6982
  %call3 = call %struct._ResampleFilter* @DestroyResampleFilter(%struct._ResampleFilter* %6), !dbg !6984
  %7 = load %struct._ResampleFilter**, %struct._ResampleFilter*** %filter.addr, align 8, !dbg !6985
  %8 = load i64, i64* %i, align 8, !dbg !6986
  %arrayidx4 = getelementptr inbounds %struct._ResampleFilter*, %struct._ResampleFilter** %7, i64 %8, !dbg !6985
  store %struct._ResampleFilter* %call3, %struct._ResampleFilter** %arrayidx4, align 8, !dbg !6987
  br label %if.end, !dbg !6985

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !6988

for.inc:                                          ; preds = %if.end
  %9 = load i64, i64* %i, align 8, !dbg !6989
  %inc = add nsw i64 %9, 1, !dbg !6989
  store i64 %inc, i64* %i, align 8, !dbg !6989
  br label %for.cond, !dbg !6990, !llvm.loop !6991

for.end:                                          ; preds = %for.cond
  %10 = load %struct._ResampleFilter**, %struct._ResampleFilter*** %filter.addr, align 8, !dbg !6993
  %11 = bitcast %struct._ResampleFilter** %10 to i8*, !dbg !6993
  %call5 = call i8* @RelinquishAlignedMemory(i8* %11), !dbg !6994
  %12 = bitcast i8* %call5 to %struct._ResampleFilter**, !dbg !6995
  store %struct._ResampleFilter** %12, %struct._ResampleFilter*** %filter.addr, align 8, !dbg !6996
  %13 = load %struct._ResampleFilter**, %struct._ResampleFilter*** %filter.addr, align 8, !dbg !6997
  ret %struct._ResampleFilter** %13, !dbg !6998
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct._Image* @RotateImage(%struct._Image* %image, double %degrees, %struct._ExceptionInfo* %exception) #0 !dbg !6999 {
entry:
  %retval = alloca %struct._Image*, align 8
  %image.addr = alloca %struct._Image*, align 8
  %degrees.addr = alloca double, align 8
  %exception.addr = alloca %struct._ExceptionInfo*, align 8
  %distort_image = alloca %struct._Image*, align 8
  %rotate_image = alloca %struct._Image*, align 8
  %angle = alloca float, align 4
  %shear = alloca %struct._PointInfo, align 8
  %rotations = alloca i64, align 8
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !7002, metadata !DIExpression()), !dbg !7003
  store double %degrees, double* %degrees.addr, align 8
  call void @llvm.dbg.declare(metadata double* %degrees.addr, metadata !7004, metadata !DIExpression()), !dbg !7005
  store %struct._ExceptionInfo* %exception, %struct._ExceptionInfo** %exception.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo** %exception.addr, metadata !7006, metadata !DIExpression()), !dbg !7007
  call void @llvm.dbg.declare(metadata %struct._Image** %distort_image, metadata !7008, metadata !DIExpression()), !dbg !7009
  call void @llvm.dbg.declare(metadata %struct._Image** %rotate_image, metadata !7010, metadata !DIExpression()), !dbg !7011
  call void @llvm.dbg.declare(metadata float* %angle, metadata !7012, metadata !DIExpression()), !dbg !7013
  call void @llvm.dbg.declare(metadata %struct._PointInfo* %shear, metadata !7014, metadata !DIExpression()), !dbg !7015
  call void @llvm.dbg.declare(metadata i64* %rotations, metadata !7016, metadata !DIExpression()), !dbg !7017
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7018
  %debug = getelementptr inbounds %struct._Image, %struct._Image* %0, i32 0, i32 59, !dbg !7020
  %1 = load i32, i32* %debug, align 8, !dbg !7020
  %cmp = icmp ne i32 %1, 0, !dbg !7021
  br i1 %cmp, label %if.then, label %if.end, !dbg !7022

if.then:                                          ; preds = %entry
  %2 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7023
  %filename = getelementptr inbounds %struct._Image, %struct._Image* %2, i32 0, i32 53, !dbg !7024
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename, i64 0, i64 0, !dbg !7023
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 1, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 2843, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !7025
  br label %if.end, !dbg !7026

if.end:                                           ; preds = %if.then, %entry
  %3 = load double, double* %degrees.addr, align 8, !dbg !7027
  %conv = fptrunc double %3 to float, !dbg !7027
  store float %conv, float* %angle, align 4, !dbg !7028
  br label %while.cond, !dbg !7029

while.cond:                                       ; preds = %while.body, %if.end
  %4 = load float, float* %angle, align 4, !dbg !7030
  %conv1 = fpext float %4 to double, !dbg !7030
  %cmp2 = fcmp olt double %conv1, -4.500000e+01, !dbg !7031
  br i1 %cmp2, label %while.body, label %while.end, !dbg !7029

while.body:                                       ; preds = %while.cond
  %5 = load float, float* %angle, align 4, !dbg !7032
  %conv4 = fpext float %5 to double, !dbg !7032
  %add = fadd double %conv4, 3.600000e+02, !dbg !7032
  %conv5 = fptrunc double %add to float, !dbg !7032
  store float %conv5, float* %angle, align 4, !dbg !7032
  br label %while.cond, !dbg !7029, !llvm.loop !7033

while.end:                                        ; preds = %while.cond
  store i64 0, i64* %rotations, align 8, !dbg !7035
  br label %for.cond, !dbg !7037

for.cond:                                         ; preds = %for.inc, %while.end
  %6 = load float, float* %angle, align 4, !dbg !7038
  %conv6 = fpext float %6 to double, !dbg !7038
  %cmp7 = fcmp ogt double %conv6, 4.500000e+01, !dbg !7040
  br i1 %cmp7, label %for.body, label %for.end, !dbg !7041

for.body:                                         ; preds = %for.cond
  %7 = load float, float* %angle, align 4, !dbg !7042
  %conv9 = fpext float %7 to double, !dbg !7042
  %sub = fsub double %conv9, 9.000000e+01, !dbg !7042
  %conv10 = fptrunc double %sub to float, !dbg !7042
  store float %conv10, float* %angle, align 4, !dbg !7042
  br label %for.inc, !dbg !7043

for.inc:                                          ; preds = %for.body
  %8 = load i64, i64* %rotations, align 8, !dbg !7044
  %inc = add i64 %8, 1, !dbg !7044
  store i64 %inc, i64* %rotations, align 8, !dbg !7044
  br label %for.cond, !dbg !7045, !llvm.loop !7046

for.end:                                          ; preds = %for.cond
  %9 = load i64, i64* %rotations, align 8, !dbg !7048
  %rem = urem i64 %9, 4, !dbg !7048
  store i64 %rem, i64* %rotations, align 8, !dbg !7048
  %10 = load float, float* %angle, align 4, !dbg !7049
  %conv11 = fpext float %10 to double, !dbg !7049
  %call12 = call double @DegreesToRadians(double %conv11), !dbg !7050
  %div = fdiv double %call12, 2.000000e+00, !dbg !7051
  %call13 = call double @tan(double %div) #6, !dbg !7052
  %fneg = fneg double %call13, !dbg !7053
  %x = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %shear, i32 0, i32 0, !dbg !7054
  store double %fneg, double* %x, align 8, !dbg !7055
  %11 = load float, float* %angle, align 4, !dbg !7056
  %conv14 = fpext float %11 to double, !dbg !7056
  %call15 = call double @DegreesToRadians(double %conv14), !dbg !7057
  %call16 = call double @sin(double %call15) #6, !dbg !7058
  %y = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %shear, i32 0, i32 1, !dbg !7059
  store double %call16, double* %y, align 8, !dbg !7060
  %x17 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %shear, i32 0, i32 0, !dbg !7061
  %12 = load double, double* %x17, align 8, !dbg !7061
  %13 = call double @llvm.fabs.f64(double %12), !dbg !7063
  %cmp18 = fcmp olt double %13, 1.000000e-15, !dbg !7064
  br i1 %cmp18, label %land.lhs.true, label %if.end25, !dbg !7065

land.lhs.true:                                    ; preds = %for.end
  %y20 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %shear, i32 0, i32 1, !dbg !7066
  %14 = load double, double* %y20, align 8, !dbg !7066
  %15 = call double @llvm.fabs.f64(double %14), !dbg !7067
  %cmp21 = fcmp olt double %15, 1.000000e-15, !dbg !7068
  br i1 %cmp21, label %if.then23, label %if.end25, !dbg !7069

if.then23:                                        ; preds = %land.lhs.true
  %16 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7070
  %17 = load i64, i64* %rotations, align 8, !dbg !7071
  %18 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !7072
  %call24 = call %struct._Image* @IntegralRotateImage(%struct._Image* %16, i64 %17, %struct._ExceptionInfo* %18), !dbg !7073
  store %struct._Image* %call24, %struct._Image** %retval, align 8, !dbg !7074
  br label %return, !dbg !7074

if.end25:                                         ; preds = %land.lhs.true, %for.end
  %19 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7075
  %20 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !7076
  %call26 = call %struct._Image* @CloneImage(%struct._Image* %19, i64 0, i64 0, i32 1, %struct._ExceptionInfo* %20), !dbg !7077
  store %struct._Image* %call26, %struct._Image** %distort_image, align 8, !dbg !7078
  %21 = load %struct._Image*, %struct._Image** %distort_image, align 8, !dbg !7079
  %cmp27 = icmp eq %struct._Image* %21, null, !dbg !7081
  br i1 %cmp27, label %if.then29, label %if.end30, !dbg !7082

if.then29:                                        ; preds = %if.end25
  store %struct._Image* null, %struct._Image** %retval, align 8, !dbg !7083
  br label %return, !dbg !7083

if.end30:                                         ; preds = %if.end25
  %22 = load %struct._Image*, %struct._Image** %distort_image, align 8, !dbg !7084
  %call31 = call i32 @SetImageVirtualPixelMethod(%struct._Image* %22, i32 1), !dbg !7085
  %23 = load %struct._Image*, %struct._Image** %distort_image, align 8, !dbg !7086
  %24 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !7087
  %call32 = call %struct._Image* @DistortImage(%struct._Image* %23, i32 3, i64 1, double* %degrees.addr, i32 1, %struct._ExceptionInfo* %24), !dbg !7088
  store %struct._Image* %call32, %struct._Image** %rotate_image, align 8, !dbg !7089
  %25 = load %struct._Image*, %struct._Image** %distort_image, align 8, !dbg !7090
  %call33 = call %struct._Image* @DestroyImage(%struct._Image* %25), !dbg !7091
  store %struct._Image* %call33, %struct._Image** %distort_image, align 8, !dbg !7092
  %26 = load %struct._Image*, %struct._Image** %rotate_image, align 8, !dbg !7093
  store %struct._Image* %26, %struct._Image** %retval, align 8, !dbg !7094
  br label %return, !dbg !7094

return:                                           ; preds = %if.end30, %if.then29, %if.then23
  %27 = load %struct._Image*, %struct._Image** %retval, align 8, !dbg !7095
  ret %struct._Image* %27, !dbg !7095
}

; Function Attrs: noinline nounwind uwtable
define internal double @DegreesToRadians(double %degrees) #0 !dbg !7096 {
entry:
  %degrees.addr = alloca double, align 8
  store double %degrees, double* %degrees.addr, align 8
  call void @llvm.dbg.declare(metadata double* %degrees.addr, metadata !7098, metadata !DIExpression()), !dbg !7099
  %0 = load double, double* %degrees.addr, align 8, !dbg !7100
  %mul = fmul double 0x400921FB54442D18, %0, !dbg !7101
  %div = fdiv double %mul, 1.800000e+02, !dbg !7102
  ret double %div, !dbg !7103
}

declare dso_local %struct._Image* @IntegralRotateImage(%struct._Image*, i64, %struct._ExceptionInfo*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local %struct._Image* @SparseColorImage(%struct._Image* %image, i32 %channel, i32 %method, i64 %number_arguments, double* %arguments, %struct._ExceptionInfo* %exception) #0 !dbg !7104 {
entry:
  %retval = alloca %struct._Image*, align 8
  %image.addr = alloca %struct._Image*, align 8
  %channel.addr = alloca i32, align 4
  %method.addr = alloca i32, align 4
  %number_arguments.addr = alloca i64, align 8
  %arguments.addr = alloca double*, align 8
  %exception.addr = alloca %struct._ExceptionInfo*, align 8
  %sparse_method = alloca i32, align 4
  %coeff = alloca double*, align 8
  %sparse_image = alloca %struct._Image*, align 8
  %number_colors = alloca i64, align 8
  %distort_method = alloca i32, align 4
  %x = alloca i64, align 8
  %x95 = alloca i64, align 8
  %sparse_view = alloca %struct._CacheView*, align 8
  %status = alloca i32, align 4
  %progress = alloca i64, align 8
  %j = alloca i64, align 8
  %sync = alloca i32, align 4
  %pixel = alloca %struct._MagickPixelPacket, align 8
  %indexes = alloca i16*, align 8
  %i = alloca i64, align 8
  %q = alloca %struct._PixelPacket*, align 8
  %x185 = alloca i64, align 8
  %x270 = alloca i64, align 8
  %k = alloca i64, align 8
  %denominator = alloca double, align 8
  %x426 = alloca i64, align 8
  %weight = alloca double, align 8
  %k548 = alloca i64, align 8
  %minimum = alloca double, align 8
  %distance = alloca double, align 8
  %x573 = alloca i64, align 8
  %proceed = alloca i32, align 4
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !7110, metadata !DIExpression()), !dbg !7111
  store i32 %channel, i32* %channel.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %channel.addr, metadata !7112, metadata !DIExpression()), !dbg !7113
  store i32 %method, i32* %method.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %method.addr, metadata !7114, metadata !DIExpression()), !dbg !7115
  store i64 %number_arguments, i64* %number_arguments.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %number_arguments.addr, metadata !7116, metadata !DIExpression()), !dbg !7117
  store double* %arguments, double** %arguments.addr, align 8
  call void @llvm.dbg.declare(metadata double** %arguments.addr, metadata !7118, metadata !DIExpression()), !dbg !7119
  store %struct._ExceptionInfo* %exception, %struct._ExceptionInfo** %exception.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo** %exception.addr, metadata !7120, metadata !DIExpression()), !dbg !7121
  call void @llvm.dbg.declare(metadata i32* %sparse_method, metadata !7122, metadata !DIExpression()), !dbg !7123
  call void @llvm.dbg.declare(metadata double** %coeff, metadata !7124, metadata !DIExpression()), !dbg !7125
  call void @llvm.dbg.declare(metadata %struct._Image** %sparse_image, metadata !7126, metadata !DIExpression()), !dbg !7127
  call void @llvm.dbg.declare(metadata i64* %number_colors, metadata !7128, metadata !DIExpression()), !dbg !7129
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7130
  %debug = getelementptr inbounds %struct._Image, %struct._Image* %0, i32 0, i32 59, !dbg !7132
  %1 = load i32, i32* %debug, align 8, !dbg !7132
  %cmp = icmp ne i32 %1, 0, !dbg !7133
  br i1 %cmp, label %if.then, label %if.end, !dbg !7134

if.then:                                          ; preds = %entry
  %2 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7135
  %filename = getelementptr inbounds %struct._Image, %struct._Image* %2, i32 0, i32 53, !dbg !7136
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename, i64 0, i64 0, !dbg !7135
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 1, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 2930, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !7137
  br label %if.end, !dbg !7138

if.end:                                           ; preds = %if.then, %entry
  store i64 0, i64* %number_colors, align 8, !dbg !7139
  %3 = load i32, i32* %channel.addr, align 4, !dbg !7140
  %and = and i32 %3, 1, !dbg !7142
  %tobool = icmp ne i32 %and, 0, !dbg !7142
  br i1 %tobool, label %if.then1, label %if.end2, !dbg !7143

if.then1:                                         ; preds = %if.end
  %4 = load i64, i64* %number_colors, align 8, !dbg !7144
  %inc = add i64 %4, 1, !dbg !7144
  store i64 %inc, i64* %number_colors, align 8, !dbg !7144
  br label %if.end2, !dbg !7145

if.end2:                                          ; preds = %if.then1, %if.end
  %5 = load i32, i32* %channel.addr, align 4, !dbg !7146
  %and3 = and i32 %5, 2, !dbg !7148
  %tobool4 = icmp ne i32 %and3, 0, !dbg !7148
  br i1 %tobool4, label %if.then5, label %if.end7, !dbg !7149

if.then5:                                         ; preds = %if.end2
  %6 = load i64, i64* %number_colors, align 8, !dbg !7150
  %inc6 = add i64 %6, 1, !dbg !7150
  store i64 %inc6, i64* %number_colors, align 8, !dbg !7150
  br label %if.end7, !dbg !7151

if.end7:                                          ; preds = %if.then5, %if.end2
  %7 = load i32, i32* %channel.addr, align 4, !dbg !7152
  %and8 = and i32 %7, 4, !dbg !7154
  %tobool9 = icmp ne i32 %and8, 0, !dbg !7154
  br i1 %tobool9, label %if.then10, label %if.end12, !dbg !7155

if.then10:                                        ; preds = %if.end7
  %8 = load i64, i64* %number_colors, align 8, !dbg !7156
  %inc11 = add i64 %8, 1, !dbg !7156
  store i64 %inc11, i64* %number_colors, align 8, !dbg !7156
  br label %if.end12, !dbg !7157

if.end12:                                         ; preds = %if.then10, %if.end7
  %9 = load i32, i32* %channel.addr, align 4, !dbg !7158
  %and13 = and i32 %9, 32, !dbg !7160
  %tobool14 = icmp ne i32 %and13, 0, !dbg !7160
  br i1 %tobool14, label %if.then15, label %if.end17, !dbg !7161

if.then15:                                        ; preds = %if.end12
  %10 = load i64, i64* %number_colors, align 8, !dbg !7162
  %inc16 = add i64 %10, 1, !dbg !7162
  store i64 %inc16, i64* %number_colors, align 8, !dbg !7162
  br label %if.end17, !dbg !7163

if.end17:                                         ; preds = %if.then15, %if.end12
  %11 = load i32, i32* %channel.addr, align 4, !dbg !7164
  %and18 = and i32 %11, 8, !dbg !7166
  %tobool19 = icmp ne i32 %and18, 0, !dbg !7166
  br i1 %tobool19, label %if.then20, label %if.end22, !dbg !7167

if.then20:                                        ; preds = %if.end17
  %12 = load i64, i64* %number_colors, align 8, !dbg !7168
  %inc21 = add i64 %12, 1, !dbg !7168
  store i64 %inc21, i64* %number_colors, align 8, !dbg !7168
  br label %if.end22, !dbg !7169

if.end22:                                         ; preds = %if.then20, %if.end17
  call void @llvm.dbg.declare(metadata i32* %distort_method, metadata !7170, metadata !DIExpression()), !dbg !7172
  %13 = load i32, i32* %method.addr, align 4, !dbg !7173
  store i32 %13, i32* %distort_method, align 4, !dbg !7174
  %14 = load i32, i32* %distort_method, align 4, !dbg !7175
  %cmp23 = icmp uge i32 %14, 18, !dbg !7177
  br i1 %cmp23, label %if.then24, label %if.end25, !dbg !7178

if.then24:                                        ; preds = %if.end22
  store i32 16, i32* %distort_method, align 4, !dbg !7179
  br label %if.end25, !dbg !7180

if.end25:                                         ; preds = %if.then24, %if.end22
  %15 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7181
  %16 = load i64, i64* %number_arguments.addr, align 8, !dbg !7182
  %17 = load double*, double** %arguments.addr, align 8, !dbg !7183
  %18 = load i64, i64* %number_colors, align 8, !dbg !7184
  %19 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !7185
  %call26 = call double* @GenerateCoefficients(%struct._Image* %15, i32* %distort_method, i64 %16, double* %17, i64 %18, %struct._ExceptionInfo* %19), !dbg !7186
  store double* %call26, double** %coeff, align 8, !dbg !7187
  %20 = load double*, double** %coeff, align 8, !dbg !7188
  %cmp27 = icmp eq double* %20, null, !dbg !7190
  br i1 %cmp27, label %if.then28, label %if.end29, !dbg !7191

if.then28:                                        ; preds = %if.end25
  store %struct._Image* null, %struct._Image** %retval, align 8, !dbg !7192
  br label %return, !dbg !7192

if.end29:                                         ; preds = %if.end25
  %21 = load i32, i32* %distort_method, align 4, !dbg !7193
  store i32 %21, i32* %sparse_method, align 4, !dbg !7194
  %22 = load i32, i32* %distort_method, align 4, !dbg !7195
  %cmp30 = icmp eq i32 %22, 16, !dbg !7197
  br i1 %cmp30, label %if.then31, label %if.end32, !dbg !7198

if.then31:                                        ; preds = %if.end29
  %23 = load i32, i32* %method.addr, align 4, !dbg !7199
  store i32 %23, i32* %sparse_method, align 4, !dbg !7200
  br label %if.end32, !dbg !7201

if.end32:                                         ; preds = %if.then31, %if.end29
  %24 = load i32, i32* %sparse_method, align 4, !dbg !7202
  %cmp33 = icmp eq i32 %24, 19, !dbg !7204
  br i1 %cmp33, label %if.then34, label %if.end35, !dbg !7205

if.then34:                                        ; preds = %if.end32
  %25 = load double*, double** %coeff, align 8, !dbg !7206
  %arrayidx = getelementptr inbounds double, double* %25, i64 0, !dbg !7206
  store double 5.000000e-01, double* %arrayidx, align 8, !dbg !7207
  br label %if.end35, !dbg !7206

if.end35:                                         ; preds = %if.then34, %if.end32
  %26 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7208
  %call36 = call i8* @GetImageArtifact(%struct._Image* %26, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10, i64 0, i64 0)), !dbg !7210
  %cmp37 = icmp ne i8* %call36, null, !dbg !7211
  br i1 %cmp37, label %if.then38, label %if.end162, !dbg !7212

if.then38:                                        ; preds = %if.end35
  %27 = load i32, i32* %sparse_method, align 4, !dbg !7213
  switch i32 %27, label %sw.default [
    i32 1, label %sw.bb
    i32 7, label %sw.bb94
  ], !dbg !7215

sw.bb:                                            ; preds = %if.then38
  call void @llvm.dbg.declare(metadata i64* %x, metadata !7216, metadata !DIExpression()), !dbg !7219
  store i64 0, i64* %x, align 8, !dbg !7219
  %28 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !7220
  %call39 = call i64 (%struct._IO_FILE*, i8*, ...) @FormatLocaleFile(%struct._IO_FILE* %28, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.105, i64 0, i64 0)), !dbg !7221
  %29 = load i32, i32* %channel.addr, align 4, !dbg !7222
  %and40 = and i32 %29, 1, !dbg !7224
  %tobool41 = icmp ne i32 %and40, 0, !dbg !7224
  br i1 %tobool41, label %if.then42, label %if.end49, !dbg !7225

if.then42:                                        ; preds = %sw.bb
  %30 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !7226
  %31 = load double*, double** %coeff, align 8, !dbg !7227
  %32 = load i64, i64* %x, align 8, !dbg !7228
  %arrayidx43 = getelementptr inbounds double, double* %31, i64 %32, !dbg !7227
  %33 = load double, double* %arrayidx43, align 8, !dbg !7227
  %34 = load double*, double** %coeff, align 8, !dbg !7229
  %35 = load i64, i64* %x, align 8, !dbg !7230
  %add = add nsw i64 %35, 1, !dbg !7231
  %arrayidx44 = getelementptr inbounds double, double* %34, i64 %add, !dbg !7229
  %36 = load double, double* %arrayidx44, align 8, !dbg !7229
  %37 = load double*, double** %coeff, align 8, !dbg !7232
  %38 = load i64, i64* %x, align 8, !dbg !7233
  %add45 = add nsw i64 %38, 2, !dbg !7234
  %arrayidx46 = getelementptr inbounds double, double* %37, i64 %add45, !dbg !7232
  %39 = load double, double* %arrayidx46, align 8, !dbg !7232
  %call47 = call i64 (%struct._IO_FILE*, i8*, ...) @FormatLocaleFile(%struct._IO_FILE* %30, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.106, i64 0, i64 0), double %33, double %36, double %39), !dbg !7235
  %40 = load i64, i64* %x, align 8, !dbg !7236
  %add48 = add nsw i64 %40, 3, !dbg !7236
  store i64 %add48, i64* %x, align 8, !dbg !7236
  br label %if.end49, !dbg !7237

if.end49:                                         ; preds = %if.then42, %sw.bb
  %41 = load i32, i32* %channel.addr, align 4, !dbg !7238
  %and50 = and i32 %41, 2, !dbg !7240
  %tobool51 = icmp ne i32 %and50, 0, !dbg !7240
  br i1 %tobool51, label %if.then52, label %if.end60, !dbg !7241

if.then52:                                        ; preds = %if.end49
  %42 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !7242
  %43 = load double*, double** %coeff, align 8, !dbg !7243
  %44 = load i64, i64* %x, align 8, !dbg !7244
  %arrayidx53 = getelementptr inbounds double, double* %43, i64 %44, !dbg !7243
  %45 = load double, double* %arrayidx53, align 8, !dbg !7243
  %46 = load double*, double** %coeff, align 8, !dbg !7245
  %47 = load i64, i64* %x, align 8, !dbg !7246
  %add54 = add nsw i64 %47, 1, !dbg !7247
  %arrayidx55 = getelementptr inbounds double, double* %46, i64 %add54, !dbg !7245
  %48 = load double, double* %arrayidx55, align 8, !dbg !7245
  %49 = load double*, double** %coeff, align 8, !dbg !7248
  %50 = load i64, i64* %x, align 8, !dbg !7249
  %add56 = add nsw i64 %50, 2, !dbg !7250
  %arrayidx57 = getelementptr inbounds double, double* %49, i64 %add56, !dbg !7248
  %51 = load double, double* %arrayidx57, align 8, !dbg !7248
  %call58 = call i64 (%struct._IO_FILE*, i8*, ...) @FormatLocaleFile(%struct._IO_FILE* %42, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.107, i64 0, i64 0), double %45, double %48, double %51), !dbg !7251
  %52 = load i64, i64* %x, align 8, !dbg !7252
  %add59 = add nsw i64 %52, 3, !dbg !7252
  store i64 %add59, i64* %x, align 8, !dbg !7252
  br label %if.end60, !dbg !7253

if.end60:                                         ; preds = %if.then52, %if.end49
  %53 = load i32, i32* %channel.addr, align 4, !dbg !7254
  %and61 = and i32 %53, 4, !dbg !7256
  %tobool62 = icmp ne i32 %and61, 0, !dbg !7256
  br i1 %tobool62, label %if.then63, label %if.end71, !dbg !7257

if.then63:                                        ; preds = %if.end60
  %54 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !7258
  %55 = load double*, double** %coeff, align 8, !dbg !7259
  %56 = load i64, i64* %x, align 8, !dbg !7260
  %arrayidx64 = getelementptr inbounds double, double* %55, i64 %56, !dbg !7259
  %57 = load double, double* %arrayidx64, align 8, !dbg !7259
  %58 = load double*, double** %coeff, align 8, !dbg !7261
  %59 = load i64, i64* %x, align 8, !dbg !7262
  %add65 = add nsw i64 %59, 1, !dbg !7263
  %arrayidx66 = getelementptr inbounds double, double* %58, i64 %add65, !dbg !7261
  %60 = load double, double* %arrayidx66, align 8, !dbg !7261
  %61 = load double*, double** %coeff, align 8, !dbg !7264
  %62 = load i64, i64* %x, align 8, !dbg !7265
  %add67 = add nsw i64 %62, 2, !dbg !7266
  %arrayidx68 = getelementptr inbounds double, double* %61, i64 %add67, !dbg !7264
  %63 = load double, double* %arrayidx68, align 8, !dbg !7264
  %call69 = call i64 (%struct._IO_FILE*, i8*, ...) @FormatLocaleFile(%struct._IO_FILE* %54, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.108, i64 0, i64 0), double %57, double %60, double %63), !dbg !7267
  %64 = load i64, i64* %x, align 8, !dbg !7268
  %add70 = add nsw i64 %64, 3, !dbg !7268
  store i64 %add70, i64* %x, align 8, !dbg !7268
  br label %if.end71, !dbg !7269

if.end71:                                         ; preds = %if.then63, %if.end60
  %65 = load i32, i32* %channel.addr, align 4, !dbg !7270
  %and72 = and i32 %65, 32, !dbg !7272
  %tobool73 = icmp ne i32 %and72, 0, !dbg !7272
  br i1 %tobool73, label %if.then74, label %if.end82, !dbg !7273

if.then74:                                        ; preds = %if.end71
  %66 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !7274
  %67 = load double*, double** %coeff, align 8, !dbg !7275
  %68 = load i64, i64* %x, align 8, !dbg !7276
  %arrayidx75 = getelementptr inbounds double, double* %67, i64 %68, !dbg !7275
  %69 = load double, double* %arrayidx75, align 8, !dbg !7275
  %70 = load double*, double** %coeff, align 8, !dbg !7277
  %71 = load i64, i64* %x, align 8, !dbg !7278
  %add76 = add nsw i64 %71, 1, !dbg !7279
  %arrayidx77 = getelementptr inbounds double, double* %70, i64 %add76, !dbg !7277
  %72 = load double, double* %arrayidx77, align 8, !dbg !7277
  %73 = load double*, double** %coeff, align 8, !dbg !7280
  %74 = load i64, i64* %x, align 8, !dbg !7281
  %add78 = add nsw i64 %74, 2, !dbg !7282
  %arrayidx79 = getelementptr inbounds double, double* %73, i64 %add78, !dbg !7280
  %75 = load double, double* %arrayidx79, align 8, !dbg !7280
  %call80 = call i64 (%struct._IO_FILE*, i8*, ...) @FormatLocaleFile(%struct._IO_FILE* %66, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.109, i64 0, i64 0), double %69, double %72, double %75), !dbg !7283
  %76 = load i64, i64* %x, align 8, !dbg !7284
  %add81 = add nsw i64 %76, 3, !dbg !7284
  store i64 %add81, i64* %x, align 8, !dbg !7284
  br label %if.end82, !dbg !7285

if.end82:                                         ; preds = %if.then74, %if.end71
  %77 = load i32, i32* %channel.addr, align 4, !dbg !7286
  %and83 = and i32 %77, 8, !dbg !7288
  %tobool84 = icmp ne i32 %and83, 0, !dbg !7288
  br i1 %tobool84, label %if.then85, label %if.end93, !dbg !7289

if.then85:                                        ; preds = %if.end82
  %78 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !7290
  %79 = load double*, double** %coeff, align 8, !dbg !7291
  %80 = load i64, i64* %x, align 8, !dbg !7292
  %arrayidx86 = getelementptr inbounds double, double* %79, i64 %80, !dbg !7291
  %81 = load double, double* %arrayidx86, align 8, !dbg !7291
  %82 = load double*, double** %coeff, align 8, !dbg !7293
  %83 = load i64, i64* %x, align 8, !dbg !7294
  %add87 = add nsw i64 %83, 1, !dbg !7295
  %arrayidx88 = getelementptr inbounds double, double* %82, i64 %add87, !dbg !7293
  %84 = load double, double* %arrayidx88, align 8, !dbg !7293
  %85 = load double*, double** %coeff, align 8, !dbg !7296
  %86 = load i64, i64* %x, align 8, !dbg !7297
  %add89 = add nsw i64 %86, 2, !dbg !7298
  %arrayidx90 = getelementptr inbounds double, double* %85, i64 %add89, !dbg !7296
  %87 = load double, double* %arrayidx90, align 8, !dbg !7296
  %call91 = call i64 (%struct._IO_FILE*, i8*, ...) @FormatLocaleFile(%struct._IO_FILE* %78, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.110, i64 0, i64 0), double %81, double %84, double %87), !dbg !7299
  %88 = load i64, i64* %x, align 8, !dbg !7300
  %add92 = add nsw i64 %88, 3, !dbg !7300
  store i64 %add92, i64* %x, align 8, !dbg !7300
  br label %if.end93, !dbg !7301

if.end93:                                         ; preds = %if.then85, %if.end82
  br label %sw.epilog, !dbg !7302

sw.bb94:                                          ; preds = %if.then38
  call void @llvm.dbg.declare(metadata i64* %x95, metadata !7303, metadata !DIExpression()), !dbg !7305
  store i64 0, i64* %x95, align 8, !dbg !7305
  %89 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !7306
  %call96 = call i64 (%struct._IO_FILE*, i8*, ...) @FormatLocaleFile(%struct._IO_FILE* %89, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.111, i64 0, i64 0)), !dbg !7307
  %90 = load i32, i32* %channel.addr, align 4, !dbg !7308
  %and97 = and i32 %90, 1, !dbg !7310
  %tobool98 = icmp ne i32 %and97, 0, !dbg !7310
  br i1 %tobool98, label %if.then99, label %if.end109, !dbg !7311

if.then99:                                        ; preds = %sw.bb94
  %91 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !7312
  %92 = load double*, double** %coeff, align 8, !dbg !7313
  %93 = load i64, i64* %x95, align 8, !dbg !7314
  %arrayidx100 = getelementptr inbounds double, double* %92, i64 %93, !dbg !7313
  %94 = load double, double* %arrayidx100, align 8, !dbg !7313
  %95 = load double*, double** %coeff, align 8, !dbg !7315
  %96 = load i64, i64* %x95, align 8, !dbg !7316
  %add101 = add nsw i64 %96, 1, !dbg !7317
  %arrayidx102 = getelementptr inbounds double, double* %95, i64 %add101, !dbg !7315
  %97 = load double, double* %arrayidx102, align 8, !dbg !7315
  %98 = load double*, double** %coeff, align 8, !dbg !7318
  %99 = load i64, i64* %x95, align 8, !dbg !7319
  %add103 = add nsw i64 %99, 2, !dbg !7320
  %arrayidx104 = getelementptr inbounds double, double* %98, i64 %add103, !dbg !7318
  %100 = load double, double* %arrayidx104, align 8, !dbg !7318
  %101 = load double*, double** %coeff, align 8, !dbg !7321
  %102 = load i64, i64* %x95, align 8, !dbg !7322
  %add105 = add nsw i64 %102, 3, !dbg !7323
  %arrayidx106 = getelementptr inbounds double, double* %101, i64 %add105, !dbg !7321
  %103 = load double, double* %arrayidx106, align 8, !dbg !7321
  %call107 = call i64 (%struct._IO_FILE*, i8*, ...) @FormatLocaleFile(%struct._IO_FILE* %91, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.112, i64 0, i64 0), double %94, double %97, double %100, double %103), !dbg !7324
  %104 = load i64, i64* %x95, align 8, !dbg !7325
  %add108 = add nsw i64 %104, 4, !dbg !7325
  store i64 %add108, i64* %x95, align 8, !dbg !7325
  br label %if.end109, !dbg !7326

if.end109:                                        ; preds = %if.then99, %sw.bb94
  %105 = load i32, i32* %channel.addr, align 4, !dbg !7327
  %and110 = and i32 %105, 2, !dbg !7329
  %tobool111 = icmp ne i32 %and110, 0, !dbg !7329
  br i1 %tobool111, label %if.then112, label %if.end122, !dbg !7330

if.then112:                                       ; preds = %if.end109
  %106 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !7331
  %107 = load double*, double** %coeff, align 8, !dbg !7332
  %108 = load i64, i64* %x95, align 8, !dbg !7333
  %arrayidx113 = getelementptr inbounds double, double* %107, i64 %108, !dbg !7332
  %109 = load double, double* %arrayidx113, align 8, !dbg !7332
  %110 = load double*, double** %coeff, align 8, !dbg !7334
  %111 = load i64, i64* %x95, align 8, !dbg !7335
  %add114 = add nsw i64 %111, 1, !dbg !7336
  %arrayidx115 = getelementptr inbounds double, double* %110, i64 %add114, !dbg !7334
  %112 = load double, double* %arrayidx115, align 8, !dbg !7334
  %113 = load double*, double** %coeff, align 8, !dbg !7337
  %114 = load i64, i64* %x95, align 8, !dbg !7338
  %add116 = add nsw i64 %114, 2, !dbg !7339
  %arrayidx117 = getelementptr inbounds double, double* %113, i64 %add116, !dbg !7337
  %115 = load double, double* %arrayidx117, align 8, !dbg !7337
  %116 = load double*, double** %coeff, align 8, !dbg !7340
  %117 = load i64, i64* %x95, align 8, !dbg !7341
  %add118 = add nsw i64 %117, 3, !dbg !7342
  %arrayidx119 = getelementptr inbounds double, double* %116, i64 %add118, !dbg !7340
  %118 = load double, double* %arrayidx119, align 8, !dbg !7340
  %call120 = call i64 (%struct._IO_FILE*, i8*, ...) @FormatLocaleFile(%struct._IO_FILE* %106, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.113, i64 0, i64 0), double %109, double %112, double %115, double %118), !dbg !7343
  %119 = load i64, i64* %x95, align 8, !dbg !7344
  %add121 = add nsw i64 %119, 4, !dbg !7344
  store i64 %add121, i64* %x95, align 8, !dbg !7344
  br label %if.end122, !dbg !7345

if.end122:                                        ; preds = %if.then112, %if.end109
  %120 = load i32, i32* %channel.addr, align 4, !dbg !7346
  %and123 = and i32 %120, 4, !dbg !7348
  %tobool124 = icmp ne i32 %and123, 0, !dbg !7348
  br i1 %tobool124, label %if.then125, label %if.end135, !dbg !7349

if.then125:                                       ; preds = %if.end122
  %121 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !7350
  %122 = load double*, double** %coeff, align 8, !dbg !7351
  %123 = load i64, i64* %x95, align 8, !dbg !7352
  %arrayidx126 = getelementptr inbounds double, double* %122, i64 %123, !dbg !7351
  %124 = load double, double* %arrayidx126, align 8, !dbg !7351
  %125 = load double*, double** %coeff, align 8, !dbg !7353
  %126 = load i64, i64* %x95, align 8, !dbg !7354
  %add127 = add nsw i64 %126, 1, !dbg !7355
  %arrayidx128 = getelementptr inbounds double, double* %125, i64 %add127, !dbg !7353
  %127 = load double, double* %arrayidx128, align 8, !dbg !7353
  %128 = load double*, double** %coeff, align 8, !dbg !7356
  %129 = load i64, i64* %x95, align 8, !dbg !7357
  %add129 = add nsw i64 %129, 2, !dbg !7358
  %arrayidx130 = getelementptr inbounds double, double* %128, i64 %add129, !dbg !7356
  %130 = load double, double* %arrayidx130, align 8, !dbg !7356
  %131 = load double*, double** %coeff, align 8, !dbg !7359
  %132 = load i64, i64* %x95, align 8, !dbg !7360
  %add131 = add nsw i64 %132, 3, !dbg !7361
  %arrayidx132 = getelementptr inbounds double, double* %131, i64 %add131, !dbg !7359
  %133 = load double, double* %arrayidx132, align 8, !dbg !7359
  %call133 = call i64 (%struct._IO_FILE*, i8*, ...) @FormatLocaleFile(%struct._IO_FILE* %121, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.114, i64 0, i64 0), double %124, double %127, double %130, double %133), !dbg !7362
  %134 = load i64, i64* %x95, align 8, !dbg !7363
  %add134 = add nsw i64 %134, 4, !dbg !7363
  store i64 %add134, i64* %x95, align 8, !dbg !7363
  br label %if.end135, !dbg !7364

if.end135:                                        ; preds = %if.then125, %if.end122
  %135 = load i32, i32* %channel.addr, align 4, !dbg !7365
  %and136 = and i32 %135, 32, !dbg !7367
  %tobool137 = icmp ne i32 %and136, 0, !dbg !7367
  br i1 %tobool137, label %if.then138, label %if.end148, !dbg !7368

if.then138:                                       ; preds = %if.end135
  %136 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !7369
  %137 = load double*, double** %coeff, align 8, !dbg !7370
  %138 = load i64, i64* %x95, align 8, !dbg !7371
  %arrayidx139 = getelementptr inbounds double, double* %137, i64 %138, !dbg !7370
  %139 = load double, double* %arrayidx139, align 8, !dbg !7370
  %140 = load double*, double** %coeff, align 8, !dbg !7372
  %141 = load i64, i64* %x95, align 8, !dbg !7373
  %add140 = add nsw i64 %141, 1, !dbg !7374
  %arrayidx141 = getelementptr inbounds double, double* %140, i64 %add140, !dbg !7372
  %142 = load double, double* %arrayidx141, align 8, !dbg !7372
  %143 = load double*, double** %coeff, align 8, !dbg !7375
  %144 = load i64, i64* %x95, align 8, !dbg !7376
  %add142 = add nsw i64 %144, 2, !dbg !7377
  %arrayidx143 = getelementptr inbounds double, double* %143, i64 %add142, !dbg !7375
  %145 = load double, double* %arrayidx143, align 8, !dbg !7375
  %146 = load double*, double** %coeff, align 8, !dbg !7378
  %147 = load i64, i64* %x95, align 8, !dbg !7379
  %add144 = add nsw i64 %147, 3, !dbg !7380
  %arrayidx145 = getelementptr inbounds double, double* %146, i64 %add144, !dbg !7378
  %148 = load double, double* %arrayidx145, align 8, !dbg !7378
  %call146 = call i64 (%struct._IO_FILE*, i8*, ...) @FormatLocaleFile(%struct._IO_FILE* %136, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.115, i64 0, i64 0), double %139, double %142, double %145, double %148), !dbg !7381
  %149 = load i64, i64* %x95, align 8, !dbg !7382
  %add147 = add nsw i64 %149, 4, !dbg !7382
  store i64 %add147, i64* %x95, align 8, !dbg !7382
  br label %if.end148, !dbg !7383

if.end148:                                        ; preds = %if.then138, %if.end135
  %150 = load i32, i32* %channel.addr, align 4, !dbg !7384
  %and149 = and i32 %150, 8, !dbg !7386
  %tobool150 = icmp ne i32 %and149, 0, !dbg !7386
  br i1 %tobool150, label %if.then151, label %if.end161, !dbg !7387

if.then151:                                       ; preds = %if.end148
  %151 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !7388
  %152 = load double*, double** %coeff, align 8, !dbg !7389
  %153 = load i64, i64* %x95, align 8, !dbg !7390
  %arrayidx152 = getelementptr inbounds double, double* %152, i64 %153, !dbg !7389
  %154 = load double, double* %arrayidx152, align 8, !dbg !7389
  %155 = load double*, double** %coeff, align 8, !dbg !7391
  %156 = load i64, i64* %x95, align 8, !dbg !7392
  %add153 = add nsw i64 %156, 1, !dbg !7393
  %arrayidx154 = getelementptr inbounds double, double* %155, i64 %add153, !dbg !7391
  %157 = load double, double* %arrayidx154, align 8, !dbg !7391
  %158 = load double*, double** %coeff, align 8, !dbg !7394
  %159 = load i64, i64* %x95, align 8, !dbg !7395
  %add155 = add nsw i64 %159, 2, !dbg !7396
  %arrayidx156 = getelementptr inbounds double, double* %158, i64 %add155, !dbg !7394
  %160 = load double, double* %arrayidx156, align 8, !dbg !7394
  %161 = load double*, double** %coeff, align 8, !dbg !7397
  %162 = load i64, i64* %x95, align 8, !dbg !7398
  %add157 = add nsw i64 %162, 3, !dbg !7399
  %arrayidx158 = getelementptr inbounds double, double* %161, i64 %add157, !dbg !7397
  %163 = load double, double* %arrayidx158, align 8, !dbg !7397
  %call159 = call i64 (%struct._IO_FILE*, i8*, ...) @FormatLocaleFile(%struct._IO_FILE* %151, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.116, i64 0, i64 0), double %154, double %157, double %160, double %163), !dbg !7400
  %164 = load i64, i64* %x95, align 8, !dbg !7401
  %add160 = add nsw i64 %164, 4, !dbg !7401
  store i64 %add160, i64* %x95, align 8, !dbg !7401
  br label %if.end161, !dbg !7402

if.end161:                                        ; preds = %if.then151, %if.end148
  br label %sw.epilog, !dbg !7403

sw.default:                                       ; preds = %if.then38
  br label %sw.epilog, !dbg !7404

sw.epilog:                                        ; preds = %sw.default, %if.end161, %if.end93
  br label %if.end162, !dbg !7405

if.end162:                                        ; preds = %sw.epilog, %if.end35
  %165 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7406
  %166 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !7407
  %call163 = call %struct._Image* @CloneImage(%struct._Image* %165, i64 0, i64 0, i32 1, %struct._ExceptionInfo* %166), !dbg !7408
  store %struct._Image* %call163, %struct._Image** %sparse_image, align 8, !dbg !7409
  %167 = load %struct._Image*, %struct._Image** %sparse_image, align 8, !dbg !7410
  %cmp164 = icmp eq %struct._Image* %167, null, !dbg !7412
  br i1 %cmp164, label %if.then165, label %if.end166, !dbg !7413

if.then165:                                       ; preds = %if.end162
  store %struct._Image* null, %struct._Image** %retval, align 8, !dbg !7414
  br label %return, !dbg !7414

if.end166:                                        ; preds = %if.end162
  %168 = load %struct._Image*, %struct._Image** %sparse_image, align 8, !dbg !7415
  %call167 = call i32 @SetImageStorageClass(%struct._Image* %168, i32 1), !dbg !7417
  %cmp168 = icmp eq i32 %call167, 0, !dbg !7418
  br i1 %cmp168, label %if.then169, label %if.end172, !dbg !7419

if.then169:                                       ; preds = %if.end166
  %169 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !7420
  %170 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7422
  %exception170 = getelementptr inbounds %struct._Image, %struct._Image* %170, i32 0, i32 58, !dbg !7423
  call void @InheritException(%struct._ExceptionInfo* %169, %struct._ExceptionInfo* %exception170), !dbg !7424
  %171 = load %struct._Image*, %struct._Image** %sparse_image, align 8, !dbg !7425
  %call171 = call %struct._Image* @DestroyImage(%struct._Image* %171), !dbg !7426
  store %struct._Image* %call171, %struct._Image** %sparse_image, align 8, !dbg !7427
  store %struct._Image* null, %struct._Image** %retval, align 8, !dbg !7428
  br label %return, !dbg !7428

if.end172:                                        ; preds = %if.end166
  call void @llvm.dbg.declare(metadata %struct._CacheView** %sparse_view, metadata !7429, metadata !DIExpression()), !dbg !7431
  call void @llvm.dbg.declare(metadata i32* %status, metadata !7432, metadata !DIExpression()), !dbg !7433
  call void @llvm.dbg.declare(metadata i64* %progress, metadata !7434, metadata !DIExpression()), !dbg !7435
  call void @llvm.dbg.declare(metadata i64* %j, metadata !7436, metadata !DIExpression()), !dbg !7437
  store i32 1, i32* %status, align 4, !dbg !7438
  store i64 0, i64* %progress, align 8, !dbg !7439
  %172 = load %struct._Image*, %struct._Image** %sparse_image, align 8, !dbg !7440
  %173 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !7441
  %call173 = call %struct._CacheView* @AcquireAuthenticCacheView(%struct._Image* %172, %struct._ExceptionInfo* %173), !dbg !7442
  store %struct._CacheView* %call173, %struct._CacheView** %sparse_view, align 8, !dbg !7443
  store i64 0, i64* %j, align 8, !dbg !7444
  br label %for.cond, !dbg !7446

for.cond:                                         ; preds = %for.inc671, %if.end172
  %174 = load i64, i64* %j, align 8, !dbg !7447
  %175 = load %struct._Image*, %struct._Image** %sparse_image, align 8, !dbg !7449
  %rows = getelementptr inbounds %struct._Image, %struct._Image* %175, i32 0, i32 8, !dbg !7450
  %176 = load i64, i64* %rows, align 8, !dbg !7450
  %cmp174 = icmp slt i64 %174, %176, !dbg !7451
  br i1 %cmp174, label %for.body, label %for.end673, !dbg !7452

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %sync, metadata !7453, metadata !DIExpression()), !dbg !7455
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket* %pixel, metadata !7456, metadata !DIExpression()), !dbg !7457
  call void @llvm.dbg.declare(metadata i16** %indexes, metadata !7458, metadata !DIExpression()), !dbg !7459
  call void @llvm.dbg.declare(metadata i64* %i, metadata !7460, metadata !DIExpression()), !dbg !7461
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %q, metadata !7462, metadata !DIExpression()), !dbg !7463
  %177 = load %struct._CacheView*, %struct._CacheView** %sparse_view, align 8, !dbg !7464
  %178 = load i64, i64* %j, align 8, !dbg !7465
  %179 = load %struct._Image*, %struct._Image** %sparse_image, align 8, !dbg !7466
  %columns = getelementptr inbounds %struct._Image, %struct._Image* %179, i32 0, i32 7, !dbg !7467
  %180 = load i64, i64* %columns, align 8, !dbg !7467
  %181 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !7468
  %call175 = call %struct._PixelPacket* @GetCacheViewAuthenticPixels(%struct._CacheView* %177, i64 0, i64 %178, i64 %180, i64 1, %struct._ExceptionInfo* %181), !dbg !7469
  store %struct._PixelPacket* %call175, %struct._PixelPacket** %q, align 8, !dbg !7470
  %182 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !7471
  %cmp176 = icmp eq %struct._PixelPacket* %182, null, !dbg !7473
  br i1 %cmp176, label %if.then177, label %if.end178, !dbg !7474

if.then177:                                       ; preds = %for.body
  store i32 0, i32* %status, align 4, !dbg !7475
  br label %for.inc671, !dbg !7477

if.end178:                                        ; preds = %for.body
  %183 = load %struct._CacheView*, %struct._CacheView** %sparse_view, align 8, !dbg !7478
  %call179 = call i16* @GetCacheViewAuthenticIndexQueue(%struct._CacheView* %183), !dbg !7479
  store i16* %call179, i16** %indexes, align 8, !dbg !7480
  %184 = load %struct._Image*, %struct._Image** %sparse_image, align 8, !dbg !7481
  call void @GetMagickPixelPacket(%struct._Image* %184, %struct._MagickPixelPacket* %pixel), !dbg !7482
  store i64 0, i64* %i, align 8, !dbg !7483
  br label %for.cond180, !dbg !7485

for.cond180:                                      ; preds = %for.inc652, %if.end178
  %185 = load i64, i64* %i, align 8, !dbg !7486
  %186 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7488
  %columns181 = getelementptr inbounds %struct._Image, %struct._Image* %186, i32 0, i32 7, !dbg !7489
  %187 = load i64, i64* %columns181, align 8, !dbg !7489
  %cmp182 = icmp slt i64 %185, %187, !dbg !7490
  br i1 %cmp182, label %for.body183, label %for.end654, !dbg !7491

for.body183:                                      ; preds = %for.cond180
  %188 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7492
  %189 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !7494
  %190 = load i16*, i16** %indexes, align 8, !dbg !7495
  call void @SetMagickPixelPacket(%struct._Image* %188, %struct._PixelPacket* %189, i16* %190, %struct._MagickPixelPacket* %pixel), !dbg !7496
  %191 = load i32, i32* %sparse_method, align 4, !dbg !7497
  switch i32 %191, label %sw.default547 [
    i32 1, label %sw.bb184
    i32 7, label %sw.bb269
    i32 19, label %sw.bb396
    i32 16, label %sw.bb396
    i32 18, label %sw.bb546
  ], !dbg !7498

sw.bb184:                                         ; preds = %for.body183
  call void @llvm.dbg.declare(metadata i64* %x185, metadata !7499, metadata !DIExpression()), !dbg !7502
  store i64 0, i64* %x185, align 8, !dbg !7502
  %192 = load i32, i32* %channel.addr, align 4, !dbg !7503
  %and186 = and i32 %192, 1, !dbg !7505
  %tobool187 = icmp ne i32 %and186, 0, !dbg !7505
  br i1 %tobool187, label %if.then188, label %if.end200, !dbg !7506

if.then188:                                       ; preds = %sw.bb184
  %193 = load double*, double** %coeff, align 8, !dbg !7507
  %194 = load i64, i64* %x185, align 8, !dbg !7508
  %arrayidx189 = getelementptr inbounds double, double* %193, i64 %194, !dbg !7507
  %195 = load double, double* %arrayidx189, align 8, !dbg !7507
  %196 = load i64, i64* %i, align 8, !dbg !7509
  %conv = sitofp i64 %196 to double, !dbg !7509
  %mul = fmul double %195, %conv, !dbg !7510
  %197 = load double*, double** %coeff, align 8, !dbg !7511
  %198 = load i64, i64* %x185, align 8, !dbg !7512
  %add190 = add nsw i64 %198, 1, !dbg !7513
  %arrayidx191 = getelementptr inbounds double, double* %197, i64 %add190, !dbg !7511
  %199 = load double, double* %arrayidx191, align 8, !dbg !7511
  %200 = load i64, i64* %j, align 8, !dbg !7514
  %conv192 = sitofp i64 %200 to double, !dbg !7514
  %mul193 = fmul double %199, %conv192, !dbg !7515
  %add194 = fadd double %mul, %mul193, !dbg !7516
  %201 = load double*, double** %coeff, align 8, !dbg !7517
  %202 = load i64, i64* %x185, align 8, !dbg !7518
  %add195 = add nsw i64 %202, 2, !dbg !7519
  %arrayidx196 = getelementptr inbounds double, double* %201, i64 %add195, !dbg !7517
  %203 = load double, double* %arrayidx196, align 8, !dbg !7517
  %add197 = fadd double %add194, %203, !dbg !7520
  %conv198 = fptrunc double %add197 to float, !dbg !7507
  %red = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 5, !dbg !7521
  store float %conv198, float* %red, align 8, !dbg !7522
  %204 = load i64, i64* %x185, align 8, !dbg !7523
  %add199 = add nsw i64 %204, 3, !dbg !7523
  store i64 %add199, i64* %x185, align 8, !dbg !7523
  br label %if.end200, !dbg !7524

if.end200:                                        ; preds = %if.then188, %sw.bb184
  %205 = load i32, i32* %channel.addr, align 4, !dbg !7525
  %and201 = and i32 %205, 2, !dbg !7527
  %tobool202 = icmp ne i32 %and201, 0, !dbg !7527
  br i1 %tobool202, label %if.then203, label %if.end217, !dbg !7528

if.then203:                                       ; preds = %if.end200
  %206 = load double*, double** %coeff, align 8, !dbg !7529
  %207 = load i64, i64* %x185, align 8, !dbg !7530
  %arrayidx204 = getelementptr inbounds double, double* %206, i64 %207, !dbg !7529
  %208 = load double, double* %arrayidx204, align 8, !dbg !7529
  %209 = load i64, i64* %i, align 8, !dbg !7531
  %conv205 = sitofp i64 %209 to double, !dbg !7531
  %mul206 = fmul double %208, %conv205, !dbg !7532
  %210 = load double*, double** %coeff, align 8, !dbg !7533
  %211 = load i64, i64* %x185, align 8, !dbg !7534
  %add207 = add nsw i64 %211, 1, !dbg !7535
  %arrayidx208 = getelementptr inbounds double, double* %210, i64 %add207, !dbg !7533
  %212 = load double, double* %arrayidx208, align 8, !dbg !7533
  %213 = load i64, i64* %j, align 8, !dbg !7536
  %conv209 = sitofp i64 %213 to double, !dbg !7536
  %mul210 = fmul double %212, %conv209, !dbg !7537
  %add211 = fadd double %mul206, %mul210, !dbg !7538
  %214 = load double*, double** %coeff, align 8, !dbg !7539
  %215 = load i64, i64* %x185, align 8, !dbg !7540
  %add212 = add nsw i64 %215, 2, !dbg !7541
  %arrayidx213 = getelementptr inbounds double, double* %214, i64 %add212, !dbg !7539
  %216 = load double, double* %arrayidx213, align 8, !dbg !7539
  %add214 = fadd double %add211, %216, !dbg !7542
  %conv215 = fptrunc double %add214 to float, !dbg !7529
  %green = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 6, !dbg !7543
  store float %conv215, float* %green, align 4, !dbg !7544
  %217 = load i64, i64* %x185, align 8, !dbg !7545
  %add216 = add nsw i64 %217, 3, !dbg !7545
  store i64 %add216, i64* %x185, align 8, !dbg !7545
  br label %if.end217, !dbg !7546

if.end217:                                        ; preds = %if.then203, %if.end200
  %218 = load i32, i32* %channel.addr, align 4, !dbg !7547
  %and218 = and i32 %218, 4, !dbg !7549
  %tobool219 = icmp ne i32 %and218, 0, !dbg !7549
  br i1 %tobool219, label %if.then220, label %if.end234, !dbg !7550

if.then220:                                       ; preds = %if.end217
  %219 = load double*, double** %coeff, align 8, !dbg !7551
  %220 = load i64, i64* %x185, align 8, !dbg !7552
  %arrayidx221 = getelementptr inbounds double, double* %219, i64 %220, !dbg !7551
  %221 = load double, double* %arrayidx221, align 8, !dbg !7551
  %222 = load i64, i64* %i, align 8, !dbg !7553
  %conv222 = sitofp i64 %222 to double, !dbg !7553
  %mul223 = fmul double %221, %conv222, !dbg !7554
  %223 = load double*, double** %coeff, align 8, !dbg !7555
  %224 = load i64, i64* %x185, align 8, !dbg !7556
  %add224 = add nsw i64 %224, 1, !dbg !7557
  %arrayidx225 = getelementptr inbounds double, double* %223, i64 %add224, !dbg !7555
  %225 = load double, double* %arrayidx225, align 8, !dbg !7555
  %226 = load i64, i64* %j, align 8, !dbg !7558
  %conv226 = sitofp i64 %226 to double, !dbg !7558
  %mul227 = fmul double %225, %conv226, !dbg !7559
  %add228 = fadd double %mul223, %mul227, !dbg !7560
  %227 = load double*, double** %coeff, align 8, !dbg !7561
  %228 = load i64, i64* %x185, align 8, !dbg !7562
  %add229 = add nsw i64 %228, 2, !dbg !7563
  %arrayidx230 = getelementptr inbounds double, double* %227, i64 %add229, !dbg !7561
  %229 = load double, double* %arrayidx230, align 8, !dbg !7561
  %add231 = fadd double %add228, %229, !dbg !7564
  %conv232 = fptrunc double %add231 to float, !dbg !7551
  %blue = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 7, !dbg !7565
  store float %conv232, float* %blue, align 8, !dbg !7566
  %230 = load i64, i64* %x185, align 8, !dbg !7567
  %add233 = add nsw i64 %230, 3, !dbg !7567
  store i64 %add233, i64* %x185, align 8, !dbg !7567
  br label %if.end234, !dbg !7568

if.end234:                                        ; preds = %if.then220, %if.end217
  %231 = load i32, i32* %channel.addr, align 4, !dbg !7569
  %and235 = and i32 %231, 32, !dbg !7571
  %tobool236 = icmp ne i32 %and235, 0, !dbg !7571
  br i1 %tobool236, label %if.then237, label %if.end251, !dbg !7572

if.then237:                                       ; preds = %if.end234
  %232 = load double*, double** %coeff, align 8, !dbg !7573
  %233 = load i64, i64* %x185, align 8, !dbg !7574
  %arrayidx238 = getelementptr inbounds double, double* %232, i64 %233, !dbg !7573
  %234 = load double, double* %arrayidx238, align 8, !dbg !7573
  %235 = load i64, i64* %i, align 8, !dbg !7575
  %conv239 = sitofp i64 %235 to double, !dbg !7575
  %mul240 = fmul double %234, %conv239, !dbg !7576
  %236 = load double*, double** %coeff, align 8, !dbg !7577
  %237 = load i64, i64* %x185, align 8, !dbg !7578
  %add241 = add nsw i64 %237, 1, !dbg !7579
  %arrayidx242 = getelementptr inbounds double, double* %236, i64 %add241, !dbg !7577
  %238 = load double, double* %arrayidx242, align 8, !dbg !7577
  %239 = load i64, i64* %j, align 8, !dbg !7580
  %conv243 = sitofp i64 %239 to double, !dbg !7580
  %mul244 = fmul double %238, %conv243, !dbg !7581
  %add245 = fadd double %mul240, %mul244, !dbg !7582
  %240 = load double*, double** %coeff, align 8, !dbg !7583
  %241 = load i64, i64* %x185, align 8, !dbg !7584
  %add246 = add nsw i64 %241, 2, !dbg !7585
  %arrayidx247 = getelementptr inbounds double, double* %240, i64 %add246, !dbg !7583
  %242 = load double, double* %arrayidx247, align 8, !dbg !7583
  %add248 = fadd double %add245, %242, !dbg !7586
  %conv249 = fptrunc double %add248 to float, !dbg !7573
  %index = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 9, !dbg !7587
  store float %conv249, float* %index, align 8, !dbg !7588
  %243 = load i64, i64* %x185, align 8, !dbg !7589
  %add250 = add nsw i64 %243, 3, !dbg !7589
  store i64 %add250, i64* %x185, align 8, !dbg !7589
  br label %if.end251, !dbg !7590

if.end251:                                        ; preds = %if.then237, %if.end234
  %244 = load i32, i32* %channel.addr, align 4, !dbg !7591
  %and252 = and i32 %244, 8, !dbg !7593
  %tobool253 = icmp ne i32 %and252, 0, !dbg !7593
  br i1 %tobool253, label %if.then254, label %if.end268, !dbg !7594

if.then254:                                       ; preds = %if.end251
  %245 = load double*, double** %coeff, align 8, !dbg !7595
  %246 = load i64, i64* %x185, align 8, !dbg !7596
  %arrayidx255 = getelementptr inbounds double, double* %245, i64 %246, !dbg !7595
  %247 = load double, double* %arrayidx255, align 8, !dbg !7595
  %248 = load i64, i64* %i, align 8, !dbg !7597
  %conv256 = sitofp i64 %248 to double, !dbg !7597
  %mul257 = fmul double %247, %conv256, !dbg !7598
  %249 = load double*, double** %coeff, align 8, !dbg !7599
  %250 = load i64, i64* %x185, align 8, !dbg !7600
  %add258 = add nsw i64 %250, 1, !dbg !7601
  %arrayidx259 = getelementptr inbounds double, double* %249, i64 %add258, !dbg !7599
  %251 = load double, double* %arrayidx259, align 8, !dbg !7599
  %252 = load i64, i64* %j, align 8, !dbg !7602
  %conv260 = sitofp i64 %252 to double, !dbg !7602
  %mul261 = fmul double %251, %conv260, !dbg !7603
  %add262 = fadd double %mul257, %mul261, !dbg !7604
  %253 = load double*, double** %coeff, align 8, !dbg !7605
  %254 = load i64, i64* %x185, align 8, !dbg !7606
  %add263 = add nsw i64 %254, 2, !dbg !7607
  %arrayidx264 = getelementptr inbounds double, double* %253, i64 %add263, !dbg !7605
  %255 = load double, double* %arrayidx264, align 8, !dbg !7605
  %add265 = fadd double %add262, %255, !dbg !7608
  %conv266 = fptrunc double %add265 to float, !dbg !7595
  %opacity = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 8, !dbg !7609
  store float %conv266, float* %opacity, align 4, !dbg !7610
  %256 = load i64, i64* %x185, align 8, !dbg !7611
  %add267 = add nsw i64 %256, 3, !dbg !7611
  store i64 %add267, i64* %x185, align 8, !dbg !7611
  br label %if.end268, !dbg !7612

if.end268:                                        ; preds = %if.then254, %if.end251
  br label %sw.epilog620, !dbg !7613

sw.bb269:                                         ; preds = %for.body183
  call void @llvm.dbg.declare(metadata i64* %x270, metadata !7614, metadata !DIExpression()), !dbg !7616
  store i64 0, i64* %x270, align 8, !dbg !7616
  %257 = load i32, i32* %channel.addr, align 4, !dbg !7617
  %and271 = and i32 %257, 1, !dbg !7619
  %tobool272 = icmp ne i32 %and271, 0, !dbg !7619
  br i1 %tobool272, label %if.then273, label %if.end295, !dbg !7620

if.then273:                                       ; preds = %sw.bb269
  %258 = load double*, double** %coeff, align 8, !dbg !7621
  %259 = load i64, i64* %x270, align 8, !dbg !7622
  %arrayidx274 = getelementptr inbounds double, double* %258, i64 %259, !dbg !7621
  %260 = load double, double* %arrayidx274, align 8, !dbg !7621
  %261 = load i64, i64* %i, align 8, !dbg !7623
  %conv275 = sitofp i64 %261 to double, !dbg !7623
  %mul276 = fmul double %260, %conv275, !dbg !7624
  %262 = load double*, double** %coeff, align 8, !dbg !7625
  %263 = load i64, i64* %x270, align 8, !dbg !7626
  %add277 = add nsw i64 %263, 1, !dbg !7627
  %arrayidx278 = getelementptr inbounds double, double* %262, i64 %add277, !dbg !7625
  %264 = load double, double* %arrayidx278, align 8, !dbg !7625
  %265 = load i64, i64* %j, align 8, !dbg !7628
  %conv279 = sitofp i64 %265 to double, !dbg !7628
  %mul280 = fmul double %264, %conv279, !dbg !7629
  %add281 = fadd double %mul276, %mul280, !dbg !7630
  %266 = load double*, double** %coeff, align 8, !dbg !7631
  %267 = load i64, i64* %x270, align 8, !dbg !7632
  %add282 = add nsw i64 %267, 2, !dbg !7633
  %arrayidx283 = getelementptr inbounds double, double* %266, i64 %add282, !dbg !7631
  %268 = load double, double* %arrayidx283, align 8, !dbg !7631
  %269 = load i64, i64* %i, align 8, !dbg !7634
  %conv284 = sitofp i64 %269 to double, !dbg !7634
  %mul285 = fmul double %268, %conv284, !dbg !7635
  %270 = load i64, i64* %j, align 8, !dbg !7636
  %conv286 = sitofp i64 %270 to double, !dbg !7636
  %mul287 = fmul double %mul285, %conv286, !dbg !7637
  %add288 = fadd double %add281, %mul287, !dbg !7638
  %271 = load double*, double** %coeff, align 8, !dbg !7639
  %272 = load i64, i64* %x270, align 8, !dbg !7640
  %add289 = add nsw i64 %272, 3, !dbg !7641
  %arrayidx290 = getelementptr inbounds double, double* %271, i64 %add289, !dbg !7639
  %273 = load double, double* %arrayidx290, align 8, !dbg !7639
  %add291 = fadd double %add288, %273, !dbg !7642
  %conv292 = fptrunc double %add291 to float, !dbg !7621
  %red293 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 5, !dbg !7643
  store float %conv292, float* %red293, align 8, !dbg !7644
  %274 = load i64, i64* %x270, align 8, !dbg !7645
  %add294 = add nsw i64 %274, 4, !dbg !7645
  store i64 %add294, i64* %x270, align 8, !dbg !7645
  br label %if.end295, !dbg !7646

if.end295:                                        ; preds = %if.then273, %sw.bb269
  %275 = load i32, i32* %channel.addr, align 4, !dbg !7647
  %and296 = and i32 %275, 2, !dbg !7649
  %tobool297 = icmp ne i32 %and296, 0, !dbg !7649
  br i1 %tobool297, label %if.then298, label %if.end320, !dbg !7650

if.then298:                                       ; preds = %if.end295
  %276 = load double*, double** %coeff, align 8, !dbg !7651
  %277 = load i64, i64* %x270, align 8, !dbg !7652
  %arrayidx299 = getelementptr inbounds double, double* %276, i64 %277, !dbg !7651
  %278 = load double, double* %arrayidx299, align 8, !dbg !7651
  %279 = load i64, i64* %i, align 8, !dbg !7653
  %conv300 = sitofp i64 %279 to double, !dbg !7653
  %mul301 = fmul double %278, %conv300, !dbg !7654
  %280 = load double*, double** %coeff, align 8, !dbg !7655
  %281 = load i64, i64* %x270, align 8, !dbg !7656
  %add302 = add nsw i64 %281, 1, !dbg !7657
  %arrayidx303 = getelementptr inbounds double, double* %280, i64 %add302, !dbg !7655
  %282 = load double, double* %arrayidx303, align 8, !dbg !7655
  %283 = load i64, i64* %j, align 8, !dbg !7658
  %conv304 = sitofp i64 %283 to double, !dbg !7658
  %mul305 = fmul double %282, %conv304, !dbg !7659
  %add306 = fadd double %mul301, %mul305, !dbg !7660
  %284 = load double*, double** %coeff, align 8, !dbg !7661
  %285 = load i64, i64* %x270, align 8, !dbg !7662
  %add307 = add nsw i64 %285, 2, !dbg !7663
  %arrayidx308 = getelementptr inbounds double, double* %284, i64 %add307, !dbg !7661
  %286 = load double, double* %arrayidx308, align 8, !dbg !7661
  %287 = load i64, i64* %i, align 8, !dbg !7664
  %conv309 = sitofp i64 %287 to double, !dbg !7664
  %mul310 = fmul double %286, %conv309, !dbg !7665
  %288 = load i64, i64* %j, align 8, !dbg !7666
  %conv311 = sitofp i64 %288 to double, !dbg !7666
  %mul312 = fmul double %mul310, %conv311, !dbg !7667
  %add313 = fadd double %add306, %mul312, !dbg !7668
  %289 = load double*, double** %coeff, align 8, !dbg !7669
  %290 = load i64, i64* %x270, align 8, !dbg !7670
  %add314 = add nsw i64 %290, 3, !dbg !7671
  %arrayidx315 = getelementptr inbounds double, double* %289, i64 %add314, !dbg !7669
  %291 = load double, double* %arrayidx315, align 8, !dbg !7669
  %add316 = fadd double %add313, %291, !dbg !7672
  %conv317 = fptrunc double %add316 to float, !dbg !7651
  %green318 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 6, !dbg !7673
  store float %conv317, float* %green318, align 4, !dbg !7674
  %292 = load i64, i64* %x270, align 8, !dbg !7675
  %add319 = add nsw i64 %292, 4, !dbg !7675
  store i64 %add319, i64* %x270, align 8, !dbg !7675
  br label %if.end320, !dbg !7676

if.end320:                                        ; preds = %if.then298, %if.end295
  %293 = load i32, i32* %channel.addr, align 4, !dbg !7677
  %and321 = and i32 %293, 4, !dbg !7679
  %tobool322 = icmp ne i32 %and321, 0, !dbg !7679
  br i1 %tobool322, label %if.then323, label %if.end345, !dbg !7680

if.then323:                                       ; preds = %if.end320
  %294 = load double*, double** %coeff, align 8, !dbg !7681
  %295 = load i64, i64* %x270, align 8, !dbg !7682
  %arrayidx324 = getelementptr inbounds double, double* %294, i64 %295, !dbg !7681
  %296 = load double, double* %arrayidx324, align 8, !dbg !7681
  %297 = load i64, i64* %i, align 8, !dbg !7683
  %conv325 = sitofp i64 %297 to double, !dbg !7683
  %mul326 = fmul double %296, %conv325, !dbg !7684
  %298 = load double*, double** %coeff, align 8, !dbg !7685
  %299 = load i64, i64* %x270, align 8, !dbg !7686
  %add327 = add nsw i64 %299, 1, !dbg !7687
  %arrayidx328 = getelementptr inbounds double, double* %298, i64 %add327, !dbg !7685
  %300 = load double, double* %arrayidx328, align 8, !dbg !7685
  %301 = load i64, i64* %j, align 8, !dbg !7688
  %conv329 = sitofp i64 %301 to double, !dbg !7688
  %mul330 = fmul double %300, %conv329, !dbg !7689
  %add331 = fadd double %mul326, %mul330, !dbg !7690
  %302 = load double*, double** %coeff, align 8, !dbg !7691
  %303 = load i64, i64* %x270, align 8, !dbg !7692
  %add332 = add nsw i64 %303, 2, !dbg !7693
  %arrayidx333 = getelementptr inbounds double, double* %302, i64 %add332, !dbg !7691
  %304 = load double, double* %arrayidx333, align 8, !dbg !7691
  %305 = load i64, i64* %i, align 8, !dbg !7694
  %conv334 = sitofp i64 %305 to double, !dbg !7694
  %mul335 = fmul double %304, %conv334, !dbg !7695
  %306 = load i64, i64* %j, align 8, !dbg !7696
  %conv336 = sitofp i64 %306 to double, !dbg !7696
  %mul337 = fmul double %mul335, %conv336, !dbg !7697
  %add338 = fadd double %add331, %mul337, !dbg !7698
  %307 = load double*, double** %coeff, align 8, !dbg !7699
  %308 = load i64, i64* %x270, align 8, !dbg !7700
  %add339 = add nsw i64 %308, 3, !dbg !7701
  %arrayidx340 = getelementptr inbounds double, double* %307, i64 %add339, !dbg !7699
  %309 = load double, double* %arrayidx340, align 8, !dbg !7699
  %add341 = fadd double %add338, %309, !dbg !7702
  %conv342 = fptrunc double %add341 to float, !dbg !7681
  %blue343 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 7, !dbg !7703
  store float %conv342, float* %blue343, align 8, !dbg !7704
  %310 = load i64, i64* %x270, align 8, !dbg !7705
  %add344 = add nsw i64 %310, 4, !dbg !7705
  store i64 %add344, i64* %x270, align 8, !dbg !7705
  br label %if.end345, !dbg !7706

if.end345:                                        ; preds = %if.then323, %if.end320
  %311 = load i32, i32* %channel.addr, align 4, !dbg !7707
  %and346 = and i32 %311, 32, !dbg !7709
  %tobool347 = icmp ne i32 %and346, 0, !dbg !7709
  br i1 %tobool347, label %if.then348, label %if.end370, !dbg !7710

if.then348:                                       ; preds = %if.end345
  %312 = load double*, double** %coeff, align 8, !dbg !7711
  %313 = load i64, i64* %x270, align 8, !dbg !7712
  %arrayidx349 = getelementptr inbounds double, double* %312, i64 %313, !dbg !7711
  %314 = load double, double* %arrayidx349, align 8, !dbg !7711
  %315 = load i64, i64* %i, align 8, !dbg !7713
  %conv350 = sitofp i64 %315 to double, !dbg !7713
  %mul351 = fmul double %314, %conv350, !dbg !7714
  %316 = load double*, double** %coeff, align 8, !dbg !7715
  %317 = load i64, i64* %x270, align 8, !dbg !7716
  %add352 = add nsw i64 %317, 1, !dbg !7717
  %arrayidx353 = getelementptr inbounds double, double* %316, i64 %add352, !dbg !7715
  %318 = load double, double* %arrayidx353, align 8, !dbg !7715
  %319 = load i64, i64* %j, align 8, !dbg !7718
  %conv354 = sitofp i64 %319 to double, !dbg !7718
  %mul355 = fmul double %318, %conv354, !dbg !7719
  %add356 = fadd double %mul351, %mul355, !dbg !7720
  %320 = load double*, double** %coeff, align 8, !dbg !7721
  %321 = load i64, i64* %x270, align 8, !dbg !7722
  %add357 = add nsw i64 %321, 2, !dbg !7723
  %arrayidx358 = getelementptr inbounds double, double* %320, i64 %add357, !dbg !7721
  %322 = load double, double* %arrayidx358, align 8, !dbg !7721
  %323 = load i64, i64* %i, align 8, !dbg !7724
  %conv359 = sitofp i64 %323 to double, !dbg !7724
  %mul360 = fmul double %322, %conv359, !dbg !7725
  %324 = load i64, i64* %j, align 8, !dbg !7726
  %conv361 = sitofp i64 %324 to double, !dbg !7726
  %mul362 = fmul double %mul360, %conv361, !dbg !7727
  %add363 = fadd double %add356, %mul362, !dbg !7728
  %325 = load double*, double** %coeff, align 8, !dbg !7729
  %326 = load i64, i64* %x270, align 8, !dbg !7730
  %add364 = add nsw i64 %326, 3, !dbg !7731
  %arrayidx365 = getelementptr inbounds double, double* %325, i64 %add364, !dbg !7729
  %327 = load double, double* %arrayidx365, align 8, !dbg !7729
  %add366 = fadd double %add363, %327, !dbg !7732
  %conv367 = fptrunc double %add366 to float, !dbg !7711
  %index368 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 9, !dbg !7733
  store float %conv367, float* %index368, align 8, !dbg !7734
  %328 = load i64, i64* %x270, align 8, !dbg !7735
  %add369 = add nsw i64 %328, 4, !dbg !7735
  store i64 %add369, i64* %x270, align 8, !dbg !7735
  br label %if.end370, !dbg !7736

if.end370:                                        ; preds = %if.then348, %if.end345
  %329 = load i32, i32* %channel.addr, align 4, !dbg !7737
  %and371 = and i32 %329, 8, !dbg !7739
  %tobool372 = icmp ne i32 %and371, 0, !dbg !7739
  br i1 %tobool372, label %if.then373, label %if.end395, !dbg !7740

if.then373:                                       ; preds = %if.end370
  %330 = load double*, double** %coeff, align 8, !dbg !7741
  %331 = load i64, i64* %x270, align 8, !dbg !7742
  %arrayidx374 = getelementptr inbounds double, double* %330, i64 %331, !dbg !7741
  %332 = load double, double* %arrayidx374, align 8, !dbg !7741
  %333 = load i64, i64* %i, align 8, !dbg !7743
  %conv375 = sitofp i64 %333 to double, !dbg !7743
  %mul376 = fmul double %332, %conv375, !dbg !7744
  %334 = load double*, double** %coeff, align 8, !dbg !7745
  %335 = load i64, i64* %x270, align 8, !dbg !7746
  %add377 = add nsw i64 %335, 1, !dbg !7747
  %arrayidx378 = getelementptr inbounds double, double* %334, i64 %add377, !dbg !7745
  %336 = load double, double* %arrayidx378, align 8, !dbg !7745
  %337 = load i64, i64* %j, align 8, !dbg !7748
  %conv379 = sitofp i64 %337 to double, !dbg !7748
  %mul380 = fmul double %336, %conv379, !dbg !7749
  %add381 = fadd double %mul376, %mul380, !dbg !7750
  %338 = load double*, double** %coeff, align 8, !dbg !7751
  %339 = load i64, i64* %x270, align 8, !dbg !7752
  %add382 = add nsw i64 %339, 2, !dbg !7753
  %arrayidx383 = getelementptr inbounds double, double* %338, i64 %add382, !dbg !7751
  %340 = load double, double* %arrayidx383, align 8, !dbg !7751
  %341 = load i64, i64* %i, align 8, !dbg !7754
  %conv384 = sitofp i64 %341 to double, !dbg !7754
  %mul385 = fmul double %340, %conv384, !dbg !7755
  %342 = load i64, i64* %j, align 8, !dbg !7756
  %conv386 = sitofp i64 %342 to double, !dbg !7756
  %mul387 = fmul double %mul385, %conv386, !dbg !7757
  %add388 = fadd double %add381, %mul387, !dbg !7758
  %343 = load double*, double** %coeff, align 8, !dbg !7759
  %344 = load i64, i64* %x270, align 8, !dbg !7760
  %add389 = add nsw i64 %344, 3, !dbg !7761
  %arrayidx390 = getelementptr inbounds double, double* %343, i64 %add389, !dbg !7759
  %345 = load double, double* %arrayidx390, align 8, !dbg !7759
  %add391 = fadd double %add388, %345, !dbg !7762
  %conv392 = fptrunc double %add391 to float, !dbg !7741
  %opacity393 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 8, !dbg !7763
  store float %conv392, float* %opacity393, align 4, !dbg !7764
  %346 = load i64, i64* %x270, align 8, !dbg !7765
  %add394 = add nsw i64 %346, 4, !dbg !7765
  store i64 %add394, i64* %x270, align 8, !dbg !7765
  br label %if.end395, !dbg !7766

if.end395:                                        ; preds = %if.then373, %if.end370
  br label %sw.epilog620, !dbg !7767

sw.bb396:                                         ; preds = %for.body183, %for.body183
  call void @llvm.dbg.declare(metadata i64* %k, metadata !7768, metadata !DIExpression()), !dbg !7770
  call void @llvm.dbg.declare(metadata double* %denominator, metadata !7771, metadata !DIExpression()), !dbg !7772
  %347 = load i32, i32* %channel.addr, align 4, !dbg !7773
  %and397 = and i32 %347, 1, !dbg !7775
  %tobool398 = icmp ne i32 %and397, 0, !dbg !7775
  br i1 %tobool398, label %if.then399, label %if.end401, !dbg !7776

if.then399:                                       ; preds = %sw.bb396
  %red400 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 5, !dbg !7777
  store float 0.000000e+00, float* %red400, align 8, !dbg !7778
  br label %if.end401, !dbg !7779

if.end401:                                        ; preds = %if.then399, %sw.bb396
  %348 = load i32, i32* %channel.addr, align 4, !dbg !7780
  %and402 = and i32 %348, 2, !dbg !7782
  %tobool403 = icmp ne i32 %and402, 0, !dbg !7782
  br i1 %tobool403, label %if.then404, label %if.end406, !dbg !7783

if.then404:                                       ; preds = %if.end401
  %green405 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 6, !dbg !7784
  store float 0.000000e+00, float* %green405, align 4, !dbg !7785
  br label %if.end406, !dbg !7786

if.end406:                                        ; preds = %if.then404, %if.end401
  %349 = load i32, i32* %channel.addr, align 4, !dbg !7787
  %and407 = and i32 %349, 4, !dbg !7789
  %tobool408 = icmp ne i32 %and407, 0, !dbg !7789
  br i1 %tobool408, label %if.then409, label %if.end411, !dbg !7790

if.then409:                                       ; preds = %if.end406
  %blue410 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 7, !dbg !7791
  store float 0.000000e+00, float* %blue410, align 8, !dbg !7792
  br label %if.end411, !dbg !7793

if.end411:                                        ; preds = %if.then409, %if.end406
  %350 = load i32, i32* %channel.addr, align 4, !dbg !7794
  %and412 = and i32 %350, 32, !dbg !7796
  %tobool413 = icmp ne i32 %and412, 0, !dbg !7796
  br i1 %tobool413, label %if.then414, label %if.end416, !dbg !7797

if.then414:                                       ; preds = %if.end411
  %index415 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 9, !dbg !7798
  store float 0.000000e+00, float* %index415, align 8, !dbg !7799
  br label %if.end416, !dbg !7800

if.end416:                                        ; preds = %if.then414, %if.end411
  %351 = load i32, i32* %channel.addr, align 4, !dbg !7801
  %and417 = and i32 %351, 8, !dbg !7803
  %tobool418 = icmp ne i32 %and417, 0, !dbg !7803
  br i1 %tobool418, label %if.then419, label %if.end421, !dbg !7804

if.then419:                                       ; preds = %if.end416
  %opacity420 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 8, !dbg !7805
  store float 0.000000e+00, float* %opacity420, align 4, !dbg !7806
  br label %if.end421, !dbg !7807

if.end421:                                        ; preds = %if.then419, %if.end416
  store double 0.000000e+00, double* %denominator, align 8, !dbg !7808
  store i64 0, i64* %k, align 8, !dbg !7809
  br label %for.cond422, !dbg !7811

for.cond422:                                      ; preds = %for.inc, %if.end421
  %352 = load i64, i64* %k, align 8, !dbg !7812
  %353 = load i64, i64* %number_arguments.addr, align 8, !dbg !7814
  %cmp423 = icmp ult i64 %352, %353, !dbg !7815
  br i1 %cmp423, label %for.body425, label %for.end, !dbg !7816

for.body425:                                      ; preds = %for.cond422
  call void @llvm.dbg.declare(metadata i64* %x426, metadata !7817, metadata !DIExpression()), !dbg !7819
  %354 = load i64, i64* %k, align 8, !dbg !7820
  %add427 = add nsw i64 %354, 2, !dbg !7821
  store i64 %add427, i64* %x426, align 8, !dbg !7819
  call void @llvm.dbg.declare(metadata double* %weight, metadata !7822, metadata !DIExpression()), !dbg !7823
  %355 = load i64, i64* %i, align 8, !dbg !7824
  %conv428 = sitofp i64 %355 to double, !dbg !7825
  %356 = load double*, double** %arguments.addr, align 8, !dbg !7826
  %357 = load i64, i64* %k, align 8, !dbg !7827
  %arrayidx429 = getelementptr inbounds double, double* %356, i64 %357, !dbg !7826
  %358 = load double, double* %arrayidx429, align 8, !dbg !7826
  %sub = fsub double %conv428, %358, !dbg !7828
  %359 = load i64, i64* %i, align 8, !dbg !7829
  %conv430 = sitofp i64 %359 to double, !dbg !7830
  %360 = load double*, double** %arguments.addr, align 8, !dbg !7831
  %361 = load i64, i64* %k, align 8, !dbg !7832
  %arrayidx431 = getelementptr inbounds double, double* %360, i64 %361, !dbg !7831
  %362 = load double, double* %arrayidx431, align 8, !dbg !7831
  %sub432 = fsub double %conv430, %362, !dbg !7833
  %mul433 = fmul double %sub, %sub432, !dbg !7834
  %363 = load i64, i64* %j, align 8, !dbg !7835
  %conv434 = sitofp i64 %363 to double, !dbg !7836
  %364 = load double*, double** %arguments.addr, align 8, !dbg !7837
  %365 = load i64, i64* %k, align 8, !dbg !7838
  %add435 = add i64 %365, 1, !dbg !7839
  %arrayidx436 = getelementptr inbounds double, double* %364, i64 %add435, !dbg !7837
  %366 = load double, double* %arrayidx436, align 8, !dbg !7837
  %sub437 = fsub double %conv434, %366, !dbg !7840
  %367 = load i64, i64* %j, align 8, !dbg !7841
  %conv438 = sitofp i64 %367 to double, !dbg !7842
  %368 = load double*, double** %arguments.addr, align 8, !dbg !7843
  %369 = load i64, i64* %k, align 8, !dbg !7844
  %add439 = add i64 %369, 1, !dbg !7845
  %arrayidx440 = getelementptr inbounds double, double* %368, i64 %add439, !dbg !7843
  %370 = load double, double* %arrayidx440, align 8, !dbg !7843
  %sub441 = fsub double %conv438, %370, !dbg !7846
  %mul442 = fmul double %sub437, %sub441, !dbg !7847
  %add443 = fadd double %mul433, %mul442, !dbg !7848
  store double %add443, double* %weight, align 8, !dbg !7823
  %371 = load double, double* %weight, align 8, !dbg !7849
  %372 = load double*, double** %coeff, align 8, !dbg !7850
  %arrayidx444 = getelementptr inbounds double, double* %372, i64 0, !dbg !7850
  %373 = load double, double* %arrayidx444, align 8, !dbg !7850
  %call445 = call double @pow(double %371, double %373) #6, !dbg !7851
  store double %call445, double* %weight, align 8, !dbg !7852
  %374 = load double, double* %weight, align 8, !dbg !7853
  %cmp446 = fcmp olt double %374, 1.000000e+00, !dbg !7854
  br i1 %cmp446, label %cond.true, label %cond.false, !dbg !7855

cond.true:                                        ; preds = %for.body425
  br label %cond.end, !dbg !7855

cond.false:                                       ; preds = %for.body425
  %375 = load double, double* %weight, align 8, !dbg !7856
  %div = fdiv double 1.000000e+00, %375, !dbg !7857
  br label %cond.end, !dbg !7855

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi double [ 1.000000e+00, %cond.true ], [ %div, %cond.false ], !dbg !7855
  store double %cond, double* %weight, align 8, !dbg !7858
  %376 = load i32, i32* %channel.addr, align 4, !dbg !7859
  %and448 = and i32 %376, 1, !dbg !7861
  %tobool449 = icmp ne i32 %and448, 0, !dbg !7861
  br i1 %tobool449, label %if.then450, label %if.end458, !dbg !7862

if.then450:                                       ; preds = %cond.end
  %377 = load double*, double** %arguments.addr, align 8, !dbg !7863
  %378 = load i64, i64* %x426, align 8, !dbg !7864
  %inc451 = add nsw i64 %378, 1, !dbg !7864
  store i64 %inc451, i64* %x426, align 8, !dbg !7864
  %arrayidx452 = getelementptr inbounds double, double* %377, i64 %378, !dbg !7863
  %379 = load double, double* %arrayidx452, align 8, !dbg !7863
  %380 = load double, double* %weight, align 8, !dbg !7865
  %mul453 = fmul double %379, %380, !dbg !7866
  %red454 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 5, !dbg !7867
  %381 = load float, float* %red454, align 8, !dbg !7868
  %conv455 = fpext float %381 to double, !dbg !7868
  %add456 = fadd double %conv455, %mul453, !dbg !7868
  %conv457 = fptrunc double %add456 to float, !dbg !7868
  store float %conv457, float* %red454, align 8, !dbg !7868
  br label %if.end458, !dbg !7869

if.end458:                                        ; preds = %if.then450, %cond.end
  %382 = load i32, i32* %channel.addr, align 4, !dbg !7870
  %and459 = and i32 %382, 2, !dbg !7872
  %tobool460 = icmp ne i32 %and459, 0, !dbg !7872
  br i1 %tobool460, label %if.then461, label %if.end469, !dbg !7873

if.then461:                                       ; preds = %if.end458
  %383 = load double*, double** %arguments.addr, align 8, !dbg !7874
  %384 = load i64, i64* %x426, align 8, !dbg !7875
  %inc462 = add nsw i64 %384, 1, !dbg !7875
  store i64 %inc462, i64* %x426, align 8, !dbg !7875
  %arrayidx463 = getelementptr inbounds double, double* %383, i64 %384, !dbg !7874
  %385 = load double, double* %arrayidx463, align 8, !dbg !7874
  %386 = load double, double* %weight, align 8, !dbg !7876
  %mul464 = fmul double %385, %386, !dbg !7877
  %green465 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 6, !dbg !7878
  %387 = load float, float* %green465, align 4, !dbg !7879
  %conv466 = fpext float %387 to double, !dbg !7879
  %add467 = fadd double %conv466, %mul464, !dbg !7879
  %conv468 = fptrunc double %add467 to float, !dbg !7879
  store float %conv468, float* %green465, align 4, !dbg !7879
  br label %if.end469, !dbg !7880

if.end469:                                        ; preds = %if.then461, %if.end458
  %388 = load i32, i32* %channel.addr, align 4, !dbg !7881
  %and470 = and i32 %388, 4, !dbg !7883
  %tobool471 = icmp ne i32 %and470, 0, !dbg !7883
  br i1 %tobool471, label %if.then472, label %if.end480, !dbg !7884

if.then472:                                       ; preds = %if.end469
  %389 = load double*, double** %arguments.addr, align 8, !dbg !7885
  %390 = load i64, i64* %x426, align 8, !dbg !7886
  %inc473 = add nsw i64 %390, 1, !dbg !7886
  store i64 %inc473, i64* %x426, align 8, !dbg !7886
  %arrayidx474 = getelementptr inbounds double, double* %389, i64 %390, !dbg !7885
  %391 = load double, double* %arrayidx474, align 8, !dbg !7885
  %392 = load double, double* %weight, align 8, !dbg !7887
  %mul475 = fmul double %391, %392, !dbg !7888
  %blue476 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 7, !dbg !7889
  %393 = load float, float* %blue476, align 8, !dbg !7890
  %conv477 = fpext float %393 to double, !dbg !7890
  %add478 = fadd double %conv477, %mul475, !dbg !7890
  %conv479 = fptrunc double %add478 to float, !dbg !7890
  store float %conv479, float* %blue476, align 8, !dbg !7890
  br label %if.end480, !dbg !7891

if.end480:                                        ; preds = %if.then472, %if.end469
  %394 = load i32, i32* %channel.addr, align 4, !dbg !7892
  %and481 = and i32 %394, 32, !dbg !7894
  %tobool482 = icmp ne i32 %and481, 0, !dbg !7894
  br i1 %tobool482, label %if.then483, label %if.end491, !dbg !7895

if.then483:                                       ; preds = %if.end480
  %395 = load double*, double** %arguments.addr, align 8, !dbg !7896
  %396 = load i64, i64* %x426, align 8, !dbg !7897
  %inc484 = add nsw i64 %396, 1, !dbg !7897
  store i64 %inc484, i64* %x426, align 8, !dbg !7897
  %arrayidx485 = getelementptr inbounds double, double* %395, i64 %396, !dbg !7896
  %397 = load double, double* %arrayidx485, align 8, !dbg !7896
  %398 = load double, double* %weight, align 8, !dbg !7898
  %mul486 = fmul double %397, %398, !dbg !7899
  %index487 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 9, !dbg !7900
  %399 = load float, float* %index487, align 8, !dbg !7901
  %conv488 = fpext float %399 to double, !dbg !7901
  %add489 = fadd double %conv488, %mul486, !dbg !7901
  %conv490 = fptrunc double %add489 to float, !dbg !7901
  store float %conv490, float* %index487, align 8, !dbg !7901
  br label %if.end491, !dbg !7902

if.end491:                                        ; preds = %if.then483, %if.end480
  %400 = load i32, i32* %channel.addr, align 4, !dbg !7903
  %and492 = and i32 %400, 8, !dbg !7905
  %tobool493 = icmp ne i32 %and492, 0, !dbg !7905
  br i1 %tobool493, label %if.then494, label %if.end502, !dbg !7906

if.then494:                                       ; preds = %if.end491
  %401 = load double*, double** %arguments.addr, align 8, !dbg !7907
  %402 = load i64, i64* %x426, align 8, !dbg !7908
  %inc495 = add nsw i64 %402, 1, !dbg !7908
  store i64 %inc495, i64* %x426, align 8, !dbg !7908
  %arrayidx496 = getelementptr inbounds double, double* %401, i64 %402, !dbg !7907
  %403 = load double, double* %arrayidx496, align 8, !dbg !7907
  %404 = load double, double* %weight, align 8, !dbg !7909
  %mul497 = fmul double %403, %404, !dbg !7910
  %opacity498 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 8, !dbg !7911
  %405 = load float, float* %opacity498, align 4, !dbg !7912
  %conv499 = fpext float %405 to double, !dbg !7912
  %add500 = fadd double %conv499, %mul497, !dbg !7912
  %conv501 = fptrunc double %add500 to float, !dbg !7912
  store float %conv501, float* %opacity498, align 4, !dbg !7912
  br label %if.end502, !dbg !7913

if.end502:                                        ; preds = %if.then494, %if.end491
  %406 = load double, double* %weight, align 8, !dbg !7914
  %407 = load double, double* %denominator, align 8, !dbg !7915
  %add503 = fadd double %407, %406, !dbg !7915
  store double %add503, double* %denominator, align 8, !dbg !7915
  br label %for.inc, !dbg !7916

for.inc:                                          ; preds = %if.end502
  %408 = load i64, i64* %number_colors, align 8, !dbg !7917
  %add504 = add i64 2, %408, !dbg !7918
  %409 = load i64, i64* %k, align 8, !dbg !7919
  %add505 = add i64 %409, %add504, !dbg !7919
  store i64 %add505, i64* %k, align 8, !dbg !7919
  br label %for.cond422, !dbg !7920, !llvm.loop !7921

for.end:                                          ; preds = %for.cond422
  %410 = load i32, i32* %channel.addr, align 4, !dbg !7923
  %and506 = and i32 %410, 1, !dbg !7925
  %tobool507 = icmp ne i32 %and506, 0, !dbg !7925
  br i1 %tobool507, label %if.then508, label %if.end513, !dbg !7926

if.then508:                                       ; preds = %for.end
  %411 = load double, double* %denominator, align 8, !dbg !7927
  %red509 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 5, !dbg !7928
  %412 = load float, float* %red509, align 8, !dbg !7929
  %conv510 = fpext float %412 to double, !dbg !7929
  %div511 = fdiv double %conv510, %411, !dbg !7929
  %conv512 = fptrunc double %div511 to float, !dbg !7929
  store float %conv512, float* %red509, align 8, !dbg !7929
  br label %if.end513, !dbg !7930

if.end513:                                        ; preds = %if.then508, %for.end
  %413 = load i32, i32* %channel.addr, align 4, !dbg !7931
  %and514 = and i32 %413, 2, !dbg !7933
  %tobool515 = icmp ne i32 %and514, 0, !dbg !7933
  br i1 %tobool515, label %if.then516, label %if.end521, !dbg !7934

if.then516:                                       ; preds = %if.end513
  %414 = load double, double* %denominator, align 8, !dbg !7935
  %green517 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 6, !dbg !7936
  %415 = load float, float* %green517, align 4, !dbg !7937
  %conv518 = fpext float %415 to double, !dbg !7937
  %div519 = fdiv double %conv518, %414, !dbg !7937
  %conv520 = fptrunc double %div519 to float, !dbg !7937
  store float %conv520, float* %green517, align 4, !dbg !7937
  br label %if.end521, !dbg !7938

if.end521:                                        ; preds = %if.then516, %if.end513
  %416 = load i32, i32* %channel.addr, align 4, !dbg !7939
  %and522 = and i32 %416, 4, !dbg !7941
  %tobool523 = icmp ne i32 %and522, 0, !dbg !7941
  br i1 %tobool523, label %if.then524, label %if.end529, !dbg !7942

if.then524:                                       ; preds = %if.end521
  %417 = load double, double* %denominator, align 8, !dbg !7943
  %blue525 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 7, !dbg !7944
  %418 = load float, float* %blue525, align 8, !dbg !7945
  %conv526 = fpext float %418 to double, !dbg !7945
  %div527 = fdiv double %conv526, %417, !dbg !7945
  %conv528 = fptrunc double %div527 to float, !dbg !7945
  store float %conv528, float* %blue525, align 8, !dbg !7945
  br label %if.end529, !dbg !7946

if.end529:                                        ; preds = %if.then524, %if.end521
  %419 = load i32, i32* %channel.addr, align 4, !dbg !7947
  %and530 = and i32 %419, 32, !dbg !7949
  %tobool531 = icmp ne i32 %and530, 0, !dbg !7949
  br i1 %tobool531, label %if.then532, label %if.end537, !dbg !7950

if.then532:                                       ; preds = %if.end529
  %420 = load double, double* %denominator, align 8, !dbg !7951
  %index533 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 9, !dbg !7952
  %421 = load float, float* %index533, align 8, !dbg !7953
  %conv534 = fpext float %421 to double, !dbg !7953
  %div535 = fdiv double %conv534, %420, !dbg !7953
  %conv536 = fptrunc double %div535 to float, !dbg !7953
  store float %conv536, float* %index533, align 8, !dbg !7953
  br label %if.end537, !dbg !7954

if.end537:                                        ; preds = %if.then532, %if.end529
  %422 = load i32, i32* %channel.addr, align 4, !dbg !7955
  %and538 = and i32 %422, 8, !dbg !7957
  %tobool539 = icmp ne i32 %and538, 0, !dbg !7957
  br i1 %tobool539, label %if.then540, label %if.end545, !dbg !7958

if.then540:                                       ; preds = %if.end537
  %423 = load double, double* %denominator, align 8, !dbg !7959
  %opacity541 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 8, !dbg !7960
  %424 = load float, float* %opacity541, align 4, !dbg !7961
  %conv542 = fpext float %424 to double, !dbg !7961
  %div543 = fdiv double %conv542, %423, !dbg !7961
  %conv544 = fptrunc double %div543 to float, !dbg !7961
  store float %conv544, float* %opacity541, align 4, !dbg !7961
  br label %if.end545, !dbg !7962

if.end545:                                        ; preds = %if.then540, %if.end537
  br label %sw.epilog620, !dbg !7963

sw.bb546:                                         ; preds = %for.body183
  br label %sw.default547, !dbg !7964

sw.default547:                                    ; preds = %for.body183, %sw.bb546
  call void @llvm.dbg.declare(metadata i64* %k548, metadata !7965, metadata !DIExpression()), !dbg !7967
  call void @llvm.dbg.declare(metadata double* %minimum, metadata !7968, metadata !DIExpression()), !dbg !7969
  store double 0x7FEFFFFFFFFFFFFF, double* %minimum, align 8, !dbg !7969
  store i64 0, i64* %k548, align 8, !dbg !7970
  br label %for.cond549, !dbg !7972

for.cond549:                                      ; preds = %for.inc616, %sw.default547
  %425 = load i64, i64* %k548, align 8, !dbg !7973
  %426 = load i64, i64* %number_arguments.addr, align 8, !dbg !7975
  %cmp550 = icmp ult i64 %425, %426, !dbg !7976
  br i1 %cmp550, label %for.body552, label %for.end619, !dbg !7977

for.body552:                                      ; preds = %for.cond549
  call void @llvm.dbg.declare(metadata double* %distance, metadata !7978, metadata !DIExpression()), !dbg !7980
  %427 = load i64, i64* %i, align 8, !dbg !7981
  %conv553 = sitofp i64 %427 to double, !dbg !7982
  %428 = load double*, double** %arguments.addr, align 8, !dbg !7983
  %429 = load i64, i64* %k548, align 8, !dbg !7984
  %arrayidx554 = getelementptr inbounds double, double* %428, i64 %429, !dbg !7983
  %430 = load double, double* %arrayidx554, align 8, !dbg !7983
  %sub555 = fsub double %conv553, %430, !dbg !7985
  %431 = load i64, i64* %i, align 8, !dbg !7986
  %conv556 = sitofp i64 %431 to double, !dbg !7987
  %432 = load double*, double** %arguments.addr, align 8, !dbg !7988
  %433 = load i64, i64* %k548, align 8, !dbg !7989
  %arrayidx557 = getelementptr inbounds double, double* %432, i64 %433, !dbg !7988
  %434 = load double, double* %arrayidx557, align 8, !dbg !7988
  %sub558 = fsub double %conv556, %434, !dbg !7990
  %mul559 = fmul double %sub555, %sub558, !dbg !7991
  %435 = load i64, i64* %j, align 8, !dbg !7992
  %conv560 = sitofp i64 %435 to double, !dbg !7993
  %436 = load double*, double** %arguments.addr, align 8, !dbg !7994
  %437 = load i64, i64* %k548, align 8, !dbg !7995
  %add561 = add i64 %437, 1, !dbg !7996
  %arrayidx562 = getelementptr inbounds double, double* %436, i64 %add561, !dbg !7994
  %438 = load double, double* %arrayidx562, align 8, !dbg !7994
  %sub563 = fsub double %conv560, %438, !dbg !7997
  %439 = load i64, i64* %j, align 8, !dbg !7998
  %conv564 = sitofp i64 %439 to double, !dbg !7999
  %440 = load double*, double** %arguments.addr, align 8, !dbg !8000
  %441 = load i64, i64* %k548, align 8, !dbg !8001
  %add565 = add i64 %441, 1, !dbg !8002
  %arrayidx566 = getelementptr inbounds double, double* %440, i64 %add565, !dbg !8000
  %442 = load double, double* %arrayidx566, align 8, !dbg !8000
  %sub567 = fsub double %conv564, %442, !dbg !8003
  %mul568 = fmul double %sub563, %sub567, !dbg !8004
  %add569 = fadd double %mul559, %mul568, !dbg !8005
  store double %add569, double* %distance, align 8, !dbg !7980
  %443 = load double, double* %distance, align 8, !dbg !8006
  %444 = load double, double* %minimum, align 8, !dbg !8008
  %cmp570 = fcmp olt double %443, %444, !dbg !8009
  br i1 %cmp570, label %if.then572, label %if.end615, !dbg !8010

if.then572:                                       ; preds = %for.body552
  call void @llvm.dbg.declare(metadata i64* %x573, metadata !8011, metadata !DIExpression()), !dbg !8013
  %445 = load i64, i64* %k548, align 8, !dbg !8014
  %add574 = add nsw i64 %445, 2, !dbg !8015
  store i64 %add574, i64* %x573, align 8, !dbg !8013
  %446 = load i32, i32* %channel.addr, align 4, !dbg !8016
  %and575 = and i32 %446, 1, !dbg !8018
  %tobool576 = icmp ne i32 %and575, 0, !dbg !8018
  br i1 %tobool576, label %if.then577, label %if.end582, !dbg !8019

if.then577:                                       ; preds = %if.then572
  %447 = load double*, double** %arguments.addr, align 8, !dbg !8020
  %448 = load i64, i64* %x573, align 8, !dbg !8021
  %inc578 = add nsw i64 %448, 1, !dbg !8021
  store i64 %inc578, i64* %x573, align 8, !dbg !8021
  %arrayidx579 = getelementptr inbounds double, double* %447, i64 %448, !dbg !8020
  %449 = load double, double* %arrayidx579, align 8, !dbg !8020
  %conv580 = fptrunc double %449 to float, !dbg !8020
  %red581 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 5, !dbg !8022
  store float %conv580, float* %red581, align 8, !dbg !8023
  br label %if.end582, !dbg !8024

if.end582:                                        ; preds = %if.then577, %if.then572
  %450 = load i32, i32* %channel.addr, align 4, !dbg !8025
  %and583 = and i32 %450, 2, !dbg !8027
  %tobool584 = icmp ne i32 %and583, 0, !dbg !8027
  br i1 %tobool584, label %if.then585, label %if.end590, !dbg !8028

if.then585:                                       ; preds = %if.end582
  %451 = load double*, double** %arguments.addr, align 8, !dbg !8029
  %452 = load i64, i64* %x573, align 8, !dbg !8030
  %inc586 = add nsw i64 %452, 1, !dbg !8030
  store i64 %inc586, i64* %x573, align 8, !dbg !8030
  %arrayidx587 = getelementptr inbounds double, double* %451, i64 %452, !dbg !8029
  %453 = load double, double* %arrayidx587, align 8, !dbg !8029
  %conv588 = fptrunc double %453 to float, !dbg !8029
  %green589 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 6, !dbg !8031
  store float %conv588, float* %green589, align 4, !dbg !8032
  br label %if.end590, !dbg !8033

if.end590:                                        ; preds = %if.then585, %if.end582
  %454 = load i32, i32* %channel.addr, align 4, !dbg !8034
  %and591 = and i32 %454, 4, !dbg !8036
  %tobool592 = icmp ne i32 %and591, 0, !dbg !8036
  br i1 %tobool592, label %if.then593, label %if.end598, !dbg !8037

if.then593:                                       ; preds = %if.end590
  %455 = load double*, double** %arguments.addr, align 8, !dbg !8038
  %456 = load i64, i64* %x573, align 8, !dbg !8039
  %inc594 = add nsw i64 %456, 1, !dbg !8039
  store i64 %inc594, i64* %x573, align 8, !dbg !8039
  %arrayidx595 = getelementptr inbounds double, double* %455, i64 %456, !dbg !8038
  %457 = load double, double* %arrayidx595, align 8, !dbg !8038
  %conv596 = fptrunc double %457 to float, !dbg !8038
  %blue597 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 7, !dbg !8040
  store float %conv596, float* %blue597, align 8, !dbg !8041
  br label %if.end598, !dbg !8042

if.end598:                                        ; preds = %if.then593, %if.end590
  %458 = load i32, i32* %channel.addr, align 4, !dbg !8043
  %and599 = and i32 %458, 32, !dbg !8045
  %tobool600 = icmp ne i32 %and599, 0, !dbg !8045
  br i1 %tobool600, label %if.then601, label %if.end606, !dbg !8046

if.then601:                                       ; preds = %if.end598
  %459 = load double*, double** %arguments.addr, align 8, !dbg !8047
  %460 = load i64, i64* %x573, align 8, !dbg !8048
  %inc602 = add nsw i64 %460, 1, !dbg !8048
  store i64 %inc602, i64* %x573, align 8, !dbg !8048
  %arrayidx603 = getelementptr inbounds double, double* %459, i64 %460, !dbg !8047
  %461 = load double, double* %arrayidx603, align 8, !dbg !8047
  %conv604 = fptrunc double %461 to float, !dbg !8047
  %index605 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 9, !dbg !8049
  store float %conv604, float* %index605, align 8, !dbg !8050
  br label %if.end606, !dbg !8051

if.end606:                                        ; preds = %if.then601, %if.end598
  %462 = load i32, i32* %channel.addr, align 4, !dbg !8052
  %and607 = and i32 %462, 8, !dbg !8054
  %tobool608 = icmp ne i32 %and607, 0, !dbg !8054
  br i1 %tobool608, label %if.then609, label %if.end614, !dbg !8055

if.then609:                                       ; preds = %if.end606
  %463 = load double*, double** %arguments.addr, align 8, !dbg !8056
  %464 = load i64, i64* %x573, align 8, !dbg !8057
  %inc610 = add nsw i64 %464, 1, !dbg !8057
  store i64 %inc610, i64* %x573, align 8, !dbg !8057
  %arrayidx611 = getelementptr inbounds double, double* %463, i64 %464, !dbg !8056
  %465 = load double, double* %arrayidx611, align 8, !dbg !8056
  %conv612 = fptrunc double %465 to float, !dbg !8056
  %opacity613 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 8, !dbg !8058
  store float %conv612, float* %opacity613, align 4, !dbg !8059
  br label %if.end614, !dbg !8060

if.end614:                                        ; preds = %if.then609, %if.end606
  %466 = load double, double* %distance, align 8, !dbg !8061
  store double %466, double* %minimum, align 8, !dbg !8062
  br label %if.end615, !dbg !8063

if.end615:                                        ; preds = %if.end614, %for.body552
  br label %for.inc616, !dbg !8064

for.inc616:                                       ; preds = %if.end615
  %467 = load i64, i64* %number_colors, align 8, !dbg !8065
  %add617 = add i64 2, %467, !dbg !8066
  %468 = load i64, i64* %k548, align 8, !dbg !8067
  %add618 = add i64 %468, %add617, !dbg !8067
  store i64 %add618, i64* %k548, align 8, !dbg !8067
  br label %for.cond549, !dbg !8068, !llvm.loop !8069

for.end619:                                       ; preds = %for.cond549
  br label %sw.epilog620, !dbg !8071

sw.epilog620:                                     ; preds = %for.end619, %if.end545, %if.end395, %if.end268
  %469 = load i32, i32* %channel.addr, align 4, !dbg !8072
  %and621 = and i32 %469, 1, !dbg !8074
  %tobool622 = icmp ne i32 %and621, 0, !dbg !8074
  br i1 %tobool622, label %if.then623, label %if.end626, !dbg !8075

if.then623:                                       ; preds = %sw.epilog620
  %red624 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 5, !dbg !8076
  %470 = load float, float* %red624, align 8, !dbg !8077
  %mul625 = fmul float %470, 6.553500e+04, !dbg !8077
  store float %mul625, float* %red624, align 8, !dbg !8077
  br label %if.end626, !dbg !8078

if.end626:                                        ; preds = %if.then623, %sw.epilog620
  %471 = load i32, i32* %channel.addr, align 4, !dbg !8079
  %and627 = and i32 %471, 2, !dbg !8081
  %tobool628 = icmp ne i32 %and627, 0, !dbg !8081
  br i1 %tobool628, label %if.then629, label %if.end632, !dbg !8082

if.then629:                                       ; preds = %if.end626
  %green630 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 6, !dbg !8083
  %472 = load float, float* %green630, align 4, !dbg !8084
  %mul631 = fmul float %472, 6.553500e+04, !dbg !8084
  store float %mul631, float* %green630, align 4, !dbg !8084
  br label %if.end632, !dbg !8085

if.end632:                                        ; preds = %if.then629, %if.end626
  %473 = load i32, i32* %channel.addr, align 4, !dbg !8086
  %and633 = and i32 %473, 4, !dbg !8088
  %tobool634 = icmp ne i32 %and633, 0, !dbg !8088
  br i1 %tobool634, label %if.then635, label %if.end638, !dbg !8089

if.then635:                                       ; preds = %if.end632
  %blue636 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 7, !dbg !8090
  %474 = load float, float* %blue636, align 8, !dbg !8091
  %mul637 = fmul float %474, 6.553500e+04, !dbg !8091
  store float %mul637, float* %blue636, align 8, !dbg !8091
  br label %if.end638, !dbg !8092

if.end638:                                        ; preds = %if.then635, %if.end632
  %475 = load i32, i32* %channel.addr, align 4, !dbg !8093
  %and639 = and i32 %475, 32, !dbg !8095
  %tobool640 = icmp ne i32 %and639, 0, !dbg !8095
  br i1 %tobool640, label %if.then641, label %if.end644, !dbg !8096

if.then641:                                       ; preds = %if.end638
  %index642 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 9, !dbg !8097
  %476 = load float, float* %index642, align 8, !dbg !8098
  %mul643 = fmul float %476, 6.553500e+04, !dbg !8098
  store float %mul643, float* %index642, align 8, !dbg !8098
  br label %if.end644, !dbg !8099

if.end644:                                        ; preds = %if.then641, %if.end638
  %477 = load i32, i32* %channel.addr, align 4, !dbg !8100
  %and645 = and i32 %477, 8, !dbg !8102
  %tobool646 = icmp ne i32 %and645, 0, !dbg !8102
  br i1 %tobool646, label %if.then647, label %if.end650, !dbg !8103

if.then647:                                       ; preds = %if.end644
  %opacity648 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 8, !dbg !8104
  %478 = load float, float* %opacity648, align 4, !dbg !8105
  %mul649 = fmul float %478, 6.553500e+04, !dbg !8105
  store float %mul649, float* %opacity648, align 4, !dbg !8105
  br label %if.end650, !dbg !8106

if.end650:                                        ; preds = %if.then647, %if.end644
  %479 = load %struct._Image*, %struct._Image** %sparse_image, align 8, !dbg !8107
  %480 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !8108
  %481 = load i16*, i16** %indexes, align 8, !dbg !8109
  call void @SetPixelPacket(%struct._Image* %479, %struct._MagickPixelPacket* %pixel, %struct._PixelPacket* %480, i16* %481), !dbg !8110
  %482 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !8111
  %incdec.ptr = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %482, i32 1, !dbg !8111
  store %struct._PixelPacket* %incdec.ptr, %struct._PixelPacket** %q, align 8, !dbg !8111
  %483 = load i16*, i16** %indexes, align 8, !dbg !8112
  %incdec.ptr651 = getelementptr inbounds i16, i16* %483, i32 1, !dbg !8112
  store i16* %incdec.ptr651, i16** %indexes, align 8, !dbg !8112
  br label %for.inc652, !dbg !8113

for.inc652:                                       ; preds = %if.end650
  %484 = load i64, i64* %i, align 8, !dbg !8114
  %inc653 = add nsw i64 %484, 1, !dbg !8114
  store i64 %inc653, i64* %i, align 8, !dbg !8114
  br label %for.cond180, !dbg !8115, !llvm.loop !8116

for.end654:                                       ; preds = %for.cond180
  %485 = load %struct._CacheView*, %struct._CacheView** %sparse_view, align 8, !dbg !8118
  %486 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !8119
  %call655 = call i32 @SyncCacheViewAuthenticPixels(%struct._CacheView* %485, %struct._ExceptionInfo* %486), !dbg !8120
  store i32 %call655, i32* %sync, align 4, !dbg !8121
  %487 = load i32, i32* %sync, align 4, !dbg !8122
  %cmp656 = icmp eq i32 %487, 0, !dbg !8124
  br i1 %cmp656, label %if.then658, label %if.end659, !dbg !8125

if.then658:                                       ; preds = %for.end654
  store i32 0, i32* %status, align 4, !dbg !8126
  br label %if.end659, !dbg !8127

if.end659:                                        ; preds = %if.then658, %for.end654
  %488 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8128
  %progress_monitor = getelementptr inbounds %struct._Image, %struct._Image* %488, i32 0, i32 47, !dbg !8130
  %489 = load i32 (i8*, i64, i64, i8*)*, i32 (i8*, i64, i64, i8*)** %progress_monitor, align 8, !dbg !8130
  %cmp660 = icmp ne i32 (i8*, i64, i64, i8*)* %489, null, !dbg !8131
  br i1 %cmp660, label %if.then662, label %if.end670, !dbg !8132

if.then662:                                       ; preds = %if.end659
  call void @llvm.dbg.declare(metadata i32* %proceed, metadata !8133, metadata !DIExpression()), !dbg !8135
  %490 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8136
  %491 = load i64, i64* %progress, align 8, !dbg !8137
  %inc663 = add nsw i64 %491, 1, !dbg !8137
  store i64 %inc663, i64* %progress, align 8, !dbg !8137
  %492 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8138
  %rows664 = getelementptr inbounds %struct._Image, %struct._Image* %492, i32 0, i32 8, !dbg !8139
  %493 = load i64, i64* %rows664, align 8, !dbg !8139
  %call665 = call i32 @SetImageProgress(%struct._Image* %490, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.117, i64 0, i64 0), i64 %491, i64 %493), !dbg !8140
  store i32 %call665, i32* %proceed, align 4, !dbg !8141
  %494 = load i32, i32* %proceed, align 4, !dbg !8142
  %cmp666 = icmp eq i32 %494, 0, !dbg !8144
  br i1 %cmp666, label %if.then668, label %if.end669, !dbg !8145

if.then668:                                       ; preds = %if.then662
  store i32 0, i32* %status, align 4, !dbg !8146
  br label %if.end669, !dbg !8147

if.end669:                                        ; preds = %if.then668, %if.then662
  br label %if.end670, !dbg !8148

if.end670:                                        ; preds = %if.end669, %if.end659
  br label %for.inc671, !dbg !8149

for.inc671:                                       ; preds = %if.end670, %if.then177
  %495 = load i64, i64* %j, align 8, !dbg !8150
  %inc672 = add nsw i64 %495, 1, !dbg !8150
  store i64 %inc672, i64* %j, align 8, !dbg !8150
  br label %for.cond, !dbg !8151, !llvm.loop !8152

for.end673:                                       ; preds = %for.cond
  %496 = load %struct._CacheView*, %struct._CacheView** %sparse_view, align 8, !dbg !8154
  %call674 = call %struct._CacheView* @DestroyCacheView(%struct._CacheView* %496), !dbg !8155
  store %struct._CacheView* %call674, %struct._CacheView** %sparse_view, align 8, !dbg !8156
  %497 = load i32, i32* %status, align 4, !dbg !8157
  %cmp675 = icmp eq i32 %497, 0, !dbg !8159
  br i1 %cmp675, label %if.then677, label %if.end679, !dbg !8160

if.then677:                                       ; preds = %for.end673
  %498 = load %struct._Image*, %struct._Image** %sparse_image, align 8, !dbg !8161
  %call678 = call %struct._Image* @DestroyImage(%struct._Image* %498), !dbg !8162
  store %struct._Image* %call678, %struct._Image** %sparse_image, align 8, !dbg !8163
  br label %if.end679, !dbg !8164

if.end679:                                        ; preds = %if.then677, %for.end673
  %499 = load double*, double** %coeff, align 8, !dbg !8165
  %500 = bitcast double* %499 to i8*, !dbg !8165
  %call680 = call i8* @RelinquishMagickMemory(i8* %500), !dbg !8166
  %501 = bitcast i8* %call680 to double*, !dbg !8167
  store double* %501, double** %coeff, align 8, !dbg !8168
  %502 = load %struct._Image*, %struct._Image** %sparse_image, align 8, !dbg !8169
  store %struct._Image* %502, %struct._Image** %retval, align 8, !dbg !8170
  br label %return, !dbg !8170

return:                                           ; preds = %if.end679, %if.then169, %if.then165, %if.then28
  %503 = load %struct._Image*, %struct._Image** %retval, align 8, !dbg !8171
  ret %struct._Image* %503, !dbg !8171
}

declare dso_local %struct._PixelPacket* @GetCacheViewAuthenticPixels(%struct._CacheView*, i64, i64, i64, i64, %struct._ExceptionInfo*) #2

; Function Attrs: noinline nounwind uwtable
define internal i64 @poly_number_terms(double %order) #0 !dbg !8172 {
entry:
  %retval = alloca i64, align 8
  %order.addr = alloca double, align 8
  store double %order, double* %order.addr, align 8
  call void @llvm.dbg.declare(metadata double* %order.addr, metadata !8175, metadata !DIExpression()), !dbg !8176
  %0 = load double, double* %order.addr, align 8, !dbg !8177
  %cmp = fcmp olt double %0, 1.000000e+00, !dbg !8179
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !8180

lor.lhs.false:                                    ; preds = %entry
  %1 = load double, double* %order.addr, align 8, !dbg !8181
  %cmp1 = fcmp ogt double %1, 5.000000e+00, !dbg !8182
  br i1 %cmp1, label %if.then, label %lor.lhs.false2, !dbg !8183

lor.lhs.false2:                                   ; preds = %lor.lhs.false
  %2 = load double, double* %order.addr, align 8, !dbg !8184
  %3 = load double, double* %order.addr, align 8, !dbg !8185
  %4 = call double @llvm.floor.f64(double %3), !dbg !8186
  %cmp3 = fcmp une double %2, %4, !dbg !8187
  br i1 %cmp3, label %land.lhs.true, label %if.end, !dbg !8188

land.lhs.true:                                    ; preds = %lor.lhs.false2
  %5 = load double, double* %order.addr, align 8, !dbg !8189
  %sub = fsub double %5, 1.500000e+00, !dbg !8190
  %cmp4 = fcmp ogt double %sub, 1.000000e-15, !dbg !8191
  br i1 %cmp4, label %if.then, label %if.end, !dbg !8192

if.then:                                          ; preds = %land.lhs.true, %lor.lhs.false, %entry
  store i64 0, i64* %retval, align 8, !dbg !8193
  br label %return, !dbg !8193

if.end:                                           ; preds = %land.lhs.true, %lor.lhs.false2
  %6 = load double, double* %order.addr, align 8, !dbg !8194
  %add = fadd double %6, 1.000000e+00, !dbg !8195
  %7 = load double, double* %order.addr, align 8, !dbg !8196
  %add5 = fadd double %7, 2.000000e+00, !dbg !8197
  %mul = fmul double %add, %add5, !dbg !8198
  %div = fdiv double %mul, 2.000000e+00, !dbg !8199
  %8 = call double @llvm.floor.f64(double %div), !dbg !8200
  %conv = fptoui double %8 to i64, !dbg !8201
  store i64 %conv, i64* %retval, align 8, !dbg !8202
  br label %return, !dbg !8202

return:                                           ; preds = %if.end, %if.then
  %9 = load i64, i64* %retval, align 8, !dbg !8203
  ret i64 %9, !dbg !8203
}

declare dso_local void @perror(i8*) #2

declare dso_local double** @AcquireMagickMatrix(i64, i64) #2

declare dso_local double** @RelinquishMagickMatrix(double**, i64) #2

declare dso_local void @LeastSquaresAddTerms(double**, double**, double*, double*, i64, i64) #2

declare dso_local i32 @GaussJordanElimination(double**, double**, i64, i64) #2

declare dso_local i8* @CommandOptionToMnemonic(i32, i64) #2

; Function Attrs: noinline nounwind uwtable
define internal void @AffineArgsToCoefficients(double* %affine) #0 !dbg !8204 {
entry:
  %affine.addr = alloca double*, align 8
  %tmp = alloca [4 x double], align 16
  store double* %affine, double** %affine.addr, align 8
  call void @llvm.dbg.declare(metadata double** %affine.addr, metadata !8205, metadata !DIExpression()), !dbg !8206
  call void @llvm.dbg.declare(metadata [4 x double]* %tmp, metadata !8207, metadata !DIExpression()), !dbg !8208
  %0 = load double*, double** %affine.addr, align 8, !dbg !8209
  %arrayidx = getelementptr inbounds double, double* %0, i64 1, !dbg !8209
  %1 = load double, double* %arrayidx, align 8, !dbg !8209
  %arrayidx1 = getelementptr inbounds [4 x double], [4 x double]* %tmp, i64 0, i64 0, !dbg !8210
  store double %1, double* %arrayidx1, align 16, !dbg !8211
  %2 = load double*, double** %affine.addr, align 8, !dbg !8212
  %arrayidx2 = getelementptr inbounds double, double* %2, i64 2, !dbg !8212
  %3 = load double, double* %arrayidx2, align 8, !dbg !8212
  %arrayidx3 = getelementptr inbounds [4 x double], [4 x double]* %tmp, i64 0, i64 1, !dbg !8213
  store double %3, double* %arrayidx3, align 8, !dbg !8214
  %4 = load double*, double** %affine.addr, align 8, !dbg !8215
  %arrayidx4 = getelementptr inbounds double, double* %4, i64 3, !dbg !8215
  %5 = load double, double* %arrayidx4, align 8, !dbg !8215
  %arrayidx5 = getelementptr inbounds [4 x double], [4 x double]* %tmp, i64 0, i64 2, !dbg !8216
  store double %5, double* %arrayidx5, align 16, !dbg !8217
  %6 = load double*, double** %affine.addr, align 8, !dbg !8218
  %arrayidx6 = getelementptr inbounds double, double* %6, i64 4, !dbg !8218
  %7 = load double, double* %arrayidx6, align 8, !dbg !8218
  %arrayidx7 = getelementptr inbounds [4 x double], [4 x double]* %tmp, i64 0, i64 3, !dbg !8219
  store double %7, double* %arrayidx7, align 8, !dbg !8220
  %arrayidx8 = getelementptr inbounds [4 x double], [4 x double]* %tmp, i64 0, i64 0, !dbg !8221
  %8 = load double, double* %arrayidx8, align 16, !dbg !8221
  %9 = load double*, double** %affine.addr, align 8, !dbg !8222
  %arrayidx9 = getelementptr inbounds double, double* %9, i64 3, !dbg !8222
  store double %8, double* %arrayidx9, align 8, !dbg !8223
  %arrayidx10 = getelementptr inbounds [4 x double], [4 x double]* %tmp, i64 0, i64 1, !dbg !8224
  %10 = load double, double* %arrayidx10, align 8, !dbg !8224
  %11 = load double*, double** %affine.addr, align 8, !dbg !8225
  %arrayidx11 = getelementptr inbounds double, double* %11, i64 1, !dbg !8225
  store double %10, double* %arrayidx11, align 8, !dbg !8226
  %arrayidx12 = getelementptr inbounds [4 x double], [4 x double]* %tmp, i64 0, i64 2, !dbg !8227
  %12 = load double, double* %arrayidx12, align 16, !dbg !8227
  %13 = load double*, double** %affine.addr, align 8, !dbg !8228
  %arrayidx13 = getelementptr inbounds double, double* %13, i64 4, !dbg !8228
  store double %12, double* %arrayidx13, align 8, !dbg !8229
  %arrayidx14 = getelementptr inbounds [4 x double], [4 x double]* %tmp, i64 0, i64 3, !dbg !8230
  %14 = load double, double* %arrayidx14, align 8, !dbg !8230
  %15 = load double*, double** %affine.addr, align 8, !dbg !8231
  %arrayidx15 = getelementptr inbounds double, double* %15, i64 2, !dbg !8231
  store double %14, double* %arrayidx15, align 8, !dbg !8232
  ret void, !dbg !8233
}

declare dso_local double @InterpretLocaleValue(i8*, i8**) #2

; Function Attrs: noinline nounwind uwtable
define internal float @AbsolutePixelValue(float %x) #0 !dbg !8234 {
entry:
  %x.addr = alloca float, align 4
  store float %x, float* %x.addr, align 4
  call void @llvm.dbg.declare(metadata float* %x.addr, metadata !8237, metadata !DIExpression()), !dbg !8238
  %0 = load float, float* %x.addr, align 4, !dbg !8239
  %cmp = fcmp olt float %0, 0.000000e+00, !dbg !8240
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !8239

cond.true:                                        ; preds = %entry
  %1 = load float, float* %x.addr, align 4, !dbg !8241
  %fneg = fneg float %1, !dbg !8242
  br label %cond.end, !dbg !8239

cond.false:                                       ; preds = %entry
  %2 = load float, float* %x.addr, align 4, !dbg !8243
  br label %cond.end, !dbg !8239

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %fneg, %cond.true ], [ %2, %cond.false ], !dbg !8239
  ret float %cond, !dbg !8244
}

declare dso_local i64 @GetMagickResourceLimit(i32) #2

; Function Attrs: allocsize(0,1)
declare dso_local i8* @AcquireAlignedMemory(i64, i64) #4

declare dso_local %struct._ResampleFilter* @AcquireResampleFilter(%struct._Image*, %struct._ExceptionInfo*) #2

declare dso_local i32 @SetResampleFilterVirtualPixelMethod(%struct._ResampleFilter*, i32) #2

declare dso_local void @SetResampleFilter(%struct._ResampleFilter*, i32, double) #2

declare dso_local float @DecodePixelGamma(float) #2

; Function Attrs: noinline nounwind uwtable
define internal zeroext i16 @ClampToQuantum(float %value) #0 !dbg !8245 {
entry:
  %retval = alloca i16, align 2
  %value.addr = alloca float, align 4
  store float %value, float* %value.addr, align 4
  call void @llvm.dbg.declare(metadata float* %value.addr, metadata !8248, metadata !DIExpression()), !dbg !8249
  %0 = load float, float* %value.addr, align 4, !dbg !8250
  %cmp = fcmp ole float %0, 0.000000e+00, !dbg !8252
  br i1 %cmp, label %if.then, label %if.end, !dbg !8253

if.then:                                          ; preds = %entry
  store i16 0, i16* %retval, align 2, !dbg !8254
  br label %return, !dbg !8254

if.end:                                           ; preds = %entry
  %1 = load float, float* %value.addr, align 4, !dbg !8255
  %cmp1 = fcmp oge float %1, 6.553500e+04, !dbg !8257
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !8258

if.then2:                                         ; preds = %if.end
  store i16 -1, i16* %retval, align 2, !dbg !8259
  br label %return, !dbg !8259

if.end3:                                          ; preds = %if.end
  %2 = load float, float* %value.addr, align 4, !dbg !8260
  %add = fadd float %2, 5.000000e-01, !dbg !8261
  %conv = fptoui float %add to i16, !dbg !8262
  store i16 %conv, i16* %retval, align 2, !dbg !8263
  br label %return, !dbg !8263

return:                                           ; preds = %if.end3, %if.then2, %if.then
  %3 = load i16, i16* %retval, align 2, !dbg !8264
  ret i16 %3, !dbg !8264
}

; Function Attrs: noinline nounwind uwtable
define internal void @MagickPixelCompositePlus(%struct._MagickPixelPacket* %p, float %alpha, %struct._MagickPixelPacket* %q, float %beta, %struct._MagickPixelPacket* %composite) #0 !dbg !8265 {
entry:
  %p.addr = alloca %struct._MagickPixelPacket*, align 8
  %alpha.addr = alloca float, align 4
  %q.addr = alloca %struct._MagickPixelPacket*, align 8
  %beta.addr = alloca float, align 4
  %composite.addr = alloca %struct._MagickPixelPacket*, align 8
  %gamma = alloca double, align 8
  %Da = alloca float, align 4
  %Sa = alloca float, align 4
  store %struct._MagickPixelPacket* %p, %struct._MagickPixelPacket** %p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %p.addr, metadata !8266, metadata !DIExpression()), !dbg !8267
  store float %alpha, float* %alpha.addr, align 4
  call void @llvm.dbg.declare(metadata float* %alpha.addr, metadata !8268, metadata !DIExpression()), !dbg !8269
  store %struct._MagickPixelPacket* %q, %struct._MagickPixelPacket** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %q.addr, metadata !8270, metadata !DIExpression()), !dbg !8271
  store float %beta, float* %beta.addr, align 4
  call void @llvm.dbg.declare(metadata float* %beta.addr, metadata !8272, metadata !DIExpression()), !dbg !8273
  store %struct._MagickPixelPacket* %composite, %struct._MagickPixelPacket** %composite.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %composite.addr, metadata !8274, metadata !DIExpression()), !dbg !8275
  call void @llvm.dbg.declare(metadata double* %gamma, metadata !8276, metadata !DIExpression()), !dbg !8277
  call void @llvm.dbg.declare(metadata float* %Da, metadata !8278, metadata !DIExpression()), !dbg !8279
  call void @llvm.dbg.declare(metadata float* %Sa, metadata !8280, metadata !DIExpression()), !dbg !8281
  %0 = load float, float* %alpha.addr, align 4, !dbg !8282
  %conv = fpext float %0 to double, !dbg !8282
  %mul = fmul double 0x3EF0001000100010, %conv, !dbg !8283
  %sub = fsub double 1.000000e+00, %mul, !dbg !8284
  %conv1 = fptrunc double %sub to float, !dbg !8285
  store float %conv1, float* %Sa, align 4, !dbg !8286
  %1 = load float, float* %beta.addr, align 4, !dbg !8287
  %conv2 = fpext float %1 to double, !dbg !8287
  %mul3 = fmul double 0x3EF0001000100010, %conv2, !dbg !8288
  %sub4 = fsub double 1.000000e+00, %mul3, !dbg !8289
  %conv5 = fptrunc double %sub4 to float, !dbg !8290
  store float %conv5, float* %Da, align 4, !dbg !8291
  %2 = load float, float* %Sa, align 4, !dbg !8292
  %3 = load float, float* %Da, align 4, !dbg !8293
  %add = fadd float %2, %3, !dbg !8294
  %call = call float @RoundToUnity(float %add), !dbg !8295
  %conv6 = fpext float %call to double, !dbg !8295
  store double %conv6, double* %gamma, align 8, !dbg !8296
  %4 = load double, double* %gamma, align 8, !dbg !8297
  %sub7 = fsub double 1.000000e+00, %4, !dbg !8298
  %mul8 = fmul double 6.553500e+04, %sub7, !dbg !8299
  %conv9 = fptrunc double %mul8 to float, !dbg !8300
  %5 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !8301
  %opacity = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %5, i32 0, i32 8, !dbg !8302
  store float %conv9, float* %opacity, align 4, !dbg !8303
  %6 = load double, double* %gamma, align 8, !dbg !8304
  %call10 = call double @PerceptibleReciprocal(double %6), !dbg !8305
  store double %call10, double* %gamma, align 8, !dbg !8306
  %7 = load double, double* %gamma, align 8, !dbg !8307
  %8 = load float, float* %Sa, align 4, !dbg !8308
  %9 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !8309
  %red = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %9, i32 0, i32 5, !dbg !8310
  %10 = load float, float* %red, align 8, !dbg !8310
  %mul11 = fmul float %8, %10, !dbg !8311
  %11 = load float, float* %Da, align 4, !dbg !8312
  %12 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !8313
  %red12 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %12, i32 0, i32 5, !dbg !8314
  %13 = load float, float* %red12, align 8, !dbg !8314
  %mul13 = fmul float %11, %13, !dbg !8315
  %add14 = fadd float %mul11, %mul13, !dbg !8316
  %conv15 = fpext float %add14 to double, !dbg !8317
  %mul16 = fmul double %7, %conv15, !dbg !8318
  %conv17 = fptrunc double %mul16 to float, !dbg !8307
  %14 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !8319
  %red18 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %14, i32 0, i32 5, !dbg !8320
  store float %conv17, float* %red18, align 8, !dbg !8321
  %15 = load double, double* %gamma, align 8, !dbg !8322
  %16 = load float, float* %Sa, align 4, !dbg !8323
  %17 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !8324
  %green = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %17, i32 0, i32 6, !dbg !8325
  %18 = load float, float* %green, align 4, !dbg !8325
  %mul19 = fmul float %16, %18, !dbg !8326
  %19 = load float, float* %Da, align 4, !dbg !8327
  %20 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !8328
  %green20 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %20, i32 0, i32 6, !dbg !8329
  %21 = load float, float* %green20, align 4, !dbg !8329
  %mul21 = fmul float %19, %21, !dbg !8330
  %add22 = fadd float %mul19, %mul21, !dbg !8331
  %conv23 = fpext float %add22 to double, !dbg !8332
  %mul24 = fmul double %15, %conv23, !dbg !8333
  %conv25 = fptrunc double %mul24 to float, !dbg !8322
  %22 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !8334
  %green26 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %22, i32 0, i32 6, !dbg !8335
  store float %conv25, float* %green26, align 4, !dbg !8336
  %23 = load double, double* %gamma, align 8, !dbg !8337
  %24 = load float, float* %Sa, align 4, !dbg !8338
  %25 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !8339
  %blue = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %25, i32 0, i32 7, !dbg !8340
  %26 = load float, float* %blue, align 8, !dbg !8340
  %mul27 = fmul float %24, %26, !dbg !8341
  %27 = load float, float* %Da, align 4, !dbg !8342
  %28 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !8343
  %blue28 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %28, i32 0, i32 7, !dbg !8344
  %29 = load float, float* %blue28, align 8, !dbg !8344
  %mul29 = fmul float %27, %29, !dbg !8345
  %add30 = fadd float %mul27, %mul29, !dbg !8346
  %conv31 = fpext float %add30 to double, !dbg !8347
  %mul32 = fmul double %23, %conv31, !dbg !8348
  %conv33 = fptrunc double %mul32 to float, !dbg !8337
  %30 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !8349
  %blue34 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %30, i32 0, i32 7, !dbg !8350
  store float %conv33, float* %blue34, align 8, !dbg !8351
  %31 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !8352
  %colorspace = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %31, i32 0, i32 1, !dbg !8354
  %32 = load i32, i32* %colorspace, align 4, !dbg !8354
  %cmp = icmp eq i32 %32, 12, !dbg !8355
  br i1 %cmp, label %if.then, label %if.end, !dbg !8356

if.then:                                          ; preds = %entry
  %33 = load double, double* %gamma, align 8, !dbg !8357
  %34 = load float, float* %Sa, align 4, !dbg !8358
  %35 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !8359
  %index = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %35, i32 0, i32 9, !dbg !8360
  %36 = load float, float* %index, align 8, !dbg !8360
  %mul36 = fmul float %34, %36, !dbg !8361
  %37 = load float, float* %Da, align 4, !dbg !8362
  %38 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !8363
  %index37 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %38, i32 0, i32 9, !dbg !8364
  %39 = load float, float* %index37, align 8, !dbg !8364
  %mul38 = fmul float %37, %39, !dbg !8365
  %add39 = fadd float %mul36, %mul38, !dbg !8366
  %conv40 = fpext float %add39 to double, !dbg !8367
  %mul41 = fmul double %33, %conv40, !dbg !8368
  %conv42 = fptrunc double %mul41 to float, !dbg !8357
  %40 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !8369
  %index43 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %40, i32 0, i32 9, !dbg !8370
  store float %conv42, float* %index43, align 8, !dbg !8371
  br label %if.end, !dbg !8369

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !8372
}

; Function Attrs: noinline nounwind uwtable
define internal float @RoundToUnity(float %value) #0 !dbg !8373 {
entry:
  %value.addr = alloca float, align 4
  store float %value, float* %value.addr, align 4
  call void @llvm.dbg.declare(metadata float* %value.addr, metadata !8374, metadata !DIExpression()), !dbg !8375
  %0 = load float, float* %value.addr, align 4, !dbg !8376
  %conv = fpext float %0 to double, !dbg !8376
  %cmp = fcmp olt double %conv, 0.000000e+00, !dbg !8377
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !8376

cond.true:                                        ; preds = %entry
  br label %cond.end8, !dbg !8376

cond.false:                                       ; preds = %entry
  %1 = load float, float* %value.addr, align 4, !dbg !8378
  %conv2 = fpext float %1 to double, !dbg !8378
  %cmp3 = fcmp ogt double %conv2, 1.000000e+00, !dbg !8379
  br i1 %cmp3, label %cond.true5, label %cond.false6, !dbg !8380

cond.true5:                                       ; preds = %cond.false
  br label %cond.end, !dbg !8380

cond.false6:                                      ; preds = %cond.false
  %2 = load float, float* %value.addr, align 4, !dbg !8381
  %conv7 = fpext float %2 to double, !dbg !8381
  br label %cond.end, !dbg !8380

cond.end:                                         ; preds = %cond.false6, %cond.true5
  %cond = phi double [ 1.000000e+00, %cond.true5 ], [ %conv7, %cond.false6 ], !dbg !8380
  br label %cond.end8, !dbg !8376

cond.end8:                                        ; preds = %cond.end, %cond.true
  %cond9 = phi double [ 0.000000e+00, %cond.true ], [ %cond, %cond.end ], !dbg !8376
  %conv10 = fptrunc double %cond9 to float, !dbg !8382
  ret float %conv10, !dbg !8383
}

declare dso_local %struct._ResampleFilter* @DestroyResampleFilter(%struct._ResampleFilter*) #2

declare dso_local i8* @RelinquishAlignedMemory(i8*) #2

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { allocsize(0,1) "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind willreturn }
attributes #6 = { nounwind }
attributes #7 = { allocsize(0,1) }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!836, !837, !838}
!llvm.ident = !{!839}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2, retainedTypes: !599, splitDebugInlining: false, nameTableKind: None)
!1 = !DIFile(filename: "magick/distort.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!2 = !{!3, !10, !47, !72, !84, !88, !96, !101, !136, !146, !152, !167, !238, !246, !252, !325, !342, !356, !368, !393, !416, !437, !452, !474, !502, !511, !587}
!3 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !4, line: 204, baseType: !5, size: 32, elements: !6)
!4 = !DIFile(filename: "./magick/magick-type.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!5 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!6 = !{!7, !8, !9}
!7 = !DIEnumerator(name: "UndefinedClass", value: 0, isUnsigned: true)
!8 = !DIEnumerator(name: "DirectClass", value: 1, isUnsigned: true)
!9 = !DIEnumerator(name: "PseudoClass", value: 2, isUnsigned: true)
!10 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !11, line: 25, baseType: !5, size: 32, elements: !12)
!11 = !DIFile(filename: "./magick/colorspace.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!12 = !{!13, !14, !15, !16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46}
!13 = !DIEnumerator(name: "UndefinedColorspace", value: 0, isUnsigned: true)
!14 = !DIEnumerator(name: "RGBColorspace", value: 1, isUnsigned: true)
!15 = !DIEnumerator(name: "GRAYColorspace", value: 2, isUnsigned: true)
!16 = !DIEnumerator(name: "TransparentColorspace", value: 3, isUnsigned: true)
!17 = !DIEnumerator(name: "OHTAColorspace", value: 4, isUnsigned: true)
!18 = !DIEnumerator(name: "LabColorspace", value: 5, isUnsigned: true)
!19 = !DIEnumerator(name: "XYZColorspace", value: 6, isUnsigned: true)
!20 = !DIEnumerator(name: "YCbCrColorspace", value: 7, isUnsigned: true)
!21 = !DIEnumerator(name: "YCCColorspace", value: 8, isUnsigned: true)
!22 = !DIEnumerator(name: "YIQColorspace", value: 9, isUnsigned: true)
!23 = !DIEnumerator(name: "YPbPrColorspace", value: 10, isUnsigned: true)
!24 = !DIEnumerator(name: "YUVColorspace", value: 11, isUnsigned: true)
!25 = !DIEnumerator(name: "CMYKColorspace", value: 12, isUnsigned: true)
!26 = !DIEnumerator(name: "sRGBColorspace", value: 13, isUnsigned: true)
!27 = !DIEnumerator(name: "HSBColorspace", value: 14, isUnsigned: true)
!28 = !DIEnumerator(name: "HSLColorspace", value: 15, isUnsigned: true)
!29 = !DIEnumerator(name: "HWBColorspace", value: 16, isUnsigned: true)
!30 = !DIEnumerator(name: "Rec601LumaColorspace", value: 17, isUnsigned: true)
!31 = !DIEnumerator(name: "Rec601YCbCrColorspace", value: 18, isUnsigned: true)
!32 = !DIEnumerator(name: "Rec709LumaColorspace", value: 19, isUnsigned: true)
!33 = !DIEnumerator(name: "Rec709YCbCrColorspace", value: 20, isUnsigned: true)
!34 = !DIEnumerator(name: "LogColorspace", value: 21, isUnsigned: true)
!35 = !DIEnumerator(name: "CMYColorspace", value: 22, isUnsigned: true)
!36 = !DIEnumerator(name: "LuvColorspace", value: 23, isUnsigned: true)
!37 = !DIEnumerator(name: "HCLColorspace", value: 24, isUnsigned: true)
!38 = !DIEnumerator(name: "LCHColorspace", value: 25, isUnsigned: true)
!39 = !DIEnumerator(name: "LMSColorspace", value: 26, isUnsigned: true)
!40 = !DIEnumerator(name: "LCHabColorspace", value: 27, isUnsigned: true)
!41 = !DIEnumerator(name: "LCHuvColorspace", value: 28, isUnsigned: true)
!42 = !DIEnumerator(name: "scRGBColorspace", value: 29, isUnsigned: true)
!43 = !DIEnumerator(name: "HSIColorspace", value: 30, isUnsigned: true)
!44 = !DIEnumerator(name: "HSVColorspace", value: 31, isUnsigned: true)
!45 = !DIEnumerator(name: "HCLpColorspace", value: 32, isUnsigned: true)
!46 = !DIEnumerator(name: "YDbDrColorspace", value: 33, isUnsigned: true)
!47 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !48, line: 25, baseType: !5, size: 32, elements: !49)
!48 = !DIFile(filename: "./magick/compress.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!49 = !{!50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71}
!50 = !DIEnumerator(name: "UndefinedCompression", value: 0, isUnsigned: true)
!51 = !DIEnumerator(name: "NoCompression", value: 1, isUnsigned: true)
!52 = !DIEnumerator(name: "BZipCompression", value: 2, isUnsigned: true)
!53 = !DIEnumerator(name: "DXT1Compression", value: 3, isUnsigned: true)
!54 = !DIEnumerator(name: "DXT3Compression", value: 4, isUnsigned: true)
!55 = !DIEnumerator(name: "DXT5Compression", value: 5, isUnsigned: true)
!56 = !DIEnumerator(name: "FaxCompression", value: 6, isUnsigned: true)
!57 = !DIEnumerator(name: "Group4Compression", value: 7, isUnsigned: true)
!58 = !DIEnumerator(name: "JPEGCompression", value: 8, isUnsigned: true)
!59 = !DIEnumerator(name: "JPEG2000Compression", value: 9, isUnsigned: true)
!60 = !DIEnumerator(name: "LosslessJPEGCompression", value: 10, isUnsigned: true)
!61 = !DIEnumerator(name: "LZWCompression", value: 11, isUnsigned: true)
!62 = !DIEnumerator(name: "RLECompression", value: 12, isUnsigned: true)
!63 = !DIEnumerator(name: "ZipCompression", value: 13, isUnsigned: true)
!64 = !DIEnumerator(name: "ZipSCompression", value: 14, isUnsigned: true)
!65 = !DIEnumerator(name: "PizCompression", value: 15, isUnsigned: true)
!66 = !DIEnumerator(name: "Pxr24Compression", value: 16, isUnsigned: true)
!67 = !DIEnumerator(name: "B44Compression", value: 17, isUnsigned: true)
!68 = !DIEnumerator(name: "B44ACompression", value: 18, isUnsigned: true)
!69 = !DIEnumerator(name: "LZMACompression", value: 19, isUnsigned: true)
!70 = !DIEnumerator(name: "JBIG1Compression", value: 20, isUnsigned: true)
!71 = !DIEnumerator(name: "JBIG2Compression", value: 21, isUnsigned: true)
!72 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !73, line: 75, baseType: !5, size: 32, elements: !74)
!73 = !DIFile(filename: "./magick/image.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!74 = !{!75, !76, !77, !78, !79, !80, !81, !82, !83}
!75 = !DIEnumerator(name: "UndefinedOrientation", value: 0, isUnsigned: true)
!76 = !DIEnumerator(name: "TopLeftOrientation", value: 1, isUnsigned: true)
!77 = !DIEnumerator(name: "TopRightOrientation", value: 2, isUnsigned: true)
!78 = !DIEnumerator(name: "BottomRightOrientation", value: 3, isUnsigned: true)
!79 = !DIEnumerator(name: "BottomLeftOrientation", value: 4, isUnsigned: true)
!80 = !DIEnumerator(name: "LeftTopOrientation", value: 5, isUnsigned: true)
!81 = !DIEnumerator(name: "RightTopOrientation", value: 6, isUnsigned: true)
!82 = !DIEnumerator(name: "RightBottomOrientation", value: 7, isUnsigned: true)
!83 = !DIEnumerator(name: "LeftBottomOrientation", value: 8, isUnsigned: true)
!84 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !4, line: 211, baseType: !5, size: 32, elements: !85)
!85 = !{!86, !87}
!86 = !DIEnumerator(name: "MagickFalse", value: 0, isUnsigned: true)
!87 = !DIEnumerator(name: "MagickTrue", value: 1, isUnsigned: true)
!88 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !89, line: 42, baseType: !5, size: 32, elements: !90)
!89 = !DIFile(filename: "./magick/profile.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!90 = !{!91, !92, !93, !94, !95}
!91 = !DIEnumerator(name: "UndefinedIntent", value: 0, isUnsigned: true)
!92 = !DIEnumerator(name: "SaturationIntent", value: 1, isUnsigned: true)
!93 = !DIEnumerator(name: "PerceptualIntent", value: 2, isUnsigned: true)
!94 = !DIEnumerator(name: "AbsoluteIntent", value: 3, isUnsigned: true)
!95 = !DIEnumerator(name: "RelativeIntent", value: 4, isUnsigned: true)
!96 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !73, line: 88, baseType: !5, size: 32, elements: !97)
!97 = !{!98, !99, !100}
!98 = !DIEnumerator(name: "UndefinedResolution", value: 0, isUnsigned: true)
!99 = !DIEnumerator(name: "PixelsPerInchResolution", value: 1, isUnsigned: true)
!100 = !DIEnumerator(name: "PixelsPerCentimeterResolution", value: 2, isUnsigned: true)
!101 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !102, line: 32, baseType: !5, size: 32, elements: !103)
!102 = !DIFile(filename: "./magick/resample.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!103 = !{!104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134, !135}
!104 = !DIEnumerator(name: "UndefinedFilter", value: 0, isUnsigned: true)
!105 = !DIEnumerator(name: "PointFilter", value: 1, isUnsigned: true)
!106 = !DIEnumerator(name: "BoxFilter", value: 2, isUnsigned: true)
!107 = !DIEnumerator(name: "TriangleFilter", value: 3, isUnsigned: true)
!108 = !DIEnumerator(name: "HermiteFilter", value: 4, isUnsigned: true)
!109 = !DIEnumerator(name: "HanningFilter", value: 5, isUnsigned: true)
!110 = !DIEnumerator(name: "HammingFilter", value: 6, isUnsigned: true)
!111 = !DIEnumerator(name: "BlackmanFilter", value: 7, isUnsigned: true)
!112 = !DIEnumerator(name: "GaussianFilter", value: 8, isUnsigned: true)
!113 = !DIEnumerator(name: "QuadraticFilter", value: 9, isUnsigned: true)
!114 = !DIEnumerator(name: "CubicFilter", value: 10, isUnsigned: true)
!115 = !DIEnumerator(name: "CatromFilter", value: 11, isUnsigned: true)
!116 = !DIEnumerator(name: "MitchellFilter", value: 12, isUnsigned: true)
!117 = !DIEnumerator(name: "JincFilter", value: 13, isUnsigned: true)
!118 = !DIEnumerator(name: "SincFilter", value: 14, isUnsigned: true)
!119 = !DIEnumerator(name: "SincFastFilter", value: 15, isUnsigned: true)
!120 = !DIEnumerator(name: "KaiserFilter", value: 16, isUnsigned: true)
!121 = !DIEnumerator(name: "WelshFilter", value: 17, isUnsigned: true)
!122 = !DIEnumerator(name: "ParzenFilter", value: 18, isUnsigned: true)
!123 = !DIEnumerator(name: "BohmanFilter", value: 19, isUnsigned: true)
!124 = !DIEnumerator(name: "BartlettFilter", value: 20, isUnsigned: true)
!125 = !DIEnumerator(name: "LagrangeFilter", value: 21, isUnsigned: true)
!126 = !DIEnumerator(name: "LanczosFilter", value: 22, isUnsigned: true)
!127 = !DIEnumerator(name: "LanczosSharpFilter", value: 23, isUnsigned: true)
!128 = !DIEnumerator(name: "Lanczos2Filter", value: 24, isUnsigned: true)
!129 = !DIEnumerator(name: "Lanczos2SharpFilter", value: 25, isUnsigned: true)
!130 = !DIEnumerator(name: "RobidouxFilter", value: 26, isUnsigned: true)
!131 = !DIEnumerator(name: "RobidouxSharpFilter", value: 27, isUnsigned: true)
!132 = !DIEnumerator(name: "CosineFilter", value: 28, isUnsigned: true)
!133 = !DIEnumerator(name: "SplineFilter", value: 29, isUnsigned: true)
!134 = !DIEnumerator(name: "LanczosRadiusFilter", value: 30, isUnsigned: true)
!135 = !DIEnumerator(name: "SentinelFilter", value: 31, isUnsigned: true)
!136 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !73, line: 63, baseType: !5, size: 32, elements: !137)
!137 = !{!138, !139, !140, !141, !142, !143, !144, !145}
!138 = !DIEnumerator(name: "UndefinedInterlace", value: 0, isUnsigned: true)
!139 = !DIEnumerator(name: "NoInterlace", value: 1, isUnsigned: true)
!140 = !DIEnumerator(name: "LineInterlace", value: 2, isUnsigned: true)
!141 = !DIEnumerator(name: "PlaneInterlace", value: 3, isUnsigned: true)
!142 = !DIEnumerator(name: "PartitionInterlace", value: 4, isUnsigned: true)
!143 = !DIEnumerator(name: "GIFInterlace", value: 5, isUnsigned: true)
!144 = !DIEnumerator(name: "JPEGInterlace", value: 6, isUnsigned: true)
!145 = !DIEnumerator(name: "PNGInterlace", value: 7, isUnsigned: true)
!146 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !147, line: 30, baseType: !5, size: 32, elements: !148)
!147 = !DIFile(filename: "./magick/quantum.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!148 = !{!149, !150, !151}
!149 = !DIEnumerator(name: "UndefinedEndian", value: 0, isUnsigned: true)
!150 = !DIEnumerator(name: "LSBEndian", value: 1, isUnsigned: true)
!151 = !DIEnumerator(name: "MSBEndian", value: 2, isUnsigned: true)
!152 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !153, line: 77, baseType: !5, size: 32, elements: !154)
!153 = !DIFile(filename: "./magick/geometry.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!154 = !{!155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166}
!155 = !DIEnumerator(name: "UndefinedGravity", value: 0, isUnsigned: true)
!156 = !DIEnumerator(name: "ForgetGravity", value: 0, isUnsigned: true)
!157 = !DIEnumerator(name: "NorthWestGravity", value: 1, isUnsigned: true)
!158 = !DIEnumerator(name: "NorthGravity", value: 2, isUnsigned: true)
!159 = !DIEnumerator(name: "NorthEastGravity", value: 3, isUnsigned: true)
!160 = !DIEnumerator(name: "WestGravity", value: 4, isUnsigned: true)
!161 = !DIEnumerator(name: "CenterGravity", value: 5, isUnsigned: true)
!162 = !DIEnumerator(name: "EastGravity", value: 6, isUnsigned: true)
!163 = !DIEnumerator(name: "SouthWestGravity", value: 7, isUnsigned: true)
!164 = !DIEnumerator(name: "SouthGravity", value: 8, isUnsigned: true)
!165 = !DIEnumerator(name: "SouthEastGravity", value: 9, isUnsigned: true)
!166 = !DIEnumerator(name: "StaticGravity", value: 10, isUnsigned: true)
!167 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !168, line: 25, baseType: !5, size: 32, elements: !169)
!168 = !DIFile(filename: "./magick/composite.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!169 = !{!170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237}
!170 = !DIEnumerator(name: "UndefinedCompositeOp", value: 0, isUnsigned: true)
!171 = !DIEnumerator(name: "NoCompositeOp", value: 1, isUnsigned: true)
!172 = !DIEnumerator(name: "ModulusAddCompositeOp", value: 2, isUnsigned: true)
!173 = !DIEnumerator(name: "AtopCompositeOp", value: 3, isUnsigned: true)
!174 = !DIEnumerator(name: "BlendCompositeOp", value: 4, isUnsigned: true)
!175 = !DIEnumerator(name: "BumpmapCompositeOp", value: 5, isUnsigned: true)
!176 = !DIEnumerator(name: "ChangeMaskCompositeOp", value: 6, isUnsigned: true)
!177 = !DIEnumerator(name: "ClearCompositeOp", value: 7, isUnsigned: true)
!178 = !DIEnumerator(name: "ColorBurnCompositeOp", value: 8, isUnsigned: true)
!179 = !DIEnumerator(name: "ColorDodgeCompositeOp", value: 9, isUnsigned: true)
!180 = !DIEnumerator(name: "ColorizeCompositeOp", value: 10, isUnsigned: true)
!181 = !DIEnumerator(name: "CopyBlackCompositeOp", value: 11, isUnsigned: true)
!182 = !DIEnumerator(name: "CopyBlueCompositeOp", value: 12, isUnsigned: true)
!183 = !DIEnumerator(name: "CopyCompositeOp", value: 13, isUnsigned: true)
!184 = !DIEnumerator(name: "CopyCyanCompositeOp", value: 14, isUnsigned: true)
!185 = !DIEnumerator(name: "CopyGreenCompositeOp", value: 15, isUnsigned: true)
!186 = !DIEnumerator(name: "CopyMagentaCompositeOp", value: 16, isUnsigned: true)
!187 = !DIEnumerator(name: "CopyOpacityCompositeOp", value: 17, isUnsigned: true)
!188 = !DIEnumerator(name: "CopyRedCompositeOp", value: 18, isUnsigned: true)
!189 = !DIEnumerator(name: "CopyYellowCompositeOp", value: 19, isUnsigned: true)
!190 = !DIEnumerator(name: "DarkenCompositeOp", value: 20, isUnsigned: true)
!191 = !DIEnumerator(name: "DstAtopCompositeOp", value: 21, isUnsigned: true)
!192 = !DIEnumerator(name: "DstCompositeOp", value: 22, isUnsigned: true)
!193 = !DIEnumerator(name: "DstInCompositeOp", value: 23, isUnsigned: true)
!194 = !DIEnumerator(name: "DstOutCompositeOp", value: 24, isUnsigned: true)
!195 = !DIEnumerator(name: "DstOverCompositeOp", value: 25, isUnsigned: true)
!196 = !DIEnumerator(name: "DifferenceCompositeOp", value: 26, isUnsigned: true)
!197 = !DIEnumerator(name: "DisplaceCompositeOp", value: 27, isUnsigned: true)
!198 = !DIEnumerator(name: "DissolveCompositeOp", value: 28, isUnsigned: true)
!199 = !DIEnumerator(name: "ExclusionCompositeOp", value: 29, isUnsigned: true)
!200 = !DIEnumerator(name: "HardLightCompositeOp", value: 30, isUnsigned: true)
!201 = !DIEnumerator(name: "HueCompositeOp", value: 31, isUnsigned: true)
!202 = !DIEnumerator(name: "InCompositeOp", value: 32, isUnsigned: true)
!203 = !DIEnumerator(name: "LightenCompositeOp", value: 33, isUnsigned: true)
!204 = !DIEnumerator(name: "LinearLightCompositeOp", value: 34, isUnsigned: true)
!205 = !DIEnumerator(name: "LuminizeCompositeOp", value: 35, isUnsigned: true)
!206 = !DIEnumerator(name: "MinusDstCompositeOp", value: 36, isUnsigned: true)
!207 = !DIEnumerator(name: "ModulateCompositeOp", value: 37, isUnsigned: true)
!208 = !DIEnumerator(name: "MultiplyCompositeOp", value: 38, isUnsigned: true)
!209 = !DIEnumerator(name: "OutCompositeOp", value: 39, isUnsigned: true)
!210 = !DIEnumerator(name: "OverCompositeOp", value: 40, isUnsigned: true)
!211 = !DIEnumerator(name: "OverlayCompositeOp", value: 41, isUnsigned: true)
!212 = !DIEnumerator(name: "PlusCompositeOp", value: 42, isUnsigned: true)
!213 = !DIEnumerator(name: "ReplaceCompositeOp", value: 43, isUnsigned: true)
!214 = !DIEnumerator(name: "SaturateCompositeOp", value: 44, isUnsigned: true)
!215 = !DIEnumerator(name: "ScreenCompositeOp", value: 45, isUnsigned: true)
!216 = !DIEnumerator(name: "SoftLightCompositeOp", value: 46, isUnsigned: true)
!217 = !DIEnumerator(name: "SrcAtopCompositeOp", value: 47, isUnsigned: true)
!218 = !DIEnumerator(name: "SrcCompositeOp", value: 48, isUnsigned: true)
!219 = !DIEnumerator(name: "SrcInCompositeOp", value: 49, isUnsigned: true)
!220 = !DIEnumerator(name: "SrcOutCompositeOp", value: 50, isUnsigned: true)
!221 = !DIEnumerator(name: "SrcOverCompositeOp", value: 51, isUnsigned: true)
!222 = !DIEnumerator(name: "ModulusSubtractCompositeOp", value: 52, isUnsigned: true)
!223 = !DIEnumerator(name: "ThresholdCompositeOp", value: 53, isUnsigned: true)
!224 = !DIEnumerator(name: "XorCompositeOp", value: 54, isUnsigned: true)
!225 = !DIEnumerator(name: "DivideDstCompositeOp", value: 55, isUnsigned: true)
!226 = !DIEnumerator(name: "DistortCompositeOp", value: 56, isUnsigned: true)
!227 = !DIEnumerator(name: "BlurCompositeOp", value: 57, isUnsigned: true)
!228 = !DIEnumerator(name: "PegtopLightCompositeOp", value: 58, isUnsigned: true)
!229 = !DIEnumerator(name: "VividLightCompositeOp", value: 59, isUnsigned: true)
!230 = !DIEnumerator(name: "PinLightCompositeOp", value: 60, isUnsigned: true)
!231 = !DIEnumerator(name: "LinearDodgeCompositeOp", value: 61, isUnsigned: true)
!232 = !DIEnumerator(name: "LinearBurnCompositeOp", value: 62, isUnsigned: true)
!233 = !DIEnumerator(name: "MathematicsCompositeOp", value: 63, isUnsigned: true)
!234 = !DIEnumerator(name: "DivideSrcCompositeOp", value: 64, isUnsigned: true)
!235 = !DIEnumerator(name: "MinusSrcCompositeOp", value: 65, isUnsigned: true)
!236 = !DIEnumerator(name: "DarkenIntensityCompositeOp", value: 66, isUnsigned: true)
!237 = !DIEnumerator(name: "LightenIntensityCompositeOp", value: 67, isUnsigned: true)
!238 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !239, line: 25, baseType: !5, size: 32, elements: !240)
!239 = !DIFile(filename: "./magick/layer.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!240 = !{!241, !242, !243, !244, !245}
!241 = !DIEnumerator(name: "UnrecognizedDispose", value: 0, isUnsigned: true)
!242 = !DIEnumerator(name: "UndefinedDispose", value: 0, isUnsigned: true)
!243 = !DIEnumerator(name: "NoneDispose", value: 1, isUnsigned: true)
!244 = !DIEnumerator(name: "BackgroundDispose", value: 2, isUnsigned: true)
!245 = !DIEnumerator(name: "PreviousDispose", value: 3, isUnsigned: true)
!246 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !247, line: 25, baseType: !5, size: 32, elements: !248)
!247 = !DIFile(filename: "./magick/timer.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!248 = !{!249, !250, !251}
!249 = !DIEnumerator(name: "UndefinedTimerState", value: 0, isUnsigned: true)
!250 = !DIEnumerator(name: "StoppedTimerState", value: 1, isUnsigned: true)
!251 = !DIEnumerator(name: "RunningTimerState", value: 2, isUnsigned: true)
!252 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !253, line: 28, baseType: !5, size: 32, elements: !254)
!253 = !DIFile(filename: "./magick/exception.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!254 = !{!255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324}
!255 = !DIEnumerator(name: "UndefinedException", value: 0, isUnsigned: true)
!256 = !DIEnumerator(name: "WarningException", value: 300, isUnsigned: true)
!257 = !DIEnumerator(name: "ResourceLimitWarning", value: 300, isUnsigned: true)
!258 = !DIEnumerator(name: "TypeWarning", value: 305, isUnsigned: true)
!259 = !DIEnumerator(name: "OptionWarning", value: 310, isUnsigned: true)
!260 = !DIEnumerator(name: "DelegateWarning", value: 315, isUnsigned: true)
!261 = !DIEnumerator(name: "MissingDelegateWarning", value: 320, isUnsigned: true)
!262 = !DIEnumerator(name: "CorruptImageWarning", value: 325, isUnsigned: true)
!263 = !DIEnumerator(name: "FileOpenWarning", value: 330, isUnsigned: true)
!264 = !DIEnumerator(name: "BlobWarning", value: 335, isUnsigned: true)
!265 = !DIEnumerator(name: "StreamWarning", value: 340, isUnsigned: true)
!266 = !DIEnumerator(name: "CacheWarning", value: 345, isUnsigned: true)
!267 = !DIEnumerator(name: "CoderWarning", value: 350, isUnsigned: true)
!268 = !DIEnumerator(name: "FilterWarning", value: 352, isUnsigned: true)
!269 = !DIEnumerator(name: "ModuleWarning", value: 355, isUnsigned: true)
!270 = !DIEnumerator(name: "DrawWarning", value: 360, isUnsigned: true)
!271 = !DIEnumerator(name: "ImageWarning", value: 365, isUnsigned: true)
!272 = !DIEnumerator(name: "WandWarning", value: 370, isUnsigned: true)
!273 = !DIEnumerator(name: "RandomWarning", value: 375, isUnsigned: true)
!274 = !DIEnumerator(name: "XServerWarning", value: 380, isUnsigned: true)
!275 = !DIEnumerator(name: "MonitorWarning", value: 385, isUnsigned: true)
!276 = !DIEnumerator(name: "RegistryWarning", value: 390, isUnsigned: true)
!277 = !DIEnumerator(name: "ConfigureWarning", value: 395, isUnsigned: true)
!278 = !DIEnumerator(name: "PolicyWarning", value: 399, isUnsigned: true)
!279 = !DIEnumerator(name: "ErrorException", value: 400, isUnsigned: true)
!280 = !DIEnumerator(name: "ResourceLimitError", value: 400, isUnsigned: true)
!281 = !DIEnumerator(name: "TypeError", value: 405, isUnsigned: true)
!282 = !DIEnumerator(name: "OptionError", value: 410, isUnsigned: true)
!283 = !DIEnumerator(name: "DelegateError", value: 415, isUnsigned: true)
!284 = !DIEnumerator(name: "MissingDelegateError", value: 420, isUnsigned: true)
!285 = !DIEnumerator(name: "CorruptImageError", value: 425, isUnsigned: true)
!286 = !DIEnumerator(name: "FileOpenError", value: 430, isUnsigned: true)
!287 = !DIEnumerator(name: "BlobError", value: 435, isUnsigned: true)
!288 = !DIEnumerator(name: "StreamError", value: 440, isUnsigned: true)
!289 = !DIEnumerator(name: "CacheError", value: 445, isUnsigned: true)
!290 = !DIEnumerator(name: "CoderError", value: 450, isUnsigned: true)
!291 = !DIEnumerator(name: "FilterError", value: 452, isUnsigned: true)
!292 = !DIEnumerator(name: "ModuleError", value: 455, isUnsigned: true)
!293 = !DIEnumerator(name: "DrawError", value: 460, isUnsigned: true)
!294 = !DIEnumerator(name: "ImageError", value: 465, isUnsigned: true)
!295 = !DIEnumerator(name: "WandError", value: 470, isUnsigned: true)
!296 = !DIEnumerator(name: "RandomError", value: 475, isUnsigned: true)
!297 = !DIEnumerator(name: "XServerError", value: 480, isUnsigned: true)
!298 = !DIEnumerator(name: "MonitorError", value: 485, isUnsigned: true)
!299 = !DIEnumerator(name: "RegistryError", value: 490, isUnsigned: true)
!300 = !DIEnumerator(name: "ConfigureError", value: 495, isUnsigned: true)
!301 = !DIEnumerator(name: "PolicyError", value: 499, isUnsigned: true)
!302 = !DIEnumerator(name: "FatalErrorException", value: 700, isUnsigned: true)
!303 = !DIEnumerator(name: "ResourceLimitFatalError", value: 700, isUnsigned: true)
!304 = !DIEnumerator(name: "TypeFatalError", value: 705, isUnsigned: true)
!305 = !DIEnumerator(name: "OptionFatalError", value: 710, isUnsigned: true)
!306 = !DIEnumerator(name: "DelegateFatalError", value: 715, isUnsigned: true)
!307 = !DIEnumerator(name: "MissingDelegateFatalError", value: 720, isUnsigned: true)
!308 = !DIEnumerator(name: "CorruptImageFatalError", value: 725, isUnsigned: true)
!309 = !DIEnumerator(name: "FileOpenFatalError", value: 730, isUnsigned: true)
!310 = !DIEnumerator(name: "BlobFatalError", value: 735, isUnsigned: true)
!311 = !DIEnumerator(name: "StreamFatalError", value: 740, isUnsigned: true)
!312 = !DIEnumerator(name: "CacheFatalError", value: 745, isUnsigned: true)
!313 = !DIEnumerator(name: "CoderFatalError", value: 750, isUnsigned: true)
!314 = !DIEnumerator(name: "FilterFatalError", value: 752, isUnsigned: true)
!315 = !DIEnumerator(name: "ModuleFatalError", value: 755, isUnsigned: true)
!316 = !DIEnumerator(name: "DrawFatalError", value: 760, isUnsigned: true)
!317 = !DIEnumerator(name: "ImageFatalError", value: 765, isUnsigned: true)
!318 = !DIEnumerator(name: "WandFatalError", value: 770, isUnsigned: true)
!319 = !DIEnumerator(name: "RandomFatalError", value: 775, isUnsigned: true)
!320 = !DIEnumerator(name: "XServerFatalError", value: 780, isUnsigned: true)
!321 = !DIEnumerator(name: "MonitorFatalError", value: 785, isUnsigned: true)
!322 = !DIEnumerator(name: "RegistryFatalError", value: 790, isUnsigned: true)
!323 = !DIEnumerator(name: "ConfigureFatalError", value: 795, isUnsigned: true)
!324 = !DIEnumerator(name: "PolicyFatalError", value: 799, isUnsigned: true)
!325 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !326, line: 31, baseType: !5, size: 32, elements: !327)
!326 = !DIFile(filename: "./magick/pixel.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!327 = !{!328, !329, !330, !331, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341}
!328 = !DIEnumerator(name: "UndefinedInterpolatePixel", value: 0, isUnsigned: true)
!329 = !DIEnumerator(name: "AverageInterpolatePixel", value: 1, isUnsigned: true)
!330 = !DIEnumerator(name: "BicubicInterpolatePixel", value: 2, isUnsigned: true)
!331 = !DIEnumerator(name: "BilinearInterpolatePixel", value: 3, isUnsigned: true)
!332 = !DIEnumerator(name: "FilterInterpolatePixel", value: 4, isUnsigned: true)
!333 = !DIEnumerator(name: "IntegerInterpolatePixel", value: 5, isUnsigned: true)
!334 = !DIEnumerator(name: "MeshInterpolatePixel", value: 6, isUnsigned: true)
!335 = !DIEnumerator(name: "NearestNeighborInterpolatePixel", value: 7, isUnsigned: true)
!336 = !DIEnumerator(name: "SplineInterpolatePixel", value: 8, isUnsigned: true)
!337 = !DIEnumerator(name: "Average9InterpolatePixel", value: 9, isUnsigned: true)
!338 = !DIEnumerator(name: "Average16InterpolatePixel", value: 10, isUnsigned: true)
!339 = !DIEnumerator(name: "BlendInterpolatePixel", value: 11, isUnsigned: true)
!340 = !DIEnumerator(name: "BackgroundInterpolatePixel", value: 12, isUnsigned: true)
!341 = !DIEnumerator(name: "CatromInterpolatePixel", value: 13, isUnsigned: true)
!342 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !73, line: 47, baseType: !5, size: 32, elements: !343)
!343 = !{!344, !345, !346, !347, !348, !349, !350, !351, !352, !353, !354, !355}
!344 = !DIEnumerator(name: "UndefinedType", value: 0, isUnsigned: true)
!345 = !DIEnumerator(name: "BilevelType", value: 1, isUnsigned: true)
!346 = !DIEnumerator(name: "GrayscaleType", value: 2, isUnsigned: true)
!347 = !DIEnumerator(name: "GrayscaleMatteType", value: 3, isUnsigned: true)
!348 = !DIEnumerator(name: "PaletteType", value: 4, isUnsigned: true)
!349 = !DIEnumerator(name: "PaletteMatteType", value: 5, isUnsigned: true)
!350 = !DIEnumerator(name: "TrueColorType", value: 6, isUnsigned: true)
!351 = !DIEnumerator(name: "TrueColorMatteType", value: 7, isUnsigned: true)
!352 = !DIEnumerator(name: "ColorSeparationType", value: 8, isUnsigned: true)
!353 = !DIEnumerator(name: "ColorSeparationMatteType", value: 9, isUnsigned: true)
!354 = !DIEnumerator(name: "OptimizeType", value: 10, isUnsigned: true)
!355 = !DIEnumerator(name: "PaletteBilevelMatteType", value: 11, isUnsigned: true)
!356 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !326, line: 67, baseType: !5, size: 32, elements: !357)
!357 = !{!358, !359, !360, !361, !362, !363, !364, !365, !366, !367}
!358 = !DIEnumerator(name: "UndefinedPixelIntensityMethod", value: 0, isUnsigned: true)
!359 = !DIEnumerator(name: "AveragePixelIntensityMethod", value: 1, isUnsigned: true)
!360 = !DIEnumerator(name: "BrightnessPixelIntensityMethod", value: 2, isUnsigned: true)
!361 = !DIEnumerator(name: "LightnessPixelIntensityMethod", value: 3, isUnsigned: true)
!362 = !DIEnumerator(name: "Rec601LumaPixelIntensityMethod", value: 4, isUnsigned: true)
!363 = !DIEnumerator(name: "Rec601LuminancePixelIntensityMethod", value: 5, isUnsigned: true)
!364 = !DIEnumerator(name: "Rec709LumaPixelIntensityMethod", value: 6, isUnsigned: true)
!365 = !DIEnumerator(name: "Rec709LuminancePixelIntensityMethod", value: 7, isUnsigned: true)
!366 = !DIEnumerator(name: "RMSPixelIntensityMethod", value: 8, isUnsigned: true)
!367 = !DIEnumerator(name: "MSPixelIntensityMethod", value: 9, isUnsigned: true)
!368 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !369, line: 34, baseType: !5, size: 32, elements: !370)
!369 = !DIFile(filename: "./magick/log.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!370 = !{!371, !372, !373, !374, !375, !376, !377, !378, !379, !380, !381, !382, !383, !384, !385, !386, !387, !388, !389, !390, !391, !392}
!371 = !DIEnumerator(name: "UndefinedEvents", value: 0, isUnsigned: true)
!372 = !DIEnumerator(name: "NoEvents", value: 0, isUnsigned: true)
!373 = !DIEnumerator(name: "TraceEvent", value: 1, isUnsigned: true)
!374 = !DIEnumerator(name: "AnnotateEvent", value: 2, isUnsigned: true)
!375 = !DIEnumerator(name: "BlobEvent", value: 4, isUnsigned: true)
!376 = !DIEnumerator(name: "CacheEvent", value: 8, isUnsigned: true)
!377 = !DIEnumerator(name: "CoderEvent", value: 16, isUnsigned: true)
!378 = !DIEnumerator(name: "ConfigureEvent", value: 32, isUnsigned: true)
!379 = !DIEnumerator(name: "DeprecateEvent", value: 64, isUnsigned: true)
!380 = !DIEnumerator(name: "DrawEvent", value: 128, isUnsigned: true)
!381 = !DIEnumerator(name: "ExceptionEvent", value: 256, isUnsigned: true)
!382 = !DIEnumerator(name: "ImageEvent", value: 512, isUnsigned: true)
!383 = !DIEnumerator(name: "LocaleEvent", value: 1024, isUnsigned: true)
!384 = !DIEnumerator(name: "ModuleEvent", value: 2048, isUnsigned: true)
!385 = !DIEnumerator(name: "PolicyEvent", value: 4096, isUnsigned: true)
!386 = !DIEnumerator(name: "ResourceEvent", value: 8192, isUnsigned: true)
!387 = !DIEnumerator(name: "TransformEvent", value: 16384, isUnsigned: true)
!388 = !DIEnumerator(name: "UserEvent", value: 36864, isUnsigned: true)
!389 = !DIEnumerator(name: "WandEvent", value: 65536, isUnsigned: true)
!390 = !DIEnumerator(name: "X11Event", value: 131072, isUnsigned: true)
!391 = !DIEnumerator(name: "AccelerateEvent", value: 262144, isUnsigned: true)
!392 = !DIEnumerator(name: "AllEvents", value: 2147483647, isUnsigned: true)
!393 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !394, line: 34, baseType: !5, size: 32, elements: !395)
!394 = !DIFile(filename: "./magick/distort.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!395 = !{!396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415}
!396 = !DIEnumerator(name: "UndefinedDistortion", value: 0, isUnsigned: true)
!397 = !DIEnumerator(name: "AffineDistortion", value: 1, isUnsigned: true)
!398 = !DIEnumerator(name: "AffineProjectionDistortion", value: 2, isUnsigned: true)
!399 = !DIEnumerator(name: "ScaleRotateTranslateDistortion", value: 3, isUnsigned: true)
!400 = !DIEnumerator(name: "PerspectiveDistortion", value: 4, isUnsigned: true)
!401 = !DIEnumerator(name: "PerspectiveProjectionDistortion", value: 5, isUnsigned: true)
!402 = !DIEnumerator(name: "BilinearForwardDistortion", value: 6, isUnsigned: true)
!403 = !DIEnumerator(name: "BilinearDistortion", value: 6, isUnsigned: true)
!404 = !DIEnumerator(name: "BilinearReverseDistortion", value: 7, isUnsigned: true)
!405 = !DIEnumerator(name: "PolynomialDistortion", value: 8, isUnsigned: true)
!406 = !DIEnumerator(name: "ArcDistortion", value: 9, isUnsigned: true)
!407 = !DIEnumerator(name: "PolarDistortion", value: 10, isUnsigned: true)
!408 = !DIEnumerator(name: "DePolarDistortion", value: 11, isUnsigned: true)
!409 = !DIEnumerator(name: "Cylinder2PlaneDistortion", value: 12, isUnsigned: true)
!410 = !DIEnumerator(name: "Plane2CylinderDistortion", value: 13, isUnsigned: true)
!411 = !DIEnumerator(name: "BarrelDistortion", value: 14, isUnsigned: true)
!412 = !DIEnumerator(name: "BarrelInverseDistortion", value: 15, isUnsigned: true)
!413 = !DIEnumerator(name: "ShepardsDistortion", value: 16, isUnsigned: true)
!414 = !DIEnumerator(name: "ResizeDistortion", value: 17, isUnsigned: true)
!415 = !DIEnumerator(name: "SentinelDistortion", value: 18, isUnsigned: true)
!416 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !417, line: 27, baseType: !5, size: 32, elements: !418)
!417 = !DIFile(filename: "./magick/cache-view.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!418 = !{!419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436}
!419 = !DIEnumerator(name: "UndefinedVirtualPixelMethod", value: 0, isUnsigned: true)
!420 = !DIEnumerator(name: "BackgroundVirtualPixelMethod", value: 1, isUnsigned: true)
!421 = !DIEnumerator(name: "ConstantVirtualPixelMethod", value: 2, isUnsigned: true)
!422 = !DIEnumerator(name: "DitherVirtualPixelMethod", value: 3, isUnsigned: true)
!423 = !DIEnumerator(name: "EdgeVirtualPixelMethod", value: 4, isUnsigned: true)
!424 = !DIEnumerator(name: "MirrorVirtualPixelMethod", value: 5, isUnsigned: true)
!425 = !DIEnumerator(name: "RandomVirtualPixelMethod", value: 6, isUnsigned: true)
!426 = !DIEnumerator(name: "TileVirtualPixelMethod", value: 7, isUnsigned: true)
!427 = !DIEnumerator(name: "TransparentVirtualPixelMethod", value: 8, isUnsigned: true)
!428 = !DIEnumerator(name: "MaskVirtualPixelMethod", value: 9, isUnsigned: true)
!429 = !DIEnumerator(name: "BlackVirtualPixelMethod", value: 10, isUnsigned: true)
!430 = !DIEnumerator(name: "GrayVirtualPixelMethod", value: 11, isUnsigned: true)
!431 = !DIEnumerator(name: "WhiteVirtualPixelMethod", value: 12, isUnsigned: true)
!432 = !DIEnumerator(name: "HorizontalTileVirtualPixelMethod", value: 13, isUnsigned: true)
!433 = !DIEnumerator(name: "VerticalTileVirtualPixelMethod", value: 14, isUnsigned: true)
!434 = !DIEnumerator(name: "HorizontalTileEdgeVirtualPixelMethod", value: 15, isUnsigned: true)
!435 = !DIEnumerator(name: "VerticalTileEdgeVirtualPixelMethod", value: 16, isUnsigned: true)
!436 = !DIEnumerator(name: "CheckerTileVirtualPixelMethod", value: 17, isUnsigned: true)
!437 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !73, line: 30, baseType: !5, size: 32, elements: !438)
!438 = !{!439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451}
!439 = !DIEnumerator(name: "UndefinedAlphaChannel", value: 0, isUnsigned: true)
!440 = !DIEnumerator(name: "ActivateAlphaChannel", value: 1, isUnsigned: true)
!441 = !DIEnumerator(name: "BackgroundAlphaChannel", value: 2, isUnsigned: true)
!442 = !DIEnumerator(name: "CopyAlphaChannel", value: 3, isUnsigned: true)
!443 = !DIEnumerator(name: "DeactivateAlphaChannel", value: 4, isUnsigned: true)
!444 = !DIEnumerator(name: "ExtractAlphaChannel", value: 5, isUnsigned: true)
!445 = !DIEnumerator(name: "OpaqueAlphaChannel", value: 6, isUnsigned: true)
!446 = !DIEnumerator(name: "ResetAlphaChannel", value: 7, isUnsigned: true)
!447 = !DIEnumerator(name: "SetAlphaChannel", value: 8, isUnsigned: true)
!448 = !DIEnumerator(name: "ShapeAlphaChannel", value: 9, isUnsigned: true)
!449 = !DIEnumerator(name: "TransparentAlphaChannel", value: 10, isUnsigned: true)
!450 = !DIEnumerator(name: "FlattenAlphaChannel", value: 11, isUnsigned: true)
!451 = !DIEnumerator(name: "RemoveAlphaChannel", value: 12, isUnsigned: true)
!452 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !4, line: 177, baseType: !5, size: 32, elements: !453)
!453 = !{!454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472, !473}
!454 = !DIEnumerator(name: "UndefinedChannel", value: 0, isUnsigned: true)
!455 = !DIEnumerator(name: "RedChannel", value: 1, isUnsigned: true)
!456 = !DIEnumerator(name: "GrayChannel", value: 1, isUnsigned: true)
!457 = !DIEnumerator(name: "CyanChannel", value: 1, isUnsigned: true)
!458 = !DIEnumerator(name: "GreenChannel", value: 2, isUnsigned: true)
!459 = !DIEnumerator(name: "MagentaChannel", value: 2, isUnsigned: true)
!460 = !DIEnumerator(name: "BlueChannel", value: 4, isUnsigned: true)
!461 = !DIEnumerator(name: "YellowChannel", value: 4, isUnsigned: true)
!462 = !DIEnumerator(name: "AlphaChannel", value: 8, isUnsigned: true)
!463 = !DIEnumerator(name: "OpacityChannel", value: 8, isUnsigned: true)
!464 = !DIEnumerator(name: "MatteChannel", value: 8, isUnsigned: true)
!465 = !DIEnumerator(name: "BlackChannel", value: 32, isUnsigned: true)
!466 = !DIEnumerator(name: "IndexChannel", value: 32, isUnsigned: true)
!467 = !DIEnumerator(name: "CompositeChannels", value: 47, isUnsigned: true)
!468 = !DIEnumerator(name: "AllChannels", value: 134217727, isUnsigned: true)
!469 = !DIEnumerator(name: "TrueAlphaChannel", value: 64, isUnsigned: true)
!470 = !DIEnumerator(name: "RGBChannels", value: 128, isUnsigned: true)
!471 = !DIEnumerator(name: "GrayChannels", value: 128, isUnsigned: true)
!472 = !DIEnumerator(name: "SyncChannels", value: 256, isUnsigned: true)
!473 = !DIEnumerator(name: "DefaultChannels", value: 134217719, isUnsigned: true)
!474 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !153, line: 25, baseType: !5, size: 32, elements: !475)
!475 = !{!476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501}
!476 = !DIEnumerator(name: "NoValue", value: 0, isUnsigned: true)
!477 = !DIEnumerator(name: "XValue", value: 1, isUnsigned: true)
!478 = !DIEnumerator(name: "XiValue", value: 1, isUnsigned: true)
!479 = !DIEnumerator(name: "YValue", value: 2, isUnsigned: true)
!480 = !DIEnumerator(name: "PsiValue", value: 2, isUnsigned: true)
!481 = !DIEnumerator(name: "WidthValue", value: 4, isUnsigned: true)
!482 = !DIEnumerator(name: "RhoValue", value: 4, isUnsigned: true)
!483 = !DIEnumerator(name: "HeightValue", value: 8, isUnsigned: true)
!484 = !DIEnumerator(name: "SigmaValue", value: 8, isUnsigned: true)
!485 = !DIEnumerator(name: "ChiValue", value: 16, isUnsigned: true)
!486 = !DIEnumerator(name: "XiNegative", value: 32, isUnsigned: true)
!487 = !DIEnumerator(name: "XNegative", value: 32, isUnsigned: true)
!488 = !DIEnumerator(name: "PsiNegative", value: 64, isUnsigned: true)
!489 = !DIEnumerator(name: "YNegative", value: 64, isUnsigned: true)
!490 = !DIEnumerator(name: "ChiNegative", value: 128, isUnsigned: true)
!491 = !DIEnumerator(name: "PercentValue", value: 4096, isUnsigned: true)
!492 = !DIEnumerator(name: "AspectValue", value: 8192, isUnsigned: true)
!493 = !DIEnumerator(name: "NormalizeValue", value: 8192, isUnsigned: true)
!494 = !DIEnumerator(name: "LessValue", value: 16384, isUnsigned: true)
!495 = !DIEnumerator(name: "GreaterValue", value: 32768, isUnsigned: true)
!496 = !DIEnumerator(name: "MinimumValue", value: 65536, isUnsigned: true)
!497 = !DIEnumerator(name: "CorrelateNormalizeValue", value: 65536, isUnsigned: true)
!498 = !DIEnumerator(name: "AreaValue", value: 131072, isUnsigned: true)
!499 = !DIEnumerator(name: "DecimalValue", value: 262144, isUnsigned: true)
!500 = !DIEnumerator(name: "SeparatorValue", value: 524288, isUnsigned: true)
!501 = !DIEnumerator(name: "AllValues", value: 2147483647, isUnsigned: true)
!502 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !394, line: 58, baseType: !5, size: 32, elements: !503)
!503 = !{!504, !505, !506, !507, !508, !509, !510}
!504 = !DIEnumerator(name: "UndefinedColorInterpolate", value: 0, isUnsigned: true)
!505 = !DIEnumerator(name: "BarycentricColorInterpolate", value: 1, isUnsigned: true)
!506 = !DIEnumerator(name: "BilinearColorInterpolate", value: 7, isUnsigned: true)
!507 = !DIEnumerator(name: "PolynomialColorInterpolate", value: 8, isUnsigned: true)
!508 = !DIEnumerator(name: "ShepardsColorInterpolate", value: 16, isUnsigned: true)
!509 = !DIEnumerator(name: "VoronoiColorInterpolate", value: 18, isUnsigned: true)
!510 = !DIEnumerator(name: "InverseColorInterpolate", value: 19, isUnsigned: true)
!511 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !512, line: 25, baseType: !513, size: 32, elements: !514)
!512 = !DIFile(filename: "./magick/option.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!513 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!514 = !{!515, !516, !517, !518, !519, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542, !543, !544, !545, !546, !547, !548, !549, !550, !551, !552, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562, !563, !564, !565, !566, !567, !568, !569, !570, !571, !572, !573, !574, !575, !576, !577, !578, !579, !580, !581, !582, !583, !584, !585, !586}
!515 = !DIEnumerator(name: "MagickUndefinedOptions", value: -1)
!516 = !DIEnumerator(name: "MagickAlignOptions", value: 0)
!517 = !DIEnumerator(name: "MagickAlphaOptions", value: 1)
!518 = !DIEnumerator(name: "MagickBooleanOptions", value: 2)
!519 = !DIEnumerator(name: "MagickCacheOptions", value: 3)
!520 = !DIEnumerator(name: "MagickChannelOptions", value: 4)
!521 = !DIEnumerator(name: "MagickClassOptions", value: 5)
!522 = !DIEnumerator(name: "MagickClipPathOptions", value: 6)
!523 = !DIEnumerator(name: "MagickCoderOptions", value: 7)
!524 = !DIEnumerator(name: "MagickColorOptions", value: 8)
!525 = !DIEnumerator(name: "MagickColorspaceOptions", value: 9)
!526 = !DIEnumerator(name: "MagickCommandOptions", value: 10)
!527 = !DIEnumerator(name: "MagickComposeOptions", value: 11)
!528 = !DIEnumerator(name: "MagickCompressOptions", value: 12)
!529 = !DIEnumerator(name: "MagickConfigureOptions", value: 13)
!530 = !DIEnumerator(name: "MagickDataTypeOptions", value: 14)
!531 = !DIEnumerator(name: "MagickDebugOptions", value: 15)
!532 = !DIEnumerator(name: "MagickDecorateOptions", value: 16)
!533 = !DIEnumerator(name: "MagickDelegateOptions", value: 17)
!534 = !DIEnumerator(name: "MagickDirectionOptions", value: 18)
!535 = !DIEnumerator(name: "MagickDisposeOptions", value: 19)
!536 = !DIEnumerator(name: "MagickDistortOptions", value: 20)
!537 = !DIEnumerator(name: "MagickDitherOptions", value: 21)
!538 = !DIEnumerator(name: "MagickEndianOptions", value: 22)
!539 = !DIEnumerator(name: "MagickEvaluateOptions", value: 23)
!540 = !DIEnumerator(name: "MagickFillRuleOptions", value: 24)
!541 = !DIEnumerator(name: "MagickFilterOptions", value: 25)
!542 = !DIEnumerator(name: "MagickFontOptions", value: 26)
!543 = !DIEnumerator(name: "MagickFontsOptions", value: 27)
!544 = !DIEnumerator(name: "MagickFormatOptions", value: 28)
!545 = !DIEnumerator(name: "MagickFunctionOptions", value: 29)
!546 = !DIEnumerator(name: "MagickGravityOptions", value: 30)
!547 = !DIEnumerator(name: "MagickIntentOptions", value: 31)
!548 = !DIEnumerator(name: "MagickInterlaceOptions", value: 32)
!549 = !DIEnumerator(name: "MagickInterpolateOptions", value: 33)
!550 = !DIEnumerator(name: "MagickKernelOptions", value: 34)
!551 = !DIEnumerator(name: "MagickLayerOptions", value: 35)
!552 = !DIEnumerator(name: "MagickLineCapOptions", value: 36)
!553 = !DIEnumerator(name: "MagickLineJoinOptions", value: 37)
!554 = !DIEnumerator(name: "MagickListOptions", value: 38)
!555 = !DIEnumerator(name: "MagickLocaleOptions", value: 39)
!556 = !DIEnumerator(name: "MagickLogEventOptions", value: 40)
!557 = !DIEnumerator(name: "MagickLogOptions", value: 41)
!558 = !DIEnumerator(name: "MagickMagicOptions", value: 42)
!559 = !DIEnumerator(name: "MagickMethodOptions", value: 43)
!560 = !DIEnumerator(name: "MagickMetricOptions", value: 44)
!561 = !DIEnumerator(name: "MagickMimeOptions", value: 45)
!562 = !DIEnumerator(name: "MagickModeOptions", value: 46)
!563 = !DIEnumerator(name: "MagickModuleOptions", value: 47)
!564 = !DIEnumerator(name: "MagickMorphologyOptions", value: 48)
!565 = !DIEnumerator(name: "MagickNoiseOptions", value: 49)
!566 = !DIEnumerator(name: "MagickOrientationOptions", value: 50)
!567 = !DIEnumerator(name: "MagickPixelIntensityOptions", value: 51)
!568 = !DIEnumerator(name: "MagickPolicyOptions", value: 52)
!569 = !DIEnumerator(name: "MagickPolicyDomainOptions", value: 53)
!570 = !DIEnumerator(name: "MagickPolicyRightsOptions", value: 54)
!571 = !DIEnumerator(name: "MagickPreviewOptions", value: 55)
!572 = !DIEnumerator(name: "MagickPrimitiveOptions", value: 56)
!573 = !DIEnumerator(name: "MagickQuantumFormatOptions", value: 57)
!574 = !DIEnumerator(name: "MagickResolutionOptions", value: 58)
!575 = !DIEnumerator(name: "MagickResourceOptions", value: 59)
!576 = !DIEnumerator(name: "MagickSparseColorOptions", value: 60)
!577 = !DIEnumerator(name: "MagickStatisticOptions", value: 61)
!578 = !DIEnumerator(name: "MagickStorageOptions", value: 62)
!579 = !DIEnumerator(name: "MagickStretchOptions", value: 63)
!580 = !DIEnumerator(name: "MagickStyleOptions", value: 64)
!581 = !DIEnumerator(name: "MagickThresholdOptions", value: 65)
!582 = !DIEnumerator(name: "MagickTypeOptions", value: 66)
!583 = !DIEnumerator(name: "MagickValidateOptions", value: 67)
!584 = !DIEnumerator(name: "MagickVirtualPixelOptions", value: 68)
!585 = !DIEnumerator(name: "MagickComplexOptions", value: 69)
!586 = !DIEnumerator(name: "MagickIntensityOptions", value: 70)
!587 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !588, line: 25, baseType: !5, size: 32, elements: !589)
!588 = !DIFile(filename: "./magick/resource_.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!589 = !{!590, !591, !592, !593, !594, !595, !596, !597, !598}
!590 = !DIEnumerator(name: "UndefinedResource", value: 0, isUnsigned: true)
!591 = !DIEnumerator(name: "AreaResource", value: 1, isUnsigned: true)
!592 = !DIEnumerator(name: "DiskResource", value: 2, isUnsigned: true)
!593 = !DIEnumerator(name: "FileResource", value: 3, isUnsigned: true)
!594 = !DIEnumerator(name: "MapResource", value: 4, isUnsigned: true)
!595 = !DIEnumerator(name: "MemoryResource", value: 5, isUnsigned: true)
!596 = !DIEnumerator(name: "ThreadResource", value: 6, isUnsigned: true)
!597 = !DIEnumerator(name: "TimeResource", value: 7, isUnsigned: true)
!598 = !DIEnumerator(name: "ThrottleResource", value: 8, isUnsigned: true)
!599 = !{!600, !601, !656, !638, !612, !821, !665, !734, !822, !629, !624, !823, !729, !825, !826, !827, !828, !830, !831, !834, !824}
!600 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!601 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !602, size: 64)
!602 = !DIDerivedType(tag: DW_TAG_typedef, name: "Image", file: !4, line: 221, baseType: !603)
!603 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Image", file: !73, line: 150, size: 105920, elements: !604)
!604 = !{!605, !607, !609, !611, !614, !616, !618, !619, !620, !621, !622, !623, !634, !635, !636, !637, !639, !653, !655, !657, !659, !662, !663, !664, !670, !671, !672, !680, !681, !682, !683, !684, !685, !687, !689, !691, !693, !695, !697, !699, !700, !701, !702, !703, !704, !705, !713, !728, !742, !743, !744, !745, !749, !753, !757, !758, !759, !760, !761, !778, !779, !781, !782, !792, !793, !795, !796, !797, !798, !799, !800, !802, !803, !804, !805, !806, !807, !808, !810, !811, !812, !813, !814, !818, !820}
!605 = !DIDerivedType(tag: DW_TAG_member, name: "storage_class", scope: !603, file: !73, line: 153, baseType: !606, size: 32)
!606 = !DIDerivedType(tag: DW_TAG_typedef, name: "ClassType", file: !4, line: 209, baseType: !3)
!607 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !603, file: !73, line: 156, baseType: !608, size: 32, offset: 32)
!608 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorspaceType", file: !11, line: 61, baseType: !10)
!609 = !DIDerivedType(tag: DW_TAG_member, name: "compression", scope: !603, file: !73, line: 159, baseType: !610, size: 32, offset: 64)
!610 = !DIDerivedType(tag: DW_TAG_typedef, name: "CompressionType", file: !48, line: 49, baseType: !47)
!611 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !603, file: !73, line: 162, baseType: !612, size: 64, offset: 128)
!612 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !613, line: 46, baseType: !600)
!613 = !DIFile(filename: "Rohit/IR2Vec-LoopOptimizationFramework/build_REL_AsrtON/lib/clang/10.0.1/include/stddef.h", directory: "/home/venkat/IF-DV")
!614 = !DIDerivedType(tag: DW_TAG_member, name: "orientation", scope: !603, file: !73, line: 165, baseType: !615, size: 32, offset: 192)
!615 = !DIDerivedType(tag: DW_TAG_typedef, name: "OrientationType", file: !73, line: 86, baseType: !72)
!616 = !DIDerivedType(tag: DW_TAG_member, name: "taint", scope: !603, file: !73, line: 168, baseType: !617, size: 32, offset: 224)
!617 = !DIDerivedType(tag: DW_TAG_typedef, name: "MagickBooleanType", file: !4, line: 215, baseType: !84)
!618 = !DIDerivedType(tag: DW_TAG_member, name: "matte", scope: !603, file: !73, line: 169, baseType: !617, size: 32, offset: 256)
!619 = !DIDerivedType(tag: DW_TAG_member, name: "columns", scope: !603, file: !73, line: 172, baseType: !612, size: 64, offset: 320)
!620 = !DIDerivedType(tag: DW_TAG_member, name: "rows", scope: !603, file: !73, line: 173, baseType: !612, size: 64, offset: 384)
!621 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !603, file: !73, line: 174, baseType: !612, size: 64, offset: 448)
!622 = !DIDerivedType(tag: DW_TAG_member, name: "colors", scope: !603, file: !73, line: 175, baseType: !612, size: 64, offset: 512)
!623 = !DIDerivedType(tag: DW_TAG_member, name: "colormap", scope: !603, file: !73, line: 178, baseType: !624, size: 64, offset: 576)
!624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !625, size: 64)
!625 = !DIDerivedType(tag: DW_TAG_typedef, name: "PixelPacket", file: !326, line: 148, baseType: !626)
!626 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_PixelPacket", file: !326, line: 131, size: 64, elements: !627)
!627 = !{!628, !631, !632, !633}
!628 = !DIDerivedType(tag: DW_TAG_member, name: "blue", scope: !626, file: !326, line: 143, baseType: !629, size: 16)
!629 = !DIDerivedType(tag: DW_TAG_typedef, name: "Quantum", file: !4, line: 93, baseType: !630)
!630 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!631 = !DIDerivedType(tag: DW_TAG_member, name: "green", scope: !626, file: !326, line: 144, baseType: !629, size: 16, offset: 16)
!632 = !DIDerivedType(tag: DW_TAG_member, name: "red", scope: !626, file: !326, line: 145, baseType: !629, size: 16, offset: 32)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "opacity", scope: !626, file: !326, line: 146, baseType: !629, size: 16, offset: 48)
!634 = !DIDerivedType(tag: DW_TAG_member, name: "background_color", scope: !603, file: !73, line: 179, baseType: !625, size: 64, offset: 640)
!635 = !DIDerivedType(tag: DW_TAG_member, name: "border_color", scope: !603, file: !73, line: 180, baseType: !625, size: 64, offset: 704)
!636 = !DIDerivedType(tag: DW_TAG_member, name: "matte_color", scope: !603, file: !73, line: 181, baseType: !625, size: 64, offset: 768)
!637 = !DIDerivedType(tag: DW_TAG_member, name: "gamma", scope: !603, file: !73, line: 184, baseType: !638, size: 64, offset: 832)
!638 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!639 = !DIDerivedType(tag: DW_TAG_member, name: "chromaticity", scope: !603, file: !73, line: 187, baseType: !640, size: 768, offset: 896)
!640 = !DIDerivedType(tag: DW_TAG_typedef, name: "ChromaticityInfo", file: !73, line: 128, baseType: !641)
!641 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ChromaticityInfo", file: !73, line: 121, size: 768, elements: !642)
!642 = !{!643, !650, !651, !652}
!643 = !DIDerivedType(tag: DW_TAG_member, name: "red_primary", scope: !641, file: !73, line: 124, baseType: !644, size: 192)
!644 = !DIDerivedType(tag: DW_TAG_typedef, name: "PrimaryInfo", file: !73, line: 101, baseType: !645)
!645 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_PrimaryInfo", file: !73, line: 95, size: 192, elements: !646)
!646 = !{!647, !648, !649}
!647 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !645, file: !73, line: 98, baseType: !638, size: 64)
!648 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !645, file: !73, line: 99, baseType: !638, size: 64, offset: 64)
!649 = !DIDerivedType(tag: DW_TAG_member, name: "z", scope: !645, file: !73, line: 100, baseType: !638, size: 64, offset: 128)
!650 = !DIDerivedType(tag: DW_TAG_member, name: "green_primary", scope: !641, file: !73, line: 125, baseType: !644, size: 192, offset: 192)
!651 = !DIDerivedType(tag: DW_TAG_member, name: "blue_primary", scope: !641, file: !73, line: 126, baseType: !644, size: 192, offset: 384)
!652 = !DIDerivedType(tag: DW_TAG_member, name: "white_point", scope: !641, file: !73, line: 127, baseType: !644, size: 192, offset: 576)
!653 = !DIDerivedType(tag: DW_TAG_member, name: "rendering_intent", scope: !603, file: !73, line: 190, baseType: !654, size: 32, offset: 1664)
!654 = !DIDerivedType(tag: DW_TAG_typedef, name: "RenderingIntent", file: !89, line: 49, baseType: !88)
!655 = !DIDerivedType(tag: DW_TAG_member, name: "profiles", scope: !603, file: !73, line: 193, baseType: !656, size: 64, offset: 1728)
!656 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!657 = !DIDerivedType(tag: DW_TAG_member, name: "units", scope: !603, file: !73, line: 196, baseType: !658, size: 32, offset: 1792)
!658 = !DIDerivedType(tag: DW_TAG_typedef, name: "ResolutionType", file: !73, line: 93, baseType: !96)
!659 = !DIDerivedType(tag: DW_TAG_member, name: "montage", scope: !603, file: !73, line: 199, baseType: !660, size: 64, offset: 1856)
!660 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !661, size: 64)
!661 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!662 = !DIDerivedType(tag: DW_TAG_member, name: "directory", scope: !603, file: !73, line: 200, baseType: !660, size: 64, offset: 1920)
!663 = !DIDerivedType(tag: DW_TAG_member, name: "geometry", scope: !603, file: !73, line: 201, baseType: !660, size: 64, offset: 1984)
!664 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !603, file: !73, line: 204, baseType: !665, size: 64, offset: 2048)
!665 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !666, line: 77, baseType: !667)
!666 = !DIFile(filename: "/usr/include/stdio.h", directory: "")
!667 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ssize_t", file: !668, line: 193, baseType: !669)
!668 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!669 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!670 = !DIDerivedType(tag: DW_TAG_member, name: "x_resolution", scope: !603, file: !73, line: 207, baseType: !638, size: 64, offset: 2112)
!671 = !DIDerivedType(tag: DW_TAG_member, name: "y_resolution", scope: !603, file: !73, line: 208, baseType: !638, size: 64, offset: 2176)
!672 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !603, file: !73, line: 211, baseType: !673, size: 256, offset: 2240)
!673 = !DIDerivedType(tag: DW_TAG_typedef, name: "RectangleInfo", file: !153, line: 130, baseType: !674)
!674 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_RectangleInfo", file: !153, line: 121, size: 256, elements: !675)
!675 = !{!676, !677, !678, !679}
!676 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !674, file: !153, line: 124, baseType: !612, size: 64)
!677 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !674, file: !153, line: 125, baseType: !612, size: 64, offset: 64)
!678 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !674, file: !153, line: 128, baseType: !665, size: 64, offset: 128)
!679 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !674, file: !153, line: 129, baseType: !665, size: 64, offset: 192)
!680 = !DIDerivedType(tag: DW_TAG_member, name: "extract_info", scope: !603, file: !73, line: 212, baseType: !673, size: 256, offset: 2496)
!681 = !DIDerivedType(tag: DW_TAG_member, name: "tile_info", scope: !603, file: !73, line: 213, baseType: !673, size: 256, offset: 2752)
!682 = !DIDerivedType(tag: DW_TAG_member, name: "bias", scope: !603, file: !73, line: 216, baseType: !638, size: 64, offset: 3008)
!683 = !DIDerivedType(tag: DW_TAG_member, name: "blur", scope: !603, file: !73, line: 217, baseType: !638, size: 64, offset: 3072)
!684 = !DIDerivedType(tag: DW_TAG_member, name: "fuzz", scope: !603, file: !73, line: 218, baseType: !638, size: 64, offset: 3136)
!685 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !603, file: !73, line: 221, baseType: !686, size: 32, offset: 3200)
!686 = !DIDerivedType(tag: DW_TAG_typedef, name: "FilterTypes", file: !102, line: 66, baseType: !101)
!687 = !DIDerivedType(tag: DW_TAG_member, name: "interlace", scope: !603, file: !73, line: 224, baseType: !688, size: 32, offset: 3232)
!688 = !DIDerivedType(tag: DW_TAG_typedef, name: "InterlaceType", file: !73, line: 73, baseType: !136)
!689 = !DIDerivedType(tag: DW_TAG_member, name: "endian", scope: !603, file: !73, line: 227, baseType: !690, size: 32, offset: 3264)
!690 = !DIDerivedType(tag: DW_TAG_typedef, name: "EndianType", file: !147, line: 35, baseType: !146)
!691 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !603, file: !73, line: 230, baseType: !692, size: 32, offset: 3296)
!692 = !DIDerivedType(tag: DW_TAG_typedef, name: "GravityType", file: !153, line: 91, baseType: !152)
!693 = !DIDerivedType(tag: DW_TAG_member, name: "compose", scope: !603, file: !73, line: 233, baseType: !694, size: 32, offset: 3328)
!694 = !DIDerivedType(tag: DW_TAG_typedef, name: "CompositeOperator", file: !168, line: 99, baseType: !167)
!695 = !DIDerivedType(tag: DW_TAG_member, name: "dispose", scope: !603, file: !73, line: 236, baseType: !696, size: 32, offset: 3360)
!696 = !DIDerivedType(tag: DW_TAG_typedef, name: "DisposeType", file: !239, line: 32, baseType: !238)
!697 = !DIDerivedType(tag: DW_TAG_member, name: "clip_mask", scope: !603, file: !73, line: 239, baseType: !698, size: 64, offset: 3392)
!698 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !603, size: 64)
!699 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !603, file: !73, line: 242, baseType: !612, size: 64, offset: 3456)
!700 = !DIDerivedType(tag: DW_TAG_member, name: "delay", scope: !603, file: !73, line: 243, baseType: !612, size: 64, offset: 3520)
!701 = !DIDerivedType(tag: DW_TAG_member, name: "ticks_per_second", scope: !603, file: !73, line: 246, baseType: !665, size: 64, offset: 3584)
!702 = !DIDerivedType(tag: DW_TAG_member, name: "iterations", scope: !603, file: !73, line: 249, baseType: !612, size: 64, offset: 3648)
!703 = !DIDerivedType(tag: DW_TAG_member, name: "total_colors", scope: !603, file: !73, line: 250, baseType: !612, size: 64, offset: 3712)
!704 = !DIDerivedType(tag: DW_TAG_member, name: "start_loop", scope: !603, file: !73, line: 253, baseType: !665, size: 64, offset: 3776)
!705 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !603, file: !73, line: 256, baseType: !706, size: 192, offset: 3840)
!706 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErrorInfo", file: !707, line: 68, baseType: !708)
!707 = !DIFile(filename: "./magick/color.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!708 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ErrorInfo", file: !707, line: 62, size: 192, elements: !709)
!709 = !{!710, !711, !712}
!710 = !DIDerivedType(tag: DW_TAG_member, name: "mean_error_per_pixel", scope: !708, file: !707, line: 65, baseType: !638, size: 64)
!711 = !DIDerivedType(tag: DW_TAG_member, name: "normalized_mean_error", scope: !708, file: !707, line: 66, baseType: !638, size: 64, offset: 64)
!712 = !DIDerivedType(tag: DW_TAG_member, name: "normalized_maximum_error", scope: !708, file: !707, line: 67, baseType: !638, size: 64, offset: 128)
!713 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !603, file: !73, line: 259, baseType: !714, size: 512, offset: 4032)
!714 = !DIDerivedType(tag: DW_TAG_typedef, name: "TimerInfo", file: !247, line: 51, baseType: !715)
!715 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_TimerInfo", file: !247, line: 40, size: 512, elements: !716)
!716 = !{!717, !724, !725, !727}
!717 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !715, file: !247, line: 43, baseType: !718, size: 192)
!718 = !DIDerivedType(tag: DW_TAG_typedef, name: "Timer", file: !247, line: 38, baseType: !719)
!719 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Timer", file: !247, line: 32, size: 192, elements: !720)
!720 = !{!721, !722, !723}
!721 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !719, file: !247, line: 35, baseType: !638, size: 64)
!722 = !DIDerivedType(tag: DW_TAG_member, name: "stop", scope: !719, file: !247, line: 36, baseType: !638, size: 64, offset: 64)
!723 = !DIDerivedType(tag: DW_TAG_member, name: "total", scope: !719, file: !247, line: 37, baseType: !638, size: 64, offset: 128)
!724 = !DIDerivedType(tag: DW_TAG_member, name: "elapsed", scope: !715, file: !247, line: 44, baseType: !718, size: 192, offset: 192)
!725 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !715, file: !247, line: 47, baseType: !726, size: 32, offset: 384)
!726 = !DIDerivedType(tag: DW_TAG_typedef, name: "TimerState", file: !247, line: 30, baseType: !246)
!727 = !DIDerivedType(tag: DW_TAG_member, name: "signature", scope: !715, file: !247, line: 50, baseType: !612, size: 64, offset: 448)
!728 = !DIDerivedType(tag: DW_TAG_member, name: "progress_monitor", scope: !603, file: !73, line: 262, baseType: !729, size: 64, offset: 4544)
!729 = !DIDerivedType(tag: DW_TAG_typedef, name: "MagickProgressMonitor", file: !730, line: 26, baseType: !731)
!730 = !DIFile(filename: "./magick/monitor.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!731 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !732, size: 64)
!732 = !DISubroutineType(types: !733)
!733 = !{!617, !734, !736, !739, !656}
!734 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !735, size: 64)
!735 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !661)
!736 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !737)
!737 = !DIDerivedType(tag: DW_TAG_typedef, name: "MagickOffsetType", file: !4, line: 150, baseType: !738)
!738 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!739 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !740)
!740 = !DIDerivedType(tag: DW_TAG_typedef, name: "MagickSizeType", file: !4, line: 151, baseType: !741)
!741 = !DIBasicType(name: "long long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!742 = !DIDerivedType(tag: DW_TAG_member, name: "client_data", scope: !603, file: !73, line: 265, baseType: !656, size: 64, offset: 4608)
!743 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !603, file: !73, line: 266, baseType: !656, size: 64, offset: 4672)
!744 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !603, file: !73, line: 267, baseType: !656, size: 64, offset: 4736)
!745 = !DIDerivedType(tag: DW_TAG_member, name: "ascii85", scope: !603, file: !73, line: 270, baseType: !746, size: 64, offset: 4800)
!746 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !747, size: 64)
!747 = !DIDerivedType(tag: DW_TAG_typedef, name: "Ascii85Info", file: !48, line: 52, baseType: !748)
!748 = !DICompositeType(tag: DW_TAG_structure_type, name: "_Ascii85Info", file: !48, line: 51, flags: DIFlagFwdDecl)
!749 = !DIDerivedType(tag: DW_TAG_member, name: "blob", scope: !603, file: !73, line: 273, baseType: !750, size: 64, offset: 4864)
!750 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !751, size: 64)
!751 = !DIDerivedType(tag: DW_TAG_typedef, name: "BlobInfo", file: !4, line: 217, baseType: !752)
!752 = !DICompositeType(tag: DW_TAG_structure_type, name: "_BlobInfo", file: !4, line: 217, flags: DIFlagFwdDecl)
!753 = !DIDerivedType(tag: DW_TAG_member, name: "filename", scope: !603, file: !73, line: 276, baseType: !754, size: 32768, offset: 4928)
!754 = !DICompositeType(tag: DW_TAG_array_type, baseType: !661, size: 32768, elements: !755)
!755 = !{!756}
!756 = !DISubrange(count: 4096)
!757 = !DIDerivedType(tag: DW_TAG_member, name: "magick_filename", scope: !603, file: !73, line: 277, baseType: !754, size: 32768, offset: 37696)
!758 = !DIDerivedType(tag: DW_TAG_member, name: "magick", scope: !603, file: !73, line: 278, baseType: !754, size: 32768, offset: 70464)
!759 = !DIDerivedType(tag: DW_TAG_member, name: "magick_columns", scope: !603, file: !73, line: 281, baseType: !612, size: 64, offset: 103232)
!760 = !DIDerivedType(tag: DW_TAG_member, name: "magick_rows", scope: !603, file: !73, line: 282, baseType: !612, size: 64, offset: 103296)
!761 = !DIDerivedType(tag: DW_TAG_member, name: "exception", scope: !603, file: !73, line: 285, baseType: !762, size: 448, offset: 103360)
!762 = !DIDerivedType(tag: DW_TAG_typedef, name: "ExceptionInfo", file: !4, line: 219, baseType: !763)
!763 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ExceptionInfo", file: !253, line: 102, size: 448, elements: !764)
!764 = !{!765, !767, !768, !769, !770, !771, !772, !777}
!765 = !DIDerivedType(tag: DW_TAG_member, name: "severity", scope: !763, file: !253, line: 105, baseType: !766, size: 32)
!766 = !DIDerivedType(tag: DW_TAG_typedef, name: "ExceptionType", file: !253, line: 100, baseType: !252)
!767 = !DIDerivedType(tag: DW_TAG_member, name: "error_number", scope: !763, file: !253, line: 108, baseType: !513, size: 32, offset: 32)
!768 = !DIDerivedType(tag: DW_TAG_member, name: "reason", scope: !763, file: !253, line: 111, baseType: !660, size: 64, offset: 64)
!769 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !763, file: !253, line: 112, baseType: !660, size: 64, offset: 128)
!770 = !DIDerivedType(tag: DW_TAG_member, name: "exceptions", scope: !763, file: !253, line: 115, baseType: !656, size: 64, offset: 192)
!771 = !DIDerivedType(tag: DW_TAG_member, name: "relinquish", scope: !763, file: !253, line: 118, baseType: !617, size: 32, offset: 256)
!772 = !DIDerivedType(tag: DW_TAG_member, name: "semaphore", scope: !763, file: !253, line: 121, baseType: !773, size: 64, offset: 320)
!773 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !774, size: 64)
!774 = !DIDerivedType(tag: DW_TAG_typedef, name: "SemaphoreInfo", file: !775, line: 26, baseType: !776)
!775 = !DIFile(filename: "./magick/semaphore.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!776 = !DICompositeType(tag: DW_TAG_structure_type, name: "SemaphoreInfo", file: !775, line: 25, flags: DIFlagFwdDecl)
!777 = !DIDerivedType(tag: DW_TAG_member, name: "signature", scope: !763, file: !253, line: 124, baseType: !612, size: 64, offset: 384)
!778 = !DIDerivedType(tag: DW_TAG_member, name: "debug", scope: !603, file: !73, line: 288, baseType: !617, size: 32, offset: 103808)
!779 = !DIDerivedType(tag: DW_TAG_member, name: "reference_count", scope: !603, file: !73, line: 291, baseType: !780, size: 64, offset: 103872)
!780 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !665)
!781 = !DIDerivedType(tag: DW_TAG_member, name: "semaphore", scope: !603, file: !73, line: 294, baseType: !773, size: 64, offset: 103936)
!782 = !DIDerivedType(tag: DW_TAG_member, name: "color_profile", scope: !603, file: !73, line: 297, baseType: !783, size: 256, offset: 104000)
!783 = !DIDerivedType(tag: DW_TAG_typedef, name: "ProfileInfo", file: !89, line: 40, baseType: !784)
!784 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ProfileInfo", file: !89, line: 27, size: 256, elements: !785)
!785 = !{!786, !787, !788, !791}
!786 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !784, file: !89, line: 30, baseType: !660, size: 64)
!787 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !784, file: !89, line: 33, baseType: !612, size: 64, offset: 64)
!788 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !784, file: !89, line: 36, baseType: !789, size: 64, offset: 128)
!789 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !790, size: 64)
!790 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!791 = !DIDerivedType(tag: DW_TAG_member, name: "signature", scope: !784, file: !89, line: 39, baseType: !612, size: 64, offset: 192)
!792 = !DIDerivedType(tag: DW_TAG_member, name: "iptc_profile", scope: !603, file: !73, line: 298, baseType: !783, size: 256, offset: 104256)
!793 = !DIDerivedType(tag: DW_TAG_member, name: "generic_profile", scope: !603, file: !73, line: 299, baseType: !794, size: 64, offset: 104512)
!794 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !783, size: 64)
!795 = !DIDerivedType(tag: DW_TAG_member, name: "generic_profiles", scope: !603, file: !73, line: 302, baseType: !612, size: 64, offset: 104576)
!796 = !DIDerivedType(tag: DW_TAG_member, name: "signature", scope: !603, file: !73, line: 305, baseType: !612, size: 64, offset: 104640)
!797 = !DIDerivedType(tag: DW_TAG_member, name: "previous", scope: !603, file: !73, line: 308, baseType: !698, size: 64, offset: 104704)
!798 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !603, file: !73, line: 309, baseType: !698, size: 64, offset: 104768)
!799 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !603, file: !73, line: 310, baseType: !698, size: 64, offset: 104832)
!800 = !DIDerivedType(tag: DW_TAG_member, name: "interpolate", scope: !603, file: !73, line: 313, baseType: !801, size: 32, offset: 104896)
!801 = !DIDerivedType(tag: DW_TAG_typedef, name: "InterpolatePixelMethod", file: !326, line: 47, baseType: !325)
!802 = !DIDerivedType(tag: DW_TAG_member, name: "black_point_compensation", scope: !603, file: !73, line: 316, baseType: !617, size: 32, offset: 104928)
!803 = !DIDerivedType(tag: DW_TAG_member, name: "transparent_color", scope: !603, file: !73, line: 319, baseType: !625, size: 64, offset: 104960)
!804 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !603, file: !73, line: 322, baseType: !698, size: 64, offset: 105024)
!805 = !DIDerivedType(tag: DW_TAG_member, name: "tile_offset", scope: !603, file: !73, line: 325, baseType: !673, size: 256, offset: 105088)
!806 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !603, file: !73, line: 328, baseType: !656, size: 64, offset: 105344)
!807 = !DIDerivedType(tag: DW_TAG_member, name: "artifacts", scope: !603, file: !73, line: 329, baseType: !656, size: 64, offset: 105408)
!808 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !603, file: !73, line: 332, baseType: !809, size: 32, offset: 105472)
!809 = !DIDerivedType(tag: DW_TAG_typedef, name: "ImageType", file: !73, line: 61, baseType: !342)
!810 = !DIDerivedType(tag: DW_TAG_member, name: "dither", scope: !603, file: !73, line: 335, baseType: !617, size: 32, offset: 105504)
!811 = !DIDerivedType(tag: DW_TAG_member, name: "extent", scope: !603, file: !73, line: 338, baseType: !740, size: 64, offset: 105536)
!812 = !DIDerivedType(tag: DW_TAG_member, name: "ping", scope: !603, file: !73, line: 341, baseType: !617, size: 32, offset: 105600)
!813 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !603, file: !73, line: 344, baseType: !612, size: 64, offset: 105664)
!814 = !DIDerivedType(tag: DW_TAG_member, name: "timestamp", scope: !603, file: !73, line: 347, baseType: !815, size: 64, offset: 105728)
!815 = !DIDerivedType(tag: DW_TAG_typedef, name: "time_t", file: !816, line: 7, baseType: !817)
!816 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/time_t.h", directory: "")
!817 = !DIDerivedType(tag: DW_TAG_typedef, name: "__time_t", file: !668, line: 160, baseType: !669)
!818 = !DIDerivedType(tag: DW_TAG_member, name: "intensity", scope: !603, file: !73, line: 350, baseType: !819, size: 32, offset: 105792)
!819 = !DIDerivedType(tag: DW_TAG_typedef, name: "PixelIntensityMethod", file: !326, line: 79, baseType: !356)
!820 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !603, file: !73, line: 353, baseType: !612, size: 64, offset: 105856)
!821 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !638, size: 64)
!822 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !660, size: 64)
!823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !824, size: 64)
!824 = !DIDerivedType(tag: DW_TAG_typedef, name: "IndexPacket", file: !326, line: 129, baseType: !629)
!825 = !DIDerivedType(tag: DW_TAG_typedef, name: "DistortImageMethod", file: !394, line: 56, baseType: !393)
!826 = !DIDerivedType(tag: DW_TAG_typedef, name: "SparseColorMethod", file: !394, line: 70, baseType: !502)
!827 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !821, size: 64)
!828 = !DIDerivedType(tag: DW_TAG_typedef, name: "MagickRealType", file: !4, line: 78, baseType: !829)
!829 = !DIBasicType(name: "float", size: 32, encoding: DW_ATE_float)
!830 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !831, size: 64)
!831 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !832, size: 64)
!832 = !DIDerivedType(tag: DW_TAG_typedef, name: "ResampleFilter", file: !102, line: 76, baseType: !833)
!833 = !DICompositeType(tag: DW_TAG_structure_type, name: "_ResampleFilter", file: !102, line: 75, flags: DIFlagFwdDecl)
!834 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !835, size: 64)
!835 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !824)
!836 = !{i32 7, !"Dwarf Version", i32 4}
!837 = !{i32 2, !"Debug Info Version", i32 3}
!838 = !{i32 1, !"wchar_size", i32 4}
!839 = !{!"clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)"}
!840 = distinct !DISubprogram(name: "AffineTransformImage", scope: !1, file: !1, line: 294, type: !841, scopeLine: 296, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !857)
!841 = !DISubroutineType(types: !842)
!842 = !{!601, !843, !845, !856}
!843 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !844, size: 64)
!844 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !602)
!845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !846, size: 64)
!846 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !847)
!847 = !DIDerivedType(tag: DW_TAG_typedef, name: "AffineMatrix", file: !153, line: 102, baseType: !848)
!848 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_AffineMatrix", file: !153, line: 93, size: 384, elements: !849)
!849 = !{!850, !851, !852, !853, !854, !855}
!850 = !DIDerivedType(tag: DW_TAG_member, name: "sx", scope: !848, file: !153, line: 96, baseType: !638, size: 64)
!851 = !DIDerivedType(tag: DW_TAG_member, name: "rx", scope: !848, file: !153, line: 97, baseType: !638, size: 64, offset: 64)
!852 = !DIDerivedType(tag: DW_TAG_member, name: "ry", scope: !848, file: !153, line: 98, baseType: !638, size: 64, offset: 128)
!853 = !DIDerivedType(tag: DW_TAG_member, name: "sy", scope: !848, file: !153, line: 99, baseType: !638, size: 64, offset: 192)
!854 = !DIDerivedType(tag: DW_TAG_member, name: "tx", scope: !848, file: !153, line: 100, baseType: !638, size: 64, offset: 256)
!855 = !DIDerivedType(tag: DW_TAG_member, name: "ty", scope: !848, file: !153, line: 101, baseType: !638, size: 64, offset: 320)
!856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !762, size: 64)
!857 = !{}
!858 = !DILocalVariable(name: "image", arg: 1, scope: !840, file: !1, line: 294, type: !843)
!859 = !DILocation(line: 294, column: 55, scope: !840)
!860 = !DILocalVariable(name: "affine_matrix", arg: 2, scope: !840, file: !1, line: 295, type: !845)
!861 = !DILocation(line: 295, column: 23, scope: !840)
!862 = !DILocalVariable(name: "exception", arg: 3, scope: !840, file: !1, line: 295, type: !856)
!863 = !DILocation(line: 295, column: 52, scope: !840)
!864 = !DILocalVariable(name: "distort", scope: !840, file: !1, line: 298, type: !865)
!865 = !DICompositeType(tag: DW_TAG_array_type, baseType: !638, size: 384, elements: !866)
!866 = !{!867}
!867 = !DISubrange(count: 6)
!868 = !DILocation(line: 298, column: 5, scope: !840)
!869 = !DILocalVariable(name: "deskew_image", scope: !840, file: !1, line: 301, type: !601)
!870 = !DILocation(line: 301, column: 6, scope: !840)
!871 = !DILocation(line: 307, column: 7, scope: !872)
!872 = distinct !DILexicalBlock(scope: !840, file: !1, line: 307, column: 7)
!873 = !DILocation(line: 307, column: 14, scope: !872)
!874 = !DILocation(line: 307, column: 20, scope: !872)
!875 = !DILocation(line: 307, column: 7, scope: !840)
!876 = !DILocation(line: 308, column: 61, scope: !872)
!877 = !DILocation(line: 308, column: 68, scope: !872)
!878 = !DILocation(line: 308, column: 12, scope: !872)
!879 = !DILocation(line: 308, column: 5, scope: !872)
!880 = !DILocation(line: 312, column: 14, scope: !840)
!881 = !DILocation(line: 312, column: 29, scope: !840)
!882 = !DILocation(line: 312, column: 3, scope: !840)
!883 = !DILocation(line: 312, column: 13, scope: !840)
!884 = !DILocation(line: 313, column: 14, scope: !840)
!885 = !DILocation(line: 313, column: 29, scope: !840)
!886 = !DILocation(line: 313, column: 3, scope: !840)
!887 = !DILocation(line: 313, column: 13, scope: !840)
!888 = !DILocation(line: 314, column: 14, scope: !840)
!889 = !DILocation(line: 314, column: 29, scope: !840)
!890 = !DILocation(line: 314, column: 3, scope: !840)
!891 = !DILocation(line: 314, column: 13, scope: !840)
!892 = !DILocation(line: 315, column: 14, scope: !840)
!893 = !DILocation(line: 315, column: 29, scope: !840)
!894 = !DILocation(line: 315, column: 3, scope: !840)
!895 = !DILocation(line: 315, column: 13, scope: !840)
!896 = !DILocation(line: 316, column: 14, scope: !840)
!897 = !DILocation(line: 316, column: 29, scope: !840)
!898 = !DILocation(line: 316, column: 3, scope: !840)
!899 = !DILocation(line: 316, column: 13, scope: !840)
!900 = !DILocation(line: 317, column: 14, scope: !840)
!901 = !DILocation(line: 317, column: 29, scope: !840)
!902 = !DILocation(line: 317, column: 3, scope: !840)
!903 = !DILocation(line: 317, column: 13, scope: !840)
!904 = !DILocation(line: 318, column: 29, scope: !840)
!905 = !DILocation(line: 318, column: 64, scope: !840)
!906 = !DILocation(line: 319, column: 16, scope: !840)
!907 = !DILocation(line: 318, column: 16, scope: !840)
!908 = !DILocation(line: 318, column: 15, scope: !840)
!909 = !DILocation(line: 320, column: 10, scope: !840)
!910 = !DILocation(line: 320, column: 3, scope: !840)
!911 = distinct !DISubprogram(name: "DistortImage", scope: !1, file: !1, line: 1686, type: !912, scopeLine: 1689, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !857)
!912 = !DISubroutineType(types: !913)
!913 = !{!601, !843, !825, !914, !915, !617, !856}
!914 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !612)
!915 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !916, size: 64)
!916 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !638)
!917 = !DILocalVariable(name: "image", arg: 1, scope: !911, file: !1, line: 1686, type: !843)
!918 = !DILocation(line: 1686, column: 47, scope: !911)
!919 = !DILocalVariable(name: "method", arg: 2, scope: !911, file: !1, line: 1686, type: !825)
!920 = !DILocation(line: 1686, column: 72, scope: !911)
!921 = !DILocalVariable(name: "number_arguments", arg: 3, scope: !911, file: !1, line: 1687, type: !914)
!922 = !DILocation(line: 1687, column: 16, scope: !911)
!923 = !DILocalVariable(name: "arguments", arg: 4, scope: !911, file: !1, line: 1687, type: !915)
!924 = !DILocation(line: 1687, column: 47, scope: !911)
!925 = !DILocalVariable(name: "bestfit", arg: 5, scope: !911, file: !1, line: 1688, type: !617)
!926 = !DILocation(line: 1688, column: 21, scope: !911)
!927 = !DILocalVariable(name: "exception", arg: 6, scope: !911, file: !1, line: 1688, type: !856)
!928 = !DILocation(line: 1688, column: 44, scope: !911)
!929 = !DILocalVariable(name: "coeff", scope: !911, file: !1, line: 1693, type: !821)
!930 = !DILocation(line: 1693, column: 6, scope: !911)
!931 = !DILocalVariable(name: "output_scaling", scope: !911, file: !1, line: 1694, type: !638)
!932 = !DILocation(line: 1694, column: 5, scope: !911)
!933 = !DILocalVariable(name: "distort_image", scope: !911, file: !1, line: 1697, type: !601)
!934 = !DILocation(line: 1697, column: 6, scope: !911)
!935 = !DILocalVariable(name: "geometry", scope: !911, file: !1, line: 1700, type: !673)
!936 = !DILocation(line: 1700, column: 5, scope: !911)
!937 = !DILocalVariable(name: "viewport_given", scope: !911, file: !1, line: 1703, type: !617)
!938 = !DILocation(line: 1703, column: 5, scope: !911)
!939 = !DILocation(line: 1707, column: 7, scope: !940)
!940 = distinct !DILexicalBlock(scope: !911, file: !1, line: 1707, column: 7)
!941 = !DILocation(line: 1707, column: 14, scope: !940)
!942 = !DILocation(line: 1707, column: 20, scope: !940)
!943 = !DILocation(line: 1707, column: 7, scope: !911)
!944 = !DILocation(line: 1708, column: 61, scope: !940)
!945 = !DILocation(line: 1708, column: 68, scope: !940)
!946 = !DILocation(line: 1708, column: 12, scope: !940)
!947 = !DILocation(line: 1708, column: 5, scope: !940)
!948 = !DILocation(line: 1715, column: 8, scope: !949)
!949 = distinct !DILexicalBlock(scope: !911, file: !1, line: 1715, column: 8)
!950 = !DILocation(line: 1715, column: 15, scope: !949)
!951 = !DILocation(line: 1715, column: 8, scope: !911)
!952 = !DILocation(line: 1717, column: 12, scope: !953)
!953 = distinct !DILexicalBlock(scope: !954, file: !1, line: 1717, column: 12)
!954 = distinct !DILexicalBlock(scope: !949, file: !1, line: 1716, column: 5)
!955 = !DILocation(line: 1717, column: 29, scope: !953)
!956 = !DILocation(line: 1717, column: 12, scope: !954)
!957 = !DILocation(line: 1719, column: 39, scope: !958)
!958 = distinct !DILexicalBlock(scope: !953, file: !1, line: 1718, column: 9)
!959 = !DILocation(line: 1719, column: 18, scope: !958)
!960 = !DILocation(line: 1722, column: 11, scope: !958)
!961 = !DILocation(line: 1724, column: 40, scope: !954)
!962 = !DILocation(line: 1724, column: 54, scope: !954)
!963 = !DILocation(line: 1724, column: 46, scope: !954)
!964 = !DILocation(line: 1725, column: 18, scope: !954)
!965 = !DILocation(line: 1725, column: 10, scope: !954)
!966 = !DILocation(line: 1725, column: 32, scope: !954)
!967 = !DILocation(line: 1724, column: 21, scope: !954)
!968 = !DILocation(line: 1724, column: 20, scope: !954)
!969 = !DILocation(line: 1726, column: 14, scope: !954)
!970 = !DILocation(line: 1726, column: 7, scope: !954)
!971 = !DILocation(line: 1736, column: 32, scope: !911)
!972 = !DILocation(line: 1736, column: 48, scope: !911)
!973 = !DILocation(line: 1737, column: 7, scope: !911)
!974 = !DILocation(line: 1737, column: 21, scope: !911)
!975 = !DILocation(line: 1736, column: 11, scope: !911)
!976 = !DILocation(line: 1736, column: 9, scope: !911)
!977 = !DILocation(line: 1738, column: 8, scope: !978)
!978 = distinct !DILexicalBlock(scope: !911, file: !1, line: 1738, column: 8)
!979 = !DILocation(line: 1738, column: 14, scope: !978)
!980 = !DILocation(line: 1738, column: 8, scope: !911)
!981 = !DILocation(line: 1739, column: 5, scope: !978)
!982 = !DILocation(line: 1747, column: 18, scope: !911)
!983 = !DILocation(line: 1747, column: 25, scope: !911)
!984 = !DILocation(line: 1747, column: 12, scope: !911)
!985 = !DILocation(line: 1747, column: 17, scope: !911)
!986 = !DILocation(line: 1748, column: 19, scope: !911)
!987 = !DILocation(line: 1748, column: 26, scope: !911)
!988 = !DILocation(line: 1748, column: 12, scope: !911)
!989 = !DILocation(line: 1748, column: 18, scope: !911)
!990 = !DILocation(line: 1749, column: 12, scope: !911)
!991 = !DILocation(line: 1749, column: 13, scope: !911)
!992 = !DILocation(line: 1750, column: 12, scope: !911)
!993 = !DILocation(line: 1750, column: 13, scope: !911)
!994 = !DILocation(line: 1752, column: 8, scope: !995)
!995 = distinct !DILexicalBlock(scope: !911, file: !1, line: 1752, column: 8)
!996 = !DILocation(line: 1752, column: 15, scope: !995)
!997 = !DILocation(line: 1752, column: 8, scope: !911)
!998 = !DILocation(line: 1753, column: 13, scope: !999)
!999 = distinct !DILexicalBlock(scope: !995, file: !1, line: 1752, column: 34)
!1000 = !DILocation(line: 1754, column: 3, scope: !999)
!1001 = !DILocation(line: 1757, column: 8, scope: !1002)
!1002 = distinct !DILexicalBlock(scope: !911, file: !1, line: 1757, column: 8)
!1003 = !DILocation(line: 1757, column: 8, scope: !911)
!1004 = !DILocalVariable(name: "s", scope: !1005, file: !1, line: 1759, type: !1006)
!1005 = distinct !DILexicalBlock(scope: !1002, file: !1, line: 1757, column: 18)
!1006 = !DIDerivedType(tag: DW_TAG_typedef, name: "PointInfo", file: !1007, line: 142, baseType: !1008)
!1007 = !DIFile(filename: "./magick/draw.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!1008 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_PointInfo", file: !1007, line: 137, size: 128, elements: !1009)
!1009 = !{!1010, !1011}
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1008, file: !1007, line: 140, baseType: !638, size: 64)
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !1008, file: !1007, line: 141, baseType: !638, size: 64, offset: 64)
!1012 = !DILocation(line: 1759, column: 7, scope: !1005)
!1013 = !DILocalVariable(name: "d", scope: !1005, file: !1, line: 1759, type: !1006)
!1014 = !DILocation(line: 1759, column: 9, scope: !1005)
!1015 = !DILocalVariable(name: "min", scope: !1005, file: !1, line: 1759, type: !1006)
!1016 = !DILocation(line: 1759, column: 11, scope: !1005)
!1017 = !DILocalVariable(name: "max", scope: !1005, file: !1, line: 1759, type: !1006)
!1018 = !DILocation(line: 1759, column: 15, scope: !1005)
!1019 = !DILocalVariable(name: "fix_bounds", scope: !1005, file: !1, line: 1762, type: !617)
!1020 = !DILocation(line: 1762, column: 7, scope: !1005)
!1021 = !DILocation(line: 1764, column: 35, scope: !1005)
!1022 = !DILocation(line: 1764, column: 36, scope: !1005)
!1023 = !DILocation(line: 1764, column: 29, scope: !1005)
!1024 = !DILocation(line: 1764, column: 30, scope: !1005)
!1025 = !DILocation(line: 1764, column: 23, scope: !1005)
!1026 = !DILocation(line: 1764, column: 24, scope: !1005)
!1027 = !DILocation(line: 1764, column: 17, scope: !1005)
!1028 = !DILocation(line: 1764, column: 18, scope: !1005)
!1029 = !DILocation(line: 1764, column: 11, scope: !1005)
!1030 = !DILocation(line: 1764, column: 12, scope: !1005)
!1031 = !DILocation(line: 1764, column: 7, scope: !1005)
!1032 = !DILocation(line: 1764, column: 8, scope: !1005)
!1033 = !DILocation(line: 1782, column: 13, scope: !1005)
!1034 = !DILocation(line: 1782, column: 5, scope: !1005)
!1035 = !DILocalVariable(name: "inverse", scope: !1036, file: !1, line: 1785, type: !865)
!1036 = distinct !DILexicalBlock(scope: !1037, file: !1, line: 1785, column: 7)
!1037 = distinct !DILexicalBlock(scope: !1005, file: !1, line: 1783, column: 5)
!1038 = !DILocation(line: 1785, column: 16, scope: !1036)
!1039 = !DILocation(line: 1786, column: 34, scope: !1036)
!1040 = !DILocation(line: 1786, column: 41, scope: !1036)
!1041 = !DILocation(line: 1786, column: 9, scope: !1036)
!1042 = !DILocation(line: 1787, column: 24, scope: !1036)
!1043 = !DILocation(line: 1787, column: 31, scope: !1036)
!1044 = !DILocation(line: 1787, column: 36, scope: !1036)
!1045 = !DILocation(line: 1787, column: 15, scope: !1036)
!1046 = !DILocation(line: 1787, column: 11, scope: !1036)
!1047 = !DILocation(line: 1787, column: 13, scope: !1036)
!1048 = !DILocation(line: 1788, column: 24, scope: !1036)
!1049 = !DILocation(line: 1788, column: 31, scope: !1036)
!1050 = !DILocation(line: 1788, column: 36, scope: !1036)
!1051 = !DILocation(line: 1788, column: 15, scope: !1036)
!1052 = !DILocation(line: 1788, column: 11, scope: !1036)
!1053 = !DILocation(line: 1788, column: 13, scope: !1036)
!1054 = !DILocation(line: 1789, column: 15, scope: !1036)
!1055 = !DILocation(line: 1789, column: 28, scope: !1036)
!1056 = !DILocation(line: 1789, column: 25, scope: !1036)
!1057 = !DILocation(line: 1789, column: 30, scope: !1036)
!1058 = !DILocation(line: 1789, column: 43, scope: !1036)
!1059 = !DILocation(line: 1789, column: 40, scope: !1036)
!1060 = !DILocation(line: 1789, column: 29, scope: !1036)
!1061 = !DILocation(line: 1789, column: 45, scope: !1036)
!1062 = !DILocation(line: 1789, column: 44, scope: !1036)
!1063 = !DILocation(line: 1789, column: 11, scope: !1036)
!1064 = !DILocation(line: 1789, column: 13, scope: !1036)
!1065 = !DILocation(line: 1790, column: 15, scope: !1036)
!1066 = !DILocation(line: 1790, column: 28, scope: !1036)
!1067 = !DILocation(line: 1790, column: 25, scope: !1036)
!1068 = !DILocation(line: 1790, column: 30, scope: !1036)
!1069 = !DILocation(line: 1790, column: 43, scope: !1036)
!1070 = !DILocation(line: 1790, column: 40, scope: !1036)
!1071 = !DILocation(line: 1790, column: 29, scope: !1036)
!1072 = !DILocation(line: 1790, column: 45, scope: !1036)
!1073 = !DILocation(line: 1790, column: 44, scope: !1036)
!1074 = !DILocation(line: 1790, column: 11, scope: !1036)
!1075 = !DILocation(line: 1790, column: 13, scope: !1036)
!1076 = !DILocation(line: 1791, column: 9, scope: !1077)
!1077 = distinct !DILexicalBlock(scope: !1036, file: !1, line: 1791, column: 9)
!1078 = !DILocation(line: 1792, column: 24, scope: !1036)
!1079 = !DILocation(line: 1792, column: 31, scope: !1036)
!1080 = !DILocation(line: 1792, column: 36, scope: !1036)
!1081 = !DILocation(line: 1792, column: 15, scope: !1036)
!1082 = !DILocation(line: 1792, column: 38, scope: !1036)
!1083 = !DILocation(line: 1792, column: 45, scope: !1036)
!1084 = !DILocation(line: 1792, column: 37, scope: !1036)
!1085 = !DILocation(line: 1792, column: 11, scope: !1036)
!1086 = !DILocation(line: 1792, column: 13, scope: !1036)
!1087 = !DILocation(line: 1793, column: 24, scope: !1036)
!1088 = !DILocation(line: 1793, column: 31, scope: !1036)
!1089 = !DILocation(line: 1793, column: 36, scope: !1036)
!1090 = !DILocation(line: 1793, column: 15, scope: !1036)
!1091 = !DILocation(line: 1793, column: 11, scope: !1036)
!1092 = !DILocation(line: 1793, column: 13, scope: !1036)
!1093 = !DILocation(line: 1794, column: 15, scope: !1036)
!1094 = !DILocation(line: 1794, column: 28, scope: !1036)
!1095 = !DILocation(line: 1794, column: 25, scope: !1036)
!1096 = !DILocation(line: 1794, column: 30, scope: !1036)
!1097 = !DILocation(line: 1794, column: 43, scope: !1036)
!1098 = !DILocation(line: 1794, column: 40, scope: !1036)
!1099 = !DILocation(line: 1794, column: 29, scope: !1036)
!1100 = !DILocation(line: 1794, column: 45, scope: !1036)
!1101 = !DILocation(line: 1794, column: 44, scope: !1036)
!1102 = !DILocation(line: 1794, column: 11, scope: !1036)
!1103 = !DILocation(line: 1794, column: 13, scope: !1036)
!1104 = !DILocation(line: 1795, column: 15, scope: !1036)
!1105 = !DILocation(line: 1795, column: 28, scope: !1036)
!1106 = !DILocation(line: 1795, column: 25, scope: !1036)
!1107 = !DILocation(line: 1795, column: 30, scope: !1036)
!1108 = !DILocation(line: 1795, column: 43, scope: !1036)
!1109 = !DILocation(line: 1795, column: 40, scope: !1036)
!1110 = !DILocation(line: 1795, column: 29, scope: !1036)
!1111 = !DILocation(line: 1795, column: 45, scope: !1036)
!1112 = !DILocation(line: 1795, column: 44, scope: !1036)
!1113 = !DILocation(line: 1795, column: 11, scope: !1036)
!1114 = !DILocation(line: 1795, column: 13, scope: !1036)
!1115 = !DILocation(line: 1796, column: 9, scope: !1116)
!1116 = distinct !DILexicalBlock(scope: !1036, file: !1, line: 1796, column: 9)
!1117 = !DILocation(line: 1797, column: 24, scope: !1036)
!1118 = !DILocation(line: 1797, column: 31, scope: !1036)
!1119 = !DILocation(line: 1797, column: 36, scope: !1036)
!1120 = !DILocation(line: 1797, column: 15, scope: !1036)
!1121 = !DILocation(line: 1797, column: 11, scope: !1036)
!1122 = !DILocation(line: 1797, column: 13, scope: !1036)
!1123 = !DILocation(line: 1798, column: 24, scope: !1036)
!1124 = !DILocation(line: 1798, column: 31, scope: !1036)
!1125 = !DILocation(line: 1798, column: 36, scope: !1036)
!1126 = !DILocation(line: 1798, column: 15, scope: !1036)
!1127 = !DILocation(line: 1798, column: 38, scope: !1036)
!1128 = !DILocation(line: 1798, column: 45, scope: !1036)
!1129 = !DILocation(line: 1798, column: 37, scope: !1036)
!1130 = !DILocation(line: 1798, column: 11, scope: !1036)
!1131 = !DILocation(line: 1798, column: 13, scope: !1036)
!1132 = !DILocation(line: 1799, column: 15, scope: !1036)
!1133 = !DILocation(line: 1799, column: 28, scope: !1036)
!1134 = !DILocation(line: 1799, column: 25, scope: !1036)
!1135 = !DILocation(line: 1799, column: 30, scope: !1036)
!1136 = !DILocation(line: 1799, column: 43, scope: !1036)
!1137 = !DILocation(line: 1799, column: 40, scope: !1036)
!1138 = !DILocation(line: 1799, column: 29, scope: !1036)
!1139 = !DILocation(line: 1799, column: 45, scope: !1036)
!1140 = !DILocation(line: 1799, column: 44, scope: !1036)
!1141 = !DILocation(line: 1799, column: 11, scope: !1036)
!1142 = !DILocation(line: 1799, column: 13, scope: !1036)
!1143 = !DILocation(line: 1800, column: 15, scope: !1036)
!1144 = !DILocation(line: 1800, column: 28, scope: !1036)
!1145 = !DILocation(line: 1800, column: 25, scope: !1036)
!1146 = !DILocation(line: 1800, column: 30, scope: !1036)
!1147 = !DILocation(line: 1800, column: 43, scope: !1036)
!1148 = !DILocation(line: 1800, column: 40, scope: !1036)
!1149 = !DILocation(line: 1800, column: 29, scope: !1036)
!1150 = !DILocation(line: 1800, column: 45, scope: !1036)
!1151 = !DILocation(line: 1800, column: 44, scope: !1036)
!1152 = !DILocation(line: 1800, column: 11, scope: !1036)
!1153 = !DILocation(line: 1800, column: 13, scope: !1036)
!1154 = !DILocation(line: 1801, column: 9, scope: !1155)
!1155 = distinct !DILexicalBlock(scope: !1036, file: !1, line: 1801, column: 9)
!1156 = !DILocation(line: 1802, column: 24, scope: !1036)
!1157 = !DILocation(line: 1802, column: 31, scope: !1036)
!1158 = !DILocation(line: 1802, column: 36, scope: !1036)
!1159 = !DILocation(line: 1802, column: 15, scope: !1036)
!1160 = !DILocation(line: 1802, column: 38, scope: !1036)
!1161 = !DILocation(line: 1802, column: 45, scope: !1036)
!1162 = !DILocation(line: 1802, column: 37, scope: !1036)
!1163 = !DILocation(line: 1802, column: 11, scope: !1036)
!1164 = !DILocation(line: 1802, column: 13, scope: !1036)
!1165 = !DILocation(line: 1803, column: 24, scope: !1036)
!1166 = !DILocation(line: 1803, column: 31, scope: !1036)
!1167 = !DILocation(line: 1803, column: 36, scope: !1036)
!1168 = !DILocation(line: 1803, column: 15, scope: !1036)
!1169 = !DILocation(line: 1803, column: 38, scope: !1036)
!1170 = !DILocation(line: 1803, column: 45, scope: !1036)
!1171 = !DILocation(line: 1803, column: 37, scope: !1036)
!1172 = !DILocation(line: 1803, column: 11, scope: !1036)
!1173 = !DILocation(line: 1803, column: 13, scope: !1036)
!1174 = !DILocation(line: 1804, column: 15, scope: !1036)
!1175 = !DILocation(line: 1804, column: 28, scope: !1036)
!1176 = !DILocation(line: 1804, column: 25, scope: !1036)
!1177 = !DILocation(line: 1804, column: 30, scope: !1036)
!1178 = !DILocation(line: 1804, column: 43, scope: !1036)
!1179 = !DILocation(line: 1804, column: 40, scope: !1036)
!1180 = !DILocation(line: 1804, column: 29, scope: !1036)
!1181 = !DILocation(line: 1804, column: 45, scope: !1036)
!1182 = !DILocation(line: 1804, column: 44, scope: !1036)
!1183 = !DILocation(line: 1804, column: 11, scope: !1036)
!1184 = !DILocation(line: 1804, column: 13, scope: !1036)
!1185 = !DILocation(line: 1805, column: 15, scope: !1036)
!1186 = !DILocation(line: 1805, column: 28, scope: !1036)
!1187 = !DILocation(line: 1805, column: 25, scope: !1036)
!1188 = !DILocation(line: 1805, column: 30, scope: !1036)
!1189 = !DILocation(line: 1805, column: 43, scope: !1036)
!1190 = !DILocation(line: 1805, column: 40, scope: !1036)
!1191 = !DILocation(line: 1805, column: 29, scope: !1036)
!1192 = !DILocation(line: 1805, column: 45, scope: !1036)
!1193 = !DILocation(line: 1805, column: 44, scope: !1036)
!1194 = !DILocation(line: 1805, column: 11, scope: !1036)
!1195 = !DILocation(line: 1805, column: 13, scope: !1036)
!1196 = !DILocation(line: 1806, column: 9, scope: !1197)
!1197 = distinct !DILexicalBlock(scope: !1036, file: !1, line: 1806, column: 9)
!1198 = !DILocation(line: 1807, column: 9, scope: !1036)
!1199 = !DILocalVariable(name: "inverse", scope: !1200, file: !1, line: 1810, type: !1201)
!1200 = distinct !DILexicalBlock(scope: !1037, file: !1, line: 1810, column: 7)
!1201 = !DICompositeType(tag: DW_TAG_array_type, baseType: !638, size: 512, elements: !1202)
!1202 = !{!1203}
!1203 = !DISubrange(count: 8)
!1204 = !DILocation(line: 1810, column: 16, scope: !1200)
!1205 = !DILocalVariable(name: "scale", scope: !1200, file: !1, line: 1810, type: !638)
!1206 = !DILocation(line: 1810, column: 28, scope: !1200)
!1207 = !DILocation(line: 1811, column: 39, scope: !1200)
!1208 = !DILocation(line: 1811, column: 46, scope: !1200)
!1209 = !DILocation(line: 1811, column: 9, scope: !1200)
!1210 = !DILocation(line: 1812, column: 24, scope: !1200)
!1211 = !DILocation(line: 1812, column: 31, scope: !1200)
!1212 = !DILocation(line: 1812, column: 36, scope: !1200)
!1213 = !DILocation(line: 1812, column: 15, scope: !1200)
!1214 = !DILocation(line: 1812, column: 11, scope: !1200)
!1215 = !DILocation(line: 1812, column: 13, scope: !1200)
!1216 = !DILocation(line: 1813, column: 24, scope: !1200)
!1217 = !DILocation(line: 1813, column: 31, scope: !1200)
!1218 = !DILocation(line: 1813, column: 36, scope: !1200)
!1219 = !DILocation(line: 1813, column: 15, scope: !1200)
!1220 = !DILocation(line: 1813, column: 11, scope: !1200)
!1221 = !DILocation(line: 1813, column: 13, scope: !1200)
!1222 = !DILocation(line: 1814, column: 15, scope: !1200)
!1223 = !DILocation(line: 1814, column: 28, scope: !1200)
!1224 = !DILocation(line: 1814, column: 25, scope: !1200)
!1225 = !DILocation(line: 1814, column: 30, scope: !1200)
!1226 = !DILocation(line: 1814, column: 43, scope: !1200)
!1227 = !DILocation(line: 1814, column: 40, scope: !1200)
!1228 = !DILocation(line: 1814, column: 29, scope: !1200)
!1229 = !DILocation(line: 1814, column: 44, scope: !1200)
!1230 = !DILocation(line: 1814, column: 14, scope: !1200)
!1231 = !DILocation(line: 1815, column: 37, scope: !1200)
!1232 = !DILocation(line: 1815, column: 15, scope: !1200)
!1233 = !DILocation(line: 1815, column: 14, scope: !1200)
!1234 = !DILocation(line: 1816, column: 15, scope: !1200)
!1235 = !DILocation(line: 1816, column: 22, scope: !1200)
!1236 = !DILocation(line: 1816, column: 35, scope: !1200)
!1237 = !DILocation(line: 1816, column: 32, scope: !1200)
!1238 = !DILocation(line: 1816, column: 37, scope: !1200)
!1239 = !DILocation(line: 1816, column: 50, scope: !1200)
!1240 = !DILocation(line: 1816, column: 47, scope: !1200)
!1241 = !DILocation(line: 1816, column: 36, scope: !1200)
!1242 = !DILocation(line: 1816, column: 52, scope: !1200)
!1243 = !DILocation(line: 1816, column: 51, scope: !1200)
!1244 = !DILocation(line: 1816, column: 20, scope: !1200)
!1245 = !DILocation(line: 1816, column: 11, scope: !1200)
!1246 = !DILocation(line: 1816, column: 13, scope: !1200)
!1247 = !DILocation(line: 1817, column: 15, scope: !1200)
!1248 = !DILocation(line: 1817, column: 22, scope: !1200)
!1249 = !DILocation(line: 1817, column: 35, scope: !1200)
!1250 = !DILocation(line: 1817, column: 32, scope: !1200)
!1251 = !DILocation(line: 1817, column: 37, scope: !1200)
!1252 = !DILocation(line: 1817, column: 50, scope: !1200)
!1253 = !DILocation(line: 1817, column: 47, scope: !1200)
!1254 = !DILocation(line: 1817, column: 36, scope: !1200)
!1255 = !DILocation(line: 1817, column: 52, scope: !1200)
!1256 = !DILocation(line: 1817, column: 51, scope: !1200)
!1257 = !DILocation(line: 1817, column: 20, scope: !1200)
!1258 = !DILocation(line: 1817, column: 11, scope: !1200)
!1259 = !DILocation(line: 1817, column: 13, scope: !1200)
!1260 = !DILocation(line: 1818, column: 9, scope: !1261)
!1261 = distinct !DILexicalBlock(scope: !1200, file: !1, line: 1818, column: 9)
!1262 = !DILocation(line: 1819, column: 24, scope: !1200)
!1263 = !DILocation(line: 1819, column: 31, scope: !1200)
!1264 = !DILocation(line: 1819, column: 36, scope: !1200)
!1265 = !DILocation(line: 1819, column: 15, scope: !1200)
!1266 = !DILocation(line: 1819, column: 38, scope: !1200)
!1267 = !DILocation(line: 1819, column: 45, scope: !1200)
!1268 = !DILocation(line: 1819, column: 37, scope: !1200)
!1269 = !DILocation(line: 1819, column: 11, scope: !1200)
!1270 = !DILocation(line: 1819, column: 13, scope: !1200)
!1271 = !DILocation(line: 1820, column: 24, scope: !1200)
!1272 = !DILocation(line: 1820, column: 31, scope: !1200)
!1273 = !DILocation(line: 1820, column: 36, scope: !1200)
!1274 = !DILocation(line: 1820, column: 15, scope: !1200)
!1275 = !DILocation(line: 1820, column: 11, scope: !1200)
!1276 = !DILocation(line: 1820, column: 13, scope: !1200)
!1277 = !DILocation(line: 1821, column: 15, scope: !1200)
!1278 = !DILocation(line: 1821, column: 28, scope: !1200)
!1279 = !DILocation(line: 1821, column: 25, scope: !1200)
!1280 = !DILocation(line: 1821, column: 30, scope: !1200)
!1281 = !DILocation(line: 1821, column: 43, scope: !1200)
!1282 = !DILocation(line: 1821, column: 40, scope: !1200)
!1283 = !DILocation(line: 1821, column: 29, scope: !1200)
!1284 = !DILocation(line: 1821, column: 44, scope: !1200)
!1285 = !DILocation(line: 1821, column: 14, scope: !1200)
!1286 = !DILocation(line: 1822, column: 37, scope: !1200)
!1287 = !DILocation(line: 1822, column: 15, scope: !1200)
!1288 = !DILocation(line: 1822, column: 14, scope: !1200)
!1289 = !DILocation(line: 1823, column: 15, scope: !1200)
!1290 = !DILocation(line: 1823, column: 22, scope: !1200)
!1291 = !DILocation(line: 1823, column: 35, scope: !1200)
!1292 = !DILocation(line: 1823, column: 32, scope: !1200)
!1293 = !DILocation(line: 1823, column: 37, scope: !1200)
!1294 = !DILocation(line: 1823, column: 50, scope: !1200)
!1295 = !DILocation(line: 1823, column: 47, scope: !1200)
!1296 = !DILocation(line: 1823, column: 36, scope: !1200)
!1297 = !DILocation(line: 1823, column: 52, scope: !1200)
!1298 = !DILocation(line: 1823, column: 51, scope: !1200)
!1299 = !DILocation(line: 1823, column: 20, scope: !1200)
!1300 = !DILocation(line: 1823, column: 11, scope: !1200)
!1301 = !DILocation(line: 1823, column: 13, scope: !1200)
!1302 = !DILocation(line: 1824, column: 15, scope: !1200)
!1303 = !DILocation(line: 1824, column: 22, scope: !1200)
!1304 = !DILocation(line: 1824, column: 35, scope: !1200)
!1305 = !DILocation(line: 1824, column: 32, scope: !1200)
!1306 = !DILocation(line: 1824, column: 37, scope: !1200)
!1307 = !DILocation(line: 1824, column: 50, scope: !1200)
!1308 = !DILocation(line: 1824, column: 47, scope: !1200)
!1309 = !DILocation(line: 1824, column: 36, scope: !1200)
!1310 = !DILocation(line: 1824, column: 52, scope: !1200)
!1311 = !DILocation(line: 1824, column: 51, scope: !1200)
!1312 = !DILocation(line: 1824, column: 20, scope: !1200)
!1313 = !DILocation(line: 1824, column: 11, scope: !1200)
!1314 = !DILocation(line: 1824, column: 13, scope: !1200)
!1315 = !DILocation(line: 1825, column: 9, scope: !1316)
!1316 = distinct !DILexicalBlock(scope: !1200, file: !1, line: 1825, column: 9)
!1317 = !DILocation(line: 1826, column: 24, scope: !1200)
!1318 = !DILocation(line: 1826, column: 31, scope: !1200)
!1319 = !DILocation(line: 1826, column: 36, scope: !1200)
!1320 = !DILocation(line: 1826, column: 15, scope: !1200)
!1321 = !DILocation(line: 1826, column: 11, scope: !1200)
!1322 = !DILocation(line: 1826, column: 13, scope: !1200)
!1323 = !DILocation(line: 1827, column: 24, scope: !1200)
!1324 = !DILocation(line: 1827, column: 31, scope: !1200)
!1325 = !DILocation(line: 1827, column: 36, scope: !1200)
!1326 = !DILocation(line: 1827, column: 15, scope: !1200)
!1327 = !DILocation(line: 1827, column: 38, scope: !1200)
!1328 = !DILocation(line: 1827, column: 45, scope: !1200)
!1329 = !DILocation(line: 1827, column: 37, scope: !1200)
!1330 = !DILocation(line: 1827, column: 11, scope: !1200)
!1331 = !DILocation(line: 1827, column: 13, scope: !1200)
!1332 = !DILocation(line: 1828, column: 15, scope: !1200)
!1333 = !DILocation(line: 1828, column: 28, scope: !1200)
!1334 = !DILocation(line: 1828, column: 25, scope: !1200)
!1335 = !DILocation(line: 1828, column: 30, scope: !1200)
!1336 = !DILocation(line: 1828, column: 43, scope: !1200)
!1337 = !DILocation(line: 1828, column: 40, scope: !1200)
!1338 = !DILocation(line: 1828, column: 29, scope: !1200)
!1339 = !DILocation(line: 1828, column: 44, scope: !1200)
!1340 = !DILocation(line: 1828, column: 14, scope: !1200)
!1341 = !DILocation(line: 1829, column: 37, scope: !1200)
!1342 = !DILocation(line: 1829, column: 15, scope: !1200)
!1343 = !DILocation(line: 1829, column: 14, scope: !1200)
!1344 = !DILocation(line: 1830, column: 15, scope: !1200)
!1345 = !DILocation(line: 1830, column: 22, scope: !1200)
!1346 = !DILocation(line: 1830, column: 35, scope: !1200)
!1347 = !DILocation(line: 1830, column: 32, scope: !1200)
!1348 = !DILocation(line: 1830, column: 37, scope: !1200)
!1349 = !DILocation(line: 1830, column: 50, scope: !1200)
!1350 = !DILocation(line: 1830, column: 47, scope: !1200)
!1351 = !DILocation(line: 1830, column: 36, scope: !1200)
!1352 = !DILocation(line: 1830, column: 52, scope: !1200)
!1353 = !DILocation(line: 1830, column: 51, scope: !1200)
!1354 = !DILocation(line: 1830, column: 20, scope: !1200)
!1355 = !DILocation(line: 1830, column: 11, scope: !1200)
!1356 = !DILocation(line: 1830, column: 13, scope: !1200)
!1357 = !DILocation(line: 1831, column: 15, scope: !1200)
!1358 = !DILocation(line: 1831, column: 22, scope: !1200)
!1359 = !DILocation(line: 1831, column: 35, scope: !1200)
!1360 = !DILocation(line: 1831, column: 32, scope: !1200)
!1361 = !DILocation(line: 1831, column: 37, scope: !1200)
!1362 = !DILocation(line: 1831, column: 50, scope: !1200)
!1363 = !DILocation(line: 1831, column: 47, scope: !1200)
!1364 = !DILocation(line: 1831, column: 36, scope: !1200)
!1365 = !DILocation(line: 1831, column: 52, scope: !1200)
!1366 = !DILocation(line: 1831, column: 51, scope: !1200)
!1367 = !DILocation(line: 1831, column: 20, scope: !1200)
!1368 = !DILocation(line: 1831, column: 11, scope: !1200)
!1369 = !DILocation(line: 1831, column: 13, scope: !1200)
!1370 = !DILocation(line: 1832, column: 9, scope: !1371)
!1371 = distinct !DILexicalBlock(scope: !1200, file: !1, line: 1832, column: 9)
!1372 = !DILocation(line: 1833, column: 24, scope: !1200)
!1373 = !DILocation(line: 1833, column: 31, scope: !1200)
!1374 = !DILocation(line: 1833, column: 36, scope: !1200)
!1375 = !DILocation(line: 1833, column: 15, scope: !1200)
!1376 = !DILocation(line: 1833, column: 38, scope: !1200)
!1377 = !DILocation(line: 1833, column: 45, scope: !1200)
!1378 = !DILocation(line: 1833, column: 37, scope: !1200)
!1379 = !DILocation(line: 1833, column: 11, scope: !1200)
!1380 = !DILocation(line: 1833, column: 13, scope: !1200)
!1381 = !DILocation(line: 1834, column: 24, scope: !1200)
!1382 = !DILocation(line: 1834, column: 31, scope: !1200)
!1383 = !DILocation(line: 1834, column: 36, scope: !1200)
!1384 = !DILocation(line: 1834, column: 15, scope: !1200)
!1385 = !DILocation(line: 1834, column: 38, scope: !1200)
!1386 = !DILocation(line: 1834, column: 45, scope: !1200)
!1387 = !DILocation(line: 1834, column: 37, scope: !1200)
!1388 = !DILocation(line: 1834, column: 11, scope: !1200)
!1389 = !DILocation(line: 1834, column: 13, scope: !1200)
!1390 = !DILocation(line: 1835, column: 15, scope: !1200)
!1391 = !DILocation(line: 1835, column: 28, scope: !1200)
!1392 = !DILocation(line: 1835, column: 25, scope: !1200)
!1393 = !DILocation(line: 1835, column: 30, scope: !1200)
!1394 = !DILocation(line: 1835, column: 43, scope: !1200)
!1395 = !DILocation(line: 1835, column: 40, scope: !1200)
!1396 = !DILocation(line: 1835, column: 29, scope: !1200)
!1397 = !DILocation(line: 1835, column: 44, scope: !1200)
!1398 = !DILocation(line: 1835, column: 14, scope: !1200)
!1399 = !DILocation(line: 1836, column: 37, scope: !1200)
!1400 = !DILocation(line: 1836, column: 15, scope: !1200)
!1401 = !DILocation(line: 1836, column: 14, scope: !1200)
!1402 = !DILocation(line: 1837, column: 15, scope: !1200)
!1403 = !DILocation(line: 1837, column: 22, scope: !1200)
!1404 = !DILocation(line: 1837, column: 35, scope: !1200)
!1405 = !DILocation(line: 1837, column: 32, scope: !1200)
!1406 = !DILocation(line: 1837, column: 37, scope: !1200)
!1407 = !DILocation(line: 1837, column: 50, scope: !1200)
!1408 = !DILocation(line: 1837, column: 47, scope: !1200)
!1409 = !DILocation(line: 1837, column: 36, scope: !1200)
!1410 = !DILocation(line: 1837, column: 52, scope: !1200)
!1411 = !DILocation(line: 1837, column: 51, scope: !1200)
!1412 = !DILocation(line: 1837, column: 20, scope: !1200)
!1413 = !DILocation(line: 1837, column: 11, scope: !1200)
!1414 = !DILocation(line: 1837, column: 13, scope: !1200)
!1415 = !DILocation(line: 1838, column: 15, scope: !1200)
!1416 = !DILocation(line: 1838, column: 22, scope: !1200)
!1417 = !DILocation(line: 1838, column: 35, scope: !1200)
!1418 = !DILocation(line: 1838, column: 32, scope: !1200)
!1419 = !DILocation(line: 1838, column: 37, scope: !1200)
!1420 = !DILocation(line: 1838, column: 50, scope: !1200)
!1421 = !DILocation(line: 1838, column: 47, scope: !1200)
!1422 = !DILocation(line: 1838, column: 36, scope: !1200)
!1423 = !DILocation(line: 1838, column: 52, scope: !1200)
!1424 = !DILocation(line: 1838, column: 51, scope: !1200)
!1425 = !DILocation(line: 1838, column: 20, scope: !1200)
!1426 = !DILocation(line: 1838, column: 11, scope: !1200)
!1427 = !DILocation(line: 1838, column: 13, scope: !1200)
!1428 = !DILocation(line: 1839, column: 9, scope: !1429)
!1429 = distinct !DILexicalBlock(scope: !1200, file: !1, line: 1839, column: 9)
!1430 = !DILocation(line: 1840, column: 9, scope: !1200)
!1431 = !DILocalVariable(name: "a", scope: !1432, file: !1, line: 1843, type: !638)
!1432 = distinct !DILexicalBlock(scope: !1037, file: !1, line: 1843, column: 7)
!1433 = !DILocation(line: 1843, column: 16, scope: !1432)
!1434 = !DILocalVariable(name: "ca", scope: !1432, file: !1, line: 1843, type: !638)
!1435 = !DILocation(line: 1843, column: 19, scope: !1432)
!1436 = !DILocalVariable(name: "sa", scope: !1432, file: !1, line: 1843, type: !638)
!1437 = !DILocation(line: 1843, column: 23, scope: !1432)
!1438 = !DILocation(line: 1845, column: 13, scope: !1432)
!1439 = !DILocation(line: 1845, column: 22, scope: !1432)
!1440 = !DILocation(line: 1845, column: 30, scope: !1432)
!1441 = !DILocation(line: 1845, column: 21, scope: !1432)
!1442 = !DILocation(line: 1845, column: 11, scope: !1432)
!1443 = !DILocation(line: 1845, column: 43, scope: !1432)
!1444 = !DILocation(line: 1845, column: 39, scope: !1432)
!1445 = !DILocation(line: 1845, column: 37, scope: !1432)
!1446 = !DILocation(line: 1845, column: 56, scope: !1432)
!1447 = !DILocation(line: 1845, column: 52, scope: !1432)
!1448 = !DILocation(line: 1845, column: 50, scope: !1432)
!1449 = !DILocation(line: 1846, column: 15, scope: !1432)
!1450 = !DILocation(line: 1846, column: 24, scope: !1432)
!1451 = !DILocation(line: 1846, column: 23, scope: !1432)
!1452 = !DILocation(line: 1846, column: 11, scope: !1432)
!1453 = !DILocation(line: 1846, column: 13, scope: !1432)
!1454 = !DILocation(line: 1847, column: 15, scope: !1432)
!1455 = !DILocation(line: 1847, column: 24, scope: !1432)
!1456 = !DILocation(line: 1847, column: 23, scope: !1432)
!1457 = !DILocation(line: 1847, column: 11, scope: !1432)
!1458 = !DILocation(line: 1847, column: 13, scope: !1432)
!1459 = !DILocation(line: 1848, column: 9, scope: !1460)
!1460 = distinct !DILexicalBlock(scope: !1432, file: !1, line: 1848, column: 9)
!1461 = !DILocation(line: 1849, column: 16, scope: !1432)
!1462 = !DILocation(line: 1849, column: 25, scope: !1432)
!1463 = !DILocation(line: 1849, column: 24, scope: !1432)
!1464 = !DILocation(line: 1849, column: 35, scope: !1432)
!1465 = !DILocation(line: 1849, column: 34, scope: !1432)
!1466 = !DILocation(line: 1849, column: 11, scope: !1432)
!1467 = !DILocation(line: 1849, column: 13, scope: !1432)
!1468 = !DILocation(line: 1850, column: 16, scope: !1432)
!1469 = !DILocation(line: 1850, column: 25, scope: !1432)
!1470 = !DILocation(line: 1850, column: 24, scope: !1432)
!1471 = !DILocation(line: 1850, column: 35, scope: !1432)
!1472 = !DILocation(line: 1850, column: 34, scope: !1432)
!1473 = !DILocation(line: 1850, column: 11, scope: !1432)
!1474 = !DILocation(line: 1850, column: 13, scope: !1432)
!1475 = !DILocation(line: 1851, column: 9, scope: !1476)
!1476 = distinct !DILexicalBlock(scope: !1432, file: !1, line: 1851, column: 9)
!1477 = !DILocation(line: 1852, column: 13, scope: !1432)
!1478 = !DILocation(line: 1852, column: 22, scope: !1432)
!1479 = !DILocation(line: 1852, column: 30, scope: !1432)
!1480 = !DILocation(line: 1852, column: 21, scope: !1432)
!1481 = !DILocation(line: 1852, column: 11, scope: !1432)
!1482 = !DILocation(line: 1852, column: 43, scope: !1432)
!1483 = !DILocation(line: 1852, column: 39, scope: !1432)
!1484 = !DILocation(line: 1852, column: 37, scope: !1432)
!1485 = !DILocation(line: 1852, column: 56, scope: !1432)
!1486 = !DILocation(line: 1852, column: 52, scope: !1432)
!1487 = !DILocation(line: 1852, column: 50, scope: !1432)
!1488 = !DILocation(line: 1853, column: 15, scope: !1432)
!1489 = !DILocation(line: 1853, column: 24, scope: !1432)
!1490 = !DILocation(line: 1853, column: 23, scope: !1432)
!1491 = !DILocation(line: 1853, column: 11, scope: !1432)
!1492 = !DILocation(line: 1853, column: 13, scope: !1432)
!1493 = !DILocation(line: 1854, column: 15, scope: !1432)
!1494 = !DILocation(line: 1854, column: 24, scope: !1432)
!1495 = !DILocation(line: 1854, column: 23, scope: !1432)
!1496 = !DILocation(line: 1854, column: 11, scope: !1432)
!1497 = !DILocation(line: 1854, column: 13, scope: !1432)
!1498 = !DILocation(line: 1855, column: 9, scope: !1499)
!1499 = distinct !DILexicalBlock(scope: !1432, file: !1, line: 1855, column: 9)
!1500 = !DILocation(line: 1856, column: 16, scope: !1432)
!1501 = !DILocation(line: 1856, column: 25, scope: !1432)
!1502 = !DILocation(line: 1856, column: 24, scope: !1432)
!1503 = !DILocation(line: 1856, column: 35, scope: !1432)
!1504 = !DILocation(line: 1856, column: 34, scope: !1432)
!1505 = !DILocation(line: 1856, column: 11, scope: !1432)
!1506 = !DILocation(line: 1856, column: 13, scope: !1432)
!1507 = !DILocation(line: 1857, column: 16, scope: !1432)
!1508 = !DILocation(line: 1857, column: 25, scope: !1432)
!1509 = !DILocation(line: 1857, column: 24, scope: !1432)
!1510 = !DILocation(line: 1857, column: 35, scope: !1432)
!1511 = !DILocation(line: 1857, column: 34, scope: !1432)
!1512 = !DILocation(line: 1857, column: 11, scope: !1432)
!1513 = !DILocation(line: 1857, column: 13, scope: !1432)
!1514 = !DILocation(line: 1858, column: 9, scope: !1515)
!1515 = distinct !DILexicalBlock(scope: !1432, file: !1, line: 1858, column: 9)
!1516 = !DILocation(line: 1860, column: 42, scope: !1517)
!1517 = distinct !DILexicalBlock(scope: !1432, file: !1, line: 1860, column: 9)
!1518 = !DILocation(line: 1860, column: 51, scope: !1517)
!1519 = !DILocation(line: 1860, column: 59, scope: !1517)
!1520 = !DILocation(line: 1860, column: 50, scope: !1517)
!1521 = !DILocation(line: 1860, column: 64, scope: !1517)
!1522 = !DILocation(line: 1860, column: 26, scope: !1517)
!1523 = !DILocation(line: 1860, column: 76, scope: !1517)
!1524 = !DILocation(line: 1860, column: 15, scope: !1517)
!1525 = !DILocation(line: 1860, column: 14, scope: !1517)
!1526 = !DILocation(line: 1861, column: 16, scope: !1527)
!1527 = distinct !DILexicalBlock(scope: !1517, file: !1, line: 1860, column: 9)
!1528 = !DILocation(line: 1861, column: 19, scope: !1527)
!1529 = !DILocation(line: 1861, column: 28, scope: !1527)
!1530 = !DILocation(line: 1861, column: 36, scope: !1527)
!1531 = !DILocation(line: 1861, column: 27, scope: !1527)
!1532 = !DILocation(line: 1861, column: 17, scope: !1527)
!1533 = !DILocation(line: 1860, column: 9, scope: !1517)
!1534 = !DILocation(line: 1862, column: 20, scope: !1535)
!1535 = distinct !DILexicalBlock(scope: !1527, file: !1, line: 1861, column: 58)
!1536 = !DILocation(line: 1862, column: 16, scope: !1535)
!1537 = !DILocation(line: 1862, column: 14, scope: !1535)
!1538 = !DILocation(line: 1862, column: 33, scope: !1535)
!1539 = !DILocation(line: 1862, column: 29, scope: !1535)
!1540 = !DILocation(line: 1862, column: 27, scope: !1535)
!1541 = !DILocation(line: 1863, column: 17, scope: !1535)
!1542 = !DILocation(line: 1863, column: 26, scope: !1535)
!1543 = !DILocation(line: 1863, column: 25, scope: !1535)
!1544 = !DILocation(line: 1863, column: 13, scope: !1535)
!1545 = !DILocation(line: 1863, column: 15, scope: !1535)
!1546 = !DILocation(line: 1864, column: 17, scope: !1535)
!1547 = !DILocation(line: 1864, column: 26, scope: !1535)
!1548 = !DILocation(line: 1864, column: 25, scope: !1535)
!1549 = !DILocation(line: 1864, column: 13, scope: !1535)
!1550 = !DILocation(line: 1864, column: 15, scope: !1535)
!1551 = !DILocation(line: 1865, column: 11, scope: !1552)
!1552 = distinct !DILexicalBlock(scope: !1535, file: !1, line: 1865, column: 11)
!1553 = !DILocation(line: 1866, column: 9, scope: !1535)
!1554 = !DILocation(line: 1861, column: 44, scope: !1527)
!1555 = !DILocation(line: 1860, column: 9, scope: !1527)
!1556 = distinct !{!1556, !1533, !1557}
!1557 = !DILocation(line: 1866, column: 9, scope: !1517)
!1558 = !DILocation(line: 1872, column: 40, scope: !1432)
!1559 = !DILocation(line: 1872, column: 47, scope: !1432)
!1560 = !DILocation(line: 1872, column: 39, scope: !1432)
!1561 = !DILocation(line: 1872, column: 55, scope: !1432)
!1562 = !DILocation(line: 1872, column: 54, scope: !1432)
!1563 = !DILocation(line: 1872, column: 9, scope: !1432)
!1564 = !DILocation(line: 1872, column: 18, scope: !1432)
!1565 = !DILocation(line: 1873, column: 28, scope: !1432)
!1566 = !DILocation(line: 1873, column: 35, scope: !1432)
!1567 = !DILocation(line: 1873, column: 20, scope: !1432)
!1568 = !DILocation(line: 1873, column: 40, scope: !1432)
!1569 = !DILocation(line: 1873, column: 39, scope: !1432)
!1570 = !DILocation(line: 1873, column: 9, scope: !1432)
!1571 = !DILocation(line: 1873, column: 18, scope: !1432)
!1572 = !DILocation(line: 1874, column: 9, scope: !1432)
!1573 = !DILocation(line: 1878, column: 13, scope: !1574)
!1574 = distinct !DILexicalBlock(scope: !1575, file: !1, line: 1878, column: 13)
!1575 = distinct !DILexicalBlock(scope: !1037, file: !1, line: 1877, column: 7)
!1576 = !DILocation(line: 1878, column: 30, scope: !1574)
!1577 = !DILocation(line: 1878, column: 13, scope: !1575)
!1578 = !DILocation(line: 1879, column: 22, scope: !1574)
!1579 = !DILocation(line: 1879, column: 31, scope: !1574)
!1580 = !DILocation(line: 1879, column: 11, scope: !1574)
!1581 = !DILocation(line: 1879, column: 20, scope: !1574)
!1582 = !DILocation(line: 1880, column: 17, scope: !1575)
!1583 = !DILocation(line: 1880, column: 26, scope: !1575)
!1584 = !DILocation(line: 1880, column: 25, scope: !1575)
!1585 = !DILocation(line: 1880, column: 13, scope: !1575)
!1586 = !DILocation(line: 1880, column: 15, scope: !1575)
!1587 = !DILocation(line: 1881, column: 17, scope: !1575)
!1588 = !DILocation(line: 1881, column: 26, scope: !1575)
!1589 = !DILocation(line: 1881, column: 25, scope: !1575)
!1590 = !DILocation(line: 1881, column: 13, scope: !1575)
!1591 = !DILocation(line: 1881, column: 15, scope: !1575)
!1592 = !DILocation(line: 1882, column: 17, scope: !1575)
!1593 = !DILocation(line: 1882, column: 26, scope: !1575)
!1594 = !DILocation(line: 1882, column: 25, scope: !1575)
!1595 = !DILocation(line: 1882, column: 13, scope: !1575)
!1596 = !DILocation(line: 1882, column: 15, scope: !1575)
!1597 = !DILocation(line: 1883, column: 17, scope: !1575)
!1598 = !DILocation(line: 1883, column: 26, scope: !1575)
!1599 = !DILocation(line: 1883, column: 25, scope: !1575)
!1600 = !DILocation(line: 1883, column: 13, scope: !1575)
!1601 = !DILocation(line: 1883, column: 15, scope: !1575)
!1602 = !DILocation(line: 1885, column: 36, scope: !1575)
!1603 = !DILocation(line: 1885, column: 18, scope: !1575)
!1604 = !DILocation(line: 1885, column: 44, scope: !1575)
!1605 = !DILocation(line: 1885, column: 53, scope: !1575)
!1606 = !DILocation(line: 1885, column: 52, scope: !1575)
!1607 = !DILocation(line: 1885, column: 42, scope: !1575)
!1608 = !DILocation(line: 1885, column: 9, scope: !1575)
!1609 = !DILocation(line: 1885, column: 17, scope: !1575)
!1610 = !DILocation(line: 1886, column: 9, scope: !1575)
!1611 = !DILocation(line: 1892, column: 20, scope: !1612)
!1612 = distinct !DILexicalBlock(scope: !1037, file: !1, line: 1889, column: 7)
!1613 = !DILocation(line: 1893, column: 31, scope: !1612)
!1614 = !DILocation(line: 1893, column: 33, scope: !1612)
!1615 = !DILocation(line: 1893, column: 18, scope: !1612)
!1616 = !DILocation(line: 1893, column: 20, scope: !1612)
!1617 = !DILocation(line: 1894, column: 41, scope: !1612)
!1618 = !DILocation(line: 1894, column: 50, scope: !1612)
!1619 = !DILocation(line: 1894, column: 49, scope: !1612)
!1620 = !DILocation(line: 1894, column: 36, scope: !1612)
!1621 = !DILocation(line: 1894, column: 27, scope: !1612)
!1622 = !DILocation(line: 1894, column: 18, scope: !1612)
!1623 = !DILocation(line: 1894, column: 25, scope: !1612)
!1624 = !DILocation(line: 1896, column: 25, scope: !1612)
!1625 = !DILocation(line: 1896, column: 34, scope: !1612)
!1626 = !DILocation(line: 1896, column: 33, scope: !1612)
!1627 = !DILocation(line: 1896, column: 45, scope: !1612)
!1628 = !DILocation(line: 1896, column: 54, scope: !1612)
!1629 = !DILocation(line: 1896, column: 53, scope: !1612)
!1630 = !DILocation(line: 1896, column: 43, scope: !1612)
!1631 = !DILocation(line: 1896, column: 63, scope: !1612)
!1632 = !DILocation(line: 1896, column: 19, scope: !1612)
!1633 = !DILocation(line: 1895, column: 26, scope: !1612)
!1634 = !DILocation(line: 1895, column: 18, scope: !1612)
!1635 = !DILocation(line: 1895, column: 24, scope: !1612)
!1636 = !DILocation(line: 1898, column: 19, scope: !1612)
!1637 = !DILocation(line: 1898, column: 28, scope: !1612)
!1638 = !DILocation(line: 1898, column: 27, scope: !1612)
!1639 = !DILocation(line: 1898, column: 47, scope: !1612)
!1640 = !DILocation(line: 1898, column: 38, scope: !1612)
!1641 = !DILocation(line: 1898, column: 37, scope: !1612)
!1642 = !DILocation(line: 1898, column: 9, scope: !1612)
!1643 = !DILocation(line: 1898, column: 17, scope: !1612)
!1644 = !DILocation(line: 1899, column: 19, scope: !1612)
!1645 = !DILocation(line: 1899, column: 28, scope: !1612)
!1646 = !DILocation(line: 1899, column: 27, scope: !1612)
!1647 = !DILocation(line: 1899, column: 47, scope: !1612)
!1648 = !DILocation(line: 1899, column: 38, scope: !1612)
!1649 = !DILocation(line: 1899, column: 37, scope: !1612)
!1650 = !DILocation(line: 1899, column: 9, scope: !1612)
!1651 = !DILocation(line: 1899, column: 17, scope: !1612)
!1652 = !DILocation(line: 1900, column: 9, scope: !1612)
!1653 = !DILocation(line: 1907, column: 31, scope: !1654)
!1654 = distinct !DILexicalBlock(scope: !1037, file: !1, line: 1903, column: 7)
!1655 = !DILocation(line: 1907, column: 33, scope: !1654)
!1656 = !DILocation(line: 1907, column: 18, scope: !1654)
!1657 = !DILocation(line: 1907, column: 20, scope: !1654)
!1658 = !DILocation(line: 1908, column: 45, scope: !1654)
!1659 = !DILocation(line: 1908, column: 44, scope: !1654)
!1660 = !DILocation(line: 1908, column: 58, scope: !1654)
!1661 = !DILocation(line: 1908, column: 66, scope: !1654)
!1662 = !DILocation(line: 1908, column: 54, scope: !1654)
!1663 = !DILocation(line: 1908, column: 53, scope: !1654)
!1664 = !DILocation(line: 1908, column: 35, scope: !1654)
!1665 = !DILocation(line: 1908, column: 26, scope: !1654)
!1666 = !DILocation(line: 1908, column: 18, scope: !1654)
!1667 = !DILocation(line: 1908, column: 24, scope: !1654)
!1668 = !DILocation(line: 1909, column: 46, scope: !1654)
!1669 = !DILocation(line: 1909, column: 45, scope: !1654)
!1670 = !DILocation(line: 1909, column: 59, scope: !1654)
!1671 = !DILocation(line: 1909, column: 67, scope: !1654)
!1672 = !DILocation(line: 1909, column: 55, scope: !1654)
!1673 = !DILocation(line: 1909, column: 54, scope: !1654)
!1674 = !DILocation(line: 1909, column: 36, scope: !1654)
!1675 = !DILocation(line: 1909, column: 27, scope: !1654)
!1676 = !DILocation(line: 1909, column: 18, scope: !1654)
!1677 = !DILocation(line: 1909, column: 25, scope: !1654)
!1678 = !DILocation(line: 1911, column: 38, scope: !1654)
!1679 = !DILocation(line: 1911, column: 20, scope: !1654)
!1680 = !DILocation(line: 1911, column: 43, scope: !1654)
!1681 = !DILocation(line: 1911, column: 9, scope: !1654)
!1682 = !DILocation(line: 1911, column: 18, scope: !1654)
!1683 = !DILocation(line: 1912, column: 38, scope: !1654)
!1684 = !DILocation(line: 1912, column: 20, scope: !1654)
!1685 = !DILocation(line: 1912, column: 44, scope: !1654)
!1686 = !DILocation(line: 1912, column: 9, scope: !1654)
!1687 = !DILocation(line: 1912, column: 18, scope: !1654)
!1688 = !DILocation(line: 1913, column: 20, scope: !1654)
!1689 = !DILocation(line: 1914, column: 9, scope: !1654)
!1690 = !DILocation(line: 1920, column: 31, scope: !1691)
!1691 = distinct !DILexicalBlock(scope: !1037, file: !1, line: 1917, column: 7)
!1692 = !DILocation(line: 1920, column: 33, scope: !1691)
!1693 = !DILocation(line: 1920, column: 18, scope: !1691)
!1694 = !DILocation(line: 1920, column: 20, scope: !1691)
!1695 = !DILocation(line: 1921, column: 40, scope: !1691)
!1696 = !DILocation(line: 1921, column: 49, scope: !1691)
!1697 = !DILocation(line: 1921, column: 48, scope: !1691)
!1698 = !DILocation(line: 1921, column: 35, scope: !1691)
!1699 = !DILocation(line: 1921, column: 26, scope: !1691)
!1700 = !DILocation(line: 1921, column: 18, scope: !1691)
!1701 = !DILocation(line: 1921, column: 24, scope: !1691)
!1702 = !DILocation(line: 1922, column: 39, scope: !1691)
!1703 = !DILocation(line: 1922, column: 38, scope: !1691)
!1704 = !DILocation(line: 1922, column: 27, scope: !1691)
!1705 = !DILocation(line: 1922, column: 18, scope: !1691)
!1706 = !DILocation(line: 1922, column: 25, scope: !1691)
!1707 = !DILocation(line: 1924, column: 38, scope: !1691)
!1708 = !DILocation(line: 1924, column: 20, scope: !1691)
!1709 = !DILocation(line: 1924, column: 43, scope: !1691)
!1710 = !DILocation(line: 1924, column: 9, scope: !1691)
!1711 = !DILocation(line: 1924, column: 18, scope: !1691)
!1712 = !DILocation(line: 1925, column: 38, scope: !1691)
!1713 = !DILocation(line: 1925, column: 20, scope: !1691)
!1714 = !DILocation(line: 1925, column: 44, scope: !1691)
!1715 = !DILocation(line: 1925, column: 9, scope: !1691)
!1716 = !DILocation(line: 1925, column: 18, scope: !1691)
!1717 = !DILocation(line: 1926, column: 20, scope: !1691)
!1718 = !DILocation(line: 1927, column: 9, scope: !1691)
!1719 = !DILocation(line: 1928, column: 7, scope: !1691)
!1720 = !DILocation(line: 1941, column: 17, scope: !1037)
!1721 = !DILocation(line: 1942, column: 20, scope: !1037)
!1722 = !DILocation(line: 1943, column: 9, scope: !1037)
!1723 = !DILocation(line: 1950, column: 10, scope: !1724)
!1724 = distinct !DILexicalBlock(scope: !1005, file: !1, line: 1950, column: 10)
!1725 = !DILocation(line: 1950, column: 10, scope: !1005)
!1726 = !DILocation(line: 1951, column: 40, scope: !1727)
!1727 = distinct !DILexicalBlock(scope: !1724, file: !1, line: 1950, column: 23)
!1728 = !DILocation(line: 1951, column: 41, scope: !1727)
!1729 = !DILocation(line: 1951, column: 30, scope: !1727)
!1730 = !DILocation(line: 1951, column: 20, scope: !1727)
!1731 = !DILocation(line: 1951, column: 16, scope: !1727)
!1732 = !DILocation(line: 1951, column: 18, scope: !1727)
!1733 = !DILocation(line: 1952, column: 40, scope: !1727)
!1734 = !DILocation(line: 1952, column: 41, scope: !1727)
!1735 = !DILocation(line: 1952, column: 30, scope: !1727)
!1736 = !DILocation(line: 1952, column: 20, scope: !1727)
!1737 = !DILocation(line: 1952, column: 16, scope: !1727)
!1738 = !DILocation(line: 1952, column: 18, scope: !1727)
!1739 = !DILocation(line: 1953, column: 40, scope: !1727)
!1740 = !DILocation(line: 1953, column: 51, scope: !1727)
!1741 = !DILocation(line: 1953, column: 42, scope: !1727)
!1742 = !DILocation(line: 1953, column: 41, scope: !1727)
!1743 = !DILocation(line: 1953, column: 52, scope: !1727)
!1744 = !DILocation(line: 1953, column: 31, scope: !1727)
!1745 = !DILocation(line: 1953, column: 22, scope: !1727)
!1746 = !DILocation(line: 1953, column: 16, scope: !1727)
!1747 = !DILocation(line: 1953, column: 21, scope: !1727)
!1748 = !DILocation(line: 1954, column: 41, scope: !1727)
!1749 = !DILocation(line: 1954, column: 52, scope: !1727)
!1750 = !DILocation(line: 1954, column: 43, scope: !1727)
!1751 = !DILocation(line: 1954, column: 42, scope: !1727)
!1752 = !DILocation(line: 1954, column: 53, scope: !1727)
!1753 = !DILocation(line: 1954, column: 32, scope: !1727)
!1754 = !DILocation(line: 1954, column: 23, scope: !1727)
!1755 = !DILocation(line: 1954, column: 16, scope: !1727)
!1756 = !DILocation(line: 1954, column: 22, scope: !1727)
!1757 = !DILocation(line: 1955, column: 5, scope: !1727)
!1758 = !DILocation(line: 1957, column: 3, scope: !1005)
!1759 = !DILocalVariable(name: "artifact", scope: !1760, file: !1, line: 1963, type: !734)
!1760 = distinct !DILexicalBlock(scope: !911, file: !1, line: 1963, column: 3)
!1761 = !DILocation(line: 1963, column: 17, scope: !1760)
!1762 = !DILocation(line: 1963, column: 43, scope: !1760)
!1763 = !DILocation(line: 1963, column: 26, scope: !1760)
!1764 = !DILocation(line: 1964, column: 20, scope: !1760)
!1765 = !DILocation(line: 1965, column: 10, scope: !1766)
!1766 = distinct !DILexicalBlock(scope: !1760, file: !1, line: 1965, column: 10)
!1767 = !DILocation(line: 1965, column: 19, scope: !1766)
!1768 = !DILocation(line: 1965, column: 10, scope: !1760)
!1769 = !DILocalVariable(name: "flags", scope: !1770, file: !1, line: 1966, type: !1771)
!1770 = distinct !DILexicalBlock(scope: !1766, file: !1, line: 1965, column: 44)
!1771 = !DIDerivedType(tag: DW_TAG_typedef, name: "MagickStatusType", file: !4, line: 147, baseType: !5)
!1772 = !DILocation(line: 1966, column: 24, scope: !1770)
!1773 = !DILocation(line: 1966, column: 52, scope: !1770)
!1774 = !DILocation(line: 1966, column: 30, scope: !1770)
!1775 = !DILocation(line: 1967, column: 11, scope: !1776)
!1776 = distinct !DILexicalBlock(scope: !1770, file: !1, line: 1967, column: 11)
!1777 = !DILocation(line: 1967, column: 16, scope: !1776)
!1778 = !DILocation(line: 1967, column: 11, scope: !1770)
!1779 = !DILocation(line: 1968, column: 37, scope: !1776)
!1780 = !DILocation(line: 1970, column: 33, scope: !1776)
!1781 = !DILocation(line: 1968, column: 16, scope: !1776)
!1782 = !DILocation(line: 1968, column: 9, scope: !1776)
!1783 = !DILocation(line: 1972, column: 24, scope: !1776)
!1784 = !DILocation(line: 1973, column: 5, scope: !1770)
!1785 = !DILocation(line: 1977, column: 25, scope: !1786)
!1786 = distinct !DILexicalBlock(scope: !911, file: !1, line: 1977, column: 8)
!1787 = !DILocation(line: 1977, column: 8, scope: !1786)
!1788 = !DILocation(line: 1977, column: 42, scope: !1786)
!1789 = !DILocation(line: 1977, column: 8, scope: !911)
!1790 = !DILocalVariable(name: "i", scope: !1791, file: !1, line: 1979, type: !665)
!1791 = distinct !DILexicalBlock(scope: !1786, file: !1, line: 1977, column: 67)
!1792 = !DILocation(line: 1979, column: 8, scope: !1791)
!1793 = !DILocalVariable(name: "image_gen", scope: !1791, file: !1, line: 1980, type: !754)
!1794 = !DILocation(line: 1980, column: 10, scope: !1791)
!1795 = !DILocalVariable(name: "lookup", scope: !1791, file: !1, line: 1981, type: !734)
!1796 = !DILocation(line: 1981, column: 17, scope: !1791)
!1797 = !DILocation(line: 1984, column: 10, scope: !1798)
!1798 = distinct !DILexicalBlock(scope: !1791, file: !1, line: 1984, column: 10)
!1799 = !DILocation(line: 1984, column: 18, scope: !1798)
!1800 = !DILocation(line: 1984, column: 21, scope: !1798)
!1801 = !DILocation(line: 1984, column: 10, scope: !1791)
!1802 = !DILocation(line: 1985, column: 33, scope: !1803)
!1803 = distinct !DILexicalBlock(scope: !1798, file: !1, line: 1984, column: 38)
!1804 = !DILocation(line: 1986, column: 65, scope: !1803)
!1805 = !DILocation(line: 1986, column: 47, scope: !1803)
!1806 = !DILocation(line: 1987, column: 27, scope: !1803)
!1807 = !DILocation(line: 1987, column: 9, scope: !1803)
!1808 = !DILocation(line: 1987, column: 52, scope: !1803)
!1809 = !DILocation(line: 1987, column: 34, scope: !1803)
!1810 = !DILocation(line: 1987, column: 72, scope: !1803)
!1811 = !DILocation(line: 1987, column: 54, scope: !1803)
!1812 = !DILocation(line: 1985, column: 14, scope: !1803)
!1813 = !DILocation(line: 1988, column: 13, scope: !1803)
!1814 = !DILocation(line: 1989, column: 5, scope: !1803)
!1815 = !DILocation(line: 1991, column: 7, scope: !1816)
!1816 = distinct !DILexicalBlock(scope: !1798, file: !1, line: 1990, column: 10)
!1817 = !DILocation(line: 1991, column: 20, scope: !1816)
!1818 = !DILocation(line: 1992, column: 14, scope: !1816)
!1819 = !DILocation(line: 1995, column: 13, scope: !1791)
!1820 = !DILocation(line: 1995, column: 5, scope: !1791)
!1821 = !DILocalVariable(name: "inverse", scope: !1822, file: !1, line: 1998, type: !821)
!1822 = distinct !DILexicalBlock(scope: !1823, file: !1, line: 1997, column: 7)
!1823 = distinct !DILexicalBlock(scope: !1791, file: !1, line: 1995, column: 21)
!1824 = !DILocation(line: 1998, column: 17, scope: !1822)
!1825 = !DILocation(line: 2000, column: 30, scope: !1822)
!1826 = !DILocation(line: 2000, column: 19, scope: !1822)
!1827 = !DILocation(line: 2000, column: 17, scope: !1822)
!1828 = !DILocation(line: 2001, column: 13, scope: !1829)
!1829 = distinct !DILexicalBlock(scope: !1822, file: !1, line: 2001, column: 13)
!1830 = !DILocation(line: 2001, column: 21, scope: !1829)
!1831 = !DILocation(line: 2001, column: 13, scope: !1822)
!1832 = !DILocation(line: 2002, column: 53, scope: !1833)
!1833 = distinct !DILexicalBlock(scope: !1829, file: !1, line: 2001, column: 41)
!1834 = !DILocation(line: 2002, column: 30, scope: !1833)
!1835 = !DILocation(line: 2002, column: 19, scope: !1833)
!1836 = !DILocation(line: 2002, column: 17, scope: !1833)
!1837 = !DILocation(line: 2003, column: 39, scope: !1833)
!1838 = !DILocation(line: 2003, column: 18, scope: !1833)
!1839 = !DILocation(line: 2006, column: 11, scope: !1833)
!1840 = !DILocation(line: 2008, column: 34, scope: !1822)
!1841 = !DILocation(line: 2008, column: 41, scope: !1822)
!1842 = !DILocation(line: 2008, column: 9, scope: !1822)
!1843 = !DILocation(line: 2009, column: 34, scope: !1822)
!1844 = !DILocation(line: 2009, column: 9, scope: !1822)
!1845 = !DILocation(line: 2010, column: 33, scope: !1822)
!1846 = !DILocation(line: 2010, column: 16, scope: !1822)
!1847 = !DILocation(line: 2011, column: 33, scope: !1822)
!1848 = !DILocation(line: 2011, column: 16, scope: !1822)
!1849 = !DILocation(line: 2012, column: 15, scope: !1850)
!1850 = distinct !DILexicalBlock(scope: !1822, file: !1, line: 2012, column: 9)
!1851 = !DILocation(line: 2012, column: 14, scope: !1850)
!1852 = !DILocation(line: 2012, column: 19, scope: !1853)
!1853 = distinct !DILexicalBlock(scope: !1850, file: !1, line: 2012, column: 9)
!1854 = !DILocation(line: 2012, column: 21, scope: !1853)
!1855 = !DILocation(line: 2012, column: 9, scope: !1850)
!1856 = !DILocation(line: 2013, column: 35, scope: !1853)
!1857 = !DILocation(line: 2013, column: 51, scope: !1853)
!1858 = !DILocation(line: 2013, column: 59, scope: !1853)
!1859 = !DILocation(line: 2013, column: 18, scope: !1853)
!1860 = !DILocation(line: 2013, column: 11, scope: !1853)
!1861 = !DILocation(line: 2012, column: 27, scope: !1853)
!1862 = !DILocation(line: 2012, column: 9, scope: !1853)
!1863 = distinct !{!1863, !1855, !1864}
!1864 = !DILocation(line: 2013, column: 61, scope: !1850)
!1865 = !DILocation(line: 2014, column: 33, scope: !1822)
!1866 = !DILocation(line: 2014, column: 51, scope: !1822)
!1867 = !DILocation(line: 2014, column: 16, scope: !1822)
!1868 = !DILocation(line: 2015, column: 53, scope: !1822)
!1869 = !DILocation(line: 2015, column: 30, scope: !1822)
!1870 = !DILocation(line: 2015, column: 19, scope: !1822)
!1871 = !DILocation(line: 2015, column: 17, scope: !1822)
!1872 = !DILocation(line: 2017, column: 33, scope: !1822)
!1873 = !DILocation(line: 2017, column: 16, scope: !1822)
!1874 = !DILocation(line: 2018, column: 33, scope: !1822)
!1875 = !DILocation(line: 2018, column: 47, scope: !1822)
!1876 = !DILocation(line: 2018, column: 16, scope: !1822)
!1877 = !DILocation(line: 2019, column: 33, scope: !1822)
!1878 = !DILocation(line: 2019, column: 16, scope: !1822)
!1879 = !DILocation(line: 2020, column: 33, scope: !1822)
!1880 = !DILocation(line: 2021, column: 13, scope: !1822)
!1881 = !DILocation(line: 2021, column: 23, scope: !1822)
!1882 = !DILocation(line: 2021, column: 33, scope: !1822)
!1883 = !DILocation(line: 2020, column: 16, scope: !1822)
!1884 = !DILocation(line: 2022, column: 33, scope: !1822)
!1885 = !DILocation(line: 2023, column: 13, scope: !1822)
!1886 = !DILocation(line: 2023, column: 23, scope: !1822)
!1887 = !DILocation(line: 2023, column: 33, scope: !1822)
!1888 = !DILocation(line: 2022, column: 16, scope: !1822)
!1889 = !DILocation(line: 2024, column: 33, scope: !1822)
!1890 = !DILocation(line: 2024, column: 60, scope: !1822)
!1891 = !DILocation(line: 2024, column: 16, scope: !1822)
!1892 = !DILocation(line: 2026, column: 9, scope: !1822)
!1893 = !DILocalVariable(name: "inverse", scope: !1894, file: !1, line: 2031, type: !821)
!1894 = distinct !DILexicalBlock(scope: !1823, file: !1, line: 2030, column: 7)
!1895 = !DILocation(line: 2031, column: 17, scope: !1894)
!1896 = !DILocation(line: 2033, column: 30, scope: !1894)
!1897 = !DILocation(line: 2033, column: 19, scope: !1894)
!1898 = !DILocation(line: 2033, column: 17, scope: !1894)
!1899 = !DILocation(line: 2034, column: 13, scope: !1900)
!1900 = distinct !DILexicalBlock(scope: !1894, file: !1, line: 2034, column: 13)
!1901 = !DILocation(line: 2034, column: 21, scope: !1900)
!1902 = !DILocation(line: 2034, column: 13, scope: !1894)
!1903 = !DILocation(line: 2035, column: 53, scope: !1904)
!1904 = distinct !DILexicalBlock(scope: !1900, file: !1, line: 2034, column: 41)
!1905 = !DILocation(line: 2035, column: 30, scope: !1904)
!1906 = !DILocation(line: 2035, column: 19, scope: !1904)
!1907 = !DILocation(line: 2035, column: 17, scope: !1904)
!1908 = !DILocation(line: 2036, column: 39, scope: !1904)
!1909 = !DILocation(line: 2036, column: 18, scope: !1904)
!1910 = !DILocation(line: 2039, column: 11, scope: !1904)
!1911 = !DILocation(line: 2041, column: 39, scope: !1894)
!1912 = !DILocation(line: 2041, column: 46, scope: !1894)
!1913 = !DILocation(line: 2041, column: 9, scope: !1894)
!1914 = !DILocation(line: 2042, column: 33, scope: !1894)
!1915 = !DILocation(line: 2042, column: 16, scope: !1894)
!1916 = !DILocation(line: 2043, column: 33, scope: !1894)
!1917 = !DILocation(line: 2043, column: 16, scope: !1894)
!1918 = !DILocation(line: 2044, column: 15, scope: !1919)
!1919 = distinct !DILexicalBlock(scope: !1894, file: !1, line: 2044, column: 9)
!1920 = !DILocation(line: 2044, column: 14, scope: !1919)
!1921 = !DILocation(line: 2044, column: 19, scope: !1922)
!1922 = distinct !DILexicalBlock(scope: !1919, file: !1, line: 2044, column: 9)
!1923 = !DILocation(line: 2044, column: 20, scope: !1922)
!1924 = !DILocation(line: 2044, column: 9, scope: !1919)
!1925 = !DILocation(line: 2045, column: 35, scope: !1922)
!1926 = !DILocation(line: 2045, column: 52, scope: !1922)
!1927 = !DILocation(line: 2045, column: 60, scope: !1922)
!1928 = !DILocation(line: 2045, column: 18, scope: !1922)
!1929 = !DILocation(line: 2045, column: 11, scope: !1922)
!1930 = !DILocation(line: 2044, column: 25, scope: !1922)
!1931 = !DILocation(line: 2044, column: 9, scope: !1922)
!1932 = distinct !{!1932, !1924, !1933}
!1933 = !DILocation(line: 2045, column: 62, scope: !1919)
!1934 = !DILocation(line: 2046, column: 33, scope: !1894)
!1935 = !DILocation(line: 2046, column: 16, scope: !1894)
!1936 = !DILocation(line: 2047, column: 9, scope: !1894)
!1937 = !DILocation(line: 2047, column: 16, scope: !1938)
!1938 = distinct !DILexicalBlock(scope: !1939, file: !1, line: 2047, column: 9)
!1939 = distinct !DILexicalBlock(scope: !1894, file: !1, line: 2047, column: 9)
!1940 = !DILocation(line: 2047, column: 17, scope: !1938)
!1941 = !DILocation(line: 2047, column: 9, scope: !1939)
!1942 = !DILocation(line: 2048, column: 35, scope: !1938)
!1943 = !DILocation(line: 2048, column: 52, scope: !1938)
!1944 = !DILocation(line: 2048, column: 60, scope: !1938)
!1945 = !DILocation(line: 2048, column: 18, scope: !1938)
!1946 = !DILocation(line: 2048, column: 11, scope: !1938)
!1947 = !DILocation(line: 2047, column: 22, scope: !1938)
!1948 = !DILocation(line: 2047, column: 9, scope: !1938)
!1949 = distinct !{!1949, !1941, !1950}
!1950 = !DILocation(line: 2048, column: 62, scope: !1939)
!1951 = !DILocation(line: 2049, column: 33, scope: !1894)
!1952 = !DILocation(line: 2049, column: 51, scope: !1894)
!1953 = !DILocation(line: 2049, column: 16, scope: !1894)
!1954 = !DILocation(line: 2050, column: 53, scope: !1894)
!1955 = !DILocation(line: 2050, column: 30, scope: !1894)
!1956 = !DILocation(line: 2050, column: 19, scope: !1894)
!1957 = !DILocation(line: 2050, column: 17, scope: !1894)
!1958 = !DILocation(line: 2052, column: 33, scope: !1894)
!1959 = !DILocation(line: 2052, column: 16, scope: !1894)
!1960 = !DILocation(line: 2053, column: 33, scope: !1894)
!1961 = !DILocation(line: 2053, column: 47, scope: !1894)
!1962 = !DILocation(line: 2053, column: 16, scope: !1894)
!1963 = !DILocation(line: 2054, column: 33, scope: !1894)
!1964 = !DILocation(line: 2054, column: 16, scope: !1894)
!1965 = !DILocation(line: 2055, column: 33, scope: !1894)
!1966 = !DILocation(line: 2056, column: 13, scope: !1894)
!1967 = !DILocation(line: 2056, column: 23, scope: !1894)
!1968 = !DILocation(line: 2055, column: 16, scope: !1894)
!1969 = !DILocation(line: 2057, column: 33, scope: !1894)
!1970 = !DILocation(line: 2058, column: 13, scope: !1894)
!1971 = !DILocation(line: 2058, column: 23, scope: !1894)
!1972 = !DILocation(line: 2058, column: 33, scope: !1894)
!1973 = !DILocation(line: 2057, column: 16, scope: !1894)
!1974 = !DILocation(line: 2059, column: 33, scope: !1894)
!1975 = !DILocation(line: 2060, column: 13, scope: !1894)
!1976 = !DILocation(line: 2060, column: 23, scope: !1894)
!1977 = !DILocation(line: 2060, column: 33, scope: !1894)
!1978 = !DILocation(line: 2059, column: 16, scope: !1894)
!1979 = !DILocation(line: 2061, column: 33, scope: !1894)
!1980 = !DILocation(line: 2062, column: 13, scope: !1894)
!1981 = !DILocation(line: 2062, column: 22, scope: !1894)
!1982 = !DILocation(line: 2062, column: 39, scope: !1894)
!1983 = !DILocation(line: 2061, column: 16, scope: !1894)
!1984 = !DILocation(line: 2063, column: 9, scope: !1894)
!1985 = !DILocation(line: 2067, column: 33, scope: !1823)
!1986 = !DILocation(line: 2067, column: 16, scope: !1823)
!1987 = !DILocation(line: 2068, column: 33, scope: !1823)
!1988 = !DILocation(line: 2068, column: 47, scope: !1823)
!1989 = !DILocation(line: 2068, column: 16, scope: !1823)
!1990 = !DILocation(line: 2069, column: 33, scope: !1823)
!1991 = !DILocation(line: 2070, column: 13, scope: !1823)
!1992 = !DILocation(line: 2070, column: 23, scope: !1823)
!1993 = !DILocation(line: 2070, column: 33, scope: !1823)
!1994 = !DILocation(line: 2070, column: 43, scope: !1823)
!1995 = !DILocation(line: 2069, column: 16, scope: !1823)
!1996 = !DILocation(line: 2071, column: 33, scope: !1823)
!1997 = !DILocation(line: 2072, column: 13, scope: !1823)
!1998 = !DILocation(line: 2072, column: 23, scope: !1823)
!1999 = !DILocation(line: 2072, column: 33, scope: !1823)
!2000 = !DILocation(line: 2072, column: 43, scope: !1823)
!2001 = !DILocation(line: 2071, column: 16, scope: !1823)
!2002 = !DILocation(line: 2078, column: 33, scope: !1823)
!2003 = !DILocation(line: 2078, column: 16, scope: !1823)
!2004 = !DILocation(line: 2079, column: 33, scope: !1823)
!2005 = !DILocation(line: 2079, column: 47, scope: !1823)
!2006 = !DILocation(line: 2079, column: 16, scope: !1823)
!2007 = !DILocation(line: 2080, column: 33, scope: !1823)
!2008 = !DILocation(line: 2081, column: 17, scope: !1823)
!2009 = !DILocation(line: 2081, column: 16, scope: !1823)
!2010 = !DILocation(line: 2081, column: 31, scope: !1823)
!2011 = !DILocation(line: 2081, column: 30, scope: !1823)
!2012 = !DILocation(line: 2080, column: 16, scope: !1823)
!2013 = !DILocation(line: 2082, column: 33, scope: !1823)
!2014 = !DILocation(line: 2083, column: 13, scope: !1823)
!2015 = !DILocation(line: 2083, column: 24, scope: !1823)
!2016 = !DILocation(line: 2083, column: 23, scope: !1823)
!2017 = !DILocation(line: 2083, column: 34, scope: !1823)
!2018 = !DILocation(line: 2082, column: 16, scope: !1823)
!2019 = !DILocation(line: 2085, column: 14, scope: !2020)
!2020 = distinct !DILexicalBlock(scope: !1823, file: !1, line: 2085, column: 14)
!2021 = !DILocation(line: 2085, column: 23, scope: !2020)
!2022 = !DILocation(line: 2085, column: 14, scope: !1823)
!2023 = !DILocation(line: 2086, column: 35, scope: !2024)
!2024 = distinct !DILexicalBlock(scope: !2020, file: !1, line: 2085, column: 30)
!2025 = !DILocation(line: 2087, column: 18, scope: !2024)
!2026 = !DILocation(line: 2087, column: 17, scope: !2024)
!2027 = !DILocation(line: 2087, column: 29, scope: !2024)
!2028 = !DILocation(line: 2087, column: 40, scope: !2024)
!2029 = !DILocation(line: 2087, column: 39, scope: !2024)
!2030 = !DILocation(line: 2086, column: 18, scope: !2024)
!2031 = !DILocation(line: 2088, column: 35, scope: !2024)
!2032 = !DILocation(line: 2089, column: 16, scope: !2024)
!2033 = !DILocation(line: 2088, column: 18, scope: !2024)
!2034 = !DILocation(line: 2090, column: 9, scope: !2024)
!2035 = !DILocation(line: 2091, column: 35, scope: !2020)
!2036 = !DILocation(line: 2092, column: 18, scope: !2020)
!2037 = !DILocation(line: 2092, column: 17, scope: !2020)
!2038 = !DILocation(line: 2092, column: 28, scope: !2020)
!2039 = !DILocation(line: 2091, column: 18, scope: !2020)
!2040 = !DILocation(line: 2093, column: 33, scope: !1823)
!2041 = !DILocation(line: 2094, column: 15, scope: !1823)
!2042 = !DILocation(line: 2094, column: 14, scope: !1823)
!2043 = !DILocation(line: 2094, column: 25, scope: !1823)
!2044 = !DILocation(line: 2094, column: 35, scope: !1823)
!2045 = !DILocation(line: 2093, column: 16, scope: !1823)
!2046 = !DILocation(line: 2095, column: 14, scope: !2047)
!2047 = distinct !DILexicalBlock(scope: !1823, file: !1, line: 2095, column: 14)
!2048 = !DILocation(line: 2095, column: 23, scope: !2047)
!2049 = !DILocation(line: 2095, column: 14, scope: !1823)
!2050 = !DILocation(line: 2096, column: 35, scope: !2047)
!2051 = !DILocation(line: 2096, column: 77, scope: !2047)
!2052 = !DILocation(line: 2096, column: 18, scope: !2047)
!2053 = !DILocation(line: 2096, column: 11, scope: !2047)
!2054 = !DILocation(line: 2098, column: 35, scope: !2047)
!2055 = !DILocation(line: 2098, column: 62, scope: !2047)
!2056 = !DILocation(line: 2098, column: 18, scope: !2047)
!2057 = !DILocation(line: 2099, column: 9, scope: !1823)
!2058 = !DILocation(line: 2110, column: 33, scope: !1823)
!2059 = !DILocation(line: 2110, column: 16, scope: !1823)
!2060 = !DILocation(line: 2111, column: 33, scope: !1823)
!2061 = !DILocation(line: 2111, column: 47, scope: !1823)
!2062 = !DILocation(line: 2111, column: 16, scope: !1823)
!2063 = !DILocation(line: 2112, column: 33, scope: !1823)
!2064 = !DILocation(line: 2112, column: 16, scope: !1823)
!2065 = !DILocation(line: 2113, column: 33, scope: !1823)
!2066 = !DILocation(line: 2114, column: 13, scope: !1823)
!2067 = !DILocation(line: 2114, column: 23, scope: !1823)
!2068 = !DILocation(line: 2114, column: 33, scope: !1823)
!2069 = !DILocation(line: 2114, column: 43, scope: !1823)
!2070 = !DILocation(line: 2113, column: 16, scope: !1823)
!2071 = !DILocation(line: 2115, column: 33, scope: !1823)
!2072 = !DILocation(line: 2116, column: 13, scope: !1823)
!2073 = !DILocation(line: 2116, column: 23, scope: !1823)
!2074 = !DILocation(line: 2116, column: 33, scope: !1823)
!2075 = !DILocation(line: 2116, column: 43, scope: !1823)
!2076 = !DILocation(line: 2115, column: 16, scope: !1823)
!2077 = !DILocation(line: 2117, column: 33, scope: !1823)
!2078 = !DILocation(line: 2117, column: 60, scope: !1823)
!2079 = !DILocation(line: 2117, column: 16, scope: !1823)
!2080 = !DILocation(line: 2118, column: 9, scope: !1823)
!2081 = !DILocalVariable(name: "nterms", scope: !2082, file: !1, line: 2122, type: !612)
!2082 = distinct !DILexicalBlock(scope: !1823, file: !1, line: 2121, column: 7)
!2083 = !DILocation(line: 2122, column: 16, scope: !2082)
!2084 = !DILocation(line: 2122, column: 34, scope: !2082)
!2085 = !DILocation(line: 2122, column: 25, scope: !2082)
!2086 = !DILocation(line: 2123, column: 33, scope: !2082)
!2087 = !DILocation(line: 2124, column: 11, scope: !2082)
!2088 = !DILocation(line: 2124, column: 36, scope: !2082)
!2089 = !DILocation(line: 2123, column: 16, scope: !2082)
!2090 = !DILocation(line: 2125, column: 33, scope: !2082)
!2091 = !DILocation(line: 2125, column: 47, scope: !2082)
!2092 = !DILocation(line: 2125, column: 16, scope: !2082)
!2093 = !DILocation(line: 2126, column: 33, scope: !2082)
!2094 = !DILocation(line: 2126, column: 16, scope: !2082)
!2095 = !DILocation(line: 2127, column: 33, scope: !2082)
!2096 = !DILocation(line: 2127, column: 16, scope: !2082)
!2097 = !DILocation(line: 2128, column: 15, scope: !2098)
!2098 = distinct !DILexicalBlock(scope: !2082, file: !1, line: 2128, column: 9)
!2099 = !DILocation(line: 2128, column: 14, scope: !2098)
!2100 = !DILocation(line: 2128, column: 19, scope: !2101)
!2101 = distinct !DILexicalBlock(scope: !2098, file: !1, line: 2128, column: 9)
!2102 = !DILocation(line: 2128, column: 31, scope: !2101)
!2103 = !DILocation(line: 2128, column: 20, scope: !2101)
!2104 = !DILocation(line: 2128, column: 9, scope: !2098)
!2105 = !DILocation(line: 2129, column: 16, scope: !2106)
!2106 = distinct !DILexicalBlock(scope: !2107, file: !1, line: 2129, column: 16)
!2107 = distinct !DILexicalBlock(scope: !2101, file: !1, line: 2128, column: 44)
!2108 = !DILocation(line: 2129, column: 18, scope: !2106)
!2109 = !DILocation(line: 2129, column: 23, scope: !2106)
!2110 = !DILocation(line: 2129, column: 26, scope: !2106)
!2111 = !DILocation(line: 2129, column: 27, scope: !2106)
!2112 = !DILocation(line: 2129, column: 30, scope: !2106)
!2113 = !DILocation(line: 2129, column: 16, scope: !2107)
!2114 = !DILocation(line: 2129, column: 61, scope: !2106)
!2115 = !DILocation(line: 2129, column: 44, scope: !2106)
!2116 = !DILocation(line: 2129, column: 37, scope: !2106)
!2117 = !DILocation(line: 2130, column: 35, scope: !2107)
!2118 = !DILocation(line: 2130, column: 54, scope: !2107)
!2119 = !DILocation(line: 2130, column: 62, scope: !2107)
!2120 = !DILocation(line: 2130, column: 61, scope: !2107)
!2121 = !DILocation(line: 2131, column: 31, scope: !2107)
!2122 = !DILocation(line: 2131, column: 16, scope: !2107)
!2123 = !DILocation(line: 2130, column: 18, scope: !2107)
!2124 = !DILocation(line: 2132, column: 9, scope: !2107)
!2125 = !DILocation(line: 2128, column: 40, scope: !2101)
!2126 = !DILocation(line: 2128, column: 9, scope: !2101)
!2127 = distinct !{!2127, !2104, !2128}
!2128 = !DILocation(line: 2132, column: 9, scope: !2098)
!2129 = !DILocation(line: 2133, column: 33, scope: !2082)
!2130 = !DILocation(line: 2133, column: 16, scope: !2082)
!2131 = !DILocation(line: 2134, column: 15, scope: !2132)
!2132 = distinct !DILexicalBlock(scope: !2082, file: !1, line: 2134, column: 9)
!2133 = !DILocation(line: 2134, column: 14, scope: !2132)
!2134 = !DILocation(line: 2134, column: 19, scope: !2135)
!2135 = distinct !DILexicalBlock(scope: !2132, file: !1, line: 2134, column: 9)
!2136 = !DILocation(line: 2134, column: 31, scope: !2135)
!2137 = !DILocation(line: 2134, column: 20, scope: !2135)
!2138 = !DILocation(line: 2134, column: 9, scope: !2132)
!2139 = !DILocation(line: 2135, column: 16, scope: !2140)
!2140 = distinct !DILexicalBlock(scope: !2141, file: !1, line: 2135, column: 16)
!2141 = distinct !DILexicalBlock(scope: !2135, file: !1, line: 2134, column: 44)
!2142 = !DILocation(line: 2135, column: 18, scope: !2140)
!2143 = !DILocation(line: 2135, column: 23, scope: !2140)
!2144 = !DILocation(line: 2135, column: 26, scope: !2140)
!2145 = !DILocation(line: 2135, column: 27, scope: !2140)
!2146 = !DILocation(line: 2135, column: 30, scope: !2140)
!2147 = !DILocation(line: 2135, column: 16, scope: !2141)
!2148 = !DILocation(line: 2135, column: 61, scope: !2140)
!2149 = !DILocation(line: 2135, column: 44, scope: !2140)
!2150 = !DILocation(line: 2135, column: 37, scope: !2140)
!2151 = !DILocation(line: 2136, column: 35, scope: !2141)
!2152 = !DILocation(line: 2136, column: 54, scope: !2141)
!2153 = !DILocation(line: 2136, column: 62, scope: !2141)
!2154 = !DILocation(line: 2136, column: 61, scope: !2141)
!2155 = !DILocation(line: 2136, column: 64, scope: !2141)
!2156 = !DILocation(line: 2136, column: 63, scope: !2141)
!2157 = !DILocation(line: 2137, column: 31, scope: !2141)
!2158 = !DILocation(line: 2137, column: 16, scope: !2141)
!2159 = !DILocation(line: 2136, column: 18, scope: !2141)
!2160 = !DILocation(line: 2138, column: 9, scope: !2141)
!2161 = !DILocation(line: 2134, column: 40, scope: !2135)
!2162 = !DILocation(line: 2134, column: 9, scope: !2135)
!2163 = distinct !{!2163, !2138, !2164}
!2164 = !DILocation(line: 2138, column: 9, scope: !2132)
!2165 = !DILocation(line: 2139, column: 33, scope: !2082)
!2166 = !DILocation(line: 2139, column: 63, scope: !2082)
!2167 = !DILocation(line: 2139, column: 16, scope: !2082)
!2168 = !DILocation(line: 2140, column: 9, scope: !2082)
!2169 = !DILocation(line: 2144, column: 33, scope: !2170)
!2170 = distinct !DILexicalBlock(scope: !1823, file: !1, line: 2143, column: 7)
!2171 = !DILocation(line: 2144, column: 16, scope: !2170)
!2172 = !DILocation(line: 2145, column: 16, scope: !2173)
!2173 = distinct !DILexicalBlock(scope: !2170, file: !1, line: 2145, column: 9)
!2174 = !DILocation(line: 2145, column: 15, scope: !2173)
!2175 = !DILocation(line: 2145, column: 20, scope: !2176)
!2176 = distinct !DILexicalBlock(scope: !2173, file: !1, line: 2145, column: 9)
!2177 = !DILocation(line: 2145, column: 21, scope: !2176)
!2178 = !DILocation(line: 2145, column: 9, scope: !2173)
!2179 = !DILocation(line: 2146, column: 35, scope: !2176)
!2180 = !DILocation(line: 2146, column: 73, scope: !2176)
!2181 = !DILocation(line: 2146, column: 64, scope: !2176)
!2182 = !DILocation(line: 2146, column: 76, scope: !2176)
!2183 = !DILocation(line: 2146, column: 82, scope: !2176)
!2184 = !DILocation(line: 2146, column: 18, scope: !2176)
!2185 = !DILocation(line: 2146, column: 11, scope: !2176)
!2186 = !DILocation(line: 2145, column: 26, scope: !2176)
!2187 = !DILocation(line: 2145, column: 9, scope: !2176)
!2188 = distinct !{!2188, !2178, !2189}
!2189 = !DILocation(line: 2146, column: 84, scope: !2173)
!2190 = !DILocation(line: 2147, column: 33, scope: !2170)
!2191 = !DILocation(line: 2147, column: 16, scope: !2170)
!2192 = !DILocation(line: 2148, column: 33, scope: !2170)
!2193 = !DILocation(line: 2148, column: 47, scope: !2170)
!2194 = !DILocation(line: 2148, column: 16, scope: !2170)
!2195 = !DILocation(line: 2149, column: 33, scope: !2170)
!2196 = !DILocation(line: 2149, column: 16, scope: !2170)
!2197 = !DILocation(line: 2150, column: 33, scope: !2170)
!2198 = !DILocation(line: 2151, column: 36, scope: !2170)
!2199 = !DILocation(line: 2151, column: 35, scope: !2170)
!2200 = !DILocation(line: 2150, column: 16, scope: !2170)
!2201 = !DILocation(line: 2152, column: 33, scope: !2170)
!2202 = !DILocation(line: 2152, column: 16, scope: !2170)
!2203 = !DILocation(line: 2153, column: 33, scope: !2170)
!2204 = !DILocation(line: 2154, column: 29, scope: !2170)
!2205 = !DILocation(line: 2154, column: 39, scope: !2170)
!2206 = !DILocation(line: 2153, column: 16, scope: !2170)
!2207 = !DILocation(line: 2155, column: 33, scope: !2170)
!2208 = !DILocation(line: 2156, column: 29, scope: !2170)
!2209 = !DILocation(line: 2156, column: 39, scope: !2170)
!2210 = !DILocation(line: 2155, column: 16, scope: !2170)
!2211 = !DILocation(line: 2157, column: 33, scope: !2170)
!2212 = !DILocation(line: 2157, column: 16, scope: !2170)
!2213 = !DILocation(line: 2158, column: 9, scope: !2170)
!2214 = !DILocation(line: 2162, column: 33, scope: !2215)
!2215 = distinct !DILexicalBlock(scope: !1823, file: !1, line: 2161, column: 7)
!2216 = !DILocation(line: 2162, column: 16, scope: !2215)
!2217 = !DILocation(line: 2163, column: 16, scope: !2218)
!2218 = distinct !DILexicalBlock(scope: !2215, file: !1, line: 2163, column: 9)
!2219 = !DILocation(line: 2163, column: 15, scope: !2218)
!2220 = !DILocation(line: 2163, column: 20, scope: !2221)
!2221 = distinct !DILexicalBlock(scope: !2218, file: !1, line: 2163, column: 9)
!2222 = !DILocation(line: 2163, column: 21, scope: !2221)
!2223 = !DILocation(line: 2163, column: 9, scope: !2218)
!2224 = !DILocation(line: 2164, column: 35, scope: !2221)
!2225 = !DILocation(line: 2164, column: 73, scope: !2221)
!2226 = !DILocation(line: 2164, column: 64, scope: !2221)
!2227 = !DILocation(line: 2164, column: 76, scope: !2221)
!2228 = !DILocation(line: 2164, column: 82, scope: !2221)
!2229 = !DILocation(line: 2164, column: 18, scope: !2221)
!2230 = !DILocation(line: 2164, column: 11, scope: !2221)
!2231 = !DILocation(line: 2163, column: 26, scope: !2221)
!2232 = !DILocation(line: 2163, column: 9, scope: !2221)
!2233 = distinct !{!2233, !2223, !2234}
!2234 = !DILocation(line: 2164, column: 84, scope: !2218)
!2235 = !DILocation(line: 2165, column: 33, scope: !2215)
!2236 = !DILocation(line: 2165, column: 16, scope: !2215)
!2237 = !DILocation(line: 2166, column: 33, scope: !2215)
!2238 = !DILocation(line: 2166, column: 47, scope: !2215)
!2239 = !DILocation(line: 2166, column: 16, scope: !2215)
!2240 = !DILocation(line: 2167, column: 33, scope: !2215)
!2241 = !DILocation(line: 2168, column: 27, scope: !2215)
!2242 = !DILocation(line: 2168, column: 26, scope: !2215)
!2243 = !DILocation(line: 2168, column: 38, scope: !2215)
!2244 = !DILocation(line: 2168, column: 37, scope: !2215)
!2245 = !DILocation(line: 2167, column: 16, scope: !2215)
!2246 = !DILocation(line: 2169, column: 33, scope: !2215)
!2247 = !DILocation(line: 2170, column: 28, scope: !2215)
!2248 = !DILocation(line: 2170, column: 37, scope: !2215)
!2249 = !DILocation(line: 2170, column: 36, scope: !2215)
!2250 = !DILocation(line: 2170, column: 26, scope: !2215)
!2251 = !DILocation(line: 2170, column: 46, scope: !2215)
!2252 = !DILocation(line: 2169, column: 16, scope: !2215)
!2253 = !DILocation(line: 2171, column: 33, scope: !2215)
!2254 = !DILocation(line: 2171, column: 16, scope: !2215)
!2255 = !DILocation(line: 2172, column: 33, scope: !2215)
!2256 = !DILocation(line: 2173, column: 26, scope: !2215)
!2257 = !DILocation(line: 2172, column: 16, scope: !2215)
!2258 = !DILocation(line: 2174, column: 33, scope: !2215)
!2259 = !DILocation(line: 2175, column: 27, scope: !2215)
!2260 = !DILocation(line: 2175, column: 26, scope: !2215)
!2261 = !DILocation(line: 2175, column: 37, scope: !2215)
!2262 = !DILocation(line: 2174, column: 16, scope: !2215)
!2263 = !DILocation(line: 2176, column: 33, scope: !2215)
!2264 = !DILocation(line: 2176, column: 16, scope: !2215)
!2265 = !DILocation(line: 2177, column: 9, scope: !2215)
!2266 = !DILocation(line: 2181, column: 33, scope: !2267)
!2267 = distinct !DILexicalBlock(scope: !1823, file: !1, line: 2180, column: 7)
!2268 = !DILocation(line: 2181, column: 16, scope: !2267)
!2269 = !DILocation(line: 2182, column: 16, scope: !2270)
!2270 = distinct !DILexicalBlock(scope: !2267, file: !1, line: 2182, column: 9)
!2271 = !DILocation(line: 2182, column: 15, scope: !2270)
!2272 = !DILocation(line: 2182, column: 20, scope: !2273)
!2273 = distinct !DILexicalBlock(scope: !2270, file: !1, line: 2182, column: 9)
!2274 = !DILocation(line: 2182, column: 21, scope: !2273)
!2275 = !DILocation(line: 2182, column: 9, scope: !2270)
!2276 = !DILocation(line: 2183, column: 35, scope: !2273)
!2277 = !DILocation(line: 2183, column: 73, scope: !2273)
!2278 = !DILocation(line: 2183, column: 64, scope: !2273)
!2279 = !DILocation(line: 2183, column: 76, scope: !2273)
!2280 = !DILocation(line: 2183, column: 82, scope: !2273)
!2281 = !DILocation(line: 2183, column: 18, scope: !2273)
!2282 = !DILocation(line: 2183, column: 11, scope: !2273)
!2283 = !DILocation(line: 2182, column: 26, scope: !2273)
!2284 = !DILocation(line: 2182, column: 9, scope: !2273)
!2285 = distinct !{!2285, !2275, !2286}
!2286 = !DILocation(line: 2183, column: 84, scope: !2270)
!2287 = !DILocation(line: 2184, column: 33, scope: !2267)
!2288 = !DILocation(line: 2184, column: 16, scope: !2267)
!2289 = !DILocation(line: 2185, column: 33, scope: !2267)
!2290 = !DILocation(line: 2185, column: 47, scope: !2267)
!2291 = !DILocation(line: 2185, column: 16, scope: !2267)
!2292 = !DILocation(line: 2186, column: 33, scope: !2267)
!2293 = !DILocation(line: 2186, column: 73, scope: !2267)
!2294 = !DILocation(line: 2186, column: 84, scope: !2267)
!2295 = !DILocation(line: 2186, column: 16, scope: !2267)
!2296 = !DILocation(line: 2187, column: 33, scope: !2267)
!2297 = !DILocation(line: 2187, column: 73, scope: !2267)
!2298 = !DILocation(line: 2187, column: 84, scope: !2267)
!2299 = !DILocation(line: 2187, column: 16, scope: !2267)
!2300 = !DILocation(line: 2188, column: 33, scope: !2267)
!2301 = !DILocation(line: 2188, column: 73, scope: !2267)
!2302 = !DILocation(line: 2188, column: 16, scope: !2267)
!2303 = !DILocation(line: 2189, column: 33, scope: !2267)
!2304 = !DILocation(line: 2189, column: 73, scope: !2267)
!2305 = !DILocation(line: 2189, column: 16, scope: !2267)
!2306 = !DILocation(line: 2190, column: 33, scope: !2267)
!2307 = !DILocation(line: 2190, column: 16, scope: !2267)
!2308 = !DILocation(line: 2191, column: 9, scope: !2267)
!2309 = !DILocation(line: 2195, column: 33, scope: !2310)
!2310 = distinct !DILexicalBlock(scope: !1823, file: !1, line: 2194, column: 7)
!2311 = !DILocation(line: 2195, column: 16, scope: !2310)
!2312 = !DILocation(line: 2196, column: 33, scope: !2310)
!2313 = !DILocation(line: 2196, column: 71, scope: !2310)
!2314 = !DILocation(line: 2196, column: 16, scope: !2310)
!2315 = !DILocation(line: 2197, column: 33, scope: !2310)
!2316 = !DILocation(line: 2197, column: 16, scope: !2310)
!2317 = !DILocation(line: 2198, column: 33, scope: !2310)
!2318 = !DILocation(line: 2198, column: 47, scope: !2310)
!2319 = !DILocation(line: 2198, column: 16, scope: !2310)
!2320 = !DILocation(line: 2199, column: 33, scope: !2310)
!2321 = !DILocation(line: 2200, column: 27, scope: !2310)
!2322 = !DILocation(line: 2200, column: 26, scope: !2310)
!2323 = !DILocation(line: 2200, column: 38, scope: !2310)
!2324 = !DILocation(line: 2200, column: 37, scope: !2310)
!2325 = !DILocation(line: 2199, column: 16, scope: !2310)
!2326 = !DILocation(line: 2201, column: 33, scope: !2310)
!2327 = !DILocation(line: 2201, column: 71, scope: !2310)
!2328 = !DILocation(line: 2201, column: 16, scope: !2310)
!2329 = !DILocation(line: 2202, column: 33, scope: !2310)
!2330 = !DILocation(line: 2203, column: 26, scope: !2310)
!2331 = !DILocation(line: 2203, column: 36, scope: !2310)
!2332 = !DILocation(line: 2202, column: 16, scope: !2310)
!2333 = !DILocation(line: 2204, column: 33, scope: !2310)
!2334 = !DILocation(line: 2204, column: 72, scope: !2310)
!2335 = !DILocation(line: 2204, column: 16, scope: !2310)
!2336 = !DILocation(line: 2205, column: 33, scope: !2310)
!2337 = !DILocation(line: 2205, column: 60, scope: !2310)
!2338 = !DILocation(line: 2205, column: 16, scope: !2310)
!2339 = !DILocation(line: 2206, column: 9, scope: !2310)
!2340 = !DILocation(line: 2210, column: 33, scope: !2341)
!2341 = distinct !DILexicalBlock(scope: !1823, file: !1, line: 2209, column: 7)
!2342 = !DILocation(line: 2210, column: 16, scope: !2341)
!2343 = !DILocation(line: 2211, column: 33, scope: !2341)
!2344 = !DILocation(line: 2211, column: 71, scope: !2341)
!2345 = !DILocation(line: 2211, column: 16, scope: !2341)
!2346 = !DILocation(line: 2212, column: 33, scope: !2341)
!2347 = !DILocation(line: 2212, column: 16, scope: !2341)
!2348 = !DILocation(line: 2213, column: 33, scope: !2341)
!2349 = !DILocation(line: 2213, column: 47, scope: !2341)
!2350 = !DILocation(line: 2213, column: 16, scope: !2341)
!2351 = !DILocation(line: 2214, column: 33, scope: !2341)
!2352 = !DILocation(line: 2215, column: 27, scope: !2341)
!2353 = !DILocation(line: 2215, column: 26, scope: !2341)
!2354 = !DILocation(line: 2215, column: 38, scope: !2341)
!2355 = !DILocation(line: 2215, column: 37, scope: !2341)
!2356 = !DILocation(line: 2214, column: 16, scope: !2341)
!2357 = !DILocation(line: 2216, column: 33, scope: !2341)
!2358 = !DILocation(line: 2216, column: 65, scope: !2341)
!2359 = !DILocation(line: 2216, column: 16, scope: !2341)
!2360 = !DILocation(line: 2217, column: 33, scope: !2341)
!2361 = !DILocation(line: 2218, column: 26, scope: !2341)
!2362 = !DILocation(line: 2218, column: 36, scope: !2341)
!2363 = !DILocation(line: 2217, column: 16, scope: !2341)
!2364 = !DILocation(line: 2219, column: 33, scope: !2341)
!2365 = !DILocation(line: 2220, column: 26, scope: !2341)
!2366 = !DILocation(line: 2219, column: 16, scope: !2341)
!2367 = !DILocation(line: 2221, column: 33, scope: !2341)
!2368 = !DILocation(line: 2221, column: 60, scope: !2341)
!2369 = !DILocation(line: 2221, column: 16, scope: !2341)
!2370 = !DILocation(line: 2222, column: 9, scope: !2341)
!2371 = !DILocalVariable(name: "xc", scope: !2372, file: !1, line: 2227, type: !638)
!2372 = distinct !DILexicalBlock(scope: !1823, file: !1, line: 2227, column: 7)
!2373 = !DILocation(line: 2227, column: 16, scope: !2372)
!2374 = !DILocalVariable(name: "yc", scope: !2372, file: !1, line: 2227, type: !638)
!2375 = !DILocation(line: 2227, column: 19, scope: !2372)
!2376 = !DILocation(line: 2232, column: 23, scope: !2372)
!2377 = !DILocation(line: 2232, column: 30, scope: !2372)
!2378 = !DILocation(line: 2232, column: 15, scope: !2372)
!2379 = !DILocation(line: 2232, column: 37, scope: !2372)
!2380 = !DILocation(line: 2232, column: 42, scope: !2372)
!2381 = !DILocation(line: 2232, column: 49, scope: !2372)
!2382 = !DILocation(line: 2232, column: 56, scope: !2372)
!2383 = !DILocation(line: 2232, column: 61, scope: !2372)
!2384 = !DILocation(line: 2232, column: 47, scope: !2372)
!2385 = !DILocation(line: 2232, column: 12, scope: !2372)
!2386 = !DILocation(line: 2233, column: 23, scope: !2372)
!2387 = !DILocation(line: 2233, column: 30, scope: !2372)
!2388 = !DILocation(line: 2233, column: 15, scope: !2372)
!2389 = !DILocation(line: 2233, column: 34, scope: !2372)
!2390 = !DILocation(line: 2233, column: 39, scope: !2372)
!2391 = !DILocation(line: 2233, column: 49, scope: !2372)
!2392 = !DILocation(line: 2233, column: 56, scope: !2372)
!2393 = !DILocation(line: 2233, column: 61, scope: !2372)
!2394 = !DILocation(line: 2233, column: 47, scope: !2372)
!2395 = !DILocation(line: 2233, column: 12, scope: !2372)
!2396 = !DILocation(line: 2234, column: 33, scope: !2372)
!2397 = !DILocation(line: 2235, column: 14, scope: !2372)
!2398 = !DILocation(line: 2235, column: 21, scope: !2372)
!2399 = !DILocation(line: 2234, column: 16, scope: !2372)
!2400 = !DILocation(line: 2236, column: 33, scope: !2372)
!2401 = !DILocation(line: 2236, column: 47, scope: !2372)
!2402 = !DILocation(line: 2236, column: 16, scope: !2372)
!2403 = !DILocation(line: 2237, column: 19, scope: !2404)
!2404 = distinct !DILexicalBlock(scope: !2372, file: !1, line: 2237, column: 14)
!2405 = !DILocation(line: 2237, column: 28, scope: !2404)
!2406 = !DILocation(line: 2237, column: 27, scope: !2404)
!2407 = !DILocation(line: 2237, column: 30, scope: !2404)
!2408 = !DILocation(line: 2237, column: 14, scope: !2404)
!2409 = !DILocation(line: 2237, column: 36, scope: !2404)
!2410 = !DILocation(line: 2237, column: 42, scope: !2404)
!2411 = !DILocation(line: 2237, column: 50, scope: !2404)
!2412 = !DILocation(line: 2237, column: 59, scope: !2404)
!2413 = !DILocation(line: 2237, column: 58, scope: !2404)
!2414 = !DILocation(line: 2237, column: 61, scope: !2404)
!2415 = !DILocation(line: 2237, column: 45, scope: !2404)
!2416 = !DILocation(line: 2237, column: 67, scope: !2404)
!2417 = !DILocation(line: 2237, column: 14, scope: !2372)
!2418 = !DILocation(line: 2238, column: 35, scope: !2404)
!2419 = !DILocation(line: 2238, column: 18, scope: !2404)
!2420 = !DILocation(line: 2238, column: 11, scope: !2404)
!2421 = !DILocation(line: 2240, column: 35, scope: !2404)
!2422 = !DILocation(line: 2241, column: 16, scope: !2404)
!2423 = !DILocation(line: 2241, column: 24, scope: !2404)
!2424 = !DILocation(line: 2241, column: 30, scope: !2404)
!2425 = !DILocation(line: 2241, column: 38, scope: !2404)
!2426 = !DILocation(line: 2240, column: 18, scope: !2404)
!2427 = !DILocation(line: 2242, column: 33, scope: !2372)
!2428 = !DILocation(line: 2242, column: 16, scope: !2372)
!2429 = !DILocation(line: 2244, column: 33, scope: !2372)
!2430 = !DILocation(line: 2245, column: 14, scope: !2372)
!2431 = !DILocation(line: 2245, column: 21, scope: !2372)
!2432 = !DILocation(line: 2246, column: 14, scope: !2372)
!2433 = !DILocation(line: 2246, column: 23, scope: !2372)
!2434 = !DILocation(line: 2246, column: 32, scope: !2372)
!2435 = !DILocation(line: 2246, column: 41, scope: !2372)
!2436 = !DILocation(line: 2244, column: 16, scope: !2372)
!2437 = !DILocation(line: 2247, column: 33, scope: !2372)
!2438 = !DILocation(line: 2248, column: 14, scope: !2372)
!2439 = !DILocation(line: 2248, column: 21, scope: !2372)
!2440 = !DILocation(line: 2249, column: 14, scope: !2372)
!2441 = !DILocation(line: 2249, column: 23, scope: !2372)
!2442 = !DILocation(line: 2249, column: 32, scope: !2372)
!2443 = !DILocation(line: 2249, column: 41, scope: !2372)
!2444 = !DILocation(line: 2247, column: 16, scope: !2372)
!2445 = !DILocation(line: 2250, column: 33, scope: !2372)
!2446 = !DILocation(line: 2250, column: 16, scope: !2372)
!2447 = !DILocation(line: 2251, column: 7, scope: !2372)
!2448 = !DILocation(line: 2253, column: 9, scope: !1823)
!2449 = !DILocation(line: 2255, column: 3, scope: !1791)
!2450 = !DILocalVariable(name: "artifact", scope: !2451, file: !1, line: 2262, type: !734)
!2451 = distinct !DILexicalBlock(scope: !911, file: !1, line: 2262, column: 3)
!2452 = !DILocation(line: 2262, column: 17, scope: !2451)
!2453 = !DILocation(line: 2263, column: 31, scope: !2451)
!2454 = !DILocation(line: 2263, column: 14, scope: !2451)
!2455 = !DILocation(line: 2263, column: 13, scope: !2451)
!2456 = !DILocation(line: 2264, column: 20, scope: !2451)
!2457 = !DILocation(line: 2265, column: 9, scope: !2458)
!2458 = distinct !DILexicalBlock(scope: !2451, file: !1, line: 2265, column: 9)
!2459 = !DILocation(line: 2265, column: 18, scope: !2458)
!2460 = !DILocation(line: 2265, column: 9, scope: !2451)
!2461 = !DILocation(line: 2266, column: 44, scope: !2462)
!2462 = distinct !DILexicalBlock(scope: !2458, file: !1, line: 2265, column: 42)
!2463 = !DILocation(line: 2266, column: 29, scope: !2462)
!2464 = !DILocation(line: 2266, column: 24, scope: !2462)
!2465 = !DILocation(line: 2266, column: 22, scope: !2462)
!2466 = !DILocation(line: 2267, column: 32, scope: !2462)
!2467 = !DILocation(line: 2267, column: 56, scope: !2462)
!2468 = !DILocation(line: 2267, column: 47, scope: !2462)
!2469 = !DILocation(line: 2267, column: 46, scope: !2462)
!2470 = !DILocation(line: 2267, column: 61, scope: !2462)
!2471 = !DILocation(line: 2267, column: 22, scope: !2462)
!2472 = !DILocation(line: 2267, column: 16, scope: !2462)
!2473 = !DILocation(line: 2267, column: 21, scope: !2462)
!2474 = !DILocation(line: 2268, column: 33, scope: !2462)
!2475 = !DILocation(line: 2268, column: 57, scope: !2462)
!2476 = !DILocation(line: 2268, column: 48, scope: !2462)
!2477 = !DILocation(line: 2268, column: 47, scope: !2462)
!2478 = !DILocation(line: 2268, column: 63, scope: !2462)
!2479 = !DILocation(line: 2268, column: 23, scope: !2462)
!2480 = !DILocation(line: 2268, column: 16, scope: !2462)
!2481 = !DILocation(line: 2268, column: 22, scope: !2462)
!2482 = !DILocation(line: 2269, column: 29, scope: !2462)
!2483 = !DILocation(line: 2269, column: 53, scope: !2462)
!2484 = !DILocation(line: 2269, column: 44, scope: !2462)
!2485 = !DILocation(line: 2269, column: 43, scope: !2462)
!2486 = !DILocation(line: 2269, column: 54, scope: !2462)
!2487 = !DILocation(line: 2269, column: 18, scope: !2462)
!2488 = !DILocation(line: 2269, column: 16, scope: !2462)
!2489 = !DILocation(line: 2269, column: 17, scope: !2462)
!2490 = !DILocation(line: 2270, column: 29, scope: !2462)
!2491 = !DILocation(line: 2270, column: 53, scope: !2462)
!2492 = !DILocation(line: 2270, column: 44, scope: !2462)
!2493 = !DILocation(line: 2270, column: 43, scope: !2462)
!2494 = !DILocation(line: 2270, column: 54, scope: !2462)
!2495 = !DILocation(line: 2270, column: 18, scope: !2462)
!2496 = !DILocation(line: 2270, column: 16, scope: !2462)
!2497 = !DILocation(line: 2270, column: 17, scope: !2462)
!2498 = !DILocation(line: 2271, column: 12, scope: !2499)
!2499 = distinct !DILexicalBlock(scope: !2462, file: !1, line: 2271, column: 12)
!2500 = !DILocation(line: 2271, column: 27, scope: !2499)
!2501 = !DILocation(line: 2271, column: 12, scope: !2462)
!2502 = !DILocation(line: 2272, column: 51, scope: !2503)
!2503 = distinct !DILexicalBlock(scope: !2499, file: !1, line: 2271, column: 35)
!2504 = !DILocation(line: 2272, column: 28, scope: !2503)
!2505 = !DILocation(line: 2272, column: 17, scope: !2503)
!2506 = !DILocation(line: 2272, column: 15, scope: !2503)
!2507 = !DILocation(line: 2273, column: 37, scope: !2503)
!2508 = !DILocation(line: 2273, column: 16, scope: !2503)
!2509 = !DILocation(line: 2275, column: 9, scope: !2503)
!2510 = !DILocation(line: 2277, column: 26, scope: !2462)
!2511 = !DILocation(line: 2277, column: 25, scope: !2462)
!2512 = !DILocation(line: 2277, column: 22, scope: !2462)
!2513 = !DILocation(line: 2278, column: 5, scope: !2462)
!2514 = !DILocation(line: 2288, column: 28, scope: !911)
!2515 = !DILocation(line: 2288, column: 43, scope: !911)
!2516 = !DILocation(line: 2288, column: 58, scope: !911)
!2517 = !DILocation(line: 2289, column: 5, scope: !911)
!2518 = !DILocation(line: 2288, column: 17, scope: !911)
!2519 = !DILocation(line: 2288, column: 16, scope: !911)
!2520 = !DILocation(line: 2290, column: 7, scope: !2521)
!2521 = distinct !DILexicalBlock(scope: !911, file: !1, line: 2290, column: 7)
!2522 = !DILocation(line: 2290, column: 21, scope: !2521)
!2523 = !DILocation(line: 2290, column: 7, scope: !911)
!2524 = !DILocation(line: 2291, column: 5, scope: !2521)
!2525 = !DILocation(line: 2293, column: 28, scope: !2526)
!2526 = distinct !DILexicalBlock(scope: !911, file: !1, line: 2293, column: 7)
!2527 = !DILocation(line: 2293, column: 7, scope: !2526)
!2528 = !DILocation(line: 2293, column: 55, scope: !2526)
!2529 = !DILocation(line: 2293, column: 7, scope: !911)
!2530 = !DILocation(line: 2295, column: 24, scope: !2531)
!2531 = distinct !DILexicalBlock(scope: !2526, file: !1, line: 2294, column: 5)
!2532 = !DILocation(line: 2295, column: 35, scope: !2531)
!2533 = !DILocation(line: 2295, column: 50, scope: !2531)
!2534 = !DILocation(line: 2295, column: 7, scope: !2531)
!2535 = !DILocation(line: 2296, column: 34, scope: !2531)
!2536 = !DILocation(line: 2296, column: 21, scope: !2531)
!2537 = !DILocation(line: 2296, column: 20, scope: !2531)
!2538 = !DILocation(line: 2297, column: 7, scope: !2531)
!2539 = !DILocation(line: 2299, column: 21, scope: !2540)
!2540 = distinct !DILexicalBlock(scope: !911, file: !1, line: 2299, column: 7)
!2541 = !DILocation(line: 2299, column: 36, scope: !2540)
!2542 = !DILocation(line: 2299, column: 8, scope: !2540)
!2543 = !DILocation(line: 2299, column: 54, scope: !2540)
!2544 = !DILocation(line: 2299, column: 70, scope: !2540)
!2545 = !DILocation(line: 2300, column: 25, scope: !2540)
!2546 = !DILocation(line: 2300, column: 40, scope: !2540)
!2547 = !DILocation(line: 2300, column: 8, scope: !2540)
!2548 = !DILocation(line: 2300, column: 52, scope: !2540)
!2549 = !DILocation(line: 2299, column: 7, scope: !911)
!2550 = !DILocation(line: 2301, column: 31, scope: !2540)
!2551 = !DILocation(line: 2301, column: 12, scope: !2540)
!2552 = !DILocation(line: 2301, column: 5, scope: !2540)
!2553 = !DILocation(line: 2302, column: 7, scope: !2554)
!2554 = distinct !DILexicalBlock(scope: !911, file: !1, line: 2302, column: 7)
!2555 = !DILocation(line: 2302, column: 22, scope: !2554)
!2556 = !DILocation(line: 2302, column: 39, scope: !2554)
!2557 = !DILocation(line: 2302, column: 47, scope: !2554)
!2558 = !DILocation(line: 2302, column: 7, scope: !911)
!2559 = !DILocation(line: 2303, column: 5, scope: !2554)
!2560 = !DILocation(line: 2303, column: 20, scope: !2554)
!2561 = !DILocation(line: 2303, column: 25, scope: !2554)
!2562 = !DILocation(line: 2304, column: 34, scope: !911)
!2563 = !DILocation(line: 2304, column: 3, scope: !911)
!2564 = !DILocation(line: 2304, column: 18, scope: !911)
!2565 = !DILocation(line: 2304, column: 23, scope: !911)
!2566 = !DILocation(line: 2304, column: 24, scope: !911)
!2567 = !DILocation(line: 2305, column: 34, scope: !911)
!2568 = !DILocation(line: 2305, column: 3, scope: !911)
!2569 = !DILocation(line: 2305, column: 18, scope: !911)
!2570 = !DILocation(line: 2305, column: 23, scope: !911)
!2571 = !DILocation(line: 2305, column: 24, scope: !911)
!2572 = !DILocalVariable(name: "distort_view", scope: !2573, file: !1, line: 2311, type: !2574)
!2573 = distinct !DILexicalBlock(scope: !911, file: !1, line: 2307, column: 3)
!2574 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2575, size: 64)
!2575 = !DIDerivedType(tag: DW_TAG_typedef, name: "CacheView", file: !417, line: 50, baseType: !2576)
!2576 = !DICompositeType(tag: DW_TAG_structure_type, name: "_CacheView", file: !326, line: 160, flags: DIFlagFwdDecl)
!2577 = !DILocation(line: 2311, column: 8, scope: !2573)
!2578 = !DILocalVariable(name: "status", scope: !2573, file: !1, line: 2314, type: !617)
!2579 = !DILocation(line: 2314, column: 7, scope: !2573)
!2580 = !DILocalVariable(name: "progress", scope: !2573, file: !1, line: 2317, type: !737)
!2581 = !DILocation(line: 2317, column: 7, scope: !2573)
!2582 = !DILocalVariable(name: "zero", scope: !2573, file: !1, line: 2320, type: !2583)
!2583 = !DIDerivedType(tag: DW_TAG_typedef, name: "MagickPixelPacket", file: !326, line: 127, baseType: !2584)
!2584 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_MagickPixelPacket", file: !326, line: 104, size: 448, elements: !2585)
!2585 = !{!2586, !2587, !2588, !2589, !2590, !2591, !2592, !2593, !2594, !2595}
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "storage_class", scope: !2584, file: !326, line: 107, baseType: !606, size: 32)
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !2584, file: !326, line: 110, baseType: !608, size: 32, offset: 32)
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "matte", scope: !2584, file: !326, line: 113, baseType: !617, size: 32, offset: 64)
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "fuzz", scope: !2584, file: !326, line: 116, baseType: !638, size: 64, offset: 128)
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !2584, file: !326, line: 119, baseType: !612, size: 64, offset: 192)
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "red", scope: !2584, file: !326, line: 122, baseType: !828, size: 32, offset: 256)
!2592 = !DIDerivedType(tag: DW_TAG_member, name: "green", scope: !2584, file: !326, line: 123, baseType: !828, size: 32, offset: 288)
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "blue", scope: !2584, file: !326, line: 124, baseType: !828, size: 32, offset: 320)
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "opacity", scope: !2584, file: !326, line: 125, baseType: !828, size: 32, offset: 352)
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !2584, file: !326, line: 126, baseType: !828, size: 32, offset: 384)
!2596 = !DILocation(line: 2320, column: 7, scope: !2573)
!2597 = !DILocalVariable(name: "resample_filter", scope: !2573, file: !1, line: 2323, type: !2598)
!2598 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !830)
!2599 = !DILocation(line: 2323, column: 18, scope: !2573)
!2600 = !DILocalVariable(name: "j", scope: !2573, file: !1, line: 2326, type: !665)
!2601 = !DILocation(line: 2326, column: 7, scope: !2573)
!2602 = !DILocation(line: 2328, column: 11, scope: !2573)
!2603 = !DILocation(line: 2329, column: 13, scope: !2573)
!2604 = !DILocation(line: 2330, column: 26, scope: !2573)
!2605 = !DILocation(line: 2330, column: 5, scope: !2573)
!2606 = !DILocation(line: 2331, column: 52, scope: !2573)
!2607 = !DILocation(line: 2332, column: 47, scope: !2573)
!2608 = !DILocation(line: 2331, column: 21, scope: !2573)
!2609 = !DILocation(line: 2331, column: 20, scope: !2573)
!2610 = !DILocation(line: 2333, column: 44, scope: !2573)
!2611 = !DILocation(line: 2333, column: 58, scope: !2573)
!2612 = !DILocation(line: 2333, column: 18, scope: !2573)
!2613 = !DILocation(line: 2333, column: 17, scope: !2573)
!2614 = !DILocation(line: 2338, column: 11, scope: !2615)
!2615 = distinct !DILexicalBlock(scope: !2573, file: !1, line: 2338, column: 5)
!2616 = !DILocation(line: 2338, column: 10, scope: !2615)
!2617 = !DILocation(line: 2338, column: 15, scope: !2618)
!2618 = distinct !DILexicalBlock(scope: !2615, file: !1, line: 2338, column: 5)
!2619 = !DILocation(line: 2338, column: 29, scope: !2618)
!2620 = !DILocation(line: 2338, column: 44, scope: !2618)
!2621 = !DILocation(line: 2338, column: 17, scope: !2618)
!2622 = !DILocation(line: 2338, column: 5, scope: !2615)
!2623 = !DILocalVariable(name: "id", scope: !2624, file: !1, line: 2341, type: !2625)
!2624 = distinct !DILexicalBlock(scope: !2618, file: !1, line: 2339, column: 5)
!2625 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !513)
!2626 = !DILocation(line: 2341, column: 9, scope: !2624)
!2627 = !DILocation(line: 2341, column: 14, scope: !2624)
!2628 = !DILocalVariable(name: "validity", scope: !2624, file: !1, line: 2344, type: !638)
!2629 = !DILocation(line: 2344, column: 9, scope: !2624)
!2630 = !DILocalVariable(name: "sync", scope: !2624, file: !1, line: 2347, type: !617)
!2631 = !DILocation(line: 2347, column: 9, scope: !2624)
!2632 = !DILocalVariable(name: "pixel", scope: !2624, file: !1, line: 2350, type: !2583)
!2633 = !DILocation(line: 2350, column: 9, scope: !2624)
!2634 = !DILocalVariable(name: "invalid", scope: !2624, file: !1, line: 2351, type: !2583)
!2635 = !DILocation(line: 2351, column: 9, scope: !2624)
!2636 = !DILocalVariable(name: "d", scope: !2624, file: !1, line: 2354, type: !1006)
!2637 = !DILocation(line: 2354, column: 9, scope: !2624)
!2638 = !DILocalVariable(name: "s", scope: !2624, file: !1, line: 2355, type: !1006)
!2639 = !DILocation(line: 2355, column: 9, scope: !2624)
!2640 = !DILocalVariable(name: "indexes", scope: !2624, file: !1, line: 2358, type: !2641)
!2641 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !823)
!2642 = !DILocation(line: 2358, column: 19, scope: !2624)
!2643 = !DILocalVariable(name: "i", scope: !2624, file: !1, line: 2361, type: !665)
!2644 = !DILocation(line: 2361, column: 9, scope: !2624)
!2645 = !DILocalVariable(name: "q", scope: !2624, file: !1, line: 2364, type: !2646)
!2646 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !624)
!2647 = !DILocation(line: 2364, column: 19, scope: !2624)
!2648 = !DILocation(line: 2366, column: 39, scope: !2624)
!2649 = !DILocation(line: 2366, column: 54, scope: !2624)
!2650 = !DILocation(line: 2366, column: 56, scope: !2624)
!2651 = !DILocation(line: 2366, column: 71, scope: !2624)
!2652 = !DILocation(line: 2367, column: 9, scope: !2624)
!2653 = !DILocation(line: 2366, column: 9, scope: !2624)
!2654 = !DILocation(line: 2366, column: 8, scope: !2624)
!2655 = !DILocation(line: 2368, column: 11, scope: !2656)
!2656 = distinct !DILexicalBlock(scope: !2624, file: !1, line: 2368, column: 11)
!2657 = !DILocation(line: 2368, column: 13, scope: !2656)
!2658 = !DILocation(line: 2368, column: 11, scope: !2624)
!2659 = !DILocation(line: 2370, column: 17, scope: !2660)
!2660 = distinct !DILexicalBlock(scope: !2656, file: !1, line: 2369, column: 9)
!2661 = !DILocation(line: 2371, column: 11, scope: !2660)
!2662 = !DILocation(line: 2373, column: 47, scope: !2624)
!2663 = !DILocation(line: 2373, column: 15, scope: !2624)
!2664 = !DILocation(line: 2373, column: 14, scope: !2624)
!2665 = !DILocation(line: 2374, column: 13, scope: !2624)
!2666 = !DILocation(line: 2379, column: 15, scope: !2624)
!2667 = !DILocation(line: 2379, column: 7, scope: !2624)
!2668 = !DILocation(line: 2382, column: 11, scope: !2669)
!2669 = distinct !DILexicalBlock(scope: !2624, file: !1, line: 2380, column: 7)
!2670 = !DILocation(line: 2385, column: 11, scope: !2669)
!2671 = !DILocation(line: 2387, column: 11, scope: !2669)
!2672 = !DILocation(line: 2395, column: 16, scope: !2624)
!2673 = !DILocation(line: 2397, column: 28, scope: !2624)
!2674 = !DILocation(line: 2397, column: 7, scope: !2624)
!2675 = !DILocation(line: 2398, column: 28, scope: !2624)
!2676 = !DILocation(line: 2398, column: 43, scope: !2624)
!2677 = !DILocation(line: 2398, column: 58, scope: !2624)
!2678 = !DILocation(line: 2398, column: 7, scope: !2624)
!2679 = !DILocation(line: 2400, column: 11, scope: !2680)
!2680 = distinct !DILexicalBlock(scope: !2624, file: !1, line: 2400, column: 11)
!2681 = !DILocation(line: 2400, column: 26, scope: !2680)
!2682 = !DILocation(line: 2400, column: 37, scope: !2680)
!2683 = !DILocation(line: 2400, column: 11, scope: !2624)
!2684 = !DILocation(line: 2401, column: 9, scope: !2680)
!2685 = !DILocation(line: 2403, column: 13, scope: !2686)
!2686 = distinct !DILexicalBlock(scope: !2624, file: !1, line: 2403, column: 7)
!2687 = !DILocation(line: 2403, column: 12, scope: !2686)
!2688 = !DILocation(line: 2403, column: 17, scope: !2689)
!2689 = distinct !DILexicalBlock(scope: !2686, file: !1, line: 2403, column: 7)
!2690 = !DILocation(line: 2403, column: 31, scope: !2689)
!2691 = !DILocation(line: 2403, column: 46, scope: !2689)
!2692 = !DILocation(line: 2403, column: 19, scope: !2689)
!2693 = !DILocation(line: 2403, column: 7, scope: !2686)
!2694 = !DILocation(line: 2406, column: 34, scope: !2695)
!2695 = distinct !DILexicalBlock(scope: !2689, file: !1, line: 2404, column: 7)
!2696 = !DILocation(line: 2406, column: 36, scope: !2695)
!2697 = !DILocation(line: 2406, column: 35, scope: !2695)
!2698 = !DILocation(line: 2406, column: 25, scope: !2695)
!2699 = !DILocation(line: 2406, column: 37, scope: !2695)
!2700 = !DILocation(line: 2406, column: 43, scope: !2695)
!2701 = !DILocation(line: 2406, column: 42, scope: !2695)
!2702 = !DILocation(line: 2406, column: 11, scope: !2695)
!2703 = !DILocation(line: 2406, column: 13, scope: !2695)
!2704 = !DILocation(line: 2407, column: 34, scope: !2695)
!2705 = !DILocation(line: 2407, column: 36, scope: !2695)
!2706 = !DILocation(line: 2407, column: 35, scope: !2695)
!2707 = !DILocation(line: 2407, column: 25, scope: !2695)
!2708 = !DILocation(line: 2407, column: 37, scope: !2695)
!2709 = !DILocation(line: 2407, column: 43, scope: !2695)
!2710 = !DILocation(line: 2407, column: 42, scope: !2695)
!2711 = !DILocation(line: 2407, column: 11, scope: !2695)
!2712 = !DILocation(line: 2407, column: 13, scope: !2695)
!2713 = !DILocation(line: 2408, column: 13, scope: !2695)
!2714 = !DILocation(line: 2409, column: 17, scope: !2695)
!2715 = !DILocation(line: 2409, column: 9, scope: !2695)
!2716 = !DILocation(line: 2413, column: 17, scope: !2717)
!2717 = distinct !DILexicalBlock(scope: !2718, file: !1, line: 2412, column: 11)
!2718 = distinct !DILexicalBlock(scope: !2695, file: !1, line: 2410, column: 9)
!2719 = !DILocation(line: 2413, column: 28, scope: !2717)
!2720 = !DILocation(line: 2413, column: 25, scope: !2717)
!2721 = !DILocation(line: 2413, column: 30, scope: !2717)
!2722 = !DILocation(line: 2413, column: 41, scope: !2717)
!2723 = !DILocation(line: 2413, column: 38, scope: !2717)
!2724 = !DILocation(line: 2413, column: 29, scope: !2717)
!2725 = !DILocation(line: 2413, column: 43, scope: !2717)
!2726 = !DILocation(line: 2413, column: 42, scope: !2717)
!2727 = !DILocation(line: 2413, column: 15, scope: !2717)
!2728 = !DILocation(line: 2413, column: 16, scope: !2717)
!2729 = !DILocation(line: 2414, column: 17, scope: !2717)
!2730 = !DILocation(line: 2414, column: 28, scope: !2717)
!2731 = !DILocation(line: 2414, column: 25, scope: !2717)
!2732 = !DILocation(line: 2414, column: 30, scope: !2717)
!2733 = !DILocation(line: 2414, column: 41, scope: !2717)
!2734 = !DILocation(line: 2414, column: 38, scope: !2717)
!2735 = !DILocation(line: 2414, column: 29, scope: !2717)
!2736 = !DILocation(line: 2414, column: 43, scope: !2717)
!2737 = !DILocation(line: 2414, column: 42, scope: !2717)
!2738 = !DILocation(line: 2414, column: 15, scope: !2717)
!2739 = !DILocation(line: 2414, column: 16, scope: !2717)
!2740 = !DILocation(line: 2416, column: 13, scope: !2717)
!2741 = !DILocalVariable(name: "p", scope: !2742, file: !1, line: 2421, type: !638)
!2742 = distinct !DILexicalBlock(scope: !2718, file: !1, line: 2419, column: 11)
!2743 = !DILocation(line: 2421, column: 15, scope: !2742)
!2744 = !DILocalVariable(name: "q", scope: !2742, file: !1, line: 2421, type: !638)
!2745 = !DILocation(line: 2421, column: 17, scope: !2742)
!2746 = !DILocalVariable(name: "r", scope: !2742, file: !1, line: 2421, type: !638)
!2747 = !DILocation(line: 2421, column: 19, scope: !2742)
!2748 = !DILocalVariable(name: "abs_r", scope: !2742, file: !1, line: 2421, type: !638)
!2749 = !DILocation(line: 2421, column: 21, scope: !2742)
!2750 = !DILocalVariable(name: "abs_c6", scope: !2742, file: !1, line: 2421, type: !638)
!2751 = !DILocation(line: 2421, column: 27, scope: !2742)
!2752 = !DILocalVariable(name: "abs_c7", scope: !2742, file: !1, line: 2421, type: !638)
!2753 = !DILocation(line: 2421, column: 34, scope: !2742)
!2754 = !DILocalVariable(name: "scale", scope: !2742, file: !1, line: 2421, type: !638)
!2755 = !DILocation(line: 2421, column: 41, scope: !2742)
!2756 = !DILocation(line: 2423, column: 15, scope: !2742)
!2757 = !DILocation(line: 2423, column: 26, scope: !2742)
!2758 = !DILocation(line: 2423, column: 23, scope: !2742)
!2759 = !DILocation(line: 2423, column: 28, scope: !2742)
!2760 = !DILocation(line: 2423, column: 39, scope: !2742)
!2761 = !DILocation(line: 2423, column: 36, scope: !2742)
!2762 = !DILocation(line: 2423, column: 27, scope: !2742)
!2763 = !DILocation(line: 2423, column: 41, scope: !2742)
!2764 = !DILocation(line: 2423, column: 40, scope: !2742)
!2765 = !DILocation(line: 2423, column: 14, scope: !2742)
!2766 = !DILocation(line: 2424, column: 15, scope: !2742)
!2767 = !DILocation(line: 2424, column: 26, scope: !2742)
!2768 = !DILocation(line: 2424, column: 23, scope: !2742)
!2769 = !DILocation(line: 2424, column: 28, scope: !2742)
!2770 = !DILocation(line: 2424, column: 39, scope: !2742)
!2771 = !DILocation(line: 2424, column: 36, scope: !2742)
!2772 = !DILocation(line: 2424, column: 27, scope: !2742)
!2773 = !DILocation(line: 2424, column: 41, scope: !2742)
!2774 = !DILocation(line: 2424, column: 40, scope: !2742)
!2775 = !DILocation(line: 2424, column: 14, scope: !2742)
!2776 = !DILocation(line: 2425, column: 15, scope: !2742)
!2777 = !DILocation(line: 2425, column: 26, scope: !2742)
!2778 = !DILocation(line: 2425, column: 23, scope: !2742)
!2779 = !DILocation(line: 2425, column: 28, scope: !2742)
!2780 = !DILocation(line: 2425, column: 39, scope: !2742)
!2781 = !DILocation(line: 2425, column: 36, scope: !2742)
!2782 = !DILocation(line: 2425, column: 27, scope: !2742)
!2783 = !DILocation(line: 2425, column: 40, scope: !2742)
!2784 = !DILocation(line: 2425, column: 14, scope: !2742)
!2785 = !DILocation(line: 2427, column: 25, scope: !2742)
!2786 = !DILocation(line: 2427, column: 27, scope: !2742)
!2787 = !DILocation(line: 2427, column: 26, scope: !2742)
!2788 = !DILocation(line: 2427, column: 36, scope: !2742)
!2789 = !DILocation(line: 2427, column: 24, scope: !2742)
!2790 = !DILocation(line: 2427, column: 22, scope: !2742)
!2791 = !DILocation(line: 2429, column: 26, scope: !2742)
!2792 = !DILocation(line: 2429, column: 21, scope: !2742)
!2793 = !DILocation(line: 2429, column: 28, scope: !2742)
!2794 = !DILocation(line: 2429, column: 19, scope: !2742)
!2795 = !DILocation(line: 2430, column: 27, scope: !2742)
!2796 = !DILocation(line: 2430, column: 22, scope: !2742)
!2797 = !DILocation(line: 2430, column: 20, scope: !2742)
!2798 = !DILocation(line: 2431, column: 27, scope: !2742)
!2799 = !DILocation(line: 2431, column: 22, scope: !2742)
!2800 = !DILocation(line: 2431, column: 20, scope: !2742)
!2801 = !DILocation(line: 2432, column: 18, scope: !2802)
!2802 = distinct !DILexicalBlock(scope: !2742, file: !1, line: 2432, column: 18)
!2803 = !DILocation(line: 2432, column: 27, scope: !2802)
!2804 = !DILocation(line: 2432, column: 25, scope: !2802)
!2805 = !DILocation(line: 2432, column: 18, scope: !2742)
!2806 = !DILocation(line: 2433, column: 20, scope: !2807)
!2807 = distinct !DILexicalBlock(scope: !2808, file: !1, line: 2433, column: 20)
!2808 = distinct !DILexicalBlock(scope: !2802, file: !1, line: 2432, column: 36)
!2809 = !DILocation(line: 2433, column: 28, scope: !2807)
!2810 = !DILocation(line: 2433, column: 35, scope: !2807)
!2811 = !DILocation(line: 2433, column: 34, scope: !2807)
!2812 = !DILocation(line: 2433, column: 26, scope: !2807)
!2813 = !DILocation(line: 2433, column: 20, scope: !2808)
!2814 = !DILocation(line: 2434, column: 34, scope: !2807)
!2815 = !DILocation(line: 2434, column: 43, scope: !2807)
!2816 = !DILocation(line: 2434, column: 42, scope: !2807)
!2817 = !DILocation(line: 2434, column: 46, scope: !2807)
!2818 = !DILocation(line: 2434, column: 55, scope: !2807)
!2819 = !DILocation(line: 2434, column: 54, scope: !2807)
!2820 = !DILocation(line: 2434, column: 44, scope: !2807)
!2821 = !DILocation(line: 2434, column: 32, scope: !2807)
!2822 = !DILocation(line: 2434, column: 26, scope: !2807)
!2823 = !DILocation(line: 2434, column: 17, scope: !2807)
!2824 = !DILocation(line: 2435, column: 13, scope: !2808)
!2825 = !DILocation(line: 2436, column: 23, scope: !2826)
!2826 = distinct !DILexicalBlock(scope: !2802, file: !1, line: 2436, column: 23)
!2827 = !DILocation(line: 2436, column: 31, scope: !2826)
!2828 = !DILocation(line: 2436, column: 38, scope: !2826)
!2829 = !DILocation(line: 2436, column: 37, scope: !2826)
!2830 = !DILocation(line: 2436, column: 29, scope: !2826)
!2831 = !DILocation(line: 2436, column: 23, scope: !2802)
!2832 = !DILocation(line: 2437, column: 32, scope: !2826)
!2833 = !DILocation(line: 2437, column: 41, scope: !2826)
!2834 = !DILocation(line: 2437, column: 40, scope: !2826)
!2835 = !DILocation(line: 2437, column: 44, scope: !2826)
!2836 = !DILocation(line: 2437, column: 53, scope: !2826)
!2837 = !DILocation(line: 2437, column: 52, scope: !2826)
!2838 = !DILocation(line: 2437, column: 42, scope: !2826)
!2839 = !DILocation(line: 2437, column: 30, scope: !2826)
!2840 = !DILocation(line: 2437, column: 24, scope: !2826)
!2841 = !DILocation(line: 2437, column: 15, scope: !2826)
!2842 = !DILocation(line: 2439, column: 18, scope: !2843)
!2843 = distinct !DILexicalBlock(scope: !2742, file: !1, line: 2439, column: 18)
!2844 = !DILocation(line: 2439, column: 27, scope: !2843)
!2845 = !DILocation(line: 2439, column: 18, scope: !2742)
!2846 = !DILocation(line: 2441, column: 27, scope: !2847)
!2847 = distinct !DILexicalBlock(scope: !2843, file: !1, line: 2439, column: 35)
!2848 = !DILocation(line: 2441, column: 26, scope: !2847)
!2849 = !DILocation(line: 2441, column: 21, scope: !2847)
!2850 = !DILocation(line: 2442, column: 21, scope: !2847)
!2851 = !DILocation(line: 2442, column: 23, scope: !2847)
!2852 = !DILocation(line: 2442, column: 22, scope: !2847)
!2853 = !DILocation(line: 2442, column: 17, scope: !2847)
!2854 = !DILocation(line: 2442, column: 19, scope: !2847)
!2855 = !DILocation(line: 2443, column: 21, scope: !2847)
!2856 = !DILocation(line: 2443, column: 23, scope: !2847)
!2857 = !DILocation(line: 2443, column: 22, scope: !2847)
!2858 = !DILocation(line: 2443, column: 17, scope: !2847)
!2859 = !DILocation(line: 2443, column: 19, scope: !2847)
!2860 = !DILocation(line: 2445, column: 24, scope: !2847)
!2861 = !DILocation(line: 2445, column: 21, scope: !2847)
!2862 = !DILocation(line: 2446, column: 15, scope: !2847)
!2863 = !DILocation(line: 2451, column: 13, scope: !2847)
!2864 = !DILocation(line: 2452, column: 13, scope: !2742)
!2865 = !DILocation(line: 2457, column: 17, scope: !2866)
!2866 = distinct !DILexicalBlock(scope: !2718, file: !1, line: 2455, column: 11)
!2867 = !DILocation(line: 2457, column: 28, scope: !2866)
!2868 = !DILocation(line: 2457, column: 25, scope: !2866)
!2869 = !DILocation(line: 2457, column: 30, scope: !2866)
!2870 = !DILocation(line: 2457, column: 41, scope: !2866)
!2871 = !DILocation(line: 2457, column: 38, scope: !2866)
!2872 = !DILocation(line: 2457, column: 29, scope: !2866)
!2873 = !DILocation(line: 2457, column: 43, scope: !2866)
!2874 = !DILocation(line: 2457, column: 54, scope: !2866)
!2875 = !DILocation(line: 2457, column: 51, scope: !2866)
!2876 = !DILocation(line: 2457, column: 58, scope: !2866)
!2877 = !DILocation(line: 2457, column: 55, scope: !2866)
!2878 = !DILocation(line: 2457, column: 42, scope: !2866)
!2879 = !DILocation(line: 2457, column: 60, scope: !2866)
!2880 = !DILocation(line: 2457, column: 59, scope: !2866)
!2881 = !DILocation(line: 2457, column: 15, scope: !2866)
!2882 = !DILocation(line: 2457, column: 16, scope: !2866)
!2883 = !DILocation(line: 2458, column: 17, scope: !2866)
!2884 = !DILocation(line: 2458, column: 28, scope: !2866)
!2885 = !DILocation(line: 2458, column: 25, scope: !2866)
!2886 = !DILocation(line: 2458, column: 30, scope: !2866)
!2887 = !DILocation(line: 2458, column: 41, scope: !2866)
!2888 = !DILocation(line: 2458, column: 38, scope: !2866)
!2889 = !DILocation(line: 2458, column: 29, scope: !2866)
!2890 = !DILocation(line: 2459, column: 22, scope: !2866)
!2891 = !DILocation(line: 2459, column: 33, scope: !2866)
!2892 = !DILocation(line: 2459, column: 30, scope: !2866)
!2893 = !DILocation(line: 2459, column: 37, scope: !2866)
!2894 = !DILocation(line: 2459, column: 34, scope: !2866)
!2895 = !DILocation(line: 2459, column: 21, scope: !2866)
!2896 = !DILocation(line: 2459, column: 39, scope: !2866)
!2897 = !DILocation(line: 2459, column: 38, scope: !2866)
!2898 = !DILocation(line: 2458, column: 15, scope: !2866)
!2899 = !DILocation(line: 2458, column: 16, scope: !2866)
!2900 = !DILocation(line: 2461, column: 13, scope: !2866)
!2901 = !DILocation(line: 2466, column: 13, scope: !2866)
!2902 = !DILocalVariable(name: "b", scope: !2903, file: !1, line: 2472, type: !638)
!2903 = distinct !DILexicalBlock(scope: !2718, file: !1, line: 2469, column: 11)
!2904 = !DILocation(line: 2472, column: 20, scope: !2903)
!2905 = !DILocalVariable(name: "c", scope: !2903, file: !1, line: 2472, type: !638)
!2906 = !DILocation(line: 2472, column: 22, scope: !2903)
!2907 = !DILocation(line: 2473, column: 20, scope: !2903)
!2908 = !DILocation(line: 2473, column: 15, scope: !2903)
!2909 = !DILocation(line: 2473, column: 17, scope: !2903)
!2910 = !DILocation(line: 2473, column: 38, scope: !2903)
!2911 = !DILocation(line: 2473, column: 33, scope: !2903)
!2912 = !DILocation(line: 2473, column: 35, scope: !2903)
!2913 = !DILocation(line: 2474, column: 17, scope: !2903)
!2914 = !DILocation(line: 2474, column: 28, scope: !2903)
!2915 = !DILocation(line: 2474, column: 25, scope: !2903)
!2916 = !DILocation(line: 2474, column: 32, scope: !2903)
!2917 = !DILocation(line: 2474, column: 43, scope: !2903)
!2918 = !DILocation(line: 2474, column: 40, scope: !2903)
!2919 = !DILocation(line: 2474, column: 30, scope: !2903)
!2920 = !DILocation(line: 2474, column: 47, scope: !2903)
!2921 = !DILocation(line: 2474, column: 45, scope: !2903)
!2922 = !DILocation(line: 2474, column: 15, scope: !2903)
!2923 = !DILocation(line: 2475, column: 17, scope: !2903)
!2924 = !DILocation(line: 2475, column: 28, scope: !2903)
!2925 = !DILocation(line: 2475, column: 25, scope: !2903)
!2926 = !DILocation(line: 2475, column: 32, scope: !2903)
!2927 = !DILocation(line: 2475, column: 43, scope: !2903)
!2928 = !DILocation(line: 2475, column: 40, scope: !2903)
!2929 = !DILocation(line: 2475, column: 30, scope: !2903)
!2930 = !DILocation(line: 2475, column: 15, scope: !2903)
!2931 = !DILocation(line: 2477, column: 22, scope: !2903)
!2932 = !DILocation(line: 2480, column: 23, scope: !2933)
!2933 = distinct !DILexicalBlock(scope: !2903, file: !1, line: 2480, column: 18)
!2934 = !DILocation(line: 2480, column: 18, scope: !2933)
!2935 = !DILocation(line: 2480, column: 33, scope: !2933)
!2936 = !DILocation(line: 2480, column: 18, scope: !2903)
!2937 = !DILocation(line: 2481, column: 23, scope: !2933)
!2938 = !DILocation(line: 2481, column: 22, scope: !2933)
!2939 = !DILocation(line: 2481, column: 25, scope: !2933)
!2940 = !DILocation(line: 2481, column: 24, scope: !2933)
!2941 = !DILocation(line: 2481, column: 17, scope: !2933)
!2942 = !DILocation(line: 2481, column: 19, scope: !2933)
!2943 = !DILocation(line: 2481, column: 15, scope: !2933)
!2944 = !DILocation(line: 2483, column: 19, scope: !2945)
!2945 = distinct !DILexicalBlock(scope: !2933, file: !1, line: 2482, column: 18)
!2946 = !DILocation(line: 2483, column: 21, scope: !2945)
!2947 = !DILocation(line: 2483, column: 20, scope: !2945)
!2948 = !DILocation(line: 2483, column: 27, scope: !2945)
!2949 = !DILocation(line: 2483, column: 26, scope: !2945)
!2950 = !DILocation(line: 2483, column: 36, scope: !2945)
!2951 = !DILocation(line: 2483, column: 35, scope: !2945)
!2952 = !DILocation(line: 2483, column: 23, scope: !2945)
!2953 = !DILocation(line: 2483, column: 17, scope: !2945)
!2954 = !DILocation(line: 2484, column: 20, scope: !2955)
!2955 = distinct !DILexicalBlock(scope: !2945, file: !1, line: 2484, column: 20)
!2956 = !DILocation(line: 2484, column: 22, scope: !2955)
!2957 = !DILocation(line: 2484, column: 20, scope: !2945)
!2958 = !DILocation(line: 2485, column: 26, scope: !2955)
!2959 = !DILocation(line: 2485, column: 17, scope: !2955)
!2960 = !DILocation(line: 2487, column: 26, scope: !2955)
!2961 = !DILocation(line: 2487, column: 25, scope: !2955)
!2962 = !DILocation(line: 2487, column: 35, scope: !2955)
!2963 = !DILocation(line: 2487, column: 30, scope: !2955)
!2964 = !DILocation(line: 2487, column: 28, scope: !2955)
!2965 = !DILocation(line: 2487, column: 40, scope: !2955)
!2966 = !DILocation(line: 2487, column: 39, scope: !2955)
!2967 = !DILocation(line: 2487, column: 19, scope: !2955)
!2968 = !DILocation(line: 2487, column: 21, scope: !2955)
!2969 = !DILocation(line: 2489, column: 18, scope: !2970)
!2970 = distinct !DILexicalBlock(scope: !2903, file: !1, line: 2489, column: 18)
!2971 = !DILocation(line: 2489, column: 27, scope: !2970)
!2972 = !DILocation(line: 2489, column: 18, scope: !2903)
!2973 = !DILocation(line: 2490, column: 25, scope: !2970)
!2974 = !DILocation(line: 2490, column: 29, scope: !2970)
!2975 = !DILocation(line: 2490, column: 40, scope: !2970)
!2976 = !DILocation(line: 2490, column: 37, scope: !2970)
!2977 = !DILocation(line: 2490, column: 27, scope: !2970)
!2978 = !DILocation(line: 2490, column: 47, scope: !2970)
!2979 = !DILocation(line: 2490, column: 58, scope: !2970)
!2980 = !DILocation(line: 2490, column: 69, scope: !2970)
!2981 = !DILocation(line: 2490, column: 66, scope: !2970)
!2982 = !DILocation(line: 2490, column: 56, scope: !2970)
!2983 = !DILocation(line: 2490, column: 43, scope: !2970)
!2984 = !DILocation(line: 2490, column: 17, scope: !2970)
!2985 = !DILocation(line: 2490, column: 19, scope: !2970)
!2986 = !DILocation(line: 2490, column: 15, scope: !2970)
!2987 = !DILocation(line: 2497, column: 13, scope: !2903)
!2988 = !DILocalVariable(name: "k", scope: !2989, file: !1, line: 2509, type: !665)
!2989 = distinct !DILexicalBlock(scope: !2718, file: !1, line: 2506, column: 11)
!2990 = !DILocation(line: 2509, column: 15, scope: !2989)
!2991 = !DILocalVariable(name: "nterms", scope: !2989, file: !1, line: 2512, type: !665)
!2992 = !DILocation(line: 2512, column: 15, scope: !2989)
!2993 = !DILocation(line: 2512, column: 31, scope: !2989)
!2994 = !DILocation(line: 2512, column: 22, scope: !2989)
!2995 = !DILocalVariable(name: "du", scope: !2989, file: !1, line: 2515, type: !1006)
!2996 = !DILocation(line: 2515, column: 15, scope: !2989)
!2997 = !DILocalVariable(name: "dv", scope: !2989, file: !1, line: 2515, type: !1006)
!2998 = !DILocation(line: 2515, column: 18, scope: !2989)
!2999 = !DILocation(line: 2517, column: 39, scope: !2989)
!3000 = !DILocation(line: 2517, column: 40, scope: !2989)
!3001 = !DILocation(line: 2517, column: 34, scope: !2989)
!3002 = !DILocation(line: 2517, column: 35, scope: !2989)
!3003 = !DILocation(line: 2517, column: 29, scope: !2989)
!3004 = !DILocation(line: 2517, column: 30, scope: !2989)
!3005 = !DILocation(line: 2517, column: 24, scope: !2989)
!3006 = !DILocation(line: 2517, column: 25, scope: !2989)
!3007 = !DILocation(line: 2517, column: 19, scope: !2989)
!3008 = !DILocation(line: 2517, column: 20, scope: !2989)
!3009 = !DILocation(line: 2517, column: 15, scope: !2989)
!3010 = !DILocation(line: 2517, column: 16, scope: !2989)
!3011 = !DILocation(line: 2518, column: 18, scope: !3012)
!3012 = distinct !DILexicalBlock(scope: !2989, file: !1, line: 2518, column: 13)
!3013 = !DILocation(line: 2518, column: 17, scope: !3012)
!3014 = !DILocation(line: 2518, column: 22, scope: !3015)
!3015 = distinct !DILexicalBlock(scope: !3012, file: !1, line: 2518, column: 13)
!3016 = !DILocation(line: 2518, column: 26, scope: !3015)
!3017 = !DILocation(line: 2518, column: 24, scope: !3015)
!3018 = !DILocation(line: 2518, column: 13, scope: !3012)
!3019 = !DILocation(line: 2519, column: 37, scope: !3020)
!3020 = distinct !DILexicalBlock(scope: !3015, file: !1, line: 2518, column: 39)
!3021 = !DILocation(line: 2519, column: 41, scope: !3020)
!3022 = !DILocation(line: 2519, column: 45, scope: !3020)
!3023 = !DILocation(line: 2519, column: 23, scope: !3020)
!3024 = !DILocation(line: 2519, column: 48, scope: !3020)
!3025 = !DILocation(line: 2519, column: 56, scope: !3020)
!3026 = !DILocation(line: 2519, column: 55, scope: !3020)
!3027 = !DILocation(line: 2519, column: 47, scope: !3020)
!3028 = !DILocation(line: 2519, column: 17, scope: !3020)
!3029 = !DILocation(line: 2519, column: 20, scope: !3020)
!3030 = !DILocation(line: 2520, column: 37, scope: !3020)
!3031 = !DILocation(line: 2520, column: 41, scope: !3020)
!3032 = !DILocation(line: 2520, column: 45, scope: !3020)
!3033 = !DILocation(line: 2520, column: 23, scope: !3020)
!3034 = !DILocation(line: 2520, column: 48, scope: !3020)
!3035 = !DILocation(line: 2520, column: 56, scope: !3020)
!3036 = !DILocation(line: 2520, column: 55, scope: !3020)
!3037 = !DILocation(line: 2520, column: 47, scope: !3020)
!3038 = !DILocation(line: 2520, column: 18, scope: !3020)
!3039 = !DILocation(line: 2520, column: 20, scope: !3020)
!3040 = !DILocation(line: 2521, column: 37, scope: !3020)
!3041 = !DILocation(line: 2521, column: 41, scope: !3020)
!3042 = !DILocation(line: 2521, column: 45, scope: !3020)
!3043 = !DILocation(line: 2521, column: 23, scope: !3020)
!3044 = !DILocation(line: 2521, column: 48, scope: !3020)
!3045 = !DILocation(line: 2521, column: 56, scope: !3020)
!3046 = !DILocation(line: 2521, column: 55, scope: !3020)
!3047 = !DILocation(line: 2521, column: 47, scope: !3020)
!3048 = !DILocation(line: 2521, column: 18, scope: !3020)
!3049 = !DILocation(line: 2521, column: 20, scope: !3020)
!3050 = !DILocation(line: 2522, column: 37, scope: !3020)
!3051 = !DILocation(line: 2522, column: 41, scope: !3020)
!3052 = !DILocation(line: 2522, column: 45, scope: !3020)
!3053 = !DILocation(line: 2522, column: 23, scope: !3020)
!3054 = !DILocation(line: 2522, column: 48, scope: !3020)
!3055 = !DILocation(line: 2522, column: 56, scope: !3020)
!3056 = !DILocation(line: 2522, column: 55, scope: !3020)
!3057 = !DILocation(line: 2522, column: 58, scope: !3020)
!3058 = !DILocation(line: 2522, column: 57, scope: !3020)
!3059 = !DILocation(line: 2522, column: 47, scope: !3020)
!3060 = !DILocation(line: 2522, column: 17, scope: !3020)
!3061 = !DILocation(line: 2522, column: 20, scope: !3020)
!3062 = !DILocation(line: 2523, column: 37, scope: !3020)
!3063 = !DILocation(line: 2523, column: 41, scope: !3020)
!3064 = !DILocation(line: 2523, column: 45, scope: !3020)
!3065 = !DILocation(line: 2523, column: 23, scope: !3020)
!3066 = !DILocation(line: 2523, column: 48, scope: !3020)
!3067 = !DILocation(line: 2523, column: 56, scope: !3020)
!3068 = !DILocation(line: 2523, column: 55, scope: !3020)
!3069 = !DILocation(line: 2523, column: 58, scope: !3020)
!3070 = !DILocation(line: 2523, column: 57, scope: !3020)
!3071 = !DILocation(line: 2523, column: 47, scope: !3020)
!3072 = !DILocation(line: 2523, column: 18, scope: !3020)
!3073 = !DILocation(line: 2523, column: 20, scope: !3020)
!3074 = !DILocation(line: 2524, column: 37, scope: !3020)
!3075 = !DILocation(line: 2524, column: 41, scope: !3020)
!3076 = !DILocation(line: 2524, column: 45, scope: !3020)
!3077 = !DILocation(line: 2524, column: 23, scope: !3020)
!3078 = !DILocation(line: 2524, column: 48, scope: !3020)
!3079 = !DILocation(line: 2524, column: 56, scope: !3020)
!3080 = !DILocation(line: 2524, column: 55, scope: !3020)
!3081 = !DILocation(line: 2524, column: 58, scope: !3020)
!3082 = !DILocation(line: 2524, column: 57, scope: !3020)
!3083 = !DILocation(line: 2524, column: 47, scope: !3020)
!3084 = !DILocation(line: 2524, column: 18, scope: !3020)
!3085 = !DILocation(line: 2524, column: 20, scope: !3020)
!3086 = !DILocation(line: 2525, column: 13, scope: !3020)
!3087 = !DILocation(line: 2518, column: 35, scope: !3015)
!3088 = !DILocation(line: 2518, column: 13, scope: !3015)
!3089 = distinct !{!3089, !3018, !3090}
!3090 = !DILocation(line: 2525, column: 13, scope: !3012)
!3091 = !DILocation(line: 2526, column: 13, scope: !2989)
!3092 = !DILocation(line: 2527, column: 13, scope: !2989)
!3093 = !DILocation(line: 2532, column: 39, scope: !3094)
!3094 = distinct !DILexicalBlock(scope: !2718, file: !1, line: 2530, column: 11)
!3095 = !DILocation(line: 2532, column: 43, scope: !3094)
!3096 = !DILocation(line: 2532, column: 31, scope: !3094)
!3097 = !DILocation(line: 2532, column: 48, scope: !3094)
!3098 = !DILocation(line: 2532, column: 46, scope: !3094)
!3099 = !DILocation(line: 2532, column: 57, scope: !3094)
!3100 = !DILocation(line: 2532, column: 15, scope: !3094)
!3101 = !DILocation(line: 2532, column: 18, scope: !3094)
!3102 = !DILocation(line: 2533, column: 34, scope: !3094)
!3103 = !DILocation(line: 2533, column: 20, scope: !3094)
!3104 = !DILocation(line: 2533, column: 15, scope: !3094)
!3105 = !DILocation(line: 2533, column: 17, scope: !3094)
!3106 = !DILocation(line: 2534, column: 28, scope: !3094)
!3107 = !DILocation(line: 2534, column: 32, scope: !3094)
!3108 = !DILocation(line: 2534, column: 20, scope: !3094)
!3109 = !DILocation(line: 2534, column: 15, scope: !3094)
!3110 = !DILocation(line: 2534, column: 18, scope: !3094)
!3111 = !DILocation(line: 2541, column: 20, scope: !3112)
!3112 = distinct !DILexicalBlock(scope: !3094, file: !1, line: 2541, column: 18)
!3113 = !DILocation(line: 2541, column: 22, scope: !3112)
!3114 = !DILocation(line: 2541, column: 18, scope: !3094)
!3115 = !DILocation(line: 2542, column: 15, scope: !3112)
!3116 = !DILocation(line: 2545, column: 15, scope: !3112)
!3117 = !DILocation(line: 2549, column: 21, scope: !3094)
!3118 = !DILocation(line: 2549, column: 23, scope: !3094)
!3119 = !DILocation(line: 2549, column: 22, scope: !3094)
!3120 = !DILocation(line: 2549, column: 34, scope: !3094)
!3121 = !DILocation(line: 2549, column: 32, scope: !3094)
!3122 = !DILocation(line: 2549, column: 45, scope: !3094)
!3123 = !DILocation(line: 2549, column: 52, scope: !3094)
!3124 = !DILocation(line: 2549, column: 57, scope: !3094)
!3125 = !DILocation(line: 2549, column: 43, scope: !3094)
!3126 = !DILocation(line: 2549, column: 59, scope: !3094)
!3127 = !DILocation(line: 2549, column: 15, scope: !3094)
!3128 = !DILocation(line: 2549, column: 17, scope: !3094)
!3129 = !DILocation(line: 2550, column: 20, scope: !3094)
!3130 = !DILocation(line: 2550, column: 33, scope: !3094)
!3131 = !DILocation(line: 2550, column: 29, scope: !3094)
!3132 = !DILocation(line: 2550, column: 38, scope: !3094)
!3133 = !DILocation(line: 2550, column: 36, scope: !3094)
!3134 = !DILocation(line: 2550, column: 49, scope: !3094)
!3135 = !DILocation(line: 2550, column: 56, scope: !3094)
!3136 = !DILocation(line: 2550, column: 61, scope: !3094)
!3137 = !DILocation(line: 2550, column: 47, scope: !3094)
!3138 = !DILocation(line: 2550, column: 15, scope: !3094)
!3139 = !DILocation(line: 2550, column: 17, scope: !3094)
!3140 = !DILocation(line: 2551, column: 13, scope: !3094)
!3141 = !DILocation(line: 2555, column: 20, scope: !3142)
!3142 = distinct !DILexicalBlock(scope: !2718, file: !1, line: 2554, column: 11)
!3143 = !DILocation(line: 2555, column: 15, scope: !3142)
!3144 = !DILocation(line: 2555, column: 17, scope: !3142)
!3145 = !DILocation(line: 2556, column: 20, scope: !3142)
!3146 = !DILocation(line: 2556, column: 15, scope: !3142)
!3147 = !DILocation(line: 2556, column: 17, scope: !3142)
!3148 = !DILocation(line: 2557, column: 28, scope: !3142)
!3149 = !DILocation(line: 2557, column: 32, scope: !3142)
!3150 = !DILocation(line: 2557, column: 20, scope: !3142)
!3151 = !DILocation(line: 2557, column: 38, scope: !3142)
!3152 = !DILocation(line: 2557, column: 47, scope: !3142)
!3153 = !DILocation(line: 2557, column: 46, scope: !3142)
!3154 = !DILocation(line: 2557, column: 56, scope: !3142)
!3155 = !DILocation(line: 2557, column: 35, scope: !3142)
!3156 = !DILocation(line: 2557, column: 15, scope: !3142)
!3157 = !DILocation(line: 2557, column: 18, scope: !3142)
!3158 = !DILocation(line: 2558, column: 15, scope: !3142)
!3159 = !DILocation(line: 2558, column: 17, scope: !3142)
!3160 = !DILocation(line: 2559, column: 34, scope: !3142)
!3161 = !DILocation(line: 2559, column: 20, scope: !3142)
!3162 = !DILocation(line: 2559, column: 15, scope: !3142)
!3163 = !DILocation(line: 2559, column: 17, scope: !3142)
!3164 = !DILocation(line: 2560, column: 15, scope: !3142)
!3165 = !DILocation(line: 2560, column: 17, scope: !3142)
!3166 = !DILocation(line: 2561, column: 28, scope: !3142)
!3167 = !DILocation(line: 2561, column: 32, scope: !3142)
!3168 = !DILocation(line: 2561, column: 20, scope: !3142)
!3169 = !DILocation(line: 2561, column: 15, scope: !3142)
!3170 = !DILocation(line: 2561, column: 18, scope: !3142)
!3171 = !DILocation(line: 2566, column: 20, scope: !3172)
!3172 = distinct !DILexicalBlock(scope: !3142, file: !1, line: 2566, column: 18)
!3173 = !DILocation(line: 2566, column: 22, scope: !3172)
!3174 = !DILocation(line: 2566, column: 18, scope: !3142)
!3175 = !DILocation(line: 2567, column: 15, scope: !3172)
!3176 = !DILocation(line: 2570, column: 15, scope: !3172)
!3177 = !DILocation(line: 2574, column: 21, scope: !3142)
!3178 = !DILocation(line: 2574, column: 23, scope: !3142)
!3179 = !DILocation(line: 2574, column: 22, scope: !3142)
!3180 = !DILocation(line: 2574, column: 42, scope: !3142)
!3181 = !DILocation(line: 2574, column: 49, scope: !3142)
!3182 = !DILocation(line: 2574, column: 34, scope: !3142)
!3183 = !DILocation(line: 2574, column: 56, scope: !3142)
!3184 = !DILocation(line: 2574, column: 32, scope: !3142)
!3185 = !DILocation(line: 2574, column: 63, scope: !3142)
!3186 = !DILocation(line: 2574, column: 70, scope: !3142)
!3187 = !DILocation(line: 2574, column: 75, scope: !3142)
!3188 = !DILocation(line: 2574, column: 61, scope: !3142)
!3189 = !DILocation(line: 2574, column: 15, scope: !3142)
!3190 = !DILocation(line: 2574, column: 17, scope: !3142)
!3191 = !DILocation(line: 2575, column: 22, scope: !3142)
!3192 = !DILocation(line: 2575, column: 24, scope: !3142)
!3193 = !DILocation(line: 2575, column: 23, scope: !3142)
!3194 = !DILocation(line: 2575, column: 34, scope: !3142)
!3195 = !DILocation(line: 2575, column: 33, scope: !3142)
!3196 = !DILocation(line: 2575, column: 45, scope: !3142)
!3197 = !DILocation(line: 2575, column: 52, scope: !3142)
!3198 = !DILocation(line: 2575, column: 57, scope: !3142)
!3199 = !DILocation(line: 2575, column: 43, scope: !3142)
!3200 = !DILocation(line: 2575, column: 15, scope: !3142)
!3201 = !DILocation(line: 2575, column: 17, scope: !3142)
!3202 = !DILocation(line: 2576, column: 13, scope: !3142)
!3203 = !DILocation(line: 2581, column: 28, scope: !3204)
!3204 = distinct !DILexicalBlock(scope: !2718, file: !1, line: 2579, column: 11)
!3205 = !DILocation(line: 2581, column: 20, scope: !3204)
!3206 = !DILocation(line: 2581, column: 29, scope: !3204)
!3207 = !DILocation(line: 2581, column: 35, scope: !3204)
!3208 = !DILocation(line: 2581, column: 34, scope: !3204)
!3209 = !DILocation(line: 2581, column: 50, scope: !3204)
!3210 = !DILocation(line: 2581, column: 49, scope: !3204)
!3211 = !DILocation(line: 2581, column: 59, scope: !3204)
!3212 = !DILocation(line: 2581, column: 58, scope: !3204)
!3213 = !DILocation(line: 2581, column: 15, scope: !3204)
!3214 = !DILocation(line: 2581, column: 17, scope: !3204)
!3215 = !DILocation(line: 2582, column: 28, scope: !3204)
!3216 = !DILocation(line: 2582, column: 20, scope: !3204)
!3217 = !DILocation(line: 2582, column: 29, scope: !3204)
!3218 = !DILocation(line: 2582, column: 35, scope: !3204)
!3219 = !DILocation(line: 2582, column: 34, scope: !3204)
!3220 = !DILocation(line: 2582, column: 50, scope: !3204)
!3221 = !DILocation(line: 2582, column: 49, scope: !3204)
!3222 = !DILocation(line: 2582, column: 59, scope: !3204)
!3223 = !DILocation(line: 2582, column: 58, scope: !3204)
!3224 = !DILocation(line: 2582, column: 15, scope: !3204)
!3225 = !DILocation(line: 2582, column: 17, scope: !3204)
!3226 = !DILocation(line: 2583, column: 21, scope: !3204)
!3227 = !DILocation(line: 2583, column: 29, scope: !3204)
!3228 = !DILocation(line: 2583, column: 23, scope: !3204)
!3229 = !DILocation(line: 2583, column: 22, scope: !3204)
!3230 = !DILocation(line: 2583, column: 34, scope: !3204)
!3231 = !DILocation(line: 2583, column: 32, scope: !3204)
!3232 = !DILocation(line: 2583, column: 15, scope: !3204)
!3233 = !DILocation(line: 2583, column: 17, scope: !3204)
!3234 = !DILocation(line: 2584, column: 21, scope: !3204)
!3235 = !DILocation(line: 2584, column: 29, scope: !3204)
!3236 = !DILocation(line: 2584, column: 23, scope: !3204)
!3237 = !DILocation(line: 2584, column: 22, scope: !3204)
!3238 = !DILocation(line: 2584, column: 34, scope: !3204)
!3239 = !DILocation(line: 2584, column: 32, scope: !3204)
!3240 = !DILocation(line: 2584, column: 15, scope: !3204)
!3241 = !DILocation(line: 2584, column: 17, scope: !3204)
!3242 = !DILocation(line: 2586, column: 13, scope: !3204)
!3243 = !DILocalVariable(name: "ax", scope: !3244, file: !1, line: 2590, type: !638)
!3244 = distinct !DILexicalBlock(scope: !2718, file: !1, line: 2589, column: 11)
!3245 = !DILocation(line: 2590, column: 20, scope: !3244)
!3246 = !DILocalVariable(name: "cx", scope: !3244, file: !1, line: 2590, type: !638)
!3247 = !DILocation(line: 2590, column: 24, scope: !3244)
!3248 = !DILocation(line: 2592, column: 20, scope: !3244)
!3249 = !DILocation(line: 2592, column: 15, scope: !3244)
!3250 = !DILocation(line: 2592, column: 17, scope: !3244)
!3251 = !DILocation(line: 2592, column: 37, scope: !3244)
!3252 = !DILocation(line: 2592, column: 32, scope: !3244)
!3253 = !DILocation(line: 2592, column: 34, scope: !3244)
!3254 = !DILocation(line: 2593, column: 20, scope: !3244)
!3255 = !DILocation(line: 2593, column: 15, scope: !3244)
!3256 = !DILocation(line: 2593, column: 17, scope: !3244)
!3257 = !DILocation(line: 2594, column: 23, scope: !3244)
!3258 = !DILocation(line: 2594, column: 16, scope: !3244)
!3259 = !DILocation(line: 2594, column: 15, scope: !3244)
!3260 = !DILocation(line: 2595, column: 20, scope: !3244)
!3261 = !DILocation(line: 2595, column: 16, scope: !3244)
!3262 = !DILocation(line: 2595, column: 15, scope: !3244)
!3263 = !DILocation(line: 2596, column: 19, scope: !3244)
!3264 = !DILocation(line: 2596, column: 28, scope: !3244)
!3265 = !DILocation(line: 2596, column: 27, scope: !3244)
!3266 = !DILocation(line: 2596, column: 15, scope: !3244)
!3267 = !DILocation(line: 2596, column: 17, scope: !3244)
!3268 = !DILocation(line: 2597, column: 21, scope: !3244)
!3269 = !DILocation(line: 2597, column: 23, scope: !3244)
!3270 = !DILocation(line: 2597, column: 22, scope: !3244)
!3271 = !DILocation(line: 2597, column: 15, scope: !3244)
!3272 = !DILocation(line: 2597, column: 17, scope: !3244)
!3273 = !DILocation(line: 2599, column: 13, scope: !3244)
!3274 = !DILocation(line: 2610, column: 20, scope: !3244)
!3275 = !DILocation(line: 2610, column: 15, scope: !3244)
!3276 = !DILocation(line: 2610, column: 17, scope: !3244)
!3277 = !DILocation(line: 2610, column: 37, scope: !3244)
!3278 = !DILocation(line: 2610, column: 32, scope: !3244)
!3279 = !DILocation(line: 2610, column: 34, scope: !3244)
!3280 = !DILocation(line: 2611, column: 13, scope: !3244)
!3281 = !DILocation(line: 2616, column: 20, scope: !3282)
!3282 = distinct !DILexicalBlock(scope: !2718, file: !1, line: 2614, column: 11)
!3283 = !DILocation(line: 2616, column: 15, scope: !3282)
!3284 = !DILocation(line: 2616, column: 17, scope: !3282)
!3285 = !DILocation(line: 2616, column: 37, scope: !3282)
!3286 = !DILocation(line: 2616, column: 32, scope: !3282)
!3287 = !DILocation(line: 2616, column: 34, scope: !3282)
!3288 = !DILocation(line: 2620, column: 35, scope: !3282)
!3289 = !DILocation(line: 2620, column: 43, scope: !3282)
!3290 = !DILocation(line: 2620, column: 63, scope: !3282)
!3291 = !DILocation(line: 2620, column: 56, scope: !3282)
!3292 = !DILocation(line: 2620, column: 54, scope: !3282)
!3293 = !DILocation(line: 2620, column: 67, scope: !3282)
!3294 = !DILocation(line: 2620, column: 66, scope: !3282)
!3295 = !DILocation(line: 2620, column: 82, scope: !3282)
!3296 = !DILocation(line: 2620, column: 22, scope: !3282)
!3297 = !DILocation(line: 2622, column: 18, scope: !3298)
!3298 = distinct !DILexicalBlock(scope: !3282, file: !1, line: 2622, column: 18)
!3299 = !DILocation(line: 2622, column: 27, scope: !3298)
!3300 = !DILocation(line: 2622, column: 18, scope: !3282)
!3301 = !DILocalVariable(name: "cx", scope: !3302, file: !1, line: 2623, type: !638)
!3302 = distinct !DILexicalBlock(scope: !3298, file: !1, line: 2622, column: 35)
!3303 = !DILocation(line: 2623, column: 22, scope: !3302)
!3304 = !DILocalVariable(name: "tx", scope: !3302, file: !1, line: 2623, type: !638)
!3305 = !DILocation(line: 2623, column: 25, scope: !3302)
!3306 = !DILocation(line: 2624, column: 22, scope: !3302)
!3307 = !DILocation(line: 2624, column: 17, scope: !3302)
!3308 = !DILocation(line: 2624, column: 19, scope: !3302)
!3309 = !DILocation(line: 2625, column: 28, scope: !3302)
!3310 = !DILocation(line: 2625, column: 22, scope: !3302)
!3311 = !DILocation(line: 2625, column: 21, scope: !3302)
!3312 = !DILocation(line: 2625, column: 18, scope: !3302)
!3313 = !DILocation(line: 2626, column: 26, scope: !3302)
!3314 = !DILocation(line: 2626, column: 20, scope: !3302)
!3315 = !DILocation(line: 2626, column: 18, scope: !3302)
!3316 = !DILocation(line: 2627, column: 21, scope: !3302)
!3317 = !DILocation(line: 2627, column: 30, scope: !3302)
!3318 = !DILocation(line: 2627, column: 29, scope: !3302)
!3319 = !DILocation(line: 2627, column: 17, scope: !3302)
!3320 = !DILocation(line: 2627, column: 19, scope: !3302)
!3321 = !DILocation(line: 2628, column: 23, scope: !3302)
!3322 = !DILocation(line: 2628, column: 25, scope: !3302)
!3323 = !DILocation(line: 2628, column: 24, scope: !3302)
!3324 = !DILocation(line: 2628, column: 17, scope: !3302)
!3325 = !DILocation(line: 2628, column: 19, scope: !3302)
!3326 = !DILocation(line: 2630, column: 15, scope: !3302)
!3327 = !DILocation(line: 2634, column: 8, scope: !3328)
!3328 = distinct !DILexicalBlock(scope: !3302, file: !1, line: 2634, column: 6)
!3329 = !DILocation(line: 2634, column: 10, scope: !3328)
!3330 = !DILocation(line: 2634, column: 17, scope: !3328)
!3331 = !DILocation(line: 2634, column: 22, scope: !3328)
!3332 = !DILocation(line: 2634, column: 24, scope: !3328)
!3333 = !DILocation(line: 2634, column: 6, scope: !3302)
!3334 = !DILocation(line: 2635, column: 11, scope: !3335)
!3335 = distinct !DILexicalBlock(scope: !3328, file: !1, line: 2634, column: 33)
!3336 = !DILocation(line: 2635, column: 53, scope: !3335)
!3337 = !DILocation(line: 2635, column: 55, scope: !3335)
!3338 = !DILocation(line: 2635, column: 54, scope: !3335)
!3339 = !DILocation(line: 2635, column: 67, scope: !3335)
!3340 = !DILocation(line: 2635, column: 72, scope: !3335)
!3341 = !DILocation(line: 2635, column: 77, scope: !3335)
!3342 = !DILocation(line: 2635, column: 3, scope: !3335)
!3343 = !DILocation(line: 2636, column: 11, scope: !3335)
!3344 = !DILocation(line: 2637, column: 7, scope: !3335)
!3345 = !DILocation(line: 2637, column: 29, scope: !3335)
!3346 = !DILocation(line: 2637, column: 31, scope: !3335)
!3347 = !DILocation(line: 2637, column: 38, scope: !3335)
!3348 = !DILocation(line: 2637, column: 50, scope: !3335)
!3349 = !DILocation(line: 2636, column: 3, scope: !3335)
!3350 = !DILocation(line: 2638, column: 11, scope: !3335)
!3351 = !DILocation(line: 2639, column: 7, scope: !3335)
!3352 = !DILocation(line: 2639, column: 10, scope: !3335)
!3353 = !DILocation(line: 2639, column: 9, scope: !3335)
!3354 = !DILocation(line: 2639, column: 21, scope: !3335)
!3355 = !DILocation(line: 2639, column: 23, scope: !3335)
!3356 = !DILocation(line: 2639, column: 22, scope: !3335)
!3357 = !DILocation(line: 2639, column: 26, scope: !3335)
!3358 = !DILocation(line: 2639, column: 25, scope: !3335)
!3359 = !DILocation(line: 2639, column: 36, scope: !3335)
!3360 = !DILocation(line: 2638, column: 3, scope: !3335)
!3361 = !DILocation(line: 2640, column: 10, scope: !3335)
!3362 = !DILocation(line: 2640, column: 3, scope: !3335)
!3363 = !DILocation(line: 2640, column: 19, scope: !3335)
!3364 = !DILocation(line: 2642, column: 13, scope: !3302)
!3365 = !DILocation(line: 2644, column: 20, scope: !3282)
!3366 = !DILocation(line: 2644, column: 15, scope: !3282)
!3367 = !DILocation(line: 2644, column: 17, scope: !3282)
!3368 = !DILocation(line: 2644, column: 37, scope: !3282)
!3369 = !DILocation(line: 2644, column: 32, scope: !3282)
!3370 = !DILocation(line: 2644, column: 34, scope: !3282)
!3371 = !DILocation(line: 2645, column: 13, scope: !3282)
!3372 = !DILocalVariable(name: "r", scope: !3373, file: !1, line: 2650, type: !638)
!3373 = distinct !DILexicalBlock(scope: !2718, file: !1, line: 2649, column: 11)
!3374 = !DILocation(line: 2650, column: 20, scope: !3373)
!3375 = !DILocalVariable(name: "fx", scope: !3373, file: !1, line: 2650, type: !638)
!3376 = !DILocation(line: 2650, column: 22, scope: !3373)
!3377 = !DILocalVariable(name: "fy", scope: !3373, file: !1, line: 2650, type: !638)
!3378 = !DILocation(line: 2650, column: 25, scope: !3373)
!3379 = !DILocalVariable(name: "gx", scope: !3373, file: !1, line: 2650, type: !638)
!3380 = !DILocation(line: 2650, column: 28, scope: !3373)
!3381 = !DILocalVariable(name: "gy", scope: !3373, file: !1, line: 2650, type: !638)
!3382 = !DILocation(line: 2650, column: 31, scope: !3373)
!3383 = !DILocation(line: 2652, column: 20, scope: !3373)
!3384 = !DILocation(line: 2652, column: 15, scope: !3373)
!3385 = !DILocation(line: 2652, column: 17, scope: !3373)
!3386 = !DILocation(line: 2653, column: 20, scope: !3373)
!3387 = !DILocation(line: 2653, column: 15, scope: !3373)
!3388 = !DILocation(line: 2653, column: 17, scope: !3373)
!3389 = !DILocation(line: 2654, column: 24, scope: !3373)
!3390 = !DILocation(line: 2654, column: 28, scope: !3373)
!3391 = !DILocation(line: 2654, column: 25, scope: !3373)
!3392 = !DILocation(line: 2654, column: 32, scope: !3373)
!3393 = !DILocation(line: 2654, column: 36, scope: !3373)
!3394 = !DILocation(line: 2654, column: 33, scope: !3373)
!3395 = !DILocation(line: 2654, column: 29, scope: !3373)
!3396 = !DILocation(line: 2654, column: 17, scope: !3373)
!3397 = !DILocation(line: 2654, column: 15, scope: !3373)
!3398 = !DILocation(line: 2655, column: 18, scope: !3399)
!3399 = distinct !DILexicalBlock(scope: !3373, file: !1, line: 2655, column: 18)
!3400 = !DILocation(line: 2655, column: 20, scope: !3399)
!3401 = !DILocation(line: 2655, column: 18, scope: !3373)
!3402 = !DILocation(line: 2656, column: 22, scope: !3403)
!3403 = distinct !DILexicalBlock(scope: !3399, file: !1, line: 2655, column: 38)
!3404 = !DILocation(line: 2656, column: 31, scope: !3403)
!3405 = !DILocation(line: 2656, column: 30, scope: !3403)
!3406 = !DILocation(line: 2656, column: 35, scope: !3403)
!3407 = !DILocation(line: 2656, column: 33, scope: !3403)
!3408 = !DILocation(line: 2656, column: 45, scope: !3403)
!3409 = !DILocation(line: 2656, column: 44, scope: !3403)
!3410 = !DILocation(line: 2656, column: 49, scope: !3403)
!3411 = !DILocation(line: 2656, column: 47, scope: !3403)
!3412 = !DILocation(line: 2656, column: 59, scope: !3403)
!3413 = !DILocation(line: 2656, column: 58, scope: !3403)
!3414 = !DILocation(line: 2656, column: 63, scope: !3403)
!3415 = !DILocation(line: 2656, column: 61, scope: !3403)
!3416 = !DILocation(line: 2656, column: 18, scope: !3403)
!3417 = !DILocation(line: 2657, column: 22, scope: !3403)
!3418 = !DILocation(line: 2657, column: 31, scope: !3403)
!3419 = !DILocation(line: 2657, column: 30, scope: !3403)
!3420 = !DILocation(line: 2657, column: 35, scope: !3403)
!3421 = !DILocation(line: 2657, column: 33, scope: !3403)
!3422 = !DILocation(line: 2657, column: 45, scope: !3403)
!3423 = !DILocation(line: 2657, column: 44, scope: !3403)
!3424 = !DILocation(line: 2657, column: 49, scope: !3403)
!3425 = !DILocation(line: 2657, column: 47, scope: !3403)
!3426 = !DILocation(line: 2657, column: 59, scope: !3403)
!3427 = !DILocation(line: 2657, column: 58, scope: !3403)
!3428 = !DILocation(line: 2657, column: 63, scope: !3403)
!3429 = !DILocation(line: 2657, column: 61, scope: !3403)
!3430 = !DILocation(line: 2657, column: 18, scope: !3403)
!3431 = !DILocation(line: 2658, column: 24, scope: !3403)
!3432 = !DILocation(line: 2658, column: 23, scope: !3403)
!3433 = !DILocation(line: 2658, column: 33, scope: !3403)
!3434 = !DILocation(line: 2658, column: 32, scope: !3403)
!3435 = !DILocation(line: 2658, column: 39, scope: !3403)
!3436 = !DILocation(line: 2658, column: 38, scope: !3403)
!3437 = !DILocation(line: 2658, column: 35, scope: !3403)
!3438 = !DILocation(line: 2658, column: 49, scope: !3403)
!3439 = !DILocation(line: 2658, column: 48, scope: !3403)
!3440 = !DILocation(line: 2658, column: 53, scope: !3403)
!3441 = !DILocation(line: 2658, column: 51, scope: !3403)
!3442 = !DILocation(line: 2658, column: 63, scope: !3403)
!3443 = !DILocation(line: 2658, column: 62, scope: !3403)
!3444 = !DILocation(line: 2658, column: 18, scope: !3403)
!3445 = !DILocation(line: 2659, column: 24, scope: !3403)
!3446 = !DILocation(line: 2659, column: 23, scope: !3403)
!3447 = !DILocation(line: 2659, column: 33, scope: !3403)
!3448 = !DILocation(line: 2659, column: 32, scope: !3403)
!3449 = !DILocation(line: 2659, column: 39, scope: !3403)
!3450 = !DILocation(line: 2659, column: 38, scope: !3403)
!3451 = !DILocation(line: 2659, column: 35, scope: !3403)
!3452 = !DILocation(line: 2659, column: 49, scope: !3403)
!3453 = !DILocation(line: 2659, column: 48, scope: !3403)
!3454 = !DILocation(line: 2659, column: 53, scope: !3403)
!3455 = !DILocation(line: 2659, column: 51, scope: !3403)
!3456 = !DILocation(line: 2659, column: 63, scope: !3403)
!3457 = !DILocation(line: 2659, column: 62, scope: !3403)
!3458 = !DILocation(line: 2659, column: 18, scope: !3403)
!3459 = !DILocation(line: 2661, column: 20, scope: !3460)
!3460 = distinct !DILexicalBlock(scope: !3403, file: !1, line: 2661, column: 20)
!3461 = !DILocation(line: 2661, column: 27, scope: !3460)
!3462 = !DILocation(line: 2661, column: 20, scope: !3403)
!3463 = !DILocation(line: 2662, column: 24, scope: !3464)
!3464 = distinct !DILexicalBlock(scope: !3460, file: !1, line: 2661, column: 56)
!3465 = !DILocation(line: 2662, column: 23, scope: !3464)
!3466 = !DILocation(line: 2662, column: 20, scope: !3464)
!3467 = !DILocation(line: 2662, column: 36, scope: !3464)
!3468 = !DILocation(line: 2662, column: 35, scope: !3464)
!3469 = !DILocation(line: 2662, column: 32, scope: !3464)
!3470 = !DILocation(line: 2663, column: 24, scope: !3464)
!3471 = !DILocation(line: 2663, column: 23, scope: !3464)
!3472 = !DILocation(line: 2663, column: 27, scope: !3464)
!3473 = !DILocation(line: 2663, column: 26, scope: !3464)
!3474 = !DILocation(line: 2663, column: 20, scope: !3464)
!3475 = !DILocation(line: 2663, column: 39, scope: !3464)
!3476 = !DILocation(line: 2663, column: 38, scope: !3464)
!3477 = !DILocation(line: 2663, column: 42, scope: !3464)
!3478 = !DILocation(line: 2663, column: 41, scope: !3464)
!3479 = !DILocation(line: 2663, column: 35, scope: !3464)
!3480 = !DILocation(line: 2664, column: 15, scope: !3464)
!3481 = !DILocation(line: 2666, column: 23, scope: !3403)
!3482 = !DILocation(line: 2666, column: 25, scope: !3403)
!3483 = !DILocation(line: 2666, column: 24, scope: !3403)
!3484 = !DILocation(line: 2666, column: 30, scope: !3403)
!3485 = !DILocation(line: 2666, column: 28, scope: !3403)
!3486 = !DILocation(line: 2666, column: 17, scope: !3403)
!3487 = !DILocation(line: 2666, column: 19, scope: !3403)
!3488 = !DILocation(line: 2667, column: 23, scope: !3403)
!3489 = !DILocation(line: 2667, column: 25, scope: !3403)
!3490 = !DILocation(line: 2667, column: 24, scope: !3403)
!3491 = !DILocation(line: 2667, column: 30, scope: !3403)
!3492 = !DILocation(line: 2667, column: 28, scope: !3403)
!3493 = !DILocation(line: 2667, column: 17, scope: !3403)
!3494 = !DILocation(line: 2667, column: 19, scope: !3403)
!3495 = !DILocation(line: 2668, column: 15, scope: !3403)
!3496 = !DILocation(line: 2671, column: 13, scope: !3403)
!3497 = !DILocation(line: 2679, column: 20, scope: !3498)
!3498 = distinct !DILexicalBlock(scope: !3499, file: !1, line: 2679, column: 20)
!3499 = distinct !DILexicalBlock(scope: !3399, file: !1, line: 2672, column: 18)
!3500 = !DILocation(line: 2679, column: 27, scope: !3498)
!3501 = !DILocation(line: 2679, column: 20, scope: !3499)
!3502 = !DILocation(line: 2680, column: 17, scope: !3498)
!3503 = !DILocation(line: 2684, column: 17, scope: !3498)
!3504 = !DILocation(line: 2687, column: 13, scope: !3373)
!3505 = !DILocalVariable(name: "i", scope: !3506, file: !1, line: 2700, type: !612)
!3506 = distinct !DILexicalBlock(scope: !2718, file: !1, line: 2690, column: 11)
!3507 = !DILocation(line: 2700, column: 15, scope: !3506)
!3508 = !DILocalVariable(name: "denominator", scope: !3506, file: !1, line: 2702, type: !638)
!3509 = !DILocation(line: 2702, column: 15, scope: !3506)
!3510 = !DILocation(line: 2704, column: 35, scope: !3506)
!3511 = !DILocation(line: 2704, column: 37, scope: !3506)
!3512 = !DILocation(line: 2704, column: 29, scope: !3506)
!3513 = !DILocation(line: 2704, column: 31, scope: !3506)
!3514 = !DILocation(line: 2704, column: 25, scope: !3506)
!3515 = !DILocation(line: 2705, column: 18, scope: !3516)
!3516 = distinct !DILexicalBlock(scope: !3506, file: !1, line: 2705, column: 13)
!3517 = !DILocation(line: 2705, column: 17, scope: !3516)
!3518 = !DILocation(line: 2705, column: 22, scope: !3519)
!3519 = distinct !DILexicalBlock(scope: !3516, file: !1, line: 2705, column: 13)
!3520 = !DILocation(line: 2705, column: 24, scope: !3519)
!3521 = !DILocation(line: 2705, column: 23, scope: !3519)
!3522 = !DILocation(line: 2705, column: 13, scope: !3516)
!3523 = !DILocalVariable(name: "weight", scope: !3524, file: !1, line: 2706, type: !638)
!3524 = distinct !DILexicalBlock(scope: !3519, file: !1, line: 2705, column: 48)
!3525 = !DILocation(line: 2706, column: 22, scope: !3524)
!3526 = !DILocation(line: 2707, column: 30, scope: !3524)
!3527 = !DILocation(line: 2707, column: 32, scope: !3524)
!3528 = !DILocation(line: 2707, column: 42, scope: !3524)
!3529 = !DILocation(line: 2707, column: 43, scope: !3524)
!3530 = !DILocation(line: 2707, column: 31, scope: !3524)
!3531 = !DILocation(line: 2707, column: 59, scope: !3524)
!3532 = !DILocation(line: 2707, column: 61, scope: !3524)
!3533 = !DILocation(line: 2707, column: 71, scope: !3524)
!3534 = !DILocation(line: 2707, column: 72, scope: !3524)
!3535 = !DILocation(line: 2707, column: 60, scope: !3524)
!3536 = !DILocation(line: 2707, column: 47, scope: !3524)
!3537 = !DILocation(line: 2708, column: 30, scope: !3524)
!3538 = !DILocation(line: 2708, column: 32, scope: !3524)
!3539 = !DILocation(line: 2708, column: 42, scope: !3524)
!3540 = !DILocation(line: 2708, column: 43, scope: !3524)
!3541 = !DILocation(line: 2708, column: 31, scope: !3524)
!3542 = !DILocation(line: 2708, column: 59, scope: !3524)
!3543 = !DILocation(line: 2708, column: 61, scope: !3524)
!3544 = !DILocation(line: 2708, column: 71, scope: !3524)
!3545 = !DILocation(line: 2708, column: 72, scope: !3524)
!3546 = !DILocation(line: 2708, column: 60, scope: !3524)
!3547 = !DILocation(line: 2708, column: 47, scope: !3524)
!3548 = !DILocation(line: 2708, column: 17, scope: !3524)
!3549 = !DILocation(line: 2709, column: 28, scope: !3524)
!3550 = !DILocation(line: 2709, column: 35, scope: !3524)
!3551 = !DILocation(line: 2709, column: 24, scope: !3524)
!3552 = !DILocation(line: 2709, column: 22, scope: !3524)
!3553 = !DILocation(line: 2710, column: 26, scope: !3524)
!3554 = !DILocation(line: 2710, column: 33, scope: !3524)
!3555 = !DILocation(line: 2710, column: 24, scope: !3524)
!3556 = !DILocation(line: 2710, column: 53, scope: !3524)
!3557 = !DILocation(line: 2710, column: 52, scope: !3524)
!3558 = !DILocation(line: 2710, column: 22, scope: !3524)
!3559 = !DILocation(line: 2712, column: 23, scope: !3524)
!3560 = !DILocation(line: 2712, column: 34, scope: !3524)
!3561 = !DILocation(line: 2712, column: 38, scope: !3524)
!3562 = !DILocation(line: 2712, column: 48, scope: !3524)
!3563 = !DILocation(line: 2712, column: 49, scope: !3524)
!3564 = !DILocation(line: 2712, column: 37, scope: !3524)
!3565 = !DILocation(line: 2712, column: 54, scope: !3524)
!3566 = !DILocation(line: 2712, column: 53, scope: !3524)
!3567 = !DILocation(line: 2712, column: 17, scope: !3524)
!3568 = !DILocation(line: 2712, column: 19, scope: !3524)
!3569 = !DILocation(line: 2713, column: 23, scope: !3524)
!3570 = !DILocation(line: 2713, column: 33, scope: !3524)
!3571 = !DILocation(line: 2713, column: 34, scope: !3524)
!3572 = !DILocation(line: 2713, column: 38, scope: !3524)
!3573 = !DILocation(line: 2713, column: 48, scope: !3524)
!3574 = !DILocation(line: 2713, column: 49, scope: !3524)
!3575 = !DILocation(line: 2713, column: 37, scope: !3524)
!3576 = !DILocation(line: 2713, column: 54, scope: !3524)
!3577 = !DILocation(line: 2713, column: 53, scope: !3524)
!3578 = !DILocation(line: 2713, column: 17, scope: !3524)
!3579 = !DILocation(line: 2713, column: 19, scope: !3524)
!3580 = !DILocation(line: 2714, column: 30, scope: !3524)
!3581 = !DILocation(line: 2714, column: 27, scope: !3524)
!3582 = !DILocation(line: 2715, column: 13, scope: !3524)
!3583 = !DILocation(line: 2705, column: 43, scope: !3519)
!3584 = !DILocation(line: 2705, column: 13, scope: !3519)
!3585 = distinct !{!3585, !3522, !3586}
!3586 = !DILocation(line: 2715, column: 13, scope: !3516)
!3587 = !DILocation(line: 2716, column: 20, scope: !3506)
!3588 = !DILocation(line: 2716, column: 15, scope: !3506)
!3589 = !DILocation(line: 2716, column: 17, scope: !3506)
!3590 = !DILocation(line: 2717, column: 20, scope: !3506)
!3591 = !DILocation(line: 2717, column: 15, scope: !3506)
!3592 = !DILocation(line: 2717, column: 17, scope: !3506)
!3593 = !DILocation(line: 2718, column: 22, scope: !3506)
!3594 = !DILocation(line: 2718, column: 15, scope: !3506)
!3595 = !DILocation(line: 2718, column: 17, scope: !3506)
!3596 = !DILocation(line: 2719, column: 22, scope: !3506)
!3597 = !DILocation(line: 2719, column: 15, scope: !3506)
!3598 = !DILocation(line: 2719, column: 17, scope: !3506)
!3599 = !DILocation(line: 2720, column: 13, scope: !3506)
!3600 = !DILocation(line: 2723, column: 13, scope: !2718)
!3601 = !DILocation(line: 2726, column: 14, scope: !3602)
!3602 = distinct !DILexicalBlock(scope: !2695, file: !1, line: 2726, column: 14)
!3603 = !DILocation(line: 2726, column: 22, scope: !3602)
!3604 = !DILocation(line: 2726, column: 25, scope: !3602)
!3605 = !DILocation(line: 2726, column: 32, scope: !3602)
!3606 = !DILocation(line: 2726, column: 14, scope: !2695)
!3607 = !DILocation(line: 2727, column: 18, scope: !3608)
!3608 = distinct !DILexicalBlock(scope: !3602, file: !1, line: 2726, column: 51)
!3609 = !DILocation(line: 2727, column: 25, scope: !3608)
!3610 = !DILocation(line: 2727, column: 30, scope: !3608)
!3611 = !DILocation(line: 2727, column: 13, scope: !3608)
!3612 = !DILocation(line: 2727, column: 15, scope: !3608)
!3613 = !DILocation(line: 2728, column: 18, scope: !3608)
!3614 = !DILocation(line: 2728, column: 25, scope: !3608)
!3615 = !DILocation(line: 2728, column: 30, scope: !3608)
!3616 = !DILocation(line: 2728, column: 13, scope: !3608)
!3617 = !DILocation(line: 2728, column: 15, scope: !3608)
!3618 = !DILocation(line: 2729, column: 9, scope: !3608)
!3619 = !DILocation(line: 2730, column: 11, scope: !2695)
!3620 = !DILocation(line: 2730, column: 13, scope: !2695)
!3621 = !DILocation(line: 2731, column: 11, scope: !2695)
!3622 = !DILocation(line: 2731, column: 13, scope: !2695)
!3623 = !DILocation(line: 2733, column: 14, scope: !3624)
!3624 = distinct !DILexicalBlock(scope: !2695, file: !1, line: 2733, column: 14)
!3625 = !DILocation(line: 2733, column: 23, scope: !3624)
!3626 = !DILocation(line: 2733, column: 14, scope: !2695)
!3627 = !DILocation(line: 2735, column: 26, scope: !3628)
!3628 = distinct !DILexicalBlock(scope: !3624, file: !1, line: 2733, column: 32)
!3629 = !DILocation(line: 2735, column: 49, scope: !3628)
!3630 = !DILocation(line: 2735, column: 51, scope: !3628)
!3631 = !DILocation(line: 2735, column: 11, scope: !3628)
!3632 = !DILocation(line: 2736, column: 9, scope: !3628)
!3633 = !DILocation(line: 2739, column: 37, scope: !3634)
!3634 = distinct !DILexicalBlock(scope: !3624, file: !1, line: 2737, column: 14)
!3635 = !DILocation(line: 2739, column: 53, scope: !3634)
!3636 = !DILocation(line: 2739, column: 59, scope: !3634)
!3637 = !DILocation(line: 2739, column: 63, scope: !3634)
!3638 = !DILocation(line: 2739, column: 18, scope: !3634)
!3639 = !DILocation(line: 2741, column: 16, scope: !3640)
!3640 = distinct !DILexicalBlock(scope: !3634, file: !1, line: 2741, column: 16)
!3641 = !DILocation(line: 2741, column: 25, scope: !3640)
!3642 = !DILocation(line: 2741, column: 16, scope: !3634)
!3643 = !DILocation(line: 2744, column: 46, scope: !3644)
!3644 = distinct !DILexicalBlock(scope: !3640, file: !1, line: 2741, column: 33)
!3645 = !DILocation(line: 2744, column: 69, scope: !3644)
!3646 = !DILocation(line: 2744, column: 68, scope: !3644)
!3647 = !DILocation(line: 2744, column: 64, scope: !3644)
!3648 = !DILocation(line: 2744, column: 13, scope: !3644)
!3649 = !DILocation(line: 2746, column: 11, scope: !3644)
!3650 = !DILocation(line: 2747, column: 26, scope: !3634)
!3651 = !DILocation(line: 2747, column: 47, scope: !3634)
!3652 = !DILocation(line: 2747, column: 49, scope: !3634)
!3653 = !DILocation(line: 2747, column: 11, scope: !3634)
!3654 = !DILocation(line: 2749, column: 10, scope: !2695)
!3655 = !DILocation(line: 2750, column: 16, scope: !2695)
!3656 = !DILocation(line: 2751, column: 7, scope: !2695)
!3657 = !DILocation(line: 2403, column: 56, scope: !2689)
!3658 = !DILocation(line: 2403, column: 7, scope: !2689)
!3659 = distinct !{!3659, !2693, !3660}
!3660 = !DILocation(line: 2751, column: 7, scope: !2686)
!3661 = !DILocation(line: 2752, column: 41, scope: !2624)
!3662 = !DILocation(line: 2752, column: 54, scope: !2624)
!3663 = !DILocation(line: 2752, column: 12, scope: !2624)
!3664 = !DILocation(line: 2752, column: 11, scope: !2624)
!3665 = !DILocation(line: 2753, column: 11, scope: !3666)
!3666 = distinct !DILexicalBlock(scope: !2624, file: !1, line: 2753, column: 11)
!3667 = !DILocation(line: 2753, column: 16, scope: !3666)
!3668 = !DILocation(line: 2753, column: 11, scope: !2624)
!3669 = !DILocation(line: 2754, column: 15, scope: !3666)
!3670 = !DILocation(line: 2754, column: 9, scope: !3666)
!3671 = !DILocation(line: 2755, column: 11, scope: !3672)
!3672 = distinct !DILexicalBlock(scope: !2624, file: !1, line: 2755, column: 11)
!3673 = !DILocation(line: 2755, column: 18, scope: !3672)
!3674 = !DILocation(line: 2755, column: 35, scope: !3672)
!3675 = !DILocation(line: 2755, column: 11, scope: !2624)
!3676 = !DILocalVariable(name: "proceed", scope: !3677, file: !1, line: 2758, type: !617)
!3677 = distinct !DILexicalBlock(scope: !3672, file: !1, line: 2756, column: 9)
!3678 = !DILocation(line: 2758, column: 13, scope: !3677)
!3679 = !DILocation(line: 2763, column: 36, scope: !3677)
!3680 = !DILocation(line: 2763, column: 66, scope: !3677)
!3681 = !DILocation(line: 2764, column: 13, scope: !3677)
!3682 = !DILocation(line: 2764, column: 20, scope: !3677)
!3683 = !DILocation(line: 2763, column: 19, scope: !3677)
!3684 = !DILocation(line: 2763, column: 18, scope: !3677)
!3685 = !DILocation(line: 2765, column: 15, scope: !3686)
!3686 = distinct !DILexicalBlock(scope: !3677, file: !1, line: 2765, column: 15)
!3687 = !DILocation(line: 2765, column: 23, scope: !3686)
!3688 = !DILocation(line: 2765, column: 15, scope: !3677)
!3689 = !DILocation(line: 2766, column: 19, scope: !3686)
!3690 = !DILocation(line: 2766, column: 13, scope: !3686)
!3691 = !DILocation(line: 2767, column: 9, scope: !3677)
!3692 = !DILocation(line: 2768, column: 5, scope: !2624)
!3693 = !DILocation(line: 2338, column: 51, scope: !2618)
!3694 = !DILocation(line: 2338, column: 5, scope: !2618)
!3695 = distinct !{!3695, !2622, !3696}
!3696 = !DILocation(line: 2768, column: 5, scope: !2615)
!3697 = !DILocation(line: 2769, column: 35, scope: !2573)
!3698 = !DILocation(line: 2769, column: 18, scope: !2573)
!3699 = !DILocation(line: 2769, column: 17, scope: !2573)
!3700 = !DILocation(line: 2770, column: 52, scope: !2573)
!3701 = !DILocation(line: 2770, column: 21, scope: !2573)
!3702 = !DILocation(line: 2770, column: 20, scope: !2573)
!3703 = !DILocation(line: 2772, column: 9, scope: !3704)
!3704 = distinct !DILexicalBlock(scope: !2573, file: !1, line: 2772, column: 9)
!3705 = !DILocation(line: 2772, column: 16, scope: !3704)
!3706 = !DILocation(line: 2772, column: 9, scope: !2573)
!3707 = !DILocation(line: 2773, column: 34, scope: !3704)
!3708 = !DILocation(line: 2773, column: 21, scope: !3704)
!3709 = !DILocation(line: 2773, column: 20, scope: !3704)
!3710 = !DILocation(line: 2773, column: 7, scope: !3704)
!3711 = !DILocation(line: 2779, column: 8, scope: !3712)
!3712 = distinct !DILexicalBlock(scope: !911, file: !1, line: 2779, column: 8)
!3713 = !DILocation(line: 2779, column: 15, scope: !3712)
!3714 = !DILocation(line: 2779, column: 32, scope: !3712)
!3715 = !DILocation(line: 2779, column: 36, scope: !3712)
!3716 = !DILocation(line: 2779, column: 44, scope: !3712)
!3717 = !DILocation(line: 2779, column: 48, scope: !3712)
!3718 = !DILocation(line: 2779, column: 8, scope: !911)
!3719 = !DILocation(line: 2780, column: 5, scope: !3720)
!3720 = distinct !DILexicalBlock(scope: !3712, file: !1, line: 2779, column: 65)
!3721 = !DILocation(line: 2780, column: 20, scope: !3720)
!3722 = !DILocation(line: 2780, column: 25, scope: !3720)
!3723 = !DILocation(line: 2780, column: 27, scope: !3720)
!3724 = !DILocation(line: 2781, column: 5, scope: !3720)
!3725 = !DILocation(line: 2781, column: 20, scope: !3720)
!3726 = !DILocation(line: 2781, column: 25, scope: !3720)
!3727 = !DILocation(line: 2781, column: 27, scope: !3720)
!3728 = !DILocation(line: 2782, column: 3, scope: !3720)
!3729 = !DILocation(line: 2783, column: 45, scope: !911)
!3730 = !DILocation(line: 2783, column: 22, scope: !911)
!3731 = !DILocation(line: 2783, column: 11, scope: !911)
!3732 = !DILocation(line: 2783, column: 9, scope: !911)
!3733 = !DILocation(line: 2784, column: 10, scope: !911)
!3734 = !DILocation(line: 2784, column: 3, scope: !911)
!3735 = !DILocation(line: 2785, column: 1, scope: !911)
!3736 = distinct !DISubprogram(name: "DistortResizeImage", scope: !1, file: !1, line: 1477, type: !3737, scopeLine: 1479, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !857)
!3737 = !DISubroutineType(types: !3738)
!3738 = !{!601, !843, !914, !914, !856}
!3739 = !DILocalVariable(name: "image", arg: 1, scope: !3736, file: !1, line: 1477, type: !843)
!3740 = !DILocation(line: 1477, column: 53, scope: !3736)
!3741 = !DILocalVariable(name: "columns", arg: 2, scope: !3736, file: !1, line: 1478, type: !914)
!3742 = !DILocation(line: 1478, column: 16, scope: !3736)
!3743 = !DILocalVariable(name: "rows", arg: 3, scope: !3736, file: !1, line: 1478, type: !914)
!3744 = !DILocation(line: 1478, column: 37, scope: !3736)
!3745 = !DILocalVariable(name: "exception", arg: 4, scope: !3736, file: !1, line: 1478, type: !856)
!3746 = !DILocation(line: 1478, column: 57, scope: !3736)
!3747 = !DILocalVariable(name: "resize_image", scope: !3736, file: !1, line: 1483, type: !601)
!3748 = !DILocation(line: 1483, column: 6, scope: !3736)
!3749 = !DILocalVariable(name: "tmp_image", scope: !3736, file: !1, line: 1484, type: !601)
!3750 = !DILocation(line: 1484, column: 6, scope: !3736)
!3751 = !DILocalVariable(name: "crop_area", scope: !3736, file: !1, line: 1487, type: !673)
!3752 = !DILocation(line: 1487, column: 5, scope: !3736)
!3753 = !DILocalVariable(name: "distort_args", scope: !3736, file: !1, line: 1490, type: !3754)
!3754 = !DICompositeType(tag: DW_TAG_array_type, baseType: !638, size: 768, elements: !3755)
!3755 = !{!3756}
!3756 = !DISubrange(count: 12)
!3757 = !DILocation(line: 1490, column: 5, scope: !3736)
!3758 = !DILocalVariable(name: "vp_save", scope: !3736, file: !1, line: 1493, type: !3759)
!3759 = !DIDerivedType(tag: DW_TAG_typedef, name: "VirtualPixelMethod", file: !417, line: 47, baseType: !416)
!3760 = !DILocation(line: 1493, column: 5, scope: !3736)
!3761 = !DILocation(line: 1500, column: 7, scope: !3762)
!3762 = distinct !DILexicalBlock(scope: !3736, file: !1, line: 1500, column: 7)
!3763 = !DILocation(line: 1500, column: 14, scope: !3762)
!3764 = !DILocation(line: 1500, column: 20, scope: !3762)
!3765 = !DILocation(line: 1500, column: 7, scope: !3736)
!3766 = !DILocation(line: 1501, column: 61, scope: !3762)
!3767 = !DILocation(line: 1501, column: 68, scope: !3762)
!3768 = !DILocation(line: 1501, column: 12, scope: !3762)
!3769 = !DILocation(line: 1501, column: 5, scope: !3762)
!3770 = !DILocation(line: 1504, column: 8, scope: !3771)
!3771 = distinct !DILexicalBlock(scope: !3736, file: !1, line: 1504, column: 7)
!3772 = !DILocation(line: 1504, column: 16, scope: !3771)
!3773 = !DILocation(line: 1504, column: 22, scope: !3771)
!3774 = !DILocation(line: 1504, column: 26, scope: !3771)
!3775 = !DILocation(line: 1504, column: 31, scope: !3771)
!3776 = !DILocation(line: 1504, column: 7, scope: !3736)
!3777 = !DILocation(line: 1505, column: 5, scope: !3771)
!3778 = !DILocation(line: 1508, column: 28, scope: !3736)
!3779 = !DILocation(line: 1508, column: 10, scope: !3736)
!3780 = !DILocation(line: 1509, column: 28, scope: !3736)
!3781 = !DILocation(line: 1509, column: 35, scope: !3736)
!3782 = !DILocation(line: 1509, column: 19, scope: !3736)
!3783 = !DILocation(line: 1509, column: 3, scope: !3736)
!3784 = !DILocation(line: 1509, column: 18, scope: !3736)
!3785 = !DILocation(line: 1510, column: 28, scope: !3736)
!3786 = !DILocation(line: 1510, column: 19, scope: !3736)
!3787 = !DILocation(line: 1510, column: 3, scope: !3736)
!3788 = !DILocation(line: 1510, column: 18, scope: !3736)
!3789 = !DILocation(line: 1511, column: 28, scope: !3736)
!3790 = !DILocation(line: 1511, column: 35, scope: !3736)
!3791 = !DILocation(line: 1511, column: 19, scope: !3736)
!3792 = !DILocation(line: 1511, column: 3, scope: !3736)
!3793 = !DILocation(line: 1511, column: 18, scope: !3736)
!3794 = !DILocation(line: 1512, column: 29, scope: !3736)
!3795 = !DILocation(line: 1512, column: 20, scope: !3736)
!3796 = !DILocation(line: 1512, column: 3, scope: !3736)
!3797 = !DILocation(line: 1512, column: 19, scope: !3736)
!3798 = !DILocation(line: 1514, column: 38, scope: !3736)
!3799 = !DILocation(line: 1514, column: 11, scope: !3736)
!3800 = !DILocation(line: 1514, column: 10, scope: !3736)
!3801 = !DILocation(line: 1516, column: 24, scope: !3736)
!3802 = !DILocation(line: 1516, column: 45, scope: !3736)
!3803 = !DILocation(line: 1516, column: 13, scope: !3736)
!3804 = !DILocation(line: 1516, column: 12, scope: !3736)
!3805 = !DILocation(line: 1517, column: 8, scope: !3806)
!3806 = distinct !DILexicalBlock(scope: !3736, file: !1, line: 1517, column: 8)
!3807 = !DILocation(line: 1517, column: 18, scope: !3806)
!3808 = !DILocation(line: 1517, column: 8, scope: !3736)
!3809 = !DILocation(line: 1518, column: 5, scope: !3806)
!3810 = !DILocation(line: 1519, column: 37, scope: !3736)
!3811 = !DILocation(line: 1519, column: 10, scope: !3736)
!3812 = !DILocation(line: 1521, column: 7, scope: !3813)
!3813 = distinct !DILexicalBlock(scope: !3736, file: !1, line: 1521, column: 7)
!3814 = !DILocation(line: 1521, column: 14, scope: !3813)
!3815 = !DILocation(line: 1521, column: 20, scope: !3813)
!3816 = !DILocation(line: 1521, column: 7, scope: !3736)
!3817 = !DILocation(line: 1526, column: 35, scope: !3818)
!3818 = distinct !DILexicalBlock(scope: !3813, file: !1, line: 1522, column: 5)
!3819 = !DILocation(line: 1526, column: 14, scope: !3818)
!3820 = !DILocation(line: 1527, column: 33, scope: !3818)
!3821 = !DILocation(line: 1527, column: 63, scope: !3818)
!3822 = !DILocation(line: 1528, column: 24, scope: !3818)
!3823 = !DILocation(line: 1527, column: 20, scope: !3818)
!3824 = !DILocation(line: 1527, column: 19, scope: !3818)
!3825 = !DILocation(line: 1530, column: 30, scope: !3818)
!3826 = !DILocation(line: 1530, column: 17, scope: !3818)
!3827 = !DILocation(line: 1530, column: 16, scope: !3818)
!3828 = !DILocation(line: 1531, column: 12, scope: !3829)
!3829 = distinct !DILexicalBlock(scope: !3818, file: !1, line: 1531, column: 12)
!3830 = !DILocation(line: 1531, column: 25, scope: !3829)
!3831 = !DILocation(line: 1531, column: 12, scope: !3818)
!3832 = !DILocation(line: 1532, column: 9, scope: !3829)
!3833 = !DILocation(line: 1534, column: 35, scope: !3818)
!3834 = !DILocation(line: 1534, column: 14, scope: !3818)
!3835 = !DILocation(line: 1535, column: 24, scope: !3818)
!3836 = !DILocation(line: 1535, column: 35, scope: !3818)
!3837 = !DILocation(line: 1535, column: 42, scope: !3818)
!3838 = !DILocation(line: 1535, column: 7, scope: !3818)
!3839 = !DILocation(line: 1536, column: 5, scope: !3818)
!3840 = !DILocalVariable(name: "resize_alpha", scope: !3841, file: !1, line: 1545, type: !601)
!3841 = distinct !DILexicalBlock(scope: !3813, file: !1, line: 1538, column: 5)
!3842 = !DILocation(line: 1545, column: 10, scope: !3841)
!3843 = !DILocation(line: 1548, column: 35, scope: !3841)
!3844 = !DILocation(line: 1548, column: 14, scope: !3841)
!3845 = !DILocation(line: 1549, column: 35, scope: !3841)
!3846 = !DILocation(line: 1549, column: 14, scope: !3841)
!3847 = !DILocation(line: 1550, column: 33, scope: !3841)
!3848 = !DILocation(line: 1550, column: 63, scope: !3841)
!3849 = !DILocation(line: 1551, column: 20, scope: !3841)
!3850 = !DILocation(line: 1550, column: 20, scope: !3841)
!3851 = !DILocation(line: 1550, column: 19, scope: !3841)
!3852 = !DILocation(line: 1552, column: 30, scope: !3841)
!3853 = !DILocation(line: 1552, column: 17, scope: !3841)
!3854 = !DILocation(line: 1552, column: 16, scope: !3841)
!3855 = !DILocation(line: 1553, column: 12, scope: !3856)
!3856 = distinct !DILexicalBlock(scope: !3841, file: !1, line: 1553, column: 12)
!3857 = !DILocation(line: 1553, column: 25, scope: !3856)
!3858 = !DILocation(line: 1553, column: 12, scope: !3841)
!3859 = !DILocation(line: 1554, column: 9, scope: !3856)
!3860 = !DILocation(line: 1557, column: 28, scope: !3841)
!3861 = !DILocation(line: 1557, column: 49, scope: !3841)
!3862 = !DILocation(line: 1557, column: 17, scope: !3841)
!3863 = !DILocation(line: 1557, column: 16, scope: !3841)
!3864 = !DILocation(line: 1558, column: 12, scope: !3865)
!3865 = distinct !DILexicalBlock(scope: !3841, file: !1, line: 1558, column: 12)
!3866 = !DILocation(line: 1558, column: 22, scope: !3865)
!3867 = !DILocation(line: 1558, column: 12, scope: !3841)
!3868 = !DILocation(line: 1559, column: 9, scope: !3865)
!3869 = !DILocation(line: 1560, column: 41, scope: !3841)
!3870 = !DILocation(line: 1560, column: 14, scope: !3841)
!3871 = !DILocation(line: 1562, column: 41, scope: !3841)
!3872 = !DILocation(line: 1562, column: 14, scope: !3841)
!3873 = !DILocation(line: 1564, column: 33, scope: !3841)
!3874 = !DILocation(line: 1564, column: 63, scope: !3841)
!3875 = !DILocation(line: 1565, column: 20, scope: !3841)
!3876 = !DILocation(line: 1564, column: 20, scope: !3841)
!3877 = !DILocation(line: 1564, column: 19, scope: !3841)
!3878 = !DILocation(line: 1566, column: 30, scope: !3841)
!3879 = !DILocation(line: 1566, column: 17, scope: !3841)
!3880 = !DILocation(line: 1566, column: 16, scope: !3841)
!3881 = !DILocation(line: 1567, column: 12, scope: !3882)
!3882 = distinct !DILexicalBlock(scope: !3841, file: !1, line: 1567, column: 12)
!3883 = !DILocation(line: 1567, column: 25, scope: !3882)
!3884 = !DILocation(line: 1567, column: 12, scope: !3841)
!3885 = !DILocation(line: 1569, column: 37, scope: !3886)
!3886 = distinct !DILexicalBlock(scope: !3882, file: !1, line: 1568, column: 9)
!3887 = !DILocation(line: 1569, column: 24, scope: !3886)
!3888 = !DILocation(line: 1569, column: 23, scope: !3886)
!3889 = !DILocation(line: 1570, column: 11, scope: !3886)
!3890 = !DILocation(line: 1574, column: 35, scope: !3841)
!3891 = !DILocation(line: 1574, column: 14, scope: !3841)
!3892 = !DILocation(line: 1575, column: 35, scope: !3841)
!3893 = !DILocation(line: 1575, column: 14, scope: !3841)
!3894 = !DILocation(line: 1576, column: 29, scope: !3841)
!3895 = !DILocation(line: 1576, column: 65, scope: !3841)
!3896 = !DILocation(line: 1576, column: 14, scope: !3841)
!3897 = !DILocation(line: 1578, column: 24, scope: !3841)
!3898 = !DILocation(line: 1578, column: 35, scope: !3841)
!3899 = !DILocation(line: 1578, column: 49, scope: !3841)
!3900 = !DILocation(line: 1578, column: 7, scope: !3841)
!3901 = !DILocation(line: 1579, column: 33, scope: !3841)
!3902 = !DILocation(line: 1579, column: 20, scope: !3841)
!3903 = !DILocation(line: 1579, column: 19, scope: !3841)
!3904 = !DILocation(line: 1581, column: 37, scope: !3736)
!3905 = !DILocation(line: 1581, column: 50, scope: !3736)
!3906 = !DILocation(line: 1581, column: 10, scope: !3736)
!3907 = !DILocation(line: 1586, column: 19, scope: !3736)
!3908 = !DILocation(line: 1586, column: 13, scope: !3736)
!3909 = !DILocation(line: 1586, column: 18, scope: !3736)
!3910 = !DILocation(line: 1587, column: 20, scope: !3736)
!3911 = !DILocation(line: 1587, column: 13, scope: !3736)
!3912 = !DILocation(line: 1587, column: 19, scope: !3736)
!3913 = !DILocation(line: 1588, column: 13, scope: !3736)
!3914 = !DILocation(line: 1588, column: 14, scope: !3736)
!3915 = !DILocation(line: 1589, column: 13, scope: !3736)
!3916 = !DILocation(line: 1589, column: 14, scope: !3736)
!3917 = !DILocation(line: 1591, column: 13, scope: !3736)
!3918 = !DILocation(line: 1591, column: 12, scope: !3736)
!3919 = !DILocation(line: 1592, column: 26, scope: !3736)
!3920 = !DILocation(line: 1592, column: 47, scope: !3736)
!3921 = !DILocation(line: 1592, column: 16, scope: !3736)
!3922 = !DILocation(line: 1592, column: 15, scope: !3736)
!3923 = !DILocation(line: 1593, column: 26, scope: !3736)
!3924 = !DILocation(line: 1593, column: 13, scope: !3736)
!3925 = !DILocation(line: 1593, column: 12, scope: !3736)
!3926 = !DILocation(line: 1594, column: 10, scope: !3736)
!3927 = !DILocation(line: 1594, column: 3, scope: !3736)
!3928 = !DILocation(line: 1595, column: 1, scope: !3736)
!3929 = distinct !DISubprogram(name: "GenerateCoefficients", scope: !1, file: !1, line: 383, type: !3930, scopeLine: 386, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !857)
!3930 = !DISubroutineType(types: !3931)
!3931 = !{!821, !843, !3932, !914, !915, !612, !856}
!3932 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !825, size: 64)
!3933 = !DILocalVariable(name: "image", arg: 1, scope: !3929, file: !1, line: 383, type: !843)
!3934 = !DILocation(line: 383, column: 50, scope: !3929)
!3935 = !DILocalVariable(name: "method", arg: 2, scope: !3929, file: !1, line: 384, type: !3932)
!3936 = !DILocation(line: 384, column: 23, scope: !3929)
!3937 = !DILocalVariable(name: "number_arguments", arg: 3, scope: !3929, file: !1, line: 384, type: !914)
!3938 = !DILocation(line: 384, column: 43, scope: !3929)
!3939 = !DILocalVariable(name: "arguments", arg: 4, scope: !3929, file: !1, line: 385, type: !915)
!3940 = !DILocation(line: 385, column: 17, scope: !3929)
!3941 = !DILocalVariable(name: "number_values", arg: 5, scope: !3929, file: !1, line: 385, type: !612)
!3942 = !DILocation(line: 385, column: 34, scope: !3929)
!3943 = !DILocalVariable(name: "exception", arg: 6, scope: !3929, file: !1, line: 385, type: !856)
!3944 = !DILocation(line: 385, column: 63, scope: !3929)
!3945 = !DILocalVariable(name: "coeff", scope: !3929, file: !1, line: 388, type: !821)
!3946 = !DILocation(line: 388, column: 6, scope: !3929)
!3947 = !DILocalVariable(name: "i", scope: !3929, file: !1, line: 391, type: !612)
!3948 = !DILocation(line: 391, column: 5, scope: !3929)
!3949 = !DILocalVariable(name: "number_coeff", scope: !3929, file: !1, line: 394, type: !612)
!3950 = !DILocation(line: 394, column: 5, scope: !3929)
!3951 = !DILocalVariable(name: "cp_size", scope: !3929, file: !1, line: 395, type: !612)
!3952 = !DILocation(line: 395, column: 5, scope: !3929)
!3953 = !DILocalVariable(name: "cp_x", scope: !3929, file: !1, line: 396, type: !612)
!3954 = !DILocation(line: 396, column: 5, scope: !3929)
!3955 = !DILocalVariable(name: "cp_y", scope: !3929, file: !1, line: 396, type: !612)
!3956 = !DILocation(line: 396, column: 10, scope: !3929)
!3957 = !DILocalVariable(name: "cp_values", scope: !3929, file: !1, line: 397, type: !612)
!3958 = !DILocation(line: 397, column: 5, scope: !3929)
!3959 = !DILocation(line: 400, column: 8, scope: !3960)
!3960 = distinct !DILexicalBlock(scope: !3929, file: !1, line: 400, column: 8)
!3961 = !DILocation(line: 400, column: 22, scope: !3960)
!3962 = !DILocation(line: 400, column: 8, scope: !3929)
!3963 = !DILocation(line: 404, column: 19, scope: !3964)
!3964 = distinct !DILexicalBlock(scope: !3960, file: !1, line: 400, column: 29)
!3965 = !DILocation(line: 405, column: 15, scope: !3964)
!3966 = !DILocation(line: 406, column: 10, scope: !3964)
!3967 = !DILocation(line: 407, column: 10, scope: !3964)
!3968 = !DILocation(line: 409, column: 3, scope: !3964)
!3969 = !DILocation(line: 411, column: 10, scope: !3970)
!3970 = distinct !DILexicalBlock(scope: !3960, file: !1, line: 410, column: 8)
!3971 = !DILocation(line: 412, column: 10, scope: !3970)
!3972 = !DILocation(line: 413, column: 15, scope: !3970)
!3973 = !DILocation(line: 416, column: 13, scope: !3929)
!3974 = !DILocation(line: 416, column: 26, scope: !3929)
!3975 = !DILocation(line: 416, column: 11, scope: !3929)
!3976 = !DILocation(line: 421, column: 8, scope: !3977)
!3977 = distinct !DILexicalBlock(scope: !3929, file: !1, line: 421, column: 8)
!3978 = !DILocation(line: 421, column: 29, scope: !3977)
!3979 = !DILocation(line: 421, column: 28, scope: !3977)
!3980 = !DILocation(line: 421, column: 25, scope: !3977)
!3981 = !DILocation(line: 421, column: 37, scope: !3977)
!3982 = !DILocation(line: 422, column: 12, scope: !3977)
!3983 = !DILocation(line: 422, column: 11, scope: !3977)
!3984 = !DILocation(line: 422, column: 19, scope: !3977)
!3985 = !DILocation(line: 423, column: 8, scope: !3977)
!3986 = !DILocation(line: 423, column: 12, scope: !3977)
!3987 = !DILocation(line: 423, column: 11, scope: !3977)
!3988 = !DILocation(line: 423, column: 19, scope: !3977)
!3989 = !DILocation(line: 424, column: 8, scope: !3977)
!3990 = !DILocation(line: 424, column: 12, scope: !3977)
!3991 = !DILocation(line: 424, column: 11, scope: !3977)
!3992 = !DILocation(line: 424, column: 19, scope: !3977)
!3993 = !DILocation(line: 421, column: 8, scope: !3929)
!3994 = !DILocation(line: 426, column: 6, scope: !3977)
!3995 = !DILocation(line: 426, column: 13, scope: !3977)
!3996 = !DILocation(line: 426, column: 5, scope: !3977)
!3997 = !DILocation(line: 428, column: 15, scope: !3929)
!3998 = !DILocation(line: 429, column: 12, scope: !3929)
!3999 = !DILocation(line: 429, column: 11, scope: !3929)
!4000 = !DILocation(line: 429, column: 3, scope: !3929)
!4001 = !DILocation(line: 432, column: 22, scope: !4002)
!4002 = distinct !DILexicalBlock(scope: !3929, file: !1, line: 429, column: 20)
!4003 = !DILocation(line: 432, column: 21, scope: !4002)
!4004 = !DILocation(line: 432, column: 19, scope: !4002)
!4005 = !DILocation(line: 433, column: 7, scope: !4002)
!4006 = !DILocation(line: 436, column: 12, scope: !4007)
!4007 = distinct !DILexicalBlock(scope: !4002, file: !1, line: 436, column: 12)
!4008 = !DILocation(line: 436, column: 29, scope: !4007)
!4009 = !DILocation(line: 436, column: 34, scope: !4007)
!4010 = !DILocation(line: 436, column: 38, scope: !4007)
!4011 = !DILocation(line: 436, column: 54, scope: !4007)
!4012 = !DILocation(line: 436, column: 58, scope: !4007)
!4013 = !DILocation(line: 436, column: 57, scope: !4007)
!4014 = !DILocation(line: 436, column: 66, scope: !4007)
!4015 = !DILocation(line: 436, column: 12, scope: !4002)
!4016 = !DILocation(line: 438, column: 37, scope: !4017)
!4017 = distinct !DILexicalBlock(scope: !4007, file: !1, line: 437, column: 7)
!4018 = !DILocation(line: 438, column: 16, scope: !4017)
!4019 = !DILocation(line: 441, column: 9, scope: !4017)
!4020 = !DILocation(line: 443, column: 29, scope: !4002)
!4021 = !DILocation(line: 443, column: 11, scope: !4002)
!4022 = !DILocation(line: 443, column: 9, scope: !4002)
!4023 = !DILocation(line: 444, column: 26, scope: !4002)
!4024 = !DILocation(line: 444, column: 28, scope: !4002)
!4025 = !DILocation(line: 444, column: 27, scope: !4002)
!4026 = !DILocation(line: 444, column: 24, scope: !4002)
!4027 = !DILocation(line: 444, column: 20, scope: !4002)
!4028 = !DILocation(line: 445, column: 12, scope: !4029)
!4029 = distinct !DILexicalBlock(scope: !4002, file: !1, line: 445, column: 12)
!4030 = !DILocation(line: 445, column: 14, scope: !4029)
!4031 = !DILocation(line: 445, column: 12, scope: !4002)
!4032 = !DILocation(line: 446, column: 37, scope: !4033)
!4033 = distinct !DILexicalBlock(scope: !4029, file: !1, line: 445, column: 21)
!4034 = !DILocation(line: 446, column: 16, scope: !4033)
!4035 = !DILocation(line: 449, column: 9, scope: !4033)
!4036 = !DILocation(line: 451, column: 12, scope: !4037)
!4037 = distinct !DILexicalBlock(scope: !4002, file: !1, line: 451, column: 12)
!4038 = !DILocation(line: 451, column: 33, scope: !4037)
!4039 = !DILocation(line: 451, column: 35, scope: !4037)
!4040 = !DILocation(line: 451, column: 34, scope: !4037)
!4041 = !DILocation(line: 451, column: 32, scope: !4037)
!4042 = !DILocation(line: 451, column: 29, scope: !4037)
!4043 = !DILocation(line: 451, column: 12, scope: !4002)
!4044 = !DILocation(line: 452, column: 37, scope: !4045)
!4045 = distinct !DILexicalBlock(scope: !4037, file: !1, line: 451, column: 45)
!4046 = !DILocation(line: 454, column: 39, scope: !4045)
!4047 = !DILocation(line: 454, column: 30, scope: !4045)
!4048 = !DILocation(line: 452, column: 16, scope: !4045)
!4049 = !DILocation(line: 455, column: 9, scope: !4045)
!4050 = !DILocation(line: 457, column: 7, scope: !4002)
!4051 = !DILocation(line: 459, column: 22, scope: !4002)
!4052 = !DILocation(line: 459, column: 21, scope: !4002)
!4053 = !DILocation(line: 459, column: 19, scope: !4002)
!4054 = !DILocation(line: 460, column: 7, scope: !4002)
!4055 = !DILocation(line: 465, column: 19, scope: !4002)
!4056 = !DILocation(line: 466, column: 12, scope: !4002)
!4057 = !DILocation(line: 467, column: 12, scope: !4002)
!4058 = !DILocation(line: 468, column: 17, scope: !4002)
!4059 = !DILocation(line: 469, column: 7, scope: !4002)
!4060 = !DILocation(line: 476, column: 19, scope: !4002)
!4061 = !DILocation(line: 477, column: 7, scope: !4002)
!4062 = !DILocation(line: 479, column: 19, scope: !4002)
!4063 = !DILocation(line: 480, column: 7, scope: !4002)
!4064 = !DILocation(line: 485, column: 19, scope: !4002)
!4065 = !DILocation(line: 486, column: 7, scope: !4002)
!4066 = !DILocation(line: 489, column: 19, scope: !4002)
!4067 = !DILocation(line: 490, column: 7, scope: !4002)
!4068 = !DILocation(line: 493, column: 19, scope: !4002)
!4069 = !DILocation(line: 494, column: 7, scope: !4002)
!4070 = !DILocation(line: 497, column: 19, scope: !4002)
!4071 = !DILocation(line: 498, column: 7, scope: !4002)
!4072 = !DILocation(line: 500, column: 7, scope: !4002)
!4073 = !DILocation(line: 501, column: 3, scope: !4002)
!4074 = !DILocation(line: 504, column: 43, scope: !3929)
!4075 = !DILocation(line: 504, column: 22, scope: !3929)
!4076 = !DILocation(line: 504, column: 11, scope: !3929)
!4077 = !DILocation(line: 504, column: 9, scope: !3929)
!4078 = !DILocation(line: 505, column: 7, scope: !4079)
!4079 = distinct !DILexicalBlock(scope: !3929, file: !1, line: 505, column: 7)
!4080 = !DILocation(line: 505, column: 13, scope: !4079)
!4081 = !DILocation(line: 505, column: 7, scope: !3929)
!4082 = !DILocation(line: 506, column: 33, scope: !4083)
!4083 = distinct !DILexicalBlock(scope: !4079, file: !1, line: 505, column: 33)
!4084 = !DILocation(line: 506, column: 12, scope: !4083)
!4085 = !DILocation(line: 509, column: 5, scope: !4083)
!4086 = !DILocation(line: 513, column: 9, scope: !4087)
!4087 = distinct !DILexicalBlock(scope: !3929, file: !1, line: 513, column: 3)
!4088 = !DILocation(line: 513, column: 8, scope: !4087)
!4089 = !DILocation(line: 513, column: 13, scope: !4090)
!4090 = distinct !DILexicalBlock(scope: !4087, file: !1, line: 513, column: 3)
!4091 = !DILocation(line: 513, column: 17, scope: !4090)
!4092 = !DILocation(line: 513, column: 15, scope: !4090)
!4093 = !DILocation(line: 513, column: 3, scope: !4087)
!4094 = !DILocation(line: 514, column: 5, scope: !4090)
!4095 = !DILocation(line: 514, column: 11, scope: !4090)
!4096 = !DILocation(line: 514, column: 14, scope: !4090)
!4097 = !DILocation(line: 513, column: 32, scope: !4090)
!4098 = !DILocation(line: 513, column: 3, scope: !4090)
!4099 = distinct !{!4099, !4093, !4100}
!4100 = !DILocation(line: 514, column: 16, scope: !4087)
!4101 = !DILocation(line: 516, column: 12, scope: !3929)
!4102 = !DILocation(line: 516, column: 11, scope: !3929)
!4103 = !DILocation(line: 516, column: 3, scope: !3929)
!4104 = !DILocation(line: 528, column: 12, scope: !4105)
!4105 = distinct !DILexicalBlock(scope: !4106, file: !1, line: 528, column: 12)
!4106 = distinct !DILexicalBlock(scope: !4107, file: !1, line: 519, column: 5)
!4107 = distinct !DILexicalBlock(scope: !3929, file: !1, line: 517, column: 3)
!4108 = !DILocation(line: 528, column: 29, scope: !4105)
!4109 = !DILocation(line: 528, column: 28, scope: !4105)
!4110 = !DILocation(line: 528, column: 37, scope: !4105)
!4111 = !DILocation(line: 528, column: 42, scope: !4105)
!4112 = !DILocation(line: 529, column: 12, scope: !4105)
!4113 = !DILocation(line: 529, column: 31, scope: !4105)
!4114 = !DILocation(line: 529, column: 29, scope: !4105)
!4115 = !DILocation(line: 528, column: 12, scope: !4106)
!4116 = !DILocation(line: 530, column: 37, scope: !4117)
!4117 = distinct !DILexicalBlock(scope: !4105, file: !1, line: 529, column: 41)
!4118 = !DILocation(line: 530, column: 16, scope: !4117)
!4119 = !DILocation(line: 533, column: 49, scope: !4117)
!4120 = !DILocation(line: 533, column: 26, scope: !4117)
!4121 = !DILocation(line: 533, column: 15, scope: !4117)
!4122 = !DILocation(line: 533, column: 14, scope: !4117)
!4123 = !DILocation(line: 534, column: 9, scope: !4117)
!4124 = !DILocation(line: 537, column: 12, scope: !4125)
!4125 = distinct !DILexicalBlock(scope: !4106, file: !1, line: 537, column: 12)
!4126 = !DILocation(line: 537, column: 32, scope: !4125)
!4127 = !DILocation(line: 537, column: 29, scope: !4125)
!4128 = !DILocation(line: 537, column: 12, scope: !4106)
!4129 = !DILocation(line: 539, column: 14, scope: !4130)
!4130 = distinct !DILexicalBlock(scope: !4131, file: !1, line: 539, column: 14)
!4131 = distinct !DILexicalBlock(scope: !4125, file: !1, line: 537, column: 42)
!4132 = !DILocation(line: 539, column: 24, scope: !4130)
!4133 = !DILocation(line: 539, column: 14, scope: !4131)
!4134 = !DILocation(line: 541, column: 11, scope: !4135)
!4135 = distinct !DILexicalBlock(scope: !4130, file: !1, line: 539, column: 31)
!4136 = !DILocation(line: 541, column: 20, scope: !4135)
!4137 = !DILocation(line: 542, column: 22, scope: !4135)
!4138 = !DILocation(line: 542, column: 37, scope: !4135)
!4139 = !DILocation(line: 542, column: 35, scope: !4135)
!4140 = !DILocation(line: 542, column: 11, scope: !4135)
!4141 = !DILocation(line: 542, column: 20, scope: !4135)
!4142 = !DILocation(line: 543, column: 11, scope: !4135)
!4143 = !DILocation(line: 543, column: 20, scope: !4135)
!4144 = !DILocation(line: 544, column: 22, scope: !4135)
!4145 = !DILocation(line: 544, column: 37, scope: !4135)
!4146 = !DILocation(line: 544, column: 35, scope: !4135)
!4147 = !DILocation(line: 544, column: 11, scope: !4135)
!4148 = !DILocation(line: 544, column: 20, scope: !4135)
!4149 = !DILocation(line: 545, column: 9, scope: !4135)
!4150 = !DILocation(line: 548, column: 17, scope: !4151)
!4151 = distinct !DILexicalBlock(scope: !4152, file: !1, line: 548, column: 11)
!4152 = distinct !DILexicalBlock(scope: !4130, file: !1, line: 546, column: 14)
!4153 = !DILocation(line: 548, column: 16, scope: !4151)
!4154 = !DILocation(line: 548, column: 21, scope: !4155)
!4155 = distinct !DILexicalBlock(scope: !4151, file: !1, line: 548, column: 11)
!4156 = !DILocation(line: 548, column: 23, scope: !4155)
!4157 = !DILocation(line: 548, column: 22, scope: !4155)
!4158 = !DILocation(line: 548, column: 11, scope: !4151)
!4159 = !DILocation(line: 549, column: 28, scope: !4155)
!4160 = !DILocation(line: 549, column: 38, scope: !4155)
!4161 = !DILocation(line: 549, column: 48, scope: !4155)
!4162 = !DILocation(line: 549, column: 47, scope: !4155)
!4163 = !DILocation(line: 549, column: 13, scope: !4155)
!4164 = !DILocation(line: 549, column: 19, scope: !4155)
!4165 = !DILocation(line: 549, column: 20, scope: !4155)
!4166 = !DILocation(line: 549, column: 22, scope: !4155)
!4167 = !DILocation(line: 549, column: 26, scope: !4155)
!4168 = !DILocation(line: 548, column: 39, scope: !4155)
!4169 = !DILocation(line: 548, column: 11, scope: !4155)
!4170 = distinct !{!4170, !4158, !4171}
!4171 = !DILocation(line: 549, column: 49, scope: !4151)
!4172 = !DILocation(line: 551, column: 7, scope: !4131)
!4173 = !DILocalVariable(name: "matrix", scope: !4174, file: !1, line: 557, type: !827)
!4174 = distinct !DILexicalBlock(scope: !4125, file: !1, line: 552, column: 12)
!4175 = !DILocation(line: 557, column: 13, scope: !4174)
!4176 = !DILocalVariable(name: "vectors", scope: !4174, file: !1, line: 558, type: !827)
!4177 = !DILocation(line: 558, column: 13, scope: !4174)
!4178 = !DILocalVariable(name: "terms", scope: !4174, file: !1, line: 559, type: !4179)
!4179 = !DICompositeType(tag: DW_TAG_array_type, baseType: !638, size: 192, elements: !4180)
!4180 = !{!4181}
!4181 = !DISubrange(count: 3)
!4182 = !DILocation(line: 559, column: 11, scope: !4174)
!4183 = !DILocalVariable(name: "status", scope: !4174, file: !1, line: 562, type: !617)
!4184 = !DILocation(line: 562, column: 11, scope: !4174)
!4185 = !DILocation(line: 565, column: 18, scope: !4174)
!4186 = !DILocation(line: 565, column: 16, scope: !4174)
!4187 = !DILocation(line: 566, column: 52, scope: !4174)
!4188 = !DILocation(line: 566, column: 31, scope: !4174)
!4189 = !DILocation(line: 566, column: 19, scope: !4174)
!4190 = !DILocation(line: 566, column: 17, scope: !4174)
!4191 = !DILocation(line: 567, column: 13, scope: !4192)
!4192 = distinct !DILexicalBlock(scope: !4174, file: !1, line: 567, column: 13)
!4193 = !DILocation(line: 567, column: 20, scope: !4192)
!4194 = !DILocation(line: 567, column: 40, scope: !4192)
!4195 = !DILocation(line: 567, column: 43, scope: !4192)
!4196 = !DILocation(line: 567, column: 51, scope: !4192)
!4197 = !DILocation(line: 567, column: 13, scope: !4174)
!4198 = !DILocation(line: 569, column: 44, scope: !4199)
!4199 = distinct !DILexicalBlock(scope: !4192, file: !1, line: 568, column: 9)
!4200 = !DILocation(line: 569, column: 21, scope: !4199)
!4201 = !DILocation(line: 569, column: 19, scope: !4199)
!4202 = !DILocation(line: 570, column: 56, scope: !4199)
!4203 = !DILocation(line: 570, column: 33, scope: !4199)
!4204 = !DILocation(line: 570, column: 21, scope: !4199)
!4205 = !DILocation(line: 570, column: 19, scope: !4199)
!4206 = !DILocation(line: 571, column: 55, scope: !4199)
!4207 = !DILocation(line: 571, column: 32, scope: !4199)
!4208 = !DILocation(line: 571, column: 21, scope: !4199)
!4209 = !DILocation(line: 571, column: 19, scope: !4199)
!4210 = !DILocation(line: 572, column: 39, scope: !4199)
!4211 = !DILocation(line: 572, column: 18, scope: !4199)
!4212 = !DILocation(line: 575, column: 11, scope: !4199)
!4213 = !DILocation(line: 578, column: 15, scope: !4214)
!4214 = distinct !DILexicalBlock(scope: !4174, file: !1, line: 578, column: 9)
!4215 = !DILocation(line: 578, column: 14, scope: !4214)
!4216 = !DILocation(line: 578, column: 19, scope: !4217)
!4217 = distinct !DILexicalBlock(scope: !4214, file: !1, line: 578, column: 9)
!4218 = !DILocation(line: 578, column: 23, scope: !4217)
!4219 = !DILocation(line: 578, column: 21, scope: !4217)
!4220 = !DILocation(line: 578, column: 9, scope: !4214)
!4221 = !DILocation(line: 579, column: 26, scope: !4217)
!4222 = !DILocation(line: 579, column: 32, scope: !4217)
!4223 = !DILocation(line: 579, column: 33, scope: !4217)
!4224 = !DILocation(line: 579, column: 11, scope: !4217)
!4225 = !DILocation(line: 579, column: 19, scope: !4217)
!4226 = !DILocation(line: 579, column: 22, scope: !4217)
!4227 = !DILocation(line: 578, column: 39, scope: !4217)
!4228 = !DILocation(line: 578, column: 9, scope: !4217)
!4229 = distinct !{!4229, !4220, !4230}
!4230 = !DILocation(line: 579, column: 36, scope: !4214)
!4231 = !DILocation(line: 581, column: 15, scope: !4232)
!4232 = distinct !DILexicalBlock(scope: !4174, file: !1, line: 581, column: 9)
!4233 = !DILocation(line: 581, column: 14, scope: !4232)
!4234 = !DILocation(line: 581, column: 19, scope: !4235)
!4235 = distinct !DILexicalBlock(scope: !4232, file: !1, line: 581, column: 9)
!4236 = !DILocation(line: 581, column: 23, scope: !4235)
!4237 = !DILocation(line: 581, column: 21, scope: !4235)
!4238 = !DILocation(line: 581, column: 9, scope: !4232)
!4239 = !DILocation(line: 582, column: 22, scope: !4240)
!4240 = distinct !DILexicalBlock(scope: !4235, file: !1, line: 581, column: 53)
!4241 = !DILocation(line: 582, column: 32, scope: !4240)
!4242 = !DILocation(line: 582, column: 34, scope: !4240)
!4243 = !DILocation(line: 582, column: 33, scope: !4240)
!4244 = !DILocation(line: 582, column: 11, scope: !4240)
!4245 = !DILocation(line: 582, column: 20, scope: !4240)
!4246 = !DILocation(line: 583, column: 22, scope: !4240)
!4247 = !DILocation(line: 583, column: 32, scope: !4240)
!4248 = !DILocation(line: 583, column: 34, scope: !4240)
!4249 = !DILocation(line: 583, column: 33, scope: !4240)
!4250 = !DILocation(line: 583, column: 11, scope: !4240)
!4251 = !DILocation(line: 583, column: 20, scope: !4240)
!4252 = !DILocation(line: 584, column: 11, scope: !4240)
!4253 = !DILocation(line: 584, column: 20, scope: !4240)
!4254 = !DILocation(line: 585, column: 32, scope: !4240)
!4255 = !DILocation(line: 585, column: 39, scope: !4240)
!4256 = !DILocation(line: 585, column: 47, scope: !4240)
!4257 = !DILocation(line: 586, column: 22, scope: !4240)
!4258 = !DILocation(line: 586, column: 32, scope: !4240)
!4259 = !DILocation(line: 586, column: 34, scope: !4240)
!4260 = !DILocation(line: 586, column: 33, scope: !4240)
!4261 = !DILocation(line: 586, column: 50, scope: !4240)
!4262 = !DILocation(line: 585, column: 11, scope: !4240)
!4263 = !DILocation(line: 587, column: 9, scope: !4240)
!4264 = !DILocation(line: 581, column: 44, scope: !4235)
!4265 = !DILocation(line: 581, column: 42, scope: !4235)
!4266 = !DILocation(line: 581, column: 9, scope: !4235)
!4267 = distinct !{!4267, !4238, !4268}
!4268 = !DILocation(line: 587, column: 9, scope: !4232)
!4269 = !DILocation(line: 588, column: 14, scope: !4270)
!4270 = distinct !DILexicalBlock(scope: !4174, file: !1, line: 588, column: 14)
!4271 = !DILocation(line: 588, column: 36, scope: !4270)
!4272 = !DILocation(line: 588, column: 35, scope: !4270)
!4273 = !DILocation(line: 588, column: 31, scope: !4270)
!4274 = !DILocation(line: 588, column: 14, scope: !4174)
!4275 = !DILocation(line: 593, column: 22, scope: !4276)
!4276 = distinct !DILexicalBlock(scope: !4270, file: !1, line: 588, column: 46)
!4277 = !DILocation(line: 593, column: 32, scope: !4276)
!4278 = !DILocation(line: 594, column: 24, scope: !4276)
!4279 = !DILocation(line: 594, column: 34, scope: !4276)
!4280 = !DILocation(line: 594, column: 42, scope: !4276)
!4281 = !DILocation(line: 594, column: 41, scope: !4276)
!4282 = !DILocation(line: 594, column: 50, scope: !4276)
!4283 = !DILocation(line: 594, column: 60, scope: !4276)
!4284 = !DILocation(line: 594, column: 48, scope: !4276)
!4285 = !DILocation(line: 594, column: 20, scope: !4276)
!4286 = !DILocation(line: 593, column: 11, scope: !4276)
!4287 = !DILocation(line: 593, column: 20, scope: !4276)
!4288 = !DILocation(line: 595, column: 22, scope: !4276)
!4289 = !DILocation(line: 595, column: 32, scope: !4276)
!4290 = !DILocation(line: 596, column: 24, scope: !4276)
!4291 = !DILocation(line: 596, column: 34, scope: !4276)
!4292 = !DILocation(line: 596, column: 42, scope: !4276)
!4293 = !DILocation(line: 596, column: 41, scope: !4276)
!4294 = !DILocation(line: 596, column: 50, scope: !4276)
!4295 = !DILocation(line: 596, column: 60, scope: !4276)
!4296 = !DILocation(line: 596, column: 48, scope: !4276)
!4297 = !DILocation(line: 595, column: 38, scope: !4276)
!4298 = !DILocation(line: 595, column: 11, scope: !4276)
!4299 = !DILocation(line: 595, column: 20, scope: !4276)
!4300 = !DILocation(line: 597, column: 11, scope: !4276)
!4301 = !DILocation(line: 597, column: 20, scope: !4276)
!4302 = !DILocation(line: 598, column: 16, scope: !4303)
!4303 = distinct !DILexicalBlock(scope: !4276, file: !1, line: 598, column: 16)
!4304 = !DILocation(line: 598, column: 26, scope: !4303)
!4305 = !DILocation(line: 598, column: 16, scope: !4276)
!4306 = !DILocalVariable(name: "uv2", scope: !4307, file: !1, line: 601, type: !4308)
!4307 = distinct !DILexicalBlock(scope: !4303, file: !1, line: 598, column: 33)
!4308 = !DICompositeType(tag: DW_TAG_array_type, baseType: !638, size: 128, elements: !4309)
!4309 = !{!4310}
!4310 = !DISubrange(count: 2)
!4311 = !DILocation(line: 601, column: 15, scope: !4307)
!4312 = !DILocation(line: 602, column: 22, scope: !4307)
!4313 = !DILocation(line: 602, column: 37, scope: !4307)
!4314 = !DILocation(line: 602, column: 35, scope: !4307)
!4315 = !DILocation(line: 602, column: 52, scope: !4307)
!4316 = !DILocation(line: 602, column: 50, scope: !4307)
!4317 = !DILocation(line: 602, column: 13, scope: !4307)
!4318 = !DILocation(line: 602, column: 20, scope: !4307)
!4319 = !DILocation(line: 603, column: 22, scope: !4307)
!4320 = !DILocation(line: 603, column: 37, scope: !4307)
!4321 = !DILocation(line: 603, column: 35, scope: !4307)
!4322 = !DILocation(line: 603, column: 52, scope: !4307)
!4323 = !DILocation(line: 603, column: 50, scope: !4307)
!4324 = !DILocation(line: 603, column: 13, scope: !4307)
!4325 = !DILocation(line: 603, column: 20, scope: !4307)
!4326 = !DILocation(line: 604, column: 34, scope: !4307)
!4327 = !DILocation(line: 604, column: 41, scope: !4307)
!4328 = !DILocation(line: 604, column: 49, scope: !4307)
!4329 = !DILocation(line: 604, column: 55, scope: !4307)
!4330 = !DILocation(line: 604, column: 13, scope: !4307)
!4331 = !DILocation(line: 605, column: 11, scope: !4307)
!4332 = !DILocation(line: 608, column: 34, scope: !4333)
!4333 = distinct !DILexicalBlock(scope: !4303, file: !1, line: 606, column: 16)
!4334 = !DILocation(line: 608, column: 41, scope: !4333)
!4335 = !DILocation(line: 608, column: 49, scope: !4333)
!4336 = !DILocation(line: 609, column: 21, scope: !4333)
!4337 = !DILocation(line: 609, column: 31, scope: !4333)
!4338 = !DILocation(line: 609, column: 47, scope: !4333)
!4339 = !DILocation(line: 608, column: 13, scope: !4333)
!4340 = !DILocation(line: 611, column: 9, scope: !4276)
!4341 = !DILocation(line: 613, column: 39, scope: !4174)
!4342 = !DILocation(line: 613, column: 46, scope: !4174)
!4343 = !DILocation(line: 613, column: 58, scope: !4174)
!4344 = !DILocation(line: 613, column: 16, scope: !4174)
!4345 = !DILocation(line: 613, column: 15, scope: !4174)
!4346 = !DILocation(line: 614, column: 41, scope: !4174)
!4347 = !DILocation(line: 614, column: 18, scope: !4174)
!4348 = !DILocation(line: 614, column: 16, scope: !4174)
!4349 = !DILocation(line: 615, column: 54, scope: !4174)
!4350 = !DILocation(line: 615, column: 31, scope: !4174)
!4351 = !DILocation(line: 615, column: 19, scope: !4174)
!4352 = !DILocation(line: 615, column: 17, scope: !4174)
!4353 = !DILocation(line: 616, column: 14, scope: !4354)
!4354 = distinct !DILexicalBlock(scope: !4174, file: !1, line: 616, column: 14)
!4355 = !DILocation(line: 616, column: 21, scope: !4354)
!4356 = !DILocation(line: 616, column: 14, scope: !4174)
!4357 = !DILocation(line: 617, column: 53, scope: !4358)
!4358 = distinct !DILexicalBlock(scope: !4354, file: !1, line: 616, column: 38)
!4359 = !DILocation(line: 617, column: 30, scope: !4358)
!4360 = !DILocation(line: 617, column: 19, scope: !4358)
!4361 = !DILocation(line: 617, column: 17, scope: !4358)
!4362 = !DILocation(line: 618, column: 39, scope: !4358)
!4363 = !DILocation(line: 620, column: 62, scope: !4358)
!4364 = !DILocation(line: 620, column: 61, scope: !4358)
!4365 = !DILocation(line: 620, column: 15, scope: !4358)
!4366 = !DILocation(line: 618, column: 18, scope: !4358)
!4367 = !DILocation(line: 621, column: 11, scope: !4358)
!4368 = !DILocation(line: 624, column: 14, scope: !4106)
!4369 = !DILocation(line: 624, column: 7, scope: !4106)
!4370 = !DILocalVariable(name: "inverse", scope: !4371, file: !1, line: 641, type: !1201)
!4371 = distinct !DILexicalBlock(scope: !4107, file: !1, line: 627, column: 5)
!4372 = !DILocation(line: 641, column: 14, scope: !4371)
!4373 = !DILocation(line: 642, column: 11, scope: !4374)
!4374 = distinct !DILexicalBlock(scope: !4371, file: !1, line: 642, column: 11)
!4375 = !DILocation(line: 642, column: 28, scope: !4374)
!4376 = !DILocation(line: 642, column: 11, scope: !4371)
!4377 = !DILocation(line: 643, column: 51, scope: !4378)
!4378 = distinct !DILexicalBlock(scope: !4374, file: !1, line: 642, column: 34)
!4379 = !DILocation(line: 643, column: 28, scope: !4378)
!4380 = !DILocation(line: 643, column: 17, scope: !4378)
!4381 = !DILocation(line: 643, column: 15, scope: !4378)
!4382 = !DILocation(line: 644, column: 37, scope: !4378)
!4383 = !DILocation(line: 646, column: 62, scope: !4378)
!4384 = !DILocation(line: 646, column: 61, scope: !4378)
!4385 = !DILocation(line: 646, column: 15, scope: !4378)
!4386 = !DILocation(line: 644, column: 16, scope: !4378)
!4387 = !DILocation(line: 647, column: 9, scope: !4378)
!4388 = !DILocation(line: 650, column: 12, scope: !4389)
!4389 = distinct !DILexicalBlock(scope: !4371, file: !1, line: 650, column: 7)
!4390 = !DILocation(line: 650, column: 11, scope: !4389)
!4391 = !DILocation(line: 650, column: 16, scope: !4392)
!4392 = distinct !DILexicalBlock(scope: !4389, file: !1, line: 650, column: 7)
!4393 = !DILocation(line: 650, column: 17, scope: !4392)
!4394 = !DILocation(line: 650, column: 7, scope: !4389)
!4395 = !DILocation(line: 651, column: 22, scope: !4392)
!4396 = !DILocation(line: 651, column: 32, scope: !4392)
!4397 = !DILocation(line: 651, column: 17, scope: !4392)
!4398 = !DILocation(line: 651, column: 9, scope: !4392)
!4399 = !DILocation(line: 651, column: 20, scope: !4392)
!4400 = !DILocation(line: 650, column: 24, scope: !4392)
!4401 = !DILocation(line: 650, column: 7, scope: !4392)
!4402 = distinct !{!4402, !4394, !4403}
!4403 = !DILocation(line: 651, column: 33, scope: !4389)
!4404 = !DILocation(line: 652, column: 32, scope: !4371)
!4405 = !DILocation(line: 652, column: 7, scope: !4371)
!4406 = !DILocation(line: 653, column: 32, scope: !4371)
!4407 = !DILocation(line: 653, column: 41, scope: !4371)
!4408 = !DILocation(line: 653, column: 7, scope: !4371)
!4409 = !DILocation(line: 654, column: 8, scope: !4371)
!4410 = !DILocation(line: 654, column: 15, scope: !4371)
!4411 = !DILocation(line: 656, column: 14, scope: !4371)
!4412 = !DILocation(line: 656, column: 7, scope: !4371)
!4413 = !DILocalVariable(name: "cosine", scope: !4414, file: !1, line: 683, type: !638)
!4414 = distinct !DILexicalBlock(scope: !4107, file: !1, line: 659, column: 5)
!4415 = !DILocation(line: 683, column: 9, scope: !4414)
!4416 = !DILocalVariable(name: "sine", scope: !4414, file: !1, line: 683, type: !638)
!4417 = !DILocation(line: 683, column: 17, scope: !4414)
!4418 = !DILocalVariable(name: "x", scope: !4414, file: !1, line: 684, type: !638)
!4419 = !DILocation(line: 684, column: 9, scope: !4414)
!4420 = !DILocalVariable(name: "y", scope: !4414, file: !1, line: 684, type: !638)
!4421 = !DILocation(line: 684, column: 11, scope: !4414)
!4422 = !DILocalVariable(name: "sx", scope: !4414, file: !1, line: 684, type: !638)
!4423 = !DILocation(line: 684, column: 13, scope: !4414)
!4424 = !DILocalVariable(name: "sy", scope: !4414, file: !1, line: 684, type: !638)
!4425 = !DILocation(line: 684, column: 16, scope: !4414)
!4426 = !DILocalVariable(name: "a", scope: !4414, file: !1, line: 684, type: !638)
!4427 = !DILocation(line: 684, column: 19, scope: !4414)
!4428 = !DILocalVariable(name: "nx", scope: !4414, file: !1, line: 684, type: !638)
!4429 = !DILocation(line: 684, column: 21, scope: !4414)
!4430 = !DILocalVariable(name: "ny", scope: !4414, file: !1, line: 684, type: !638)
!4431 = !DILocation(line: 684, column: 24, scope: !4414)
!4432 = !DILocation(line: 687, column: 25, scope: !4414)
!4433 = !DILocation(line: 687, column: 32, scope: !4414)
!4434 = !DILocation(line: 687, column: 16, scope: !4414)
!4435 = !DILocation(line: 687, column: 40, scope: !4414)
!4436 = !DILocation(line: 687, column: 55, scope: !4414)
!4437 = !DILocation(line: 687, column: 62, scope: !4414)
!4438 = !DILocation(line: 687, column: 67, scope: !4414)
!4439 = !DILocation(line: 687, column: 47, scope: !4414)
!4440 = !DILocation(line: 687, column: 45, scope: !4414)
!4441 = !DILocation(line: 687, column: 14, scope: !4414)
!4442 = !DILocation(line: 687, column: 9, scope: !4414)
!4443 = !DILocation(line: 688, column: 25, scope: !4414)
!4444 = !DILocation(line: 688, column: 32, scope: !4414)
!4445 = !DILocation(line: 688, column: 16, scope: !4414)
!4446 = !DILocation(line: 688, column: 37, scope: !4414)
!4447 = !DILocation(line: 688, column: 55, scope: !4414)
!4448 = !DILocation(line: 688, column: 62, scope: !4414)
!4449 = !DILocation(line: 688, column: 67, scope: !4414)
!4450 = !DILocation(line: 688, column: 47, scope: !4414)
!4451 = !DILocation(line: 688, column: 45, scope: !4414)
!4452 = !DILocation(line: 688, column: 14, scope: !4414)
!4453 = !DILocation(line: 688, column: 9, scope: !4414)
!4454 = !DILocation(line: 689, column: 15, scope: !4414)
!4455 = !DILocation(line: 689, column: 10, scope: !4414)
!4456 = !DILocation(line: 690, column: 16, scope: !4414)
!4457 = !DILocation(line: 690, column: 7, scope: !4414)
!4458 = !DILocation(line: 692, column: 51, scope: !4459)
!4459 = distinct !DILexicalBlock(scope: !4414, file: !1, line: 690, column: 35)
!4460 = !DILocation(line: 692, column: 28, scope: !4459)
!4461 = !DILocation(line: 692, column: 17, scope: !4459)
!4462 = !DILocation(line: 692, column: 15, scope: !4459)
!4463 = !DILocation(line: 693, column: 37, scope: !4459)
!4464 = !DILocation(line: 695, column: 62, scope: !4459)
!4465 = !DILocation(line: 695, column: 61, scope: !4459)
!4466 = !DILocation(line: 695, column: 15, scope: !4459)
!4467 = !DILocation(line: 693, column: 16, scope: !4459)
!4468 = !DILocation(line: 696, column: 9, scope: !4459)
!4469 = !DILocation(line: 698, column: 13, scope: !4459)
!4470 = !DILocation(line: 698, column: 11, scope: !4459)
!4471 = !DILocation(line: 699, column: 9, scope: !4459)
!4472 = !DILocation(line: 701, column: 19, scope: !4459)
!4473 = !DILocation(line: 701, column: 17, scope: !4459)
!4474 = !DILocation(line: 701, column: 12, scope: !4459)
!4475 = !DILocation(line: 702, column: 13, scope: !4459)
!4476 = !DILocation(line: 702, column: 11, scope: !4459)
!4477 = !DILocation(line: 703, column: 9, scope: !4459)
!4478 = !DILocation(line: 705, column: 18, scope: !4459)
!4479 = !DILocation(line: 705, column: 16, scope: !4459)
!4480 = !DILocation(line: 705, column: 11, scope: !4459)
!4481 = !DILocation(line: 706, column: 18, scope: !4459)
!4482 = !DILocation(line: 706, column: 16, scope: !4459)
!4483 = !DILocation(line: 706, column: 11, scope: !4459)
!4484 = !DILocation(line: 707, column: 18, scope: !4459)
!4485 = !DILocation(line: 707, column: 9, scope: !4459)
!4486 = !DILocation(line: 709, column: 15, scope: !4487)
!4487 = distinct !DILexicalBlock(scope: !4459, file: !1, line: 707, column: 37)
!4488 = !DILocation(line: 709, column: 13, scope: !4487)
!4489 = !DILocation(line: 710, column: 11, scope: !4487)
!4490 = !DILocation(line: 712, column: 21, scope: !4487)
!4491 = !DILocation(line: 712, column: 19, scope: !4487)
!4492 = !DILocation(line: 712, column: 14, scope: !4487)
!4493 = !DILocation(line: 713, column: 15, scope: !4487)
!4494 = !DILocation(line: 713, column: 13, scope: !4487)
!4495 = !DILocation(line: 714, column: 11, scope: !4487)
!4496 = !DILocation(line: 716, column: 16, scope: !4487)
!4497 = !DILocation(line: 716, column: 14, scope: !4487)
!4498 = !DILocation(line: 717, column: 16, scope: !4487)
!4499 = !DILocation(line: 717, column: 14, scope: !4487)
!4500 = !DILocation(line: 718, column: 15, scope: !4487)
!4501 = !DILocation(line: 718, column: 13, scope: !4487)
!4502 = !DILocation(line: 719, column: 11, scope: !4487)
!4503 = !DILocation(line: 721, column: 21, scope: !4487)
!4504 = !DILocation(line: 721, column: 19, scope: !4487)
!4505 = !DILocation(line: 721, column: 14, scope: !4487)
!4506 = !DILocation(line: 722, column: 15, scope: !4487)
!4507 = !DILocation(line: 722, column: 13, scope: !4487)
!4508 = !DILocation(line: 723, column: 16, scope: !4487)
!4509 = !DILocation(line: 723, column: 14, scope: !4487)
!4510 = !DILocation(line: 724, column: 16, scope: !4487)
!4511 = !DILocation(line: 724, column: 14, scope: !4487)
!4512 = !DILocation(line: 725, column: 11, scope: !4487)
!4513 = !DILocation(line: 727, column: 16, scope: !4487)
!4514 = !DILocation(line: 727, column: 14, scope: !4487)
!4515 = !DILocation(line: 728, column: 16, scope: !4487)
!4516 = !DILocation(line: 728, column: 14, scope: !4487)
!4517 = !DILocation(line: 729, column: 15, scope: !4487)
!4518 = !DILocation(line: 729, column: 13, scope: !4487)
!4519 = !DILocation(line: 730, column: 16, scope: !4487)
!4520 = !DILocation(line: 730, column: 14, scope: !4487)
!4521 = !DILocation(line: 731, column: 16, scope: !4487)
!4522 = !DILocation(line: 731, column: 14, scope: !4487)
!4523 = !DILocation(line: 732, column: 11, scope: !4487)
!4524 = !DILocation(line: 734, column: 53, scope: !4487)
!4525 = !DILocation(line: 734, column: 30, scope: !4487)
!4526 = !DILocation(line: 734, column: 19, scope: !4487)
!4527 = !DILocation(line: 734, column: 17, scope: !4487)
!4528 = !DILocation(line: 735, column: 39, scope: !4487)
!4529 = !DILocation(line: 737, column: 62, scope: !4487)
!4530 = !DILocation(line: 737, column: 61, scope: !4487)
!4531 = !DILocation(line: 737, column: 15, scope: !4487)
!4532 = !DILocation(line: 735, column: 18, scope: !4487)
!4533 = !DILocation(line: 738, column: 11, scope: !4487)
!4534 = !DILocation(line: 740, column: 9, scope: !4459)
!4535 = !DILocation(line: 743, column: 17, scope: !4536)
!4536 = distinct !DILexicalBlock(scope: !4414, file: !1, line: 743, column: 12)
!4537 = !DILocation(line: 743, column: 12, scope: !4536)
!4538 = !DILocation(line: 743, column: 21, scope: !4536)
!4539 = !DILocation(line: 743, column: 37, scope: !4536)
!4540 = !DILocation(line: 743, column: 45, scope: !4536)
!4541 = !DILocation(line: 743, column: 40, scope: !4536)
!4542 = !DILocation(line: 743, column: 49, scope: !4536)
!4543 = !DILocation(line: 743, column: 12, scope: !4414)
!4544 = !DILocation(line: 744, column: 51, scope: !4545)
!4545 = distinct !DILexicalBlock(scope: !4536, file: !1, line: 743, column: 67)
!4546 = !DILocation(line: 744, column: 28, scope: !4545)
!4547 = !DILocation(line: 744, column: 17, scope: !4545)
!4548 = !DILocation(line: 744, column: 15, scope: !4545)
!4549 = !DILocation(line: 745, column: 37, scope: !4545)
!4550 = !DILocation(line: 747, column: 62, scope: !4545)
!4551 = !DILocation(line: 747, column: 61, scope: !4545)
!4552 = !DILocation(line: 747, column: 15, scope: !4545)
!4553 = !DILocation(line: 745, column: 16, scope: !4545)
!4554 = !DILocation(line: 748, column: 9, scope: !4545)
!4555 = !DILocation(line: 751, column: 26, scope: !4414)
!4556 = !DILocation(line: 751, column: 9, scope: !4414)
!4557 = !DILocation(line: 751, column: 8, scope: !4414)
!4558 = !DILocation(line: 751, column: 41, scope: !4414)
!4559 = !DILocation(line: 751, column: 37, scope: !4414)
!4560 = !DILocation(line: 751, column: 36, scope: !4414)
!4561 = !DILocation(line: 751, column: 54, scope: !4414)
!4562 = !DILocation(line: 751, column: 50, scope: !4414)
!4563 = !DILocation(line: 751, column: 49, scope: !4414)
!4564 = !DILocation(line: 753, column: 8, scope: !4414)
!4565 = !DILocation(line: 753, column: 15, scope: !4414)
!4566 = !DILocation(line: 754, column: 16, scope: !4414)
!4567 = !DILocation(line: 754, column: 23, scope: !4414)
!4568 = !DILocation(line: 754, column: 22, scope: !4414)
!4569 = !DILocation(line: 754, column: 7, scope: !4414)
!4570 = !DILocation(line: 754, column: 15, scope: !4414)
!4571 = !DILocation(line: 755, column: 16, scope: !4414)
!4572 = !DILocation(line: 755, column: 21, scope: !4414)
!4573 = !DILocation(line: 755, column: 20, scope: !4414)
!4574 = !DILocation(line: 755, column: 7, scope: !4414)
!4575 = !DILocation(line: 755, column: 15, scope: !4414)
!4576 = !DILocation(line: 756, column: 16, scope: !4414)
!4577 = !DILocation(line: 756, column: 18, scope: !4414)
!4578 = !DILocation(line: 756, column: 21, scope: !4414)
!4579 = !DILocation(line: 756, column: 20, scope: !4414)
!4580 = !DILocation(line: 756, column: 17, scope: !4414)
!4581 = !DILocation(line: 756, column: 30, scope: !4414)
!4582 = !DILocation(line: 756, column: 33, scope: !4414)
!4583 = !DILocation(line: 756, column: 32, scope: !4414)
!4584 = !DILocation(line: 756, column: 29, scope: !4414)
!4585 = !DILocation(line: 756, column: 7, scope: !4414)
!4586 = !DILocation(line: 756, column: 15, scope: !4414)
!4587 = !DILocation(line: 757, column: 18, scope: !4414)
!4588 = !DILocation(line: 757, column: 17, scope: !4414)
!4589 = !DILocation(line: 757, column: 24, scope: !4414)
!4590 = !DILocation(line: 757, column: 23, scope: !4414)
!4591 = !DILocation(line: 757, column: 7, scope: !4414)
!4592 = !DILocation(line: 757, column: 15, scope: !4414)
!4593 = !DILocation(line: 758, column: 16, scope: !4414)
!4594 = !DILocation(line: 758, column: 23, scope: !4414)
!4595 = !DILocation(line: 758, column: 22, scope: !4414)
!4596 = !DILocation(line: 758, column: 7, scope: !4414)
!4597 = !DILocation(line: 758, column: 15, scope: !4414)
!4598 = !DILocation(line: 759, column: 16, scope: !4414)
!4599 = !DILocation(line: 759, column: 18, scope: !4414)
!4600 = !DILocation(line: 759, column: 21, scope: !4414)
!4601 = !DILocation(line: 759, column: 20, scope: !4414)
!4602 = !DILocation(line: 759, column: 17, scope: !4414)
!4603 = !DILocation(line: 759, column: 30, scope: !4414)
!4604 = !DILocation(line: 759, column: 33, scope: !4414)
!4605 = !DILocation(line: 759, column: 32, scope: !4414)
!4606 = !DILocation(line: 759, column: 29, scope: !4414)
!4607 = !DILocation(line: 759, column: 7, scope: !4414)
!4608 = !DILocation(line: 759, column: 15, scope: !4414)
!4609 = !DILocation(line: 760, column: 14, scope: !4414)
!4610 = !DILocation(line: 760, column: 7, scope: !4414)
!4611 = !DILocalVariable(name: "matrix", scope: !4612, file: !1, line: 794, type: !827)
!4612 = distinct !DILexicalBlock(scope: !4107, file: !1, line: 763, column: 5)
!4613 = !DILocation(line: 794, column: 11, scope: !4612)
!4614 = !DILocalVariable(name: "vectors", scope: !4612, file: !1, line: 795, type: !4615)
!4615 = !DICompositeType(tag: DW_TAG_array_type, baseType: !821, size: 64, elements: !4616)
!4616 = !{!4617}
!4617 = !DISubrange(count: 1)
!4618 = !DILocation(line: 795, column: 10, scope: !4612)
!4619 = !DILocalVariable(name: "terms", scope: !4612, file: !1, line: 796, type: !1201)
!4620 = !DILocation(line: 796, column: 9, scope: !4612)
!4621 = !DILocalVariable(name: "cp_u", scope: !4612, file: !1, line: 799, type: !612)
!4622 = !DILocation(line: 799, column: 9, scope: !4612)
!4623 = !DILocation(line: 799, column: 16, scope: !4612)
!4624 = !DILocalVariable(name: "cp_v", scope: !4612, file: !1, line: 800, type: !612)
!4625 = !DILocation(line: 800, column: 9, scope: !4612)
!4626 = !DILocation(line: 800, column: 16, scope: !4612)
!4627 = !DILocation(line: 800, column: 25, scope: !4612)
!4628 = !DILocalVariable(name: "status", scope: !4612, file: !1, line: 803, type: !617)
!4629 = !DILocation(line: 803, column: 9, scope: !4612)
!4630 = !DILocation(line: 805, column: 12, scope: !4631)
!4631 = distinct !DILexicalBlock(scope: !4612, file: !1, line: 805, column: 12)
!4632 = !DILocation(line: 805, column: 29, scope: !4631)
!4633 = !DILocation(line: 805, column: 28, scope: !4631)
!4634 = !DILocation(line: 805, column: 37, scope: !4631)
!4635 = !DILocation(line: 805, column: 42, scope: !4631)
!4636 = !DILocation(line: 806, column: 12, scope: !4631)
!4637 = !DILocation(line: 806, column: 31, scope: !4631)
!4638 = !DILocation(line: 806, column: 38, scope: !4631)
!4639 = !DILocation(line: 806, column: 29, scope: !4631)
!4640 = !DILocation(line: 805, column: 12, scope: !4612)
!4641 = !DILocation(line: 807, column: 37, scope: !4642)
!4642 = distinct !DILexicalBlock(scope: !4631, file: !1, line: 806, column: 43)
!4643 = !DILocation(line: 809, column: 62, scope: !4642)
!4644 = !DILocation(line: 809, column: 61, scope: !4642)
!4645 = !DILocation(line: 809, column: 15, scope: !4642)
!4646 = !DILocation(line: 807, column: 16, scope: !4642)
!4647 = !DILocation(line: 810, column: 49, scope: !4642)
!4648 = !DILocation(line: 810, column: 26, scope: !4642)
!4649 = !DILocation(line: 810, column: 15, scope: !4642)
!4650 = !DILocation(line: 810, column: 14, scope: !4642)
!4651 = !DILocation(line: 811, column: 9, scope: !4642)
!4652 = !DILocation(line: 814, column: 22, scope: !4612)
!4653 = !DILocation(line: 814, column: 7, scope: !4612)
!4654 = !DILocation(line: 814, column: 18, scope: !4612)
!4655 = !DILocation(line: 816, column: 16, scope: !4612)
!4656 = !DILocation(line: 816, column: 14, scope: !4612)
!4657 = !DILocation(line: 817, column: 11, scope: !4658)
!4658 = distinct !DILexicalBlock(scope: !4612, file: !1, line: 817, column: 11)
!4659 = !DILocation(line: 817, column: 18, scope: !4658)
!4660 = !DILocation(line: 817, column: 11, scope: !4612)
!4661 = !DILocation(line: 818, column: 37, scope: !4662)
!4662 = distinct !DILexicalBlock(scope: !4658, file: !1, line: 817, column: 39)
!4663 = !DILocation(line: 818, column: 16, scope: !4662)
!4664 = !DILocation(line: 821, column: 9, scope: !4662)
!4665 = !DILocation(line: 824, column: 13, scope: !4666)
!4666 = distinct !DILexicalBlock(scope: !4612, file: !1, line: 824, column: 7)
!4667 = !DILocation(line: 824, column: 12, scope: !4666)
!4668 = !DILocation(line: 824, column: 17, scope: !4669)
!4669 = distinct !DILexicalBlock(scope: !4666, file: !1, line: 824, column: 7)
!4670 = !DILocation(line: 824, column: 21, scope: !4669)
!4671 = !DILocation(line: 824, column: 19, scope: !4669)
!4672 = !DILocation(line: 824, column: 7, scope: !4666)
!4673 = !DILocation(line: 825, column: 18, scope: !4674)
!4674 = distinct !DILexicalBlock(scope: !4669, file: !1, line: 824, column: 45)
!4675 = !DILocation(line: 825, column: 28, scope: !4674)
!4676 = !DILocation(line: 825, column: 30, scope: !4674)
!4677 = !DILocation(line: 825, column: 29, scope: !4674)
!4678 = !DILocation(line: 825, column: 9, scope: !4674)
!4679 = !DILocation(line: 825, column: 17, scope: !4674)
!4680 = !DILocation(line: 826, column: 18, scope: !4674)
!4681 = !DILocation(line: 826, column: 28, scope: !4674)
!4682 = !DILocation(line: 826, column: 30, scope: !4674)
!4683 = !DILocation(line: 826, column: 29, scope: !4674)
!4684 = !DILocation(line: 826, column: 9, scope: !4674)
!4685 = !DILocation(line: 826, column: 17, scope: !4674)
!4686 = !DILocation(line: 827, column: 9, scope: !4674)
!4687 = !DILocation(line: 827, column: 17, scope: !4674)
!4688 = !DILocation(line: 828, column: 9, scope: !4674)
!4689 = !DILocation(line: 828, column: 17, scope: !4674)
!4690 = !DILocation(line: 829, column: 9, scope: !4674)
!4691 = !DILocation(line: 829, column: 17, scope: !4674)
!4692 = !DILocation(line: 830, column: 9, scope: !4674)
!4693 = !DILocation(line: 830, column: 17, scope: !4674)
!4694 = !DILocation(line: 831, column: 19, scope: !4674)
!4695 = !DILocation(line: 831, column: 18, scope: !4674)
!4696 = !DILocation(line: 831, column: 28, scope: !4674)
!4697 = !DILocation(line: 831, column: 38, scope: !4674)
!4698 = !DILocation(line: 831, column: 40, scope: !4674)
!4699 = !DILocation(line: 831, column: 39, scope: !4674)
!4700 = !DILocation(line: 831, column: 27, scope: !4674)
!4701 = !DILocation(line: 831, column: 9, scope: !4674)
!4702 = !DILocation(line: 831, column: 17, scope: !4674)
!4703 = !DILocation(line: 832, column: 19, scope: !4674)
!4704 = !DILocation(line: 832, column: 18, scope: !4674)
!4705 = !DILocation(line: 832, column: 28, scope: !4674)
!4706 = !DILocation(line: 832, column: 38, scope: !4674)
!4707 = !DILocation(line: 832, column: 40, scope: !4674)
!4708 = !DILocation(line: 832, column: 39, scope: !4674)
!4709 = !DILocation(line: 832, column: 27, scope: !4674)
!4710 = !DILocation(line: 832, column: 9, scope: !4674)
!4711 = !DILocation(line: 832, column: 17, scope: !4674)
!4712 = !DILocation(line: 833, column: 30, scope: !4674)
!4713 = !DILocation(line: 833, column: 37, scope: !4674)
!4714 = !DILocation(line: 833, column: 45, scope: !4674)
!4715 = !DILocation(line: 833, column: 53, scope: !4674)
!4716 = !DILocation(line: 833, column: 63, scope: !4674)
!4717 = !DILocation(line: 833, column: 65, scope: !4674)
!4718 = !DILocation(line: 833, column: 64, scope: !4674)
!4719 = !DILocation(line: 833, column: 9, scope: !4674)
!4720 = !DILocation(line: 836, column: 9, scope: !4674)
!4721 = !DILocation(line: 836, column: 17, scope: !4674)
!4722 = !DILocation(line: 837, column: 9, scope: !4674)
!4723 = !DILocation(line: 837, column: 17, scope: !4674)
!4724 = !DILocation(line: 838, column: 9, scope: !4674)
!4725 = !DILocation(line: 838, column: 17, scope: !4674)
!4726 = !DILocation(line: 839, column: 18, scope: !4674)
!4727 = !DILocation(line: 839, column: 28, scope: !4674)
!4728 = !DILocation(line: 839, column: 30, scope: !4674)
!4729 = !DILocation(line: 839, column: 29, scope: !4674)
!4730 = !DILocation(line: 839, column: 9, scope: !4674)
!4731 = !DILocation(line: 839, column: 17, scope: !4674)
!4732 = !DILocation(line: 840, column: 18, scope: !4674)
!4733 = !DILocation(line: 840, column: 28, scope: !4674)
!4734 = !DILocation(line: 840, column: 30, scope: !4674)
!4735 = !DILocation(line: 840, column: 29, scope: !4674)
!4736 = !DILocation(line: 840, column: 9, scope: !4674)
!4737 = !DILocation(line: 840, column: 17, scope: !4674)
!4738 = !DILocation(line: 841, column: 9, scope: !4674)
!4739 = !DILocation(line: 841, column: 17, scope: !4674)
!4740 = !DILocation(line: 842, column: 19, scope: !4674)
!4741 = !DILocation(line: 842, column: 18, scope: !4674)
!4742 = !DILocation(line: 842, column: 28, scope: !4674)
!4743 = !DILocation(line: 842, column: 38, scope: !4674)
!4744 = !DILocation(line: 842, column: 40, scope: !4674)
!4745 = !DILocation(line: 842, column: 39, scope: !4674)
!4746 = !DILocation(line: 842, column: 27, scope: !4674)
!4747 = !DILocation(line: 842, column: 9, scope: !4674)
!4748 = !DILocation(line: 842, column: 17, scope: !4674)
!4749 = !DILocation(line: 843, column: 19, scope: !4674)
!4750 = !DILocation(line: 843, column: 18, scope: !4674)
!4751 = !DILocation(line: 843, column: 28, scope: !4674)
!4752 = !DILocation(line: 843, column: 38, scope: !4674)
!4753 = !DILocation(line: 843, column: 40, scope: !4674)
!4754 = !DILocation(line: 843, column: 39, scope: !4674)
!4755 = !DILocation(line: 843, column: 27, scope: !4674)
!4756 = !DILocation(line: 843, column: 9, scope: !4674)
!4757 = !DILocation(line: 843, column: 17, scope: !4674)
!4758 = !DILocation(line: 844, column: 30, scope: !4674)
!4759 = !DILocation(line: 844, column: 37, scope: !4674)
!4760 = !DILocation(line: 844, column: 45, scope: !4674)
!4761 = !DILocation(line: 844, column: 53, scope: !4674)
!4762 = !DILocation(line: 844, column: 63, scope: !4674)
!4763 = !DILocation(line: 844, column: 65, scope: !4674)
!4764 = !DILocation(line: 844, column: 64, scope: !4674)
!4765 = !DILocation(line: 844, column: 9, scope: !4674)
!4766 = !DILocation(line: 846, column: 7, scope: !4674)
!4767 = !DILocation(line: 824, column: 40, scope: !4669)
!4768 = !DILocation(line: 824, column: 7, scope: !4669)
!4769 = distinct !{!4769, !4672, !4770}
!4770 = !DILocation(line: 846, column: 7, scope: !4666)
!4771 = !DILocation(line: 848, column: 37, scope: !4612)
!4772 = !DILocation(line: 848, column: 44, scope: !4612)
!4773 = !DILocation(line: 848, column: 14, scope: !4612)
!4774 = !DILocation(line: 848, column: 13, scope: !4612)
!4775 = !DILocation(line: 849, column: 39, scope: !4612)
!4776 = !DILocation(line: 849, column: 16, scope: !4612)
!4777 = !DILocation(line: 849, column: 14, scope: !4612)
!4778 = !DILocation(line: 850, column: 12, scope: !4779)
!4779 = distinct !DILexicalBlock(scope: !4612, file: !1, line: 850, column: 12)
!4780 = !DILocation(line: 850, column: 19, scope: !4779)
!4781 = !DILocation(line: 850, column: 12, scope: !4612)
!4782 = !DILocation(line: 851, column: 51, scope: !4783)
!4783 = distinct !DILexicalBlock(scope: !4779, file: !1, line: 850, column: 36)
!4784 = !DILocation(line: 851, column: 28, scope: !4783)
!4785 = !DILocation(line: 851, column: 17, scope: !4783)
!4786 = !DILocation(line: 851, column: 15, scope: !4783)
!4787 = !DILocation(line: 852, column: 37, scope: !4783)
!4788 = !DILocation(line: 854, column: 60, scope: !4783)
!4789 = !DILocation(line: 854, column: 59, scope: !4783)
!4790 = !DILocation(line: 854, column: 13, scope: !4783)
!4791 = !DILocation(line: 852, column: 16, scope: !4783)
!4792 = !DILocation(line: 855, column: 9, scope: !4783)
!4793 = !DILocation(line: 863, column: 18, scope: !4612)
!4794 = !DILocation(line: 863, column: 27, scope: !4612)
!4795 = !DILocation(line: 863, column: 37, scope: !4612)
!4796 = !DILocation(line: 863, column: 26, scope: !4612)
!4797 = !DILocation(line: 864, column: 25, scope: !4612)
!4798 = !DILocation(line: 864, column: 34, scope: !4612)
!4799 = !DILocation(line: 864, column: 44, scope: !4612)
!4800 = !DILocation(line: 864, column: 33, scope: !4612)
!4801 = !DILocation(line: 864, column: 23, scope: !4612)
!4802 = !DILocation(line: 864, column: 50, scope: !4612)
!4803 = !DILocation(line: 863, column: 7, scope: !4612)
!4804 = !DILocation(line: 863, column: 16, scope: !4612)
!4805 = !DILocation(line: 865, column: 19, scope: !4612)
!4806 = !DILocation(line: 865, column: 28, scope: !4612)
!4807 = !DILocation(line: 865, column: 18, scope: !4612)
!4808 = !DILocation(line: 865, column: 7, scope: !4612)
!4809 = !DILocation(line: 865, column: 16, scope: !4612)
!4810 = !DILocation(line: 867, column: 14, scope: !4612)
!4811 = !DILocation(line: 867, column: 7, scope: !4612)
!4812 = !DILocation(line: 874, column: 11, scope: !4813)
!4813 = distinct !DILexicalBlock(scope: !4814, file: !1, line: 874, column: 11)
!4814 = distinct !DILexicalBlock(scope: !4107, file: !1, line: 870, column: 5)
!4815 = !DILocation(line: 874, column: 28, scope: !4813)
!4816 = !DILocation(line: 874, column: 11, scope: !4814)
!4817 = !DILocation(line: 875, column: 37, scope: !4818)
!4818 = distinct !DILexicalBlock(scope: !4813, file: !1, line: 874, column: 34)
!4819 = !DILocation(line: 877, column: 62, scope: !4818)
!4820 = !DILocation(line: 877, column: 61, scope: !4818)
!4821 = !DILocation(line: 877, column: 15, scope: !4818)
!4822 = !DILocation(line: 875, column: 16, scope: !4818)
!4823 = !DILocation(line: 878, column: 9, scope: !4818)
!4824 = !DILocation(line: 881, column: 37, scope: !4814)
!4825 = !DILocation(line: 881, column: 48, scope: !4814)
!4826 = !DILocation(line: 881, column: 7, scope: !4814)
!4827 = !DILocation(line: 889, column: 18, scope: !4814)
!4828 = !DILocation(line: 889, column: 27, scope: !4814)
!4829 = !DILocation(line: 889, column: 26, scope: !4814)
!4830 = !DILocation(line: 890, column: 30, scope: !4814)
!4831 = !DILocation(line: 890, column: 39, scope: !4814)
!4832 = !DILocation(line: 890, column: 38, scope: !4814)
!4833 = !DILocation(line: 890, column: 28, scope: !4814)
!4834 = !DILocation(line: 890, column: 52, scope: !4814)
!4835 = !DILocation(line: 889, column: 7, scope: !4814)
!4836 = !DILocation(line: 889, column: 16, scope: !4814)
!4837 = !DILocation(line: 891, column: 19, scope: !4814)
!4838 = !DILocation(line: 891, column: 28, scope: !4814)
!4839 = !DILocation(line: 891, column: 18, scope: !4814)
!4840 = !DILocation(line: 891, column: 7, scope: !4814)
!4841 = !DILocation(line: 891, column: 16, scope: !4814)
!4842 = !DILocation(line: 892, column: 8, scope: !4814)
!4843 = !DILocation(line: 892, column: 15, scope: !4814)
!4844 = !DILocation(line: 894, column: 14, scope: !4814)
!4845 = !DILocation(line: 894, column: 7, scope: !4814)
!4846 = !DILocalVariable(name: "matrix", scope: !4847, file: !1, line: 913, type: !827)
!4847 = distinct !DILexicalBlock(scope: !4107, file: !1, line: 898, column: 5)
!4848 = !DILocation(line: 913, column: 11, scope: !4847)
!4849 = !DILocalVariable(name: "vectors", scope: !4847, file: !1, line: 914, type: !827)
!4850 = !DILocation(line: 914, column: 11, scope: !4847)
!4851 = !DILocalVariable(name: "terms", scope: !4847, file: !1, line: 915, type: !4852)
!4852 = !DICompositeType(tag: DW_TAG_array_type, baseType: !638, size: 256, elements: !4853)
!4853 = !{!4854}
!4854 = !DISubrange(count: 4)
!4855 = !DILocation(line: 915, column: 9, scope: !4847)
!4856 = !DILocalVariable(name: "status", scope: !4847, file: !1, line: 918, type: !617)
!4857 = !DILocation(line: 918, column: 9, scope: !4847)
!4858 = !DILocation(line: 921, column: 12, scope: !4859)
!4859 = distinct !DILexicalBlock(scope: !4847, file: !1, line: 921, column: 12)
!4860 = !DILocation(line: 921, column: 29, scope: !4859)
!4861 = !DILocation(line: 921, column: 28, scope: !4859)
!4862 = !DILocation(line: 921, column: 37, scope: !4859)
!4863 = !DILocation(line: 921, column: 42, scope: !4859)
!4864 = !DILocation(line: 922, column: 12, scope: !4859)
!4865 = !DILocation(line: 922, column: 31, scope: !4859)
!4866 = !DILocation(line: 922, column: 38, scope: !4859)
!4867 = !DILocation(line: 922, column: 29, scope: !4859)
!4868 = !DILocation(line: 921, column: 12, scope: !4847)
!4869 = !DILocation(line: 923, column: 37, scope: !4870)
!4870 = distinct !DILexicalBlock(scope: !4859, file: !1, line: 922, column: 43)
!4871 = !DILocation(line: 925, column: 62, scope: !4870)
!4872 = !DILocation(line: 925, column: 61, scope: !4870)
!4873 = !DILocation(line: 925, column: 15, scope: !4870)
!4874 = !DILocation(line: 923, column: 16, scope: !4870)
!4875 = !DILocation(line: 926, column: 49, scope: !4870)
!4876 = !DILocation(line: 926, column: 26, scope: !4870)
!4877 = !DILocation(line: 926, column: 15, scope: !4870)
!4878 = !DILocation(line: 926, column: 14, scope: !4870)
!4879 = !DILocation(line: 927, column: 9, scope: !4870)
!4880 = !DILocation(line: 930, column: 16, scope: !4847)
!4881 = !DILocation(line: 930, column: 14, scope: !4847)
!4882 = !DILocation(line: 931, column: 50, scope: !4847)
!4883 = !DILocation(line: 931, column: 29, scope: !4847)
!4884 = !DILocation(line: 931, column: 17, scope: !4847)
!4885 = !DILocation(line: 931, column: 15, scope: !4847)
!4886 = !DILocation(line: 932, column: 11, scope: !4887)
!4887 = distinct !DILexicalBlock(scope: !4847, file: !1, line: 932, column: 11)
!4888 = !DILocation(line: 932, column: 18, scope: !4887)
!4889 = !DILocation(line: 932, column: 38, scope: !4887)
!4890 = !DILocation(line: 932, column: 41, scope: !4887)
!4891 = !DILocation(line: 932, column: 49, scope: !4887)
!4892 = !DILocation(line: 932, column: 11, scope: !4847)
!4893 = !DILocation(line: 934, column: 42, scope: !4894)
!4894 = distinct !DILexicalBlock(scope: !4887, file: !1, line: 933, column: 7)
!4895 = !DILocation(line: 934, column: 19, scope: !4894)
!4896 = !DILocation(line: 934, column: 17, scope: !4894)
!4897 = !DILocation(line: 935, column: 54, scope: !4894)
!4898 = !DILocation(line: 935, column: 31, scope: !4894)
!4899 = !DILocation(line: 935, column: 19, scope: !4894)
!4900 = !DILocation(line: 935, column: 17, scope: !4894)
!4901 = !DILocation(line: 936, column: 53, scope: !4894)
!4902 = !DILocation(line: 936, column: 30, scope: !4894)
!4903 = !DILocation(line: 936, column: 19, scope: !4894)
!4904 = !DILocation(line: 936, column: 17, scope: !4894)
!4905 = !DILocation(line: 937, column: 37, scope: !4894)
!4906 = !DILocation(line: 937, column: 16, scope: !4894)
!4907 = !DILocation(line: 940, column: 9, scope: !4894)
!4908 = !DILocation(line: 943, column: 13, scope: !4909)
!4909 = distinct !DILexicalBlock(scope: !4847, file: !1, line: 943, column: 7)
!4910 = !DILocation(line: 943, column: 12, scope: !4909)
!4911 = !DILocation(line: 943, column: 17, scope: !4912)
!4912 = distinct !DILexicalBlock(scope: !4909, file: !1, line: 943, column: 7)
!4913 = !DILocation(line: 943, column: 21, scope: !4912)
!4914 = !DILocation(line: 943, column: 19, scope: !4912)
!4915 = !DILocation(line: 943, column: 7, scope: !4909)
!4916 = !DILocation(line: 944, column: 24, scope: !4912)
!4917 = !DILocation(line: 944, column: 30, scope: !4912)
!4918 = !DILocation(line: 944, column: 31, scope: !4912)
!4919 = !DILocation(line: 944, column: 9, scope: !4912)
!4920 = !DILocation(line: 944, column: 17, scope: !4912)
!4921 = !DILocation(line: 944, column: 20, scope: !4912)
!4922 = !DILocation(line: 943, column: 37, scope: !4912)
!4923 = !DILocation(line: 943, column: 7, scope: !4912)
!4924 = distinct !{!4924, !4915, !4925}
!4925 = !DILocation(line: 944, column: 34, scope: !4909)
!4926 = !DILocation(line: 946, column: 13, scope: !4927)
!4927 = distinct !DILexicalBlock(scope: !4847, file: !1, line: 946, column: 7)
!4928 = !DILocation(line: 946, column: 12, scope: !4927)
!4929 = !DILocation(line: 946, column: 17, scope: !4930)
!4930 = distinct !DILexicalBlock(scope: !4927, file: !1, line: 946, column: 7)
!4931 = !DILocation(line: 946, column: 21, scope: !4930)
!4932 = !DILocation(line: 946, column: 19, scope: !4930)
!4933 = !DILocation(line: 946, column: 7, scope: !4927)
!4934 = !DILocation(line: 947, column: 20, scope: !4935)
!4935 = distinct !DILexicalBlock(scope: !4930, file: !1, line: 946, column: 51)
!4936 = !DILocation(line: 947, column: 30, scope: !4935)
!4937 = !DILocation(line: 947, column: 32, scope: !4935)
!4938 = !DILocation(line: 947, column: 31, scope: !4935)
!4939 = !DILocation(line: 947, column: 9, scope: !4935)
!4940 = !DILocation(line: 947, column: 18, scope: !4935)
!4941 = !DILocation(line: 948, column: 20, scope: !4935)
!4942 = !DILocation(line: 948, column: 30, scope: !4935)
!4943 = !DILocation(line: 948, column: 32, scope: !4935)
!4944 = !DILocation(line: 948, column: 31, scope: !4935)
!4945 = !DILocation(line: 948, column: 9, scope: !4935)
!4946 = !DILocation(line: 948, column: 18, scope: !4935)
!4947 = !DILocation(line: 949, column: 20, scope: !4935)
!4948 = !DILocation(line: 949, column: 29, scope: !4935)
!4949 = !DILocation(line: 949, column: 28, scope: !4935)
!4950 = !DILocation(line: 949, column: 9, scope: !4935)
!4951 = !DILocation(line: 949, column: 18, scope: !4935)
!4952 = !DILocation(line: 950, column: 9, scope: !4935)
!4953 = !DILocation(line: 950, column: 18, scope: !4935)
!4954 = !DILocation(line: 951, column: 30, scope: !4935)
!4955 = !DILocation(line: 951, column: 37, scope: !4935)
!4956 = !DILocation(line: 951, column: 45, scope: !4935)
!4957 = !DILocation(line: 952, column: 16, scope: !4935)
!4958 = !DILocation(line: 952, column: 26, scope: !4935)
!4959 = !DILocation(line: 952, column: 28, scope: !4935)
!4960 = !DILocation(line: 952, column: 27, scope: !4935)
!4961 = !DILocation(line: 952, column: 44, scope: !4935)
!4962 = !DILocation(line: 951, column: 9, scope: !4935)
!4963 = !DILocation(line: 953, column: 7, scope: !4935)
!4964 = !DILocation(line: 946, column: 42, scope: !4930)
!4965 = !DILocation(line: 946, column: 40, scope: !4930)
!4966 = !DILocation(line: 946, column: 7, scope: !4930)
!4967 = distinct !{!4967, !4933, !4968}
!4968 = !DILocation(line: 953, column: 7, scope: !4927)
!4969 = !DILocation(line: 955, column: 37, scope: !4847)
!4970 = !DILocation(line: 955, column: 44, scope: !4847)
!4971 = !DILocation(line: 955, column: 56, scope: !4847)
!4972 = !DILocation(line: 955, column: 14, scope: !4847)
!4973 = !DILocation(line: 955, column: 13, scope: !4847)
!4974 = !DILocation(line: 956, column: 40, scope: !4847)
!4975 = !DILocation(line: 956, column: 17, scope: !4847)
!4976 = !DILocation(line: 956, column: 15, scope: !4847)
!4977 = !DILocation(line: 957, column: 52, scope: !4847)
!4978 = !DILocation(line: 957, column: 29, scope: !4847)
!4979 = !DILocation(line: 957, column: 17, scope: !4847)
!4980 = !DILocation(line: 957, column: 15, scope: !4847)
!4981 = !DILocation(line: 958, column: 12, scope: !4982)
!4982 = distinct !DILexicalBlock(scope: !4847, file: !1, line: 958, column: 12)
!4983 = !DILocation(line: 958, column: 19, scope: !4982)
!4984 = !DILocation(line: 958, column: 12, scope: !4847)
!4985 = !DILocation(line: 959, column: 51, scope: !4986)
!4986 = distinct !DILexicalBlock(scope: !4982, file: !1, line: 958, column: 36)
!4987 = !DILocation(line: 959, column: 28, scope: !4986)
!4988 = !DILocation(line: 959, column: 17, scope: !4986)
!4989 = !DILocation(line: 959, column: 15, scope: !4986)
!4990 = !DILocation(line: 960, column: 37, scope: !4986)
!4991 = !DILocation(line: 962, column: 60, scope: !4986)
!4992 = !DILocation(line: 962, column: 59, scope: !4986)
!4993 = !DILocation(line: 962, column: 13, scope: !4986)
!4994 = !DILocation(line: 960, column: 16, scope: !4986)
!4995 = !DILocation(line: 963, column: 9, scope: !4986)
!4996 = !DILocation(line: 965, column: 13, scope: !4997)
!4997 = distinct !DILexicalBlock(scope: !4847, file: !1, line: 965, column: 12)
!4998 = !DILocation(line: 965, column: 12, scope: !4997)
!4999 = !DILocation(line: 965, column: 20, scope: !4997)
!5000 = !DILocation(line: 965, column: 12, scope: !4847)
!5001 = !DILocation(line: 1005, column: 21, scope: !5002)
!5002 = distinct !DILexicalBlock(scope: !4997, file: !1, line: 965, column: 51)
!5003 = !DILocation(line: 1005, column: 30, scope: !5002)
!5004 = !DILocation(line: 1005, column: 29, scope: !5002)
!5005 = !DILocation(line: 1005, column: 41, scope: !5002)
!5006 = !DILocation(line: 1005, column: 50, scope: !5002)
!5007 = !DILocation(line: 1005, column: 49, scope: !5002)
!5008 = !DILocation(line: 1005, column: 39, scope: !5002)
!5009 = !DILocation(line: 1005, column: 10, scope: !5002)
!5010 = !DILocation(line: 1005, column: 19, scope: !5002)
!5011 = !DILocation(line: 1006, column: 24, scope: !5002)
!5012 = !DILocation(line: 1006, column: 33, scope: !5002)
!5013 = !DILocation(line: 1006, column: 32, scope: !5002)
!5014 = !DILocation(line: 1006, column: 44, scope: !5002)
!5015 = !DILocation(line: 1006, column: 53, scope: !5002)
!5016 = !DILocation(line: 1006, column: 52, scope: !5002)
!5017 = !DILocation(line: 1006, column: 42, scope: !5002)
!5018 = !DILocation(line: 1006, column: 22, scope: !5002)
!5019 = !DILocation(line: 1006, column: 10, scope: !5002)
!5020 = !DILocation(line: 1006, column: 19, scope: !5002)
!5021 = !DILocation(line: 1007, column: 7, scope: !5002)
!5022 = !DILocation(line: 1008, column: 14, scope: !4847)
!5023 = !DILocation(line: 1008, column: 7, scope: !4847)
!5024 = !DILocalVariable(name: "matrix", scope: !5025, file: !1, line: 1051, type: !827)
!5025 = distinct !DILexicalBlock(scope: !4107, file: !1, line: 1028, column: 5)
!5026 = !DILocation(line: 1051, column: 11, scope: !5025)
!5027 = !DILocalVariable(name: "vectors", scope: !5025, file: !1, line: 1052, type: !827)
!5028 = !DILocation(line: 1052, column: 11, scope: !5025)
!5029 = !DILocalVariable(name: "terms", scope: !5025, file: !1, line: 1053, type: !821)
!5030 = !DILocation(line: 1053, column: 10, scope: !5025)
!5031 = !DILocalVariable(name: "nterms", scope: !5025, file: !1, line: 1056, type: !612)
!5032 = !DILocation(line: 1056, column: 9, scope: !5025)
!5033 = !DILocalVariable(name: "j", scope: !5025, file: !1, line: 1059, type: !665)
!5034 = !DILocation(line: 1059, column: 9, scope: !5025)
!5035 = !DILocalVariable(name: "status", scope: !5025, file: !1, line: 1062, type: !617)
!5036 = !DILocation(line: 1062, column: 9, scope: !5025)
!5037 = !DILocation(line: 1065, column: 18, scope: !5025)
!5038 = !DILocation(line: 1065, column: 7, scope: !5025)
!5039 = !DILocation(line: 1065, column: 16, scope: !5025)
!5040 = !DILocation(line: 1066, column: 45, scope: !5025)
!5041 = !DILocation(line: 1066, column: 27, scope: !5025)
!5042 = !DILocation(line: 1066, column: 18, scope: !5025)
!5043 = !DILocation(line: 1066, column: 7, scope: !5025)
!5044 = !DILocation(line: 1066, column: 16, scope: !5025)
!5045 = !DILocation(line: 1067, column: 25, scope: !5025)
!5046 = !DILocation(line: 1067, column: 16, scope: !5025)
!5047 = !DILocation(line: 1067, column: 14, scope: !5025)
!5048 = !DILocation(line: 1070, column: 36, scope: !5025)
!5049 = !DILocation(line: 1070, column: 43, scope: !5025)
!5050 = !DILocation(line: 1070, column: 16, scope: !5025)
!5051 = !DILocation(line: 1070, column: 14, scope: !5025)
!5052 = !DILocation(line: 1071, column: 50, scope: !5025)
!5053 = !DILocation(line: 1071, column: 29, scope: !5025)
!5054 = !DILocation(line: 1071, column: 17, scope: !5025)
!5055 = !DILocation(line: 1071, column: 15, scope: !5025)
!5056 = !DILocation(line: 1072, column: 47, scope: !5025)
!5057 = !DILocation(line: 1072, column: 26, scope: !5025)
!5058 = !DILocation(line: 1072, column: 15, scope: !5025)
!5059 = !DILocation(line: 1072, column: 13, scope: !5025)
!5060 = !DILocation(line: 1073, column: 11, scope: !5061)
!5061 = distinct !DILexicalBlock(scope: !5025, file: !1, line: 1073, column: 11)
!5062 = !DILocation(line: 1073, column: 19, scope: !5061)
!5063 = !DILocation(line: 1073, column: 39, scope: !5061)
!5064 = !DILocation(line: 1074, column: 11, scope: !5061)
!5065 = !DILocation(line: 1074, column: 19, scope: !5061)
!5066 = !DILocation(line: 1074, column: 39, scope: !5061)
!5067 = !DILocation(line: 1075, column: 11, scope: !5061)
!5068 = !DILocation(line: 1075, column: 19, scope: !5061)
!5069 = !DILocation(line: 1073, column: 11, scope: !5025)
!5070 = !DILocation(line: 1077, column: 42, scope: !5071)
!5071 = distinct !DILexicalBlock(scope: !5061, file: !1, line: 1076, column: 7)
!5072 = !DILocation(line: 1077, column: 50, scope: !5071)
!5073 = !DILocation(line: 1077, column: 19, scope: !5071)
!5074 = !DILocation(line: 1077, column: 17, scope: !5071)
!5075 = !DILocation(line: 1078, column: 54, scope: !5071)
!5076 = !DILocation(line: 1078, column: 31, scope: !5071)
!5077 = !DILocation(line: 1078, column: 19, scope: !5071)
!5078 = !DILocation(line: 1078, column: 17, scope: !5071)
!5079 = !DILocation(line: 1079, column: 53, scope: !5071)
!5080 = !DILocation(line: 1079, column: 30, scope: !5071)
!5081 = !DILocation(line: 1079, column: 19, scope: !5071)
!5082 = !DILocation(line: 1079, column: 17, scope: !5071)
!5083 = !DILocation(line: 1080, column: 53, scope: !5071)
!5084 = !DILocation(line: 1080, column: 30, scope: !5071)
!5085 = !DILocation(line: 1080, column: 19, scope: !5071)
!5086 = !DILocation(line: 1080, column: 17, scope: !5071)
!5087 = !DILocation(line: 1081, column: 37, scope: !5071)
!5088 = !DILocation(line: 1081, column: 16, scope: !5071)
!5089 = !DILocation(line: 1084, column: 9, scope: !5071)
!5090 = !DILocation(line: 1087, column: 13, scope: !5091)
!5091 = distinct !DILexicalBlock(scope: !5025, file: !1, line: 1087, column: 7)
!5092 = !DILocation(line: 1087, column: 12, scope: !5091)
!5093 = !DILocation(line: 1087, column: 17, scope: !5094)
!5094 = distinct !DILexicalBlock(scope: !5091, file: !1, line: 1087, column: 7)
!5095 = !DILocation(line: 1087, column: 21, scope: !5094)
!5096 = !DILocation(line: 1087, column: 19, scope: !5094)
!5097 = !DILocation(line: 1087, column: 7, scope: !5091)
!5098 = !DILocation(line: 1088, column: 24, scope: !5094)
!5099 = !DILocation(line: 1088, column: 32, scope: !5094)
!5100 = !DILocation(line: 1088, column: 34, scope: !5094)
!5101 = !DILocation(line: 1088, column: 33, scope: !5094)
!5102 = !DILocation(line: 1088, column: 31, scope: !5094)
!5103 = !DILocation(line: 1088, column: 9, scope: !5094)
!5104 = !DILocation(line: 1088, column: 17, scope: !5094)
!5105 = !DILocation(line: 1088, column: 20, scope: !5094)
!5106 = !DILocation(line: 1087, column: 37, scope: !5094)
!5107 = !DILocation(line: 1087, column: 7, scope: !5094)
!5108 = distinct !{!5108, !5097, !5109}
!5109 = !DILocation(line: 1088, column: 41, scope: !5091)
!5110 = !DILocation(line: 1090, column: 13, scope: !5111)
!5111 = distinct !DILexicalBlock(scope: !5025, file: !1, line: 1090, column: 7)
!5112 = !DILocation(line: 1090, column: 12, scope: !5111)
!5113 = !DILocation(line: 1090, column: 17, scope: !5114)
!5114 = distinct !DILexicalBlock(scope: !5111, file: !1, line: 1090, column: 7)
!5115 = !DILocation(line: 1090, column: 21, scope: !5114)
!5116 = !DILocation(line: 1090, column: 19, scope: !5114)
!5117 = !DILocation(line: 1090, column: 7, scope: !5111)
!5118 = !DILocation(line: 1091, column: 15, scope: !5119)
!5119 = distinct !DILexicalBlock(scope: !5120, file: !1, line: 1091, column: 9)
!5120 = distinct !DILexicalBlock(scope: !5114, file: !1, line: 1090, column: 51)
!5121 = !DILocation(line: 1091, column: 14, scope: !5119)
!5122 = !DILocation(line: 1091, column: 19, scope: !5123)
!5123 = distinct !DILexicalBlock(scope: !5119, file: !1, line: 1091, column: 9)
!5124 = !DILocation(line: 1091, column: 33, scope: !5123)
!5125 = !DILocation(line: 1091, column: 21, scope: !5123)
!5126 = !DILocation(line: 1091, column: 9, scope: !5119)
!5127 = !DILocation(line: 1092, column: 36, scope: !5123)
!5128 = !DILocation(line: 1092, column: 38, scope: !5123)
!5129 = !DILocation(line: 1092, column: 48, scope: !5123)
!5130 = !DILocation(line: 1092, column: 50, scope: !5123)
!5131 = !DILocation(line: 1092, column: 49, scope: !5123)
!5132 = !DILocation(line: 1092, column: 56, scope: !5123)
!5133 = !DILocation(line: 1092, column: 66, scope: !5123)
!5134 = !DILocation(line: 1092, column: 68, scope: !5123)
!5135 = !DILocation(line: 1092, column: 67, scope: !5123)
!5136 = !DILocation(line: 1092, column: 22, scope: !5123)
!5137 = !DILocation(line: 1092, column: 11, scope: !5123)
!5138 = !DILocation(line: 1092, column: 17, scope: !5123)
!5139 = !DILocation(line: 1092, column: 20, scope: !5123)
!5140 = !DILocation(line: 1091, column: 42, scope: !5123)
!5141 = !DILocation(line: 1091, column: 9, scope: !5123)
!5142 = distinct !{!5142, !5126, !5143}
!5143 = !DILocation(line: 1092, column: 73, scope: !5119)
!5144 = !DILocation(line: 1093, column: 30, scope: !5120)
!5145 = !DILocation(line: 1093, column: 37, scope: !5120)
!5146 = !DILocation(line: 1093, column: 45, scope: !5120)
!5147 = !DILocation(line: 1094, column: 16, scope: !5120)
!5148 = !DILocation(line: 1094, column: 26, scope: !5120)
!5149 = !DILocation(line: 1094, column: 28, scope: !5120)
!5150 = !DILocation(line: 1094, column: 27, scope: !5120)
!5151 = !DILocation(line: 1094, column: 40, scope: !5120)
!5152 = !DILocation(line: 1094, column: 47, scope: !5120)
!5153 = !DILocation(line: 1093, column: 9, scope: !5120)
!5154 = !DILocation(line: 1095, column: 7, scope: !5120)
!5155 = !DILocation(line: 1090, column: 42, scope: !5114)
!5156 = !DILocation(line: 1090, column: 40, scope: !5114)
!5157 = !DILocation(line: 1090, column: 7, scope: !5114)
!5158 = distinct !{!5158, !5117, !5159}
!5159 = !DILocation(line: 1095, column: 7, scope: !5111)
!5160 = !DILocation(line: 1096, column: 49, scope: !5025)
!5161 = !DILocation(line: 1096, column: 26, scope: !5025)
!5162 = !DILocation(line: 1096, column: 15, scope: !5025)
!5163 = !DILocation(line: 1096, column: 13, scope: !5025)
!5164 = !DILocation(line: 1098, column: 37, scope: !5025)
!5165 = !DILocation(line: 1098, column: 44, scope: !5025)
!5166 = !DILocation(line: 1098, column: 52, scope: !5025)
!5167 = !DILocation(line: 1098, column: 59, scope: !5025)
!5168 = !DILocation(line: 1098, column: 14, scope: !5025)
!5169 = !DILocation(line: 1098, column: 13, scope: !5025)
!5170 = !DILocation(line: 1099, column: 40, scope: !5025)
!5171 = !DILocation(line: 1099, column: 48, scope: !5025)
!5172 = !DILocation(line: 1099, column: 17, scope: !5025)
!5173 = !DILocation(line: 1099, column: 15, scope: !5025)
!5174 = !DILocation(line: 1100, column: 52, scope: !5025)
!5175 = !DILocation(line: 1100, column: 29, scope: !5025)
!5176 = !DILocation(line: 1100, column: 17, scope: !5025)
!5177 = !DILocation(line: 1100, column: 15, scope: !5025)
!5178 = !DILocation(line: 1101, column: 12, scope: !5179)
!5179 = distinct !DILexicalBlock(scope: !5025, file: !1, line: 1101, column: 12)
!5180 = !DILocation(line: 1101, column: 19, scope: !5179)
!5181 = !DILocation(line: 1101, column: 12, scope: !5025)
!5182 = !DILocation(line: 1102, column: 51, scope: !5183)
!5183 = distinct !DILexicalBlock(scope: !5179, file: !1, line: 1101, column: 36)
!5184 = !DILocation(line: 1102, column: 28, scope: !5183)
!5185 = !DILocation(line: 1102, column: 17, scope: !5183)
!5186 = !DILocation(line: 1102, column: 15, scope: !5183)
!5187 = !DILocation(line: 1103, column: 37, scope: !5183)
!5188 = !DILocation(line: 1105, column: 60, scope: !5183)
!5189 = !DILocation(line: 1105, column: 59, scope: !5183)
!5190 = !DILocation(line: 1105, column: 13, scope: !5183)
!5191 = !DILocation(line: 1103, column: 16, scope: !5183)
!5192 = !DILocation(line: 1106, column: 9, scope: !5183)
!5193 = !DILocation(line: 1108, column: 14, scope: !5025)
!5194 = !DILocation(line: 1108, column: 7, scope: !5025)
!5195 = !DILocation(line: 1146, column: 12, scope: !5196)
!5196 = distinct !DILexicalBlock(scope: !5197, file: !1, line: 1146, column: 12)
!5197 = distinct !DILexicalBlock(scope: !4107, file: !1, line: 1111, column: 5)
!5198 = !DILocation(line: 1146, column: 29, scope: !5196)
!5199 = !DILocation(line: 1146, column: 34, scope: !5196)
!5200 = !DILocation(line: 1146, column: 37, scope: !5196)
!5201 = !DILocation(line: 1146, column: 50, scope: !5196)
!5202 = !DILocation(line: 1146, column: 12, scope: !5197)
!5203 = !DILocation(line: 1147, column: 51, scope: !5204)
!5204 = distinct !DILexicalBlock(scope: !5196, file: !1, line: 1146, column: 68)
!5205 = !DILocation(line: 1147, column: 28, scope: !5204)
!5206 = !DILocation(line: 1147, column: 17, scope: !5204)
!5207 = !DILocation(line: 1147, column: 15, scope: !5204)
!5208 = !DILocation(line: 1148, column: 37, scope: !5204)
!5209 = !DILocation(line: 1150, column: 60, scope: !5204)
!5210 = !DILocation(line: 1150, column: 59, scope: !5204)
!5211 = !DILocation(line: 1150, column: 13, scope: !5204)
!5212 = !DILocation(line: 1148, column: 16, scope: !5204)
!5213 = !DILocation(line: 1151, column: 9, scope: !5204)
!5214 = !DILocation(line: 1153, column: 12, scope: !5215)
!5215 = distinct !DILexicalBlock(scope: !5197, file: !1, line: 1153, column: 12)
!5216 = !DILocation(line: 1153, column: 29, scope: !5215)
!5217 = !DILocation(line: 1153, column: 34, scope: !5215)
!5218 = !DILocation(line: 1153, column: 37, scope: !5215)
!5219 = !DILocation(line: 1153, column: 50, scope: !5215)
!5220 = !DILocation(line: 1153, column: 12, scope: !5197)
!5221 = !DILocation(line: 1154, column: 51, scope: !5222)
!5222 = distinct !DILexicalBlock(scope: !5215, file: !1, line: 1153, column: 68)
!5223 = !DILocation(line: 1154, column: 28, scope: !5222)
!5224 = !DILocation(line: 1154, column: 17, scope: !5222)
!5225 = !DILocation(line: 1154, column: 15, scope: !5222)
!5226 = !DILocation(line: 1155, column: 37, scope: !5222)
!5227 = !DILocation(line: 1157, column: 60, scope: !5222)
!5228 = !DILocation(line: 1157, column: 59, scope: !5222)
!5229 = !DILocation(line: 1157, column: 13, scope: !5222)
!5230 = !DILocation(line: 1155, column: 16, scope: !5222)
!5231 = !DILocation(line: 1158, column: 9, scope: !5222)
!5232 = !DILocation(line: 1160, column: 7, scope: !5197)
!5233 = !DILocation(line: 1160, column: 16, scope: !5197)
!5234 = !DILocation(line: 1161, column: 12, scope: !5235)
!5235 = distinct !DILexicalBlock(scope: !5197, file: !1, line: 1161, column: 12)
!5236 = !DILocation(line: 1161, column: 29, scope: !5235)
!5237 = !DILocation(line: 1161, column: 12, scope: !5197)
!5238 = !DILocation(line: 1162, column: 37, scope: !5235)
!5239 = !DILocation(line: 1162, column: 20, scope: !5235)
!5240 = !DILocation(line: 1162, column: 9, scope: !5235)
!5241 = !DILocation(line: 1162, column: 18, scope: !5235)
!5242 = !DILocation(line: 1164, column: 9, scope: !5235)
!5243 = !DILocation(line: 1164, column: 18, scope: !5235)
!5244 = !DILocation(line: 1165, column: 12, scope: !5245)
!5245 = distinct !DILexicalBlock(scope: !5197, file: !1, line: 1165, column: 12)
!5246 = !DILocation(line: 1165, column: 29, scope: !5245)
!5247 = !DILocation(line: 1165, column: 12, scope: !5197)
!5248 = !DILocation(line: 1166, column: 38, scope: !5245)
!5249 = !DILocation(line: 1166, column: 21, scope: !5245)
!5250 = !DILocation(line: 1166, column: 9, scope: !5245)
!5251 = !DILocation(line: 1166, column: 18, scope: !5245)
!5252 = !DILocation(line: 1167, column: 7, scope: !5197)
!5253 = !DILocation(line: 1167, column: 16, scope: !5197)
!5254 = !DILocation(line: 1168, column: 31, scope: !5197)
!5255 = !DILocation(line: 1168, column: 19, scope: !5197)
!5256 = !DILocation(line: 1168, column: 7, scope: !5197)
!5257 = !DILocation(line: 1168, column: 16, scope: !5197)
!5258 = !DILocation(line: 1169, column: 7, scope: !5197)
!5259 = !DILocation(line: 1169, column: 16, scope: !5197)
!5260 = !DILocation(line: 1170, column: 26, scope: !5197)
!5261 = !DILocation(line: 1170, column: 33, scope: !5197)
!5262 = !DILocation(line: 1170, column: 18, scope: !5197)
!5263 = !DILocation(line: 1170, column: 37, scope: !5197)
!5264 = !DILocation(line: 1170, column: 7, scope: !5197)
!5265 = !DILocation(line: 1170, column: 16, scope: !5197)
!5266 = !DILocation(line: 1171, column: 26, scope: !5197)
!5267 = !DILocation(line: 1171, column: 33, scope: !5197)
!5268 = !DILocation(line: 1171, column: 18, scope: !5197)
!5269 = !DILocation(line: 1171, column: 41, scope: !5197)
!5270 = !DILocation(line: 1171, column: 40, scope: !5197)
!5271 = !DILocation(line: 1171, column: 52, scope: !5197)
!5272 = !DILocation(line: 1171, column: 60, scope: !5197)
!5273 = !DILocation(line: 1171, column: 50, scope: !5197)
!5274 = !DILocation(line: 1171, column: 7, scope: !5197)
!5275 = !DILocation(line: 1171, column: 16, scope: !5197)
!5276 = !DILocation(line: 1172, column: 12, scope: !5277)
!5277 = distinct !DILexicalBlock(scope: !5197, file: !1, line: 1172, column: 12)
!5278 = !DILocation(line: 1172, column: 29, scope: !5277)
!5279 = !DILocation(line: 1172, column: 12, scope: !5197)
!5280 = !DILocation(line: 1173, column: 14, scope: !5281)
!5281 = distinct !DILexicalBlock(scope: !5282, file: !1, line: 1173, column: 14)
!5282 = distinct !DILexicalBlock(scope: !5277, file: !1, line: 1172, column: 36)
!5283 = !DILocation(line: 1173, column: 31, scope: !5281)
!5284 = !DILocation(line: 1173, column: 14, scope: !5282)
!5285 = !DILocation(line: 1174, column: 22, scope: !5281)
!5286 = !DILocation(line: 1174, column: 37, scope: !5281)
!5287 = !DILocation(line: 1174, column: 35, scope: !5281)
!5288 = !DILocation(line: 1174, column: 11, scope: !5281)
!5289 = !DILocation(line: 1174, column: 20, scope: !5281)
!5290 = !DILocation(line: 1176, column: 23, scope: !5281)
!5291 = !DILocation(line: 1176, column: 36, scope: !5281)
!5292 = !DILocation(line: 1176, column: 35, scope: !5281)
!5293 = !DILocation(line: 1176, column: 11, scope: !5281)
!5294 = !DILocation(line: 1176, column: 20, scope: !5281)
!5295 = !DILocation(line: 1177, column: 20, scope: !5282)
!5296 = !DILocation(line: 1177, column: 9, scope: !5282)
!5297 = !DILocation(line: 1177, column: 18, scope: !5282)
!5298 = !DILocation(line: 1178, column: 7, scope: !5282)
!5299 = !DILocation(line: 1179, column: 27, scope: !5197)
!5300 = !DILocation(line: 1179, column: 34, scope: !5197)
!5301 = !DILocation(line: 1179, column: 19, scope: !5197)
!5302 = !DILocation(line: 1179, column: 41, scope: !5197)
!5303 = !DILocation(line: 1179, column: 46, scope: !5197)
!5304 = !DILocation(line: 1179, column: 7, scope: !5197)
!5305 = !DILocation(line: 1179, column: 16, scope: !5197)
!5306 = !DILocation(line: 1181, column: 14, scope: !5197)
!5307 = !DILocation(line: 1181, column: 7, scope: !5197)
!5308 = !DILocation(line: 1196, column: 12, scope: !5309)
!5309 = distinct !DILexicalBlock(scope: !5310, file: !1, line: 1196, column: 12)
!5310 = distinct !DILexicalBlock(scope: !4107, file: !1, line: 1185, column: 5)
!5311 = !DILocation(line: 1196, column: 29, scope: !5309)
!5312 = !DILocation(line: 1197, column: 11, scope: !5309)
!5313 = !DILocation(line: 1197, column: 16, scope: !5309)
!5314 = !DILocation(line: 1197, column: 33, scope: !5309)
!5315 = !DILocation(line: 1197, column: 37, scope: !5309)
!5316 = !DILocation(line: 1197, column: 41, scope: !5309)
!5317 = !DILocation(line: 1197, column: 40, scope: !5309)
!5318 = !DILocation(line: 1197, column: 48, scope: !5309)
!5319 = !DILocation(line: 1198, column: 11, scope: !5309)
!5320 = !DILocation(line: 1198, column: 14, scope: !5309)
!5321 = !DILocation(line: 1198, column: 31, scope: !5309)
!5322 = !DILocation(line: 1196, column: 12, scope: !5310)
!5323 = !DILocation(line: 1199, column: 39, scope: !5324)
!5324 = distinct !DILexicalBlock(scope: !5309, file: !1, line: 1198, column: 37)
!5325 = !DILocation(line: 1201, column: 60, scope: !5324)
!5326 = !DILocation(line: 1201, column: 59, scope: !5324)
!5327 = !DILocation(line: 1201, column: 13, scope: !5324)
!5328 = !DILocation(line: 1199, column: 18, scope: !5324)
!5329 = !DILocation(line: 1202, column: 49, scope: !5324)
!5330 = !DILocation(line: 1202, column: 26, scope: !5324)
!5331 = !DILocation(line: 1202, column: 15, scope: !5324)
!5332 = !DILocation(line: 1202, column: 14, scope: !5324)
!5333 = !DILocation(line: 1203, column: 9, scope: !5324)
!5334 = !DILocation(line: 1206, column: 12, scope: !5335)
!5335 = distinct !DILexicalBlock(scope: !5310, file: !1, line: 1206, column: 12)
!5336 = !DILocation(line: 1206, column: 29, scope: !5335)
!5337 = !DILocation(line: 1206, column: 12, scope: !5310)
!5338 = !DILocation(line: 1207, column: 20, scope: !5335)
!5339 = !DILocation(line: 1207, column: 9, scope: !5335)
!5340 = !DILocation(line: 1207, column: 18, scope: !5335)
!5341 = !DILocation(line: 1209, column: 9, scope: !5335)
!5342 = !DILocation(line: 1209, column: 18, scope: !5335)
!5343 = !DILocation(line: 1211, column: 18, scope: !5310)
!5344 = !DILocation(line: 1211, column: 35, scope: !5310)
!5345 = !DILocation(line: 1211, column: 42, scope: !5310)
!5346 = !DILocation(line: 1211, column: 7, scope: !5310)
!5347 = !DILocation(line: 1211, column: 16, scope: !5310)
!5348 = !DILocation(line: 1213, column: 12, scope: !5349)
!5349 = distinct !DILexicalBlock(scope: !5310, file: !1, line: 1213, column: 12)
!5350 = !DILocation(line: 1213, column: 29, scope: !5349)
!5351 = !DILocation(line: 1213, column: 12, scope: !5310)
!5352 = !DILocation(line: 1214, column: 20, scope: !5353)
!5353 = distinct !DILexicalBlock(scope: !5349, file: !1, line: 1213, column: 36)
!5354 = !DILocation(line: 1214, column: 9, scope: !5353)
!5355 = !DILocation(line: 1214, column: 18, scope: !5353)
!5356 = !DILocation(line: 1215, column: 20, scope: !5353)
!5357 = !DILocation(line: 1215, column: 9, scope: !5353)
!5358 = !DILocation(line: 1215, column: 18, scope: !5353)
!5359 = !DILocation(line: 1216, column: 7, scope: !5353)
!5360 = !DILocation(line: 1218, column: 29, scope: !5361)
!5361 = distinct !DILexicalBlock(scope: !5349, file: !1, line: 1217, column: 12)
!5362 = !DILocation(line: 1218, column: 36, scope: !5361)
!5363 = !DILocation(line: 1218, column: 20, scope: !5361)
!5364 = !DILocation(line: 1218, column: 44, scope: !5361)
!5365 = !DILocation(line: 1218, column: 49, scope: !5361)
!5366 = !DILocation(line: 1218, column: 56, scope: !5361)
!5367 = !DILocation(line: 1218, column: 61, scope: !5361)
!5368 = !DILocation(line: 1218, column: 48, scope: !5361)
!5369 = !DILocation(line: 1218, column: 9, scope: !5361)
!5370 = !DILocation(line: 1218, column: 18, scope: !5361)
!5371 = !DILocation(line: 1219, column: 29, scope: !5361)
!5372 = !DILocation(line: 1219, column: 36, scope: !5361)
!5373 = !DILocation(line: 1219, column: 20, scope: !5361)
!5374 = !DILocation(line: 1219, column: 41, scope: !5361)
!5375 = !DILocation(line: 1219, column: 46, scope: !5361)
!5376 = !DILocation(line: 1219, column: 53, scope: !5361)
!5377 = !DILocation(line: 1219, column: 58, scope: !5361)
!5378 = !DILocation(line: 1219, column: 45, scope: !5361)
!5379 = !DILocation(line: 1219, column: 9, scope: !5361)
!5380 = !DILocation(line: 1219, column: 18, scope: !5361)
!5381 = !DILocation(line: 1222, column: 7, scope: !5310)
!5382 = !DILocation(line: 1222, column: 16, scope: !5310)
!5383 = !DILocation(line: 1223, column: 12, scope: !5384)
!5384 = distinct !DILexicalBlock(scope: !5310, file: !1, line: 1223, column: 12)
!5385 = !DILocation(line: 1223, column: 29, scope: !5384)
!5386 = !DILocation(line: 1223, column: 12, scope: !5310)
!5387 = !DILocation(line: 1224, column: 37, scope: !5384)
!5388 = !DILocation(line: 1224, column: 20, scope: !5384)
!5389 = !DILocation(line: 1224, column: 9, scope: !5384)
!5390 = !DILocation(line: 1224, column: 18, scope: !5384)
!5391 = !DILocation(line: 1225, column: 18, scope: !5310)
!5392 = !DILocation(line: 1225, column: 7, scope: !5310)
!5393 = !DILocation(line: 1225, column: 16, scope: !5310)
!5394 = !DILocation(line: 1226, column: 12, scope: !5395)
!5395 = distinct !DILexicalBlock(scope: !5310, file: !1, line: 1226, column: 12)
!5396 = !DILocation(line: 1226, column: 29, scope: !5395)
!5397 = !DILocation(line: 1226, column: 12, scope: !5310)
!5398 = !DILocation(line: 1227, column: 37, scope: !5395)
!5399 = !DILocation(line: 1227, column: 20, scope: !5395)
!5400 = !DILocation(line: 1227, column: 9, scope: !5395)
!5401 = !DILocation(line: 1227, column: 18, scope: !5395)
!5402 = !DILocation(line: 1228, column: 17, scope: !5403)
!5403 = distinct !DILexicalBlock(scope: !5310, file: !1, line: 1228, column: 12)
!5404 = !DILocation(line: 1228, column: 26, scope: !5403)
!5405 = !DILocation(line: 1228, column: 25, scope: !5403)
!5406 = !DILocation(line: 1228, column: 12, scope: !5403)
!5407 = !DILocation(line: 1228, column: 36, scope: !5403)
!5408 = !DILocation(line: 1228, column: 12, scope: !5310)
!5409 = !DILocation(line: 1229, column: 9, scope: !5403)
!5410 = !DILocation(line: 1229, column: 18, scope: !5403)
!5411 = !DILocation(line: 1231, column: 12, scope: !5412)
!5412 = distinct !DILexicalBlock(scope: !5310, file: !1, line: 1231, column: 12)
!5413 = !DILocation(line: 1231, column: 21, scope: !5412)
!5414 = !DILocation(line: 1231, column: 12, scope: !5310)
!5415 = !DILocation(line: 1233, column: 19, scope: !5416)
!5416 = distinct !DILexicalBlock(scope: !5417, file: !1, line: 1233, column: 14)
!5417 = distinct !DILexicalBlock(scope: !5412, file: !1, line: 1231, column: 39)
!5418 = !DILocation(line: 1233, column: 14, scope: !5416)
!5419 = !DILocation(line: 1233, column: 29, scope: !5416)
!5420 = !DILocation(line: 1233, column: 14, scope: !5417)
!5421 = !DILocation(line: 1234, column: 35, scope: !5422)
!5422 = distinct !DILexicalBlock(scope: !5416, file: !1, line: 1233, column: 47)
!5423 = !DILocation(line: 1234, column: 44, scope: !5422)
!5424 = !DILocation(line: 1234, column: 51, scope: !5422)
!5425 = !DILocation(line: 1234, column: 56, scope: !5422)
!5426 = !DILocation(line: 1234, column: 43, scope: !5422)
!5427 = !DILocation(line: 1234, column: 30, scope: !5422)
!5428 = !DILocation(line: 1235, column: 35, scope: !5422)
!5429 = !DILocation(line: 1235, column: 44, scope: !5422)
!5430 = !DILocation(line: 1235, column: 51, scope: !5422)
!5431 = !DILocation(line: 1235, column: 56, scope: !5422)
!5432 = !DILocation(line: 1235, column: 43, scope: !5422)
!5433 = !DILocation(line: 1235, column: 30, scope: !5422)
!5434 = !DILocation(line: 1234, column: 20, scope: !5422)
!5435 = !DILocation(line: 1234, column: 11, scope: !5422)
!5436 = !DILocation(line: 1234, column: 19, scope: !5422)
!5437 = !DILocation(line: 1236, column: 30, scope: !5422)
!5438 = !DILocation(line: 1237, column: 29, scope: !5422)
!5439 = !DILocation(line: 1237, column: 38, scope: !5422)
!5440 = !DILocation(line: 1237, column: 45, scope: !5422)
!5441 = !DILocation(line: 1237, column: 50, scope: !5422)
!5442 = !DILocation(line: 1237, column: 37, scope: !5422)
!5443 = !DILocation(line: 1237, column: 52, scope: !5422)
!5444 = !DILocation(line: 1237, column: 59, scope: !5422)
!5445 = !DILocation(line: 1237, column: 51, scope: !5422)
!5446 = !DILocation(line: 1237, column: 24, scope: !5422)
!5447 = !DILocation(line: 1236, column: 20, scope: !5422)
!5448 = !DILocation(line: 1236, column: 11, scope: !5422)
!5449 = !DILocation(line: 1236, column: 19, scope: !5422)
!5450 = !DILocation(line: 1238, column: 30, scope: !5422)
!5451 = !DILocation(line: 1239, column: 29, scope: !5422)
!5452 = !DILocation(line: 1239, column: 38, scope: !5422)
!5453 = !DILocation(line: 1239, column: 45, scope: !5422)
!5454 = !DILocation(line: 1239, column: 50, scope: !5422)
!5455 = !DILocation(line: 1239, column: 37, scope: !5422)
!5456 = !DILocation(line: 1239, column: 52, scope: !5422)
!5457 = !DILocation(line: 1239, column: 59, scope: !5422)
!5458 = !DILocation(line: 1239, column: 51, scope: !5422)
!5459 = !DILocation(line: 1239, column: 24, scope: !5422)
!5460 = !DILocation(line: 1238, column: 20, scope: !5422)
!5461 = !DILocation(line: 1238, column: 11, scope: !5422)
!5462 = !DILocation(line: 1238, column: 19, scope: !5422)
!5463 = !DILocation(line: 1240, column: 9, scope: !5422)
!5464 = !DILocation(line: 1242, column: 24, scope: !5465)
!5465 = distinct !DILexicalBlock(scope: !5417, file: !1, line: 1242, column: 14)
!5466 = !DILocation(line: 1242, column: 23, scope: !5465)
!5467 = !DILocation(line: 1242, column: 14, scope: !5465)
!5468 = !DILocation(line: 1242, column: 34, scope: !5465)
!5469 = !DILocation(line: 1242, column: 14, scope: !5417)
!5470 = !DILocalVariable(name: "rx", scope: !5471, file: !1, line: 1243, type: !638)
!5471 = distinct !DILexicalBlock(scope: !5465, file: !1, line: 1242, column: 52)
!5472 = !DILocation(line: 1243, column: 18, scope: !5471)
!5473 = !DILocalVariable(name: "ry", scope: !5471, file: !1, line: 1243, type: !638)
!5474 = !DILocation(line: 1243, column: 21, scope: !5471)
!5475 = !DILocation(line: 1244, column: 16, scope: !5471)
!5476 = !DILocation(line: 1244, column: 25, scope: !5471)
!5477 = !DILocation(line: 1244, column: 32, scope: !5471)
!5478 = !DILocation(line: 1244, column: 37, scope: !5471)
!5479 = !DILocation(line: 1244, column: 24, scope: !5471)
!5480 = !DILocation(line: 1244, column: 14, scope: !5471)
!5481 = !DILocation(line: 1245, column: 16, scope: !5471)
!5482 = !DILocation(line: 1245, column: 25, scope: !5471)
!5483 = !DILocation(line: 1245, column: 32, scope: !5471)
!5484 = !DILocation(line: 1245, column: 37, scope: !5471)
!5485 = !DILocation(line: 1245, column: 24, scope: !5471)
!5486 = !DILocation(line: 1245, column: 14, scope: !5471)
!5487 = !DILocation(line: 1246, column: 22, scope: !5471)
!5488 = !DILocation(line: 1246, column: 25, scope: !5471)
!5489 = !DILocation(line: 1246, column: 24, scope: !5471)
!5490 = !DILocation(line: 1246, column: 28, scope: !5471)
!5491 = !DILocation(line: 1246, column: 31, scope: !5471)
!5492 = !DILocation(line: 1246, column: 30, scope: !5471)
!5493 = !DILocation(line: 1246, column: 27, scope: !5471)
!5494 = !DILocation(line: 1246, column: 11, scope: !5471)
!5495 = !DILocation(line: 1246, column: 20, scope: !5471)
!5496 = !DILocation(line: 1247, column: 16, scope: !5471)
!5497 = !DILocation(line: 1247, column: 25, scope: !5471)
!5498 = !DILocation(line: 1247, column: 32, scope: !5471)
!5499 = !DILocation(line: 1247, column: 37, scope: !5471)
!5500 = !DILocation(line: 1247, column: 24, scope: !5471)
!5501 = !DILocation(line: 1247, column: 39, scope: !5471)
!5502 = !DILocation(line: 1247, column: 46, scope: !5471)
!5503 = !DILocation(line: 1247, column: 38, scope: !5471)
!5504 = !DILocation(line: 1247, column: 14, scope: !5471)
!5505 = !DILocation(line: 1248, column: 32, scope: !5471)
!5506 = !DILocation(line: 1248, column: 41, scope: !5471)
!5507 = !DILocation(line: 1248, column: 44, scope: !5471)
!5508 = !DILocation(line: 1248, column: 43, scope: !5471)
!5509 = !DILocation(line: 1248, column: 47, scope: !5471)
!5510 = !DILocation(line: 1248, column: 50, scope: !5471)
!5511 = !DILocation(line: 1248, column: 49, scope: !5471)
!5512 = !DILocation(line: 1248, column: 46, scope: !5471)
!5513 = !DILocation(line: 1248, column: 22, scope: !5471)
!5514 = !DILocation(line: 1248, column: 11, scope: !5471)
!5515 = !DILocation(line: 1248, column: 20, scope: !5471)
!5516 = !DILocation(line: 1249, column: 16, scope: !5471)
!5517 = !DILocation(line: 1249, column: 25, scope: !5471)
!5518 = !DILocation(line: 1249, column: 32, scope: !5471)
!5519 = !DILocation(line: 1249, column: 37, scope: !5471)
!5520 = !DILocation(line: 1249, column: 24, scope: !5471)
!5521 = !DILocation(line: 1249, column: 39, scope: !5471)
!5522 = !DILocation(line: 1249, column: 46, scope: !5471)
!5523 = !DILocation(line: 1249, column: 38, scope: !5471)
!5524 = !DILocation(line: 1249, column: 14, scope: !5471)
!5525 = !DILocation(line: 1250, column: 32, scope: !5471)
!5526 = !DILocation(line: 1250, column: 41, scope: !5471)
!5527 = !DILocation(line: 1250, column: 44, scope: !5471)
!5528 = !DILocation(line: 1250, column: 43, scope: !5471)
!5529 = !DILocation(line: 1250, column: 47, scope: !5471)
!5530 = !DILocation(line: 1250, column: 50, scope: !5471)
!5531 = !DILocation(line: 1250, column: 49, scope: !5471)
!5532 = !DILocation(line: 1250, column: 46, scope: !5471)
!5533 = !DILocation(line: 1250, column: 22, scope: !5471)
!5534 = !DILocation(line: 1250, column: 11, scope: !5471)
!5535 = !DILocation(line: 1250, column: 20, scope: !5471)
!5536 = !DILocation(line: 1251, column: 16, scope: !5471)
!5537 = !DILocation(line: 1251, column: 25, scope: !5471)
!5538 = !DILocation(line: 1251, column: 32, scope: !5471)
!5539 = !DILocation(line: 1251, column: 37, scope: !5471)
!5540 = !DILocation(line: 1251, column: 24, scope: !5471)
!5541 = !DILocation(line: 1251, column: 14, scope: !5471)
!5542 = !DILocation(line: 1252, column: 32, scope: !5471)
!5543 = !DILocation(line: 1252, column: 41, scope: !5471)
!5544 = !DILocation(line: 1252, column: 44, scope: !5471)
!5545 = !DILocation(line: 1252, column: 43, scope: !5471)
!5546 = !DILocation(line: 1252, column: 47, scope: !5471)
!5547 = !DILocation(line: 1252, column: 50, scope: !5471)
!5548 = !DILocation(line: 1252, column: 49, scope: !5471)
!5549 = !DILocation(line: 1252, column: 46, scope: !5471)
!5550 = !DILocation(line: 1252, column: 22, scope: !5471)
!5551 = !DILocation(line: 1252, column: 11, scope: !5471)
!5552 = !DILocation(line: 1252, column: 20, scope: !5471)
!5553 = !DILocation(line: 1253, column: 27, scope: !5471)
!5554 = !DILocation(line: 1253, column: 22, scope: !5471)
!5555 = !DILocation(line: 1253, column: 11, scope: !5471)
!5556 = !DILocation(line: 1253, column: 20, scope: !5471)
!5557 = !DILocation(line: 1254, column: 9, scope: !5471)
!5558 = !DILocation(line: 1255, column: 7, scope: !5417)
!5559 = !DILocation(line: 1257, column: 12, scope: !5560)
!5560 = distinct !DILexicalBlock(scope: !5310, file: !1, line: 1257, column: 12)
!5561 = !DILocation(line: 1257, column: 21, scope: !5560)
!5562 = !DILocation(line: 1257, column: 37, scope: !5560)
!5563 = !DILocation(line: 1257, column: 40, scope: !5560)
!5564 = !DILocation(line: 1257, column: 49, scope: !5560)
!5565 = !DILocation(line: 1258, column: 12, scope: !5560)
!5566 = !DILocation(line: 1258, column: 16, scope: !5560)
!5567 = !DILocation(line: 1258, column: 25, scope: !5560)
!5568 = !DILocation(line: 1258, column: 24, scope: !5560)
!5569 = !DILocation(line: 1258, column: 35, scope: !5560)
!5570 = !DILocation(line: 1257, column: 12, scope: !5310)
!5571 = !DILocation(line: 1259, column: 37, scope: !5572)
!5572 = distinct !DILexicalBlock(scope: !5560, file: !1, line: 1258, column: 53)
!5573 = !DILocation(line: 1261, column: 60, scope: !5572)
!5574 = !DILocation(line: 1261, column: 59, scope: !5572)
!5575 = !DILocation(line: 1261, column: 13, scope: !5572)
!5576 = !DILocation(line: 1259, column: 16, scope: !5572)
!5577 = !DILocation(line: 1262, column: 49, scope: !5572)
!5578 = !DILocation(line: 1262, column: 26, scope: !5572)
!5579 = !DILocation(line: 1262, column: 15, scope: !5572)
!5580 = !DILocation(line: 1262, column: 14, scope: !5572)
!5581 = !DILocation(line: 1263, column: 9, scope: !5572)
!5582 = !DILocation(line: 1266, column: 13, scope: !5583)
!5583 = distinct !DILexicalBlock(scope: !5310, file: !1, line: 1266, column: 12)
!5584 = !DILocation(line: 1266, column: 12, scope: !5583)
!5585 = !DILocation(line: 1266, column: 20, scope: !5583)
!5586 = !DILocation(line: 1266, column: 12, scope: !5310)
!5587 = !DILocation(line: 1267, column: 27, scope: !5588)
!5588 = distinct !DILexicalBlock(scope: !5583, file: !1, line: 1266, column: 41)
!5589 = !DILocation(line: 1267, column: 34, scope: !5588)
!5590 = !DILocation(line: 1267, column: 18, scope: !5588)
!5591 = !DILocation(line: 1267, column: 43, scope: !5588)
!5592 = !DILocation(line: 1267, column: 52, scope: !5588)
!5593 = !DILocation(line: 1267, column: 51, scope: !5588)
!5594 = !DILocation(line: 1267, column: 41, scope: !5588)
!5595 = !DILocation(line: 1267, column: 9, scope: !5588)
!5596 = !DILocation(line: 1267, column: 17, scope: !5588)
!5597 = !DILocation(line: 1268, column: 27, scope: !5588)
!5598 = !DILocation(line: 1268, column: 34, scope: !5588)
!5599 = !DILocation(line: 1268, column: 18, scope: !5588)
!5600 = !DILocation(line: 1268, column: 40, scope: !5588)
!5601 = !DILocation(line: 1268, column: 49, scope: !5588)
!5602 = !DILocation(line: 1268, column: 48, scope: !5588)
!5603 = !DILocation(line: 1268, column: 38, scope: !5588)
!5604 = !DILocation(line: 1268, column: 9, scope: !5588)
!5605 = !DILocation(line: 1268, column: 17, scope: !5588)
!5606 = !DILocation(line: 1269, column: 7, scope: !5588)
!5607 = !DILocation(line: 1271, column: 19, scope: !5608)
!5608 = distinct !DILexicalBlock(scope: !5583, file: !1, line: 1270, column: 12)
!5609 = !DILocation(line: 1271, column: 28, scope: !5608)
!5610 = !DILocation(line: 1271, column: 27, scope: !5608)
!5611 = !DILocation(line: 1271, column: 38, scope: !5608)
!5612 = !DILocation(line: 1271, column: 45, scope: !5608)
!5613 = !DILocation(line: 1271, column: 37, scope: !5608)
!5614 = !DILocation(line: 1271, column: 9, scope: !5608)
!5615 = !DILocation(line: 1271, column: 17, scope: !5608)
!5616 = !DILocation(line: 1272, column: 19, scope: !5608)
!5617 = !DILocation(line: 1272, column: 28, scope: !5608)
!5618 = !DILocation(line: 1272, column: 27, scope: !5608)
!5619 = !DILocation(line: 1272, column: 38, scope: !5608)
!5620 = !DILocation(line: 1272, column: 45, scope: !5608)
!5621 = !DILocation(line: 1272, column: 37, scope: !5608)
!5622 = !DILocation(line: 1272, column: 9, scope: !5608)
!5623 = !DILocation(line: 1272, column: 17, scope: !5608)
!5624 = !DILocation(line: 1274, column: 14, scope: !5310)
!5625 = !DILocation(line: 1274, column: 7, scope: !5310)
!5626 = !DILocation(line: 1301, column: 12, scope: !5627)
!5627 = distinct !DILexicalBlock(scope: !5628, file: !1, line: 1301, column: 12)
!5628 = distinct !DILexicalBlock(scope: !4107, file: !1, line: 1278, column: 5)
!5629 = !DILocation(line: 1301, column: 25, scope: !5627)
!5630 = !DILocation(line: 1301, column: 41, scope: !5627)
!5631 = !DILocation(line: 1301, column: 44, scope: !5627)
!5632 = !DILocation(line: 1301, column: 57, scope: !5627)
!5633 = !DILocation(line: 1301, column: 12, scope: !5628)
!5634 = !DILocation(line: 1302, column: 37, scope: !5635)
!5635 = distinct !DILexicalBlock(scope: !5627, file: !1, line: 1301, column: 67)
!5636 = !DILocation(line: 1304, column: 60, scope: !5635)
!5637 = !DILocation(line: 1304, column: 59, scope: !5635)
!5638 = !DILocation(line: 1304, column: 13, scope: !5635)
!5639 = !DILocation(line: 1302, column: 16, scope: !5635)
!5640 = !DILocation(line: 1305, column: 49, scope: !5635)
!5641 = !DILocation(line: 1305, column: 26, scope: !5635)
!5642 = !DILocation(line: 1305, column: 15, scope: !5635)
!5643 = !DILocation(line: 1305, column: 14, scope: !5635)
!5644 = !DILocation(line: 1306, column: 9, scope: !5635)
!5645 = !DILocation(line: 1308, column: 35, scope: !5628)
!5646 = !DILocation(line: 1308, column: 18, scope: !5628)
!5647 = !DILocation(line: 1308, column: 7, scope: !5628)
!5648 = !DILocation(line: 1308, column: 16, scope: !5628)
!5649 = !DILocation(line: 1309, column: 13, scope: !5650)
!5650 = distinct !DILexicalBlock(scope: !5628, file: !1, line: 1309, column: 12)
!5651 = !DILocation(line: 1309, column: 12, scope: !5650)
!5652 = !DILocation(line: 1309, column: 20, scope: !5650)
!5653 = !DILocation(line: 1309, column: 12, scope: !5628)
!5654 = !DILocation(line: 1313, column: 29, scope: !5650)
!5655 = !DILocation(line: 1313, column: 36, scope: !5650)
!5656 = !DILocation(line: 1313, column: 20, scope: !5650)
!5657 = !DILocation(line: 1313, column: 44, scope: !5650)
!5658 = !DILocation(line: 1313, column: 43, scope: !5650)
!5659 = !DILocation(line: 1313, column: 9, scope: !5650)
!5660 = !DILocation(line: 1313, column: 18, scope: !5650)
!5661 = !DILocation(line: 1316, column: 29, scope: !5650)
!5662 = !DILocation(line: 1316, column: 36, scope: !5650)
!5663 = !DILocation(line: 1316, column: 20, scope: !5650)
!5664 = !DILocation(line: 1316, column: 56, scope: !5650)
!5665 = !DILocation(line: 1316, column: 64, scope: !5650)
!5666 = !DILocation(line: 1316, column: 52, scope: !5650)
!5667 = !DILocation(line: 1316, column: 50, scope: !5650)
!5668 = !DILocation(line: 1316, column: 44, scope: !5650)
!5669 = !DILocation(line: 1316, column: 9, scope: !5650)
!5670 = !DILocation(line: 1316, column: 18, scope: !5650)
!5671 = !DILocation(line: 1318, column: 27, scope: !5628)
!5672 = !DILocation(line: 1318, column: 34, scope: !5628)
!5673 = !DILocation(line: 1318, column: 18, scope: !5628)
!5674 = !DILocation(line: 1318, column: 42, scope: !5628)
!5675 = !DILocation(line: 1318, column: 47, scope: !5628)
!5676 = !DILocation(line: 1318, column: 54, scope: !5628)
!5677 = !DILocation(line: 1318, column: 59, scope: !5628)
!5678 = !DILocation(line: 1318, column: 46, scope: !5628)
!5679 = !DILocation(line: 1318, column: 7, scope: !5628)
!5680 = !DILocation(line: 1318, column: 16, scope: !5628)
!5681 = !DILocation(line: 1319, column: 27, scope: !5628)
!5682 = !DILocation(line: 1319, column: 34, scope: !5628)
!5683 = !DILocation(line: 1319, column: 18, scope: !5628)
!5684 = !DILocation(line: 1319, column: 39, scope: !5628)
!5685 = !DILocation(line: 1319, column: 44, scope: !5628)
!5686 = !DILocation(line: 1319, column: 51, scope: !5628)
!5687 = !DILocation(line: 1319, column: 56, scope: !5628)
!5688 = !DILocation(line: 1319, column: 43, scope: !5628)
!5689 = !DILocation(line: 1319, column: 7, scope: !5628)
!5690 = !DILocation(line: 1319, column: 16, scope: !5628)
!5691 = !DILocation(line: 1320, column: 18, scope: !5628)
!5692 = !DILocation(line: 1320, column: 7, scope: !5628)
!5693 = !DILocation(line: 1320, column: 16, scope: !5628)
!5694 = !DILocation(line: 1321, column: 18, scope: !5628)
!5695 = !DILocation(line: 1321, column: 7, scope: !5628)
!5696 = !DILocation(line: 1321, column: 16, scope: !5628)
!5697 = !DILocation(line: 1322, column: 14, scope: !5628)
!5698 = !DILocation(line: 1322, column: 7, scope: !5628)
!5699 = !DILocalVariable(name: "rscale", scope: !5700, file: !1, line: 1346, type: !638)
!5700 = distinct !DILexicalBlock(scope: !4107, file: !1, line: 1326, column: 5)
!5701 = !DILocation(line: 1346, column: 9, scope: !5700)
!5702 = !DILocation(line: 1346, column: 41, scope: !5700)
!5703 = !DILocation(line: 1346, column: 48, scope: !5700)
!5704 = !DILocation(line: 1346, column: 32, scope: !5700)
!5705 = !DILocation(line: 1346, column: 65, scope: !5700)
!5706 = !DILocation(line: 1346, column: 72, scope: !5700)
!5707 = !DILocation(line: 1346, column: 56, scope: !5700)
!5708 = !DILocation(line: 1346, column: 22, scope: !5700)
!5709 = !DILocation(line: 1346, column: 21, scope: !5700)
!5710 = !DILocation(line: 1349, column: 13, scope: !5711)
!5711 = distinct !DILexicalBlock(scope: !5700, file: !1, line: 1349, column: 12)
!5712 = !DILocation(line: 1349, column: 31, scope: !5711)
!5713 = !DILocation(line: 1349, column: 36, scope: !5711)
!5714 = !DILocation(line: 1349, column: 40, scope: !5711)
!5715 = !DILocation(line: 1349, column: 57, scope: !5711)
!5716 = !DILocation(line: 1349, column: 63, scope: !5711)
!5717 = !DILocation(line: 1350, column: 13, scope: !5711)
!5718 = !DILocation(line: 1350, column: 30, scope: !5711)
!5719 = !DILocation(line: 1350, column: 36, scope: !5711)
!5720 = !DILocation(line: 1350, column: 40, scope: !5711)
!5721 = !DILocation(line: 1350, column: 57, scope: !5711)
!5722 = !DILocation(line: 1349, column: 12, scope: !5700)
!5723 = !DILocation(line: 1352, column: 51, scope: !5724)
!5724 = distinct !DILexicalBlock(scope: !5711, file: !1, line: 1351, column: 9)
!5725 = !DILocation(line: 1352, column: 28, scope: !5724)
!5726 = !DILocation(line: 1352, column: 17, scope: !5724)
!5727 = !DILocation(line: 1352, column: 16, scope: !5724)
!5728 = !DILocation(line: 1353, column: 39, scope: !5724)
!5729 = !DILocation(line: 1355, column: 60, scope: !5724)
!5730 = !DILocation(line: 1355, column: 59, scope: !5724)
!5731 = !DILocation(line: 1355, column: 13, scope: !5724)
!5732 = !DILocation(line: 1353, column: 18, scope: !5724)
!5733 = !DILocation(line: 1356, column: 11, scope: !5724)
!5734 = !DILocation(line: 1359, column: 18, scope: !5700)
!5735 = !DILocation(line: 1359, column: 7, scope: !5700)
!5736 = !DILocation(line: 1359, column: 16, scope: !5700)
!5737 = !DILocation(line: 1360, column: 18, scope: !5700)
!5738 = !DILocation(line: 1360, column: 7, scope: !5700)
!5739 = !DILocation(line: 1360, column: 16, scope: !5700)
!5740 = !DILocation(line: 1361, column: 18, scope: !5700)
!5741 = !DILocation(line: 1361, column: 7, scope: !5700)
!5742 = !DILocation(line: 1361, column: 16, scope: !5700)
!5743 = !DILocation(line: 1362, column: 12, scope: !5744)
!5744 = distinct !DILexicalBlock(scope: !5700, file: !1, line: 1362, column: 11)
!5745 = !DILocation(line: 1362, column: 29, scope: !5744)
!5746 = !DILocation(line: 1362, column: 35, scope: !5744)
!5747 = !DILocation(line: 1362, column: 39, scope: !5744)
!5748 = !DILocation(line: 1362, column: 56, scope: !5744)
!5749 = !DILocation(line: 1362, column: 11, scope: !5700)
!5750 = !DILocation(line: 1363, column: 26, scope: !5744)
!5751 = !DILocation(line: 1363, column: 24, scope: !5744)
!5752 = !DILocation(line: 1363, column: 37, scope: !5744)
!5753 = !DILocation(line: 1363, column: 35, scope: !5744)
!5754 = !DILocation(line: 1363, column: 48, scope: !5744)
!5755 = !DILocation(line: 1363, column: 46, scope: !5744)
!5756 = !DILocation(line: 1363, column: 9, scope: !5744)
!5757 = !DILocation(line: 1363, column: 18, scope: !5744)
!5758 = !DILocation(line: 1365, column: 20, scope: !5744)
!5759 = !DILocation(line: 1365, column: 9, scope: !5744)
!5760 = !DILocation(line: 1365, column: 18, scope: !5744)
!5761 = !DILocation(line: 1367, column: 23, scope: !5700)
!5762 = !DILocation(line: 1367, column: 19, scope: !5700)
!5763 = !DILocation(line: 1367, column: 7, scope: !5700)
!5764 = !DILocation(line: 1367, column: 16, scope: !5700)
!5765 = !DILocation(line: 1368, column: 19, scope: !5700)
!5766 = !DILocation(line: 1368, column: 26, scope: !5700)
!5767 = !DILocation(line: 1368, column: 25, scope: !5700)
!5768 = !DILocation(line: 1368, column: 7, scope: !5700)
!5769 = !DILocation(line: 1368, column: 16, scope: !5700)
!5770 = !DILocation(line: 1369, column: 19, scope: !5700)
!5771 = !DILocation(line: 1369, column: 7, scope: !5700)
!5772 = !DILocation(line: 1369, column: 16, scope: !5700)
!5773 = !DILocation(line: 1371, column: 12, scope: !5774)
!5774 = distinct !DILexicalBlock(scope: !5700, file: !1, line: 1371, column: 12)
!5775 = !DILocation(line: 1371, column: 29, scope: !5774)
!5776 = !DILocation(line: 1371, column: 12, scope: !5700)
!5777 = !DILocation(line: 1372, column: 20, scope: !5778)
!5778 = distinct !DILexicalBlock(scope: !5774, file: !1, line: 1371, column: 36)
!5779 = !DILocation(line: 1372, column: 39, scope: !5778)
!5780 = !DILocation(line: 1372, column: 35, scope: !5778)
!5781 = !DILocation(line: 1372, column: 33, scope: !5778)
!5782 = !DILocation(line: 1372, column: 9, scope: !5778)
!5783 = !DILocation(line: 1372, column: 18, scope: !5778)
!5784 = !DILocation(line: 1373, column: 20, scope: !5778)
!5785 = !DILocation(line: 1373, column: 35, scope: !5778)
!5786 = !DILocation(line: 1373, column: 33, scope: !5778)
!5787 = !DILocation(line: 1373, column: 42, scope: !5778)
!5788 = !DILocation(line: 1373, column: 41, scope: !5778)
!5789 = !DILocation(line: 1373, column: 9, scope: !5778)
!5790 = !DILocation(line: 1373, column: 18, scope: !5778)
!5791 = !DILocation(line: 1374, column: 20, scope: !5778)
!5792 = !DILocation(line: 1374, column: 35, scope: !5778)
!5793 = !DILocation(line: 1374, column: 33, scope: !5778)
!5794 = !DILocation(line: 1374, column: 9, scope: !5778)
!5795 = !DILocation(line: 1374, column: 18, scope: !5778)
!5796 = !DILocation(line: 1375, column: 20, scope: !5778)
!5797 = !DILocation(line: 1375, column: 9, scope: !5778)
!5798 = !DILocation(line: 1375, column: 18, scope: !5778)
!5799 = !DILocation(line: 1376, column: 7, scope: !5778)
!5800 = !DILocation(line: 1378, column: 20, scope: !5801)
!5801 = distinct !DILexicalBlock(scope: !5774, file: !1, line: 1377, column: 12)
!5802 = !DILocation(line: 1378, column: 9, scope: !5801)
!5803 = !DILocation(line: 1378, column: 18, scope: !5801)
!5804 = !DILocation(line: 1379, column: 20, scope: !5801)
!5805 = !DILocation(line: 1379, column: 9, scope: !5801)
!5806 = !DILocation(line: 1379, column: 18, scope: !5801)
!5807 = !DILocation(line: 1380, column: 20, scope: !5801)
!5808 = !DILocation(line: 1380, column: 9, scope: !5801)
!5809 = !DILocation(line: 1380, column: 18, scope: !5801)
!5810 = !DILocation(line: 1381, column: 20, scope: !5801)
!5811 = !DILocation(line: 1381, column: 9, scope: !5801)
!5812 = !DILocation(line: 1381, column: 18, scope: !5801)
!5813 = !DILocation(line: 1384, column: 12, scope: !5814)
!5814 = distinct !DILexicalBlock(scope: !5700, file: !1, line: 1384, column: 12)
!5815 = !DILocation(line: 1384, column: 29, scope: !5814)
!5816 = !DILocation(line: 1384, column: 12, scope: !5700)
!5817 = !DILocation(line: 1385, column: 20, scope: !5818)
!5818 = distinct !DILexicalBlock(scope: !5814, file: !1, line: 1384, column: 37)
!5819 = !DILocation(line: 1385, column: 9, scope: !5818)
!5820 = !DILocation(line: 1385, column: 18, scope: !5818)
!5821 = !DILocation(line: 1386, column: 20, scope: !5818)
!5822 = !DILocation(line: 1386, column: 9, scope: !5818)
!5823 = !DILocation(line: 1386, column: 18, scope: !5818)
!5824 = !DILocation(line: 1387, column: 7, scope: !5818)
!5825 = !DILocation(line: 1388, column: 17, scope: !5826)
!5826 = distinct !DILexicalBlock(scope: !5814, file: !1, line: 1388, column: 17)
!5827 = !DILocation(line: 1388, column: 34, scope: !5826)
!5828 = !DILocation(line: 1388, column: 17, scope: !5814)
!5829 = !DILocation(line: 1389, column: 20, scope: !5830)
!5830 = distinct !DILexicalBlock(scope: !5826, file: !1, line: 1388, column: 41)
!5831 = !DILocation(line: 1389, column: 9, scope: !5830)
!5832 = !DILocation(line: 1389, column: 18, scope: !5830)
!5833 = !DILocation(line: 1390, column: 20, scope: !5830)
!5834 = !DILocation(line: 1390, column: 9, scope: !5830)
!5835 = !DILocation(line: 1390, column: 18, scope: !5830)
!5836 = !DILocation(line: 1391, column: 7, scope: !5830)
!5837 = !DILocation(line: 1392, column: 17, scope: !5838)
!5838 = distinct !DILexicalBlock(scope: !5826, file: !1, line: 1392, column: 17)
!5839 = !DILocation(line: 1392, column: 34, scope: !5838)
!5840 = !DILocation(line: 1392, column: 17, scope: !5826)
!5841 = !DILocation(line: 1393, column: 20, scope: !5842)
!5842 = distinct !DILexicalBlock(scope: !5838, file: !1, line: 1392, column: 42)
!5843 = !DILocation(line: 1393, column: 9, scope: !5842)
!5844 = !DILocation(line: 1393, column: 18, scope: !5842)
!5845 = !DILocation(line: 1394, column: 20, scope: !5842)
!5846 = !DILocation(line: 1394, column: 9, scope: !5842)
!5847 = !DILocation(line: 1394, column: 18, scope: !5842)
!5848 = !DILocation(line: 1395, column: 7, scope: !5842)
!5849 = !DILocation(line: 1398, column: 28, scope: !5850)
!5850 = distinct !DILexicalBlock(scope: !5838, file: !1, line: 1396, column: 12)
!5851 = !DILocation(line: 1398, column: 35, scope: !5850)
!5852 = !DILocation(line: 1398, column: 20, scope: !5850)
!5853 = !DILocation(line: 1398, column: 42, scope: !5850)
!5854 = !DILocation(line: 1398, column: 49, scope: !5850)
!5855 = !DILocation(line: 1398, column: 56, scope: !5850)
!5856 = !DILocation(line: 1398, column: 61, scope: !5850)
!5857 = !DILocation(line: 1398, column: 47, scope: !5850)
!5858 = !DILocation(line: 1398, column: 9, scope: !5850)
!5859 = !DILocation(line: 1398, column: 18, scope: !5850)
!5860 = !DILocation(line: 1399, column: 28, scope: !5850)
!5861 = !DILocation(line: 1399, column: 35, scope: !5850)
!5862 = !DILocation(line: 1399, column: 20, scope: !5850)
!5863 = !DILocation(line: 1399, column: 39, scope: !5850)
!5864 = !DILocation(line: 1399, column: 49, scope: !5850)
!5865 = !DILocation(line: 1399, column: 56, scope: !5850)
!5866 = !DILocation(line: 1399, column: 61, scope: !5850)
!5867 = !DILocation(line: 1399, column: 47, scope: !5850)
!5868 = !DILocation(line: 1399, column: 9, scope: !5850)
!5869 = !DILocation(line: 1399, column: 18, scope: !5850)
!5870 = !DILocation(line: 1401, column: 14, scope: !5700)
!5871 = !DILocation(line: 1401, column: 7, scope: !5700)
!5872 = !DILocation(line: 1410, column: 12, scope: !5873)
!5873 = distinct !DILexicalBlock(scope: !5874, file: !1, line: 1410, column: 12)
!5874 = distinct !DILexicalBlock(scope: !4107, file: !1, line: 1404, column: 5)
!5875 = !DILocation(line: 1410, column: 29, scope: !5873)
!5876 = !DILocation(line: 1410, column: 28, scope: !5873)
!5877 = !DILocation(line: 1410, column: 37, scope: !5873)
!5878 = !DILocation(line: 1410, column: 42, scope: !5873)
!5879 = !DILocation(line: 1411, column: 12, scope: !5873)
!5880 = !DILocation(line: 1411, column: 31, scope: !5873)
!5881 = !DILocation(line: 1411, column: 29, scope: !5873)
!5882 = !DILocation(line: 1410, column: 12, scope: !5874)
!5883 = !DILocation(line: 1412, column: 37, scope: !5884)
!5884 = distinct !DILexicalBlock(scope: !5873, file: !1, line: 1411, column: 41)
!5885 = !DILocation(line: 1414, column: 62, scope: !5884)
!5886 = !DILocation(line: 1414, column: 61, scope: !5884)
!5887 = !DILocation(line: 1414, column: 15, scope: !5884)
!5888 = !DILocation(line: 1412, column: 16, scope: !5884)
!5889 = !DILocation(line: 1415, column: 49, scope: !5884)
!5890 = !DILocation(line: 1415, column: 26, scope: !5884)
!5891 = !DILocation(line: 1415, column: 15, scope: !5884)
!5892 = !DILocation(line: 1415, column: 14, scope: !5884)
!5893 = !DILocation(line: 1416, column: 9, scope: !5884)
!5894 = !DILocalVariable(name: "artifact", scope: !5895, file: !1, line: 1419, type: !734)
!5895 = distinct !DILexicalBlock(scope: !5874, file: !1, line: 1419, column: 7)
!5896 = !DILocation(line: 1419, column: 21, scope: !5895)
!5897 = !DILocation(line: 1419, column: 47, scope: !5895)
!5898 = !DILocation(line: 1419, column: 30, scope: !5895)
!5899 = !DILocation(line: 1420, column: 14, scope: !5900)
!5900 = distinct !DILexicalBlock(scope: !5895, file: !1, line: 1420, column: 14)
!5901 = !DILocation(line: 1420, column: 23, scope: !5900)
!5902 = !DILocation(line: 1420, column: 14, scope: !5895)
!5903 = !DILocation(line: 1421, column: 35, scope: !5904)
!5904 = distinct !DILexicalBlock(scope: !5900, file: !1, line: 1420, column: 48)
!5905 = !DILocation(line: 1421, column: 20, scope: !5904)
!5906 = !DILocation(line: 1421, column: 60, scope: !5904)
!5907 = !DILocation(line: 1421, column: 11, scope: !5904)
!5908 = !DILocation(line: 1421, column: 19, scope: !5904)
!5909 = !DILocation(line: 1422, column: 16, scope: !5910)
!5910 = distinct !DILexicalBlock(scope: !5904, file: !1, line: 1422, column: 16)
!5911 = !DILocation(line: 1422, column: 25, scope: !5910)
!5912 = !DILocation(line: 1422, column: 16, scope: !5904)
!5913 = !DILocation(line: 1423, column: 41, scope: !5914)
!5914 = distinct !DILexicalBlock(scope: !5910, file: !1, line: 1422, column: 43)
!5915 = !DILocation(line: 1423, column: 20, scope: !5914)
!5916 = !DILocation(line: 1425, column: 53, scope: !5914)
!5917 = !DILocation(line: 1425, column: 30, scope: !5914)
!5918 = !DILocation(line: 1425, column: 19, scope: !5914)
!5919 = !DILocation(line: 1425, column: 18, scope: !5914)
!5920 = !DILocation(line: 1426, column: 13, scope: !5914)
!5921 = !DILocation(line: 1428, column: 9, scope: !5904)
!5922 = !DILocation(line: 1430, column: 11, scope: !5900)
!5923 = !DILocation(line: 1430, column: 19, scope: !5900)
!5924 = !DILocation(line: 1432, column: 14, scope: !5874)
!5925 = !DILocation(line: 1432, column: 7, scope: !5874)
!5926 = !DILocation(line: 1435, column: 7, scope: !4107)
!5927 = !DILocation(line: 1438, column: 3, scope: !3929)
!5928 = !DILocation(line: 1439, column: 3, scope: !3929)
!5929 = !DILocation(line: 1440, column: 1, scope: !3929)
!5930 = distinct !DISubprogram(name: "InvertAffineCoefficients", scope: !1, file: !1, line: 105, type: !5931, scopeLine: 106, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !857)
!5931 = !DISubroutineType(types: !5932)
!5932 = !{null, !915, !821}
!5933 = !DILocalVariable(name: "coeff", arg: 1, scope: !5930, file: !1, line: 105, type: !915)
!5934 = !DILocation(line: 105, column: 52, scope: !5930)
!5935 = !DILocalVariable(name: "inverse", arg: 2, scope: !5930, file: !1, line: 105, type: !821)
!5936 = !DILocation(line: 105, column: 66, scope: !5930)
!5937 = !DILocalVariable(name: "determinant", scope: !5930, file: !1, line: 108, type: !638)
!5938 = !DILocation(line: 108, column: 10, scope: !5930)
!5939 = !DILocation(line: 110, column: 37, scope: !5930)
!5940 = !DILocation(line: 110, column: 46, scope: !5930)
!5941 = !DILocation(line: 110, column: 45, scope: !5930)
!5942 = !DILocation(line: 110, column: 55, scope: !5930)
!5943 = !DILocation(line: 110, column: 64, scope: !5930)
!5944 = !DILocation(line: 110, column: 63, scope: !5930)
!5945 = !DILocation(line: 110, column: 54, scope: !5930)
!5946 = !DILocation(line: 110, column: 15, scope: !5930)
!5947 = !DILocation(line: 110, column: 14, scope: !5930)
!5948 = !DILocation(line: 111, column: 14, scope: !5930)
!5949 = !DILocation(line: 111, column: 26, scope: !5930)
!5950 = !DILocation(line: 111, column: 25, scope: !5930)
!5951 = !DILocation(line: 111, column: 3, scope: !5930)
!5952 = !DILocation(line: 111, column: 13, scope: !5930)
!5953 = !DILocation(line: 112, column: 14, scope: !5930)
!5954 = !DILocation(line: 112, column: 28, scope: !5930)
!5955 = !DILocation(line: 112, column: 27, scope: !5930)
!5956 = !DILocation(line: 112, column: 25, scope: !5930)
!5957 = !DILocation(line: 112, column: 3, scope: !5930)
!5958 = !DILocation(line: 112, column: 13, scope: !5930)
!5959 = !DILocation(line: 113, column: 14, scope: !5930)
!5960 = !DILocation(line: 113, column: 27, scope: !5930)
!5961 = !DILocation(line: 113, column: 36, scope: !5930)
!5962 = !DILocation(line: 113, column: 35, scope: !5930)
!5963 = !DILocation(line: 113, column: 45, scope: !5930)
!5964 = !DILocation(line: 113, column: 54, scope: !5930)
!5965 = !DILocation(line: 113, column: 53, scope: !5930)
!5966 = !DILocation(line: 113, column: 44, scope: !5930)
!5967 = !DILocation(line: 113, column: 25, scope: !5930)
!5968 = !DILocation(line: 113, column: 3, scope: !5930)
!5969 = !DILocation(line: 113, column: 13, scope: !5930)
!5970 = !DILocation(line: 114, column: 14, scope: !5930)
!5971 = !DILocation(line: 114, column: 28, scope: !5930)
!5972 = !DILocation(line: 114, column: 27, scope: !5930)
!5973 = !DILocation(line: 114, column: 25, scope: !5930)
!5974 = !DILocation(line: 114, column: 3, scope: !5930)
!5975 = !DILocation(line: 114, column: 13, scope: !5930)
!5976 = !DILocation(line: 115, column: 14, scope: !5930)
!5977 = !DILocation(line: 115, column: 26, scope: !5930)
!5978 = !DILocation(line: 115, column: 25, scope: !5930)
!5979 = !DILocation(line: 115, column: 3, scope: !5930)
!5980 = !DILocation(line: 115, column: 13, scope: !5930)
!5981 = !DILocation(line: 116, column: 14, scope: !5930)
!5982 = !DILocation(line: 116, column: 27, scope: !5930)
!5983 = !DILocation(line: 116, column: 36, scope: !5930)
!5984 = !DILocation(line: 116, column: 35, scope: !5930)
!5985 = !DILocation(line: 116, column: 45, scope: !5930)
!5986 = !DILocation(line: 116, column: 54, scope: !5930)
!5987 = !DILocation(line: 116, column: 53, scope: !5930)
!5988 = !DILocation(line: 116, column: 44, scope: !5930)
!5989 = !DILocation(line: 116, column: 25, scope: !5930)
!5990 = !DILocation(line: 116, column: 3, scope: !5930)
!5991 = !DILocation(line: 116, column: 13, scope: !5930)
!5992 = !DILocation(line: 117, column: 1, scope: !5930)
!5993 = distinct !DISubprogram(name: "MagickMin", scope: !1, file: !1, line: 81, type: !5994, scopeLine: 82, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !857)
!5994 = !DISubroutineType(types: !5995)
!5995 = !{!638, !916, !916}
!5996 = !DILocalVariable(name: "x", arg: 1, scope: !5993, file: !1, line: 81, type: !916)
!5997 = !DILocation(line: 81, column: 45, scope: !5993)
!5998 = !DILocalVariable(name: "y", arg: 2, scope: !5993, file: !1, line: 81, type: !916)
!5999 = !DILocation(line: 81, column: 60, scope: !5993)
!6000 = !DILocation(line: 83, column: 11, scope: !5993)
!6001 = !DILocation(line: 83, column: 15, scope: !5993)
!6002 = !DILocation(line: 83, column: 13, scope: !5993)
!6003 = !DILocation(line: 83, column: 19, scope: !5993)
!6004 = !DILocation(line: 83, column: 23, scope: !5993)
!6005 = !DILocation(line: 83, column: 3, scope: !5993)
!6006 = distinct !DISubprogram(name: "MagickMax", scope: !1, file: !1, line: 85, type: !5994, scopeLine: 86, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !857)
!6007 = !DILocalVariable(name: "x", arg: 1, scope: !6006, file: !1, line: 85, type: !916)
!6008 = !DILocation(line: 85, column: 45, scope: !6006)
!6009 = !DILocalVariable(name: "y", arg: 2, scope: !6006, file: !1, line: 85, type: !916)
!6010 = !DILocation(line: 85, column: 60, scope: !6006)
!6011 = !DILocation(line: 87, column: 11, scope: !6006)
!6012 = !DILocation(line: 87, column: 15, scope: !6006)
!6013 = !DILocation(line: 87, column: 13, scope: !6006)
!6014 = !DILocation(line: 87, column: 19, scope: !6006)
!6015 = !DILocation(line: 87, column: 23, scope: !6006)
!6016 = !DILocation(line: 87, column: 3, scope: !6006)
!6017 = distinct !DISubprogram(name: "InvertPerspectiveCoefficients", scope: !1, file: !1, line: 119, type: !5931, scopeLine: 121, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !857)
!6018 = !DILocalVariable(name: "coeff", arg: 1, scope: !6017, file: !1, line: 119, type: !915)
!6019 = !DILocation(line: 119, column: 57, scope: !6017)
!6020 = !DILocalVariable(name: "inverse", arg: 2, scope: !6017, file: !1, line: 120, type: !821)
!6021 = !DILocation(line: 120, column: 11, scope: !6017)
!6022 = !DILocalVariable(name: "determinant", scope: !6017, file: !1, line: 123, type: !638)
!6023 = !DILocation(line: 123, column: 10, scope: !6017)
!6024 = !DILocation(line: 125, column: 37, scope: !6017)
!6025 = !DILocation(line: 125, column: 46, scope: !6017)
!6026 = !DILocation(line: 125, column: 45, scope: !6017)
!6027 = !DILocation(line: 125, column: 55, scope: !6017)
!6028 = !DILocation(line: 125, column: 64, scope: !6017)
!6029 = !DILocation(line: 125, column: 63, scope: !6017)
!6030 = !DILocation(line: 125, column: 54, scope: !6017)
!6031 = !DILocation(line: 125, column: 15, scope: !6017)
!6032 = !DILocation(line: 125, column: 14, scope: !6017)
!6033 = !DILocation(line: 126, column: 14, scope: !6017)
!6034 = !DILocation(line: 126, column: 27, scope: !6017)
!6035 = !DILocation(line: 126, column: 36, scope: !6017)
!6036 = !DILocation(line: 126, column: 45, scope: !6017)
!6037 = !DILocation(line: 126, column: 44, scope: !6017)
!6038 = !DILocation(line: 126, column: 35, scope: !6017)
!6039 = !DILocation(line: 126, column: 25, scope: !6017)
!6040 = !DILocation(line: 126, column: 3, scope: !6017)
!6041 = !DILocation(line: 126, column: 13, scope: !6017)
!6042 = !DILocation(line: 127, column: 14, scope: !6017)
!6043 = !DILocation(line: 127, column: 27, scope: !6017)
!6044 = !DILocation(line: 127, column: 36, scope: !6017)
!6045 = !DILocation(line: 127, column: 35, scope: !6017)
!6046 = !DILocation(line: 127, column: 45, scope: !6017)
!6047 = !DILocation(line: 127, column: 44, scope: !6017)
!6048 = !DILocation(line: 127, column: 25, scope: !6017)
!6049 = !DILocation(line: 127, column: 3, scope: !6017)
!6050 = !DILocation(line: 127, column: 13, scope: !6017)
!6051 = !DILocation(line: 128, column: 14, scope: !6017)
!6052 = !DILocation(line: 128, column: 27, scope: !6017)
!6053 = !DILocation(line: 128, column: 36, scope: !6017)
!6054 = !DILocation(line: 128, column: 35, scope: !6017)
!6055 = !DILocation(line: 128, column: 45, scope: !6017)
!6056 = !DILocation(line: 128, column: 54, scope: !6017)
!6057 = !DILocation(line: 128, column: 53, scope: !6017)
!6058 = !DILocation(line: 128, column: 44, scope: !6017)
!6059 = !DILocation(line: 128, column: 25, scope: !6017)
!6060 = !DILocation(line: 128, column: 3, scope: !6017)
!6061 = !DILocation(line: 128, column: 13, scope: !6017)
!6062 = !DILocation(line: 129, column: 14, scope: !6017)
!6063 = !DILocation(line: 129, column: 27, scope: !6017)
!6064 = !DILocation(line: 129, column: 36, scope: !6017)
!6065 = !DILocation(line: 129, column: 35, scope: !6017)
!6066 = !DILocation(line: 129, column: 45, scope: !6017)
!6067 = !DILocation(line: 129, column: 44, scope: !6017)
!6068 = !DILocation(line: 129, column: 25, scope: !6017)
!6069 = !DILocation(line: 129, column: 3, scope: !6017)
!6070 = !DILocation(line: 129, column: 13, scope: !6017)
!6071 = !DILocation(line: 130, column: 14, scope: !6017)
!6072 = !DILocation(line: 130, column: 27, scope: !6017)
!6073 = !DILocation(line: 130, column: 36, scope: !6017)
!6074 = !DILocation(line: 130, column: 45, scope: !6017)
!6075 = !DILocation(line: 130, column: 44, scope: !6017)
!6076 = !DILocation(line: 130, column: 35, scope: !6017)
!6077 = !DILocation(line: 130, column: 25, scope: !6017)
!6078 = !DILocation(line: 130, column: 3, scope: !6017)
!6079 = !DILocation(line: 130, column: 13, scope: !6017)
!6080 = !DILocation(line: 131, column: 14, scope: !6017)
!6081 = !DILocation(line: 131, column: 27, scope: !6017)
!6082 = !DILocation(line: 131, column: 36, scope: !6017)
!6083 = !DILocation(line: 131, column: 35, scope: !6017)
!6084 = !DILocation(line: 131, column: 45, scope: !6017)
!6085 = !DILocation(line: 131, column: 54, scope: !6017)
!6086 = !DILocation(line: 131, column: 53, scope: !6017)
!6087 = !DILocation(line: 131, column: 44, scope: !6017)
!6088 = !DILocation(line: 131, column: 25, scope: !6017)
!6089 = !DILocation(line: 131, column: 3, scope: !6017)
!6090 = !DILocation(line: 131, column: 13, scope: !6017)
!6091 = !DILocation(line: 132, column: 14, scope: !6017)
!6092 = !DILocation(line: 132, column: 27, scope: !6017)
!6093 = !DILocation(line: 132, column: 36, scope: !6017)
!6094 = !DILocation(line: 132, column: 35, scope: !6017)
!6095 = !DILocation(line: 132, column: 45, scope: !6017)
!6096 = !DILocation(line: 132, column: 54, scope: !6017)
!6097 = !DILocation(line: 132, column: 53, scope: !6017)
!6098 = !DILocation(line: 132, column: 44, scope: !6017)
!6099 = !DILocation(line: 132, column: 25, scope: !6017)
!6100 = !DILocation(line: 132, column: 3, scope: !6017)
!6101 = !DILocation(line: 132, column: 13, scope: !6017)
!6102 = !DILocation(line: 133, column: 14, scope: !6017)
!6103 = !DILocation(line: 133, column: 27, scope: !6017)
!6104 = !DILocation(line: 133, column: 36, scope: !6017)
!6105 = !DILocation(line: 133, column: 35, scope: !6017)
!6106 = !DILocation(line: 133, column: 45, scope: !6017)
!6107 = !DILocation(line: 133, column: 54, scope: !6017)
!6108 = !DILocation(line: 133, column: 53, scope: !6017)
!6109 = !DILocation(line: 133, column: 44, scope: !6017)
!6110 = !DILocation(line: 133, column: 25, scope: !6017)
!6111 = !DILocation(line: 133, column: 3, scope: !6017)
!6112 = !DILocation(line: 133, column: 13, scope: !6017)
!6113 = !DILocation(line: 134, column: 1, scope: !6017)
!6114 = distinct !DISubprogram(name: "PerceptibleReciprocal", scope: !6115, file: !6115, line: 78, type: !6116, scopeLine: 79, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !857)
!6115 = !DIFile(filename: "./magick/pixel-private.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!6116 = !DISubroutineType(types: !6117)
!6117 = !{!638, !916}
!6118 = !DILocalVariable(name: "x", arg: 1, scope: !6114, file: !6115, line: 78, type: !916)
!6119 = !DILocation(line: 78, column: 57, scope: !6114)
!6120 = !DILocalVariable(name: "sign", scope: !6114, file: !6115, line: 81, type: !638)
!6121 = !DILocation(line: 81, column: 5, scope: !6114)
!6122 = !DILocation(line: 86, column: 8, scope: !6114)
!6123 = !DILocation(line: 86, column: 10, scope: !6114)
!6124 = !DILocation(line: 86, column: 7, scope: !6114)
!6125 = !DILocation(line: 87, column: 8, scope: !6126)
!6126 = distinct !DILexicalBlock(scope: !6114, file: !6115, line: 87, column: 7)
!6127 = !DILocation(line: 87, column: 13, scope: !6126)
!6128 = !DILocation(line: 87, column: 12, scope: !6126)
!6129 = !DILocation(line: 87, column: 16, scope: !6126)
!6130 = !DILocation(line: 87, column: 7, scope: !6114)
!6131 = !DILocation(line: 88, column: 16, scope: !6126)
!6132 = !DILocation(line: 88, column: 15, scope: !6126)
!6133 = !DILocation(line: 88, column: 5, scope: !6126)
!6134 = !DILocation(line: 89, column: 10, scope: !6114)
!6135 = !DILocation(line: 89, column: 14, scope: !6114)
!6136 = !DILocation(line: 89, column: 3, scope: !6114)
!6137 = !DILocation(line: 90, column: 1, scope: !6114)
!6138 = distinct !DISubprogram(name: "CoefficientsToAffineArgs", scope: !1, file: !1, line: 98, type: !6139, scopeLine: 99, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !857)
!6139 = !DISubroutineType(types: !6140)
!6140 = !{null, !821}
!6141 = !DILocalVariable(name: "coeff", arg: 1, scope: !6138, file: !1, line: 98, type: !821)
!6142 = !DILocation(line: 98, column: 53, scope: !6138)
!6143 = !DILocalVariable(name: "tmp", scope: !6138, file: !1, line: 101, type: !4852)
!6144 = !DILocation(line: 101, column: 10, scope: !6138)
!6145 = !DILocation(line: 102, column: 10, scope: !6138)
!6146 = !DILocation(line: 102, column: 3, scope: !6138)
!6147 = !DILocation(line: 102, column: 9, scope: !6138)
!6148 = !DILocation(line: 102, column: 27, scope: !6138)
!6149 = !DILocation(line: 102, column: 20, scope: !6138)
!6150 = !DILocation(line: 102, column: 26, scope: !6138)
!6151 = !DILocation(line: 102, column: 44, scope: !6138)
!6152 = !DILocation(line: 102, column: 37, scope: !6138)
!6153 = !DILocation(line: 102, column: 43, scope: !6138)
!6154 = !DILocation(line: 102, column: 61, scope: !6138)
!6155 = !DILocation(line: 102, column: 54, scope: !6138)
!6156 = !DILocation(line: 102, column: 60, scope: !6138)
!6157 = !DILocation(line: 103, column: 12, scope: !6138)
!6158 = !DILocation(line: 103, column: 3, scope: !6138)
!6159 = !DILocation(line: 103, column: 11, scope: !6138)
!6160 = !DILocation(line: 103, column: 29, scope: !6138)
!6161 = !DILocation(line: 103, column: 20, scope: !6138)
!6162 = !DILocation(line: 103, column: 28, scope: !6138)
!6163 = !DILocation(line: 103, column: 46, scope: !6138)
!6164 = !DILocation(line: 103, column: 37, scope: !6138)
!6165 = !DILocation(line: 103, column: 45, scope: !6138)
!6166 = !DILocation(line: 103, column: 63, scope: !6138)
!6167 = !DILocation(line: 103, column: 54, scope: !6138)
!6168 = !DILocation(line: 103, column: 62, scope: !6138)
!6169 = !DILocation(line: 104, column: 1, scope: !6138)
!6170 = distinct !DISubprogram(name: "poly_basis_str", scope: !1, file: !1, line: 192, type: !6171, scopeLine: 193, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !857)
!6171 = !DISubroutineType(types: !6172)
!6172 = !{!734, !665}
!6173 = !DILocalVariable(name: "n", arg: 1, scope: !6170, file: !1, line: 192, type: !665)
!6174 = !DILocation(line: 192, column: 43, scope: !6170)
!6175 = !DILocation(line: 195, column: 10, scope: !6170)
!6176 = !DILocation(line: 195, column: 3, scope: !6170)
!6177 = !DILocation(line: 196, column: 15, scope: !6178)
!6178 = distinct !DILexicalBlock(scope: !6170, file: !1, line: 195, column: 13)
!6179 = !DILocation(line: 197, column: 15, scope: !6178)
!6180 = !DILocation(line: 198, column: 15, scope: !6178)
!6181 = !DILocation(line: 199, column: 15, scope: !6178)
!6182 = !DILocation(line: 200, column: 15, scope: !6178)
!6183 = !DILocation(line: 201, column: 15, scope: !6178)
!6184 = !DILocation(line: 202, column: 15, scope: !6178)
!6185 = !DILocation(line: 203, column: 15, scope: !6178)
!6186 = !DILocation(line: 204, column: 15, scope: !6178)
!6187 = !DILocation(line: 205, column: 15, scope: !6178)
!6188 = !DILocation(line: 206, column: 15, scope: !6178)
!6189 = !DILocation(line: 207, column: 15, scope: !6178)
!6190 = !DILocation(line: 208, column: 15, scope: !6178)
!6191 = !DILocation(line: 209, column: 15, scope: !6178)
!6192 = !DILocation(line: 210, column: 15, scope: !6178)
!6193 = !DILocation(line: 211, column: 15, scope: !6178)
!6194 = !DILocation(line: 212, column: 15, scope: !6178)
!6195 = !DILocation(line: 213, column: 15, scope: !6178)
!6196 = !DILocation(line: 214, column: 15, scope: !6178)
!6197 = !DILocation(line: 215, column: 15, scope: !6178)
!6198 = !DILocation(line: 216, column: 15, scope: !6178)
!6199 = !DILocation(line: 218, column: 3, scope: !6170)
!6200 = !DILocation(line: 219, column: 1, scope: !6170)
!6201 = distinct !DISubprogram(name: "StringToDouble", scope: !6202, file: !6202, line: 42, type: !6203, scopeLine: 44, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !857)
!6202 = !DIFile(filename: "./magick/string-private.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!6203 = !DISubroutineType(types: !6204)
!6204 = !{!638, !6205, !6206}
!6205 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !734)
!6206 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !822)
!6207 = !DILocalVariable(name: "string", arg: 1, scope: !6201, file: !6202, line: 42, type: !6205)
!6208 = !DILocation(line: 42, column: 58, scope: !6201)
!6209 = !DILocalVariable(name: "sentinal", arg: 2, scope: !6201, file: !6202, line: 43, type: !6206)
!6210 = !DILocation(line: 43, column: 19, scope: !6201)
!6211 = !DILocation(line: 45, column: 31, scope: !6201)
!6212 = !DILocation(line: 45, column: 38, scope: !6201)
!6213 = !DILocation(line: 45, column: 10, scope: !6201)
!6214 = !DILocation(line: 45, column: 3, scope: !6201)
!6215 = distinct !DISubprogram(name: "IsPixelGray", scope: !6216, file: !6216, line: 158, type: !6217, scopeLine: 159, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !857)
!6216 = !DIFile(filename: "./magick/pixel-accessor.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!6217 = !DISubroutineType(types: !6218)
!6218 = !{!617, !6219}
!6219 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6220, size: 64)
!6220 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !625)
!6221 = !DILocalVariable(name: "pixel", arg: 1, scope: !6215, file: !6216, line: 158, type: !6219)
!6222 = !DILocation(line: 158, column: 64, scope: !6215)
!6223 = !DILocalVariable(name: "blue", scope: !6215, file: !6216, line: 161, type: !828)
!6224 = !DILocation(line: 161, column: 5, scope: !6215)
!6225 = !DILocalVariable(name: "green", scope: !6215, file: !6216, line: 162, type: !828)
!6226 = !DILocation(line: 162, column: 5, scope: !6215)
!6227 = !DILocalVariable(name: "red", scope: !6215, file: !6216, line: 163, type: !828)
!6228 = !DILocation(line: 163, column: 5, scope: !6215)
!6229 = !DILocation(line: 165, column: 24, scope: !6215)
!6230 = !DILocation(line: 165, column: 31, scope: !6215)
!6231 = !DILocation(line: 165, column: 7, scope: !6215)
!6232 = !DILocation(line: 165, column: 6, scope: !6215)
!6233 = !DILocation(line: 166, column: 26, scope: !6215)
!6234 = !DILocation(line: 166, column: 33, scope: !6215)
!6235 = !DILocation(line: 166, column: 9, scope: !6215)
!6236 = !DILocation(line: 166, column: 8, scope: !6215)
!6237 = !DILocation(line: 167, column: 25, scope: !6215)
!6238 = !DILocation(line: 167, column: 32, scope: !6215)
!6239 = !DILocation(line: 167, column: 8, scope: !6215)
!6240 = !DILocation(line: 167, column: 7, scope: !6215)
!6241 = !DILocation(line: 168, column: 27, scope: !6242)
!6242 = distinct !DILexicalBlock(scope: !6215, file: !6216, line: 168, column: 7)
!6243 = !DILocation(line: 168, column: 31, scope: !6242)
!6244 = !DILocation(line: 168, column: 30, scope: !6242)
!6245 = !DILocation(line: 168, column: 8, scope: !6242)
!6246 = !DILocation(line: 168, column: 38, scope: !6242)
!6247 = !DILocation(line: 168, column: 55, scope: !6242)
!6248 = !DILocation(line: 169, column: 27, scope: !6242)
!6249 = !DILocation(line: 169, column: 33, scope: !6242)
!6250 = !DILocation(line: 169, column: 32, scope: !6242)
!6251 = !DILocation(line: 169, column: 8, scope: !6242)
!6252 = !DILocation(line: 169, column: 39, scope: !6242)
!6253 = !DILocation(line: 168, column: 7, scope: !6215)
!6254 = !DILocation(line: 170, column: 5, scope: !6242)
!6255 = !DILocation(line: 171, column: 3, scope: !6215)
!6256 = !DILocation(line: 172, column: 1, scope: !6215)
!6257 = distinct !DISubprogram(name: "IsGrayColorspace", scope: !6258, file: !6258, line: 85, type: !6259, scopeLine: 87, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !857)
!6258 = !DIFile(filename: "./magick/colorspace-private.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!6259 = !DISubroutineType(types: !6260)
!6260 = !{!617, !6261}
!6261 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !608)
!6262 = !DILocalVariable(name: "colorspace", arg: 1, scope: !6257, file: !6258, line: 86, type: !6261)
!6263 = !DILocation(line: 86, column: 24, scope: !6257)
!6264 = !DILocation(line: 88, column: 8, scope: !6265)
!6265 = distinct !DILexicalBlock(scope: !6257, file: !6258, line: 88, column: 7)
!6266 = !DILocation(line: 88, column: 19, scope: !6265)
!6267 = !DILocation(line: 88, column: 38, scope: !6265)
!6268 = !DILocation(line: 88, column: 42, scope: !6265)
!6269 = !DILocation(line: 88, column: 53, scope: !6265)
!6270 = !DILocation(line: 88, column: 78, scope: !6265)
!6271 = !DILocation(line: 89, column: 8, scope: !6265)
!6272 = !DILocation(line: 89, column: 19, scope: !6265)
!6273 = !DILocation(line: 88, column: 7, scope: !6257)
!6274 = !DILocation(line: 90, column: 5, scope: !6265)
!6275 = !DILocation(line: 91, column: 3, scope: !6257)
!6276 = !DILocation(line: 92, column: 1, scope: !6257)
!6277 = distinct !DISubprogram(name: "AcquireResampleFilterThreadSet", scope: !6278, file: !6278, line: 41, type: !6279, scopeLine: 44, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !857)
!6278 = !DIFile(filename: "./magick/resample-private.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!6279 = !DISubroutineType(types: !6280)
!6280 = !{!830, !843, !6281, !6282, !856}
!6281 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3759)
!6282 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !617)
!6283 = !DILocalVariable(name: "image", arg: 1, scope: !6277, file: !6278, line: 42, type: !843)
!6284 = !DILocation(line: 42, column: 16, scope: !6277)
!6285 = !DILocalVariable(name: "method", arg: 2, scope: !6277, file: !6278, line: 42, type: !6281)
!6286 = !DILocation(line: 42, column: 47, scope: !6277)
!6287 = !DILocalVariable(name: "interpolate", arg: 3, scope: !6277, file: !6278, line: 43, type: !6282)
!6288 = !DILocation(line: 43, column: 27, scope: !6277)
!6289 = !DILocalVariable(name: "exception", arg: 4, scope: !6277, file: !6278, line: 43, type: !856)
!6290 = !DILocation(line: 43, column: 54, scope: !6277)
!6291 = !DILocalVariable(name: "i", scope: !6277, file: !6278, line: 46, type: !665)
!6292 = !DILocation(line: 46, column: 5, scope: !6277)
!6293 = !DILocalVariable(name: "filter", scope: !6277, file: !6278, line: 49, type: !830)
!6294 = !DILocation(line: 49, column: 7, scope: !6277)
!6295 = !DILocalVariable(name: "number_threads", scope: !6277, file: !6278, line: 52, type: !612)
!6296 = !DILocation(line: 52, column: 5, scope: !6277)
!6297 = !DILocation(line: 54, column: 27, scope: !6277)
!6298 = !DILocation(line: 54, column: 17, scope: !6277)
!6299 = !DILocation(line: 55, column: 51, scope: !6277)
!6300 = !DILocation(line: 55, column: 30, scope: !6277)
!6301 = !DILocation(line: 55, column: 10, scope: !6277)
!6302 = !DILocation(line: 55, column: 9, scope: !6277)
!6303 = !DILocation(line: 57, column: 7, scope: !6304)
!6304 = distinct !DILexicalBlock(scope: !6277, file: !6278, line: 57, column: 7)
!6305 = !DILocation(line: 57, column: 14, scope: !6304)
!6306 = !DILocation(line: 57, column: 7, scope: !6277)
!6307 = !DILocation(line: 58, column: 5, scope: !6304)
!6308 = !DILocation(line: 59, column: 28, scope: !6277)
!6309 = !DILocation(line: 59, column: 37, scope: !6277)
!6310 = !DILocation(line: 59, column: 51, scope: !6277)
!6311 = !DILocation(line: 59, column: 10, scope: !6277)
!6312 = !DILocation(line: 60, column: 9, scope: !6313)
!6313 = distinct !DILexicalBlock(scope: !6277, file: !6278, line: 60, column: 3)
!6314 = !DILocation(line: 60, column: 8, scope: !6313)
!6315 = !DILocation(line: 60, column: 13, scope: !6316)
!6316 = distinct !DILexicalBlock(scope: !6313, file: !6278, line: 60, column: 3)
!6317 = !DILocation(line: 60, column: 27, scope: !6316)
!6318 = !DILocation(line: 60, column: 15, scope: !6316)
!6319 = !DILocation(line: 60, column: 3, scope: !6313)
!6320 = !DILocation(line: 62, column: 37, scope: !6321)
!6321 = distinct !DILexicalBlock(scope: !6316, file: !6278, line: 61, column: 3)
!6322 = !DILocation(line: 62, column: 43, scope: !6321)
!6323 = !DILocation(line: 62, column: 15, scope: !6321)
!6324 = !DILocation(line: 62, column: 5, scope: !6321)
!6325 = !DILocation(line: 62, column: 12, scope: !6321)
!6326 = !DILocation(line: 62, column: 14, scope: !6321)
!6327 = !DILocation(line: 63, column: 9, scope: !6328)
!6328 = distinct !DILexicalBlock(scope: !6321, file: !6278, line: 63, column: 9)
!6329 = !DILocation(line: 63, column: 16, scope: !6328)
!6330 = !DILocation(line: 63, column: 19, scope: !6328)
!6331 = !DILocation(line: 63, column: 9, scope: !6321)
!6332 = !DILocation(line: 64, column: 45, scope: !6328)
!6333 = !DILocation(line: 64, column: 14, scope: !6328)
!6334 = !DILocation(line: 64, column: 7, scope: !6328)
!6335 = !DILocation(line: 65, column: 9, scope: !6336)
!6336 = distinct !DILexicalBlock(scope: !6321, file: !6278, line: 65, column: 9)
!6337 = !DILocation(line: 65, column: 16, scope: !6336)
!6338 = !DILocation(line: 65, column: 9, scope: !6321)
!6339 = !DILocation(line: 66, column: 50, scope: !6336)
!6340 = !DILocation(line: 66, column: 57, scope: !6336)
!6341 = !DILocation(line: 66, column: 60, scope: !6336)
!6342 = !DILocation(line: 66, column: 14, scope: !6336)
!6343 = !DILocation(line: 66, column: 7, scope: !6336)
!6344 = !DILocation(line: 67, column: 9, scope: !6345)
!6345 = distinct !DILexicalBlock(scope: !6321, file: !6278, line: 67, column: 9)
!6346 = !DILocation(line: 67, column: 21, scope: !6345)
!6347 = !DILocation(line: 67, column: 9, scope: !6321)
!6348 = !DILocation(line: 68, column: 25, scope: !6345)
!6349 = !DILocation(line: 68, column: 32, scope: !6345)
!6350 = !DILocation(line: 68, column: 7, scope: !6345)
!6351 = !DILocation(line: 69, column: 3, scope: !6321)
!6352 = !DILocation(line: 60, column: 44, scope: !6316)
!6353 = !DILocation(line: 60, column: 3, scope: !6316)
!6354 = distinct !{!6354, !6319, !6355}
!6355 = !DILocation(line: 69, column: 3, scope: !6313)
!6356 = !DILocation(line: 70, column: 10, scope: !6277)
!6357 = !DILocation(line: 70, column: 3, scope: !6277)
!6358 = !DILocation(line: 71, column: 1, scope: !6277)
!6359 = distinct !DISubprogram(name: "GetOpenMPThreadId", scope: !6360, file: !6360, line: 117, type: !6361, scopeLine: 118, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !857)
!6360 = !DIFile(filename: "./magick/thread-private.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!6361 = !DISubroutineType(types: !6362)
!6362 = !{!513}
!6363 = !DILocation(line: 122, column: 3, scope: !6359)
!6364 = distinct !DISubprogram(name: "SetMagickPixelPacket", scope: !6115, file: !6115, line: 92, type: !6365, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !857)
!6365 = !DISubroutineType(types: !6366)
!6366 = !{null, !843, !6219, !834, !6367}
!6367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2583, size: 64)
!6368 = !DILocalVariable(name: "image", arg: 1, scope: !6364, file: !6115, line: 92, type: !843)
!6369 = !DILocation(line: 92, column: 54, scope: !6364)
!6370 = !DILocalVariable(name: "color", arg: 2, scope: !6364, file: !6115, line: 93, type: !6219)
!6371 = !DILocation(line: 93, column: 22, scope: !6364)
!6372 = !DILocalVariable(name: "index", arg: 3, scope: !6364, file: !6115, line: 93, type: !834)
!6373 = !DILocation(line: 93, column: 47, scope: !6364)
!6374 = !DILocalVariable(name: "pixel", arg: 4, scope: !6364, file: !6115, line: 93, type: !6367)
!6375 = !DILocation(line: 93, column: 72, scope: !6364)
!6376 = !DILocation(line: 95, column: 31, scope: !6364)
!6377 = !DILocation(line: 95, column: 14, scope: !6364)
!6378 = !DILocation(line: 95, column: 3, scope: !6364)
!6379 = !DILocation(line: 95, column: 10, scope: !6364)
!6380 = !DILocation(line: 95, column: 13, scope: !6364)
!6381 = !DILocation(line: 96, column: 33, scope: !6364)
!6382 = !DILocation(line: 96, column: 16, scope: !6364)
!6383 = !DILocation(line: 96, column: 3, scope: !6364)
!6384 = !DILocation(line: 96, column: 10, scope: !6364)
!6385 = !DILocation(line: 96, column: 15, scope: !6364)
!6386 = !DILocation(line: 97, column: 32, scope: !6364)
!6387 = !DILocation(line: 97, column: 15, scope: !6364)
!6388 = !DILocation(line: 97, column: 3, scope: !6364)
!6389 = !DILocation(line: 97, column: 10, scope: !6364)
!6390 = !DILocation(line: 97, column: 14, scope: !6364)
!6391 = !DILocation(line: 98, column: 35, scope: !6364)
!6392 = !DILocation(line: 98, column: 18, scope: !6364)
!6393 = !DILocation(line: 98, column: 3, scope: !6364)
!6394 = !DILocation(line: 98, column: 10, scope: !6364)
!6395 = !DILocation(line: 98, column: 17, scope: !6364)
!6396 = !DILocation(line: 99, column: 8, scope: !6397)
!6397 = distinct !DILexicalBlock(scope: !6364, file: !6115, line: 99, column: 7)
!6398 = !DILocation(line: 99, column: 15, scope: !6397)
!6399 = !DILocation(line: 99, column: 26, scope: !6397)
!6400 = !DILocation(line: 99, column: 45, scope: !6397)
!6401 = !DILocation(line: 100, column: 8, scope: !6397)
!6402 = !DILocation(line: 100, column: 14, scope: !6397)
!6403 = !DILocation(line: 99, column: 7, scope: !6364)
!6404 = !DILocation(line: 101, column: 35, scope: !6397)
!6405 = !DILocation(line: 101, column: 18, scope: !6397)
!6406 = !DILocation(line: 101, column: 5, scope: !6397)
!6407 = !DILocation(line: 101, column: 12, scope: !6397)
!6408 = !DILocation(line: 101, column: 17, scope: !6397)
!6409 = !DILocation(line: 102, column: 1, scope: !6364)
!6410 = distinct !DISubprogram(name: "ConvertRGBToCMYK", scope: !6258, file: !6258, line: 30, type: !6411, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !857)
!6411 = !DISubroutineType(types: !6412)
!6412 = !{null, !6367}
!6413 = !DILocalVariable(name: "pixel", arg: 1, scope: !6410, file: !6258, line: 30, type: !6367)
!6414 = !DILocation(line: 30, column: 56, scope: !6410)
!6415 = !DILocalVariable(name: "black", scope: !6410, file: !6258, line: 33, type: !828)
!6416 = !DILocation(line: 33, column: 5, scope: !6410)
!6417 = !DILocalVariable(name: "blue", scope: !6410, file: !6258, line: 34, type: !828)
!6418 = !DILocation(line: 34, column: 5, scope: !6410)
!6419 = !DILocalVariable(name: "cyan", scope: !6410, file: !6258, line: 35, type: !828)
!6420 = !DILocation(line: 35, column: 5, scope: !6410)
!6421 = !DILocalVariable(name: "green", scope: !6410, file: !6258, line: 36, type: !828)
!6422 = !DILocation(line: 36, column: 5, scope: !6410)
!6423 = !DILocalVariable(name: "magenta", scope: !6410, file: !6258, line: 37, type: !828)
!6424 = !DILocation(line: 37, column: 5, scope: !6410)
!6425 = !DILocalVariable(name: "red", scope: !6410, file: !6258, line: 38, type: !828)
!6426 = !DILocation(line: 38, column: 5, scope: !6410)
!6427 = !DILocalVariable(name: "yellow", scope: !6410, file: !6258, line: 39, type: !828)
!6428 = !DILocation(line: 39, column: 5, scope: !6410)
!6429 = !DILocation(line: 41, column: 7, scope: !6430)
!6430 = distinct !DILexicalBlock(scope: !6410, file: !6258, line: 41, column: 7)
!6431 = !DILocation(line: 41, column: 14, scope: !6430)
!6432 = !DILocation(line: 41, column: 25, scope: !6430)
!6433 = !DILocation(line: 41, column: 7, scope: !6410)
!6434 = !DILocation(line: 43, column: 24, scope: !6435)
!6435 = distinct !DILexicalBlock(scope: !6430, file: !6258, line: 42, column: 5)
!6436 = !DILocation(line: 43, column: 31, scope: !6435)
!6437 = !DILocation(line: 43, column: 23, scope: !6435)
!6438 = !DILocation(line: 43, column: 11, scope: !6435)
!6439 = !DILocation(line: 43, column: 10, scope: !6435)
!6440 = !DILocation(line: 44, column: 26, scope: !6435)
!6441 = !DILocation(line: 44, column: 33, scope: !6435)
!6442 = !DILocation(line: 44, column: 25, scope: !6435)
!6443 = !DILocation(line: 44, column: 13, scope: !6435)
!6444 = !DILocation(line: 44, column: 12, scope: !6435)
!6445 = !DILocation(line: 45, column: 25, scope: !6435)
!6446 = !DILocation(line: 45, column: 32, scope: !6435)
!6447 = !DILocation(line: 45, column: 24, scope: !6435)
!6448 = !DILocation(line: 45, column: 12, scope: !6435)
!6449 = !DILocation(line: 45, column: 11, scope: !6435)
!6450 = !DILocation(line: 46, column: 5, scope: !6435)
!6451 = !DILocation(line: 49, column: 28, scope: !6452)
!6452 = distinct !DILexicalBlock(scope: !6430, file: !6258, line: 48, column: 5)
!6453 = !DILocation(line: 49, column: 35, scope: !6452)
!6454 = !DILocation(line: 49, column: 11, scope: !6452)
!6455 = !DILocation(line: 49, column: 10, scope: !6452)
!6456 = !DILocation(line: 50, column: 30, scope: !6452)
!6457 = !DILocation(line: 50, column: 37, scope: !6452)
!6458 = !DILocation(line: 50, column: 13, scope: !6452)
!6459 = !DILocation(line: 50, column: 12, scope: !6452)
!6460 = !DILocation(line: 51, column: 29, scope: !6452)
!6461 = !DILocation(line: 51, column: 36, scope: !6452)
!6462 = !DILocation(line: 51, column: 12, scope: !6452)
!6463 = !DILocation(line: 51, column: 11, scope: !6452)
!6464 = !DILocation(line: 53, column: 13, scope: !6465)
!6465 = distinct !DILexicalBlock(scope: !6410, file: !6258, line: 53, column: 7)
!6466 = !DILocation(line: 53, column: 8, scope: !6465)
!6467 = !DILocation(line: 53, column: 18, scope: !6465)
!6468 = !DILocation(line: 53, column: 35, scope: !6465)
!6469 = !DILocation(line: 53, column: 44, scope: !6465)
!6470 = !DILocation(line: 53, column: 39, scope: !6465)
!6471 = !DILocation(line: 53, column: 51, scope: !6465)
!6472 = !DILocation(line: 53, column: 68, scope: !6465)
!6473 = !DILocation(line: 54, column: 13, scope: !6465)
!6474 = !DILocation(line: 54, column: 8, scope: !6465)
!6475 = !DILocation(line: 54, column: 19, scope: !6465)
!6476 = !DILocation(line: 53, column: 7, scope: !6410)
!6477 = !DILocation(line: 56, column: 7, scope: !6478)
!6478 = distinct !DILexicalBlock(scope: !6465, file: !6258, line: 55, column: 5)
!6479 = !DILocation(line: 56, column: 14, scope: !6478)
!6480 = !DILocation(line: 56, column: 19, scope: !6478)
!6481 = !DILocation(line: 57, column: 7, scope: !6478)
!6482 = !DILocation(line: 59, column: 30, scope: !6410)
!6483 = !DILocation(line: 59, column: 29, scope: !6410)
!6484 = !DILocation(line: 59, column: 8, scope: !6410)
!6485 = !DILocation(line: 59, column: 7, scope: !6410)
!6486 = !DILocation(line: 60, column: 33, scope: !6410)
!6487 = !DILocation(line: 60, column: 32, scope: !6410)
!6488 = !DILocation(line: 60, column: 11, scope: !6410)
!6489 = !DILocation(line: 60, column: 10, scope: !6410)
!6490 = !DILocation(line: 61, column: 32, scope: !6410)
!6491 = !DILocation(line: 61, column: 31, scope: !6410)
!6492 = !DILocation(line: 61, column: 10, scope: !6410)
!6493 = !DILocation(line: 61, column: 9, scope: !6410)
!6494 = !DILocation(line: 62, column: 9, scope: !6410)
!6495 = !DILocation(line: 62, column: 8, scope: !6410)
!6496 = !DILocation(line: 63, column: 7, scope: !6497)
!6497 = distinct !DILexicalBlock(scope: !6410, file: !6258, line: 63, column: 7)
!6498 = !DILocation(line: 63, column: 17, scope: !6497)
!6499 = !DILocation(line: 63, column: 15, scope: !6497)
!6500 = !DILocation(line: 63, column: 7, scope: !6410)
!6501 = !DILocation(line: 64, column: 11, scope: !6497)
!6502 = !DILocation(line: 64, column: 10, scope: !6497)
!6503 = !DILocation(line: 64, column: 5, scope: !6497)
!6504 = !DILocation(line: 65, column: 7, scope: !6505)
!6505 = distinct !DILexicalBlock(scope: !6410, file: !6258, line: 65, column: 7)
!6506 = !DILocation(line: 65, column: 16, scope: !6505)
!6507 = !DILocation(line: 65, column: 14, scope: !6505)
!6508 = !DILocation(line: 65, column: 7, scope: !6410)
!6509 = !DILocation(line: 66, column: 11, scope: !6505)
!6510 = !DILocation(line: 66, column: 10, scope: !6505)
!6511 = !DILocation(line: 66, column: 5, scope: !6505)
!6512 = !DILocation(line: 67, column: 27, scope: !6410)
!6513 = !DILocation(line: 67, column: 32, scope: !6410)
!6514 = !DILocation(line: 67, column: 31, scope: !6410)
!6515 = !DILocation(line: 67, column: 26, scope: !6410)
!6516 = !DILocation(line: 67, column: 44, scope: !6410)
!6517 = !DILocation(line: 67, column: 43, scope: !6410)
!6518 = !DILocation(line: 67, column: 38, scope: !6410)
!6519 = !DILocation(line: 67, column: 8, scope: !6410)
!6520 = !DILocation(line: 67, column: 7, scope: !6410)
!6521 = !DILocation(line: 68, column: 30, scope: !6410)
!6522 = !DILocation(line: 68, column: 38, scope: !6410)
!6523 = !DILocation(line: 68, column: 37, scope: !6410)
!6524 = !DILocation(line: 68, column: 29, scope: !6410)
!6525 = !DILocation(line: 68, column: 50, scope: !6410)
!6526 = !DILocation(line: 68, column: 49, scope: !6410)
!6527 = !DILocation(line: 68, column: 44, scope: !6410)
!6528 = !DILocation(line: 68, column: 11, scope: !6410)
!6529 = !DILocation(line: 68, column: 10, scope: !6410)
!6530 = !DILocation(line: 69, column: 29, scope: !6410)
!6531 = !DILocation(line: 69, column: 36, scope: !6410)
!6532 = !DILocation(line: 69, column: 35, scope: !6410)
!6533 = !DILocation(line: 69, column: 28, scope: !6410)
!6534 = !DILocation(line: 69, column: 48, scope: !6410)
!6535 = !DILocation(line: 69, column: 47, scope: !6410)
!6536 = !DILocation(line: 69, column: 42, scope: !6410)
!6537 = !DILocation(line: 69, column: 10, scope: !6410)
!6538 = !DILocation(line: 69, column: 9, scope: !6410)
!6539 = !DILocation(line: 70, column: 3, scope: !6410)
!6540 = !DILocation(line: 70, column: 10, scope: !6410)
!6541 = !DILocation(line: 70, column: 20, scope: !6410)
!6542 = !DILocation(line: 71, column: 27, scope: !6410)
!6543 = !DILocation(line: 71, column: 26, scope: !6410)
!6544 = !DILocation(line: 71, column: 3, scope: !6410)
!6545 = !DILocation(line: 71, column: 10, scope: !6410)
!6546 = !DILocation(line: 71, column: 13, scope: !6410)
!6547 = !DILocation(line: 72, column: 29, scope: !6410)
!6548 = !DILocation(line: 72, column: 28, scope: !6410)
!6549 = !DILocation(line: 72, column: 3, scope: !6410)
!6550 = !DILocation(line: 72, column: 10, scope: !6410)
!6551 = !DILocation(line: 72, column: 15, scope: !6410)
!6552 = !DILocation(line: 73, column: 28, scope: !6410)
!6553 = !DILocation(line: 73, column: 27, scope: !6410)
!6554 = !DILocation(line: 73, column: 3, scope: !6410)
!6555 = !DILocation(line: 73, column: 10, scope: !6410)
!6556 = !DILocation(line: 73, column: 14, scope: !6410)
!6557 = !DILocation(line: 74, column: 29, scope: !6410)
!6558 = !DILocation(line: 74, column: 28, scope: !6410)
!6559 = !DILocation(line: 74, column: 3, scope: !6410)
!6560 = !DILocation(line: 74, column: 10, scope: !6410)
!6561 = !DILocation(line: 74, column: 15, scope: !6410)
!6562 = !DILocation(line: 75, column: 1, scope: !6410)
!6563 = distinct !DISubprogram(name: "poly_basis_fn", scope: !1, file: !1, line: 164, type: !6564, scopeLine: 165, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !857)
!6564 = !DISubroutineType(types: !6565)
!6565 = !{!638, !665, !638, !638}
!6566 = !DILocalVariable(name: "n", arg: 1, scope: !6563, file: !1, line: 164, type: !665)
!6567 = !DILocation(line: 164, column: 37, scope: !6563)
!6568 = !DILocalVariable(name: "x", arg: 2, scope: !6563, file: !1, line: 164, type: !638)
!6569 = !DILocation(line: 164, column: 47, scope: !6563)
!6570 = !DILocalVariable(name: "y", arg: 3, scope: !6563, file: !1, line: 164, type: !638)
!6571 = !DILocation(line: 164, column: 57, scope: !6563)
!6572 = !DILocation(line: 167, column: 10, scope: !6563)
!6573 = !DILocation(line: 167, column: 3, scope: !6563)
!6574 = !DILocation(line: 168, column: 15, scope: !6575)
!6575 = distinct !DILexicalBlock(scope: !6563, file: !1, line: 167, column: 13)
!6576 = !DILocation(line: 169, column: 24, scope: !6575)
!6577 = !DILocation(line: 169, column: 15, scope: !6575)
!6578 = !DILocation(line: 170, column: 24, scope: !6575)
!6579 = !DILocation(line: 170, column: 15, scope: !6575)
!6580 = !DILocation(line: 171, column: 23, scope: !6575)
!6581 = !DILocation(line: 171, column: 25, scope: !6575)
!6582 = !DILocation(line: 171, column: 24, scope: !6575)
!6583 = !DILocation(line: 171, column: 15, scope: !6575)
!6584 = !DILocation(line: 172, column: 23, scope: !6575)
!6585 = !DILocation(line: 172, column: 25, scope: !6575)
!6586 = !DILocation(line: 172, column: 24, scope: !6575)
!6587 = !DILocation(line: 172, column: 15, scope: !6575)
!6588 = !DILocation(line: 173, column: 23, scope: !6575)
!6589 = !DILocation(line: 173, column: 25, scope: !6575)
!6590 = !DILocation(line: 173, column: 24, scope: !6575)
!6591 = !DILocation(line: 173, column: 15, scope: !6575)
!6592 = !DILocation(line: 174, column: 23, scope: !6575)
!6593 = !DILocation(line: 174, column: 25, scope: !6575)
!6594 = !DILocation(line: 174, column: 24, scope: !6575)
!6595 = !DILocation(line: 174, column: 27, scope: !6575)
!6596 = !DILocation(line: 174, column: 26, scope: !6575)
!6597 = !DILocation(line: 174, column: 15, scope: !6575)
!6598 = !DILocation(line: 175, column: 23, scope: !6575)
!6599 = !DILocation(line: 175, column: 25, scope: !6575)
!6600 = !DILocation(line: 175, column: 24, scope: !6575)
!6601 = !DILocation(line: 175, column: 27, scope: !6575)
!6602 = !DILocation(line: 175, column: 26, scope: !6575)
!6603 = !DILocation(line: 175, column: 15, scope: !6575)
!6604 = !DILocation(line: 176, column: 23, scope: !6575)
!6605 = !DILocation(line: 176, column: 25, scope: !6575)
!6606 = !DILocation(line: 176, column: 24, scope: !6575)
!6607 = !DILocation(line: 176, column: 27, scope: !6575)
!6608 = !DILocation(line: 176, column: 26, scope: !6575)
!6609 = !DILocation(line: 176, column: 15, scope: !6575)
!6610 = !DILocation(line: 177, column: 23, scope: !6575)
!6611 = !DILocation(line: 177, column: 25, scope: !6575)
!6612 = !DILocation(line: 177, column: 24, scope: !6575)
!6613 = !DILocation(line: 177, column: 27, scope: !6575)
!6614 = !DILocation(line: 177, column: 26, scope: !6575)
!6615 = !DILocation(line: 177, column: 15, scope: !6575)
!6616 = !DILocation(line: 178, column: 23, scope: !6575)
!6617 = !DILocation(line: 178, column: 25, scope: !6575)
!6618 = !DILocation(line: 178, column: 24, scope: !6575)
!6619 = !DILocation(line: 178, column: 27, scope: !6575)
!6620 = !DILocation(line: 178, column: 26, scope: !6575)
!6621 = !DILocation(line: 178, column: 29, scope: !6575)
!6622 = !DILocation(line: 178, column: 28, scope: !6575)
!6623 = !DILocation(line: 178, column: 15, scope: !6575)
!6624 = !DILocation(line: 179, column: 23, scope: !6575)
!6625 = !DILocation(line: 179, column: 25, scope: !6575)
!6626 = !DILocation(line: 179, column: 24, scope: !6575)
!6627 = !DILocation(line: 179, column: 27, scope: !6575)
!6628 = !DILocation(line: 179, column: 26, scope: !6575)
!6629 = !DILocation(line: 179, column: 29, scope: !6575)
!6630 = !DILocation(line: 179, column: 28, scope: !6575)
!6631 = !DILocation(line: 179, column: 15, scope: !6575)
!6632 = !DILocation(line: 180, column: 23, scope: !6575)
!6633 = !DILocation(line: 180, column: 25, scope: !6575)
!6634 = !DILocation(line: 180, column: 24, scope: !6575)
!6635 = !DILocation(line: 180, column: 27, scope: !6575)
!6636 = !DILocation(line: 180, column: 26, scope: !6575)
!6637 = !DILocation(line: 180, column: 29, scope: !6575)
!6638 = !DILocation(line: 180, column: 28, scope: !6575)
!6639 = !DILocation(line: 180, column: 15, scope: !6575)
!6640 = !DILocation(line: 181, column: 23, scope: !6575)
!6641 = !DILocation(line: 181, column: 25, scope: !6575)
!6642 = !DILocation(line: 181, column: 24, scope: !6575)
!6643 = !DILocation(line: 181, column: 27, scope: !6575)
!6644 = !DILocation(line: 181, column: 26, scope: !6575)
!6645 = !DILocation(line: 181, column: 29, scope: !6575)
!6646 = !DILocation(line: 181, column: 28, scope: !6575)
!6647 = !DILocation(line: 181, column: 15, scope: !6575)
!6648 = !DILocation(line: 182, column: 23, scope: !6575)
!6649 = !DILocation(line: 182, column: 25, scope: !6575)
!6650 = !DILocation(line: 182, column: 24, scope: !6575)
!6651 = !DILocation(line: 182, column: 27, scope: !6575)
!6652 = !DILocation(line: 182, column: 26, scope: !6575)
!6653 = !DILocation(line: 182, column: 29, scope: !6575)
!6654 = !DILocation(line: 182, column: 28, scope: !6575)
!6655 = !DILocation(line: 182, column: 15, scope: !6575)
!6656 = !DILocation(line: 183, column: 23, scope: !6575)
!6657 = !DILocation(line: 183, column: 25, scope: !6575)
!6658 = !DILocation(line: 183, column: 24, scope: !6575)
!6659 = !DILocation(line: 183, column: 27, scope: !6575)
!6660 = !DILocation(line: 183, column: 26, scope: !6575)
!6661 = !DILocation(line: 183, column: 29, scope: !6575)
!6662 = !DILocation(line: 183, column: 28, scope: !6575)
!6663 = !DILocation(line: 183, column: 31, scope: !6575)
!6664 = !DILocation(line: 183, column: 30, scope: !6575)
!6665 = !DILocation(line: 183, column: 15, scope: !6575)
!6666 = !DILocation(line: 184, column: 23, scope: !6575)
!6667 = !DILocation(line: 184, column: 25, scope: !6575)
!6668 = !DILocation(line: 184, column: 24, scope: !6575)
!6669 = !DILocation(line: 184, column: 27, scope: !6575)
!6670 = !DILocation(line: 184, column: 26, scope: !6575)
!6671 = !DILocation(line: 184, column: 29, scope: !6575)
!6672 = !DILocation(line: 184, column: 28, scope: !6575)
!6673 = !DILocation(line: 184, column: 31, scope: !6575)
!6674 = !DILocation(line: 184, column: 30, scope: !6575)
!6675 = !DILocation(line: 184, column: 15, scope: !6575)
!6676 = !DILocation(line: 185, column: 23, scope: !6575)
!6677 = !DILocation(line: 185, column: 25, scope: !6575)
!6678 = !DILocation(line: 185, column: 24, scope: !6575)
!6679 = !DILocation(line: 185, column: 27, scope: !6575)
!6680 = !DILocation(line: 185, column: 26, scope: !6575)
!6681 = !DILocation(line: 185, column: 29, scope: !6575)
!6682 = !DILocation(line: 185, column: 28, scope: !6575)
!6683 = !DILocation(line: 185, column: 31, scope: !6575)
!6684 = !DILocation(line: 185, column: 30, scope: !6575)
!6685 = !DILocation(line: 185, column: 15, scope: !6575)
!6686 = !DILocation(line: 186, column: 23, scope: !6575)
!6687 = !DILocation(line: 186, column: 25, scope: !6575)
!6688 = !DILocation(line: 186, column: 24, scope: !6575)
!6689 = !DILocation(line: 186, column: 27, scope: !6575)
!6690 = !DILocation(line: 186, column: 26, scope: !6575)
!6691 = !DILocation(line: 186, column: 29, scope: !6575)
!6692 = !DILocation(line: 186, column: 28, scope: !6575)
!6693 = !DILocation(line: 186, column: 31, scope: !6575)
!6694 = !DILocation(line: 186, column: 30, scope: !6575)
!6695 = !DILocation(line: 186, column: 15, scope: !6575)
!6696 = !DILocation(line: 187, column: 23, scope: !6575)
!6697 = !DILocation(line: 187, column: 25, scope: !6575)
!6698 = !DILocation(line: 187, column: 24, scope: !6575)
!6699 = !DILocation(line: 187, column: 27, scope: !6575)
!6700 = !DILocation(line: 187, column: 26, scope: !6575)
!6701 = !DILocation(line: 187, column: 29, scope: !6575)
!6702 = !DILocation(line: 187, column: 28, scope: !6575)
!6703 = !DILocation(line: 187, column: 31, scope: !6575)
!6704 = !DILocation(line: 187, column: 30, scope: !6575)
!6705 = !DILocation(line: 187, column: 15, scope: !6575)
!6706 = !DILocation(line: 188, column: 23, scope: !6575)
!6707 = !DILocation(line: 188, column: 25, scope: !6575)
!6708 = !DILocation(line: 188, column: 24, scope: !6575)
!6709 = !DILocation(line: 188, column: 27, scope: !6575)
!6710 = !DILocation(line: 188, column: 26, scope: !6575)
!6711 = !DILocation(line: 188, column: 29, scope: !6575)
!6712 = !DILocation(line: 188, column: 28, scope: !6575)
!6713 = !DILocation(line: 188, column: 31, scope: !6575)
!6714 = !DILocation(line: 188, column: 30, scope: !6575)
!6715 = !DILocation(line: 188, column: 15, scope: !6575)
!6716 = !DILocation(line: 190, column: 3, scope: !6563)
!6717 = !DILocation(line: 191, column: 1, scope: !6563)
!6718 = distinct !DISubprogram(name: "poly_basis_dx", scope: !1, file: !1, line: 220, type: !6564, scopeLine: 221, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !857)
!6719 = !DILocalVariable(name: "n", arg: 1, scope: !6718, file: !1, line: 220, type: !665)
!6720 = !DILocation(line: 220, column: 37, scope: !6718)
!6721 = !DILocalVariable(name: "x", arg: 2, scope: !6718, file: !1, line: 220, type: !638)
!6722 = !DILocation(line: 220, column: 47, scope: !6718)
!6723 = !DILocalVariable(name: "y", arg: 3, scope: !6718, file: !1, line: 220, type: !638)
!6724 = !DILocation(line: 220, column: 57, scope: !6718)
!6725 = !DILocation(line: 223, column: 10, scope: !6718)
!6726 = !DILocation(line: 223, column: 3, scope: !6718)
!6727 = !DILocation(line: 224, column: 15, scope: !6728)
!6728 = distinct !DILexicalBlock(scope: !6718, file: !1, line: 223, column: 13)
!6729 = !DILocation(line: 225, column: 15, scope: !6728)
!6730 = !DILocation(line: 226, column: 15, scope: !6728)
!6731 = !DILocation(line: 227, column: 24, scope: !6728)
!6732 = !DILocation(line: 227, column: 15, scope: !6728)
!6733 = !DILocation(line: 228, column: 24, scope: !6728)
!6734 = !DILocation(line: 228, column: 15, scope: !6728)
!6735 = !DILocation(line: 229, column: 15, scope: !6728)
!6736 = !DILocation(line: 230, column: 23, scope: !6728)
!6737 = !DILocation(line: 230, column: 25, scope: !6728)
!6738 = !DILocation(line: 230, column: 24, scope: !6728)
!6739 = !DILocation(line: 230, column: 15, scope: !6728)
!6740 = !DILocation(line: 231, column: 23, scope: !6728)
!6741 = !DILocation(line: 231, column: 25, scope: !6728)
!6742 = !DILocation(line: 231, column: 24, scope: !6728)
!6743 = !DILocation(line: 231, column: 15, scope: !6728)
!6744 = !DILocation(line: 232, column: 23, scope: !6728)
!6745 = !DILocation(line: 232, column: 25, scope: !6728)
!6746 = !DILocation(line: 232, column: 24, scope: !6728)
!6747 = !DILocation(line: 232, column: 15, scope: !6728)
!6748 = !DILocation(line: 233, column: 15, scope: !6728)
!6749 = !DILocation(line: 234, column: 23, scope: !6728)
!6750 = !DILocation(line: 234, column: 25, scope: !6728)
!6751 = !DILocation(line: 234, column: 24, scope: !6728)
!6752 = !DILocation(line: 234, column: 27, scope: !6728)
!6753 = !DILocation(line: 234, column: 26, scope: !6728)
!6754 = !DILocation(line: 234, column: 15, scope: !6728)
!6755 = !DILocation(line: 235, column: 23, scope: !6728)
!6756 = !DILocation(line: 235, column: 25, scope: !6728)
!6757 = !DILocation(line: 235, column: 24, scope: !6728)
!6758 = !DILocation(line: 235, column: 27, scope: !6728)
!6759 = !DILocation(line: 235, column: 26, scope: !6728)
!6760 = !DILocation(line: 235, column: 15, scope: !6728)
!6761 = !DILocation(line: 236, column: 23, scope: !6728)
!6762 = !DILocation(line: 236, column: 25, scope: !6728)
!6763 = !DILocation(line: 236, column: 24, scope: !6728)
!6764 = !DILocation(line: 236, column: 27, scope: !6728)
!6765 = !DILocation(line: 236, column: 26, scope: !6728)
!6766 = !DILocation(line: 236, column: 15, scope: !6728)
!6767 = !DILocation(line: 237, column: 23, scope: !6728)
!6768 = !DILocation(line: 237, column: 25, scope: !6728)
!6769 = !DILocation(line: 237, column: 24, scope: !6728)
!6770 = !DILocation(line: 237, column: 27, scope: !6728)
!6771 = !DILocation(line: 237, column: 26, scope: !6728)
!6772 = !DILocation(line: 237, column: 15, scope: !6728)
!6773 = !DILocation(line: 238, column: 15, scope: !6728)
!6774 = !DILocation(line: 239, column: 23, scope: !6728)
!6775 = !DILocation(line: 239, column: 25, scope: !6728)
!6776 = !DILocation(line: 239, column: 24, scope: !6728)
!6777 = !DILocation(line: 239, column: 27, scope: !6728)
!6778 = !DILocation(line: 239, column: 26, scope: !6728)
!6779 = !DILocation(line: 239, column: 29, scope: !6728)
!6780 = !DILocation(line: 239, column: 28, scope: !6728)
!6781 = !DILocation(line: 239, column: 15, scope: !6728)
!6782 = !DILocation(line: 240, column: 23, scope: !6728)
!6783 = !DILocation(line: 240, column: 25, scope: !6728)
!6784 = !DILocation(line: 240, column: 24, scope: !6728)
!6785 = !DILocation(line: 240, column: 27, scope: !6728)
!6786 = !DILocation(line: 240, column: 26, scope: !6728)
!6787 = !DILocation(line: 240, column: 29, scope: !6728)
!6788 = !DILocation(line: 240, column: 28, scope: !6728)
!6789 = !DILocation(line: 240, column: 15, scope: !6728)
!6790 = !DILocation(line: 241, column: 23, scope: !6728)
!6791 = !DILocation(line: 241, column: 25, scope: !6728)
!6792 = !DILocation(line: 241, column: 24, scope: !6728)
!6793 = !DILocation(line: 241, column: 27, scope: !6728)
!6794 = !DILocation(line: 241, column: 26, scope: !6728)
!6795 = !DILocation(line: 241, column: 29, scope: !6728)
!6796 = !DILocation(line: 241, column: 28, scope: !6728)
!6797 = !DILocation(line: 241, column: 15, scope: !6728)
!6798 = !DILocation(line: 242, column: 23, scope: !6728)
!6799 = !DILocation(line: 242, column: 25, scope: !6728)
!6800 = !DILocation(line: 242, column: 24, scope: !6728)
!6801 = !DILocation(line: 242, column: 27, scope: !6728)
!6802 = !DILocation(line: 242, column: 26, scope: !6728)
!6803 = !DILocation(line: 242, column: 29, scope: !6728)
!6804 = !DILocation(line: 242, column: 28, scope: !6728)
!6805 = !DILocation(line: 242, column: 15, scope: !6728)
!6806 = !DILocation(line: 243, column: 23, scope: !6728)
!6807 = !DILocation(line: 243, column: 25, scope: !6728)
!6808 = !DILocation(line: 243, column: 24, scope: !6728)
!6809 = !DILocation(line: 243, column: 27, scope: !6728)
!6810 = !DILocation(line: 243, column: 26, scope: !6728)
!6811 = !DILocation(line: 243, column: 29, scope: !6728)
!6812 = !DILocation(line: 243, column: 28, scope: !6728)
!6813 = !DILocation(line: 243, column: 15, scope: !6728)
!6814 = !DILocation(line: 244, column: 15, scope: !6728)
!6815 = !DILocation(line: 246, column: 3, scope: !6718)
!6816 = !DILocation(line: 247, column: 1, scope: !6718)
!6817 = distinct !DISubprogram(name: "poly_basis_dy", scope: !1, file: !1, line: 248, type: !6564, scopeLine: 249, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !857)
!6818 = !DILocalVariable(name: "n", arg: 1, scope: !6817, file: !1, line: 248, type: !665)
!6819 = !DILocation(line: 248, column: 37, scope: !6817)
!6820 = !DILocalVariable(name: "x", arg: 2, scope: !6817, file: !1, line: 248, type: !638)
!6821 = !DILocation(line: 248, column: 47, scope: !6817)
!6822 = !DILocalVariable(name: "y", arg: 3, scope: !6817, file: !1, line: 248, type: !638)
!6823 = !DILocation(line: 248, column: 57, scope: !6817)
!6824 = !DILocation(line: 251, column: 10, scope: !6817)
!6825 = !DILocation(line: 251, column: 3, scope: !6817)
!6826 = !DILocation(line: 252, column: 15, scope: !6827)
!6827 = distinct !DILexicalBlock(scope: !6817, file: !1, line: 251, column: 13)
!6828 = !DILocation(line: 253, column: 15, scope: !6827)
!6829 = !DILocation(line: 254, column: 15, scope: !6827)
!6830 = !DILocation(line: 255, column: 24, scope: !6827)
!6831 = !DILocation(line: 255, column: 15, scope: !6827)
!6832 = !DILocation(line: 256, column: 15, scope: !6827)
!6833 = !DILocation(line: 257, column: 24, scope: !6827)
!6834 = !DILocation(line: 257, column: 15, scope: !6827)
!6835 = !DILocation(line: 258, column: 37, scope: !6827)
!6836 = !DILocation(line: 258, column: 38, scope: !6827)
!6837 = !DILocation(line: 258, column: 41, scope: !6827)
!6838 = !DILocation(line: 258, column: 43, scope: !6827)
!6839 = !DILocation(line: 258, column: 23, scope: !6827)
!6840 = !DILocation(line: 258, column: 15, scope: !6827)
!6841 = !DILocation(line: 263, column: 1, scope: !6817)
!6842 = distinct !DISubprogram(name: "MagickRound", scope: !1, file: !1, line: 373, type: !6843, scopeLine: 374, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !857)
!6843 = !DISubroutineType(types: !6844)
!6844 = !{!638, !638}
!6845 = !DILocalVariable(name: "x", arg: 1, scope: !6842, file: !1, line: 373, type: !638)
!6846 = !DILocation(line: 373, column: 41, scope: !6842)
!6847 = !DILocation(line: 378, column: 8, scope: !6848)
!6848 = distinct !DILexicalBlock(scope: !6842, file: !1, line: 378, column: 7)
!6849 = !DILocation(line: 378, column: 16, scope: !6848)
!6850 = !DILocation(line: 378, column: 10, scope: !6848)
!6851 = !DILocation(line: 378, column: 9, scope: !6848)
!6852 = !DILocation(line: 378, column: 28, scope: !6848)
!6853 = !DILocation(line: 378, column: 23, scope: !6848)
!6854 = !DILocation(line: 378, column: 31, scope: !6848)
!6855 = !DILocation(line: 378, column: 30, scope: !6848)
!6856 = !DILocation(line: 378, column: 20, scope: !6848)
!6857 = !DILocation(line: 378, column: 7, scope: !6842)
!6858 = !DILocation(line: 379, column: 18, scope: !6848)
!6859 = !DILocation(line: 379, column: 12, scope: !6848)
!6860 = !DILocation(line: 379, column: 5, scope: !6848)
!6861 = !DILocation(line: 380, column: 15, scope: !6842)
!6862 = !DILocation(line: 380, column: 10, scope: !6842)
!6863 = !DILocation(line: 380, column: 3, scope: !6842)
!6864 = !DILocation(line: 381, column: 1, scope: !6842)
!6865 = distinct !DISubprogram(name: "SetPixelPacket", scope: !6115, file: !6115, line: 117, type: !6866, scopeLine: 119, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !857)
!6866 = !DISubroutineType(types: !6867)
!6867 = !{null, !843, !6868, !624, !823}
!6868 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6869, size: 64)
!6869 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2583)
!6870 = !DILocalVariable(name: "image", arg: 1, scope: !6865, file: !6115, line: 117, type: !843)
!6871 = !DILocation(line: 117, column: 48, scope: !6865)
!6872 = !DILocalVariable(name: "pixel", arg: 2, scope: !6865, file: !6115, line: 118, type: !6868)
!6873 = !DILocation(line: 118, column: 28, scope: !6865)
!6874 = !DILocalVariable(name: "color", arg: 3, scope: !6865, file: !6115, line: 118, type: !624)
!6875 = !DILocation(line: 118, column: 47, scope: !6865)
!6876 = !DILocalVariable(name: "index", arg: 4, scope: !6865, file: !6115, line: 118, type: !823)
!6877 = !DILocation(line: 118, column: 66, scope: !6865)
!6878 = !DILocation(line: 120, column: 3, scope: !6865)
!6879 = !DILocation(line: 121, column: 3, scope: !6865)
!6880 = !DILocation(line: 122, column: 3, scope: !6865)
!6881 = !DILocation(line: 123, column: 3, scope: !6865)
!6882 = !DILocation(line: 124, column: 8, scope: !6883)
!6883 = distinct !DILexicalBlock(scope: !6865, file: !6115, line: 124, column: 7)
!6884 = !DILocation(line: 124, column: 15, scope: !6883)
!6885 = !DILocation(line: 124, column: 26, scope: !6883)
!6886 = !DILocation(line: 124, column: 45, scope: !6883)
!6887 = !DILocation(line: 125, column: 8, scope: !6883)
!6888 = !DILocation(line: 125, column: 15, scope: !6883)
!6889 = !DILocation(line: 125, column: 29, scope: !6883)
!6890 = !DILocation(line: 124, column: 7, scope: !6865)
!6891 = !DILocation(line: 126, column: 5, scope: !6892)
!6892 = distinct !DILexicalBlock(scope: !6893, file: !6115, line: 126, column: 5)
!6893 = distinct !DILexicalBlock(scope: !6883, file: !6115, line: 126, column: 5)
!6894 = !DILocation(line: 126, column: 5, scope: !6893)
!6895 = !DILocation(line: 127, column: 1, scope: !6865)
!6896 = distinct !DISubprogram(name: "MagickPixelCompositeBlend", scope: !6897, file: !6897, line: 143, type: !6898, scopeLine: 146, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !857)
!6897 = !DIFile(filename: "./magick/composite-private.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!6898 = !DISubroutineType(types: !6899)
!6899 = !{null, !6868, !6900, !6868, !6900, !6367}
!6900 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !828)
!6901 = !DILocalVariable(name: "p", arg: 1, scope: !6896, file: !6897, line: 143, type: !6868)
!6902 = !DILocation(line: 143, column: 71, scope: !6896)
!6903 = !DILocalVariable(name: "alpha", arg: 2, scope: !6896, file: !6897, line: 144, type: !6900)
!6904 = !DILocation(line: 144, column: 24, scope: !6896)
!6905 = !DILocalVariable(name: "q", arg: 3, scope: !6896, file: !6897, line: 144, type: !6868)
!6906 = !DILocation(line: 144, column: 55, scope: !6896)
!6907 = !DILocalVariable(name: "beta", arg: 4, scope: !6896, file: !6897, line: 145, type: !6900)
!6908 = !DILocation(line: 145, column: 24, scope: !6896)
!6909 = !DILocalVariable(name: "composite", arg: 5, scope: !6896, file: !6897, line: 145, type: !6367)
!6910 = !DILocation(line: 145, column: 48, scope: !6896)
!6911 = !DILocation(line: 147, column: 28, scope: !6896)
!6912 = !DILocation(line: 147, column: 61, scope: !6896)
!6913 = !DILocation(line: 148, column: 19, scope: !6896)
!6914 = !DILocation(line: 148, column: 22, scope: !6896)
!6915 = !DILocation(line: 148, column: 18, scope: !6896)
!6916 = !DILocation(line: 147, column: 66, scope: !6896)
!6917 = !DILocation(line: 147, column: 60, scope: !6896)
!6918 = !DILocation(line: 148, column: 32, scope: !6896)
!6919 = !DILocation(line: 148, column: 65, scope: !6896)
!6920 = !DILocation(line: 149, column: 19, scope: !6896)
!6921 = !DILocation(line: 149, column: 22, scope: !6896)
!6922 = !DILocation(line: 149, column: 18, scope: !6896)
!6923 = !DILocation(line: 148, column: 69, scope: !6896)
!6924 = !DILocation(line: 148, column: 64, scope: !6896)
!6925 = !DILocation(line: 149, column: 32, scope: !6896)
!6926 = !DILocation(line: 147, column: 3, scope: !6896)
!6927 = !DILocation(line: 150, column: 1, scope: !6896)
!6928 = distinct !DISubprogram(name: "SetImageProgress", scope: !6929, file: !6929, line: 27, type: !6930, scopeLine: 29, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !857)
!6929 = !DIFile(filename: "./magick/monitor-private.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!6930 = !DISubroutineType(types: !6931)
!6931 = !{!617, !843, !734, !736, !739}
!6932 = !DILocalVariable(name: "image", arg: 1, scope: !6928, file: !6929, line: 27, type: !843)
!6933 = !DILocation(line: 27, column: 63, scope: !6928)
!6934 = !DILocalVariable(name: "tag", arg: 2, scope: !6928, file: !6929, line: 28, type: !734)
!6935 = !DILocation(line: 28, column: 15, scope: !6928)
!6936 = !DILocalVariable(name: "offset", arg: 3, scope: !6928, file: !6929, line: 28, type: !736)
!6937 = !DILocation(line: 28, column: 42, scope: !6928)
!6938 = !DILocalVariable(name: "extent", arg: 4, scope: !6928, file: !6929, line: 28, type: !739)
!6939 = !DILocation(line: 28, column: 70, scope: !6928)
!6940 = !DILocalVariable(name: "message", scope: !6928, file: !6929, line: 31, type: !754)
!6941 = !DILocation(line: 31, column: 5, scope: !6928)
!6942 = !DILocation(line: 33, column: 7, scope: !6943)
!6943 = distinct !DILexicalBlock(scope: !6928, file: !6929, line: 33, column: 7)
!6944 = !DILocation(line: 33, column: 14, scope: !6943)
!6945 = !DILocation(line: 33, column: 31, scope: !6943)
!6946 = !DILocation(line: 33, column: 7, scope: !6928)
!6947 = !DILocation(line: 34, column: 5, scope: !6943)
!6948 = !DILocation(line: 35, column: 29, scope: !6928)
!6949 = !DILocation(line: 35, column: 59, scope: !6928)
!6950 = !DILocation(line: 35, column: 63, scope: !6928)
!6951 = !DILocation(line: 35, column: 70, scope: !6928)
!6952 = !DILocation(line: 35, column: 10, scope: !6928)
!6953 = !DILocation(line: 36, column: 10, scope: !6928)
!6954 = !DILocation(line: 36, column: 17, scope: !6928)
!6955 = !DILocation(line: 36, column: 34, scope: !6928)
!6956 = !DILocation(line: 36, column: 42, scope: !6928)
!6957 = !DILocation(line: 36, column: 49, scope: !6928)
!6958 = !DILocation(line: 36, column: 56, scope: !6928)
!6959 = !DILocation(line: 36, column: 63, scope: !6928)
!6960 = !DILocation(line: 36, column: 3, scope: !6928)
!6961 = !DILocation(line: 37, column: 1, scope: !6928)
!6962 = distinct !DISubprogram(name: "DestroyResampleFilterThreadSet", scope: !6278, file: !6278, line: 27, type: !6963, scopeLine: 29, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !857)
!6963 = !DISubroutineType(types: !6964)
!6964 = !{!830, !830}
!6965 = !DILocalVariable(name: "filter", arg: 1, scope: !6962, file: !6278, line: 28, type: !830)
!6966 = !DILocation(line: 28, column: 20, scope: !6962)
!6967 = !DILocalVariable(name: "i", scope: !6962, file: !6278, line: 31, type: !665)
!6968 = !DILocation(line: 31, column: 5, scope: !6962)
!6969 = !DILocation(line: 34, column: 9, scope: !6970)
!6970 = distinct !DILexicalBlock(scope: !6962, file: !6278, line: 34, column: 3)
!6971 = !DILocation(line: 34, column: 8, scope: !6970)
!6972 = !DILocation(line: 34, column: 13, scope: !6973)
!6973 = distinct !DILexicalBlock(scope: !6970, file: !6278, line: 34, column: 3)
!6974 = !DILocation(line: 34, column: 27, scope: !6973)
!6975 = !DILocation(line: 34, column: 15, scope: !6973)
!6976 = !DILocation(line: 34, column: 3, scope: !6970)
!6977 = !DILocation(line: 35, column: 9, scope: !6978)
!6978 = distinct !DILexicalBlock(scope: !6973, file: !6278, line: 35, column: 9)
!6979 = !DILocation(line: 35, column: 16, scope: !6978)
!6980 = !DILocation(line: 35, column: 19, scope: !6978)
!6981 = !DILocation(line: 35, column: 9, scope: !6973)
!6982 = !DILocation(line: 36, column: 39, scope: !6978)
!6983 = !DILocation(line: 36, column: 46, scope: !6978)
!6984 = !DILocation(line: 36, column: 17, scope: !6978)
!6985 = !DILocation(line: 36, column: 7, scope: !6978)
!6986 = !DILocation(line: 36, column: 14, scope: !6978)
!6987 = !DILocation(line: 36, column: 16, scope: !6978)
!6988 = !DILocation(line: 35, column: 41, scope: !6978)
!6989 = !DILocation(line: 34, column: 68, scope: !6973)
!6990 = !DILocation(line: 34, column: 3, scope: !6973)
!6991 = distinct !{!6991, !6976, !6992}
!6992 = !DILocation(line: 36, column: 48, scope: !6970)
!6993 = !DILocation(line: 37, column: 54, scope: !6962)
!6994 = !DILocation(line: 37, column: 30, scope: !6962)
!6995 = !DILocation(line: 37, column: 10, scope: !6962)
!6996 = !DILocation(line: 37, column: 9, scope: !6962)
!6997 = !DILocation(line: 38, column: 10, scope: !6962)
!6998 = !DILocation(line: 38, column: 3, scope: !6962)
!6999 = distinct !DISubprogram(name: "RotateImage", scope: !1, file: !1, line: 2821, type: !7000, scopeLine: 2823, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !857)
!7000 = !DISubroutineType(types: !7001)
!7001 = !{!601, !843, !916, !856}
!7002 = !DILocalVariable(name: "image", arg: 1, scope: !6999, file: !1, line: 2821, type: !843)
!7003 = !DILocation(line: 2821, column: 46, scope: !6999)
!7004 = !DILocalVariable(name: "degrees", arg: 2, scope: !6999, file: !1, line: 2821, type: !916)
!7005 = !DILocation(line: 2821, column: 65, scope: !6999)
!7006 = !DILocalVariable(name: "exception", arg: 3, scope: !6999, file: !1, line: 2822, type: !856)
!7007 = !DILocation(line: 2822, column: 18, scope: !6999)
!7008 = !DILocalVariable(name: "distort_image", scope: !6999, file: !1, line: 2825, type: !601)
!7009 = !DILocation(line: 2825, column: 6, scope: !6999)
!7010 = !DILocalVariable(name: "rotate_image", scope: !6999, file: !1, line: 2826, type: !601)
!7011 = !DILocation(line: 2826, column: 6, scope: !6999)
!7012 = !DILocalVariable(name: "angle", scope: !6999, file: !1, line: 2829, type: !828)
!7013 = !DILocation(line: 2829, column: 5, scope: !6999)
!7014 = !DILocalVariable(name: "shear", scope: !6999, file: !1, line: 2832, type: !1006)
!7015 = !DILocation(line: 2832, column: 5, scope: !6999)
!7016 = !DILocalVariable(name: "rotations", scope: !6999, file: !1, line: 2835, type: !612)
!7017 = !DILocation(line: 2835, column: 5, scope: !6999)
!7018 = !DILocation(line: 2842, column: 7, scope: !7019)
!7019 = distinct !DILexicalBlock(scope: !6999, file: !1, line: 2842, column: 7)
!7020 = !DILocation(line: 2842, column: 14, scope: !7019)
!7021 = !DILocation(line: 2842, column: 20, scope: !7019)
!7022 = !DILocation(line: 2842, column: 7, scope: !6999)
!7023 = !DILocation(line: 2843, column: 61, scope: !7019)
!7024 = !DILocation(line: 2843, column: 68, scope: !7019)
!7025 = !DILocation(line: 2843, column: 12, scope: !7019)
!7026 = !DILocation(line: 2843, column: 5, scope: !7019)
!7027 = !DILocation(line: 2846, column: 9, scope: !6999)
!7028 = !DILocation(line: 2846, column: 8, scope: !6999)
!7029 = !DILocation(line: 2847, column: 3, scope: !6999)
!7030 = !DILocation(line: 2847, column: 10, scope: !6999)
!7031 = !DILocation(line: 2847, column: 16, scope: !6999)
!7032 = !DILocation(line: 2848, column: 10, scope: !6999)
!7033 = distinct !{!7033, !7029, !7034}
!7034 = !DILocation(line: 2848, column: 12, scope: !6999)
!7035 = !DILocation(line: 2849, column: 17, scope: !7036)
!7036 = distinct !DILexicalBlock(scope: !6999, file: !1, line: 2849, column: 3)
!7037 = !DILocation(line: 2849, column: 8, scope: !7036)
!7038 = !DILocation(line: 2849, column: 21, scope: !7039)
!7039 = distinct !DILexicalBlock(scope: !7036, file: !1, line: 2849, column: 3)
!7040 = !DILocation(line: 2849, column: 27, scope: !7039)
!7041 = !DILocation(line: 2849, column: 3, scope: !7036)
!7042 = !DILocation(line: 2850, column: 10, scope: !7039)
!7043 = !DILocation(line: 2850, column: 5, scope: !7039)
!7044 = !DILocation(line: 2849, column: 44, scope: !7039)
!7045 = !DILocation(line: 2849, column: 3, scope: !7039)
!7046 = distinct !{!7046, !7041, !7047}
!7047 = !DILocation(line: 2850, column: 12, scope: !7036)
!7048 = !DILocation(line: 2851, column: 12, scope: !6999)
!7049 = !DILocation(line: 2852, column: 43, scope: !6999)
!7050 = !DILocation(line: 2852, column: 26, scope: !6999)
!7051 = !DILocation(line: 2852, column: 49, scope: !6999)
!7052 = !DILocation(line: 2852, column: 13, scope: !6999)
!7053 = !DILocation(line: 2852, column: 12, scope: !6999)
!7054 = !DILocation(line: 2852, column: 9, scope: !6999)
!7055 = !DILocation(line: 2852, column: 10, scope: !6999)
!7056 = !DILocation(line: 2853, column: 41, scope: !6999)
!7057 = !DILocation(line: 2853, column: 24, scope: !6999)
!7058 = !DILocation(line: 2853, column: 11, scope: !6999)
!7059 = !DILocation(line: 2853, column: 9, scope: !6999)
!7060 = !DILocation(line: 2853, column: 10, scope: !6999)
!7061 = !DILocation(line: 2854, column: 19, scope: !7062)
!7062 = distinct !DILexicalBlock(scope: !6999, file: !1, line: 2854, column: 7)
!7063 = !DILocation(line: 2854, column: 8, scope: !7062)
!7064 = !DILocation(line: 2854, column: 22, scope: !7062)
!7065 = !DILocation(line: 2854, column: 39, scope: !7062)
!7066 = !DILocation(line: 2854, column: 54, scope: !7062)
!7067 = !DILocation(line: 2854, column: 43, scope: !7062)
!7068 = !DILocation(line: 2854, column: 57, scope: !7062)
!7069 = !DILocation(line: 2854, column: 7, scope: !6999)
!7070 = !DILocation(line: 2855, column: 32, scope: !7062)
!7071 = !DILocation(line: 2855, column: 38, scope: !7062)
!7072 = !DILocation(line: 2855, column: 48, scope: !7062)
!7073 = !DILocation(line: 2855, column: 12, scope: !7062)
!7074 = !DILocation(line: 2855, column: 5, scope: !7062)
!7075 = !DILocation(line: 2856, column: 28, scope: !6999)
!7076 = !DILocation(line: 2856, column: 49, scope: !6999)
!7077 = !DILocation(line: 2856, column: 17, scope: !6999)
!7078 = !DILocation(line: 2856, column: 16, scope: !6999)
!7079 = !DILocation(line: 2857, column: 7, scope: !7080)
!7080 = distinct !DILexicalBlock(scope: !6999, file: !1, line: 2857, column: 7)
!7081 = !DILocation(line: 2857, column: 21, scope: !7080)
!7082 = !DILocation(line: 2857, column: 7, scope: !6999)
!7083 = !DILocation(line: 2858, column: 5, scope: !7080)
!7084 = !DILocation(line: 2859, column: 37, scope: !6999)
!7085 = !DILocation(line: 2859, column: 10, scope: !6999)
!7086 = !DILocation(line: 2860, column: 29, scope: !6999)
!7087 = !DILocation(line: 2861, column: 25, scope: !6999)
!7088 = !DILocation(line: 2860, column: 16, scope: !6999)
!7089 = !DILocation(line: 2860, column: 15, scope: !6999)
!7090 = !DILocation(line: 2862, column: 30, scope: !6999)
!7091 = !DILocation(line: 2862, column: 17, scope: !6999)
!7092 = !DILocation(line: 2862, column: 16, scope: !6999)
!7093 = !DILocation(line: 2863, column: 10, scope: !6999)
!7094 = !DILocation(line: 2863, column: 3, scope: !6999)
!7095 = !DILocation(line: 2864, column: 1, scope: !6999)
!7096 = distinct !DISubprogram(name: "DegreesToRadians", scope: !7097, file: !7097, line: 54, type: !6116, scopeLine: 55, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !857)
!7097 = !DIFile(filename: "./magick/image-private.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!7098 = !DILocalVariable(name: "degrees", arg: 1, scope: !7096, file: !7097, line: 54, type: !916)
!7099 = !DILocation(line: 54, column: 52, scope: !7096)
!7100 = !DILocation(line: 56, column: 29, scope: !7096)
!7101 = !DILocation(line: 56, column: 28, scope: !7096)
!7102 = !DILocation(line: 56, column: 36, scope: !7096)
!7103 = !DILocation(line: 56, column: 3, scope: !7096)
!7104 = distinct !DISubprogram(name: "SparseColorImage", scope: !1, file: !1, line: 2908, type: !7105, scopeLine: 2912, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !857)
!7105 = !DISubroutineType(types: !7106)
!7106 = !{!601, !843, !7107, !7109, !914, !915, !856}
!7107 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7108)
!7108 = !DIDerivedType(tag: DW_TAG_typedef, name: "ChannelType", file: !4, line: 202, baseType: !452)
!7109 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !826)
!7110 = !DILocalVariable(name: "image", arg: 1, scope: !7104, file: !1, line: 2908, type: !843)
!7111 = !DILocation(line: 2908, column: 51, scope: !7104)
!7112 = !DILocalVariable(name: "channel", arg: 2, scope: !7104, file: !1, line: 2909, type: !7107)
!7113 = !DILocation(line: 2909, column: 21, scope: !7104)
!7114 = !DILocalVariable(name: "method", arg: 3, scope: !7104, file: !1, line: 2909, type: !7109)
!7115 = !DILocation(line: 2909, column: 53, scope: !7104)
!7116 = !DILocalVariable(name: "number_arguments", arg: 4, scope: !7104, file: !1, line: 2910, type: !914)
!7117 = !DILocation(line: 2910, column: 16, scope: !7104)
!7118 = !DILocalVariable(name: "arguments", arg: 5, scope: !7104, file: !1, line: 2910, type: !915)
!7119 = !DILocation(line: 2910, column: 47, scope: !7104)
!7120 = !DILocalVariable(name: "exception", arg: 6, scope: !7104, file: !1, line: 2911, type: !856)
!7121 = !DILocation(line: 2911, column: 18, scope: !7104)
!7122 = !DILocalVariable(name: "sparse_method", scope: !7104, file: !1, line: 2916, type: !826)
!7123 = !DILocation(line: 2916, column: 5, scope: !7104)
!7124 = !DILocalVariable(name: "coeff", scope: !7104, file: !1, line: 2919, type: !821)
!7125 = !DILocation(line: 2919, column: 6, scope: !7104)
!7126 = !DILocalVariable(name: "sparse_image", scope: !7104, file: !1, line: 2922, type: !601)
!7127 = !DILocation(line: 2922, column: 6, scope: !7104)
!7128 = !DILocalVariable(name: "number_colors", scope: !7104, file: !1, line: 2925, type: !612)
!7129 = !DILocation(line: 2925, column: 5, scope: !7104)
!7130 = !DILocation(line: 2929, column: 7, scope: !7131)
!7131 = distinct !DILexicalBlock(scope: !7104, file: !1, line: 2929, column: 7)
!7132 = !DILocation(line: 2929, column: 14, scope: !7131)
!7133 = !DILocation(line: 2929, column: 20, scope: !7131)
!7134 = !DILocation(line: 2929, column: 7, scope: !7104)
!7135 = !DILocation(line: 2930, column: 61, scope: !7131)
!7136 = !DILocation(line: 2930, column: 68, scope: !7131)
!7137 = !DILocation(line: 2930, column: 12, scope: !7131)
!7138 = !DILocation(line: 2930, column: 5, scope: !7131)
!7139 = !DILocation(line: 2935, column: 16, scope: !7104)
!7140 = !DILocation(line: 2936, column: 8, scope: !7141)
!7141 = distinct !DILexicalBlock(scope: !7104, file: !1, line: 2936, column: 8)
!7142 = !DILocation(line: 2936, column: 16, scope: !7141)
!7143 = !DILocation(line: 2936, column: 8, scope: !7104)
!7144 = !DILocation(line: 2936, column: 48, scope: !7141)
!7145 = !DILocation(line: 2936, column: 35, scope: !7141)
!7146 = !DILocation(line: 2937, column: 8, scope: !7147)
!7147 = distinct !DILexicalBlock(scope: !7104, file: !1, line: 2937, column: 8)
!7148 = !DILocation(line: 2937, column: 16, scope: !7147)
!7149 = !DILocation(line: 2937, column: 8, scope: !7104)
!7150 = !DILocation(line: 2937, column: 48, scope: !7147)
!7151 = !DILocation(line: 2937, column: 35, scope: !7147)
!7152 = !DILocation(line: 2938, column: 8, scope: !7153)
!7153 = distinct !DILexicalBlock(scope: !7104, file: !1, line: 2938, column: 8)
!7154 = !DILocation(line: 2938, column: 16, scope: !7153)
!7155 = !DILocation(line: 2938, column: 8, scope: !7104)
!7156 = !DILocation(line: 2938, column: 48, scope: !7153)
!7157 = !DILocation(line: 2938, column: 35, scope: !7153)
!7158 = !DILocation(line: 2939, column: 8, scope: !7159)
!7159 = distinct !DILexicalBlock(scope: !7104, file: !1, line: 2939, column: 8)
!7160 = !DILocation(line: 2939, column: 16, scope: !7159)
!7161 = !DILocation(line: 2939, column: 8, scope: !7104)
!7162 = !DILocation(line: 2939, column: 48, scope: !7159)
!7163 = !DILocation(line: 2939, column: 35, scope: !7159)
!7164 = !DILocation(line: 2940, column: 8, scope: !7165)
!7165 = distinct !DILexicalBlock(scope: !7104, file: !1, line: 2940, column: 8)
!7166 = !DILocation(line: 2940, column: 16, scope: !7165)
!7167 = !DILocation(line: 2940, column: 8, scope: !7104)
!7168 = !DILocation(line: 2940, column: 48, scope: !7165)
!7169 = !DILocation(line: 2940, column: 35, scope: !7165)
!7170 = !DILocalVariable(name: "distort_method", scope: !7171, file: !1, line: 2947, type: !825)
!7171 = distinct !DILexicalBlock(scope: !7104, file: !1, line: 2946, column: 3)
!7172 = !DILocation(line: 2947, column: 7, scope: !7171)
!7173 = !DILocation(line: 2949, column: 41, scope: !7171)
!7174 = !DILocation(line: 2949, column: 19, scope: !7171)
!7175 = !DILocation(line: 2950, column: 10, scope: !7176)
!7176 = distinct !DILexicalBlock(scope: !7171, file: !1, line: 2950, column: 10)
!7177 = !DILocation(line: 2950, column: 25, scope: !7176)
!7178 = !DILocation(line: 2950, column: 10, scope: !7171)
!7179 = !DILocation(line: 2951, column: 22, scope: !7176)
!7180 = !DILocation(line: 2951, column: 7, scope: !7176)
!7181 = !DILocation(line: 2952, column: 34, scope: !7171)
!7182 = !DILocation(line: 2952, column: 58, scope: !7171)
!7183 = !DILocation(line: 2953, column: 17, scope: !7171)
!7184 = !DILocation(line: 2953, column: 28, scope: !7171)
!7185 = !DILocation(line: 2953, column: 43, scope: !7171)
!7186 = !DILocation(line: 2952, column: 13, scope: !7171)
!7187 = !DILocation(line: 2952, column: 11, scope: !7171)
!7188 = !DILocation(line: 2954, column: 10, scope: !7189)
!7189 = distinct !DILexicalBlock(scope: !7171, file: !1, line: 2954, column: 10)
!7190 = !DILocation(line: 2954, column: 16, scope: !7189)
!7191 = !DILocation(line: 2954, column: 10, scope: !7171)
!7192 = !DILocation(line: 2955, column: 7, scope: !7189)
!7193 = !DILocation(line: 2962, column: 41, scope: !7171)
!7194 = !DILocation(line: 2962, column: 19, scope: !7171)
!7195 = !DILocation(line: 2963, column: 10, scope: !7196)
!7196 = distinct !DILexicalBlock(scope: !7171, file: !1, line: 2963, column: 10)
!7197 = !DILocation(line: 2963, column: 25, scope: !7196)
!7198 = !DILocation(line: 2963, column: 10, scope: !7171)
!7199 = !DILocation(line: 2964, column: 23, scope: !7196)
!7200 = !DILocation(line: 2964, column: 21, scope: !7196)
!7201 = !DILocation(line: 2964, column: 7, scope: !7196)
!7202 = !DILocation(line: 2965, column: 10, scope: !7203)
!7203 = distinct !DILexicalBlock(scope: !7171, file: !1, line: 2965, column: 10)
!7204 = !DILocation(line: 2965, column: 24, scope: !7203)
!7205 = !DILocation(line: 2965, column: 10, scope: !7171)
!7206 = !DILocation(line: 2966, column: 7, scope: !7203)
!7207 = !DILocation(line: 2966, column: 15, scope: !7203)
!7208 = !DILocation(line: 2970, column: 25, scope: !7209)
!7209 = distinct !DILexicalBlock(scope: !7104, file: !1, line: 2970, column: 8)
!7210 = !DILocation(line: 2970, column: 8, scope: !7209)
!7211 = !DILocation(line: 2970, column: 42, scope: !7209)
!7212 = !DILocation(line: 2970, column: 8, scope: !7104)
!7213 = !DILocation(line: 2972, column: 13, scope: !7214)
!7214 = distinct !DILexicalBlock(scope: !7209, file: !1, line: 2970, column: 67)
!7215 = !DILocation(line: 2972, column: 5, scope: !7214)
!7216 = !DILocalVariable(name: "x", scope: !7217, file: !1, line: 2975, type: !665)
!7217 = distinct !DILexicalBlock(scope: !7218, file: !1, line: 2974, column: 7)
!7218 = distinct !DILexicalBlock(scope: !7214, file: !1, line: 2972, column: 28)
!7219 = !DILocation(line: 2975, column: 26, scope: !7217)
!7220 = !DILocation(line: 2976, column: 33, scope: !7217)
!7221 = !DILocation(line: 2976, column: 16, scope: !7217)
!7222 = !DILocation(line: 2977, column: 14, scope: !7223)
!7223 = distinct !DILexicalBlock(scope: !7217, file: !1, line: 2977, column: 14)
!7224 = !DILocation(line: 2977, column: 22, scope: !7223)
!7225 = !DILocation(line: 2977, column: 14, scope: !7217)
!7226 = !DILocation(line: 2978, column: 35, scope: !7223)
!7227 = !DILocation(line: 2979, column: 15, scope: !7223)
!7228 = !DILocation(line: 2979, column: 21, scope: !7223)
!7229 = !DILocation(line: 2979, column: 25, scope: !7223)
!7230 = !DILocation(line: 2979, column: 31, scope: !7223)
!7231 = !DILocation(line: 2979, column: 32, scope: !7223)
!7232 = !DILocation(line: 2979, column: 37, scope: !7223)
!7233 = !DILocation(line: 2979, column: 43, scope: !7223)
!7234 = !DILocation(line: 2979, column: 44, scope: !7223)
!7235 = !DILocation(line: 2978, column: 18, scope: !7223)
!7236 = !DILocation(line: 2979, column: 50, scope: !7223)
!7237 = !DILocation(line: 2978, column: 11, scope: !7223)
!7238 = !DILocation(line: 2980, column: 14, scope: !7239)
!7239 = distinct !DILexicalBlock(scope: !7217, file: !1, line: 2980, column: 14)
!7240 = !DILocation(line: 2980, column: 22, scope: !7239)
!7241 = !DILocation(line: 2980, column: 14, scope: !7217)
!7242 = !DILocation(line: 2981, column: 35, scope: !7239)
!7243 = !DILocation(line: 2982, column: 15, scope: !7239)
!7244 = !DILocation(line: 2982, column: 21, scope: !7239)
!7245 = !DILocation(line: 2982, column: 25, scope: !7239)
!7246 = !DILocation(line: 2982, column: 31, scope: !7239)
!7247 = !DILocation(line: 2982, column: 32, scope: !7239)
!7248 = !DILocation(line: 2982, column: 37, scope: !7239)
!7249 = !DILocation(line: 2982, column: 43, scope: !7239)
!7250 = !DILocation(line: 2982, column: 44, scope: !7239)
!7251 = !DILocation(line: 2981, column: 18, scope: !7239)
!7252 = !DILocation(line: 2982, column: 50, scope: !7239)
!7253 = !DILocation(line: 2981, column: 11, scope: !7239)
!7254 = !DILocation(line: 2983, column: 14, scope: !7255)
!7255 = distinct !DILexicalBlock(scope: !7217, file: !1, line: 2983, column: 14)
!7256 = !DILocation(line: 2983, column: 22, scope: !7255)
!7257 = !DILocation(line: 2983, column: 14, scope: !7217)
!7258 = !DILocation(line: 2984, column: 35, scope: !7255)
!7259 = !DILocation(line: 2985, column: 15, scope: !7255)
!7260 = !DILocation(line: 2985, column: 21, scope: !7255)
!7261 = !DILocation(line: 2985, column: 25, scope: !7255)
!7262 = !DILocation(line: 2985, column: 31, scope: !7255)
!7263 = !DILocation(line: 2985, column: 32, scope: !7255)
!7264 = !DILocation(line: 2985, column: 37, scope: !7255)
!7265 = !DILocation(line: 2985, column: 43, scope: !7255)
!7266 = !DILocation(line: 2985, column: 44, scope: !7255)
!7267 = !DILocation(line: 2984, column: 18, scope: !7255)
!7268 = !DILocation(line: 2985, column: 50, scope: !7255)
!7269 = !DILocation(line: 2984, column: 11, scope: !7255)
!7270 = !DILocation(line: 2986, column: 14, scope: !7271)
!7271 = distinct !DILexicalBlock(scope: !7217, file: !1, line: 2986, column: 14)
!7272 = !DILocation(line: 2986, column: 22, scope: !7271)
!7273 = !DILocation(line: 2986, column: 14, scope: !7217)
!7274 = !DILocation(line: 2987, column: 35, scope: !7271)
!7275 = !DILocation(line: 2988, column: 15, scope: !7271)
!7276 = !DILocation(line: 2988, column: 21, scope: !7271)
!7277 = !DILocation(line: 2988, column: 25, scope: !7271)
!7278 = !DILocation(line: 2988, column: 31, scope: !7271)
!7279 = !DILocation(line: 2988, column: 32, scope: !7271)
!7280 = !DILocation(line: 2988, column: 37, scope: !7271)
!7281 = !DILocation(line: 2988, column: 43, scope: !7271)
!7282 = !DILocation(line: 2988, column: 44, scope: !7271)
!7283 = !DILocation(line: 2987, column: 18, scope: !7271)
!7284 = !DILocation(line: 2988, column: 50, scope: !7271)
!7285 = !DILocation(line: 2987, column: 11, scope: !7271)
!7286 = !DILocation(line: 2989, column: 14, scope: !7287)
!7287 = distinct !DILexicalBlock(scope: !7217, file: !1, line: 2989, column: 14)
!7288 = !DILocation(line: 2989, column: 22, scope: !7287)
!7289 = !DILocation(line: 2989, column: 14, scope: !7217)
!7290 = !DILocation(line: 2990, column: 35, scope: !7287)
!7291 = !DILocation(line: 2991, column: 15, scope: !7287)
!7292 = !DILocation(line: 2991, column: 21, scope: !7287)
!7293 = !DILocation(line: 2991, column: 25, scope: !7287)
!7294 = !DILocation(line: 2991, column: 31, scope: !7287)
!7295 = !DILocation(line: 2991, column: 32, scope: !7287)
!7296 = !DILocation(line: 2991, column: 37, scope: !7287)
!7297 = !DILocation(line: 2991, column: 43, scope: !7287)
!7298 = !DILocation(line: 2991, column: 44, scope: !7287)
!7299 = !DILocation(line: 2990, column: 18, scope: !7287)
!7300 = !DILocation(line: 2991, column: 50, scope: !7287)
!7301 = !DILocation(line: 2990, column: 11, scope: !7287)
!7302 = !DILocation(line: 2992, column: 9, scope: !7217)
!7303 = !DILocalVariable(name: "x", scope: !7304, file: !1, line: 2996, type: !665)
!7304 = distinct !DILexicalBlock(scope: !7218, file: !1, line: 2995, column: 7)
!7305 = !DILocation(line: 2996, column: 26, scope: !7304)
!7306 = !DILocation(line: 2997, column: 33, scope: !7304)
!7307 = !DILocation(line: 2997, column: 16, scope: !7304)
!7308 = !DILocation(line: 2998, column: 14, scope: !7309)
!7309 = distinct !DILexicalBlock(scope: !7304, file: !1, line: 2998, column: 14)
!7310 = !DILocation(line: 2998, column: 22, scope: !7309)
!7311 = !DILocation(line: 2998, column: 14, scope: !7304)
!7312 = !DILocation(line: 2999, column: 35, scope: !7309)
!7313 = !DILocation(line: 3000, column: 15, scope: !7309)
!7314 = !DILocation(line: 3000, column: 22, scope: !7309)
!7315 = !DILocation(line: 3000, column: 27, scope: !7309)
!7316 = !DILocation(line: 3000, column: 33, scope: !7309)
!7317 = !DILocation(line: 3000, column: 34, scope: !7309)
!7318 = !DILocation(line: 3001, column: 15, scope: !7309)
!7319 = !DILocation(line: 3001, column: 21, scope: !7309)
!7320 = !DILocation(line: 3001, column: 22, scope: !7309)
!7321 = !DILocation(line: 3001, column: 27, scope: !7309)
!7322 = !DILocation(line: 3001, column: 33, scope: !7309)
!7323 = !DILocation(line: 3001, column: 34, scope: !7309)
!7324 = !DILocation(line: 2999, column: 18, scope: !7309)
!7325 = !DILocation(line: 3001, column: 40, scope: !7309)
!7326 = !DILocation(line: 2999, column: 11, scope: !7309)
!7327 = !DILocation(line: 3002, column: 14, scope: !7328)
!7328 = distinct !DILexicalBlock(scope: !7304, file: !1, line: 3002, column: 14)
!7329 = !DILocation(line: 3002, column: 22, scope: !7328)
!7330 = !DILocation(line: 3002, column: 14, scope: !7304)
!7331 = !DILocation(line: 3003, column: 35, scope: !7328)
!7332 = !DILocation(line: 3004, column: 15, scope: !7328)
!7333 = !DILocation(line: 3004, column: 22, scope: !7328)
!7334 = !DILocation(line: 3004, column: 27, scope: !7328)
!7335 = !DILocation(line: 3004, column: 33, scope: !7328)
!7336 = !DILocation(line: 3004, column: 34, scope: !7328)
!7337 = !DILocation(line: 3005, column: 15, scope: !7328)
!7338 = !DILocation(line: 3005, column: 21, scope: !7328)
!7339 = !DILocation(line: 3005, column: 22, scope: !7328)
!7340 = !DILocation(line: 3005, column: 27, scope: !7328)
!7341 = !DILocation(line: 3005, column: 33, scope: !7328)
!7342 = !DILocation(line: 3005, column: 34, scope: !7328)
!7343 = !DILocation(line: 3003, column: 18, scope: !7328)
!7344 = !DILocation(line: 3005, column: 40, scope: !7328)
!7345 = !DILocation(line: 3003, column: 11, scope: !7328)
!7346 = !DILocation(line: 3006, column: 14, scope: !7347)
!7347 = distinct !DILexicalBlock(scope: !7304, file: !1, line: 3006, column: 14)
!7348 = !DILocation(line: 3006, column: 22, scope: !7347)
!7349 = !DILocation(line: 3006, column: 14, scope: !7304)
!7350 = !DILocation(line: 3007, column: 35, scope: !7347)
!7351 = !DILocation(line: 3008, column: 15, scope: !7347)
!7352 = !DILocation(line: 3008, column: 22, scope: !7347)
!7353 = !DILocation(line: 3008, column: 27, scope: !7347)
!7354 = !DILocation(line: 3008, column: 33, scope: !7347)
!7355 = !DILocation(line: 3008, column: 34, scope: !7347)
!7356 = !DILocation(line: 3009, column: 15, scope: !7347)
!7357 = !DILocation(line: 3009, column: 21, scope: !7347)
!7358 = !DILocation(line: 3009, column: 22, scope: !7347)
!7359 = !DILocation(line: 3009, column: 27, scope: !7347)
!7360 = !DILocation(line: 3009, column: 33, scope: !7347)
!7361 = !DILocation(line: 3009, column: 34, scope: !7347)
!7362 = !DILocation(line: 3007, column: 18, scope: !7347)
!7363 = !DILocation(line: 3009, column: 40, scope: !7347)
!7364 = !DILocation(line: 3007, column: 11, scope: !7347)
!7365 = !DILocation(line: 3010, column: 14, scope: !7366)
!7366 = distinct !DILexicalBlock(scope: !7304, file: !1, line: 3010, column: 14)
!7367 = !DILocation(line: 3010, column: 22, scope: !7366)
!7368 = !DILocation(line: 3010, column: 14, scope: !7304)
!7369 = !DILocation(line: 3011, column: 35, scope: !7366)
!7370 = !DILocation(line: 3012, column: 15, scope: !7366)
!7371 = !DILocation(line: 3012, column: 22, scope: !7366)
!7372 = !DILocation(line: 3012, column: 27, scope: !7366)
!7373 = !DILocation(line: 3012, column: 33, scope: !7366)
!7374 = !DILocation(line: 3012, column: 34, scope: !7366)
!7375 = !DILocation(line: 3013, column: 15, scope: !7366)
!7376 = !DILocation(line: 3013, column: 21, scope: !7366)
!7377 = !DILocation(line: 3013, column: 22, scope: !7366)
!7378 = !DILocation(line: 3013, column: 27, scope: !7366)
!7379 = !DILocation(line: 3013, column: 33, scope: !7366)
!7380 = !DILocation(line: 3013, column: 34, scope: !7366)
!7381 = !DILocation(line: 3011, column: 18, scope: !7366)
!7382 = !DILocation(line: 3013, column: 40, scope: !7366)
!7383 = !DILocation(line: 3011, column: 11, scope: !7366)
!7384 = !DILocation(line: 3014, column: 14, scope: !7385)
!7385 = distinct !DILexicalBlock(scope: !7304, file: !1, line: 3014, column: 14)
!7386 = !DILocation(line: 3014, column: 22, scope: !7385)
!7387 = !DILocation(line: 3014, column: 14, scope: !7304)
!7388 = !DILocation(line: 3015, column: 35, scope: !7385)
!7389 = !DILocation(line: 3016, column: 15, scope: !7385)
!7390 = !DILocation(line: 3016, column: 22, scope: !7385)
!7391 = !DILocation(line: 3016, column: 27, scope: !7385)
!7392 = !DILocation(line: 3016, column: 33, scope: !7385)
!7393 = !DILocation(line: 3016, column: 34, scope: !7385)
!7394 = !DILocation(line: 3017, column: 15, scope: !7385)
!7395 = !DILocation(line: 3017, column: 21, scope: !7385)
!7396 = !DILocation(line: 3017, column: 22, scope: !7385)
!7397 = !DILocation(line: 3017, column: 27, scope: !7385)
!7398 = !DILocation(line: 3017, column: 33, scope: !7385)
!7399 = !DILocation(line: 3017, column: 34, scope: !7385)
!7400 = !DILocation(line: 3015, column: 18, scope: !7385)
!7401 = !DILocation(line: 3017, column: 40, scope: !7385)
!7402 = !DILocation(line: 3015, column: 11, scope: !7385)
!7403 = !DILocation(line: 3018, column: 9, scope: !7304)
!7404 = !DILocation(line: 3022, column: 9, scope: !7218)
!7405 = !DILocation(line: 3024, column: 3, scope: !7214)
!7406 = !DILocation(line: 3032, column: 27, scope: !7104)
!7407 = !DILocation(line: 3032, column: 48, scope: !7104)
!7408 = !DILocation(line: 3032, column: 16, scope: !7104)
!7409 = !DILocation(line: 3032, column: 15, scope: !7104)
!7410 = !DILocation(line: 3033, column: 7, scope: !7411)
!7411 = distinct !DILexicalBlock(scope: !7104, file: !1, line: 3033, column: 7)
!7412 = !DILocation(line: 3033, column: 20, scope: !7411)
!7413 = !DILocation(line: 3033, column: 7, scope: !7104)
!7414 = !DILocation(line: 3034, column: 5, scope: !7411)
!7415 = !DILocation(line: 3035, column: 28, scope: !7416)
!7416 = distinct !DILexicalBlock(scope: !7104, file: !1, line: 3035, column: 7)
!7417 = !DILocation(line: 3035, column: 7, scope: !7416)
!7418 = !DILocation(line: 3035, column: 54, scope: !7416)
!7419 = !DILocation(line: 3035, column: 7, scope: !7104)
!7420 = !DILocation(line: 3037, column: 24, scope: !7421)
!7421 = distinct !DILexicalBlock(scope: !7416, file: !1, line: 3036, column: 5)
!7422 = !DILocation(line: 3037, column: 35, scope: !7421)
!7423 = !DILocation(line: 3037, column: 42, scope: !7421)
!7424 = !DILocation(line: 3037, column: 7, scope: !7421)
!7425 = !DILocation(line: 3038, column: 33, scope: !7421)
!7426 = !DILocation(line: 3038, column: 20, scope: !7421)
!7427 = !DILocation(line: 3038, column: 19, scope: !7421)
!7428 = !DILocation(line: 3039, column: 7, scope: !7421)
!7429 = !DILocalVariable(name: "sparse_view", scope: !7430, file: !1, line: 3043, type: !2574)
!7430 = distinct !DILexicalBlock(scope: !7104, file: !1, line: 3041, column: 3)
!7431 = !DILocation(line: 3043, column: 8, scope: !7430)
!7432 = !DILocalVariable(name: "status", scope: !7430, file: !1, line: 3046, type: !617)
!7433 = !DILocation(line: 3046, column: 7, scope: !7430)
!7434 = !DILocalVariable(name: "progress", scope: !7430, file: !1, line: 3049, type: !737)
!7435 = !DILocation(line: 3049, column: 7, scope: !7430)
!7436 = !DILocalVariable(name: "j", scope: !7430, file: !1, line: 3052, type: !665)
!7437 = !DILocation(line: 3052, column: 7, scope: !7430)
!7438 = !DILocation(line: 3054, column: 11, scope: !7430)
!7439 = !DILocation(line: 3055, column: 13, scope: !7430)
!7440 = !DILocation(line: 3056, column: 43, scope: !7430)
!7441 = !DILocation(line: 3056, column: 56, scope: !7430)
!7442 = !DILocation(line: 3056, column: 17, scope: !7430)
!7443 = !DILocation(line: 3056, column: 16, scope: !7430)
!7444 = !DILocation(line: 3061, column: 11, scope: !7445)
!7445 = distinct !DILexicalBlock(scope: !7430, file: !1, line: 3061, column: 5)
!7446 = !DILocation(line: 3061, column: 10, scope: !7445)
!7447 = !DILocation(line: 3061, column: 15, scope: !7448)
!7448 = distinct !DILexicalBlock(scope: !7445, file: !1, line: 3061, column: 5)
!7449 = !DILocation(line: 3061, column: 29, scope: !7448)
!7450 = !DILocation(line: 3061, column: 43, scope: !7448)
!7451 = !DILocation(line: 3061, column: 17, scope: !7448)
!7452 = !DILocation(line: 3061, column: 5, scope: !7445)
!7453 = !DILocalVariable(name: "sync", scope: !7454, file: !1, line: 3064, type: !617)
!7454 = distinct !DILexicalBlock(scope: !7448, file: !1, line: 3062, column: 5)
!7455 = !DILocation(line: 3064, column: 9, scope: !7454)
!7456 = !DILocalVariable(name: "pixel", scope: !7454, file: !1, line: 3067, type: !2583)
!7457 = !DILocation(line: 3067, column: 9, scope: !7454)
!7458 = !DILocalVariable(name: "indexes", scope: !7454, file: !1, line: 3070, type: !2641)
!7459 = !DILocation(line: 3070, column: 19, scope: !7454)
!7460 = !DILocalVariable(name: "i", scope: !7454, file: !1, line: 3073, type: !665)
!7461 = !DILocation(line: 3073, column: 9, scope: !7454)
!7462 = !DILocalVariable(name: "q", scope: !7454, file: !1, line: 3076, type: !2646)
!7463 = !DILocation(line: 3076, column: 19, scope: !7454)
!7464 = !DILocation(line: 3078, column: 37, scope: !7454)
!7465 = !DILocation(line: 3078, column: 51, scope: !7454)
!7466 = !DILocation(line: 3078, column: 53, scope: !7454)
!7467 = !DILocation(line: 3078, column: 67, scope: !7454)
!7468 = !DILocation(line: 3079, column: 11, scope: !7454)
!7469 = !DILocation(line: 3078, column: 9, scope: !7454)
!7470 = !DILocation(line: 3078, column: 8, scope: !7454)
!7471 = !DILocation(line: 3080, column: 11, scope: !7472)
!7472 = distinct !DILexicalBlock(scope: !7454, file: !1, line: 3080, column: 11)
!7473 = !DILocation(line: 3080, column: 13, scope: !7472)
!7474 = !DILocation(line: 3080, column: 11, scope: !7454)
!7475 = !DILocation(line: 3082, column: 17, scope: !7476)
!7476 = distinct !DILexicalBlock(scope: !7472, file: !1, line: 3081, column: 9)
!7477 = !DILocation(line: 3083, column: 11, scope: !7476)
!7478 = !DILocation(line: 3085, column: 47, scope: !7454)
!7479 = !DILocation(line: 3085, column: 15, scope: !7454)
!7480 = !DILocation(line: 3085, column: 14, scope: !7454)
!7481 = !DILocation(line: 3086, column: 28, scope: !7454)
!7482 = !DILocation(line: 3086, column: 7, scope: !7454)
!7483 = !DILocation(line: 3087, column: 13, scope: !7484)
!7484 = distinct !DILexicalBlock(scope: !7454, file: !1, line: 3087, column: 7)
!7485 = !DILocation(line: 3087, column: 12, scope: !7484)
!7486 = !DILocation(line: 3087, column: 17, scope: !7487)
!7487 = distinct !DILexicalBlock(scope: !7484, file: !1, line: 3087, column: 7)
!7488 = !DILocation(line: 3087, column: 31, scope: !7487)
!7489 = !DILocation(line: 3087, column: 38, scope: !7487)
!7490 = !DILocation(line: 3087, column: 19, scope: !7487)
!7491 = !DILocation(line: 3087, column: 7, scope: !7484)
!7492 = !DILocation(line: 3089, column: 30, scope: !7493)
!7493 = distinct !DILexicalBlock(scope: !7487, file: !1, line: 3088, column: 7)
!7494 = !DILocation(line: 3089, column: 36, scope: !7493)
!7495 = !DILocation(line: 3089, column: 38, scope: !7493)
!7496 = !DILocation(line: 3089, column: 9, scope: !7493)
!7497 = !DILocation(line: 3090, column: 17, scope: !7493)
!7498 = !DILocation(line: 3090, column: 9, scope: !7493)
!7499 = !DILocalVariable(name: "x", scope: !7500, file: !1, line: 3094, type: !665)
!7500 = distinct !DILexicalBlock(scope: !7501, file: !1, line: 3093, column: 11)
!7501 = distinct !DILexicalBlock(scope: !7493, file: !1, line: 3091, column: 9)
!7502 = !DILocation(line: 3094, column: 30, scope: !7500)
!7503 = !DILocation(line: 3095, column: 18, scope: !7504)
!7504 = distinct !DILexicalBlock(scope: !7500, file: !1, line: 3095, column: 18)
!7505 = !DILocation(line: 3095, column: 26, scope: !7504)
!7506 = !DILocation(line: 3095, column: 18, scope: !7500)
!7507 = !DILocation(line: 3096, column: 31, scope: !7504)
!7508 = !DILocation(line: 3096, column: 37, scope: !7504)
!7509 = !DILocation(line: 3096, column: 40, scope: !7504)
!7510 = !DILocation(line: 3096, column: 39, scope: !7504)
!7511 = !DILocation(line: 3096, column: 43, scope: !7504)
!7512 = !DILocation(line: 3096, column: 49, scope: !7504)
!7513 = !DILocation(line: 3096, column: 50, scope: !7504)
!7514 = !DILocation(line: 3096, column: 54, scope: !7504)
!7515 = !DILocation(line: 3096, column: 53, scope: !7504)
!7516 = !DILocation(line: 3096, column: 42, scope: !7504)
!7517 = !DILocation(line: 3097, column: 32, scope: !7504)
!7518 = !DILocation(line: 3097, column: 38, scope: !7504)
!7519 = !DILocation(line: 3097, column: 39, scope: !7504)
!7520 = !DILocation(line: 3097, column: 31, scope: !7504)
!7521 = !DILocation(line: 3096, column: 21, scope: !7504)
!7522 = !DILocation(line: 3096, column: 29, scope: !7504)
!7523 = !DILocation(line: 3097, column: 45, scope: !7504)
!7524 = !DILocation(line: 3096, column: 15, scope: !7504)
!7525 = !DILocation(line: 3098, column: 18, scope: !7526)
!7526 = distinct !DILexicalBlock(scope: !7500, file: !1, line: 3098, column: 18)
!7527 = !DILocation(line: 3098, column: 26, scope: !7526)
!7528 = !DILocation(line: 3098, column: 18, scope: !7500)
!7529 = !DILocation(line: 3099, column: 31, scope: !7526)
!7530 = !DILocation(line: 3099, column: 37, scope: !7526)
!7531 = !DILocation(line: 3099, column: 40, scope: !7526)
!7532 = !DILocation(line: 3099, column: 39, scope: !7526)
!7533 = !DILocation(line: 3099, column: 43, scope: !7526)
!7534 = !DILocation(line: 3099, column: 49, scope: !7526)
!7535 = !DILocation(line: 3099, column: 50, scope: !7526)
!7536 = !DILocation(line: 3099, column: 54, scope: !7526)
!7537 = !DILocation(line: 3099, column: 53, scope: !7526)
!7538 = !DILocation(line: 3099, column: 42, scope: !7526)
!7539 = !DILocation(line: 3100, column: 32, scope: !7526)
!7540 = !DILocation(line: 3100, column: 38, scope: !7526)
!7541 = !DILocation(line: 3100, column: 39, scope: !7526)
!7542 = !DILocation(line: 3100, column: 31, scope: !7526)
!7543 = !DILocation(line: 3099, column: 21, scope: !7526)
!7544 = !DILocation(line: 3099, column: 29, scope: !7526)
!7545 = !DILocation(line: 3100, column: 45, scope: !7526)
!7546 = !DILocation(line: 3099, column: 15, scope: !7526)
!7547 = !DILocation(line: 3101, column: 18, scope: !7548)
!7548 = distinct !DILexicalBlock(scope: !7500, file: !1, line: 3101, column: 18)
!7549 = !DILocation(line: 3101, column: 26, scope: !7548)
!7550 = !DILocation(line: 3101, column: 18, scope: !7500)
!7551 = !DILocation(line: 3102, column: 31, scope: !7548)
!7552 = !DILocation(line: 3102, column: 37, scope: !7548)
!7553 = !DILocation(line: 3102, column: 40, scope: !7548)
!7554 = !DILocation(line: 3102, column: 39, scope: !7548)
!7555 = !DILocation(line: 3102, column: 43, scope: !7548)
!7556 = !DILocation(line: 3102, column: 49, scope: !7548)
!7557 = !DILocation(line: 3102, column: 50, scope: !7548)
!7558 = !DILocation(line: 3102, column: 54, scope: !7548)
!7559 = !DILocation(line: 3102, column: 53, scope: !7548)
!7560 = !DILocation(line: 3102, column: 42, scope: !7548)
!7561 = !DILocation(line: 3103, column: 32, scope: !7548)
!7562 = !DILocation(line: 3103, column: 38, scope: !7548)
!7563 = !DILocation(line: 3103, column: 39, scope: !7548)
!7564 = !DILocation(line: 3103, column: 31, scope: !7548)
!7565 = !DILocation(line: 3102, column: 21, scope: !7548)
!7566 = !DILocation(line: 3102, column: 29, scope: !7548)
!7567 = !DILocation(line: 3103, column: 45, scope: !7548)
!7568 = !DILocation(line: 3102, column: 15, scope: !7548)
!7569 = !DILocation(line: 3104, column: 18, scope: !7570)
!7570 = distinct !DILexicalBlock(scope: !7500, file: !1, line: 3104, column: 18)
!7571 = !DILocation(line: 3104, column: 26, scope: !7570)
!7572 = !DILocation(line: 3104, column: 18, scope: !7500)
!7573 = !DILocation(line: 3105, column: 31, scope: !7570)
!7574 = !DILocation(line: 3105, column: 37, scope: !7570)
!7575 = !DILocation(line: 3105, column: 40, scope: !7570)
!7576 = !DILocation(line: 3105, column: 39, scope: !7570)
!7577 = !DILocation(line: 3105, column: 43, scope: !7570)
!7578 = !DILocation(line: 3105, column: 49, scope: !7570)
!7579 = !DILocation(line: 3105, column: 50, scope: !7570)
!7580 = !DILocation(line: 3105, column: 54, scope: !7570)
!7581 = !DILocation(line: 3105, column: 53, scope: !7570)
!7582 = !DILocation(line: 3105, column: 42, scope: !7570)
!7583 = !DILocation(line: 3106, column: 32, scope: !7570)
!7584 = !DILocation(line: 3106, column: 38, scope: !7570)
!7585 = !DILocation(line: 3106, column: 39, scope: !7570)
!7586 = !DILocation(line: 3106, column: 31, scope: !7570)
!7587 = !DILocation(line: 3105, column: 21, scope: !7570)
!7588 = !DILocation(line: 3105, column: 29, scope: !7570)
!7589 = !DILocation(line: 3106, column: 45, scope: !7570)
!7590 = !DILocation(line: 3105, column: 15, scope: !7570)
!7591 = !DILocation(line: 3107, column: 18, scope: !7592)
!7592 = distinct !DILexicalBlock(scope: !7500, file: !1, line: 3107, column: 18)
!7593 = !DILocation(line: 3107, column: 26, scope: !7592)
!7594 = !DILocation(line: 3107, column: 18, scope: !7500)
!7595 = !DILocation(line: 3108, column: 31, scope: !7592)
!7596 = !DILocation(line: 3108, column: 37, scope: !7592)
!7597 = !DILocation(line: 3108, column: 40, scope: !7592)
!7598 = !DILocation(line: 3108, column: 39, scope: !7592)
!7599 = !DILocation(line: 3108, column: 43, scope: !7592)
!7600 = !DILocation(line: 3108, column: 49, scope: !7592)
!7601 = !DILocation(line: 3108, column: 50, scope: !7592)
!7602 = !DILocation(line: 3108, column: 54, scope: !7592)
!7603 = !DILocation(line: 3108, column: 53, scope: !7592)
!7604 = !DILocation(line: 3108, column: 42, scope: !7592)
!7605 = !DILocation(line: 3109, column: 32, scope: !7592)
!7606 = !DILocation(line: 3109, column: 38, scope: !7592)
!7607 = !DILocation(line: 3109, column: 39, scope: !7592)
!7608 = !DILocation(line: 3109, column: 31, scope: !7592)
!7609 = !DILocation(line: 3108, column: 21, scope: !7592)
!7610 = !DILocation(line: 3108, column: 29, scope: !7592)
!7611 = !DILocation(line: 3109, column: 45, scope: !7592)
!7612 = !DILocation(line: 3108, column: 15, scope: !7592)
!7613 = !DILocation(line: 3110, column: 13, scope: !7500)
!7614 = !DILocalVariable(name: "x", scope: !7615, file: !1, line: 3114, type: !665)
!7615 = distinct !DILexicalBlock(scope: !7501, file: !1, line: 3113, column: 11)
!7616 = !DILocation(line: 3114, column: 30, scope: !7615)
!7617 = !DILocation(line: 3115, column: 18, scope: !7618)
!7618 = distinct !DILexicalBlock(scope: !7615, file: !1, line: 3115, column: 18)
!7619 = !DILocation(line: 3115, column: 26, scope: !7618)
!7620 = !DILocation(line: 3115, column: 18, scope: !7615)
!7621 = !DILocation(line: 3116, column: 31, scope: !7618)
!7622 = !DILocation(line: 3116, column: 37, scope: !7618)
!7623 = !DILocation(line: 3116, column: 40, scope: !7618)
!7624 = !DILocation(line: 3116, column: 39, scope: !7618)
!7625 = !DILocation(line: 3116, column: 48, scope: !7618)
!7626 = !DILocation(line: 3116, column: 54, scope: !7618)
!7627 = !DILocation(line: 3116, column: 55, scope: !7618)
!7628 = !DILocation(line: 3116, column: 59, scope: !7618)
!7629 = !DILocation(line: 3116, column: 58, scope: !7618)
!7630 = !DILocation(line: 3116, column: 46, scope: !7618)
!7631 = !DILocation(line: 3117, column: 31, scope: !7618)
!7632 = !DILocation(line: 3117, column: 37, scope: !7618)
!7633 = !DILocation(line: 3117, column: 38, scope: !7618)
!7634 = !DILocation(line: 3117, column: 42, scope: !7618)
!7635 = !DILocation(line: 3117, column: 41, scope: !7618)
!7636 = !DILocation(line: 3117, column: 44, scope: !7618)
!7637 = !DILocation(line: 3117, column: 43, scope: !7618)
!7638 = !DILocation(line: 3116, column: 61, scope: !7618)
!7639 = !DILocation(line: 3117, column: 48, scope: !7618)
!7640 = !DILocation(line: 3117, column: 54, scope: !7618)
!7641 = !DILocation(line: 3117, column: 55, scope: !7618)
!7642 = !DILocation(line: 3117, column: 46, scope: !7618)
!7643 = !DILocation(line: 3116, column: 21, scope: !7618)
!7644 = !DILocation(line: 3116, column: 29, scope: !7618)
!7645 = !DILocation(line: 3117, column: 61, scope: !7618)
!7646 = !DILocation(line: 3116, column: 15, scope: !7618)
!7647 = !DILocation(line: 3118, column: 18, scope: !7648)
!7648 = distinct !DILexicalBlock(scope: !7615, file: !1, line: 3118, column: 18)
!7649 = !DILocation(line: 3118, column: 26, scope: !7648)
!7650 = !DILocation(line: 3118, column: 18, scope: !7615)
!7651 = !DILocation(line: 3119, column: 31, scope: !7648)
!7652 = !DILocation(line: 3119, column: 37, scope: !7648)
!7653 = !DILocation(line: 3119, column: 40, scope: !7648)
!7654 = !DILocation(line: 3119, column: 39, scope: !7648)
!7655 = !DILocation(line: 3119, column: 48, scope: !7648)
!7656 = !DILocation(line: 3119, column: 54, scope: !7648)
!7657 = !DILocation(line: 3119, column: 55, scope: !7648)
!7658 = !DILocation(line: 3119, column: 59, scope: !7648)
!7659 = !DILocation(line: 3119, column: 58, scope: !7648)
!7660 = !DILocation(line: 3119, column: 46, scope: !7648)
!7661 = !DILocation(line: 3120, column: 31, scope: !7648)
!7662 = !DILocation(line: 3120, column: 37, scope: !7648)
!7663 = !DILocation(line: 3120, column: 38, scope: !7648)
!7664 = !DILocation(line: 3120, column: 42, scope: !7648)
!7665 = !DILocation(line: 3120, column: 41, scope: !7648)
!7666 = !DILocation(line: 3120, column: 44, scope: !7648)
!7667 = !DILocation(line: 3120, column: 43, scope: !7648)
!7668 = !DILocation(line: 3119, column: 61, scope: !7648)
!7669 = !DILocation(line: 3120, column: 48, scope: !7648)
!7670 = !DILocation(line: 3120, column: 54, scope: !7648)
!7671 = !DILocation(line: 3120, column: 55, scope: !7648)
!7672 = !DILocation(line: 3120, column: 46, scope: !7648)
!7673 = !DILocation(line: 3119, column: 21, scope: !7648)
!7674 = !DILocation(line: 3119, column: 29, scope: !7648)
!7675 = !DILocation(line: 3120, column: 61, scope: !7648)
!7676 = !DILocation(line: 3119, column: 15, scope: !7648)
!7677 = !DILocation(line: 3121, column: 18, scope: !7678)
!7678 = distinct !DILexicalBlock(scope: !7615, file: !1, line: 3121, column: 18)
!7679 = !DILocation(line: 3121, column: 26, scope: !7678)
!7680 = !DILocation(line: 3121, column: 18, scope: !7615)
!7681 = !DILocation(line: 3122, column: 31, scope: !7678)
!7682 = !DILocation(line: 3122, column: 37, scope: !7678)
!7683 = !DILocation(line: 3122, column: 40, scope: !7678)
!7684 = !DILocation(line: 3122, column: 39, scope: !7678)
!7685 = !DILocation(line: 3122, column: 48, scope: !7678)
!7686 = !DILocation(line: 3122, column: 54, scope: !7678)
!7687 = !DILocation(line: 3122, column: 55, scope: !7678)
!7688 = !DILocation(line: 3122, column: 59, scope: !7678)
!7689 = !DILocation(line: 3122, column: 58, scope: !7678)
!7690 = !DILocation(line: 3122, column: 46, scope: !7678)
!7691 = !DILocation(line: 3123, column: 31, scope: !7678)
!7692 = !DILocation(line: 3123, column: 37, scope: !7678)
!7693 = !DILocation(line: 3123, column: 38, scope: !7678)
!7694 = !DILocation(line: 3123, column: 42, scope: !7678)
!7695 = !DILocation(line: 3123, column: 41, scope: !7678)
!7696 = !DILocation(line: 3123, column: 44, scope: !7678)
!7697 = !DILocation(line: 3123, column: 43, scope: !7678)
!7698 = !DILocation(line: 3122, column: 61, scope: !7678)
!7699 = !DILocation(line: 3123, column: 48, scope: !7678)
!7700 = !DILocation(line: 3123, column: 54, scope: !7678)
!7701 = !DILocation(line: 3123, column: 55, scope: !7678)
!7702 = !DILocation(line: 3123, column: 46, scope: !7678)
!7703 = !DILocation(line: 3122, column: 21, scope: !7678)
!7704 = !DILocation(line: 3122, column: 29, scope: !7678)
!7705 = !DILocation(line: 3123, column: 61, scope: !7678)
!7706 = !DILocation(line: 3122, column: 15, scope: !7678)
!7707 = !DILocation(line: 3124, column: 18, scope: !7708)
!7708 = distinct !DILexicalBlock(scope: !7615, file: !1, line: 3124, column: 18)
!7709 = !DILocation(line: 3124, column: 26, scope: !7708)
!7710 = !DILocation(line: 3124, column: 18, scope: !7615)
!7711 = !DILocation(line: 3125, column: 31, scope: !7708)
!7712 = !DILocation(line: 3125, column: 37, scope: !7708)
!7713 = !DILocation(line: 3125, column: 40, scope: !7708)
!7714 = !DILocation(line: 3125, column: 39, scope: !7708)
!7715 = !DILocation(line: 3125, column: 48, scope: !7708)
!7716 = !DILocation(line: 3125, column: 54, scope: !7708)
!7717 = !DILocation(line: 3125, column: 55, scope: !7708)
!7718 = !DILocation(line: 3125, column: 59, scope: !7708)
!7719 = !DILocation(line: 3125, column: 58, scope: !7708)
!7720 = !DILocation(line: 3125, column: 46, scope: !7708)
!7721 = !DILocation(line: 3126, column: 31, scope: !7708)
!7722 = !DILocation(line: 3126, column: 37, scope: !7708)
!7723 = !DILocation(line: 3126, column: 38, scope: !7708)
!7724 = !DILocation(line: 3126, column: 42, scope: !7708)
!7725 = !DILocation(line: 3126, column: 41, scope: !7708)
!7726 = !DILocation(line: 3126, column: 44, scope: !7708)
!7727 = !DILocation(line: 3126, column: 43, scope: !7708)
!7728 = !DILocation(line: 3125, column: 61, scope: !7708)
!7729 = !DILocation(line: 3126, column: 48, scope: !7708)
!7730 = !DILocation(line: 3126, column: 54, scope: !7708)
!7731 = !DILocation(line: 3126, column: 55, scope: !7708)
!7732 = !DILocation(line: 3126, column: 46, scope: !7708)
!7733 = !DILocation(line: 3125, column: 21, scope: !7708)
!7734 = !DILocation(line: 3125, column: 29, scope: !7708)
!7735 = !DILocation(line: 3126, column: 61, scope: !7708)
!7736 = !DILocation(line: 3125, column: 15, scope: !7708)
!7737 = !DILocation(line: 3127, column: 18, scope: !7738)
!7738 = distinct !DILexicalBlock(scope: !7615, file: !1, line: 3127, column: 18)
!7739 = !DILocation(line: 3127, column: 26, scope: !7738)
!7740 = !DILocation(line: 3127, column: 18, scope: !7615)
!7741 = !DILocation(line: 3128, column: 31, scope: !7738)
!7742 = !DILocation(line: 3128, column: 37, scope: !7738)
!7743 = !DILocation(line: 3128, column: 40, scope: !7738)
!7744 = !DILocation(line: 3128, column: 39, scope: !7738)
!7745 = !DILocation(line: 3128, column: 48, scope: !7738)
!7746 = !DILocation(line: 3128, column: 54, scope: !7738)
!7747 = !DILocation(line: 3128, column: 55, scope: !7738)
!7748 = !DILocation(line: 3128, column: 59, scope: !7738)
!7749 = !DILocation(line: 3128, column: 58, scope: !7738)
!7750 = !DILocation(line: 3128, column: 46, scope: !7738)
!7751 = !DILocation(line: 3129, column: 31, scope: !7738)
!7752 = !DILocation(line: 3129, column: 37, scope: !7738)
!7753 = !DILocation(line: 3129, column: 38, scope: !7738)
!7754 = !DILocation(line: 3129, column: 42, scope: !7738)
!7755 = !DILocation(line: 3129, column: 41, scope: !7738)
!7756 = !DILocation(line: 3129, column: 44, scope: !7738)
!7757 = !DILocation(line: 3129, column: 43, scope: !7738)
!7758 = !DILocation(line: 3128, column: 61, scope: !7738)
!7759 = !DILocation(line: 3129, column: 48, scope: !7738)
!7760 = !DILocation(line: 3129, column: 54, scope: !7738)
!7761 = !DILocation(line: 3129, column: 55, scope: !7738)
!7762 = !DILocation(line: 3129, column: 46, scope: !7738)
!7763 = !DILocation(line: 3128, column: 21, scope: !7738)
!7764 = !DILocation(line: 3128, column: 29, scope: !7738)
!7765 = !DILocation(line: 3129, column: 61, scope: !7738)
!7766 = !DILocation(line: 3128, column: 15, scope: !7738)
!7767 = !DILocation(line: 3130, column: 13, scope: !7615)
!7768 = !DILocalVariable(name: "k", scope: !7769, file: !1, line: 3136, type: !612)
!7769 = distinct !DILexicalBlock(scope: !7501, file: !1, line: 3134, column: 11)
!7770 = !DILocation(line: 3136, column: 15, scope: !7769)
!7771 = !DILocalVariable(name: "denominator", scope: !7769, file: !1, line: 3138, type: !638)
!7772 = !DILocation(line: 3138, column: 15, scope: !7769)
!7773 = !DILocation(line: 3140, column: 18, scope: !7774)
!7774 = distinct !DILexicalBlock(scope: !7769, file: !1, line: 3140, column: 18)
!7775 = !DILocation(line: 3140, column: 26, scope: !7774)
!7776 = !DILocation(line: 3140, column: 18, scope: !7769)
!7777 = !DILocation(line: 3140, column: 51, scope: !7774)
!7778 = !DILocation(line: 3140, column: 59, scope: !7774)
!7779 = !DILocation(line: 3140, column: 45, scope: !7774)
!7780 = !DILocation(line: 3141, column: 18, scope: !7781)
!7781 = distinct !DILexicalBlock(scope: !7769, file: !1, line: 3141, column: 18)
!7782 = !DILocation(line: 3141, column: 26, scope: !7781)
!7783 = !DILocation(line: 3141, column: 18, scope: !7769)
!7784 = !DILocation(line: 3141, column: 51, scope: !7781)
!7785 = !DILocation(line: 3141, column: 59, scope: !7781)
!7786 = !DILocation(line: 3141, column: 45, scope: !7781)
!7787 = !DILocation(line: 3142, column: 18, scope: !7788)
!7788 = distinct !DILexicalBlock(scope: !7769, file: !1, line: 3142, column: 18)
!7789 = !DILocation(line: 3142, column: 26, scope: !7788)
!7790 = !DILocation(line: 3142, column: 18, scope: !7769)
!7791 = !DILocation(line: 3142, column: 51, scope: !7788)
!7792 = !DILocation(line: 3142, column: 59, scope: !7788)
!7793 = !DILocation(line: 3142, column: 45, scope: !7788)
!7794 = !DILocation(line: 3143, column: 18, scope: !7795)
!7795 = distinct !DILexicalBlock(scope: !7769, file: !1, line: 3143, column: 18)
!7796 = !DILocation(line: 3143, column: 26, scope: !7795)
!7797 = !DILocation(line: 3143, column: 18, scope: !7769)
!7798 = !DILocation(line: 3143, column: 51, scope: !7795)
!7799 = !DILocation(line: 3143, column: 59, scope: !7795)
!7800 = !DILocation(line: 3143, column: 45, scope: !7795)
!7801 = !DILocation(line: 3144, column: 18, scope: !7802)
!7802 = distinct !DILexicalBlock(scope: !7769, file: !1, line: 3144, column: 18)
!7803 = !DILocation(line: 3144, column: 26, scope: !7802)
!7804 = !DILocation(line: 3144, column: 18, scope: !7769)
!7805 = !DILocation(line: 3144, column: 51, scope: !7802)
!7806 = !DILocation(line: 3144, column: 59, scope: !7802)
!7807 = !DILocation(line: 3144, column: 45, scope: !7802)
!7808 = !DILocation(line: 3145, column: 25, scope: !7769)
!7809 = !DILocation(line: 3146, column: 18, scope: !7810)
!7810 = distinct !DILexicalBlock(scope: !7769, file: !1, line: 3146, column: 13)
!7811 = !DILocation(line: 3146, column: 17, scope: !7810)
!7812 = !DILocation(line: 3146, column: 22, scope: !7813)
!7813 = distinct !DILexicalBlock(scope: !7810, file: !1, line: 3146, column: 13)
!7814 = !DILocation(line: 3146, column: 24, scope: !7813)
!7815 = !DILocation(line: 3146, column: 23, scope: !7813)
!7816 = !DILocation(line: 3146, column: 13, scope: !7810)
!7817 = !DILocalVariable(name: "x", scope: !7818, file: !1, line: 3147, type: !665)
!7818 = distinct !DILexicalBlock(scope: !7813, file: !1, line: 3146, column: 62)
!7819 = !DILocation(line: 3147, column: 32, scope: !7818)
!7820 = !DILocation(line: 3147, column: 44, scope: !7818)
!7821 = !DILocation(line: 3147, column: 45, scope: !7818)
!7822 = !DILocalVariable(name: "weight", scope: !7818, file: !1, line: 3148, type: !638)
!7823 = !DILocation(line: 3148, column: 22, scope: !7818)
!7824 = !DILocation(line: 3149, column: 28, scope: !7818)
!7825 = !DILocation(line: 3149, column: 20, scope: !7818)
!7826 = !DILocation(line: 3149, column: 30, scope: !7818)
!7827 = !DILocation(line: 3149, column: 41, scope: !7818)
!7828 = !DILocation(line: 3149, column: 29, scope: !7818)
!7829 = !DILocation(line: 3149, column: 55, scope: !7818)
!7830 = !DILocation(line: 3149, column: 47, scope: !7818)
!7831 = !DILocation(line: 3149, column: 57, scope: !7818)
!7832 = !DILocation(line: 3149, column: 68, scope: !7818)
!7833 = !DILocation(line: 3149, column: 56, scope: !7818)
!7834 = !DILocation(line: 3149, column: 45, scope: !7818)
!7835 = !DILocation(line: 3150, column: 28, scope: !7818)
!7836 = !DILocation(line: 3150, column: 20, scope: !7818)
!7837 = !DILocation(line: 3150, column: 30, scope: !7818)
!7838 = !DILocation(line: 3150, column: 40, scope: !7818)
!7839 = !DILocation(line: 3150, column: 41, scope: !7818)
!7840 = !DILocation(line: 3150, column: 29, scope: !7818)
!7841 = !DILocation(line: 3150, column: 55, scope: !7818)
!7842 = !DILocation(line: 3150, column: 47, scope: !7818)
!7843 = !DILocation(line: 3150, column: 57, scope: !7818)
!7844 = !DILocation(line: 3150, column: 67, scope: !7818)
!7845 = !DILocation(line: 3150, column: 68, scope: !7818)
!7846 = !DILocation(line: 3150, column: 56, scope: !7818)
!7847 = !DILocation(line: 3150, column: 45, scope: !7818)
!7848 = !DILocation(line: 3150, column: 17, scope: !7818)
!7849 = !DILocation(line: 3151, column: 28, scope: !7818)
!7850 = !DILocation(line: 3151, column: 35, scope: !7818)
!7851 = !DILocation(line: 3151, column: 24, scope: !7818)
!7852 = !DILocation(line: 3151, column: 22, scope: !7818)
!7853 = !DILocation(line: 3152, column: 26, scope: !7818)
!7854 = !DILocation(line: 3152, column: 33, scope: !7818)
!7855 = !DILocation(line: 3152, column: 24, scope: !7818)
!7856 = !DILocation(line: 3152, column: 53, scope: !7818)
!7857 = !DILocation(line: 3152, column: 52, scope: !7818)
!7858 = !DILocation(line: 3152, column: 22, scope: !7818)
!7859 = !DILocation(line: 3153, column: 20, scope: !7860)
!7860 = distinct !DILexicalBlock(scope: !7818, file: !1, line: 3153, column: 20)
!7861 = !DILocation(line: 3153, column: 28, scope: !7860)
!7862 = !DILocation(line: 3153, column: 20, scope: !7818)
!7863 = !DILocation(line: 3154, column: 34, scope: !7860)
!7864 = !DILocation(line: 3154, column: 45, scope: !7860)
!7865 = !DILocation(line: 3154, column: 49, scope: !7860)
!7866 = !DILocation(line: 3154, column: 48, scope: !7860)
!7867 = !DILocation(line: 3154, column: 23, scope: !7860)
!7868 = !DILocation(line: 3154, column: 31, scope: !7860)
!7869 = !DILocation(line: 3154, column: 17, scope: !7860)
!7870 = !DILocation(line: 3155, column: 20, scope: !7871)
!7871 = distinct !DILexicalBlock(scope: !7818, file: !1, line: 3155, column: 20)
!7872 = !DILocation(line: 3155, column: 28, scope: !7871)
!7873 = !DILocation(line: 3155, column: 20, scope: !7818)
!7874 = !DILocation(line: 3156, column: 34, scope: !7871)
!7875 = !DILocation(line: 3156, column: 45, scope: !7871)
!7876 = !DILocation(line: 3156, column: 49, scope: !7871)
!7877 = !DILocation(line: 3156, column: 48, scope: !7871)
!7878 = !DILocation(line: 3156, column: 23, scope: !7871)
!7879 = !DILocation(line: 3156, column: 31, scope: !7871)
!7880 = !DILocation(line: 3156, column: 17, scope: !7871)
!7881 = !DILocation(line: 3157, column: 20, scope: !7882)
!7882 = distinct !DILexicalBlock(scope: !7818, file: !1, line: 3157, column: 20)
!7883 = !DILocation(line: 3157, column: 28, scope: !7882)
!7884 = !DILocation(line: 3157, column: 20, scope: !7818)
!7885 = !DILocation(line: 3158, column: 34, scope: !7882)
!7886 = !DILocation(line: 3158, column: 45, scope: !7882)
!7887 = !DILocation(line: 3158, column: 49, scope: !7882)
!7888 = !DILocation(line: 3158, column: 48, scope: !7882)
!7889 = !DILocation(line: 3158, column: 23, scope: !7882)
!7890 = !DILocation(line: 3158, column: 31, scope: !7882)
!7891 = !DILocation(line: 3158, column: 17, scope: !7882)
!7892 = !DILocation(line: 3159, column: 20, scope: !7893)
!7893 = distinct !DILexicalBlock(scope: !7818, file: !1, line: 3159, column: 20)
!7894 = !DILocation(line: 3159, column: 28, scope: !7893)
!7895 = !DILocation(line: 3159, column: 20, scope: !7818)
!7896 = !DILocation(line: 3160, column: 34, scope: !7893)
!7897 = !DILocation(line: 3160, column: 45, scope: !7893)
!7898 = !DILocation(line: 3160, column: 49, scope: !7893)
!7899 = !DILocation(line: 3160, column: 48, scope: !7893)
!7900 = !DILocation(line: 3160, column: 23, scope: !7893)
!7901 = !DILocation(line: 3160, column: 31, scope: !7893)
!7902 = !DILocation(line: 3160, column: 17, scope: !7893)
!7903 = !DILocation(line: 3161, column: 20, scope: !7904)
!7904 = distinct !DILexicalBlock(scope: !7818, file: !1, line: 3161, column: 20)
!7905 = !DILocation(line: 3161, column: 28, scope: !7904)
!7906 = !DILocation(line: 3161, column: 20, scope: !7818)
!7907 = !DILocation(line: 3162, column: 34, scope: !7904)
!7908 = !DILocation(line: 3162, column: 45, scope: !7904)
!7909 = !DILocation(line: 3162, column: 49, scope: !7904)
!7910 = !DILocation(line: 3162, column: 48, scope: !7904)
!7911 = !DILocation(line: 3162, column: 23, scope: !7904)
!7912 = !DILocation(line: 3162, column: 31, scope: !7904)
!7913 = !DILocation(line: 3162, column: 17, scope: !7904)
!7914 = !DILocation(line: 3163, column: 30, scope: !7818)
!7915 = !DILocation(line: 3163, column: 27, scope: !7818)
!7916 = !DILocation(line: 3164, column: 13, scope: !7818)
!7917 = !DILocation(line: 3146, column: 47, scope: !7813)
!7918 = !DILocation(line: 3146, column: 46, scope: !7813)
!7919 = !DILocation(line: 3146, column: 43, scope: !7813)
!7920 = !DILocation(line: 3146, column: 13, scope: !7813)
!7921 = distinct !{!7921, !7816, !7922}
!7922 = !DILocation(line: 3164, column: 13, scope: !7810)
!7923 = !DILocation(line: 3165, column: 18, scope: !7924)
!7924 = distinct !DILexicalBlock(scope: !7769, file: !1, line: 3165, column: 18)
!7925 = !DILocation(line: 3165, column: 26, scope: !7924)
!7926 = !DILocation(line: 3165, column: 18, scope: !7769)
!7927 = !DILocation(line: 3165, column: 62, scope: !7924)
!7928 = !DILocation(line: 3165, column: 51, scope: !7924)
!7929 = !DILocation(line: 3165, column: 59, scope: !7924)
!7930 = !DILocation(line: 3165, column: 45, scope: !7924)
!7931 = !DILocation(line: 3166, column: 18, scope: !7932)
!7932 = distinct !DILexicalBlock(scope: !7769, file: !1, line: 3166, column: 18)
!7933 = !DILocation(line: 3166, column: 26, scope: !7932)
!7934 = !DILocation(line: 3166, column: 18, scope: !7769)
!7935 = !DILocation(line: 3166, column: 62, scope: !7932)
!7936 = !DILocation(line: 3166, column: 51, scope: !7932)
!7937 = !DILocation(line: 3166, column: 59, scope: !7932)
!7938 = !DILocation(line: 3166, column: 45, scope: !7932)
!7939 = !DILocation(line: 3167, column: 18, scope: !7940)
!7940 = distinct !DILexicalBlock(scope: !7769, file: !1, line: 3167, column: 18)
!7941 = !DILocation(line: 3167, column: 26, scope: !7940)
!7942 = !DILocation(line: 3167, column: 18, scope: !7769)
!7943 = !DILocation(line: 3167, column: 62, scope: !7940)
!7944 = !DILocation(line: 3167, column: 51, scope: !7940)
!7945 = !DILocation(line: 3167, column: 59, scope: !7940)
!7946 = !DILocation(line: 3167, column: 45, scope: !7940)
!7947 = !DILocation(line: 3168, column: 18, scope: !7948)
!7948 = distinct !DILexicalBlock(scope: !7769, file: !1, line: 3168, column: 18)
!7949 = !DILocation(line: 3168, column: 26, scope: !7948)
!7950 = !DILocation(line: 3168, column: 18, scope: !7769)
!7951 = !DILocation(line: 3168, column: 62, scope: !7948)
!7952 = !DILocation(line: 3168, column: 51, scope: !7948)
!7953 = !DILocation(line: 3168, column: 59, scope: !7948)
!7954 = !DILocation(line: 3168, column: 45, scope: !7948)
!7955 = !DILocation(line: 3169, column: 18, scope: !7956)
!7956 = distinct !DILexicalBlock(scope: !7769, file: !1, line: 3169, column: 18)
!7957 = !DILocation(line: 3169, column: 26, scope: !7956)
!7958 = !DILocation(line: 3169, column: 18, scope: !7769)
!7959 = !DILocation(line: 3169, column: 62, scope: !7956)
!7960 = !DILocation(line: 3169, column: 51, scope: !7956)
!7961 = !DILocation(line: 3169, column: 59, scope: !7956)
!7962 = !DILocation(line: 3169, column: 45, scope: !7956)
!7963 = !DILocation(line: 3170, column: 13, scope: !7769)
!7964 = !DILocation(line: 3171, column: 11, scope: !7769)
!7965 = !DILocalVariable(name: "k", scope: !7966, file: !1, line: 3176, type: !612)
!7966 = distinct !DILexicalBlock(scope: !7501, file: !1, line: 3174, column: 11)
!7967 = !DILocation(line: 3176, column: 15, scope: !7966)
!7968 = !DILocalVariable(name: "minimum", scope: !7966, file: !1, line: 3179, type: !638)
!7969 = !DILocation(line: 3179, column: 15, scope: !7966)
!7970 = !DILocation(line: 3184, column: 18, scope: !7971)
!7971 = distinct !DILexicalBlock(scope: !7966, file: !1, line: 3184, column: 13)
!7972 = !DILocation(line: 3184, column: 17, scope: !7971)
!7973 = !DILocation(line: 3184, column: 22, scope: !7974)
!7974 = distinct !DILexicalBlock(scope: !7971, file: !1, line: 3184, column: 13)
!7975 = !DILocation(line: 3184, column: 24, scope: !7974)
!7976 = !DILocation(line: 3184, column: 23, scope: !7974)
!7977 = !DILocation(line: 3184, column: 13, scope: !7971)
!7978 = !DILocalVariable(name: "distance", scope: !7979, file: !1, line: 3185, type: !638)
!7979 = distinct !DILexicalBlock(scope: !7974, file: !1, line: 3184, column: 62)
!7980 = !DILocation(line: 3185, column: 22, scope: !7979)
!7981 = !DILocation(line: 3186, column: 28, scope: !7979)
!7982 = !DILocation(line: 3186, column: 20, scope: !7979)
!7983 = !DILocation(line: 3186, column: 30, scope: !7979)
!7984 = !DILocation(line: 3186, column: 41, scope: !7979)
!7985 = !DILocation(line: 3186, column: 29, scope: !7979)
!7986 = !DILocation(line: 3186, column: 55, scope: !7979)
!7987 = !DILocation(line: 3186, column: 47, scope: !7979)
!7988 = !DILocation(line: 3186, column: 57, scope: !7979)
!7989 = !DILocation(line: 3186, column: 68, scope: !7979)
!7990 = !DILocation(line: 3186, column: 56, scope: !7979)
!7991 = !DILocation(line: 3186, column: 45, scope: !7979)
!7992 = !DILocation(line: 3187, column: 28, scope: !7979)
!7993 = !DILocation(line: 3187, column: 20, scope: !7979)
!7994 = !DILocation(line: 3187, column: 30, scope: !7979)
!7995 = !DILocation(line: 3187, column: 40, scope: !7979)
!7996 = !DILocation(line: 3187, column: 41, scope: !7979)
!7997 = !DILocation(line: 3187, column: 29, scope: !7979)
!7998 = !DILocation(line: 3187, column: 55, scope: !7979)
!7999 = !DILocation(line: 3187, column: 47, scope: !7979)
!8000 = !DILocation(line: 3187, column: 57, scope: !7979)
!8001 = !DILocation(line: 3187, column: 67, scope: !7979)
!8002 = !DILocation(line: 3187, column: 68, scope: !7979)
!8003 = !DILocation(line: 3187, column: 56, scope: !7979)
!8004 = !DILocation(line: 3187, column: 45, scope: !7979)
!8005 = !DILocation(line: 3187, column: 17, scope: !7979)
!8006 = !DILocation(line: 3188, column: 20, scope: !8007)
!8007 = distinct !DILexicalBlock(scope: !7979, file: !1, line: 3188, column: 20)
!8008 = !DILocation(line: 3188, column: 31, scope: !8007)
!8009 = !DILocation(line: 3188, column: 29, scope: !8007)
!8010 = !DILocation(line: 3188, column: 20, scope: !7979)
!8011 = !DILocalVariable(name: "x", scope: !8012, file: !1, line: 3189, type: !665)
!8012 = distinct !DILexicalBlock(scope: !8007, file: !1, line: 3188, column: 41)
!8013 = !DILocation(line: 3189, column: 34, scope: !8012)
!8014 = !DILocation(line: 3189, column: 46, scope: !8012)
!8015 = !DILocation(line: 3189, column: 47, scope: !8012)
!8016 = !DILocation(line: 3190, column: 22, scope: !8017)
!8017 = distinct !DILexicalBlock(scope: !8012, file: !1, line: 3190, column: 22)
!8018 = !DILocation(line: 3190, column: 30, scope: !8017)
!8019 = !DILocation(line: 3190, column: 22, scope: !8012)
!8020 = !DILocation(line: 3190, column: 65, scope: !8017)
!8021 = !DILocation(line: 3190, column: 76, scope: !8017)
!8022 = !DILocation(line: 3190, column: 55, scope: !8017)
!8023 = !DILocation(line: 3190, column: 63, scope: !8017)
!8024 = !DILocation(line: 3190, column: 49, scope: !8017)
!8025 = !DILocation(line: 3191, column: 22, scope: !8026)
!8026 = distinct !DILexicalBlock(scope: !8012, file: !1, line: 3191, column: 22)
!8027 = !DILocation(line: 3191, column: 30, scope: !8026)
!8028 = !DILocation(line: 3191, column: 22, scope: !8012)
!8029 = !DILocation(line: 3191, column: 65, scope: !8026)
!8030 = !DILocation(line: 3191, column: 76, scope: !8026)
!8031 = !DILocation(line: 3191, column: 55, scope: !8026)
!8032 = !DILocation(line: 3191, column: 63, scope: !8026)
!8033 = !DILocation(line: 3191, column: 49, scope: !8026)
!8034 = !DILocation(line: 3192, column: 22, scope: !8035)
!8035 = distinct !DILexicalBlock(scope: !8012, file: !1, line: 3192, column: 22)
!8036 = !DILocation(line: 3192, column: 30, scope: !8035)
!8037 = !DILocation(line: 3192, column: 22, scope: !8012)
!8038 = !DILocation(line: 3192, column: 65, scope: !8035)
!8039 = !DILocation(line: 3192, column: 76, scope: !8035)
!8040 = !DILocation(line: 3192, column: 55, scope: !8035)
!8041 = !DILocation(line: 3192, column: 63, scope: !8035)
!8042 = !DILocation(line: 3192, column: 49, scope: !8035)
!8043 = !DILocation(line: 3193, column: 22, scope: !8044)
!8044 = distinct !DILexicalBlock(scope: !8012, file: !1, line: 3193, column: 22)
!8045 = !DILocation(line: 3193, column: 30, scope: !8044)
!8046 = !DILocation(line: 3193, column: 22, scope: !8012)
!8047 = !DILocation(line: 3193, column: 65, scope: !8044)
!8048 = !DILocation(line: 3193, column: 76, scope: !8044)
!8049 = !DILocation(line: 3193, column: 55, scope: !8044)
!8050 = !DILocation(line: 3193, column: 63, scope: !8044)
!8051 = !DILocation(line: 3193, column: 49, scope: !8044)
!8052 = !DILocation(line: 3194, column: 22, scope: !8053)
!8053 = distinct !DILexicalBlock(scope: !8012, file: !1, line: 3194, column: 22)
!8054 = !DILocation(line: 3194, column: 30, scope: !8053)
!8055 = !DILocation(line: 3194, column: 22, scope: !8012)
!8056 = !DILocation(line: 3194, column: 65, scope: !8053)
!8057 = !DILocation(line: 3194, column: 76, scope: !8053)
!8058 = !DILocation(line: 3194, column: 55, scope: !8053)
!8059 = !DILocation(line: 3194, column: 63, scope: !8053)
!8060 = !DILocation(line: 3194, column: 49, scope: !8053)
!8061 = !DILocation(line: 3195, column: 27, scope: !8012)
!8062 = !DILocation(line: 3195, column: 25, scope: !8012)
!8063 = !DILocation(line: 3196, column: 15, scope: !8012)
!8064 = !DILocation(line: 3197, column: 13, scope: !7979)
!8065 = !DILocation(line: 3184, column: 47, scope: !7974)
!8066 = !DILocation(line: 3184, column: 46, scope: !7974)
!8067 = !DILocation(line: 3184, column: 43, scope: !7974)
!8068 = !DILocation(line: 3184, column: 13, scope: !7974)
!8069 = distinct !{!8069, !7977, !8070}
!8070 = !DILocation(line: 3197, column: 13, scope: !7971)
!8071 = !DILocation(line: 3198, column: 13, scope: !7966)
!8072 = !DILocation(line: 3202, column: 14, scope: !8073)
!8073 = distinct !DILexicalBlock(scope: !7493, file: !1, line: 3202, column: 14)
!8074 = !DILocation(line: 3202, column: 22, scope: !8073)
!8075 = !DILocation(line: 3202, column: 14, scope: !7493)
!8076 = !DILocation(line: 3202, column: 47, scope: !8073)
!8077 = !DILocation(line: 3202, column: 55, scope: !8073)
!8078 = !DILocation(line: 3202, column: 41, scope: !8073)
!8079 = !DILocation(line: 3203, column: 14, scope: !8080)
!8080 = distinct !DILexicalBlock(scope: !7493, file: !1, line: 3203, column: 14)
!8081 = !DILocation(line: 3203, column: 22, scope: !8080)
!8082 = !DILocation(line: 3203, column: 14, scope: !7493)
!8083 = !DILocation(line: 3203, column: 47, scope: !8080)
!8084 = !DILocation(line: 3203, column: 55, scope: !8080)
!8085 = !DILocation(line: 3203, column: 41, scope: !8080)
!8086 = !DILocation(line: 3204, column: 14, scope: !8087)
!8087 = distinct !DILexicalBlock(scope: !7493, file: !1, line: 3204, column: 14)
!8088 = !DILocation(line: 3204, column: 22, scope: !8087)
!8089 = !DILocation(line: 3204, column: 14, scope: !7493)
!8090 = !DILocation(line: 3204, column: 47, scope: !8087)
!8091 = !DILocation(line: 3204, column: 55, scope: !8087)
!8092 = !DILocation(line: 3204, column: 41, scope: !8087)
!8093 = !DILocation(line: 3205, column: 14, scope: !8094)
!8094 = distinct !DILexicalBlock(scope: !7493, file: !1, line: 3205, column: 14)
!8095 = !DILocation(line: 3205, column: 22, scope: !8094)
!8096 = !DILocation(line: 3205, column: 14, scope: !7493)
!8097 = !DILocation(line: 3205, column: 47, scope: !8094)
!8098 = !DILocation(line: 3205, column: 55, scope: !8094)
!8099 = !DILocation(line: 3205, column: 41, scope: !8094)
!8100 = !DILocation(line: 3206, column: 14, scope: !8101)
!8101 = distinct !DILexicalBlock(scope: !7493, file: !1, line: 3206, column: 14)
!8102 = !DILocation(line: 3206, column: 22, scope: !8101)
!8103 = !DILocation(line: 3206, column: 14, scope: !7493)
!8104 = !DILocation(line: 3206, column: 47, scope: !8101)
!8105 = !DILocation(line: 3206, column: 55, scope: !8101)
!8106 = !DILocation(line: 3206, column: 41, scope: !8101)
!8107 = !DILocation(line: 3207, column: 24, scope: !7493)
!8108 = !DILocation(line: 3207, column: 44, scope: !7493)
!8109 = !DILocation(line: 3207, column: 46, scope: !7493)
!8110 = !DILocation(line: 3207, column: 9, scope: !7493)
!8111 = !DILocation(line: 3208, column: 10, scope: !7493)
!8112 = !DILocation(line: 3209, column: 16, scope: !7493)
!8113 = !DILocation(line: 3210, column: 7, scope: !7493)
!8114 = !DILocation(line: 3087, column: 48, scope: !7487)
!8115 = !DILocation(line: 3087, column: 7, scope: !7487)
!8116 = distinct !{!8116, !7491, !8117}
!8117 = !DILocation(line: 3210, column: 7, scope: !7484)
!8118 = !DILocation(line: 3211, column: 41, scope: !7454)
!8119 = !DILocation(line: 3211, column: 53, scope: !7454)
!8120 = !DILocation(line: 3211, column: 12, scope: !7454)
!8121 = !DILocation(line: 3211, column: 11, scope: !7454)
!8122 = !DILocation(line: 3212, column: 11, scope: !8123)
!8123 = distinct !DILexicalBlock(scope: !7454, file: !1, line: 3212, column: 11)
!8124 = !DILocation(line: 3212, column: 16, scope: !8123)
!8125 = !DILocation(line: 3212, column: 11, scope: !7454)
!8126 = !DILocation(line: 3213, column: 15, scope: !8123)
!8127 = !DILocation(line: 3213, column: 9, scope: !8123)
!8128 = !DILocation(line: 3214, column: 11, scope: !8129)
!8129 = distinct !DILexicalBlock(scope: !7454, file: !1, line: 3214, column: 11)
!8130 = !DILocation(line: 3214, column: 18, scope: !8129)
!8131 = !DILocation(line: 3214, column: 35, scope: !8129)
!8132 = !DILocation(line: 3214, column: 11, scope: !7454)
!8133 = !DILocalVariable(name: "proceed", scope: !8134, file: !1, line: 3217, type: !617)
!8134 = distinct !DILexicalBlock(scope: !8129, file: !1, line: 3215, column: 9)
!8135 = !DILocation(line: 3217, column: 13, scope: !8134)
!8136 = !DILocation(line: 3222, column: 36, scope: !8134)
!8137 = !DILocation(line: 3222, column: 65, scope: !8134)
!8138 = !DILocation(line: 3222, column: 68, scope: !8134)
!8139 = !DILocation(line: 3222, column: 75, scope: !8134)
!8140 = !DILocation(line: 3222, column: 19, scope: !8134)
!8141 = !DILocation(line: 3222, column: 18, scope: !8134)
!8142 = !DILocation(line: 3223, column: 15, scope: !8143)
!8143 = distinct !DILexicalBlock(scope: !8134, file: !1, line: 3223, column: 15)
!8144 = !DILocation(line: 3223, column: 23, scope: !8143)
!8145 = !DILocation(line: 3223, column: 15, scope: !8134)
!8146 = !DILocation(line: 3224, column: 19, scope: !8143)
!8147 = !DILocation(line: 3224, column: 13, scope: !8143)
!8148 = !DILocation(line: 3225, column: 9, scope: !8134)
!8149 = !DILocation(line: 3226, column: 5, scope: !7454)
!8150 = !DILocation(line: 3061, column: 50, scope: !7448)
!8151 = !DILocation(line: 3061, column: 5, scope: !7448)
!8152 = distinct !{!8152, !7452, !8153}
!8153 = !DILocation(line: 3226, column: 5, scope: !7445)
!8154 = !DILocation(line: 3227, column: 34, scope: !7430)
!8155 = !DILocation(line: 3227, column: 17, scope: !7430)
!8156 = !DILocation(line: 3227, column: 16, scope: !7430)
!8157 = !DILocation(line: 3228, column: 9, scope: !8158)
!8158 = distinct !DILexicalBlock(scope: !7430, file: !1, line: 3228, column: 9)
!8159 = !DILocation(line: 3228, column: 16, scope: !8158)
!8160 = !DILocation(line: 3228, column: 9, scope: !7430)
!8161 = !DILocation(line: 3229, column: 33, scope: !8158)
!8162 = !DILocation(line: 3229, column: 20, scope: !8158)
!8163 = !DILocation(line: 3229, column: 19, scope: !8158)
!8164 = !DILocation(line: 3229, column: 7, scope: !8158)
!8165 = !DILocation(line: 3231, column: 45, scope: !7104)
!8166 = !DILocation(line: 3231, column: 22, scope: !7104)
!8167 = !DILocation(line: 3231, column: 11, scope: !7104)
!8168 = !DILocation(line: 3231, column: 9, scope: !7104)
!8169 = !DILocation(line: 3232, column: 10, scope: !7104)
!8170 = !DILocation(line: 3232, column: 3, scope: !7104)
!8171 = !DILocation(line: 3233, column: 1, scope: !7104)
!8172 = distinct !DISubprogram(name: "poly_number_terms", scope: !1, file: !1, line: 155, type: !8173, scopeLine: 156, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !857)
!8173 = !DISubroutineType(types: !8174)
!8174 = !{!612, !638}
!8175 = !DILocalVariable(name: "order", arg: 1, scope: !8172, file: !1, line: 155, type: !638)
!8176 = !DILocation(line: 155, column: 40, scope: !8172)
!8177 = !DILocation(line: 158, column: 8, scope: !8178)
!8178 = distinct !DILexicalBlock(scope: !8172, file: !1, line: 158, column: 8)
!8179 = !DILocation(line: 158, column: 14, scope: !8178)
!8180 = !DILocation(line: 158, column: 18, scope: !8178)
!8181 = !DILocation(line: 158, column: 21, scope: !8178)
!8182 = !DILocation(line: 158, column: 27, scope: !8178)
!8183 = !DILocation(line: 158, column: 31, scope: !8178)
!8184 = !DILocation(line: 159, column: 10, scope: !8178)
!8185 = !DILocation(line: 159, column: 25, scope: !8178)
!8186 = !DILocation(line: 159, column: 19, scope: !8178)
!8187 = !DILocation(line: 159, column: 16, scope: !8178)
!8188 = !DILocation(line: 159, column: 32, scope: !8178)
!8189 = !DILocation(line: 159, column: 36, scope: !8178)
!8190 = !DILocation(line: 159, column: 41, scope: !8178)
!8191 = !DILocation(line: 159, column: 47, scope: !8178)
!8192 = !DILocation(line: 158, column: 8, scope: !8172)
!8193 = !DILocation(line: 160, column: 5, scope: !8178)
!8194 = !DILocation(line: 161, column: 26, scope: !8172)
!8195 = !DILocation(line: 161, column: 31, scope: !8172)
!8196 = !DILocation(line: 161, column: 36, scope: !8172)
!8197 = !DILocation(line: 161, column: 41, scope: !8172)
!8198 = !DILocation(line: 161, column: 34, scope: !8172)
!8199 = !DILocation(line: 161, column: 44, scope: !8172)
!8200 = !DILocation(line: 161, column: 19, scope: !8172)
!8201 = !DILocation(line: 161, column: 10, scope: !8172)
!8202 = !DILocation(line: 161, column: 3, scope: !8172)
!8203 = !DILocation(line: 162, column: 1, scope: !8172)
!8204 = distinct !DISubprogram(name: "AffineArgsToCoefficients", scope: !1, file: !1, line: 90, type: !6139, scopeLine: 91, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !857)
!8205 = !DILocalVariable(name: "affine", arg: 1, scope: !8204, file: !1, line: 90, type: !821)
!8206 = !DILocation(line: 90, column: 53, scope: !8204)
!8207 = !DILocalVariable(name: "tmp", scope: !8204, file: !1, line: 93, type: !4852)
!8208 = !DILocation(line: 93, column: 10, scope: !8204)
!8209 = !DILocation(line: 94, column: 10, scope: !8204)
!8210 = !DILocation(line: 94, column: 3, scope: !8204)
!8211 = !DILocation(line: 94, column: 9, scope: !8204)
!8212 = !DILocation(line: 94, column: 28, scope: !8204)
!8213 = !DILocation(line: 94, column: 21, scope: !8204)
!8214 = !DILocation(line: 94, column: 27, scope: !8204)
!8215 = !DILocation(line: 94, column: 46, scope: !8204)
!8216 = !DILocation(line: 94, column: 39, scope: !8204)
!8217 = !DILocation(line: 94, column: 45, scope: !8204)
!8218 = !DILocation(line: 94, column: 64, scope: !8204)
!8219 = !DILocation(line: 94, column: 57, scope: !8204)
!8220 = !DILocation(line: 94, column: 63, scope: !8204)
!8221 = !DILocation(line: 95, column: 13, scope: !8204)
!8222 = !DILocation(line: 95, column: 3, scope: !8204)
!8223 = !DILocation(line: 95, column: 12, scope: !8204)
!8224 = !DILocation(line: 95, column: 31, scope: !8204)
!8225 = !DILocation(line: 95, column: 21, scope: !8204)
!8226 = !DILocation(line: 95, column: 30, scope: !8204)
!8227 = !DILocation(line: 95, column: 49, scope: !8204)
!8228 = !DILocation(line: 95, column: 39, scope: !8204)
!8229 = !DILocation(line: 95, column: 48, scope: !8204)
!8230 = !DILocation(line: 95, column: 67, scope: !8204)
!8231 = !DILocation(line: 95, column: 57, scope: !8204)
!8232 = !DILocation(line: 95, column: 66, scope: !8204)
!8233 = !DILocation(line: 96, column: 1, scope: !8204)
!8234 = distinct !DISubprogram(name: "AbsolutePixelValue", scope: !6216, file: !6216, line: 111, type: !8235, scopeLine: 112, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !857)
!8235 = !DISubroutineType(types: !8236)
!8236 = !{!828, !6900}
!8237 = !DILocalVariable(name: "x", arg: 1, scope: !8234, file: !6216, line: 111, type: !6900)
!8238 = !DILocation(line: 111, column: 70, scope: !8234)
!8239 = !DILocation(line: 113, column: 10, scope: !8234)
!8240 = !DILocation(line: 113, column: 12, scope: !8234)
!8241 = !DILocation(line: 113, column: 22, scope: !8234)
!8242 = !DILocation(line: 113, column: 21, scope: !8234)
!8243 = !DILocation(line: 113, column: 26, scope: !8234)
!8244 = !DILocation(line: 113, column: 3, scope: !8234)
!8245 = distinct !DISubprogram(name: "ClampToQuantum", scope: !147, file: !147, line: 87, type: !8246, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !857)
!8246 = !DISubroutineType(types: !8247)
!8247 = !{!629, !6900}
!8248 = !DILocalVariable(name: "value", arg: 1, scope: !8245, file: !147, line: 87, type: !6900)
!8249 = !DILocation(line: 87, column: 59, scope: !8245)
!8250 = !DILocation(line: 92, column: 7, scope: !8251)
!8251 = distinct !DILexicalBlock(scope: !8245, file: !147, line: 92, column: 7)
!8252 = !DILocation(line: 92, column: 13, scope: !8251)
!8253 = !DILocation(line: 92, column: 7, scope: !8245)
!8254 = !DILocation(line: 93, column: 5, scope: !8251)
!8255 = !DILocation(line: 94, column: 7, scope: !8256)
!8256 = distinct !DILexicalBlock(scope: !8245, file: !147, line: 94, column: 7)
!8257 = !DILocation(line: 94, column: 13, scope: !8256)
!8258 = !DILocation(line: 94, column: 7, scope: !8245)
!8259 = !DILocation(line: 95, column: 5, scope: !8256)
!8260 = !DILocation(line: 96, column: 21, scope: !8245)
!8261 = !DILocation(line: 96, column: 26, scope: !8245)
!8262 = !DILocation(line: 96, column: 10, scope: !8245)
!8263 = !DILocation(line: 96, column: 3, scope: !8245)
!8264 = !DILocation(line: 98, column: 1, scope: !8245)
!8265 = distinct !DISubprogram(name: "MagickPixelCompositePlus", scope: !6897, file: !6897, line: 114, type: !6898, scopeLine: 117, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !857)
!8266 = !DILocalVariable(name: "p", arg: 1, scope: !8265, file: !6897, line: 114, type: !6868)
!8267 = !DILocation(line: 114, column: 70, scope: !8265)
!8268 = !DILocalVariable(name: "alpha", arg: 2, scope: !8265, file: !6897, line: 115, type: !6900)
!8269 = !DILocation(line: 115, column: 24, scope: !8265)
!8270 = !DILocalVariable(name: "q", arg: 3, scope: !8265, file: !6897, line: 115, type: !6868)
!8271 = !DILocation(line: 115, column: 55, scope: !8265)
!8272 = !DILocalVariable(name: "beta", arg: 4, scope: !8265, file: !6897, line: 116, type: !6900)
!8273 = !DILocation(line: 116, column: 24, scope: !8265)
!8274 = !DILocalVariable(name: "composite", arg: 5, scope: !8265, file: !6897, line: 116, type: !6367)
!8275 = !DILocation(line: 116, column: 48, scope: !8265)
!8276 = !DILocalVariable(name: "gamma", scope: !8265, file: !6897, line: 119, type: !638)
!8277 = !DILocation(line: 119, column: 5, scope: !8265)
!8278 = !DILocalVariable(name: "Da", scope: !8265, file: !6897, line: 122, type: !828)
!8279 = !DILocation(line: 122, column: 5, scope: !8265)
!8280 = !DILocalVariable(name: "Sa", scope: !8265, file: !6897, line: 123, type: !828)
!8281 = !DILocation(line: 123, column: 5, scope: !8265)
!8282 = !DILocation(line: 128, column: 23, scope: !8265)
!8283 = !DILocation(line: 128, column: 22, scope: !8265)
!8284 = !DILocation(line: 128, column: 9, scope: !8265)
!8285 = !DILocation(line: 128, column: 6, scope: !8265)
!8286 = !DILocation(line: 128, column: 5, scope: !8265)
!8287 = !DILocation(line: 129, column: 23, scope: !8265)
!8288 = !DILocation(line: 129, column: 22, scope: !8265)
!8289 = !DILocation(line: 129, column: 9, scope: !8265)
!8290 = !DILocation(line: 129, column: 6, scope: !8265)
!8291 = !DILocation(line: 129, column: 5, scope: !8265)
!8292 = !DILocation(line: 130, column: 22, scope: !8265)
!8293 = !DILocation(line: 130, column: 25, scope: !8265)
!8294 = !DILocation(line: 130, column: 24, scope: !8265)
!8295 = !DILocation(line: 130, column: 9, scope: !8265)
!8296 = !DILocation(line: 130, column: 8, scope: !8265)
!8297 = !DILocation(line: 131, column: 57, scope: !8265)
!8298 = !DILocation(line: 131, column: 56, scope: !8265)
!8299 = !DILocation(line: 131, column: 51, scope: !8265)
!8300 = !DILocation(line: 131, column: 22, scope: !8265)
!8301 = !DILocation(line: 131, column: 3, scope: !8265)
!8302 = !DILocation(line: 131, column: 14, scope: !8265)
!8303 = !DILocation(line: 131, column: 21, scope: !8265)
!8304 = !DILocation(line: 132, column: 31, scope: !8265)
!8305 = !DILocation(line: 132, column: 9, scope: !8265)
!8306 = !DILocation(line: 132, column: 8, scope: !8265)
!8307 = !DILocation(line: 133, column: 18, scope: !8265)
!8308 = !DILocation(line: 133, column: 25, scope: !8265)
!8309 = !DILocation(line: 133, column: 28, scope: !8265)
!8310 = !DILocation(line: 133, column: 31, scope: !8265)
!8311 = !DILocation(line: 133, column: 27, scope: !8265)
!8312 = !DILocation(line: 133, column: 35, scope: !8265)
!8313 = !DILocation(line: 133, column: 38, scope: !8265)
!8314 = !DILocation(line: 133, column: 41, scope: !8265)
!8315 = !DILocation(line: 133, column: 37, scope: !8265)
!8316 = !DILocation(line: 133, column: 34, scope: !8265)
!8317 = !DILocation(line: 133, column: 24, scope: !8265)
!8318 = !DILocation(line: 133, column: 23, scope: !8265)
!8319 = !DILocation(line: 133, column: 3, scope: !8265)
!8320 = !DILocation(line: 133, column: 14, scope: !8265)
!8321 = !DILocation(line: 133, column: 17, scope: !8265)
!8322 = !DILocation(line: 134, column: 20, scope: !8265)
!8323 = !DILocation(line: 134, column: 27, scope: !8265)
!8324 = !DILocation(line: 134, column: 30, scope: !8265)
!8325 = !DILocation(line: 134, column: 33, scope: !8265)
!8326 = !DILocation(line: 134, column: 29, scope: !8265)
!8327 = !DILocation(line: 134, column: 39, scope: !8265)
!8328 = !DILocation(line: 134, column: 42, scope: !8265)
!8329 = !DILocation(line: 134, column: 45, scope: !8265)
!8330 = !DILocation(line: 134, column: 41, scope: !8265)
!8331 = !DILocation(line: 134, column: 38, scope: !8265)
!8332 = !DILocation(line: 134, column: 26, scope: !8265)
!8333 = !DILocation(line: 134, column: 25, scope: !8265)
!8334 = !DILocation(line: 134, column: 3, scope: !8265)
!8335 = !DILocation(line: 134, column: 14, scope: !8265)
!8336 = !DILocation(line: 134, column: 19, scope: !8265)
!8337 = !DILocation(line: 135, column: 19, scope: !8265)
!8338 = !DILocation(line: 135, column: 26, scope: !8265)
!8339 = !DILocation(line: 135, column: 29, scope: !8265)
!8340 = !DILocation(line: 135, column: 32, scope: !8265)
!8341 = !DILocation(line: 135, column: 28, scope: !8265)
!8342 = !DILocation(line: 135, column: 37, scope: !8265)
!8343 = !DILocation(line: 135, column: 40, scope: !8265)
!8344 = !DILocation(line: 135, column: 43, scope: !8265)
!8345 = !DILocation(line: 135, column: 39, scope: !8265)
!8346 = !DILocation(line: 135, column: 36, scope: !8265)
!8347 = !DILocation(line: 135, column: 25, scope: !8265)
!8348 = !DILocation(line: 135, column: 24, scope: !8265)
!8349 = !DILocation(line: 135, column: 3, scope: !8265)
!8350 = !DILocation(line: 135, column: 14, scope: !8265)
!8351 = !DILocation(line: 135, column: 18, scope: !8265)
!8352 = !DILocation(line: 136, column: 7, scope: !8353)
!8353 = distinct !DILexicalBlock(scope: !8265, file: !6897, line: 136, column: 7)
!8354 = !DILocation(line: 136, column: 10, scope: !8353)
!8355 = !DILocation(line: 136, column: 21, scope: !8353)
!8356 = !DILocation(line: 136, column: 7, scope: !8265)
!8357 = !DILocation(line: 137, column: 22, scope: !8353)
!8358 = !DILocation(line: 137, column: 29, scope: !8353)
!8359 = !DILocation(line: 137, column: 32, scope: !8353)
!8360 = !DILocation(line: 137, column: 35, scope: !8353)
!8361 = !DILocation(line: 137, column: 31, scope: !8353)
!8362 = !DILocation(line: 137, column: 41, scope: !8353)
!8363 = !DILocation(line: 137, column: 44, scope: !8353)
!8364 = !DILocation(line: 137, column: 47, scope: !8353)
!8365 = !DILocation(line: 137, column: 43, scope: !8353)
!8366 = !DILocation(line: 137, column: 40, scope: !8353)
!8367 = !DILocation(line: 137, column: 28, scope: !8353)
!8368 = !DILocation(line: 137, column: 27, scope: !8353)
!8369 = !DILocation(line: 137, column: 5, scope: !8353)
!8370 = !DILocation(line: 137, column: 16, scope: !8353)
!8371 = !DILocation(line: 137, column: 21, scope: !8353)
!8372 = !DILocation(line: 138, column: 1, scope: !8265)
!8373 = distinct !DISubprogram(name: "RoundToUnity", scope: !6897, file: !6897, line: 33, type: !8235, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !857)
!8374 = !DILocalVariable(name: "value", arg: 1, scope: !8373, file: !6897, line: 33, type: !6900)
!8375 = !DILocation(line: 33, column: 64, scope: !8373)
!8376 = !DILocation(line: 35, column: 10, scope: !8373)
!8377 = !DILocation(line: 35, column: 16, scope: !8373)
!8378 = !DILocation(line: 35, column: 31, scope: !8373)
!8379 = !DILocation(line: 35, column: 37, scope: !8373)
!8380 = !DILocation(line: 35, column: 30, scope: !8373)
!8381 = !DILocation(line: 35, column: 52, scope: !8373)
!8382 = !DILocation(line: 35, column: 9, scope: !8373)
!8383 = !DILocation(line: 35, column: 3, scope: !8373)
